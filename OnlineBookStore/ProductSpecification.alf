private import DomainDataTypes::*;

/**
The ProductSpecification subsystem contains those classes that describe the
organization of products offered by the bookstore.
*/
package ProductSpecification {

  /**
  The bookstore offers three basic types of publication for sale: books,
  recordings, and computer software. Products are divided into these three
  different subclasses because each subclass has distinct attributes and
  associations that are not meaningful for all products. For example, Books have
  Authors, but computer software is generally not credited to an Author.
  However, software is offered to run on a particular Platform
  (e.g., Macintosh), but books do not require a particular configuration of
  hardware and software.
  
  (Note: eBooks are somewhere in between -- they run on computers like software
  but have Authors like Books. At present, the bookstore is classifying all
  eBooks as Books. This is made reasonable by the fact that all eBooks that we
  offer follow a single standard format that is platform-independent.)
  
  To provide a broad appeal, the bookstore often offers products for sale that
  are not actually kept in stock. Generally, rare, expensive or low-volume items
  are listed as special order items.
  
  A stocked product may become a special order product if it is discontinued by
  the publisher. Discontinued products are generally not widely available.
  Likewise, a popular special order product may be converted into a stocked
  product. The decision to migrate a product between stoked and special order is
  made by the marketing department.
  */
  public abstract class Product;
  
  // Generalization set R12 {disjoint, complete}
  public abstract class SpecialOrderProduct specializes Product;
  public abstract class StockedProduct specializes Product;
  
  // Generalization set R11 {disjoint, complete}
  public class BookProduct specializes Product;
  public class RecordingProduct specializes Product;
  public class SoftwareProduct specializes Product;
  
  public class Publisher;
  public class ProductCategory;
  
  public class Author;
  public class Authorship;
  
  public class Recording;
  public class RecordingFormat;
  public class Artist;
  public class PerformanceCredit;
  
  public class ComputerSoftware;
  public class Platform;
  
  /**
  A publisher is responsible for contracting with an author to produce a book
  and then handles the work of marketing the bookd to customers and retailers.
  
  Every book we sell is produced by some publisher. We do not sell books
  directly produced by authors. In a few cases an author will sell books
  directly; in those cases we use the author or the author's company as the
  publisher and must obtain an ISBN publisher's code.
  */
  public assoc R1 {
    public 'is produced and marketed by': Publisher[1];
    public 'produces and markets': Product[0..*];
  }
  
  /**
  Books are generally written by Authors. Some books, however, do not have any
  authorship credits. For that reason, this association is conditional.  
  */
  public assoc R2a {
    public writes: BookProduct[1];
    public 'is written by': Authorship[0..*];
  }
  
  /**
  Every Author has written at least one book.
  */
  public assoc R2b {
    public 'with author': Author[1];
    public authors: Authorship[1..*];
  }
  
  /**
  Authors and other contributors are credited on abook in a specific order. This
  order is generally preserved in all promotional material, including the
  bookstore's website.
  */
  public assoc R3 {
    public precedes: Authorship[0..1];
    public follows: Authorship[0..1];
  }
  
  /**
  Product categories are organized into a hierarchy starting with very general
  categories (e.g., movies, computer books) and working down to very detailed
  subcategories. This association captures category hierarchies. The topmost
  categories are not "part of" any other category. Categories at the bottom of
  the hierarchy are not "divided into" any other categories.
  */
  public assoc R14 {
    public 'is part of': ProductCategory[0..1];
    public 'is divided into': ProductCategory[0..*];
  }
  
  /**
  Each product offered for sale is assigned to a particular category that most
  reasonably characterizes the cotent or subject matter of the product.
  Categories provide a way to find similar products or to find products more
  specialized or more general in nature.
  
  Product categorizations are sometimes provided by the product's publisher,
  but the final decision as to a product's category rests with the bookstore's
  marketing department.
  */
  public assoc R15 {
    public 'is classified according to': ProductCategory[1];
    public classifies: Product[0..*];
  }
  
  /**
  Each recording is available as one or more products in different formats.
  */
  public assoc R16a {
    public 'is a product for': Recording[1];
    public 'is available as': RecordingProduct[1..*];
  }
  
  /**
  Each combination of title and format is a separate recording product.
  */
  public assoc R16b {
    public 'is available in': RecordingFormat[1];
    public 'is an available format for': RecordingProduct[1..*];
  }
  
  /**
  A Performance Credit is a particular mention ("credit") of a performer or
  contributor to a recording. 
  */
  public assoc R17a {
    public 'is credited on': Recording[1];
    public 'has credits': PerformanceCredit[1..*];
  }
  
  /**
  Generally, several different people are listed on each recording, not just the 
  principal performer(s), but also the director, performer, etc. The 
  Performance Credit is not intended to be a complete listing of all of the 
  credits on a Recording, just enough to provide a way to look up the most 
  popular performers on a recording.
  */
  public assoc R17b {
    public credits: Artist[1];
    public 'is credited by': PerformanceCredit[1..*];
  } 
  
  /**
  Performance credits are typically specified in a particular oder on a
  recording. This association captures that ordering.
  */
  public assoc R18 {
    public 'is credited before': PerformanceCredit[0..1];
    public 'is credited after': PerformanceCredit[0..1];
  }
  
  /**
  Each software product is capable of running on a particular
  configuration of computer hardware and software -- a Platform. This
  association captures the product's compatibility.
  
  Some products are compatible with several platforms. In the future, we may
  make this association many-to-many and/or add a concept of one platform
  presuming compatibility with other platforms (e.g., if it runs on Windows NT,
  it is presumed compatible with Windows 2000).
  */
  public assoc R19 {
    public 'is available on': Platform[1];
    public supports: SoftwareProduct[1..*];
  }
  
  /**
  The same software title may be available for several platforms. For example,
  BridgePoint is published for Microsoft Windows, HP/UX, and Solaris. Since the
  product contains different executable and may be priced differently, each
  platform availablility is treated as a distinct product.
  */
  public assoc R20 {
    public 'is an instance of': ComputerSoftware[1];
    public 'is available for sale as': SoftwareProduct[1..*];
  }
  
}

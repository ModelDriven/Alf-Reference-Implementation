namespace OnlineBookstoreUI;

private import ProductSpecification::*;

active class ProductCategoryController specializes Controller {

  public title: String;
  public products: Product[*] sequence;
  
  @Create
  public ProductCategoryController(
    in title: String,
    in category: ProductCategory,
    in previous: Controller
  ) {
    super.following(previous);
    this.title = title + " > " + category.categoryName;
    this.products = category.classifies->select p (p.currentlyAvailable);
  }
  
  public receive signal Home {
  }
  
  public receive signal ShowShoppingCart {
  }
  
  public receive signal ShowProduct {
    public choice: Integer;
  }
  
} do {

  do {
    accept (Display);
    new ProductCategoryView(this.title, this);
    
    accept (Exit) {
      this.session.destroy();
      return;
    } or accept (Back) {
      this.previous.Display();
    } or accept (Home) {
      new HomeController(this).Display();
    } or accept (ShowShoppingCart) {
      new ShoppingCartController(this).Display();
    } or accept (event: ShowProduct) {
      new ProductController(this.title, this.products->at(event.choice), this).Display();
    }
    
    this.view.destroy();
  } while (true);
}

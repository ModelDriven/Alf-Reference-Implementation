namespace OnlineBookstoreUI;

private import ProductSpecification::*;
private import Ordering::*;
private import Shipping::*;

active class HomeController specializes Controller {

  public topLevelCategories: ProductCategory[*] sequence =
    ProductCategory->select pc (pc.'is part of'->isEmpty());
    
  public receive signal ShowCategory {
    public choice: Integer;
  }
  
  public receive signal ShowShoppingCart {
  }
       
} do {

  accept (Display);
  new HomeView(this);
  
  let category : ProductCategory = null;
  accept (event: ShowCategory) {
    category = this.topLevelCategories->at(event.choice);
    if (category.'is divided into'->isEmpty()) {
      new ProductCategoryController("Home", category).Display();
    } else {
      new SubcategoryController("Home", category).Display();
    }
  } or accept (ShowShoppingCart) {
    new ShoppingCartController().Display();
  } or accept (Exit) {
  }
  
  this.view.destroy();
  
}

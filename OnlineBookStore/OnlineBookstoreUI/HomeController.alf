namespace OnlineBookstoreUI;

private import ProductSpecification::*;
private import Ordering::*;
private import Shipping::*;

active class HomeController specializes Controller {

  public topLevelCategories: ProductCategory[*] sequence =
    ProductCategory->select pc (pc.'is part of'->isEmpty());
    
  @Create
  public HomeController(in previous: Controller) {
    super.following(previous);
  }
  
  @Create
  public start() {
    super.inSession(new ShoppingSession());
  }
  
  public receive signal ShowCategory {
    public choice: Integer;
  }
  
  public receive signal ShowShoppingCart {
  }
       
} do {

  do {
    accept (Display);
    new HomeView(this);
    
    let category : ProductCategory = null;
    accept (event: ShowCategory) {
      category = this.topLevelCategories->at(event.choice);
      if (category.'is divided into'->isEmpty()) {
        new ProductCategoryController("Home", category, this).Display();
      } else {
        new SubcategoryController("Home", category, this).Display();
      }
    } or accept (ShowShoppingCart) {
      new ShoppingCartController(this).Display();
    } or accept (Exit) {
      this.session.destroy();
      return;
    }
    
    this.view.destroy();
  } while (true);
  
}

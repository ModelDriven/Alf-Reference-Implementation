namespace OnlineBookstoreUI;

active class PaymentView specializes View {

  @Create
  public PaymentView(in controller: PaymentController) {
    super(
      title => "Shopping Cart > Check Out > Payment Information",
      prompt => "Select a field to change, p to pay, b to go back, s for shopping cart, h for home or x to exit",
      controller => controller
    );
  }
  
  public getController(): PaymentController {
    return (PaymentController)this.controller;
  }
  
  protected display(): String[*] sequence {
    controller = (PaymentController)this.controller;
    
    WriteLine("1. Cardholder Name: " + ToNameString(controller.cardholderName));
    WriteLine("2. Bank Card Account Number: " + 
                NullToString(controller.accountNumber));
    WriteLine("3. Bank Card Expiration Date: " + 
                NullToString(ToMonthYearString(controller.cardExpirationDate)));
    WriteLine("4. Billing Address:");
    WriteLine("");
    Write(ToAddressString(controller.billingAddress));
    
    return String[]{"1", "2", "3", "4", "p", "b", "s", "h", "x"};
  }
  
  protected handle(in choice: String) {
    switch (choice) {
      case "1": this.updateCardholderName();
      case "2": this.updateAccountNumber();
      case "3": this.updateCardExpirationDate();
      case "4": this.updateBillingAddress();
      case "p": this.placeOrder();
      case "b": this.back();
      case "s": this.showShoppingCart();
      case "h": this.home();
      case "x": this.exit();
    }
  }

  private updateCardholderName() {
    WriteLine("Enter cardholder name:");
    this.getController().Update(cardholderName => GetPersonalName());
  }
  
  private updateAccountNumber() {
    Write("Enter bank card account number:");
    this.getController().Update(accountNumber => ReadLine());
  }
  
  private updateCardExpirationDate() {
    WriteLine("Enter card expiration date:");
    this.getController().Update(cardExpirationDate => GetMonthYear());
  }
  
  private updateBillingAddress() {
    Write("Enter billing address:");
    this.getController().Update(billingAddress => GetMailingAddress());
  }
  
  private placeOrder() {
    this.getController().PlaceOrder();
  }
  
  private back() {
    this.getController().Back();
  }
  
  private showShoppingCart() {
    this.getController().ShowShoppingCart();
  }
  
  private home() {
    this.getController().Home();
  }
  
  private exit() {
    this.getController().Exit();
  }
    
} do {
}
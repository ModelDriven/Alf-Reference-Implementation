namespace Banking;
private import Alf::Library::PrimitiveBehaviors::IntegerFunctions::'+';

class Bank {

    public bankId: String;
    public customers: compose Customer[*];
    public accounts: compose Account[*];
    
    public totalAccountBalance(in customerId: String): Integer {
        customer = this.customers -> select c (c.customerId == customerId);
        return customer.accounts.balance -> reduce '+';
    }
    
    @Create public setUp(in bankId: String) {
        myCustomers = Customer[] {
            new Customer("Cust1"),
            new Customer("Cust2"),
            new Customer("Cust3")
        };
        
        myAccounts = Account[] {
            new Account("Acct1"),
            new Account("Acct2"),
            new Account("Acct3")
        };
        
        AccountOwnership.createLink(myCustomers[1], myAccounts[1]);
        AccountOwnership.createLink(myCustomers[2], myAccounts[1]);
        AccountOwnership.createLink(myCustomers[2], myAccounts[2]);
        AccountOwnership.createLink(myCustomers[3], myAccounts[2]);
        AccountOwnership.createLink(myCustomers[3], myAccounts[3]);
        
        myAccounts[1].balance = 100;
        myAccounts[2].balance = 200;
        myAccounts[3].balance = 300;
        
        this.bankId = bankId;
        this.customers = myCustomers;
        this.accounts = myAccounts;
    }
}
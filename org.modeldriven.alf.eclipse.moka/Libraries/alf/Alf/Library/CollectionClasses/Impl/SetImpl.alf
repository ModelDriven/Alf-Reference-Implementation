namespace Alf::Library::CollectionClasses::Impl;
private import Alf::Library::PrimitiveBehaviors::SequenceFunctions::*;
/**
The implementation of sets.
*/
abstract class SetImpl specializes CollectionImpl {

  private content: any[0..*];

  @Create protected SetImpl (in seq: any[0..*] sequence) { 
    super.CollectionImpl(seq);
  }

  @Destroy public destroy () {  }

  protected setContent (in seq: any[0..*] sequence) {
    this.content = seq;
  }                                                                      

  protected getContent (): any[0..*] sequence {
    return this.content;
  }                                                                      

  protected addAllImpl (in seq: any[0..*] sequence): Boolean {
    return super.addAllImpl(seq->ToOrderedSet());
  }
                                                                                                                                                                                                                                                                                                                                                 
  protected equalsImpl (in seq: any[0..*] sequence): Boolean { 
    set = seq->ToOrderedSet();
    return this.sizeImpl() == set->Size() && this.includesAllImpl(set);
  }
  
  protected excludesAllImpl (in seq: any[0..*] sequence): Boolean {
    return super.excludesAllImpl(seq->ToOrderedSet());
  }
  
  protected includesAllImpl (in seq: any[0..*] sequence): Boolean {
    return super.includesAllImpl(seq->ToOrderedSet());
  }

}

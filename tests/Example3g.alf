namespace 'Property Management'::'Service Model'::
                           'Property Management Service Implementation';

private import 'Property Management'::'Data Model'::Properties::*;
private import 'Property Management'::'Message Model'::*;

/** Update the attribute data of a property (other than acquisition or
    disposition data). Only non-empty values in the update message cause
    corresponding attribute updates. Note that none of these updates can
    result in a property status change.
*/
activity update (
  in request: 'Property Record Update',
  out reply: 'Property Management Success Reply' [0..1],
  out error: 'Error Reply' [0..1] ) {

  property = Property -> select p 
               (p.identifier == request.'property identifier');

  if (property -> isEmpty()) {
    error = new 'Error Reply' (
      identifier           => request.identifier + "/error",
      'request identifier' => request.identifier,
      'error code'         => "PRU-001",
      'error message'      => "Property not found." );

  } else if (property.status = 'Property Type'::disposed) {
    error = new 'Error Reply' (
      identifier           => request.identifier + "/error",
      'request identifier' => request.identifier,
      'error code'         => "PRU-002",
      'error message'      => "Property already disposed." );

  } else if ((request.'serial number' -> notEmpty() && 
              property instanceof 'Real Property') ||
             (request.'size' -> notEmpty() &&
              property instanceof 'Personal Property')) {
    error = new 'Error Reply' (
      identifier           => request.identifier + "/error",
      'request identifier' => request.identifier,
      'error code'         => "PRU-002",
      'error message'      => "Wrong property type." );

  } else if (request.'property location' -> notEmpty() &&
              !(Location -> exists loc 
                 (loc.identifier == request.'property location'))) {
    error = new 'Error Reply' (
      identifier           => request.identifier + "/error",
      'request identifier' => request.identifier,
      'error code'         => "PRU-003",
      'error message'      => "Location not found." );

  } else {
    if (request.'property location' -> notEmpty()) {
      location = Location -> select loc 
                   (loc.identifier == request.'property location');
      'Property Location' -> add (property, location);
    }
    if (request.'property name' -> notEmpty()) {
      property.name = request.'property name';
    }
    if (request.'property value' -> notEmpty()) {
      property.value = request.'property value';
    }
    if (request.'property serial number' -> notEmpty()) {
      (('Personal Property')property).'serial number' = 
                                            request.'property serial number';
    }
    if (request.'property size' -> notEmpty()) {
      (('Real Property')property).size = request.'property size';
    }

    reply = this.'create reply'(request.identifier, property);
  }
}

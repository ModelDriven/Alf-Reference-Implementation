private import TIM;
/**                                                        // See Note 1
Entry action for State 1. Establishing Customer and Verifying Payment
*/
activity EstablishCustomer()
{
  R2.createLink (                                          // See Note 2
    'selections are purchased in'    => this, 
    'is a purchase of selections in' => this.checkOutData.cart
  );

  // Create a Customer if one does not already exist
  // with the given email address
  matchingCustomers = Customer -> select c                 // See Note 3
                        (c.email == this.checkOutData.customerEmail);

  if (matchingCustomers->isEmpty()) {
    customer = new Customer();                             // See Note 4
    customer.email = this.checkOutData.customerEmail;
  } else {
    customer = matchingCustomers[1];                       // See Note 5
  } 
  
  // Use the name, address, etc. to update Customer
  // whether new or existing
  customer.name = this.checkOutData.customerName;
  customer.shippingAddress = this.checkOutData.shippingAddress;
  customer.phone = this.checkOutData.customerPhone;

  // Link the order to the customer
  R3.createLink (
    places          => this,
    'is placed by'  => customer
  );

  // Set the date order placed to today
  this.dateOrderPlaced = TIM::current_date;

  // Create a credit card charge and submit it
  // to the credit card company
  this.SubmitCharge(                                       // See Note 6
    new ChargeSubmissionData (                             // See Note 7
      accountNumber      => this.checkOutData.accountNumber, 
      billingAddress     => this.checkOutData.billingAddress,
      cardExpirationDate => this.checkOutData.cardExpirationDate,
      cardholderName     => this.checkOutData.cardholderName
    )
  );
}

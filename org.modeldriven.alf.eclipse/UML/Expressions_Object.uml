<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SgBL4K1MEeOdBunZhTRw1w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SgBL4a1MEeOdBunZhTRw1w" name="Expressions_Object" classifierBehavior="_SgBL9q1MEeOdBunZhTRw1w" isActive="true">
      <packageImport xmi:id="_SgBL4q1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SgBL461MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SgBL5K1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SgBL5a1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SgBL5q1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SgBL561MEeOdBunZhTRw1w" name="Expressions_Object$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL6K1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL6a1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SgBL6q1MEeOdBunZhTRw1w" name="members" visibility="package" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL661MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL7K1MEeOdBunZhTRw1w" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SgBL7a1MEeOdBunZhTRw1w" name="principal" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL7q1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL761MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SgBL8K1MEeOdBunZhTRw1w" name="rate" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL8a1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL8q1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SgBL861MEeOdBunZhTRw1w" name="interest" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL9K1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL9a1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgBL9q1MEeOdBunZhTRw1w" name="Expressions_Object$classifierBehavior$1" visibility="private" isActive="true" group="_SgBL961MEeOdBunZhTRw1w" node="_SgBL961MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SgBL961MEeOdBunZhTRw1w" name="Body(Expressions_Object$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBL-K1MEeOdBunZhTRw1w" name="ExpressionStatement@55bb9d5" outgoing="_SgBN7q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SgBL-a1MEeOdBunZhTRw1w" name="Call(test)" operation="_SgB1pa1MEeOdBunZhTRw1w">
              <result xmi:id="_SgBL-q1MEeOdBunZhTRw1w" name="Call(test).result(member)" outgoing="_SgBMFa1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL-61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL_K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SgBL_a1MEeOdBunZhTRw1w" name="Call(test).result(customer0)" outgoing="_SgBMFq1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBL_q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBL_61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SgBMAK1MEeOdBunZhTRw1w" name="Call(test).result(customer1)" outgoing="_SgBMF61MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMAa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMAq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SgBMA61MEeOdBunZhTRw1w" name="Call(test).result(names)" outgoing="_SgBMGK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMBK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMBa1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SgBMBq1MEeOdBunZhTRw1w" name="Call(test).result(self)" outgoing="_SgBMGa1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMB61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMCK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <target xmi:id="_SgBMCa1MEeOdBunZhTRw1w" name="Call(test).target" incoming="_SgBMGq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMCq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMC61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SgBMDK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SgBMDa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgBMGq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMDq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMD61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBMEK1MEeOdBunZhTRw1w" name="Fork(member)@1ee08669" outgoing="_SgBN7a1MEeOdBunZhTRw1w _SgBN761MEeOdBunZhTRw1w _SgBN8a1MEeOdBunZhTRw1w" incoming="_SgBMFa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBMEa1MEeOdBunZhTRw1w" name="Fork(customer0)@5fa8113e" outgoing="_SgBN861MEeOdBunZhTRw1w _SgBN9a1MEeOdBunZhTRw1w _SgBN961MEeOdBunZhTRw1w" incoming="_SgBMFq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBMEq1MEeOdBunZhTRw1w" name="Fork(customer1)@13042e82" outgoing="_SgBN-a1MEeOdBunZhTRw1w _SgBN-61MEeOdBunZhTRw1w _SgBN_a1MEeOdBunZhTRw1w" incoming="_SgBMF61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBME61MEeOdBunZhTRw1w" name="Fork(names)@7789628e" outgoing="_SgBOBa1MEeOdBunZhTRw1w" incoming="_SgBMGK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBMFK1MEeOdBunZhTRw1w" name="Fork(self)@5ca595f1" outgoing="_SgBN_61MEeOdBunZhTRw1w _SgBOAa1MEeOdBunZhTRw1w _SgBOA61MEeOdBunZhTRw1w" incoming="_SgBMGa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMFa1MEeOdBunZhTRw1w" source="_SgBL-q1MEeOdBunZhTRw1w" target="_SgBMEK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMFq1MEeOdBunZhTRw1w" source="_SgBL_a1MEeOdBunZhTRw1w" target="_SgBMEa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMF61MEeOdBunZhTRw1w" source="_SgBMAK1MEeOdBunZhTRw1w" target="_SgBMEq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMGK1MEeOdBunZhTRw1w" source="_SgBMA61MEeOdBunZhTRw1w" target="_SgBME61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMGa1MEeOdBunZhTRw1w" source="_SgBMBq1MEeOdBunZhTRw1w" target="_SgBMFK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMGq1MEeOdBunZhTRw1w" source="_SgBMDa1MEeOdBunZhTRw1w" target="_SgBMCa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMG61MEeOdBunZhTRw1w" name="ExpressionStatement@1b339288" outgoing="_SgBN8K1MEeOdBunZhTRw1w" incoming="_SgBN7q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBMHK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBMPa1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBMHa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBMOq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMHq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMH61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMIK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBMO61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMIa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMIq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMI61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBMPK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMJK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMJa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMJq1MEeOdBunZhTRw1w" name="Tuple@5b89f62c" outgoing="_SgBMPa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMJ61MEeOdBunZhTRw1w" name="Value(&quot;member.name&quot;)">
                <result xmi:id="_SgBMKK1MEeOdBunZhTRw1w" name="Value(&quot;member.name&quot;).result" outgoing="_SgBMOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMKa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMKq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMK61MEeOdBunZhTRw1w" value="member.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBMLK1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SgB1wa1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBMLa1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SgBMOa1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMLq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBML61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBMMK1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SgBMO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMMa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMMq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBMM61MEeOdBunZhTRw1w" name="Fork(Fork(member)@1ee08669)" outgoing="_SgBMOa1MEeOdBunZhTRw1w" incoming="_SgBN7a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMNK1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;)">
                <result xmi:id="_SgBMNa1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;).result" outgoing="_SgBMPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMNq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMN61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMOK1MEeOdBunZhTRw1w" value="A">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMOa1MEeOdBunZhTRw1w" source="_SgBMM61MEeOdBunZhTRw1w" target="_SgBMLa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMOq1MEeOdBunZhTRw1w" source="_SgBMKK1MEeOdBunZhTRw1w" target="_SgBMHa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMO61MEeOdBunZhTRw1w" source="_SgBMMK1MEeOdBunZhTRw1w" target="_SgBMIK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMPK1MEeOdBunZhTRw1w" source="_SgBMNa1MEeOdBunZhTRw1w" target="_SgBMI61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBMPa1MEeOdBunZhTRw1w" source="_SgBMJq1MEeOdBunZhTRw1w" target="_SgBMHK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMPq1MEeOdBunZhTRw1w" name="ExpressionStatement@7f5d0856" outgoing="_SgBN8q1MEeOdBunZhTRw1w" incoming="_SgBN8K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBMP61MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_SgBMV61MEeOdBunZhTRw1w" behavior="_SgCaAK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBMQK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_SgBMVa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMQa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMQq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMQ61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_SgBMVq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMRK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMRa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMRq1MEeOdBunZhTRw1w" name="Tuple@7b971e37" outgoing="_SgBMV61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMR61MEeOdBunZhTRw1w" name="Value(&quot;member.isActive&quot;)">
                <result xmi:id="_SgBMSK1MEeOdBunZhTRw1w" name="Value(&quot;member.isActive&quot;).result" outgoing="_SgBMVa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMSa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMSq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMS61MEeOdBunZhTRw1w" value="member.isActive">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBMTK1MEeOdBunZhTRw1w" name="Read(isActive)" structuralFeature="_SgB1vq1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBMTa1MEeOdBunZhTRw1w" name="Read(isActive).object" incoming="_SgBMVK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMTq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMT61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBMUK1MEeOdBunZhTRw1w" name="Read(isActive).result" outgoing="_SgBMVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMUa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMUq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBMU61MEeOdBunZhTRw1w" name="Fork(Fork(member)@1ee08669)" outgoing="_SgBMVK1MEeOdBunZhTRw1w" incoming="_SgBN761MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMVK1MEeOdBunZhTRw1w" source="_SgBMU61MEeOdBunZhTRw1w" target="_SgBMTa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMVa1MEeOdBunZhTRw1w" source="_SgBMSK1MEeOdBunZhTRw1w" target="_SgBMQK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMVq1MEeOdBunZhTRw1w" source="_SgBMUK1MEeOdBunZhTRw1w" target="_SgBMQ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBMV61MEeOdBunZhTRw1w" source="_SgBMRq1MEeOdBunZhTRw1w" target="_SgBMP61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMWK1MEeOdBunZhTRw1w" name="ExpressionStatement@68adce68" outgoing="_SgBN9K1MEeOdBunZhTRw1w" incoming="_SgBN8q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBMWa1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBMeq1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBMWq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBMd61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMW61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMXK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMXa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBMeK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMXq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMX61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMYK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBMea1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMYa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMYq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMY61MEeOdBunZhTRw1w" name="Tuple@7d9d2834" outgoing="_SgBMeq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMZK1MEeOdBunZhTRw1w" name="Value(&quot;member.address&quot;)">
                <result xmi:id="_SgBMZa1MEeOdBunZhTRw1w" name="Value(&quot;member.address&quot;).result" outgoing="_SgBMd61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMZq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMZ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMaK1MEeOdBunZhTRw1w" value="member.address">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBMaa1MEeOdBunZhTRw1w" name="Read(address)" structuralFeature="_SgB1xK1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBMaq1MEeOdBunZhTRw1w" name="Read(address).object" incoming="_SgBMdq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMa61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMbK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBMba1MEeOdBunZhTRw1w" name="Read(address).result" outgoing="_SgBMeK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMbq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMb61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBMcK1MEeOdBunZhTRw1w" name="Fork(Fork(member)@1ee08669)" outgoing="_SgBMdq1MEeOdBunZhTRw1w" incoming="_SgBN8a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMca1MEeOdBunZhTRw1w" name="Value(&quot;Easy Street&quot;)">
                <result xmi:id="_SgBMcq1MEeOdBunZhTRw1w" name="Value(&quot;Easy Street&quot;).result" outgoing="_SgBMea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMc61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMdK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMda1MEeOdBunZhTRw1w" value="Easy Street">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMdq1MEeOdBunZhTRw1w" source="_SgBMcK1MEeOdBunZhTRw1w" target="_SgBMaq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMd61MEeOdBunZhTRw1w" source="_SgBMZa1MEeOdBunZhTRw1w" target="_SgBMWq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMeK1MEeOdBunZhTRw1w" source="_SgBMba1MEeOdBunZhTRw1w" target="_SgBMXa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMea1MEeOdBunZhTRw1w" source="_SgBMcq1MEeOdBunZhTRw1w" target="_SgBMYK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBMeq1MEeOdBunZhTRw1w" source="_SgBMY61MEeOdBunZhTRw1w" target="_SgBMWa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMe61MEeOdBunZhTRw1w" name="ExpressionStatement@2d097d73" outgoing="_SgBN9q1MEeOdBunZhTRw1w" incoming="_SgBN9K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBMfK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBMna1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBMfa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBMmq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMfq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMf61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMgK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBMm61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMga1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMgq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMg61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBMnK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMhK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMha1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMhq1MEeOdBunZhTRw1w" name="Tuple@69fc5991" outgoing="_SgBMna1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMh61MEeOdBunZhTRw1w" name="Value(&quot;customer0.name&quot;)">
                <result xmi:id="_SgBMiK1MEeOdBunZhTRw1w" name="Value(&quot;customer0.name&quot;).result" outgoing="_SgBMmq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMia1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMiq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMi61MEeOdBunZhTRw1w" value="customer0.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBMjK1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SgB2Ta1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBMja1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SgBMma1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMjq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMj61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBMkK1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SgBMm61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMka1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMkq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBMk61MEeOdBunZhTRw1w" name="Fork(Fork(customer0)@5fa8113e)" outgoing="_SgBMma1MEeOdBunZhTRw1w" incoming="_SgBN861MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMlK1MEeOdBunZhTRw1w" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_SgBMla1MEeOdBunZhTRw1w" name="Value(&quot;Fred&quot;).result" outgoing="_SgBMnK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMlq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMl61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMmK1MEeOdBunZhTRw1w" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMma1MEeOdBunZhTRw1w" source="_SgBMk61MEeOdBunZhTRw1w" target="_SgBMja1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMmq1MEeOdBunZhTRw1w" source="_SgBMiK1MEeOdBunZhTRw1w" target="_SgBMfa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMm61MEeOdBunZhTRw1w" source="_SgBMkK1MEeOdBunZhTRw1w" target="_SgBMgK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMnK1MEeOdBunZhTRw1w" source="_SgBMla1MEeOdBunZhTRw1w" target="_SgBMg61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBMna1MEeOdBunZhTRw1w" source="_SgBMhq1MEeOdBunZhTRw1w" target="_SgBMfK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMnq1MEeOdBunZhTRw1w" name="ExpressionStatement@5110b5bf" outgoing="_SgBN-K1MEeOdBunZhTRw1w" incoming="_SgBN9q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBMn61MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBMwK1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBMoK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBMva1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMoa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMoq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMo61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBMvq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMpK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMpa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMpq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBMv61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMp61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMqK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMqa1MEeOdBunZhTRw1w" name="Tuple@465755e0" outgoing="_SgBMwK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMqq1MEeOdBunZhTRw1w" name="Value(&quot;customer0.email&quot;)">
                <result xmi:id="_SgBMq61MEeOdBunZhTRw1w" name="Value(&quot;customer0.email&quot;).result" outgoing="_SgBMva1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMrK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMra1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMrq1MEeOdBunZhTRw1w" value="customer0.email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBMr61MEeOdBunZhTRw1w" name="Read(email)" structuralFeature="_SgB2UK1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBMsK1MEeOdBunZhTRw1w" name="Read(email).object" incoming="_SgBMvK1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMsa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMsq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBMs61MEeOdBunZhTRw1w" name="Read(email).result" outgoing="_SgBMvq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMtK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMta1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBMtq1MEeOdBunZhTRw1w" name="Fork(Fork(customer0)@5fa8113e)" outgoing="_SgBMvK1MEeOdBunZhTRw1w" incoming="_SgBN9a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMt61MEeOdBunZhTRw1w" name="Value(&quot;fred@blah.com&quot;)">
                <result xmi:id="_SgBMuK1MEeOdBunZhTRw1w" name="Value(&quot;fred@blah.com&quot;).result" outgoing="_SgBMv61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMua1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMuq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBMu61MEeOdBunZhTRw1w" value="fred@blah.com">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMvK1MEeOdBunZhTRw1w" source="_SgBMtq1MEeOdBunZhTRw1w" target="_SgBMsK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMva1MEeOdBunZhTRw1w" source="_SgBMq61MEeOdBunZhTRw1w" target="_SgBMoK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMvq1MEeOdBunZhTRw1w" source="_SgBMs61MEeOdBunZhTRw1w" target="_SgBMo61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBMv61MEeOdBunZhTRw1w" source="_SgBMuK1MEeOdBunZhTRw1w" target="_SgBMpq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBMwK1MEeOdBunZhTRw1w" source="_SgBMqa1MEeOdBunZhTRw1w" target="_SgBMn61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMwa1MEeOdBunZhTRw1w" name="ExpressionStatement@5029516a" outgoing="_SgBN-q1MEeOdBunZhTRw1w" incoming="_SgBN-K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBMwq1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SgBM461MEeOdBunZhTRw1w" behavior="_SgCaY61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBMw61MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SgBM4K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMxK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMxa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBMxq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SgBM4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMx61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMyK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SgBMya1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SgBM4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMyq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBMy61MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBMzK1MEeOdBunZhTRw1w" name="Tuple@285fe747" outgoing="_SgBM461MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBMza1MEeOdBunZhTRw1w" name="Value(&quot;customer0.address&quot;)">
                <result xmi:id="_SgBMzq1MEeOdBunZhTRw1w" name="Value(&quot;customer0.address&quot;).result" outgoing="_SgBM4K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBMz61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM0K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBM0a1MEeOdBunZhTRw1w" value="customer0.address">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBM0q1MEeOdBunZhTRw1w" name="Read(address)" structuralFeature="_SgB2U61MEeOdBunZhTRw1w">
                <object xmi:id="_SgBM061MEeOdBunZhTRw1w" name="Read(address).object" incoming="_SgBM361MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM1K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM1a1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBM1q1MEeOdBunZhTRw1w" name="Read(address).result" outgoing="_SgBM4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM161MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM2K1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBM2a1MEeOdBunZhTRw1w" name="Fork(Fork(customer0)@5fa8113e)" outgoing="_SgBM361MEeOdBunZhTRw1w" incoming="_SgBN961MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBM2q1MEeOdBunZhTRw1w" name="Value(&quot;Unknown&quot;)">
                <result xmi:id="_SgBM261MEeOdBunZhTRw1w" name="Value(&quot;Unknown&quot;).result" outgoing="_SgBM4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM3K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM3a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBM3q1MEeOdBunZhTRw1w" value="Unknown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBM361MEeOdBunZhTRw1w" source="_SgBM2a1MEeOdBunZhTRw1w" target="_SgBM061MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBM4K1MEeOdBunZhTRw1w" source="_SgBMzq1MEeOdBunZhTRw1w" target="_SgBMw61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBM4a1MEeOdBunZhTRw1w" source="_SgBM1q1MEeOdBunZhTRw1w" target="_SgBMxq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBM4q1MEeOdBunZhTRw1w" source="_SgBM261MEeOdBunZhTRw1w" target="_SgBMya1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBM461MEeOdBunZhTRw1w" source="_SgBMzK1MEeOdBunZhTRw1w" target="_SgBMwq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBM5K1MEeOdBunZhTRw1w" name="ExpressionStatement@4b6911c3" outgoing="_SgBN_K1MEeOdBunZhTRw1w" incoming="_SgBN-q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBM5a1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBNBq1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBM5q1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBNA61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM561MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM6K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBM6a1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBNBK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM6q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM661MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBM7K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBNBa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM7a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM7q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBM761MEeOdBunZhTRw1w" name="Tuple@1b245ded" outgoing="_SgBNBq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBM8K1MEeOdBunZhTRw1w" name="Value(&quot;customer1.name&quot;)">
                <result xmi:id="_SgBM8a1MEeOdBunZhTRw1w" name="Value(&quot;customer1.name&quot;).result" outgoing="_SgBNA61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM8q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM861MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBM9K1MEeOdBunZhTRw1w" value="customer1.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBM9a1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SgB2Ta1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBM9q1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SgBNAq1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM961MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM-K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBM-a1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SgBNBK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM-q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBM-61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBM_K1MEeOdBunZhTRw1w" name="Fork(Fork(customer1)@13042e82)" outgoing="_SgBNAq1MEeOdBunZhTRw1w" incoming="_SgBN-a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBM_a1MEeOdBunZhTRw1w" name="Value(&quot;Fred&quot;)">
                <result xmi:id="_SgBM_q1MEeOdBunZhTRw1w" name="Value(&quot;Fred&quot;).result" outgoing="_SgBNBa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBM_61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNAK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNAa1MEeOdBunZhTRw1w" value="Fred">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNAq1MEeOdBunZhTRw1w" source="_SgBM_K1MEeOdBunZhTRw1w" target="_SgBM9q1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNA61MEeOdBunZhTRw1w" source="_SgBM8a1MEeOdBunZhTRw1w" target="_SgBM5q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNBK1MEeOdBunZhTRw1w" source="_SgBM-a1MEeOdBunZhTRw1w" target="_SgBM6a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNBa1MEeOdBunZhTRw1w" source="_SgBM_q1MEeOdBunZhTRw1w" target="_SgBM7K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBNBq1MEeOdBunZhTRw1w" source="_SgBM761MEeOdBunZhTRw1w" target="_SgBM5a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNB61MEeOdBunZhTRw1w" name="ExpressionStatement@2ffbd425" outgoing="_SgBN_q1MEeOdBunZhTRw1w" incoming="_SgBN_K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBNCK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBNKa1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBNCa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBNJq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNCq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNC61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNDK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBNJ61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNDa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNDq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBND61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBNKK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNEK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNEa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNEq1MEeOdBunZhTRw1w" name="Tuple@6f388e48" outgoing="_SgBNKa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNE61MEeOdBunZhTRw1w" name="Value(&quot;customer1.email&quot;)">
                <result xmi:id="_SgBNFK1MEeOdBunZhTRw1w" name="Value(&quot;customer1.email&quot;).result" outgoing="_SgBNJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNFa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNFq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNF61MEeOdBunZhTRw1w" value="customer1.email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBNGK1MEeOdBunZhTRw1w" name="Read(email)" structuralFeature="_SgB2UK1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBNGa1MEeOdBunZhTRw1w" name="Read(email).object" incoming="_SgBNJa1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNGq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNG61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBNHK1MEeOdBunZhTRw1w" name="Read(email).result" outgoing="_SgBNJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNHa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNHq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBNH61MEeOdBunZhTRw1w" name="Fork(Fork(customer1)@13042e82)" outgoing="_SgBNJa1MEeOdBunZhTRw1w" incoming="_SgBN-61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNIK1MEeOdBunZhTRw1w" name="Value(&quot;fred@blah.com&quot;)">
                <result xmi:id="_SgBNIa1MEeOdBunZhTRw1w" name="Value(&quot;fred@blah.com&quot;).result" outgoing="_SgBNKK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNIq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNI61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNJK1MEeOdBunZhTRw1w" value="fred@blah.com">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNJa1MEeOdBunZhTRw1w" source="_SgBNH61MEeOdBunZhTRw1w" target="_SgBNGa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNJq1MEeOdBunZhTRw1w" source="_SgBNFK1MEeOdBunZhTRw1w" target="_SgBNCa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNJ61MEeOdBunZhTRw1w" source="_SgBNHK1MEeOdBunZhTRw1w" target="_SgBNDK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNKK1MEeOdBunZhTRw1w" source="_SgBNIa1MEeOdBunZhTRw1w" target="_SgBND61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBNKa1MEeOdBunZhTRw1w" source="_SgBNEq1MEeOdBunZhTRw1w" target="_SgBNCK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNKq1MEeOdBunZhTRw1w" name="ExpressionStatement@63c53a7b" outgoing="_SgBOAK1MEeOdBunZhTRw1w" incoming="_SgBN_q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBNK61MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SgBNTK1MEeOdBunZhTRw1w" behavior="_SgCaY61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBNLK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SgBNSa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNLa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNLq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNL61MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SgBNSq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNMK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNMa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SgBNMq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SgBNS61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNM61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNNK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNNa1MEeOdBunZhTRw1w" name="Tuple@ef76b1d" outgoing="_SgBNTK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNNq1MEeOdBunZhTRw1w" name="Value(&quot;customer1.address&quot;)">
                <result xmi:id="_SgBNN61MEeOdBunZhTRw1w" name="Value(&quot;customer1.address&quot;).result" outgoing="_SgBNSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNOK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNOa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNOq1MEeOdBunZhTRw1w" value="customer1.address">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBNO61MEeOdBunZhTRw1w" name="Read(address)" structuralFeature="_SgB2U61MEeOdBunZhTRw1w">
                <object xmi:id="_SgBNPK1MEeOdBunZhTRw1w" name="Read(address).object" incoming="_SgBNSK1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNPa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNPq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBNP61MEeOdBunZhTRw1w" name="Read(address).result" outgoing="_SgBNSq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNQK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNQa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBNQq1MEeOdBunZhTRw1w" name="Fork(Fork(customer1)@13042e82)" outgoing="_SgBNSK1MEeOdBunZhTRw1w" incoming="_SgBN_a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNQ61MEeOdBunZhTRw1w" name="Value(&quot;Easy Street&quot;)">
                <result xmi:id="_SgBNRK1MEeOdBunZhTRw1w" name="Value(&quot;Easy Street&quot;).result" outgoing="_SgBNS61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNRa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNRq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNR61MEeOdBunZhTRw1w" value="Easy Street">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNSK1MEeOdBunZhTRw1w" source="_SgBNQq1MEeOdBunZhTRw1w" target="_SgBNPK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNSa1MEeOdBunZhTRw1w" source="_SgBNN61MEeOdBunZhTRw1w" target="_SgBNLK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNSq1MEeOdBunZhTRw1w" source="_SgBNP61MEeOdBunZhTRw1w" target="_SgBNL61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNS61MEeOdBunZhTRw1w" source="_SgBNRK1MEeOdBunZhTRw1w" target="_SgBNMq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBNTK1MEeOdBunZhTRw1w" source="_SgBNNa1MEeOdBunZhTRw1w" target="_SgBNK61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNTa1MEeOdBunZhTRw1w" name="ExpressionStatement@59137699" outgoing="_SgBOAq1MEeOdBunZhTRw1w" incoming="_SgBOAK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBNTq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBNb61MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBNT61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBNbK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNUK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNUa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNUq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBNba1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNU61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNVK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNVa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBNbq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNVq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNV61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNWK1MEeOdBunZhTRw1w" name="Tuple@5eff90a4" outgoing="_SgBNb61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNWa1MEeOdBunZhTRw1w" name="Value(&quot;self.principal&quot;)">
                <result xmi:id="_SgBNWq1MEeOdBunZhTRw1w" name="Value(&quot;self.principal&quot;).result" outgoing="_SgBNbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNW61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNXK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNXa1MEeOdBunZhTRw1w" value="self.principal">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBNXq1MEeOdBunZhTRw1w" name="Read(principal)" structuralFeature="_SgBL7a1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBNX61MEeOdBunZhTRw1w" name="Read(principal).object" incoming="_SgBNa61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNYK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNYa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBNYq1MEeOdBunZhTRw1w" name="Read(principal).result" outgoing="_SgBNba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNY61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNZK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBNZa1MEeOdBunZhTRw1w" name="Fork(Fork(self)@5ca595f1)" outgoing="_SgBNa61MEeOdBunZhTRw1w" incoming="_SgBN_61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNZq1MEeOdBunZhTRw1w" name="Value(1000)">
                <result xmi:id="_SgBNZ61MEeOdBunZhTRw1w" name="Value(1000).result" outgoing="_SgBNbq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNaK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNaa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgBNaq1MEeOdBunZhTRw1w" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNa61MEeOdBunZhTRw1w" source="_SgBNZa1MEeOdBunZhTRw1w" target="_SgBNX61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNbK1MEeOdBunZhTRw1w" source="_SgBNWq1MEeOdBunZhTRw1w" target="_SgBNT61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNba1MEeOdBunZhTRw1w" source="_SgBNYq1MEeOdBunZhTRw1w" target="_SgBNUq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNbq1MEeOdBunZhTRw1w" source="_SgBNZ61MEeOdBunZhTRw1w" target="_SgBNVa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBNb61MEeOdBunZhTRw1w" source="_SgBNWK1MEeOdBunZhTRw1w" target="_SgBNTq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNcK1MEeOdBunZhTRw1w" name="ExpressionStatement@79897163" outgoing="_SgBOBK1MEeOdBunZhTRw1w" incoming="_SgBOAq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBNca1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBNkq1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBNcq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBNj61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNc61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNdK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNda1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBNkK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNdq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNd61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNeK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBNka1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNea1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNeq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNe61MEeOdBunZhTRw1w" name="Tuple@179d0d1f" outgoing="_SgBNkq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNfK1MEeOdBunZhTRw1w" name="Value(&quot;self.rate&quot;)">
                <result xmi:id="_SgBNfa1MEeOdBunZhTRw1w" name="Value(&quot;self.rate&quot;).result" outgoing="_SgBNj61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNfq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNf61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNgK1MEeOdBunZhTRw1w" value="self.rate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBNga1MEeOdBunZhTRw1w" name="Read(rate)" structuralFeature="_SgBL8K1MEeOdBunZhTRw1w">
                <object xmi:id="_SgBNgq1MEeOdBunZhTRw1w" name="Read(rate).object" incoming="_SgBNjq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNg61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNhK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBNha1MEeOdBunZhTRw1w" name="Read(rate).result" outgoing="_SgBNkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNhq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNh61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBNiK1MEeOdBunZhTRw1w" name="Fork(Fork(self)@5ca595f1)" outgoing="_SgBNjq1MEeOdBunZhTRw1w" incoming="_SgBOAa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNia1MEeOdBunZhTRw1w" name="Value(5)">
                <result xmi:id="_SgBNiq1MEeOdBunZhTRw1w" name="Value(5).result" outgoing="_SgBNka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNi61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNjK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgBNja1MEeOdBunZhTRw1w" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNjq1MEeOdBunZhTRw1w" source="_SgBNiK1MEeOdBunZhTRw1w" target="_SgBNgq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNj61MEeOdBunZhTRw1w" source="_SgBNfa1MEeOdBunZhTRw1w" target="_SgBNcq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNkK1MEeOdBunZhTRw1w" source="_SgBNha1MEeOdBunZhTRw1w" target="_SgBNda1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNka1MEeOdBunZhTRw1w" source="_SgBNiq1MEeOdBunZhTRw1w" target="_SgBNeK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBNkq1MEeOdBunZhTRw1w" source="_SgBNe61MEeOdBunZhTRw1w" target="_SgBNca1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNk61MEeOdBunZhTRw1w" name="ExpressionStatement@b808555" outgoing="_SgBOBq1MEeOdBunZhTRw1w" incoming="_SgBOBK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBNlK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgBNta1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBNla1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgBNsq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNlq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNl61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNmK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgBNs61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNma1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNmq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNm61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgBNtK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNnK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNna1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNnq1MEeOdBunZhTRw1w" name="Tuple@f937235" outgoing="_SgBNta1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNn61MEeOdBunZhTRw1w" name="Value(&quot;self.interest&quot;)">
                <result xmi:id="_SgBNoK1MEeOdBunZhTRw1w" name="Value(&quot;self.interest&quot;).result" outgoing="_SgBNsq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNoa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNoq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNo61MEeOdBunZhTRw1w" value="self.interest">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBNpK1MEeOdBunZhTRw1w" name="Read(interest)" structuralFeature="_SgBL861MEeOdBunZhTRw1w">
                <object xmi:id="_SgBNpa1MEeOdBunZhTRw1w" name="Read(interest).object" incoming="_SgBNsa1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNpq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNp61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBNqK1MEeOdBunZhTRw1w" name="Read(interest).result" outgoing="_SgBNs61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNqa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNqq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBNq61MEeOdBunZhTRw1w" name="Fork(Fork(self)@5ca595f1)" outgoing="_SgBNsa1MEeOdBunZhTRw1w" incoming="_SgBOA61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNrK1MEeOdBunZhTRw1w" name="Value(500)">
                <result xmi:id="_SgBNra1MEeOdBunZhTRw1w" name="Value(500).result" outgoing="_SgBNtK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNrq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNr61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgBNsK1MEeOdBunZhTRw1w" value="500">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNsa1MEeOdBunZhTRw1w" source="_SgBNq61MEeOdBunZhTRw1w" target="_SgBNpa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNsq1MEeOdBunZhTRw1w" source="_SgBNoK1MEeOdBunZhTRw1w" target="_SgBNla1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNs61MEeOdBunZhTRw1w" source="_SgBNqK1MEeOdBunZhTRw1w" target="_SgBNmK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBNtK1MEeOdBunZhTRw1w" source="_SgBNra1MEeOdBunZhTRw1w" target="_SgBNm61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBNta1MEeOdBunZhTRw1w" source="_SgBNnq1MEeOdBunZhTRw1w" target="_SgBNlK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNtq1MEeOdBunZhTRw1w" name="ExpressionStatement@3e7c7caa" outgoing="_SgBOB61MEeOdBunZhTRw1w" incoming="_SgBOBq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBNt61MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SgBN3K1MEeOdBunZhTRw1w" behavior="_SgCaY61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBNuK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SgBN2q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNua1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNuq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgBNu61MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SgBOBa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNvK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNva1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SgBNvq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SgBN261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNv61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNwK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNwa1MEeOdBunZhTRw1w" name="Tuple@442e875c" outgoing="_SgBN3K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNwq1MEeOdBunZhTRw1w" name="Value(&quot;names&quot;)">
                <result xmi:id="_SgBNw61MEeOdBunZhTRw1w" name="Value(&quot;names&quot;).result" outgoing="_SgBN2q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNxK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNxa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBNxq1MEeOdBunZhTRw1w" value="names">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNx61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@2fd699a9">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNyK1MEeOdBunZhTRw1w" name="SequenceExpressionList@7ade9f78#1" outgoing="_SgBN161MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNya1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;)">
                    <result xmi:id="_SgBNyq1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;).result" outgoing="_SgBN2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBNy61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBNzK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SgBNza1MEeOdBunZhTRw1w" value="A">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBNzq1MEeOdBunZhTRw1w" name="SequenceExpressionList@7ade9f78#2" incoming="_SgBN161MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBNz61MEeOdBunZhTRw1w" name="Value(&quot;B&quot;)">
                    <result xmi:id="_SgBN0K1MEeOdBunZhTRw1w" name="Value(&quot;B&quot;).result" outgoing="_SgBN2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBN0a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBN0q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SgBN061MEeOdBunZhTRw1w" value="B">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_SgBN1K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@2fd699a9.output" outgoing="_SgBN261MEeOdBunZhTRw1w" incoming="_SgBN2K1MEeOdBunZhTRw1w _SgBN2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBN1a1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBN1q1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN161MEeOdBunZhTRw1w" source="_SgBNyK1MEeOdBunZhTRw1w" target="_SgBNzq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN2K1MEeOdBunZhTRw1w" source="_SgBNyq1MEeOdBunZhTRw1w" target="_SgBN1K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN2a1MEeOdBunZhTRw1w" source="_SgBN0K1MEeOdBunZhTRw1w" target="_SgBN1K1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN2q1MEeOdBunZhTRw1w" source="_SgBNw61MEeOdBunZhTRw1w" target="_SgBNuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN261MEeOdBunZhTRw1w" source="_SgBN1K1MEeOdBunZhTRw1w" target="_SgBNvq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN3K1MEeOdBunZhTRw1w" source="_SgBNwa1MEeOdBunZhTRw1w" target="_SgBNt61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBN3a1MEeOdBunZhTRw1w" name="ExpressionStatement@265861e0" incoming="_SgBOB61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBN3q1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SgBN7K1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgBN361MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SgBN661MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBN4K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBN4a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgBN4q1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBN461MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBN5K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBN5a1MEeOdBunZhTRw1w" name="Tuple@168bb75f" outgoing="_SgBN7K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBN5q1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;)">
                <result xmi:id="_SgBN561MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;).result" outgoing="_SgBN661MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBN6K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBN6a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBN6q1MEeOdBunZhTRw1w" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN661MEeOdBunZhTRw1w" source="_SgBN561MEeOdBunZhTRw1w" target="_SgBN361MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN7K1MEeOdBunZhTRw1w" source="_SgBN5a1MEeOdBunZhTRw1w" target="_SgBN3q1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN7a1MEeOdBunZhTRw1w" source="_SgBMEK1MEeOdBunZhTRw1w" target="_SgBMM61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN7q1MEeOdBunZhTRw1w" source="_SgBL-K1MEeOdBunZhTRw1w" target="_SgBMG61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN761MEeOdBunZhTRw1w" source="_SgBMEK1MEeOdBunZhTRw1w" target="_SgBMU61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN8K1MEeOdBunZhTRw1w" source="_SgBMG61MEeOdBunZhTRw1w" target="_SgBMPq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN8a1MEeOdBunZhTRw1w" source="_SgBMEK1MEeOdBunZhTRw1w" target="_SgBMcK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN8q1MEeOdBunZhTRw1w" source="_SgBMPq1MEeOdBunZhTRw1w" target="_SgBMWK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN861MEeOdBunZhTRw1w" source="_SgBMEa1MEeOdBunZhTRw1w" target="_SgBMk61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN9K1MEeOdBunZhTRw1w" source="_SgBMWK1MEeOdBunZhTRw1w" target="_SgBMe61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN9a1MEeOdBunZhTRw1w" source="_SgBMEa1MEeOdBunZhTRw1w" target="_SgBMtq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN9q1MEeOdBunZhTRw1w" source="_SgBMe61MEeOdBunZhTRw1w" target="_SgBMnq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN961MEeOdBunZhTRw1w" source="_SgBMEa1MEeOdBunZhTRw1w" target="_SgBM2a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN-K1MEeOdBunZhTRw1w" source="_SgBMnq1MEeOdBunZhTRw1w" target="_SgBMwa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN-a1MEeOdBunZhTRw1w" source="_SgBMEq1MEeOdBunZhTRw1w" target="_SgBM_K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN-q1MEeOdBunZhTRw1w" source="_SgBMwa1MEeOdBunZhTRw1w" target="_SgBM5K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN-61MEeOdBunZhTRw1w" source="_SgBMEq1MEeOdBunZhTRw1w" target="_SgBNH61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN_K1MEeOdBunZhTRw1w" source="_SgBM5K1MEeOdBunZhTRw1w" target="_SgBNB61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN_a1MEeOdBunZhTRw1w" source="_SgBMEq1MEeOdBunZhTRw1w" target="_SgBNQq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBN_q1MEeOdBunZhTRw1w" source="_SgBNB61MEeOdBunZhTRw1w" target="_SgBNKq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBN_61MEeOdBunZhTRw1w" source="_SgBMFK1MEeOdBunZhTRw1w" target="_SgBNZa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOAK1MEeOdBunZhTRw1w" source="_SgBNKq1MEeOdBunZhTRw1w" target="_SgBNTa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOAa1MEeOdBunZhTRw1w" source="_SgBMFK1MEeOdBunZhTRw1w" target="_SgBNiK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOAq1MEeOdBunZhTRw1w" source="_SgBNTa1MEeOdBunZhTRw1w" target="_SgBNcK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOA61MEeOdBunZhTRw1w" source="_SgBMFK1MEeOdBunZhTRw1w" target="_SgBNq61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOBK1MEeOdBunZhTRw1w" source="_SgBNcK1MEeOdBunZhTRw1w" target="_SgBNk61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOBa1MEeOdBunZhTRw1w" source="_SgBME61MEeOdBunZhTRw1w" target="_SgBNu61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOBq1MEeOdBunZhTRw1w" source="_SgBNk61MEeOdBunZhTRw1w" target="_SgBNtq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOB61MEeOdBunZhTRw1w" source="_SgBNtq1MEeOdBunZhTRw1w" target="_SgBN3a1MEeOdBunZhTRw1w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgBOCK1MEeOdBunZhTRw1w" name="test$method$1" specification="_SgB1pa1MEeOdBunZhTRw1w" group="_SgBOIq1MEeOdBunZhTRw1w" node="_SgBOHa1MEeOdBunZhTRw1w _SgBOHq1MEeOdBunZhTRw1w _SgBOH61MEeOdBunZhTRw1w _SgBOIK1MEeOdBunZhTRw1w _SgBOIa1MEeOdBunZhTRw1w _SgBOIq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SgBOCa1MEeOdBunZhTRw1w" name="member" type="_SgB1uq1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOCq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOC61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgBODK1MEeOdBunZhTRw1w" name="customer0" type="_SgB2TK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBODa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBODq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgBOD61MEeOdBunZhTRw1w" name="customer1" type="_SgB2TK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOEK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOEa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgBOEq1MEeOdBunZhTRw1w" name="names" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOE61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOFK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgBOFa1MEeOdBunZhTRw1w" name="self" type="_SgBL4a1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOFq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOF61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOGK1MEeOdBunZhTRw1w" source="_SgB0_q1MEeOdBunZhTRw1w" target="_SgBOHa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOGa1MEeOdBunZhTRw1w" source="_SgB1Aa1MEeOdBunZhTRw1w" target="_SgBOHq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOGq1MEeOdBunZhTRw1w" source="_SgB1BK1MEeOdBunZhTRw1w" target="_SgBOH61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOG61MEeOdBunZhTRw1w" source="_SgB1B61MEeOdBunZhTRw1w" target="_SgBOIK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOHK1MEeOdBunZhTRw1w" source="_SgB1Cq1MEeOdBunZhTRw1w" target="_SgBOIa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_SgBOIq1MEeOdBunZhTRw1w" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOI61MEeOdBunZhTRw1w" name="ExpressionStatement@4bd7d3a9" outgoing="_SgB1Da1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOJK1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@546e06e1)" outgoing="_SgBOXK1MEeOdBunZhTRw1w" incoming="_SgBOZa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgBOJa1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgBOJq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgBOX61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOJ61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOKK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOKa1MEeOdBunZhTRw1w" name="Index(LeftHandSide@546e06e1)" incoming="_SgBOXK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBOKq1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SgBOK61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgBOXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOLK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOLa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgBOLq1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBOL61MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural)">
              <argument xmi:id="_SgBOMK1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_SgBOXa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOMa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOMq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgBOM61MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_SgBOXq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBONK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBONa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBONq1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_SgBOYK1MEeOdBunZhTRw1w _SgBOYq1MEeOdBunZhTRw1w" incoming="_SgBOXq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_SgBON61MEeOdBunZhTRw1w" name="Remove(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBOOK1MEeOdBunZhTRw1w" name="Remove(members).object" incoming="_SgBOX61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOOa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOOq1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBOO61MEeOdBunZhTRw1w" name="Remove(members).result" outgoing="_SgBOYa1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOPK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOPa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <removeAt xmi:id="_SgBOPq1MEeOdBunZhTRw1w" name="Remove(members).removeAt" incoming="_SgBOYK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOP61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOQK1MEeOdBunZhTRw1w" value="1"/>
              </removeAt>
            </node>
            <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBOQa1MEeOdBunZhTRw1w" name="Write(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBOQq1MEeOdBunZhTRw1w" name="Write(members).object" incoming="_SgBOYa1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOQ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBORK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBORa1MEeOdBunZhTRw1w" name="Write(members).result" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBORq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOR61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:id="_SgBOSK1MEeOdBunZhTRw1w" name="Write(members).value" incoming="_SgBOY61MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOSa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOSq1MEeOdBunZhTRw1w" value="1"/>
              </value>
              <insertAt xmi:id="_SgBOS61MEeOdBunZhTRw1w" name="Write(members).insertAt" incoming="_SgBOYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOTK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOTa1MEeOdBunZhTRw1w" value="1"/>
              </insertAt>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBOTq1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@546e06e1)" outgoing="_SgBOY61MEeOdBunZhTRw1w" incoming="_SgBOZK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOT61MEeOdBunZhTRw1w" name="RightHandSide@b9f3187" outgoing="_SgBOZa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_SgBOUK1MEeOdBunZhTRw1w" name="Call(Member)" operation="_SgB2R61MEeOdBunZhTRw1w">
                <result xmi:id="_SgBOUa1MEeOdBunZhTRw1w" name="Call(Member).result()" outgoing="_SgBOZK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOUq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOU61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_SgBOVK1MEeOdBunZhTRw1w" name="Call(Member).target" incoming="_SgBOW61MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOVa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOVq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SgBOV61MEeOdBunZhTRw1w" name="Create(Member)" classifier="_SgB1uq1MEeOdBunZhTRw1w">
                <result xmi:id="_SgBOWK1MEeOdBunZhTRw1w" name="Create(Member).result" outgoing="_SgBOW61MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOWa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOWq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOW61MEeOdBunZhTRw1w" source="_SgBOWK1MEeOdBunZhTRw1w" target="_SgBOVK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOXK1MEeOdBunZhTRw1w" source="_SgBOJK1MEeOdBunZhTRw1w" target="_SgBOKa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOXa1MEeOdBunZhTRw1w" source="_SgBOK61MEeOdBunZhTRw1w" target="_SgBOMK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOXq1MEeOdBunZhTRw1w" source="_SgBOM61MEeOdBunZhTRw1w" target="_SgBONq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOX61MEeOdBunZhTRw1w" source="_SgBOJq1MEeOdBunZhTRw1w" target="_SgBOOK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOYK1MEeOdBunZhTRw1w" source="_SgBONq1MEeOdBunZhTRw1w" target="_SgBOPq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOYa1MEeOdBunZhTRw1w" source="_SgBOO61MEeOdBunZhTRw1w" target="_SgBOQq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOYq1MEeOdBunZhTRw1w" source="_SgBONq1MEeOdBunZhTRw1w" target="_SgBOS61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOY61MEeOdBunZhTRw1w" source="_SgBOTq1MEeOdBunZhTRw1w" target="_SgBOSK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOZK1MEeOdBunZhTRw1w" source="_SgBOUa1MEeOdBunZhTRw1w" target="_SgBOTq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOZa1MEeOdBunZhTRw1w" source="_SgBOT61MEeOdBunZhTRw1w" target="_SgBOJK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOZq1MEeOdBunZhTRw1w" name="ExpressionStatement@600a73c7" outgoing="_SgB1Dq1MEeOdBunZhTRw1w" incoming="_SgB1Da1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOZ61MEeOdBunZhTRw1w" name="Expression(LeftHandSide@69e1dac4)" outgoing="_SgBOn61MEeOdBunZhTRw1w" incoming="_SgBOqK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgBOaK1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgBOaa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgBOoq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOaq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOa61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBObK1MEeOdBunZhTRw1w" name="Index(LeftHandSide@69e1dac4)" incoming="_SgBOn61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBOba1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_SgBObq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SgBOoK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOb61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOcK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgBOca1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBOcq1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural)">
              <argument xmi:id="_SgBOc61MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_SgBOoK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOdK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOda1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgBOdq1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_SgBOoa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOd61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOeK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBOea1MEeOdBunZhTRw1w" name="Fork(Value(2).result)" outgoing="_SgBOo61MEeOdBunZhTRw1w _SgBOpa1MEeOdBunZhTRw1w" incoming="_SgBOoa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_SgBOeq1MEeOdBunZhTRw1w" name="Remove(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBOe61MEeOdBunZhTRw1w" name="Remove(members).object" incoming="_SgBOoq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOfK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOfa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBOfq1MEeOdBunZhTRw1w" name="Remove(members).result" outgoing="_SgBOpK1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOf61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOgK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <removeAt xmi:id="_SgBOga1MEeOdBunZhTRw1w" name="Remove(members).removeAt" incoming="_SgBOo61MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOgq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOg61MEeOdBunZhTRw1w" value="1"/>
              </removeAt>
            </node>
            <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBOhK1MEeOdBunZhTRw1w" name="Write(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBOha1MEeOdBunZhTRw1w" name="Write(members).object" incoming="_SgBOpK1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOhq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOh61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBOiK1MEeOdBunZhTRw1w" name="Write(members).result" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOia1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOiq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:id="_SgBOi61MEeOdBunZhTRw1w" name="Write(members).value" incoming="_SgBOpq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOjK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOja1MEeOdBunZhTRw1w" value="1"/>
              </value>
              <insertAt xmi:id="_SgBOjq1MEeOdBunZhTRw1w" name="Write(members).insertAt" incoming="_SgBOpa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOj61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOkK1MEeOdBunZhTRw1w" value="1"/>
              </insertAt>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBOka1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@69e1dac4)" outgoing="_SgBOpq1MEeOdBunZhTRw1w" incoming="_SgBOp61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOkq1MEeOdBunZhTRw1w" name="RightHandSide@34b90d8d" outgoing="_SgBOqK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_SgBOk61MEeOdBunZhTRw1w" name="Call(Member)" operation="_SgB2R61MEeOdBunZhTRw1w">
                <result xmi:id="_SgBOlK1MEeOdBunZhTRw1w" name="Call(Member).result()" outgoing="_SgBOp61MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOla1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOlq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_SgBOl61MEeOdBunZhTRw1w" name="Call(Member).target" incoming="_SgBOnq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOmK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOma1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SgBOmq1MEeOdBunZhTRw1w" name="Create(Member)" classifier="_SgB1uq1MEeOdBunZhTRw1w">
                <result xmi:id="_SgBOm61MEeOdBunZhTRw1w" name="Create(Member).result" outgoing="_SgBOnq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOnK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOna1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOnq1MEeOdBunZhTRw1w" source="_SgBOm61MEeOdBunZhTRw1w" target="_SgBOl61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOn61MEeOdBunZhTRw1w" source="_SgBOZ61MEeOdBunZhTRw1w" target="_SgBObK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOoK1MEeOdBunZhTRw1w" source="_SgBObq1MEeOdBunZhTRw1w" target="_SgBOc61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOoa1MEeOdBunZhTRw1w" source="_SgBOdq1MEeOdBunZhTRw1w" target="_SgBOea1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOoq1MEeOdBunZhTRw1w" source="_SgBOaa1MEeOdBunZhTRw1w" target="_SgBOe61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOo61MEeOdBunZhTRw1w" source="_SgBOea1MEeOdBunZhTRw1w" target="_SgBOga1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOpK1MEeOdBunZhTRw1w" source="_SgBOfq1MEeOdBunZhTRw1w" target="_SgBOha1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOpa1MEeOdBunZhTRw1w" source="_SgBOea1MEeOdBunZhTRw1w" target="_SgBOjq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOpq1MEeOdBunZhTRw1w" source="_SgBOka1MEeOdBunZhTRw1w" target="_SgBOi61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOp61MEeOdBunZhTRw1w" source="_SgBOlK1MEeOdBunZhTRw1w" target="_SgBOka1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOqK1MEeOdBunZhTRw1w" source="_SgBOkq1MEeOdBunZhTRw1w" target="_SgBOZ61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOqa1MEeOdBunZhTRw1w" name="ExpressionStatement@231ba771" outgoing="_SgB1D61MEeOdBunZhTRw1w" incoming="_SgB1Dq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOqq1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@3c122241)" incoming="_SgBO761MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBOq61MEeOdBunZhTRw1w" name="Call(At)" incoming="_SgBOzK1MEeOdBunZhTRw1w">
                <argument xmi:id="_SgBOrK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SgBOyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOra1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOrq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <argument xmi:id="_SgBOr61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SgBOza1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOsK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOsa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgBOsq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SgBO661MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOs61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOtK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBOta1MEeOdBunZhTRw1w" name="Tuple@29f056c2" outgoing="_SgBOzK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SgBOtq1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_SgBOt61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgBOx61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOuK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOua1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBOuq1MEeOdBunZhTRw1w" name="Read(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
                  <object xmi:id="_SgBOu61MEeOdBunZhTRw1w" name="Read(members).object" incoming="_SgBOyK1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOvK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOva1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgBOvq1MEeOdBunZhTRw1w" name="Read(members).result" outgoing="_SgBOyq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOv61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOwK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SgBOwa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgBOyK1MEeOdBunZhTRw1w" incoming="_SgBOx61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBOwq1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_SgBOw61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgBOy61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBOxK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBOxa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SgBOxq1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOx61MEeOdBunZhTRw1w" source="_SgBOt61MEeOdBunZhTRw1w" target="_SgBOwa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOyK1MEeOdBunZhTRw1w" source="_SgBOwa1MEeOdBunZhTRw1w" target="_SgBOu61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBOya1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SgBOza1MEeOdBunZhTRw1w" incoming="_SgBOy61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOyq1MEeOdBunZhTRw1w" source="_SgBOvq1MEeOdBunZhTRw1w" target="_SgBOrK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOy61MEeOdBunZhTRw1w" source="_SgBOw61MEeOdBunZhTRw1w" target="_SgBOya1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgBOzK1MEeOdBunZhTRw1w" source="_SgBOta1MEeOdBunZhTRw1w" target="_SgBOq61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBOza1MEeOdBunZhTRw1w" source="_SgBOya1MEeOdBunZhTRw1w" target="_SgBOr61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgBOzq1MEeOdBunZhTRw1w" name="Clear(name)" structuralFeature="_SgB1wa1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBOz61MEeOdBunZhTRw1w" name="Clear(name).object" incoming="_SgBO661MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO0K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO0a1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBO0q1MEeOdBunZhTRw1w" name="Clear(name).result" outgoing="_SgBO7a1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO061MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO1K1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBO1a1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@3c122241)" outgoing="_SgBO7K1MEeOdBunZhTRw1w" incoming="_SgBO7q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBO1q1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::name)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBO161MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_SgB1wa1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgBO2K1MEeOdBunZhTRw1w" name="Write(name).object" incoming="_SgBO7a1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO2a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO2q1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBO261MEeOdBunZhTRw1w" name="Write(name).result" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO3K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO3a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgBO3q1MEeOdBunZhTRw1w" name="Write(name).value" incoming="_SgBO5K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO361MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO4K1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgBO4a1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::name).input(Expressions_Object::Member::name)" outgoing="_SgBO5K1MEeOdBunZhTRw1w" incoming="_SgBO7K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO4q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO461MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBO5K1MEeOdBunZhTRw1w" source="_SgBO4a1MEeOdBunZhTRw1w" target="_SgBO3q1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBO5a1MEeOdBunZhTRw1w" name="RightHandSide@64b842fe" outgoing="_SgBO761MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBO5q1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;)">
                <result xmi:id="_SgBO561MEeOdBunZhTRw1w" name="Value(&quot;A&quot;).result" outgoing="_SgBO7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO6K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO6a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBO6q1MEeOdBunZhTRw1w" value="A">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBO661MEeOdBunZhTRw1w" source="_SgBOsq1MEeOdBunZhTRw1w" target="_SgBOz61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBO7K1MEeOdBunZhTRw1w" source="_SgBO1a1MEeOdBunZhTRw1w" target="_SgBO4a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBO7a1MEeOdBunZhTRw1w" source="_SgBO0q1MEeOdBunZhTRw1w" target="_SgBO2K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBO7q1MEeOdBunZhTRw1w" source="_SgBO561MEeOdBunZhTRw1w" target="_SgBO1a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBO761MEeOdBunZhTRw1w" source="_SgBO5a1MEeOdBunZhTRw1w" target="_SgBOqq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBO8K1MEeOdBunZhTRw1w" name="ExpressionStatement@3ba2e833" outgoing="_SgB1EK1MEeOdBunZhTRw1w" incoming="_SgB1D61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBO8a1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@5a3f141d)" incoming="_SgBPNq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBO8q1MEeOdBunZhTRw1w" name="Call(At)" incoming="_SgBPE61MEeOdBunZhTRw1w">
                <argument xmi:id="_SgBO861MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SgBPEa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO9K1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO9a1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <argument xmi:id="_SgBO9q1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SgBPFK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO961MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO-K1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgBO-a1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SgBPMq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO-q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBO-61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBO_K1MEeOdBunZhTRw1w" name="Tuple@34d7161c" outgoing="_SgBPE61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SgBO_a1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_SgBO_q1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgBPDq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBO_61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPAK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBPAa1MEeOdBunZhTRw1w" name="Read(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
                  <object xmi:id="_SgBPAq1MEeOdBunZhTRw1w" name="Read(members).object" incoming="_SgBPD61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPA61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPBK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgBPBa1MEeOdBunZhTRw1w" name="Read(members).result" outgoing="_SgBPEa1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPBq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPB61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SgBPCK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgBPD61MEeOdBunZhTRw1w" incoming="_SgBPDq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBPCa1MEeOdBunZhTRw1w" name="Value(2)">
                  <result xmi:id="_SgBPCq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SgBPEq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPC61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPDK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SgBPDa1MEeOdBunZhTRw1w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPDq1MEeOdBunZhTRw1w" source="_SgBO_q1MEeOdBunZhTRw1w" target="_SgBPCK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPD61MEeOdBunZhTRw1w" source="_SgBPCK1MEeOdBunZhTRw1w" target="_SgBPAq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBPEK1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SgBPFK1MEeOdBunZhTRw1w" incoming="_SgBPEq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPEa1MEeOdBunZhTRw1w" source="_SgBPBa1MEeOdBunZhTRw1w" target="_SgBO861MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPEq1MEeOdBunZhTRw1w" source="_SgBPCq1MEeOdBunZhTRw1w" target="_SgBPEK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgBPE61MEeOdBunZhTRw1w" source="_SgBO_K1MEeOdBunZhTRw1w" target="_SgBO8q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPFK1MEeOdBunZhTRw1w" source="_SgBPEK1MEeOdBunZhTRw1w" target="_SgBO9q1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgBPFa1MEeOdBunZhTRw1w" name="Clear(name)" structuralFeature="_SgB1wa1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBPFq1MEeOdBunZhTRw1w" name="Clear(name).object" incoming="_SgBPMq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPF61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPGK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBPGa1MEeOdBunZhTRw1w" name="Clear(name).result" outgoing="_SgBPNK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPGq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPG61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBPHK1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@5a3f141d)" outgoing="_SgBPM61MEeOdBunZhTRw1w" incoming="_SgBPNa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPHa1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::name)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBPHq1MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_SgB1wa1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgBPH61MEeOdBunZhTRw1w" name="Write(name).object" incoming="_SgBPNK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPIK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPIa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBPIq1MEeOdBunZhTRw1w" name="Write(name).result" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPI61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPJK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgBPJa1MEeOdBunZhTRw1w" name="Write(name).value" incoming="_SgBPK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPJq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPJ61MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgBPKK1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::name).input(Expressions_Object::Member::name)" outgoing="_SgBPK61MEeOdBunZhTRw1w" incoming="_SgBPM61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPKa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPKq1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPK61MEeOdBunZhTRw1w" source="_SgBPKK1MEeOdBunZhTRw1w" target="_SgBPJa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPLK1MEeOdBunZhTRw1w" name="RightHandSide@636e520f" outgoing="_SgBPNq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBPLa1MEeOdBunZhTRw1w" name="Value(&quot;B&quot;)">
                <result xmi:id="_SgBPLq1MEeOdBunZhTRw1w" name="Value(&quot;B&quot;).result" outgoing="_SgBPNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPL61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPMK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBPMa1MEeOdBunZhTRw1w" value="B">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPMq1MEeOdBunZhTRw1w" source="_SgBO-a1MEeOdBunZhTRw1w" target="_SgBPFq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPM61MEeOdBunZhTRw1w" source="_SgBPHK1MEeOdBunZhTRw1w" target="_SgBPKK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPNK1MEeOdBunZhTRw1w" source="_SgBPGa1MEeOdBunZhTRw1w" target="_SgBPH61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPNa1MEeOdBunZhTRw1w" source="_SgBPLq1MEeOdBunZhTRw1w" target="_SgBPHK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBPNq1MEeOdBunZhTRw1w" source="_SgBPLK1MEeOdBunZhTRw1w" target="_SgBO8a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPN61MEeOdBunZhTRw1w" name="ExpressionStatement@1ca569d1" outgoing="_SgB1Eq1MEeOdBunZhTRw1w" incoming="_SgB1EK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SgBPOK1MEeOdBunZhTRw1w" name="Fork(member)@3daa432" outgoing="_SgB1Ea1MEeOdBunZhTRw1w _SgB1E61MEeOdBunZhTRw1w _SgB1Ga1MEeOdBunZhTRw1w _SgB1IK1MEeOdBunZhTRw1w" incoming="_SgBPXa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPOa1MEeOdBunZhTRw1w" name="RightHandSide@751d098">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBPOq1MEeOdBunZhTRw1w" name="Call(At)" incoming="_SgBPW61MEeOdBunZhTRw1w">
                <argument xmi:id="_SgBPO61MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SgBPWa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPPK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPPa1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <argument xmi:id="_SgBPPq1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SgBPXK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPP61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPQK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgBPQa1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SgBPXa1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPQq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPQ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPRK1MEeOdBunZhTRw1w" name="Tuple@ceed296" outgoing="_SgBPW61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SgBPRa1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_SgBPRq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgBPVq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPR61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPSK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgBPSa1MEeOdBunZhTRw1w" name="Read(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
                  <object xmi:id="_SgBPSq1MEeOdBunZhTRw1w" name="Read(members).object" incoming="_SgBPV61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPS61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPTK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgBPTa1MEeOdBunZhTRw1w" name="Read(members).result" outgoing="_SgBPWa1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPTq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPT61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SgBPUK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgBPV61MEeOdBunZhTRw1w" incoming="_SgBPVq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBPUa1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_SgBPUq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgBPWq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPU61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPVK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SgBPVa1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPVq1MEeOdBunZhTRw1w" source="_SgBPRq1MEeOdBunZhTRw1w" target="_SgBPUK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPV61MEeOdBunZhTRw1w" source="_SgBPUK1MEeOdBunZhTRw1w" target="_SgBPSq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgBPWK1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SgBPXK1MEeOdBunZhTRw1w" incoming="_SgBPWq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPWa1MEeOdBunZhTRw1w" source="_SgBPTa1MEeOdBunZhTRw1w" target="_SgBPO61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPWq1MEeOdBunZhTRw1w" source="_SgBPUq1MEeOdBunZhTRw1w" target="_SgBPWK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgBPW61MEeOdBunZhTRw1w" source="_SgBPRK1MEeOdBunZhTRw1w" target="_SgBPOq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPXK1MEeOdBunZhTRw1w" source="_SgBPWK1MEeOdBunZhTRw1w" target="_SgBPPq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPXa1MEeOdBunZhTRw1w" source="_SgBPQa1MEeOdBunZhTRw1w" target="_SgBPOK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPXq1MEeOdBunZhTRw1w" name="ExpressionStatement@4b158eb7" outgoing="_SgB1FK1MEeOdBunZhTRw1w" incoming="_SgB1Eq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPX61MEeOdBunZhTRw1w" name="Expression(LeftHandSide@1efee7a5)" incoming="_SgBPgK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgBPYK1MEeOdBunZhTRw1w" name="Clear(isActive)" structuralFeature="_SgB1vq1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBPYa1MEeOdBunZhTRw1w" name="Clear(isActive).object" incoming="_SgB1Ea1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPYq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPY61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBPZK1MEeOdBunZhTRw1w" name="Clear(isActive).result" outgoing="_SgBPfq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPZa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPZq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBPZ61MEeOdBunZhTRw1w" name="Fork(LeftHandSide@1efee7a5)" outgoing="_SgBPfa1MEeOdBunZhTRw1w" incoming="_SgBPf61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPaK1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::isActive)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBPaa1MEeOdBunZhTRw1w" name="Write(isActive)" structuralFeature="_SgB1vq1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgBPaq1MEeOdBunZhTRw1w" name="Write(isActive).object" incoming="_SgBPfq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPa61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPbK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBPba1MEeOdBunZhTRw1w" name="Write(isActive).result" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPbq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPb61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgBPcK1MEeOdBunZhTRw1w" name="Write(isActive).value" incoming="_SgBPdq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPcq1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgBPc61MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::isActive).input(Expressions_Object::Member::isActive)" outgoing="_SgBPdq1MEeOdBunZhTRw1w" incoming="_SgBPfa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPdK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPda1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPdq1MEeOdBunZhTRw1w" source="_SgBPc61MEeOdBunZhTRw1w" target="_SgBPcK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBPd61MEeOdBunZhTRw1w" name="RightHandSide@75a792d8" outgoing="_SgBPgK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBPeK1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SgBPea1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SgBPf61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBPeq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBPe61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SgBPfK1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPfa1MEeOdBunZhTRw1w" source="_SgBPZ61MEeOdBunZhTRw1w" target="_SgBPc61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPfq1MEeOdBunZhTRw1w" source="_SgBPZK1MEeOdBunZhTRw1w" target="_SgBPaq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBPf61MEeOdBunZhTRw1w" source="_SgBPea1MEeOdBunZhTRw1w" target="_SgBPZ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBPgK1MEeOdBunZhTRw1w" source="_SgBPd61MEeOdBunZhTRw1w" target="_SgBPX61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBy8K1MEeOdBunZhTRw1w" name="ExpressionStatement@6a0b1825" outgoing="_SgB1Fa1MEeOdBunZhTRw1w" incoming="_SgB1FK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBy8a1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@7378cae4)" incoming="_SgBzEq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgBy8q1MEeOdBunZhTRw1w" name="Clear(address)" structuralFeature="_SgB1xK1MEeOdBunZhTRw1w">
              <object xmi:id="_SgBy861MEeOdBunZhTRw1w" name="Clear(address).object" incoming="_SgB1E61MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBy9K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBy9a1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBy9q1MEeOdBunZhTRw1w" name="Clear(address).result" outgoing="_SgBzEK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBy961MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBy-K1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBy-a1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@7378cae4)" outgoing="_SgBzD61MEeOdBunZhTRw1w" incoming="_SgBzEa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBy-q1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::address)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBy-61MEeOdBunZhTRw1w" name="Write(address)" structuralFeature="_SgB1xK1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgBy_K1MEeOdBunZhTRw1w" name="Write(address).object" incoming="_SgBzEK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBy_a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBy_q1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgBy_61MEeOdBunZhTRw1w" name="Write(address).result" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzAK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzAa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgBzAq1MEeOdBunZhTRw1w" name="Write(address).value" incoming="_SgBzCK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzA61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzBK1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgBzBa1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Member::address).input(Expressions_Object::Member::address)" outgoing="_SgBzCK1MEeOdBunZhTRw1w" incoming="_SgBzD61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzBq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzB61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzCK1MEeOdBunZhTRw1w" source="_SgBzBa1MEeOdBunZhTRw1w" target="_SgBzAq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzCa1MEeOdBunZhTRw1w" name="RightHandSide@1f0750d5" outgoing="_SgBzEq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzCq1MEeOdBunZhTRw1w" name="Value(&quot;Easy Street&quot;)">
                <result xmi:id="_SgBzC61MEeOdBunZhTRw1w" name="Value(&quot;Easy Street&quot;).result" outgoing="_SgBzEa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzDK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzDa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgBzDq1MEeOdBunZhTRw1w" value="Easy Street">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzD61MEeOdBunZhTRw1w" source="_SgBy-a1MEeOdBunZhTRw1w" target="_SgBzBa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzEK1MEeOdBunZhTRw1w" source="_SgBy9q1MEeOdBunZhTRw1w" target="_SgBy_K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzEa1MEeOdBunZhTRw1w" source="_SgBzC61MEeOdBunZhTRw1w" target="_SgBy-a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgBzEq1MEeOdBunZhTRw1w" source="_SgBzCa1MEeOdBunZhTRw1w" target="_SgBy8a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzE61MEeOdBunZhTRw1w" name="ExpressionStatement@5aeb33a1" outgoing="_SgB1F61MEeOdBunZhTRw1w" incoming="_SgB1Fa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SgBzFK1MEeOdBunZhTRw1w" name="Fork(customer0)@2efb2187" outgoing="_SgB1Fq1MEeOdBunZhTRw1w _SgB1Ia1MEeOdBunZhTRw1w" incoming="_SgBzpK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzFa1MEeOdBunZhTRw1w" name="RightHandSide@69563e29">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzFq1MEeOdBunZhTRw1w" name="Create(Expressions_Object::Customer)" incoming="_SgBzo61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzF61MEeOdBunZhTRw1w" name="Value(Customer)">
                  <result xmi:id="_SgBzGK1MEeOdBunZhTRw1w" name="Value(Customer).result" outgoing="_SgBzi61MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzGa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzGq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_SgBzG61MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" instance="_SgB2Vq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBzHK1MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_SgB2Ta1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SgBzHa1MEeOdBunZhTRw1w" name="Write(name).object" incoming="_SgBzi61MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzHq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzH61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgBzIK1MEeOdBunZhTRw1w" name="Write(name).result" outgoing="_SgBzja1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzIa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzIq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SgBzI61MEeOdBunZhTRw1w" name="Write(name).value" incoming="_SgBziq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzJK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzJa1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBzJq1MEeOdBunZhTRw1w" name="Write(email)" structuralFeature="_SgB2UK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SgBzJ61MEeOdBunZhTRw1w" name="Write(email).object" incoming="_SgBzja1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzKK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzKa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgBzKq1MEeOdBunZhTRw1w" name="Write(email).result" outgoing="_SgBzjq1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzK61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzLK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SgBzLa1MEeOdBunZhTRw1w" name="Write(email).value" incoming="_SgBzjK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzLq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzL61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <node xmi:type="uml:LoopNode" xmi:id="_SgBzMK1MEeOdBunZhTRw1w" name="Iterate(Write(address))" bodyOutput="_SgBzNa1MEeOdBunZhTRw1w _SgBzW61MEeOdBunZhTRw1w" bodyPart="_SgBzMa1MEeOdBunZhTRw1w _SgBzPq1MEeOdBunZhTRw1w _SgBzRK1MEeOdBunZhTRw1w _SgBzSq1MEeOdBunZhTRw1w _SgBzVK1MEeOdBunZhTRw1w" decider="_SgBzYq1MEeOdBunZhTRw1w" isTestedFirst="true" test="_SgBzXq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBzMa1MEeOdBunZhTRw1w" name="Write(address)" structuralFeature="_SgB2U61MEeOdBunZhTRw1w">
                    <object xmi:id="_SgBzMq1MEeOdBunZhTRw1w" name="Write(address).object" incoming="_SgBzZq1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzM61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzNK1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_SgBzNa1MEeOdBunZhTRw1w" name="Write(address).result" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzNq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzN61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:id="_SgBzOK1MEeOdBunZhTRw1w" name="Write(address).value" incoming="_SgBza61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzOa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzOq1MEeOdBunZhTRw1w" value="1"/>
                    </value>
                    <insertAt xmi:id="_SgBzO61MEeOdBunZhTRw1w" name="Write(address).insertAt" incoming="_SgBzZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzPK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzPa1MEeOdBunZhTRw1w" value="1"/>
                    </insertAt>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzPq1MEeOdBunZhTRw1w" name="Value(*)">
                    <result xmi:id="_SgBzP61MEeOdBunZhTRw1w" name="Value(*).result" outgoing="_SgBzZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzQK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzQa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzQq1MEeOdBunZhTRw1w" value="*">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SgBzQ61MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_SgBzaa1MEeOdBunZhTRw1w _SgBzbK1MEeOdBunZhTRw1w _SgBzbq1MEeOdBunZhTRw1w" incoming="_SgBzZ61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzRK1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_SgBzRa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgBzaK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzRq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzR61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SgBzSK1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SgBzSa1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_SgBzaq1MEeOdBunZhTRw1w _SgBzba1MEeOdBunZhTRw1w" incoming="_SgBzaK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBzSq1MEeOdBunZhTRw1w" name="Call(ListGet)">
                    <argument xmi:id="_SgBzS61MEeOdBunZhTRw1w" name="Call(ListGet).argument(list)" incoming="_SgBzaa1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzTK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzTa1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_SgBzTq1MEeOdBunZhTRw1w" name="Call(ListGet).argument(index)" incoming="_SgBzaq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzT61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzUK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgBzUa1MEeOdBunZhTRw1w" name="Call(ListGet).result(result)" outgoing="_SgBza61MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzUq1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzU61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListGet"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBzVK1MEeOdBunZhTRw1w" name="Call(ExcludeAt)">
                    <argument xmi:id="_SgBzVa1MEeOdBunZhTRw1w" name="Call(ExcludeAt).argument(seq)" incoming="_SgBzbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzVq1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzV61MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_SgBzWK1MEeOdBunZhTRw1w" name="Call(ExcludeAt).argument(index)" incoming="_SgBzba1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzWa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzWq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgBzW61MEeOdBunZhTRw1w" name="Call(ExcludeAt).result()" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzXK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzXa1MEeOdBunZhTRw1w" value="*"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBzXq1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
                    <argument xmi:id="_SgBzX61MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SgBzbq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzYK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzYa1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <result xmi:id="_SgBzYq1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzY61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzZK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzZa1MEeOdBunZhTRw1w" source="_SgBzP61MEeOdBunZhTRw1w" target="_SgBzO61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzZq1MEeOdBunZhTRw1w" source="_SgBzb61MEeOdBunZhTRw1w" target="_SgBzMq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzZ61MEeOdBunZhTRw1w" source="_SgBzcq1MEeOdBunZhTRw1w" target="_SgBzQ61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzaK1MEeOdBunZhTRw1w" source="_SgBzRa1MEeOdBunZhTRw1w" target="_SgBzSa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzaa1MEeOdBunZhTRw1w" source="_SgBzQ61MEeOdBunZhTRw1w" target="_SgBzS61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzaq1MEeOdBunZhTRw1w" source="_SgBzSa1MEeOdBunZhTRw1w" target="_SgBzTq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBza61MEeOdBunZhTRw1w" source="_SgBzUa1MEeOdBunZhTRw1w" target="_SgBzOK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzbK1MEeOdBunZhTRw1w" source="_SgBzQ61MEeOdBunZhTRw1w" target="_SgBzVa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzba1MEeOdBunZhTRw1w" source="_SgBzSa1MEeOdBunZhTRw1w" target="_SgBzWK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzbq1MEeOdBunZhTRw1w" source="_SgBzQ61MEeOdBunZhTRw1w" target="_SgBzX61MEeOdBunZhTRw1w"/>
                  <loopVariable xmi:id="_SgBzb61MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariable()(Write(email).result)" outgoing="_SgBzZq1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzcK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzca1MEeOdBunZhTRw1w" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_SgBzcq1MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariable()(value)" outgoing="_SgBzZ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzc61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzdK1MEeOdBunZhTRw1w" value="*"/>
                  </loopVariable>
                  <loopVariableInput xmi:id="_SgBzda1MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariableInput(Write(email).result)" incoming="_SgBzjq1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzdq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzd61MEeOdBunZhTRw1w" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_SgBzeK1MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariableInput(value)" incoming="_SgBzj61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzea1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzeq1MEeOdBunZhTRw1w" value="*"/>
                  </loopVariableInput>
                  <result xmi:id="_SgBze61MEeOdBunZhTRw1w" name="Iterate(Write(address)).result(Write(email).result)" outgoing="_SgBzpK1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzfK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzfa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <result xmi:id="_SgBzfq1MEeOdBunZhTRw1w" name="Iterate(Write(address)).result(value)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzf61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzgK1MEeOdBunZhTRw1w" value="*"/>
                  </result>
                </node>
                <structuredNodeInput xmi:id="_SgBzga1MEeOdBunZhTRw1w" name="Create(Expressions_Object::Customer).input(Expressions_Object::Customer::name)" outgoing="_SgBziq1MEeOdBunZhTRw1w" incoming="_SgBzoK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzgq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzg61MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_SgBzhK1MEeOdBunZhTRw1w" name="Create(Expressions_Object::Customer).input(Expressions_Object::Customer::email)" outgoing="_SgBzjK1MEeOdBunZhTRw1w" incoming="_SgBzoa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzha1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzhq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_SgBzh61MEeOdBunZhTRw1w" name="Create(Expressions_Object::Customer).input(Expressions_Object::Customer::address)" outgoing="_SgBzj61MEeOdBunZhTRw1w" incoming="_SgBzoq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBziK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzia1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBziq1MEeOdBunZhTRw1w" source="_SgBzga1MEeOdBunZhTRw1w" target="_SgBzI61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzi61MEeOdBunZhTRw1w" source="_SgBzGK1MEeOdBunZhTRw1w" target="_SgBzHa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzjK1MEeOdBunZhTRw1w" source="_SgBzhK1MEeOdBunZhTRw1w" target="_SgBzLa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzja1MEeOdBunZhTRw1w" source="_SgBzIK1MEeOdBunZhTRw1w" target="_SgBzJ61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzjq1MEeOdBunZhTRw1w" source="_SgBzKq1MEeOdBunZhTRw1w" target="_SgBzda1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzj61MEeOdBunZhTRw1w" source="_SgBzh61MEeOdBunZhTRw1w" target="_SgBzeK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzkK1MEeOdBunZhTRw1w" name="Tuple@518acfa7" outgoing="_SgBzo61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzka1MEeOdBunZhTRw1w" name="Value(&quot;Fred&quot;)">
                  <result xmi:id="_SgBzkq1MEeOdBunZhTRw1w" name="Value(&quot;Fred&quot;).result" outgoing="_SgBzoK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzk61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzlK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SgBzla1MEeOdBunZhTRw1w" value="Fred">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzlq1MEeOdBunZhTRw1w" name="Value(&quot;fred@blah.com&quot;)">
                  <result xmi:id="_SgBzl61MEeOdBunZhTRw1w" name="Value(&quot;fred@blah.com&quot;).result" outgoing="_SgBzoa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzmK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzma1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SgBzmq1MEeOdBunZhTRw1w" value="fred@blah.com">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzm61MEeOdBunZhTRw1w" name="Value(&quot;Unknown&quot;)">
                  <result xmi:id="_SgBznK1MEeOdBunZhTRw1w" name="Value(&quot;Unknown&quot;).result" outgoing="_SgBzoq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzna1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBznq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SgBzn61MEeOdBunZhTRw1w" value="Unknown">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzoK1MEeOdBunZhTRw1w" source="_SgBzkq1MEeOdBunZhTRw1w" target="_SgBzga1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzoa1MEeOdBunZhTRw1w" source="_SgBzl61MEeOdBunZhTRw1w" target="_SgBzhK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzoq1MEeOdBunZhTRw1w" source="_SgBznK1MEeOdBunZhTRw1w" target="_SgBzh61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgBzo61MEeOdBunZhTRw1w" source="_SgBzkK1MEeOdBunZhTRw1w" target="_SgBzFq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBzpK1MEeOdBunZhTRw1w" source="_SgBze61MEeOdBunZhTRw1w" target="_SgBzFK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzpa1MEeOdBunZhTRw1w" name="ExpressionStatement@7574de1d" outgoing="_SgB1Gq1MEeOdBunZhTRw1w" incoming="_SgB1F61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SgBzpq1MEeOdBunZhTRw1w" name="Fork(customer1)@4ba27e29" outgoing="_SgB1GK1MEeOdBunZhTRw1w" incoming="_SgB1Fq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzp61MEeOdBunZhTRw1w" name="RightHandSide@1908dc8a"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzqK1MEeOdBunZhTRw1w" name="ExpressionStatement@26403adb" outgoing="_SgB1G61MEeOdBunZhTRw1w" incoming="_SgB1Gq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzqa1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@30eacebc)" incoming="_SgB0F61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgBzqq1MEeOdBunZhTRw1w" name="Clear(address)" structuralFeature="_SgB2U61MEeOdBunZhTRw1w">
              <object xmi:id="_SgBzq61MEeOdBunZhTRw1w" name="Clear(address).object" incoming="_SgB1GK1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzrK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzra1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgBzrq1MEeOdBunZhTRw1w" name="Clear(address).result" outgoing="_SgB0FK1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzr61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzsK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgBzsa1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@30eacebc)" outgoing="_SgB0E61MEeOdBunZhTRw1w" incoming="_SgB0Fq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgBzsq1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Customer::address)">
              <node xmi:type="uml:LoopNode" xmi:id="_SgBzs61MEeOdBunZhTRw1w" name="Iterate(Write(address))" bodyOutput="_SgBzuK1MEeOdBunZhTRw1w _SgBz3q1MEeOdBunZhTRw1w" bodyPart="_SgBztK1MEeOdBunZhTRw1w _SgBzwa1MEeOdBunZhTRw1w _SgBzx61MEeOdBunZhTRw1w _SgBzza1MEeOdBunZhTRw1w _SgBz161MEeOdBunZhTRw1w" decider="_SgBz5a1MEeOdBunZhTRw1w" isTestedFirst="true" test="_SgBz4a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgBztK1MEeOdBunZhTRw1w" name="Write(address)" structuralFeature="_SgB2U61MEeOdBunZhTRw1w">
                  <object xmi:id="_SgBzta1MEeOdBunZhTRw1w" name="Write(address).object" incoming="_SgBz6a1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBztq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzt61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgBzuK1MEeOdBunZhTRw1w" name="Write(address).result" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzua1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzuq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SgBzu61MEeOdBunZhTRw1w" name="Write(address).value" incoming="_SgBz7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzvK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzva1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                  <insertAt xmi:id="_SgBzvq1MEeOdBunZhTRw1w" name="Write(address).insertAt" incoming="_SgBz6K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzv61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzwK1MEeOdBunZhTRw1w" value="1"/>
                  </insertAt>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzwa1MEeOdBunZhTRw1w" name="Value(*)">
                  <result xmi:id="_SgBzwq1MEeOdBunZhTRw1w" name="Value(*).result" outgoing="_SgBz6K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzw61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzxK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzxa1MEeOdBunZhTRw1w" value="*">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SgBzxq1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_SgBz7K1MEeOdBunZhTRw1w _SgBz761MEeOdBunZhTRw1w _SgBz8a1MEeOdBunZhTRw1w" incoming="_SgBz6q1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgBzx61MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_SgBzyK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgBz661MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzya1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBzyq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SgBzy61MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SgBzzK1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_SgBz7a1MEeOdBunZhTRw1w _SgBz8K1MEeOdBunZhTRw1w" incoming="_SgBz661MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBzza1MEeOdBunZhTRw1w" name="Call(ListGet)">
                  <argument xmi:id="_SgBzzq1MEeOdBunZhTRw1w" name="Call(ListGet).argument(list)" incoming="_SgBz7K1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBzz61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz0K1MEeOdBunZhTRw1w" value="*"/>
                  </argument>
                  <argument xmi:id="_SgBz0a1MEeOdBunZhTRw1w" name="Call(ListGet).argument(index)" incoming="_SgBz7a1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz0q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz061MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SgBz1K1MEeOdBunZhTRw1w" name="Call(ListGet).result(result)" outgoing="_SgBz7q1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz1a1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz1q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListGet"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBz161MEeOdBunZhTRw1w" name="Call(ExcludeAt)">
                  <argument xmi:id="_SgBz2K1MEeOdBunZhTRw1w" name="Call(ExcludeAt).argument(seq)" incoming="_SgBz761MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz2a1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz2q1MEeOdBunZhTRw1w" value="*"/>
                  </argument>
                  <argument xmi:id="_SgBz261MEeOdBunZhTRw1w" name="Call(ExcludeAt).argument(index)" incoming="_SgBz8K1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz3K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz3a1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SgBz3q1MEeOdBunZhTRw1w" name="Call(ExcludeAt).result()" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz361MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz4K1MEeOdBunZhTRw1w" value="*"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgBz4a1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
                  <argument xmi:id="_SgBz4q1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SgBz8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz461MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz5K1MEeOdBunZhTRw1w" value="*"/>
                  </argument>
                  <result xmi:id="_SgBz5a1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz5q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz561MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz6K1MEeOdBunZhTRw1w" source="_SgBzwq1MEeOdBunZhTRw1w" target="_SgBzvq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz6a1MEeOdBunZhTRw1w" source="_SgBz8q1MEeOdBunZhTRw1w" target="_SgBzta1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz6q1MEeOdBunZhTRw1w" source="_SgBz9a1MEeOdBunZhTRw1w" target="_SgBzxq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz661MEeOdBunZhTRw1w" source="_SgBzyK1MEeOdBunZhTRw1w" target="_SgBzzK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz7K1MEeOdBunZhTRw1w" source="_SgBzxq1MEeOdBunZhTRw1w" target="_SgBzzq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz7a1MEeOdBunZhTRw1w" source="_SgBzzK1MEeOdBunZhTRw1w" target="_SgBz0a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz7q1MEeOdBunZhTRw1w" source="_SgBz1K1MEeOdBunZhTRw1w" target="_SgBzu61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz761MEeOdBunZhTRw1w" source="_SgBzxq1MEeOdBunZhTRw1w" target="_SgBz2K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz8K1MEeOdBunZhTRw1w" source="_SgBzzK1MEeOdBunZhTRw1w" target="_SgBz261MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgBz8a1MEeOdBunZhTRw1w" source="_SgBzxq1MEeOdBunZhTRw1w" target="_SgBz4q1MEeOdBunZhTRw1w"/>
                <loopVariable xmi:id="_SgBz8q1MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariable()(Clear(address).result)" outgoing="_SgBz6a1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz861MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz9K1MEeOdBunZhTRw1w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SgBz9a1MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariable()(value)" outgoing="_SgBz6q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz9q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz961MEeOdBunZhTRw1w" value="*"/>
                </loopVariable>
                <loopVariableInput xmi:id="_SgBz-K1MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariableInput(Clear(address).result)" incoming="_SgB0FK1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz-a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz-q1MEeOdBunZhTRw1w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SgBz-61MEeOdBunZhTRw1w" name="Iterate(Write(address)).loopVariableInput(value)" incoming="_SgB0B61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz_K1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgBz_a1MEeOdBunZhTRw1w" value="*"/>
                </loopVariableInput>
                <result xmi:id="_SgBz_q1MEeOdBunZhTRw1w" name="Iterate(Write(address)).result(Clear(address).result)" outgoing="_SgB0Fa1MEeOdBunZhTRw1w" type="_SgB2TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgBz_61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0AK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <result xmi:id="_SgB0Aa1MEeOdBunZhTRw1w" name="Iterate(Write(address)).result(value)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0Aq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0A61MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <structuredNodeInput xmi:id="_SgB0BK1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::Customer::address).input(Expressions_Object::Customer::address)" outgoing="_SgB0B61MEeOdBunZhTRw1w" incoming="_SgB0E61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0Ba1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Bq1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0B61MEeOdBunZhTRw1w" source="_SgB0BK1MEeOdBunZhTRw1w" target="_SgBz-61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgB0CK1MEeOdBunZhTRw1w" name="Fork(Iterate(Write(address)).result(Clear(address).result))" outgoing="_SgB1Iq1MEeOdBunZhTRw1w" incoming="_SgB0Fa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Ca1MEeOdBunZhTRw1w" name="RightHandSide@25f997c3" outgoing="_SgB0F61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB0Cq1MEeOdBunZhTRw1w" name="Read(address)" structuralFeature="_SgB1xK1MEeOdBunZhTRw1w">
                <object xmi:id="_SgB0C61MEeOdBunZhTRw1w" name="Read(address).object" incoming="_SgB0Eq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0DK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Da1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB0Dq1MEeOdBunZhTRw1w" name="Read(address).result" outgoing="_SgB0Fq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0D61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0EK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgB0Ea1MEeOdBunZhTRw1w" name="Fork(Fork(member)@3daa432)" outgoing="_SgB0Eq1MEeOdBunZhTRw1w" incoming="_SgB1Ga1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Eq1MEeOdBunZhTRw1w" source="_SgB0Ea1MEeOdBunZhTRw1w" target="_SgB0C61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0E61MEeOdBunZhTRw1w" source="_SgBzsa1MEeOdBunZhTRw1w" target="_SgB0BK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0FK1MEeOdBunZhTRw1w" source="_SgBzrq1MEeOdBunZhTRw1w" target="_SgBz-K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Fa1MEeOdBunZhTRw1w" source="_SgBz_q1MEeOdBunZhTRw1w" target="_SgB0CK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Fq1MEeOdBunZhTRw1w" source="_SgB0Dq1MEeOdBunZhTRw1w" target="_SgBzsa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB0F61MEeOdBunZhTRw1w" source="_SgB0Ca1MEeOdBunZhTRw1w" target="_SgBzqa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0GK1MEeOdBunZhTRw1w" name="ExpressionStatement@1ebfe3b8" outgoing="_SgB1HK1MEeOdBunZhTRw1w" incoming="_SgB1G61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Ga1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@4fd40df4)" incoming="_SgB0P61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB0Gq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB0G61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB0O61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0HK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Ha1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgB0Hq1MEeOdBunZhTRw1w" name="Clear(principal)" structuralFeature="_SgBL7a1MEeOdBunZhTRw1w">
              <object xmi:id="_SgB0H61MEeOdBunZhTRw1w" name="Clear(principal).object" incoming="_SgB0O61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0IK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Ia1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgB0Iq1MEeOdBunZhTRw1w" name="Clear(principal).result" outgoing="_SgB0Pa1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0I61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0JK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgB0Ja1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@4fd40df4)" outgoing="_SgB0PK1MEeOdBunZhTRw1w" incoming="_SgB0Pq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Jq1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::principal)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgB0J61MEeOdBunZhTRw1w" name="Write(principal)" structuralFeature="_SgBL7a1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgB0KK1MEeOdBunZhTRw1w" name="Write(principal).object" incoming="_SgB0Pa1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0Ka1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Kq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB0K61MEeOdBunZhTRw1w" name="Write(principal).result" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0LK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0La1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgB0Lq1MEeOdBunZhTRw1w" name="Write(principal).value" incoming="_SgB0NK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0L61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0MK1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgB0Ma1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::principal).input(Expressions_Object::principal)" outgoing="_SgB0NK1MEeOdBunZhTRw1w" incoming="_SgB0PK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0Mq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0M61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0NK1MEeOdBunZhTRw1w" source="_SgB0Ma1MEeOdBunZhTRw1w" target="_SgB0Lq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Na1MEeOdBunZhTRw1w" name="RightHandSide@2038eae4" outgoing="_SgB0P61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB0Nq1MEeOdBunZhTRw1w" name="Value(1000)">
                <result xmi:id="_SgB0N61MEeOdBunZhTRw1w" name="Value(1000).result" outgoing="_SgB0Pq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0OK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Oa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgB0Oq1MEeOdBunZhTRw1w" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0O61MEeOdBunZhTRw1w" source="_SgB0G61MEeOdBunZhTRw1w" target="_SgB0H61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0PK1MEeOdBunZhTRw1w" source="_SgB0Ja1MEeOdBunZhTRw1w" target="_SgB0Ma1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Pa1MEeOdBunZhTRw1w" source="_SgB0Iq1MEeOdBunZhTRw1w" target="_SgB0KK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Pq1MEeOdBunZhTRw1w" source="_SgB0N61MEeOdBunZhTRw1w" target="_SgB0Ja1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB0P61MEeOdBunZhTRw1w" source="_SgB0Na1MEeOdBunZhTRw1w" target="_SgB0Ga1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0QK1MEeOdBunZhTRw1w" name="ExpressionStatement@4d36517d" outgoing="_SgB1Ha1MEeOdBunZhTRw1w" incoming="_SgB1HK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Qa1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@7fe59541)" incoming="_SgB0Z61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB0Qq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB0Q61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB0Y61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0RK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Ra1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgB0Rq1MEeOdBunZhTRw1w" name="Clear(rate)" structuralFeature="_SgBL8K1MEeOdBunZhTRw1w">
              <object xmi:id="_SgB0R61MEeOdBunZhTRw1w" name="Clear(rate).object" incoming="_SgB0Y61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0SK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Sa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgB0Sq1MEeOdBunZhTRw1w" name="Clear(rate).result" outgoing="_SgB0Za1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0S61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0TK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgB0Ta1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@7fe59541)" outgoing="_SgB0ZK1MEeOdBunZhTRw1w" incoming="_SgB0Zq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Tq1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::rate)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgB0T61MEeOdBunZhTRw1w" name="Write(rate)" structuralFeature="_SgBL8K1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgB0UK1MEeOdBunZhTRw1w" name="Write(rate).object" incoming="_SgB0Za1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0Ua1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Uq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB0U61MEeOdBunZhTRw1w" name="Write(rate).result" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0VK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Va1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgB0Vq1MEeOdBunZhTRw1w" name="Write(rate).value" incoming="_SgB0XK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0V61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0WK1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgB0Wa1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::rate).input(Expressions_Object::rate)" outgoing="_SgB0XK1MEeOdBunZhTRw1w" incoming="_SgB0ZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0Wq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0W61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0XK1MEeOdBunZhTRw1w" source="_SgB0Wa1MEeOdBunZhTRw1w" target="_SgB0Vq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0Xa1MEeOdBunZhTRw1w" name="RightHandSide@1d8638ae" outgoing="_SgB0Z61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB0Xq1MEeOdBunZhTRw1w" name="Value(5)">
                <result xmi:id="_SgB0X61MEeOdBunZhTRw1w" name="Value(5).result" outgoing="_SgB0Zq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0YK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0Ya1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgB0Yq1MEeOdBunZhTRw1w" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Y61MEeOdBunZhTRw1w" source="_SgB0Q61MEeOdBunZhTRw1w" target="_SgB0R61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0ZK1MEeOdBunZhTRw1w" source="_SgB0Ta1MEeOdBunZhTRw1w" target="_SgB0Wa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Za1MEeOdBunZhTRw1w" source="_SgB0Sq1MEeOdBunZhTRw1w" target="_SgB0UK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0Zq1MEeOdBunZhTRw1w" source="_SgB0X61MEeOdBunZhTRw1w" target="_SgB0Ta1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB0Z61MEeOdBunZhTRw1w" source="_SgB0Xa1MEeOdBunZhTRw1w" target="_SgB0Qa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0aK1MEeOdBunZhTRw1w" name="ExpressionStatement@719f8f46" outgoing="_SgB1Hq1MEeOdBunZhTRw1w" incoming="_SgB1Ha1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0aa1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@48c076ce)" incoming="_SgB01K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB0aq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB0a61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB00K1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0bK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0ba1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SgB0bq1MEeOdBunZhTRw1w" name="Clear(interest)" structuralFeature="_SgBL861MEeOdBunZhTRw1w">
              <object xmi:id="_SgB0b61MEeOdBunZhTRw1w" name="Clear(interest).object" incoming="_SgB00K1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0cK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0ca1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgB0cq1MEeOdBunZhTRw1w" name="Clear(interest).result" outgoing="_SgB00q1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0c61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0dK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgB0da1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@48c076ce)" outgoing="_SgB00a1MEeOdBunZhTRw1w" incoming="_SgB0061MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0dq1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::interest)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgB0d61MEeOdBunZhTRw1w" name="Write(interest)" structuralFeature="_SgBL861MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgB0eK1MEeOdBunZhTRw1w" name="Write(interest).object" incoming="_SgB00q1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0ea1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0eq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB0e61MEeOdBunZhTRw1w" name="Write(interest).result" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0fK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0fa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgB0fq1MEeOdBunZhTRw1w" name="Write(interest).value" incoming="_SgB0hK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0f61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0gK1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_SgB0ga1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Object::interest).input(Expressions_Object::interest)" outgoing="_SgB0hK1MEeOdBunZhTRw1w" incoming="_SgB00a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0gq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0g61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0hK1MEeOdBunZhTRw1w" source="_SgB0ga1MEeOdBunZhTRw1w" target="_SgB0fq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0ha1MEeOdBunZhTRw1w" name="RightHandSide@47998b44" outgoing="_SgB01K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB0hq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB0h61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB0xq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0iK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0ia1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB0iq1MEeOdBunZhTRw1w" name="Read(principal)" structuralFeature="_SgBL7a1MEeOdBunZhTRw1w">
                <object xmi:id="_SgB0i61MEeOdBunZhTRw1w" name="Read(principal).object" incoming="_SgB0x61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0jK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0ja1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB0jq1MEeOdBunZhTRw1w" name="Read(principal).result" outgoing="_SgB0yq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0j61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0kK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgB0ka1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB0x61MEeOdBunZhTRw1w" incoming="_SgB0xq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB0kq1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB0k61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB0yK1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0lK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0la1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB0lq1MEeOdBunZhTRw1w" name="Read(rate)" structuralFeature="_SgBL8K1MEeOdBunZhTRw1w">
                <object xmi:id="_SgB0l61MEeOdBunZhTRw1w" name="Read(rate).object" incoming="_SgB0ya1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0mK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0ma1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB0mq1MEeOdBunZhTRw1w" name="Read(rate).result" outgoing="_SgB0y61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0m61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0nK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgB0na1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB0ya1MEeOdBunZhTRw1w" incoming="_SgB0yK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB0nq1MEeOdBunZhTRw1w" name="Call(*)">
                <argument xmi:id="_SgB0n61MEeOdBunZhTRw1w" name="Call(*).argument(x)" incoming="_SgB0yq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0oK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0oa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SgB0oq1MEeOdBunZhTRw1w" name="Call(*).argument(y)" incoming="_SgB0y61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0o61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0pK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgB0pa1MEeOdBunZhTRw1w" name="Call(*).result(result)" outgoing="_SgB0zK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0pq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0p61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB0qK1MEeOdBunZhTRw1w" name="Value(100)">
                <result xmi:id="_SgB0qa1MEeOdBunZhTRw1w" name="Value(100).result" outgoing="_SgB0za1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0qq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0q61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgB0rK1MEeOdBunZhTRw1w" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB0ra1MEeOdBunZhTRw1w" name="Call(Div)">
                <argument xmi:id="_SgB0rq1MEeOdBunZhTRw1w" name="Call(Div).argument(x)" incoming="_SgB0zK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0r61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0sK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SgB0sa1MEeOdBunZhTRw1w" name="Call(Div).argument(y)" incoming="_SgB0za1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0sq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0s61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgB0tK1MEeOdBunZhTRw1w" name="Call(Div).result(result)" outgoing="_SgB0zq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0ta1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0tq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB0t61MEeOdBunZhTRw1w" name="Value(10)">
                <result xmi:id="_SgB0uK1MEeOdBunZhTRw1w" name="Value(10).result" outgoing="_SgB0z61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0ua1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0uq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgB0u61MEeOdBunZhTRw1w" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB0vK1MEeOdBunZhTRw1w" name="Call(*)">
                <argument xmi:id="_SgB0va1MEeOdBunZhTRw1w" name="Call(*).argument(x)" incoming="_SgB0zq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0vq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0v61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SgB0wK1MEeOdBunZhTRw1w" name="Call(*).argument(y)" incoming="_SgB0z61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0wa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0wq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgB0w61MEeOdBunZhTRw1w" name="Call(*).result(result)" outgoing="_SgB0061MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0xK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0xa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0xq1MEeOdBunZhTRw1w" source="_SgB0h61MEeOdBunZhTRw1w" target="_SgB0ka1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0x61MEeOdBunZhTRw1w" source="_SgB0ka1MEeOdBunZhTRw1w" target="_SgB0i61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0yK1MEeOdBunZhTRw1w" source="_SgB0k61MEeOdBunZhTRw1w" target="_SgB0na1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0ya1MEeOdBunZhTRw1w" source="_SgB0na1MEeOdBunZhTRw1w" target="_SgB0l61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0yq1MEeOdBunZhTRw1w" source="_SgB0jq1MEeOdBunZhTRw1w" target="_SgB0n61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0y61MEeOdBunZhTRw1w" source="_SgB0mq1MEeOdBunZhTRw1w" target="_SgB0oq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0zK1MEeOdBunZhTRw1w" source="_SgB0pa1MEeOdBunZhTRw1w" target="_SgB0rq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0za1MEeOdBunZhTRw1w" source="_SgB0qa1MEeOdBunZhTRw1w" target="_SgB0sa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0zq1MEeOdBunZhTRw1w" source="_SgB0tK1MEeOdBunZhTRw1w" target="_SgB0va1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0z61MEeOdBunZhTRw1w" source="_SgB0uK1MEeOdBunZhTRw1w" target="_SgB0wK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB00K1MEeOdBunZhTRw1w" source="_SgB0a61MEeOdBunZhTRw1w" target="_SgB0b61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB00a1MEeOdBunZhTRw1w" source="_SgB0da1MEeOdBunZhTRw1w" target="_SgB0ga1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB00q1MEeOdBunZhTRw1w" source="_SgB0cq1MEeOdBunZhTRw1w" target="_SgB0eK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0061MEeOdBunZhTRw1w" source="_SgB0w61MEeOdBunZhTRw1w" target="_SgB0da1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB01K1MEeOdBunZhTRw1w" source="_SgB0ha1MEeOdBunZhTRw1w" target="_SgB0aa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB01a1MEeOdBunZhTRw1w" name="ExpressionStatement@30ac8faa" outgoing="_SgB1H61MEeOdBunZhTRw1w" incoming="_SgB1Hq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SgB01q1MEeOdBunZhTRw1w" name="Fork(names)@1e2b5ded" outgoing="_SgB1I61MEeOdBunZhTRw1w" incoming="_SgB09a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0161MEeOdBunZhTRw1w" name="RightHandSide@31238214">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB02K1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB02a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB08a1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB02q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0261MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB03K1MEeOdBunZhTRw1w" name="Read(members)" structuralFeature="_SgBL6q1MEeOdBunZhTRw1w">
                <object xmi:id="_SgB03a1MEeOdBunZhTRw1w" name="Read(members).object" incoming="_SgB08q1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB03q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0361MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB04K1MEeOdBunZhTRw1w" name="Read(members).result" outgoing="_SgB0861MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB04a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB04q1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SgB0461MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB08q1MEeOdBunZhTRw1w" incoming="_SgB08a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SgB05K1MEeOdBunZhTRw1w" name="Fork(Read(members).result)" outgoing="_SgB09K1MEeOdBunZhTRw1w" incoming="_SgB0861MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SgB05a1MEeOdBunZhTRw1w" name="Collect(Read(name))" mode="parallel" outputElement="_SgB08K1MEeOdBunZhTRw1w" inputElement="_SgB0761MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB05q1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SgB1wa1MEeOdBunZhTRw1w">
                  <object xmi:id="_SgB0561MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SgB07a1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB06K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB06a1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgB06q1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SgB07q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0661MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB07K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB07a1MEeOdBunZhTRw1w" source="_SgB0761MEeOdBunZhTRw1w" target="_SgB0561MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB07q1MEeOdBunZhTRw1w" source="_SgB06q1MEeOdBunZhTRw1w" target="_SgB08K1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SgB0761MEeOdBunZhTRw1w" name="Collect(Read(name)).inputElement" outgoing="_SgB07a1MEeOdBunZhTRw1w" incoming="_SgB09K1MEeOdBunZhTRw1w" regionAsInput="_SgB05a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SgB08K1MEeOdBunZhTRw1w" name="Collect(Read(name)).outputElement" outgoing="_SgB09a1MEeOdBunZhTRw1w" incoming="_SgB07q1MEeOdBunZhTRw1w" regionAsOutput="_SgB05a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB08a1MEeOdBunZhTRw1w" source="_SgB02a1MEeOdBunZhTRw1w" target="_SgB0461MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB08q1MEeOdBunZhTRw1w" source="_SgB0461MEeOdBunZhTRw1w" target="_SgB03a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0861MEeOdBunZhTRw1w" source="_SgB04K1MEeOdBunZhTRw1w" target="_SgB05K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB09K1MEeOdBunZhTRw1w" source="_SgB05K1MEeOdBunZhTRw1w" target="_SgB0761MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB09a1MEeOdBunZhTRw1w" source="_SgB08K1MEeOdBunZhTRw1w" target="_SgB01q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB09q1MEeOdBunZhTRw1w" name="ExpressionStatement@7cf90960" incoming="_SgB1H61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SgB0961MEeOdBunZhTRw1w" name="Fork(self)@477da607" outgoing="_SgB1JK1MEeOdBunZhTRw1w" incoming="_SgB0_a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB0-K1MEeOdBunZhTRw1w" name="RightHandSide@a1f3a3c">
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB0-a1MEeOdBunZhTRw1w" name="ReadSelf">
                <result xmi:id="_SgB0-q1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB0_a1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0-61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB0_K1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB0_a1MEeOdBunZhTRw1w" source="_SgB0-q1MEeOdBunZhTRw1w" target="_SgB0961MEeOdBunZhTRw1w"/>
          </node>
          <structuredNodeOutput xmi:id="_SgB0_q1MEeOdBunZhTRw1w" name="Output(member)" outgoing="_SgBOGK1MEeOdBunZhTRw1w" incoming="_SgB1IK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB0_61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1AK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SgB1Aa1MEeOdBunZhTRw1w" name="Output(customer0)" outgoing="_SgBOGa1MEeOdBunZhTRw1w" incoming="_SgB1Ia1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Aq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1A61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SgB1BK1MEeOdBunZhTRw1w" name="Output(customer1)" outgoing="_SgBOGq1MEeOdBunZhTRw1w" incoming="_SgB1Iq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Ba1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Bq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SgB1B61MEeOdBunZhTRw1w" name="Output(names)" outgoing="_SgBOG61MEeOdBunZhTRw1w" incoming="_SgB1I61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1CK1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Ca1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SgB1Cq1MEeOdBunZhTRw1w" name="Output(self)" outgoing="_SgBOHK1MEeOdBunZhTRw1w" incoming="_SgB1JK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1C61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1DK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Da1MEeOdBunZhTRw1w" source="_SgBOI61MEeOdBunZhTRw1w" target="_SgBOZq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Dq1MEeOdBunZhTRw1w" source="_SgBOZq1MEeOdBunZhTRw1w" target="_SgBOqa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1D61MEeOdBunZhTRw1w" source="_SgBOqa1MEeOdBunZhTRw1w" target="_SgBO8K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1EK1MEeOdBunZhTRw1w" source="_SgBO8K1MEeOdBunZhTRw1w" target="_SgBPN61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Ea1MEeOdBunZhTRw1w" source="_SgBPOK1MEeOdBunZhTRw1w" target="_SgBPYa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Eq1MEeOdBunZhTRw1w" source="_SgBPN61MEeOdBunZhTRw1w" target="_SgBPXq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1E61MEeOdBunZhTRw1w" source="_SgBPOK1MEeOdBunZhTRw1w" target="_SgBy861MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1FK1MEeOdBunZhTRw1w" source="_SgBPXq1MEeOdBunZhTRw1w" target="_SgBy8K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Fa1MEeOdBunZhTRw1w" source="_SgBy8K1MEeOdBunZhTRw1w" target="_SgBzE61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Fq1MEeOdBunZhTRw1w" source="_SgBzFK1MEeOdBunZhTRw1w" target="_SgBzpq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1F61MEeOdBunZhTRw1w" source="_SgBzE61MEeOdBunZhTRw1w" target="_SgBzpa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1GK1MEeOdBunZhTRw1w" source="_SgBzpq1MEeOdBunZhTRw1w" target="_SgBzq61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Ga1MEeOdBunZhTRw1w" source="_SgBPOK1MEeOdBunZhTRw1w" target="_SgB0Ea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Gq1MEeOdBunZhTRw1w" source="_SgBzpa1MEeOdBunZhTRw1w" target="_SgBzqK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1G61MEeOdBunZhTRw1w" source="_SgBzqK1MEeOdBunZhTRw1w" target="_SgB0GK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1HK1MEeOdBunZhTRw1w" source="_SgB0GK1MEeOdBunZhTRw1w" target="_SgB0QK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Ha1MEeOdBunZhTRw1w" source="_SgB0QK1MEeOdBunZhTRw1w" target="_SgB0aK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Hq1MEeOdBunZhTRw1w" source="_SgB0aK1MEeOdBunZhTRw1w" target="_SgB01a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1H61MEeOdBunZhTRw1w" source="_SgB01a1MEeOdBunZhTRw1w" target="_SgB09q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1IK1MEeOdBunZhTRw1w" source="_SgBPOK1MEeOdBunZhTRw1w" target="_SgB0_q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Ia1MEeOdBunZhTRw1w" source="_SgBzFK1MEeOdBunZhTRw1w" target="_SgB1Aa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Iq1MEeOdBunZhTRw1w" source="_SgB0CK1MEeOdBunZhTRw1w" target="_SgB1BK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1I61MEeOdBunZhTRw1w" source="_SgB01q1MEeOdBunZhTRw1w" target="_SgB1B61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1JK1MEeOdBunZhTRw1w" source="_SgB0961MEeOdBunZhTRw1w" target="_SgB1Cq1MEeOdBunZhTRw1w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgBOHa1MEeOdBunZhTRw1w" name="Output(member)" incoming="_SgBOGK1MEeOdBunZhTRw1w" parameter="_SgBOCa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgBOHq1MEeOdBunZhTRw1w" name="Output(customer0)" incoming="_SgBOGa1MEeOdBunZhTRw1w" parameter="_SgBODK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgBOH61MEeOdBunZhTRw1w" name="Output(customer1)" incoming="_SgBOGq1MEeOdBunZhTRw1w" parameter="_SgBOD61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgBOIK1MEeOdBunZhTRw1w" name="Output(names)" incoming="_SgBOG61MEeOdBunZhTRw1w" parameter="_SgBOEq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgBOIa1MEeOdBunZhTRw1w" name="Output(self)" incoming="_SgBOHK1MEeOdBunZhTRw1w" parameter="_SgBOFa1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgB1Ja1MEeOdBunZhTRw1w" name="Expressions_Object$method$1" specification="_SgB1ta1MEeOdBunZhTRw1w" group="_SgB1K61MEeOdBunZhTRw1w" node="_SgB1Kq1MEeOdBunZhTRw1w _SgB1K61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SgB1Jq1MEeOdBunZhTRw1w" name="" type="_SgBL4a1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1J61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1KK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Ka1MEeOdBunZhTRw1w" source="_SgB1Ma1MEeOdBunZhTRw1w" target="_SgB1Kq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_SgB1K61MEeOdBunZhTRw1w" name="Body(Expressions_Object$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB1LK1MEeOdBunZhTRw1w" name="Body" incoming="_SgB1V61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB1La1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SgB1Lq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB1Va1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1L61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1MK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SgB1Ma1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB1Ka1MEeOdBunZhTRw1w _SgB1Vq1MEeOdBunZhTRw1w _SgB1WK1MEeOdBunZhTRw1w" incoming="_SgB1Va1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SgB1Mq1MEeOdBunZhTRw1w" name="Call(Expressions_Object$initialization$1)" outgoing="_SgB1V61MEeOdBunZhTRw1w" incoming="_SgB1Xq1MEeOdBunZhTRw1w" operation="_SgB1pK1MEeOdBunZhTRw1w">
            <target xmi:id="_SgB1M61MEeOdBunZhTRw1w" name="Call(Expressions_Object$initialization$1).target" incoming="_SgB1Vq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1NK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Na1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB1Nq1MEeOdBunZhTRw1w" name="Read(Expressions_Object$initializationFlag$1)" structuralFeature="_SgBL561MEeOdBunZhTRw1w">
            <object xmi:id="_SgB1N61MEeOdBunZhTRw1w" name="Read(Expressions_Object$initializationFlag$1).object" incoming="_SgB1WK1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1OK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Oa1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SgB1Oq1MEeOdBunZhTRw1w" name="Read(Expressions_Object$initializationFlag$1).result" outgoing="_SgB1Wa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1O61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1PK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB1Pa1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SgB1Pq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SgB1Wa1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1P61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1QK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SgB1Qa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SgB1Wq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Qq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Q61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB1RK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SgB1Ra1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SgB1W61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Rq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1R61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SgB1SK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SgB1Sa1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SgB1Sq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SgB1Wq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1S61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1TK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SgB1Ta1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SgB1Xa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Tq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1T61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SgB1UK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SgB1W61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Ua1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Uq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SgB1U61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SgB1XK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SgB1VK1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Object$initializationFlag$1))" outgoing="_SgB1Xq1MEeOdBunZhTRw1w" incoming="_SgB1XK1MEeOdBunZhTRw1w _SgB1Xa1MEeOdBunZhTRw1w" decisionInputFlow="_SgB1Xa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Va1MEeOdBunZhTRw1w" source="_SgB1Lq1MEeOdBunZhTRw1w" target="_SgB1Ma1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Vq1MEeOdBunZhTRw1w" source="_SgB1Ma1MEeOdBunZhTRw1w" target="_SgB1M61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1V61MEeOdBunZhTRw1w" source="_SgB1Mq1MEeOdBunZhTRw1w" target="_SgB1LK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1WK1MEeOdBunZhTRw1w" source="_SgB1Ma1MEeOdBunZhTRw1w" target="_SgB1N61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Wa1MEeOdBunZhTRw1w" source="_SgB1Oq1MEeOdBunZhTRw1w" target="_SgB1Pq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Wq1MEeOdBunZhTRw1w" source="_SgB1Qa1MEeOdBunZhTRw1w" target="_SgB1Sq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1W61MEeOdBunZhTRw1w" source="_SgB1Ra1MEeOdBunZhTRw1w" target="_SgB1UK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1XK1MEeOdBunZhTRw1w" source="_SgB1U61MEeOdBunZhTRw1w" target="_SgB1VK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1Xa1MEeOdBunZhTRw1w" source="_SgB1Ta1MEeOdBunZhTRw1w" target="_SgB1VK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1Xq1MEeOdBunZhTRw1w" source="_SgB1VK1MEeOdBunZhTRw1w" target="_SgB1Mq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB1X61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgB1Kq1MEeOdBunZhTRw1w" name="Return" incoming="_SgB1Ka1MEeOdBunZhTRw1w" parameter="_SgB1Jq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgB1YK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SgB1ua1MEeOdBunZhTRw1w" group="_SgB1Ya1MEeOdBunZhTRw1w" node="_SgB1Ya1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SgB1Ya1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgB1Yq1MEeOdBunZhTRw1w" name="Expressions_Object$initialization$1" specification="_SgB1pK1MEeOdBunZhTRw1w" group="_SgB1Y61MEeOdBunZhTRw1w" node="_SgB1Y61MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SgB1Y61MEeOdBunZhTRw1w" name="Body(Expressions_Object$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB1ZK1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SgB1Za1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB1mq1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1Zq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1Z61MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SgB1aK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB1m61MEeOdBunZhTRw1w _SgB1nK1MEeOdBunZhTRw1w" incoming="_SgB1mq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB1aa1MEeOdBunZhTRw1w" name="Initialization" incoming="_SgB1oq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB1aq1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB1a61MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SgB1bK1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SgB1eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1ba1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1bq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SgB1b61MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgB1cK1MEeOdBunZhTRw1w" name="Write(Expressions_Object$initializationFlag$1)" structuralFeature="_SgBL561MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SgB1ca1MEeOdBunZhTRw1w" name="Write(Expressions_Object$initializationFlag$1).object" incoming="_SgB1m61MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1cq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1c61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SgB1dK1MEeOdBunZhTRw1w" name="Write(Expressions_Object$initializationFlag$1).result" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1da1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1dq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SgB1d61MEeOdBunZhTRw1w" name="Write(Expressions_Object$initializationFlag$1).value" incoming="_SgB1eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1eK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1ea1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1eq1MEeOdBunZhTRw1w" source="_SgB1bK1MEeOdBunZhTRw1w" target="_SgB1d61MEeOdBunZhTRw1w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB1e61MEeOdBunZhTRw1w" name="Read(Expressions_Object$initializationFlag$1)" structuralFeature="_SgBL561MEeOdBunZhTRw1w">
            <object xmi:id="_SgB1fK1MEeOdBunZhTRw1w" name="Read(Expressions_Object$initializationFlag$1).object" incoming="_SgB1nK1MEeOdBunZhTRw1w" type="_SgBL4a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1fa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1fq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SgB1f61MEeOdBunZhTRw1w" name="Read(Expressions_Object$initializationFlag$1).result" outgoing="_SgB1na1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1gK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1ga1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB1gq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SgB1g61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SgB1na1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1hK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1ha1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SgB1hq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SgB1nq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1h61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1iK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB1ia1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SgB1iq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SgB1n61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1i61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1jK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SgB1ja1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SgB1jq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SgB1j61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SgB1nq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1kK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1ka1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SgB1kq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SgB1oa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1k61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1lK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SgB1la1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SgB1n61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1lq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1l61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SgB1mK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SgB1oK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SgB1ma1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Object$initializationFlag$1))" outgoing="_SgB1oq1MEeOdBunZhTRw1w" incoming="_SgB1oK1MEeOdBunZhTRw1w _SgB1oa1MEeOdBunZhTRw1w" decisionInputFlow="_SgB1oa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1mq1MEeOdBunZhTRw1w" source="_SgB1Za1MEeOdBunZhTRw1w" target="_SgB1aK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1m61MEeOdBunZhTRw1w" source="_SgB1aK1MEeOdBunZhTRw1w" target="_SgB1ca1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1nK1MEeOdBunZhTRw1w" source="_SgB1aK1MEeOdBunZhTRw1w" target="_SgB1fK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1na1MEeOdBunZhTRw1w" source="_SgB1f61MEeOdBunZhTRw1w" target="_SgB1g61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1nq1MEeOdBunZhTRw1w" source="_SgB1hq1MEeOdBunZhTRw1w" target="_SgB1j61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1n61MEeOdBunZhTRw1w" source="_SgB1iq1MEeOdBunZhTRw1w" target="_SgB1la1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1oK1MEeOdBunZhTRw1w" source="_SgB1mK1MEeOdBunZhTRw1w" target="_SgB1ma1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1oa1MEeOdBunZhTRw1w" source="_SgB1kq1MEeOdBunZhTRw1w" target="_SgB1ma1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1oq1MEeOdBunZhTRw1w" source="_SgB1ma1MEeOdBunZhTRw1w" target="_SgB1aa1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB1o61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SgB1pK1MEeOdBunZhTRw1w" name="Expressions_Object$initialization$1" visibility="protected" method="_SgB1Yq1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_SgB1pa1MEeOdBunZhTRw1w" name="test" visibility="package" method="_SgBOCK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SgB1pq1MEeOdBunZhTRw1w" name="member" visibility="package" type="_SgB1uq1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1p61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1qK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgB1qa1MEeOdBunZhTRw1w" name="customer0" visibility="package" type="_SgB2TK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1qq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1q61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgB1rK1MEeOdBunZhTRw1w" name="customer1" visibility="package" type="_SgB2TK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1ra1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1rq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgB1r61MEeOdBunZhTRw1w" name="names" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1sK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1sa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SgB1sq1MEeOdBunZhTRw1w" name="self" visibility="package" type="_SgBL4a1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1s61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1tK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SgB1ta1MEeOdBunZhTRw1w" name="Expressions_Object" visibility="package" method="_SgB1Ja1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SgB1tq1MEeOdBunZhTRw1w" name="" visibility="package" type="_SgBL4a1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1t61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1uK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SgB1ua1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SgB1YK1MEeOdBunZhTRw1w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SgB1uq1MEeOdBunZhTRw1w" name="Member" visibility="package">
        <ownedAttribute xmi:id="_SgB1u61MEeOdBunZhTRw1w" name="Member$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1vK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1va1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SgB1vq1MEeOdBunZhTRw1w" name="isActive" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1v61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1wK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SgB1wa1MEeOdBunZhTRw1w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1wq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1w61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SgB1xK1MEeOdBunZhTRw1w" name="address" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1xa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1xq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgB1x61MEeOdBunZhTRw1w" name="Member$method$1" specification="_SgB2R61MEeOdBunZhTRw1w" group="_SgB1za1MEeOdBunZhTRw1w" node="_SgB1zK1MEeOdBunZhTRw1w _SgB1za1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SgB1yK1MEeOdBunZhTRw1w" name="" type="_SgB1uq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1ya1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1yq1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1y61MEeOdBunZhTRw1w" source="_SgB1061MEeOdBunZhTRw1w" target="_SgB1zK1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SgB1za1MEeOdBunZhTRw1w" name="Body(Member$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB1zq1MEeOdBunZhTRw1w" name="Body" incoming="_SgB1-a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB1z61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SgB10K1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB1961MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB10a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB10q1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgB1061MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB1y61MEeOdBunZhTRw1w _SgB1-K1MEeOdBunZhTRw1w _SgB1-q1MEeOdBunZhTRw1w" incoming="_SgB1961MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SgB11K1MEeOdBunZhTRw1w" name="Call(Member$initialization$1)" outgoing="_SgB1-a1MEeOdBunZhTRw1w" incoming="_SgB2AK1MEeOdBunZhTRw1w" operation="_SgB2Rq1MEeOdBunZhTRw1w">
              <target xmi:id="_SgB11a1MEeOdBunZhTRw1w" name="Call(Member$initialization$1).target" incoming="_SgB1-K1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB11q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1161MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB12K1MEeOdBunZhTRw1w" name="Read(Member$initializationFlag$1)" structuralFeature="_SgB1u61MEeOdBunZhTRw1w">
              <object xmi:id="_SgB12a1MEeOdBunZhTRw1w" name="Read(Member$initializationFlag$1).object" incoming="_SgB1-q1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB12q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB1261MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgB13K1MEeOdBunZhTRw1w" name="Read(Member$initializationFlag$1).result" outgoing="_SgB1-61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB13a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB13q1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB1361MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SgB14K1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SgB1-61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB14a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB14q1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SgB1461MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SgB1_K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB15K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB15a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB15q1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SgB1561MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SgB1_a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB16K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB16a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgB16q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SgB1661MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SgB17K1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SgB1_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB17a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB17q1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SgB1761MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SgB1_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB18K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB18a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SgB18q1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SgB1_a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB1861MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB19K1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SgB19a1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SgB1_q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SgB19q1MEeOdBunZhTRw1w" name="Decision(Test(Member$initializationFlag$1))" outgoing="_SgB2AK1MEeOdBunZhTRw1w" incoming="_SgB1_q1MEeOdBunZhTRw1w _SgB1_61MEeOdBunZhTRw1w" decisionInputFlow="_SgB1_61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1961MEeOdBunZhTRw1w" source="_SgB10K1MEeOdBunZhTRw1w" target="_SgB1061MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1-K1MEeOdBunZhTRw1w" source="_SgB1061MEeOdBunZhTRw1w" target="_SgB11a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1-a1MEeOdBunZhTRw1w" source="_SgB11K1MEeOdBunZhTRw1w" target="_SgB1zq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1-q1MEeOdBunZhTRw1w" source="_SgB1061MEeOdBunZhTRw1w" target="_SgB12a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1-61MEeOdBunZhTRw1w" source="_SgB13K1MEeOdBunZhTRw1w" target="_SgB14K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1_K1MEeOdBunZhTRw1w" source="_SgB1461MEeOdBunZhTRw1w" target="_SgB17K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1_a1MEeOdBunZhTRw1w" source="_SgB1561MEeOdBunZhTRw1w" target="_SgB18q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB1_q1MEeOdBunZhTRw1w" source="_SgB19a1MEeOdBunZhTRw1w" target="_SgB19q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB1_61MEeOdBunZhTRw1w" source="_SgB1761MEeOdBunZhTRw1w" target="_SgB19q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB2AK1MEeOdBunZhTRw1w" source="_SgB19q1MEeOdBunZhTRw1w" target="_SgB11K1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB2Aa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgB1zK1MEeOdBunZhTRw1w" name="Return" incoming="_SgB1y61MEeOdBunZhTRw1w" parameter="_SgB1yK1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgB2Aq1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SgB2S61MEeOdBunZhTRw1w" group="_SgB2A61MEeOdBunZhTRw1w" node="_SgB2A61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SgB2A61MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SgB2BK1MEeOdBunZhTRw1w" name="Member$initialization$1" specification="_SgB2Rq1MEeOdBunZhTRw1w" group="_SgB2Ba1MEeOdBunZhTRw1w" node="_SgB2Ba1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SgB2Ba1MEeOdBunZhTRw1w" name="Body(Member$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SgB2Bq1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SgB2B61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SgB2PK1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2CK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Ca1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgB2Cq1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SgB2Pa1MEeOdBunZhTRw1w _SgB2Pq1MEeOdBunZhTRw1w" incoming="_SgB2PK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB2C61MEeOdBunZhTRw1w" name="Initialization" incoming="_SgB2RK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB2DK1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB2Da1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SgB2Dq1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SgB2HK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2D61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2EK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SgB2Ea1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SgB2Eq1MEeOdBunZhTRw1w" name="Write(Member$initializationFlag$1)" structuralFeature="_SgB1u61MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SgB2E61MEeOdBunZhTRw1w" name="Write(Member$initializationFlag$1).object" incoming="_SgB2Pa1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2FK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Fa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgB2Fq1MEeOdBunZhTRw1w" name="Write(Member$initializationFlag$1).result" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2F61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2GK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SgB2Ga1MEeOdBunZhTRw1w" name="Write(Member$initializationFlag$1).value" incoming="_SgB2HK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Gq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2G61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2HK1MEeOdBunZhTRw1w" source="_SgB2Dq1MEeOdBunZhTRw1w" target="_SgB2Ga1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SgB2Ha1MEeOdBunZhTRw1w" name="Read(Member$initializationFlag$1)" structuralFeature="_SgB1u61MEeOdBunZhTRw1w">
              <object xmi:id="_SgB2Hq1MEeOdBunZhTRw1w" name="Read(Member$initializationFlag$1).object" incoming="_SgB2Pq1MEeOdBunZhTRw1w" type="_SgB1uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2H61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2IK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SgB2Ia1MEeOdBunZhTRw1w" name="Read(Member$initializationFlag$1).result" outgoing="_SgB2P61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Iq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2I61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2JK1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SgB2Ja1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SgB2P61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Jq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2J61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SgB2KK1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SgB2QK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Ka1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Kq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB2K61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SgB2LK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SgB2Qa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2La1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Lq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgB2L61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SgB2MK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SgB2Ma1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SgB2QK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Mq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2M61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SgB2NK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SgB2Q61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Na1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Nq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SgB2N61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SgB2Qa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2OK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Oa1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SgB2Oq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SgB2Qq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SgB2O61MEeOdBunZhTRw1w" name="Decision(Test(Member$initializationFlag$1))" outgoing="_SgB2RK1MEeOdBunZhTRw1w" incoming="_SgB2Qq1MEeOdBunZhTRw1w _SgB2Q61MEeOdBunZhTRw1w" decisionInputFlow="_SgB2Q61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2PK1MEeOdBunZhTRw1w" source="_SgB2B61MEeOdBunZhTRw1w" target="_SgB2Cq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2Pa1MEeOdBunZhTRw1w" source="_SgB2Cq1MEeOdBunZhTRw1w" target="_SgB2E61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2Pq1MEeOdBunZhTRw1w" source="_SgB2Cq1MEeOdBunZhTRw1w" target="_SgB2Hq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2P61MEeOdBunZhTRw1w" source="_SgB2Ia1MEeOdBunZhTRw1w" target="_SgB2Ja1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2QK1MEeOdBunZhTRw1w" source="_SgB2KK1MEeOdBunZhTRw1w" target="_SgB2Ma1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2Qa1MEeOdBunZhTRw1w" source="_SgB2LK1MEeOdBunZhTRw1w" target="_SgB2N61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB2Qq1MEeOdBunZhTRw1w" source="_SgB2Oq1MEeOdBunZhTRw1w" target="_SgB2O61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2Q61MEeOdBunZhTRw1w" source="_SgB2NK1MEeOdBunZhTRw1w" target="_SgB2O61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB2RK1MEeOdBunZhTRw1w" source="_SgB2O61MEeOdBunZhTRw1w" target="_SgB2C61MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB2Ra1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SgB2Rq1MEeOdBunZhTRw1w" name="Member$initialization$1" visibility="protected" method="_SgB2BK1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_SgB2R61MEeOdBunZhTRw1w" name="Member" visibility="package" method="_SgB1x61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SgB2SK1MEeOdBunZhTRw1w" name="" visibility="package" type="_SgB1uq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Sa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Sq1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SgB2S61MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SgB2Aq1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:DataType" xmi:id="_SgB2TK1MEeOdBunZhTRw1w" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_SgB2Ta1MEeOdBunZhTRw1w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Tq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2T61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SgB2UK1MEeOdBunZhTRw1w" name="email" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Ua1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Uq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SgB2U61MEeOdBunZhTRw1w" name="address" visibility="public" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2VK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Va1MEeOdBunZhTRw1w" value="*"/>
        </ownedAttribute>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:InstanceSpecification" xmi:id="_SgB2Vq1MEeOdBunZhTRw1w" name="Customer" classifier="_SgB2TK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SgB2V61MEeOdBunZhTRw1w" name="AssertEqual" group="_SgB2dq1MEeOdBunZhTRw1w" node="_SgB2cK1MEeOdBunZhTRw1w _SgB2ca1MEeOdBunZhTRw1w _SgB2cq1MEeOdBunZhTRw1w _SgB2c61MEeOdBunZhTRw1w _SgB2dK1MEeOdBunZhTRw1w _SgB2da1MEeOdBunZhTRw1w _SgB2dq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SgB2WK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SgB2Wa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SgB2Wq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SgB2W61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SgB2XK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SgB2Xa1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Xq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2X61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SgB2YK1MEeOdBunZhTRw1w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2Ya1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Yq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SgB2Y61MEeOdBunZhTRw1w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2ZK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2Za1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2Zq1MEeOdBunZhTRw1w" source="_SgB2cK1MEeOdBunZhTRw1w" target="_SgB2ca1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2Z61MEeOdBunZhTRw1w" source="_SgB2cq1MEeOdBunZhTRw1w" target="_SgB2c61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2aK1MEeOdBunZhTRw1w" source="_SgB2dK1MEeOdBunZhTRw1w" target="_SgB2da1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2aa1MEeOdBunZhTRw1w" source="_SgB2c61MEeOdBunZhTRw1w" target="_SgB2gq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2aq1MEeOdBunZhTRw1w" source="_SgB2da1MEeOdBunZhTRw1w" target="_SgB2iq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2a61MEeOdBunZhTRw1w" source="_SgB2ca1MEeOdBunZhTRw1w" target="_SgB2vK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2bK1MEeOdBunZhTRw1w" source="_SgB2da1MEeOdBunZhTRw1w" target="_SgB23a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2ba1MEeOdBunZhTRw1w" source="_SgB2da1MEeOdBunZhTRw1w" target="_SgB2761MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2bq1MEeOdBunZhTRw1w" source="_SgB2da1MEeOdBunZhTRw1w" target="_SgB3Da1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2b61MEeOdBunZhTRw1w" source="_SgB2da1MEeOdBunZhTRw1w" target="_SgB3Ma1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SgB2dq1MEeOdBunZhTRw1w" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SgB2d61MEeOdBunZhTRw1w" name="IfStatement@438348e9">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SgB2eK1MEeOdBunZhTRw1w" name="Test(==)" incoming="_SgB3cK1MEeOdBunZhTRw1w">
            <first xmi:id="_SgB2ea1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SgB3Z61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2eq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2e61MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SgB2fK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SgB3eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2fa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2fq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SgB2f61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SgB3aa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2gK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2ga1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SgB2gq1MEeOdBunZhTRw1w" name="Fork(Fork(value1))" outgoing="_SgB3Z61MEeOdBunZhTRw1w _SgB3aK1MEeOdBunZhTRw1w" incoming="_SgB2aa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2g61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SgB2hK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SgB3aK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2ha1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2hq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SgB2h61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SgB3a61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2iK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2ia1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SgB2iq1MEeOdBunZhTRw1w" name="Fork(Fork(value2))" outgoing="_SgB3aa1MEeOdBunZhTRw1w _SgB3aq1MEeOdBunZhTRw1w" incoming="_SgB2aq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2i61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SgB2jK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SgB3aq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2ja1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2jq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SgB2j61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SgB3bK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2kK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2ka1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SgB2kq1MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_SgB3dK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SgB2k61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SgB3ba1MEeOdBunZhTRw1w _SgB3da1MEeOdBunZhTRw1w" incoming="_SgB3a61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SgB2lK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SgB3bq1MEeOdBunZhTRw1w _SgB3b61MEeOdBunZhTRw1w" incoming="_SgB3bK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2la1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SgB3cq1MEeOdBunZhTRw1w">
            <argument xmi:id="_SgB2lq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SgB3ba1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2l61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2mK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SgB2ma1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SgB3e61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2mq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2m61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2nK1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SgB3eK1MEeOdBunZhTRw1w">
            <argument xmi:id="_SgB2na1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SgB3bq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2nq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2n61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SgB2oK1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SgB3fK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2oa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2oq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SgB2o61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SgB3cK1MEeOdBunZhTRw1w _SgB3cq1MEeOdBunZhTRw1w" incoming="_SgB3b61MEeOdBunZhTRw1w _SgB3dq1MEeOdBunZhTRw1w" decisionInputFlow="_SgB3b61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SgB2pK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SgB3dq1MEeOdBunZhTRw1w _SgB3eK1MEeOdBunZhTRw1w" incoming="_SgB3dK1MEeOdBunZhTRw1w _SgB3da1MEeOdBunZhTRw1w" decisionInputFlow="_SgB3da1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SgB2pa1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_SgB3fa1MEeOdBunZhTRw1w" incoming="_SgB3eq1MEeOdBunZhTRw1w _SgB3e61MEeOdBunZhTRw1w _SgB3fK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2pq1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_SgB2p61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SgB3fa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2qK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2qa1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SgB2qq1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2q61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2rK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB2ra1MEeOdBunZhTRw1w" name="ExpressionStatement@3fd72d7e" outgoing="_SgB3fq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2rq1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_SgB21a1MEeOdBunZhTRw1w" behavior="_SgCcBq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgB2r61MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_SgB21K1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2sK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2sa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB2sq1MEeOdBunZhTRw1w" name="Tuple@4f0c3329" outgoing="_SgB21a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB2s61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SgB2tK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_SgB20a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2ta1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2tq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgB2t61MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2uK1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SgB2ua1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgB20a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2uq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2u61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SgB2vK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgB2a61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2va1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2vq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgB2v61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgB20q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2wK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2wa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB2wq1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;)">
                <result xmi:id="_SgB2w61MEeOdBunZhTRw1w" name="Value(&quot;==&quot;).result" outgoing="_SgB2061MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2xK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2xa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgB2xq1MEeOdBunZhTRw1w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2x61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SgB2yK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgB20q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2ya1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2yq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SgB2y61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgB2061MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2zK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2za1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgB2zq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgB21K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2z61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB20K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB20a1MEeOdBunZhTRw1w" source="_SgB2tK1MEeOdBunZhTRw1w" target="_SgB2ua1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB20q1MEeOdBunZhTRw1w" source="_SgB2v61MEeOdBunZhTRw1w" target="_SgB2yK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB2061MEeOdBunZhTRw1w" source="_SgB2w61MEeOdBunZhTRw1w" target="_SgB2y61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB21K1MEeOdBunZhTRw1w" source="_SgB2zq1MEeOdBunZhTRw1w" target="_SgB2r61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB21a1MEeOdBunZhTRw1w" source="_SgB2sq1MEeOdBunZhTRw1w" target="_SgB2rq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB21q1MEeOdBunZhTRw1w" name="ExpressionStatement@1df59c12" outgoing="_SgB3f61MEeOdBunZhTRw1w" incoming="_SgB3fq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB2161MEeOdBunZhTRw1w" name="Call(Write)" incoming="_SgB3Ua1MEeOdBunZhTRw1w" behavior="_SgCcBq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgB22K1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_SgB3UK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB22a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB22q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB2261MEeOdBunZhTRw1w" name="Tuple@76fbea20" outgoing="_SgB3Ua1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB23K1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_SgB23a1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_SgB2bK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB23q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2361MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SgB24K1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_SgB3Sa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB24a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB24q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB2461MEeOdBunZhTRw1w" name="ConditionalTestExpression@181a64e9.operand2" incoming="_SgB3Sq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB25K1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SgB25a1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;).result" outgoing="_SgB27K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB25q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2561MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SgB26K1MEeOdBunZhTRw1w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_SgB26a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@181a64e9.operand2.result" outgoing="_SgB3Tq1MEeOdBunZhTRw1w" incoming="_SgB27K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB26q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2661MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB27K1MEeOdBunZhTRw1w" source="_SgB25a1MEeOdBunZhTRw1w" target="_SgB26a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB27a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@181a64e9.operand3" incoming="_SgB3TK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SgB27q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SgB2761MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_SgB2ba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB28K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB28a1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SgB28q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_SgB3Pa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2861MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB29K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB29a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@214ff4c.operand2" incoming="_SgB3Pq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB29q1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SgB2961MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_SgB3K61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2-K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB2-a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SgB2-q1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SgB2-61MEeOdBunZhTRw1w" name="CastExpression@31611cf2" mode="parallel" outputElement="_SgB3Dq1MEeOdBunZhTRw1w" inputElement="_SgB3Da1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:MergeNode" xmi:id="_SgB2_K1MEeOdBunZhTRw1w" name="Merge(CastExpression@31611cf2.operand)" outgoing="_SgB3DK1MEeOdBunZhTRw1w" incoming="_SgB3Ca1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SgB2_a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SgB2_q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_SgB3Bq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB2_61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3AK1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_SgB3Aa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_SgB3CK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Aq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3A61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SgB3BK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_SgB3Bq1MEeOdBunZhTRw1w _SgB3B61MEeOdBunZhTRw1w" incoming="_SgB3C61MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SgB3Ba1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_SgB3Ca1MEeOdBunZhTRw1w" incoming="_SgB3B61MEeOdBunZhTRw1w _SgB3CK1MEeOdBunZhTRw1w" decisionInputFlow="_SgB3CK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Bq1MEeOdBunZhTRw1w" source="_SgB3BK1MEeOdBunZhTRw1w" target="_SgB2_q1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3B61MEeOdBunZhTRw1w" source="_SgB3BK1MEeOdBunZhTRw1w" target="_SgB3Ba1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3CK1MEeOdBunZhTRw1w" source="_SgB3Aa1MEeOdBunZhTRw1w" target="_SgB3Ba1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Ca1MEeOdBunZhTRw1w" source="_SgB3Ba1MEeOdBunZhTRw1w" target="_SgB2_K1MEeOdBunZhTRw1w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3Cq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3C61MEeOdBunZhTRw1w" source="_SgB3Da1MEeOdBunZhTRw1w" target="_SgB3BK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3DK1MEeOdBunZhTRw1w" source="_SgB2_K1MEeOdBunZhTRw1w" target="_SgB3Dq1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SgB3Da1MEeOdBunZhTRw1w" name="CastExpression@31611cf2.inputElement" outgoing="_SgB3C61MEeOdBunZhTRw1w" incoming="_SgB2bq1MEeOdBunZhTRw1w" regionAsInput="_SgB2-61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SgB3Dq1MEeOdBunZhTRw1w" name="CastExpression@31611cf2.outputElement" outgoing="_SgB3LK1MEeOdBunZhTRw1w" incoming="_SgB3DK1MEeOdBunZhTRw1w" regionAsOutput="_SgB2-61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB3D61MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SgB3EK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgB3K61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Ea1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Eq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SgB3E61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgB3LK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3FK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Fa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgB3Fq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgB3La1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3F61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3GK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB3Ga1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SgB3Gq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_SgB3Lq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3G61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3HK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SgB3Ha1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB3Hq1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SgB3H61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgB3La1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3IK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Ia1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SgB3Iq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgB3Lq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3I61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3JK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgB3Ja1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgB3L61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Jq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3J61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <structuredNodeOutput xmi:id="_SgB3KK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@214ff4c.operand2.result" outgoing="_SgB3Qq1MEeOdBunZhTRw1w" incoming="_SgB3L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Ka1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Kq1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3K61MEeOdBunZhTRw1w" source="_SgB2961MEeOdBunZhTRw1w" target="_SgB3EK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3LK1MEeOdBunZhTRw1w" source="_SgB3Dq1MEeOdBunZhTRw1w" target="_SgB3E61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3La1MEeOdBunZhTRw1w" source="_SgB3Fq1MEeOdBunZhTRw1w" target="_SgB3H61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Lq1MEeOdBunZhTRw1w" source="_SgB3Gq1MEeOdBunZhTRw1w" target="_SgB3Iq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3L61MEeOdBunZhTRw1w" source="_SgB3Ja1MEeOdBunZhTRw1w" target="_SgB3KK1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB3MK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@214ff4c.operand3" incoming="_SgB3QK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_SgB3Ma1MEeOdBunZhTRw1w" name="Merge(Fork(value2))" outgoing="_SgB3Na1MEeOdBunZhTRw1w" incoming="_SgB2b61MEeOdBunZhTRw1w"/>
                  <structuredNodeOutput xmi:id="_SgB3Mq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@214ff4c.operand3.result" outgoing="_SgB3Q61MEeOdBunZhTRw1w" incoming="_SgB3Na1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3M61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3NK1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Na1MEeOdBunZhTRw1w" source="_SgB3Ma1MEeOdBunZhTRw1w" target="_SgB3Mq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SgB3Nq1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@214ff4c)" outgoing="_SgB3PK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SgB3N61MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@214ff4c)" outgoing="_SgB3Pq1MEeOdBunZhTRw1w _SgB3QK1MEeOdBunZhTRw1w" incoming="_SgB3PK1MEeOdBunZhTRw1w _SgB3Pa1MEeOdBunZhTRw1w" decisionInputFlow="_SgB3Pa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SgB3OK1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@214ff4c.result)" outgoing="_SgB3RK1MEeOdBunZhTRw1w" incoming="_SgB3Qq1MEeOdBunZhTRw1w _SgB3Q61MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_SgB3Oa1MEeOdBunZhTRw1w" name="ConditionalTestExpression@181a64e9.operand3.result" outgoing="_SgB3T61MEeOdBunZhTRw1w" incoming="_SgB3RK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Oq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3O61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3PK1MEeOdBunZhTRw1w" source="_SgB3Nq1MEeOdBunZhTRw1w" target="_SgB3N61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Pa1MEeOdBunZhTRw1w" source="_SgB28q1MEeOdBunZhTRw1w" target="_SgB3N61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3Pq1MEeOdBunZhTRw1w" source="_SgB3N61MEeOdBunZhTRw1w" target="_SgB29a1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3P61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3QK1MEeOdBunZhTRw1w" source="_SgB3N61MEeOdBunZhTRw1w" target="_SgB3MK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3Qa1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Qq1MEeOdBunZhTRw1w" source="_SgB3KK1MEeOdBunZhTRw1w" target="_SgB3OK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Q61MEeOdBunZhTRw1w" source="_SgB3Mq1MEeOdBunZhTRw1w" target="_SgB3OK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3RK1MEeOdBunZhTRw1w" source="_SgB3OK1MEeOdBunZhTRw1w" target="_SgB3Oa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SgB3Ra1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@181a64e9)" outgoing="_SgB3SK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SgB3Rq1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@181a64e9)" outgoing="_SgB3Sq1MEeOdBunZhTRw1w _SgB3TK1MEeOdBunZhTRw1w" incoming="_SgB3SK1MEeOdBunZhTRw1w _SgB3Sa1MEeOdBunZhTRw1w" decisionInputFlow="_SgB3Sa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SgB3R61MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@181a64e9.result)" outgoing="_SgB3UK1MEeOdBunZhTRw1w" incoming="_SgB3Tq1MEeOdBunZhTRw1w _SgB3T61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3SK1MEeOdBunZhTRw1w" source="_SgB3Ra1MEeOdBunZhTRw1w" target="_SgB3Rq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Sa1MEeOdBunZhTRw1w" source="_SgB24K1MEeOdBunZhTRw1w" target="_SgB3Rq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3Sq1MEeOdBunZhTRw1w" source="_SgB3Rq1MEeOdBunZhTRw1w" target="_SgB2461MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3S61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3TK1MEeOdBunZhTRw1w" source="_SgB3Rq1MEeOdBunZhTRw1w" target="_SgB27a1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3Ta1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Tq1MEeOdBunZhTRw1w" source="_SgB26a1MEeOdBunZhTRw1w" target="_SgB3R61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3T61MEeOdBunZhTRw1w" source="_SgB3Oa1MEeOdBunZhTRw1w" target="_SgB3R61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3UK1MEeOdBunZhTRw1w" source="_SgB3R61MEeOdBunZhTRw1w" target="_SgB22K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3Ua1MEeOdBunZhTRw1w" source="_SgB2261MEeOdBunZhTRw1w" target="_SgB2161MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB3Uq1MEeOdBunZhTRw1w" name="ExpressionStatement@554b2083" incoming="_SgB3f61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgB3U61MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SgB3Ya1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgB3VK1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SgB3YK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Va1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Vq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgB3V61MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3WK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Wa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgB3Wq1MEeOdBunZhTRw1w" name="Tuple@3ee0e6d2" outgoing="_SgB3Ya1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB3W61MEeOdBunZhTRw1w" name="Value(&quot;&quot;)">
                <result xmi:id="_SgB3XK1MEeOdBunZhTRw1w" name="Value(&quot;&quot;).result" outgoing="_SgB3YK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3Xa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Xq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgB3X61MEeOdBunZhTRw1w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3YK1MEeOdBunZhTRw1w" source="_SgB3XK1MEeOdBunZhTRw1w" target="_SgB3VK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3Ya1MEeOdBunZhTRw1w" source="_SgB3Wq1MEeOdBunZhTRw1w" target="_SgB3U61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgB3Yq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SgB3Y61MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgB3ZK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgB3Za1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SgB3Zq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3Z61MEeOdBunZhTRw1w" source="_SgB2gq1MEeOdBunZhTRw1w" target="_SgB2ea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3aK1MEeOdBunZhTRw1w" source="_SgB2gq1MEeOdBunZhTRw1w" target="_SgB2hK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3aa1MEeOdBunZhTRw1w" source="_SgB2iq1MEeOdBunZhTRw1w" target="_SgB2f61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3aq1MEeOdBunZhTRw1w" source="_SgB2iq1MEeOdBunZhTRw1w" target="_SgB2jK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3a61MEeOdBunZhTRw1w" source="_SgB2h61MEeOdBunZhTRw1w" target="_SgB2k61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3bK1MEeOdBunZhTRw1w" source="_SgB2j61MEeOdBunZhTRw1w" target="_SgB2lK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3ba1MEeOdBunZhTRw1w" source="_SgB2k61MEeOdBunZhTRw1w" target="_SgB2lq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3bq1MEeOdBunZhTRw1w" source="_SgB2lK1MEeOdBunZhTRw1w" target="_SgB2na1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3b61MEeOdBunZhTRw1w" source="_SgB2lK1MEeOdBunZhTRw1w" target="_SgB2o61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3cK1MEeOdBunZhTRw1w" source="_SgB2o61MEeOdBunZhTRw1w" target="_SgB2eK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3ca1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3cq1MEeOdBunZhTRw1w" source="_SgB2o61MEeOdBunZhTRw1w" target="_SgB2la1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3c61MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3dK1MEeOdBunZhTRw1w" source="_SgB2kq1MEeOdBunZhTRw1w" target="_SgB2pK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3da1MEeOdBunZhTRw1w" source="_SgB2k61MEeOdBunZhTRw1w" target="_SgB2pK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3dq1MEeOdBunZhTRw1w" source="_SgB2pK1MEeOdBunZhTRw1w" target="_SgB2o61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3d61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3eK1MEeOdBunZhTRw1w" source="_SgB2pK1MEeOdBunZhTRw1w" target="_SgB2nK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgB3ea1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3eq1MEeOdBunZhTRw1w" source="_SgB2fK1MEeOdBunZhTRw1w" target="_SgB2pa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3e61MEeOdBunZhTRw1w" source="_SgB2ma1MEeOdBunZhTRw1w" target="_SgB2pa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3fK1MEeOdBunZhTRw1w" source="_SgB2oK1MEeOdBunZhTRw1w" target="_SgB2pa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgB3fa1MEeOdBunZhTRw1w" source="_SgB2pa1MEeOdBunZhTRw1w" target="_SgB2p61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3fq1MEeOdBunZhTRw1w" source="_SgB2ra1MEeOdBunZhTRw1w" target="_SgB21q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgB3f61MEeOdBunZhTRw1w" source="_SgB21q1MEeOdBunZhTRw1w" target="_SgB3Uq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SgB3gK1MEeOdBunZhTRw1w" body="_SgB2ra1MEeOdBunZhTRw1w _SgB21q1MEeOdBunZhTRw1w _SgB3Uq1MEeOdBunZhTRw1w" decider="_SgB2qq1MEeOdBunZhTRw1w" successorClause="_SgB3ga1MEeOdBunZhTRw1w" test="_SgB2eK1MEeOdBunZhTRw1w _SgB2g61MEeOdBunZhTRw1w _SgB2i61MEeOdBunZhTRw1w _SgB2la1MEeOdBunZhTRw1w _SgB2nK1MEeOdBunZhTRw1w _SgB2pq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SgB3ga1MEeOdBunZhTRw1w" decider="_SgB3Y61MEeOdBunZhTRw1w" predecessorClause="_SgB3gK1MEeOdBunZhTRw1w" test="_SgB3Yq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgB2cK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SgB2Zq1MEeOdBunZhTRw1w" parameter="_SgB2Xa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgB2ca1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SgB2a61MEeOdBunZhTRw1w" incoming="_SgB2Zq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgB2cq1MEeOdBunZhTRw1w" name="Input(value1)" outgoing="_SgB2Z61MEeOdBunZhTRw1w" parameter="_SgB2YK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgB2c61MEeOdBunZhTRw1w" name="Fork(value1)" outgoing="_SgB2aa1MEeOdBunZhTRw1w" incoming="_SgB2Z61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgB2dK1MEeOdBunZhTRw1w" name="Input(value2)" outgoing="_SgB2aK1MEeOdBunZhTRw1w" parameter="_SgB2Y61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgB2da1MEeOdBunZhTRw1w" name="Fork(value2)" outgoing="_SgB2aq1MEeOdBunZhTRw1w _SgB2bK1MEeOdBunZhTRw1w _SgB2ba1MEeOdBunZhTRw1w _SgB2bq1MEeOdBunZhTRw1w _SgB2b61MEeOdBunZhTRw1w" incoming="_SgB2aK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SgCaAK1MEeOdBunZhTRw1w" name="AssertTrue" group="_SgCaFK1MEeOdBunZhTRw1w" node="_SgCaEK1MEeOdBunZhTRw1w _SgCaEa1MEeOdBunZhTRw1w _SgCaEq1MEeOdBunZhTRw1w _SgCaE61MEeOdBunZhTRw1w _SgCaFK1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SgCaAa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SgCaAq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SgCaA61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SgCaBK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SgCaBa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SgCaBq1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaB61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaCK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SgCaCa1MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaCq1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaC61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaDK1MEeOdBunZhTRw1w" source="_SgCaEK1MEeOdBunZhTRw1w" target="_SgCaEa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaDa1MEeOdBunZhTRw1w" source="_SgCaEq1MEeOdBunZhTRw1w" target="_SgCaE61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaDq1MEeOdBunZhTRw1w" source="_SgCaE61MEeOdBunZhTRw1w" target="_SgCaJa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaD61MEeOdBunZhTRw1w" source="_SgCaEa1MEeOdBunZhTRw1w" target="_SgCaSa1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SgCaFK1MEeOdBunZhTRw1w" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SgCaFa1MEeOdBunZhTRw1w" name="IfStatement@6f3773cd">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCaFq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SgCaF61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SgCaX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaGK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaGa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SgCaGq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SgCaG61MEeOdBunZhTRw1w" name="Test(==)">
            <first xmi:id="_SgCaHK1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SgCaV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaHa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaHq1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SgCaH61MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SgCaWq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaIK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaIa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SgCaIq1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SgCaX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaI61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaJK1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SgCaJa1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_SgCaV61MEeOdBunZhTRw1w _SgCaWK1MEeOdBunZhTRw1w" incoming="_SgCaDq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCaJq1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SgCaJ61MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SgCaWK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaKK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaKa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SgCaKq1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SgCaWa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaK61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaLK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SgCaLa1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SgCaW61MEeOdBunZhTRw1w _SgCaXK1MEeOdBunZhTRw1w" incoming="_SgCaWa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SgCaLq1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_SgCaYK1MEeOdBunZhTRw1w" incoming="_SgCaWq1MEeOdBunZhTRw1w _SgCaXa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SgCaL61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SgCaXa1MEeOdBunZhTRw1w" incoming="_SgCaW61MEeOdBunZhTRw1w _SgCaXK1MEeOdBunZhTRw1w" decisionInputFlow="_SgCaXK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCaMK1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_SgCaMa1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SgCaYK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaMq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaM61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SgCaNK1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaNa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaNq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCaN61MEeOdBunZhTRw1w" name="ExpressionStatement@32708c25">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCaOK1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SgCaUa1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgCaOa1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SgCaUK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaOq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaO61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCaPK1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaPa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaPq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCaP61MEeOdBunZhTRw1w" name="Tuple@cc9a3a7" outgoing="_SgCaUa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCaQK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SgCaQa1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_SgCaT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaQq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaQ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SgCaRK1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCaRa1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SgCaRq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgCaT61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaR61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaSK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SgCaSa1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgCaD61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaSq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaS61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SgCaTK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgCaUK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaTa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaTq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaT61MEeOdBunZhTRw1w" source="_SgCaQa1MEeOdBunZhTRw1w" target="_SgCaRq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaUK1MEeOdBunZhTRw1w" source="_SgCaTK1MEeOdBunZhTRw1w" target="_SgCaOa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgCaUa1MEeOdBunZhTRw1w" source="_SgCaP61MEeOdBunZhTRw1w" target="_SgCaOK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCaUq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SgCaU61MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaVK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaVa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SgCaVq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaV61MEeOdBunZhTRw1w" source="_SgCaJa1MEeOdBunZhTRw1w" target="_SgCaHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaWK1MEeOdBunZhTRw1w" source="_SgCaJa1MEeOdBunZhTRw1w" target="_SgCaJ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaWa1MEeOdBunZhTRw1w" source="_SgCaKq1MEeOdBunZhTRw1w" target="_SgCaLa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaWq1MEeOdBunZhTRw1w" source="_SgCaH61MEeOdBunZhTRw1w" target="_SgCaLq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaW61MEeOdBunZhTRw1w" source="_SgCaLa1MEeOdBunZhTRw1w" target="_SgCaL61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaXK1MEeOdBunZhTRw1w" source="_SgCaLa1MEeOdBunZhTRw1w" target="_SgCaL61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaXa1MEeOdBunZhTRw1w" source="_SgCaL61MEeOdBunZhTRw1w" target="_SgCaLq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SgCaXq1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaX61MEeOdBunZhTRw1w" source="_SgCaF61MEeOdBunZhTRw1w" target="_SgCaIq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaYK1MEeOdBunZhTRw1w" source="_SgCaLq1MEeOdBunZhTRw1w" target="_SgCaMa1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SgCaYa1MEeOdBunZhTRw1w" body="_SgCaN61MEeOdBunZhTRw1w" decider="_SgCaNK1MEeOdBunZhTRw1w" successorClause="_SgCaYq1MEeOdBunZhTRw1w" test="_SgCaFq1MEeOdBunZhTRw1w _SgCaG61MEeOdBunZhTRw1w _SgCaJq1MEeOdBunZhTRw1w _SgCaMK1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SgCaYq1MEeOdBunZhTRw1w" decider="_SgCaU61MEeOdBunZhTRw1w" predecessorClause="_SgCaYa1MEeOdBunZhTRw1w" test="_SgCaUq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCaEK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SgCaDK1MEeOdBunZhTRw1w" parameter="_SgCaBq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCaEa1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SgCaD61MEeOdBunZhTRw1w" incoming="_SgCaDK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCaEq1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_SgCaDa1MEeOdBunZhTRw1w" parameter="_SgCaCa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCaE61MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_SgCaDq1MEeOdBunZhTRw1w" incoming="_SgCaDa1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SgCaY61MEeOdBunZhTRw1w" name="AssertList" group="_SgCag61MEeOdBunZhTRw1w" node="_SgCafa1MEeOdBunZhTRw1w _SgCafq1MEeOdBunZhTRw1w _SgCaf61MEeOdBunZhTRw1w _SgCagK1MEeOdBunZhTRw1w _SgCaga1MEeOdBunZhTRw1w _SgCagq1MEeOdBunZhTRw1w _SgCag61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SgCaZK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SgCaZa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SgCaZq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SgCaZ61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SgCaaK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SgCaaa1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaaq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaa61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SgCabK1MEeOdBunZhTRw1w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaba1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCabq1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SgCab61MEeOdBunZhTRw1w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCacK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaca1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCacq1MEeOdBunZhTRw1w" source="_SgCafa1MEeOdBunZhTRw1w" target="_SgCafq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCac61MEeOdBunZhTRw1w" source="_SgCaf61MEeOdBunZhTRw1w" target="_SgCagK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCadK1MEeOdBunZhTRw1w" source="_SgCaga1MEeOdBunZhTRw1w" target="_SgCagq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCada1MEeOdBunZhTRw1w" source="_SgCafq1MEeOdBunZhTRw1w" target="_SgCalq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCadq1MEeOdBunZhTRw1w" source="_SgCagK1MEeOdBunZhTRw1w" target="_SgCaoK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCad61MEeOdBunZhTRw1w" source="_SgCagq1MEeOdBunZhTRw1w" target="_SgCap61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaeK1MEeOdBunZhTRw1w" source="_SgCagq1MEeOdBunZhTRw1w" target="_SgCbl61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaea1MEeOdBunZhTRw1w" source="_SgCagK1MEeOdBunZhTRw1w" target="_SgCbmq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCaeq1MEeOdBunZhTRw1w" source="_SgCafq1MEeOdBunZhTRw1w" target="_SgCbna1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCae61MEeOdBunZhTRw1w" source="_SgCagK1MEeOdBunZhTRw1w" target="_SgCbza1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCafK1MEeOdBunZhTRw1w" source="_SgCagq1MEeOdBunZhTRw1w" target="_SgCb1K1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SgCag61MEeOdBunZhTRw1w" name="Body(AssertList)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCahK1MEeOdBunZhTRw1w" name="ExpressionStatement@26f69ea3" outgoing="_SgCcBa1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCaha1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgCasa1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
            <argument xmi:id="_SgCahq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgCarq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCah61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaiK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_SgCaia1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgCar61MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaiq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCai61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_SgCajK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgCasK1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaja1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCajq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCaj61MEeOdBunZhTRw1w" name="Tuple@27054cf9" outgoing="_SgCasa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCakK1MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_SgCaka1MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;).result" outgoing="_SgCara1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCakq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCak61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SgCalK1MEeOdBunZhTRw1w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCala1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_SgCalq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgCada1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCal61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCamK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCama1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgCara1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCamq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCam61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCanK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgCarq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCana1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCanq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCan61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SgCcQq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgCaoK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SgCadq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaoa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaoq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SgCao61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SgCar61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCapK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCapa1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCapq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SgCcQq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgCap61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SgCad61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaqK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaqa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SgCaqq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SgCasK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaq61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCarK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCara1MEeOdBunZhTRw1w" source="_SgCaka1MEeOdBunZhTRw1w" target="_SgCama1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCarq1MEeOdBunZhTRw1w" source="_SgCanK1MEeOdBunZhTRw1w" target="_SgCahq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCar61MEeOdBunZhTRw1w" source="_SgCao61MEeOdBunZhTRw1w" target="_SgCaia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCasK1MEeOdBunZhTRw1w" source="_SgCaqq1MEeOdBunZhTRw1w" target="_SgCajK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgCasa1MEeOdBunZhTRw1w" source="_SgCaj61MEeOdBunZhTRw1w" target="_SgCaha1MEeOdBunZhTRw1w"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCasq1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f" incoming="_SgCcBa1MEeOdBunZhTRw1w">
          <node xmi:type="uml:LoopNode" xmi:id="_SgCas61MEeOdBunZhTRw1w" name="Loop(ForStatement@4c8f88f)" incoming="_SgCcBK1MEeOdBunZhTRw1w" bodyOutput="_SgCbO61MEeOdBunZhTRw1w _SgCbPq1MEeOdBunZhTRw1w _SgCbQa1MEeOdBunZhTRw1w _SgCbTq1MEeOdBunZhTRw1w _SgCbXa1MEeOdBunZhTRw1w _SgCbaa1MEeOdBunZhTRw1w" bodyPart="_SgCaxK1MEeOdBunZhTRw1w _SgCaxq1MEeOdBunZhTRw1w _SgCbR61MEeOdBunZhTRw1w _SgCbUa1MEeOdBunZhTRw1w _SgCbVq1MEeOdBunZhTRw1w _SgCbYK1MEeOdBunZhTRw1w _SgCbZa1MEeOdBunZhTRw1w" decider="_SgCawa1MEeOdBunZhTRw1w" isTestedFirst="true" test="_SgCauq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SgCatK1MEeOdBunZhTRw1w" name="Fork(ForStatement@4c8f88f.loopVariable(expected))" outgoing="_SgCbga1MEeOdBunZhTRw1w _SgCbgq1MEeOdBunZhTRw1w" incoming="_SgCbba1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCata1MEeOdBunZhTRw1w" name="Fork(ForStatement@4c8f88f.loopVariable(list))" outgoing="_SgCbgK1MEeOdBunZhTRw1w _SgCbg61MEeOdBunZhTRw1w" incoming="_SgCbbq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCatq1MEeOdBunZhTRw1w" name="Fork(ForStatement@4c8f88f.loopVariable(label))" outgoing="_SgCbf61MEeOdBunZhTRw1w _SgCbhK1MEeOdBunZhTRw1w" incoming="_SgCbb61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCat61MEeOdBunZhTRw1w" name="Fork(ForStatement@4c8f88f.loopVariable(i))" outgoing="_SgCbeq1MEeOdBunZhTRw1w" incoming="_SgCbcK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCauK1MEeOdBunZhTRw1w" name="Fork(ForStatement@4c8f88f.loopVariable(counter))" outgoing="_SgCbc61MEeOdBunZhTRw1w _SgCbfK1MEeOdBunZhTRw1w" incoming="_SgCbca1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCaua1MEeOdBunZhTRw1w" name="Fork(ForStatement@4c8f88f.loopVariable(upper))" outgoing="_SgCbdK1MEeOdBunZhTRw1w _SgCbfq1MEeOdBunZhTRw1w" incoming="_SgCbcq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCauq1MEeOdBunZhTRw1w" name="Call(&lt;=)">
              <argument xmi:id="_SgCau61MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_SgCbc61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCavK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCava1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCavq1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_SgCbdK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCav61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCawK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCawa1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCawq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCaw61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCaxK1MEeOdBunZhTRw1w" name="Values(ForStatement@4c8f88f)" outgoing="_SgCbdq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_SgCaxa1MEeOdBunZhTRw1w" name="Fork(i)" outgoing="_SgCbd61MEeOdBunZhTRw1w _SgCbeK1MEeOdBunZhTRw1w _SgCbea1MEeOdBunZhTRw1w" incoming="_SgCbda1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCaxq1MEeOdBunZhTRw1w" name="Body(ForStatement@4c8f88f)" incoming="_SgCbdq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCax61MEeOdBunZhTRw1w" name="ExpressionStatement@3ec71283">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCayK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SgCbIq1MEeOdBunZhTRw1w" behavior="_SgB2V61MEeOdBunZhTRw1w">
                  <argument xmi:id="_SgCaya1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SgCbH61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCayq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCay61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_SgCazK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SgCbIK1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCaza1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCazq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_SgCaz61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SgCbIa1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa0K1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa0a1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCa0q1MEeOdBunZhTRw1w" name="Tuple@30ae55b3" outgoing="_SgCbIq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCa061MEeOdBunZhTRw1w" name="Value(&quot;[&quot;)">
                    <result xmi:id="_SgCa1K1MEeOdBunZhTRw1w" name="Value(&quot;[&quot;).result" outgoing="_SgCbGK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa1a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa1q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SgCa161MEeOdBunZhTRw1w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCa2K1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SgCa2a1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgCbf61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa2q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa261MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SgCa3K1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgCbGK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa3a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa3q1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgCa361MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgCbGa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa4K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa4a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCa4q1MEeOdBunZhTRw1w" name="Call(ToString)">
                    <argument xmi:id="_SgCa461MEeOdBunZhTRw1w" name="Call(ToString).argument(x)" incoming="_SgCbd61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa5K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa5a1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgCa5q1MEeOdBunZhTRw1w" name="Call(ToString).result(result)" outgoing="_SgCbGq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa561MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa6K1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCa6a1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SgCa6q1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgCbGa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa661MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa7K1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SgCa7a1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgCbGq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa7q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa761MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgCa8K1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgCbG61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa8a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa8q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCa861MEeOdBunZhTRw1w" name="Value(&quot;]&quot;)">
                    <result xmi:id="_SgCa9K1MEeOdBunZhTRw1w" name="Value(&quot;]&quot;).result" outgoing="_SgCbHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa9a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa9q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SgCa961MEeOdBunZhTRw1w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCa-K1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SgCa-a1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SgCbG61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa-q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa-61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SgCa_K1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SgCbHK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCa_a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCa_q1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgCa_61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SgCbH61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbAK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbAa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCbAq1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_SgCbA61MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SgCbgK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbBK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbBa1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_SgCbBq1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SgCbHa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbB61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbCK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgCbCa1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SgCbIK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbCq1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbC61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SgCbDK1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SgCbHa1MEeOdBunZhTRw1w" incoming="_SgCbeK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCbDa1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_SgCbDq1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SgCbga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbD61MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbEK1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_SgCbEa1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SgCbHq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbEq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbE61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SgCbFK1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SgCbIa1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbFa1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbFq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SgCbF61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SgCbHq1MEeOdBunZhTRw1w" incoming="_SgCbea1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbGK1MEeOdBunZhTRw1w" source="_SgCa1K1MEeOdBunZhTRw1w" target="_SgCa3K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbGa1MEeOdBunZhTRw1w" source="_SgCa361MEeOdBunZhTRw1w" target="_SgCa6q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbGq1MEeOdBunZhTRw1w" source="_SgCa5q1MEeOdBunZhTRw1w" target="_SgCa7a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbG61MEeOdBunZhTRw1w" source="_SgCa8K1MEeOdBunZhTRw1w" target="_SgCa-a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbHK1MEeOdBunZhTRw1w" source="_SgCa9K1MEeOdBunZhTRw1w" target="_SgCa_K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbHa1MEeOdBunZhTRw1w" source="_SgCbDK1MEeOdBunZhTRw1w" target="_SgCbBq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbHq1MEeOdBunZhTRw1w" source="_SgCbF61MEeOdBunZhTRw1w" target="_SgCbEa1MEeOdBunZhTRw1w"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbH61MEeOdBunZhTRw1w" source="_SgCa_61MEeOdBunZhTRw1w" target="_SgCaya1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbIK1MEeOdBunZhTRw1w" source="_SgCbCa1MEeOdBunZhTRw1w" target="_SgCazK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbIa1MEeOdBunZhTRw1w" source="_SgCbFK1MEeOdBunZhTRw1w" target="_SgCaz61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SgCbIq1MEeOdBunZhTRw1w" source="_SgCa0q1MEeOdBunZhTRw1w" target="_SgCayK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCbI61MEeOdBunZhTRw1w" name="Passthru(Fork(expected))">
                <structuredNodeInput xmi:id="_SgCbJK1MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).input" outgoing="_SgCbKq1MEeOdBunZhTRw1w" incoming="_SgCbgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbJa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbJq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SgCbJ61MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).output" outgoing="_SgCbRK1MEeOdBunZhTRw1w" incoming="_SgCbKq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbKK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbKa1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbKq1MEeOdBunZhTRw1w" source="_SgCbJK1MEeOdBunZhTRw1w" target="_SgCbJ61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCbK61MEeOdBunZhTRw1w" name="Passthru(Fork(list))">
                <structuredNodeInput xmi:id="_SgCbLK1MEeOdBunZhTRw1w" name="Passthru(Fork(list)).input" outgoing="_SgCbMq1MEeOdBunZhTRw1w" incoming="_SgCbg61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbLa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbLq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SgCbL61MEeOdBunZhTRw1w" name="Passthru(Fork(list)).output" outgoing="_SgCbRa1MEeOdBunZhTRw1w" incoming="_SgCbMq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbMK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbMa1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbMq1MEeOdBunZhTRw1w" source="_SgCbLK1MEeOdBunZhTRw1w" target="_SgCbL61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCbM61MEeOdBunZhTRw1w" name="Passthru(Fork(label))">
                <structuredNodeInput xmi:id="_SgCbNK1MEeOdBunZhTRw1w" name="Passthru(Fork(label)).input" outgoing="_SgCbOq1MEeOdBunZhTRw1w" incoming="_SgCbhK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbNa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbNq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SgCbN61MEeOdBunZhTRw1w" name="Passthru(Fork(label)).output" outgoing="_SgCbRq1MEeOdBunZhTRw1w" incoming="_SgCbOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbOK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbOa1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbOq1MEeOdBunZhTRw1w" source="_SgCbNK1MEeOdBunZhTRw1w" target="_SgCbN61MEeOdBunZhTRw1w"/>
              </node>
              <structuredNodeOutput xmi:id="_SgCbO61MEeOdBunZhTRw1w" name="expected" incoming="_SgCbRK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbPK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbPa1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_SgCbPq1MEeOdBunZhTRw1w" name="list" incoming="_SgCbRa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbP61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbQK1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_SgCbQa1MEeOdBunZhTRw1w" name="label" incoming="_SgCbRq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbQq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbQ61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbRK1MEeOdBunZhTRw1w" source="_SgCbJ61MEeOdBunZhTRw1w" target="_SgCbO61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbRa1MEeOdBunZhTRw1w" source="_SgCbL61MEeOdBunZhTRw1w" target="_SgCbPq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbRq1MEeOdBunZhTRw1w" source="_SgCbN61MEeOdBunZhTRw1w" target="_SgCbQa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCbR61MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SgCbSK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SgCbeq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbSa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbSq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCbS61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SgCbe61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbTK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbTa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCbTq1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbT61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbUK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCbUa1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SgCbUq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgCbe61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbU61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbVK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgCbVa1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCbVq1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SgCbV61MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SgCbfK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbWK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbWa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCbWq1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SgCbfa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbW61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbXK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCbXa1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbXq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbX61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCbYK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SgCbYa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgCbfa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbYq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbY61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgCbZK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCbZa1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper))">
              <structuredNodeInput xmi:id="_SgCbZq1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).input" outgoing="_SgCbbK1MEeOdBunZhTRw1w" incoming="_SgCbfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbZ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbaK1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SgCbaa1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).output" incoming="_SgCbbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbaq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCba61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbbK1MEeOdBunZhTRw1w" source="_SgCbZq1MEeOdBunZhTRw1w" target="_SgCbaa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbba1MEeOdBunZhTRw1w" source="_SgCbha1MEeOdBunZhTRw1w" target="_SgCatK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbbq1MEeOdBunZhTRw1w" source="_SgCbiK1MEeOdBunZhTRw1w" target="_SgCata1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbb61MEeOdBunZhTRw1w" source="_SgCbi61MEeOdBunZhTRw1w" target="_SgCatq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbcK1MEeOdBunZhTRw1w" source="_SgCbjq1MEeOdBunZhTRw1w" target="_SgCat61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbca1MEeOdBunZhTRw1w" source="_SgCbka1MEeOdBunZhTRw1w" target="_SgCauK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbcq1MEeOdBunZhTRw1w" source="_SgCblK1MEeOdBunZhTRw1w" target="_SgCaua1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbc61MEeOdBunZhTRw1w" source="_SgCauK1MEeOdBunZhTRw1w" target="_SgCau61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbdK1MEeOdBunZhTRw1w" source="_SgCaua1MEeOdBunZhTRw1w" target="_SgCavq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbda1MEeOdBunZhTRw1w" source="_SgCbjq1MEeOdBunZhTRw1w" target="_SgCaxa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgCbdq1MEeOdBunZhTRw1w" source="_SgCaxK1MEeOdBunZhTRw1w" target="_SgCaxq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbd61MEeOdBunZhTRw1w" source="_SgCaxa1MEeOdBunZhTRw1w" target="_SgCa461MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbeK1MEeOdBunZhTRw1w" source="_SgCaxa1MEeOdBunZhTRw1w" target="_SgCbDK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbea1MEeOdBunZhTRw1w" source="_SgCaxa1MEeOdBunZhTRw1w" target="_SgCbF61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbeq1MEeOdBunZhTRw1w" source="_SgCat61MEeOdBunZhTRw1w" target="_SgCbSK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbe61MEeOdBunZhTRw1w" source="_SgCbUq1MEeOdBunZhTRw1w" target="_SgCbS61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbfK1MEeOdBunZhTRw1w" source="_SgCauK1MEeOdBunZhTRw1w" target="_SgCbV61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbfa1MEeOdBunZhTRw1w" source="_SgCbYa1MEeOdBunZhTRw1w" target="_SgCbWq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbfq1MEeOdBunZhTRw1w" source="_SgCaua1MEeOdBunZhTRw1w" target="_SgCbZq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbf61MEeOdBunZhTRw1w" source="_SgCatq1MEeOdBunZhTRw1w" target="_SgCa2a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbgK1MEeOdBunZhTRw1w" source="_SgCata1MEeOdBunZhTRw1w" target="_SgCbA61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbga1MEeOdBunZhTRw1w" source="_SgCatK1MEeOdBunZhTRw1w" target="_SgCbDq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbgq1MEeOdBunZhTRw1w" source="_SgCatK1MEeOdBunZhTRw1w" target="_SgCbJK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbg61MEeOdBunZhTRw1w" source="_SgCata1MEeOdBunZhTRw1w" target="_SgCbLK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCbhK1MEeOdBunZhTRw1w" source="_SgCatq1MEeOdBunZhTRw1w" target="_SgCbNK1MEeOdBunZhTRw1w"/>
            <loopVariable xmi:id="_SgCbha1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariable(expected)" outgoing="_SgCbba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbhq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbh61MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_SgCbiK1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariable(list)" outgoing="_SgCbbq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbia1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbiq1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_SgCbi61MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariable(label)" outgoing="_SgCbb61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbjK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbja1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_SgCbjq1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariable(i)" outgoing="_SgCbcK1MEeOdBunZhTRw1w _SgCbda1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbj61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbkK1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_SgCbka1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariable(counter)" outgoing="_SgCbca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbkq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbk61MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_SgCblK1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariable(upper)" outgoing="_SgCbcq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbla1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCblq1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_SgCbl61MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariableInput(expected)" incoming="_SgCaeK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbmK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbma1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SgCbmq1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariableInput(list)" incoming="_SgCaea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbm61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbnK1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SgCbna1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariableInput(label)" incoming="_SgCaeq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbnq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbn61MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SgCboK1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariableInput(i)" incoming="_SgCcA61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCboa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCboq1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SgCbo61MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariableInput(counter)" incoming="_SgCcAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbpK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbpa1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SgCbpq1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.loopVariableInput(upper)" incoming="_SgCcAq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbp61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbqK1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_SgCbqa1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbqq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbq61MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_SgCbrK1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbra1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbrq1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_SgCbr61MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbsK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbsa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_SgCbsq1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbs61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbtK1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_SgCbta1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbtq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbt61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_SgCbuK1MEeOdBunZhTRw1w" name="ForStatement@4c8f88f.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbua1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbuq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCbu61MEeOdBunZhTRw1w" name="LoopVariables(ForStatement@4c8f88f)" outgoing="_SgCcBK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCbvK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SgCbva1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgCcAK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbvq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbv61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgCbwK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCbwa1MEeOdBunZhTRw1w" name="Call(Min)" incoming="_SgCb-61MEeOdBunZhTRw1w">
              <argument xmi:id="_SgCbwq1MEeOdBunZhTRw1w" name="Call(Min).argument(x)" incoming="_SgCb-a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbw61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbxK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCbxa1MEeOdBunZhTRw1w" name="Call(Min).argument(y)" incoming="_SgCb-q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbxq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbx61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCbyK1MEeOdBunZhTRw1w" name="Call(Min).result(result)" outgoing="_SgCb_K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbya1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbyq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCby61MEeOdBunZhTRw1w" name="Tuple@3e7d1b45" outgoing="_SgCb-61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCbzK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SgCcQq1MEeOdBunZhTRw1w">
                <argument xmi:id="_SgCbza1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SgCae61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCbzq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCbz61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SgCb0K1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SgCb-a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb0a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb0q1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCb061MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SgCcQq1MEeOdBunZhTRw1w">
                <argument xmi:id="_SgCb1K1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SgCafK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb1a1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb1q1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SgCb161MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SgCb-q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb2K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb2a1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCb2q1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_SgCcA61MEeOdBunZhTRw1w _SgCb_a1MEeOdBunZhTRw1w" incoming="_SgCcAK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCb261MEeOdBunZhTRw1w" name="Call(-)">
              <argument xmi:id="_SgCb3K1MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_SgCb_K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb3a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb3q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCb361MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_SgCb_a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb4K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb4a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCb4q1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_SgCb_q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb461MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb5K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCb5a1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SgCb5q1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgCb_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb561MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb6K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgCb6a1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCb6q1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SgCb661MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SgCb_q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb7K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb7a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SgCb7q1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SgCb_61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb761MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb8K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCb8a1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SgCcAq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb8q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb861MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCb9K1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SgCb9a1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgCcAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCb9q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCb961MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SgCb-K1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCb-a1MEeOdBunZhTRw1w" source="_SgCb0K1MEeOdBunZhTRw1w" target="_SgCbwq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCb-q1MEeOdBunZhTRw1w" source="_SgCb161MEeOdBunZhTRw1w" target="_SgCbxa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgCb-61MEeOdBunZhTRw1w" source="_SgCby61MEeOdBunZhTRw1w" target="_SgCbwa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCb_K1MEeOdBunZhTRw1w" source="_SgCbyK1MEeOdBunZhTRw1w" target="_SgCb3K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCb_a1MEeOdBunZhTRw1w" source="_SgCb2q1MEeOdBunZhTRw1w" target="_SgCb361MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCb_q1MEeOdBunZhTRw1w" source="_SgCb4q1MEeOdBunZhTRw1w" target="_SgCb661MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCb_61MEeOdBunZhTRw1w" source="_SgCb5q1MEeOdBunZhTRw1w" target="_SgCb7q1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcAK1MEeOdBunZhTRw1w" source="_SgCbva1MEeOdBunZhTRw1w" target="_SgCb2q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcAa1MEeOdBunZhTRw1w" source="_SgCb9a1MEeOdBunZhTRw1w" target="_SgCbo61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcAq1MEeOdBunZhTRw1w" source="_SgCb8a1MEeOdBunZhTRw1w" target="_SgCbpq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcA61MEeOdBunZhTRw1w" source="_SgCb2q1MEeOdBunZhTRw1w" target="_SgCboK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgCcBK1MEeOdBunZhTRw1w" source="_SgCbu61MEeOdBunZhTRw1w" target="_SgCas61MEeOdBunZhTRw1w"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SgCcBa1MEeOdBunZhTRw1w" source="_SgCahK1MEeOdBunZhTRw1w" target="_SgCasq1MEeOdBunZhTRw1w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCafa1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SgCacq1MEeOdBunZhTRw1w" parameter="_SgCaaa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCafq1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SgCada1MEeOdBunZhTRw1w _SgCaeq1MEeOdBunZhTRw1w" incoming="_SgCacq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCaf61MEeOdBunZhTRw1w" name="Input(list)" outgoing="_SgCac61MEeOdBunZhTRw1w" parameter="_SgCabK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCagK1MEeOdBunZhTRw1w" name="Fork(list)" outgoing="_SgCadq1MEeOdBunZhTRw1w _SgCae61MEeOdBunZhTRw1w _SgCaea1MEeOdBunZhTRw1w" incoming="_SgCac61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCaga1MEeOdBunZhTRw1w" name="Input(expected)" outgoing="_SgCadK1MEeOdBunZhTRw1w" parameter="_SgCab61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCagq1MEeOdBunZhTRw1w" name="Fork(expected)" outgoing="_SgCad61MEeOdBunZhTRw1w _SgCafK1MEeOdBunZhTRw1w _SgCaeK1MEeOdBunZhTRw1w" incoming="_SgCadK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SgCcBq1MEeOdBunZhTRw1w" name="Write" group="_SgCcE61MEeOdBunZhTRw1w" node="_SgCcEa1MEeOdBunZhTRw1w _SgCcEq1MEeOdBunZhTRw1w _SgCcE61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SgCcB61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SgCcCK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SgCcCa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SgCcCq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SgCcC61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SgCcDK1MEeOdBunZhTRw1w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcDa1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcDq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcD61MEeOdBunZhTRw1w" source="_SgCcEa1MEeOdBunZhTRw1w" target="_SgCcEq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcEK1MEeOdBunZhTRw1w" source="_SgCcEq1MEeOdBunZhTRw1w" target="_SgCcIK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SgCcE61MEeOdBunZhTRw1w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCcFK1MEeOdBunZhTRw1w" name="ExpressionStatement@5a46730a">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SgCcFa1MEeOdBunZhTRw1w" name="Collect(Call(write))" incoming="_SgCcQa1MEeOdBunZhTRw1w" mode="parallel" inputElement="_SgCcJa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SgCcFq1MEeOdBunZhTRw1w" name="Call(write)">
              <argument xmi:id="_SgCcF61MEeOdBunZhTRw1w" name="Call(write).argument(value)" incoming="_SgCcI61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcGK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcGa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCcGq1MEeOdBunZhTRw1w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcG61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcHK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SgCcHa1MEeOdBunZhTRw1w" name="Call(write).target" incoming="_SgCcJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcHq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcH61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_SgCcIK1MEeOdBunZhTRw1w" name="Collect(Call(write)).input(Fork(value))" outgoing="_SgCcI61MEeOdBunZhTRw1w" incoming="_SgCcEK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcIa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcIq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcI61MEeOdBunZhTRw1w" source="_SgCcIK1MEeOdBunZhTRw1w" target="_SgCcF61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcJK1MEeOdBunZhTRw1w" source="_SgCcJa1MEeOdBunZhTRw1w" target="_SgCcHa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SgCcJa1MEeOdBunZhTRw1w" name="Collect(Call(write)).inputElement" outgoing="_SgCcJK1MEeOdBunZhTRw1w" incoming="_SgCcQK1MEeOdBunZhTRw1w" regionAsInput="_SgCcFa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCcJq1MEeOdBunZhTRw1w" name="Feature(Call(At).result())" outgoing="_SgCcQa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCcJ61MEeOdBunZhTRw1w" name="Call(At)" incoming="_SgCcPq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SgCcKK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SgCcPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcKa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcKq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SgCcK61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SgCcP61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcLK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcLa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SgCcLq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SgCcQK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcL61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcMK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCcMa1MEeOdBunZhTRw1w" name="Tuple@386978c4" outgoing="_SgCcPq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SgCcMq1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SgCcM61MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel).result" outgoing="_SgCcPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcNK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcNa1MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SgCcNq1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SgCcN61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SgCcPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcOK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcOa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SgCcOq1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SgCcO61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SgCcP61MEeOdBunZhTRw1w" incoming="_SgCcPa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcPK1MEeOdBunZhTRw1w" source="_SgCcM61MEeOdBunZhTRw1w" target="_SgCcKK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcPa1MEeOdBunZhTRw1w" source="_SgCcN61MEeOdBunZhTRw1w" target="_SgCcO61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SgCcPq1MEeOdBunZhTRw1w" source="_SgCcMa1MEeOdBunZhTRw1w" target="_SgCcJ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcP61MEeOdBunZhTRw1w" source="_SgCcO61MEeOdBunZhTRw1w" target="_SgCcK61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcQK1MEeOdBunZhTRw1w" source="_SgCcLq1MEeOdBunZhTRw1w" target="_SgCcJa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SgCcQa1MEeOdBunZhTRw1w" source="_SgCcJq1MEeOdBunZhTRw1w" target="_SgCcFa1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCcEa1MEeOdBunZhTRw1w" name="Input(value)" outgoing="_SgCcD61MEeOdBunZhTRw1w" parameter="_SgCcDK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCcEq1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_SgCcEK1MEeOdBunZhTRw1w" incoming="_SgCcD61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SgCcQq1MEeOdBunZhTRw1w" clientDependency="_SgCcYa1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionFunctions$size__any__" group="_SgCcUa1MEeOdBunZhTRw1w" node="_SgCcTa1MEeOdBunZhTRw1w _SgCcTq1MEeOdBunZhTRw1w _SgCcT61MEeOdBunZhTRw1w _SgCcUK1MEeOdBunZhTRw1w _SgCcUa1MEeOdBunZhTRw1w">
      <ownedParameter xmi:id="_SgCcQ61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcRK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcRa1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SgCcRq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcR61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcSK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcSa1MEeOdBunZhTRw1w" source="_SgCcTa1MEeOdBunZhTRw1w" target="_SgCcTq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SgCcSq1MEeOdBunZhTRw1w" source="_SgCcUq1MEeOdBunZhTRw1w" target="_SgCcUK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcS61MEeOdBunZhTRw1w" source="_SgCcTq1MEeOdBunZhTRw1w" target="_SgCcVK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcTK1MEeOdBunZhTRw1w" source="_SgCcWq1MEeOdBunZhTRw1w" target="_SgCcT61MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SgCcUa1MEeOdBunZhTRw1w" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SgCcUq1MEeOdBunZhTRw1w" name="ReturnStatement@22536490" outgoing="_SgCcSq1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SgCcU61MEeOdBunZhTRw1w" name="Call(Size)">
            <argument xmi:id="_SgCcVK1MEeOdBunZhTRw1w" name="Call(Size).argument(seq)" incoming="_SgCcS61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcVa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcVq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SgCcV61MEeOdBunZhTRw1w" name="Call(Size).result()" outgoing="_SgCcXa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcWK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcWa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
          <structuredNodeOutput xmi:id="_SgCcWq1MEeOdBunZhTRw1w" name="ReturnStatement@22536490.output" outgoing="_SgCcTK1MEeOdBunZhTRw1w" incoming="_SgCcXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SgCcW61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SgCcXK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SgCcXa1MEeOdBunZhTRw1w" source="_SgCcV61MEeOdBunZhTRw1w" target="_SgCcWq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCcTa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_SgCcSa1MEeOdBunZhTRw1w" parameter="_SgCcQ61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SgCcTq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_SgCcS61MEeOdBunZhTRw1w" incoming="_SgCcSa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SgCcT61MEeOdBunZhTRw1w" name="Return" incoming="_SgCcTK1MEeOdBunZhTRw1w" parameter="_SgCcRq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SgCcUK1MEeOdBunZhTRw1w" name="Final" incoming="_SgCcSq1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SgCcXq1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_SgCcX61MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_SgCcYK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SgCcYa1MEeOdBunZhTRw1w" client="_SgCcQq1MEeOdBunZhTRw1w" supplier="_SgCcXq1MEeOdBunZhTRw1w"/>
    <profileApplication xmi:id="_SgCcYq1MEeOdBunZhTRw1w">
      <eAnnotations xmi:id="_SgCcY61MEeOdBunZhTRw1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_SgCcZK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SgB1ua1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_SgCcZa1MEeOdBunZhTRw1w" base_BehavioralFeature="_SgB1ta1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_SgCcZq1MEeOdBunZhTRw1w" base_BehavioralFeature="_SgB2R61MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SgCcZ61MEeOdBunZhTRw1w" base_BehavioralFeature="_SgB2S61MEeOdBunZhTRw1w"/>
</xmi:XMI>

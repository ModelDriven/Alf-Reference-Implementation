<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_rNTdgJ1nEeKpItXg-ZWbFg" name="Model">
    <packagedElement xmi:type="uml:Class" xmi:id="_rNTdgZ1nEeKpItXg-ZWbFg" name="Statements_Conditional" classifierBehavior="_rNTdip1nEeKpItXg-ZWbFg" isActive="true">
      <packageImport xmi:id="_rNTdgp1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_rNTdg51nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_rNTdhJ1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_rNTdhZ1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_rNTdhp1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_rNTdh51nEeKpItXg-ZWbFg" name="Statements_Conditional$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdiJ1nEeKpItXg-ZWbFg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdiZ1nEeKpItXg-ZWbFg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNTdip1nEeKpItXg-ZWbFg" name="Statements_Conditional$classifierBehavior$1" visibility="private" isActive="true" group="_rNTdi51nEeKpItXg-ZWbFg" node="_rNTdi51nEeKpItXg-ZWbFg">
        <structuredNode xmi:id="_rNTdi51nEeKpItXg-ZWbFg" name="Body(Statements_Conditional$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNTdjJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@7ffd89fc" outgoing="_rNUrw51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallOperationAction" xmi:id="_rNTdjZ1nEeKpItXg-ZWbFg" name="Call(test)" operation="_rNayRJ1nEeKpItXg-ZWbFg">
              <result xmi:id="_rNTdjp1nEeKpItXg-ZWbFg" name="Call(test).result(condition1)" outgoing="_rNTdrZ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdj51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdkJ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <result xmi:id="_rNTdkZ1nEeKpItXg-ZWbFg" name="Call(test).result(condition2)" outgoing="_rNTdrp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdkp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdk51nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <result xmi:id="_rNTdlJ1nEeKpItXg-ZWbFg" name="Call(test).result(condition3)" outgoing="_rNUEkJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdlZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdlp1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <result xmi:id="_rNTdl51nEeKpItXg-ZWbFg" name="Call(test).result(year)" outgoing="_rNUEkZ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdmJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdmZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <result xmi:id="_rNTdmp1nEeKpItXg-ZWbFg" name="Call(test).result(month)" outgoing="_rNUEkp1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdm51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdnJ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <result xmi:id="_rNTdnZ1nEeKpItXg-ZWbFg" name="Call(test).result(numDays)" outgoing="_rNUEk51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdnp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdn51nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <target xmi:id="_rNTdoJ1nEeKpItXg-ZWbFg" name="Call(test).target" incoming="_rNUElJ1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdoZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdop1nEeKpItXg-ZWbFg" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_rNTdo51nEeKpItXg-ZWbFg" name="ReadSelf">
              <result xmi:id="_rNTdpJ1nEeKpItXg-ZWbFg" name="ReadSelf.result" outgoing="_rNUElJ1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNTdpZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNTdpp1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_rNTdp51nEeKpItXg-ZWbFg" name="Fork(condition1)@3495c6c1" outgoing="_rNUrwp1nEeKpItXg-ZWbFg" incoming="_rNTdrZ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNTdqJ1nEeKpItXg-ZWbFg" name="Fork(condition2)@2c489128" outgoing="_rNUrxJ1nEeKpItXg-ZWbFg" incoming="_rNTdrp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNTdqZ1nEeKpItXg-ZWbFg" name="Fork(condition3)@5031efce" outgoing="_rNUrxp1nEeKpItXg-ZWbFg" incoming="_rNUEkJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNTdqp1nEeKpItXg-ZWbFg" name="Fork(year)@7e76e683" outgoing="_rNUryJ1nEeKpItXg-ZWbFg" incoming="_rNUEkZ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNTdq51nEeKpItXg-ZWbFg" name="Fork(month)@3017e352" outgoing="_rNUryp1nEeKpItXg-ZWbFg" incoming="_rNUEkp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNTdrJ1nEeKpItXg-ZWbFg" name="Fork(numDays)@704d3528" outgoing="_rNUrzJ1nEeKpItXg-ZWbFg" incoming="_rNUEk51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNTdrZ1nEeKpItXg-ZWbFg" source="_rNTdjp1nEeKpItXg-ZWbFg" target="_rNTdp51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNTdrp1nEeKpItXg-ZWbFg" source="_rNTdkZ1nEeKpItXg-ZWbFg" target="_rNTdqJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUEkJ1nEeKpItXg-ZWbFg" source="_rNTdlJ1nEeKpItXg-ZWbFg" target="_rNTdqZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUEkZ1nEeKpItXg-ZWbFg" source="_rNTdl51nEeKpItXg-ZWbFg" target="_rNTdqp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUEkp1nEeKpItXg-ZWbFg" source="_rNTdmp1nEeKpItXg-ZWbFg" target="_rNTdq51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUEk51nEeKpItXg-ZWbFg" source="_rNTdnZ1nEeKpItXg-ZWbFg" target="_rNTdrJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUElJ1nEeKpItXg-ZWbFg" source="_rNTdpJ1nEeKpItXg-ZWbFg" target="_rNTdoJ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUElZ1nEeKpItXg-ZWbFg" name="ExpressionStatement@7e6e6b82" outgoing="_rNUrxZ1nEeKpItXg-ZWbFg" incoming="_rNUrw51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUElp1nEeKpItXg-ZWbFg" name="Call(AssertEqual)" incoming="_rNUErZ1nEeKpItXg-ZWbFg" behavior="_rNbZap1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUEl51nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(label)" incoming="_rNUEq51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEmJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEmZ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUEmp1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value1)" incoming="_rNUrwp1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEm51nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEnJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUEnZ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value2)" incoming="_rNUErJ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEnp1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEn51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUEoJ1nEeKpItXg-ZWbFg" name="Tuple@472c57fb" outgoing="_rNUErZ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUEoZ1nEeKpItXg-ZWbFg" name="Value(&quot;condition1&quot;)">
                <result xmi:id="_rNUEop1nEeKpItXg-ZWbFg" name="Value(&quot;condition1&quot;).result" outgoing="_rNUEq51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEo51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEpJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUEpZ1nEeKpItXg-ZWbFg" value="condition1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUEpp1nEeKpItXg-ZWbFg" name="Value(alert)">
                <result xmi:id="_rNUEp51nEeKpItXg-ZWbFg" name="Value(alert).result" outgoing="_rNUErJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEqJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEqZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:InstanceValue" xmi:id="_rNUEqp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZ51nEeKpItXg-ZWbFg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUEq51nEeKpItXg-ZWbFg" source="_rNUEop1nEeKpItXg-ZWbFg" target="_rNUEl51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUErJ1nEeKpItXg-ZWbFg" source="_rNUEp51nEeKpItXg-ZWbFg" target="_rNUEnZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUErZ1nEeKpItXg-ZWbFg" source="_rNUEoJ1nEeKpItXg-ZWbFg" target="_rNUElp1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUErp1nEeKpItXg-ZWbFg" name="ExpressionStatement@62ef440a" outgoing="_rNUrx51nEeKpItXg-ZWbFg" incoming="_rNUrxZ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUEr51nEeKpItXg-ZWbFg" name="Call(AssertEqual)" incoming="_rNUExp1nEeKpItXg-ZWbFg" behavior="_rNbZap1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUEsJ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(label)" incoming="_rNUExJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEsZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEsp1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUEs51nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value1)" incoming="_rNUrxJ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEtJ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEtZ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUEtp1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value2)" incoming="_rNUExZ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEt51nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEuJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUEuZ1nEeKpItXg-ZWbFg" name="Tuple@4cc50802" outgoing="_rNUExp1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUEup1nEeKpItXg-ZWbFg" name="Value(&quot;condition2&quot;)">
                <result xmi:id="_rNUEu51nEeKpItXg-ZWbFg" name="Value(&quot;condition2&quot;).result" outgoing="_rNUExJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEvJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEvZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUEvp1nEeKpItXg-ZWbFg" value="condition2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUEv51nEeKpItXg-ZWbFg" name="Value(critical)">
                <result xmi:id="_rNUEwJ1nEeKpItXg-ZWbFg" name="Value(critical).result" outgoing="_rNUExZ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEwZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEwp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:InstanceValue" xmi:id="_rNUEw51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZaJ1nEeKpItXg-ZWbFg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUExJ1nEeKpItXg-ZWbFg" source="_rNUEu51nEeKpItXg-ZWbFg" target="_rNUEsJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUExZ1nEeKpItXg-ZWbFg" source="_rNUEwJ1nEeKpItXg-ZWbFg" target="_rNUEtp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUExp1nEeKpItXg-ZWbFg" source="_rNUEuZ1nEeKpItXg-ZWbFg" target="_rNUEr51nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUEx51nEeKpItXg-ZWbFg" name="ExpressionStatement@22adc3dc" outgoing="_rNUryZ1nEeKpItXg-ZWbFg" incoming="_rNUrx51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUEyJ1nEeKpItXg-ZWbFg" name="Call(AssertEqual)" incoming="_rNUE351nEeKpItXg-ZWbFg" behavior="_rNbZap1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUEyZ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(label)" incoming="_rNUE3Z1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEyp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEy51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUEzJ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value1)" incoming="_rNUrxp1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUEzZ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUEzp1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUEz51nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value2)" incoming="_rNUE3p1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE0J1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE0Z1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUE0p1nEeKpItXg-ZWbFg" name="Tuple@39193556" outgoing="_rNUE351nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUE051nEeKpItXg-ZWbFg" name="Value(&quot;condition3&quot;)">
                <result xmi:id="_rNUE1J1nEeKpItXg-ZWbFg" name="Value(&quot;condition3&quot;).result" outgoing="_rNUE3Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE1Z1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE1p1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUE151nEeKpItXg-ZWbFg" value="condition3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUE2J1nEeKpItXg-ZWbFg" name="Value(critical)">
                <result xmi:id="_rNUE2Z1nEeKpItXg-ZWbFg" name="Value(critical).result" outgoing="_rNUE3p1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE2p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE251nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:InstanceValue" xmi:id="_rNUE3J1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZaJ1nEeKpItXg-ZWbFg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUE3Z1nEeKpItXg-ZWbFg" source="_rNUE1J1nEeKpItXg-ZWbFg" target="_rNUEyZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUE3p1nEeKpItXg-ZWbFg" source="_rNUE2Z1nEeKpItXg-ZWbFg" target="_rNUEz51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUE351nEeKpItXg-ZWbFg" source="_rNUE0p1nEeKpItXg-ZWbFg" target="_rNUEyJ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUE4J1nEeKpItXg-ZWbFg" name="ExpressionStatement@4a940cb8" outgoing="_rNUry51nEeKpItXg-ZWbFg" incoming="_rNUryZ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUE4Z1nEeKpItXg-ZWbFg" name="Call(AssertEqual)" incoming="_rNUE-J1nEeKpItXg-ZWbFg" behavior="_rNbZap1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUE4p1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(label)" incoming="_rNUE9p1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE451nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE5J1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUE5Z1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value1)" incoming="_rNUryJ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE5p1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE551nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUE6J1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value2)" incoming="_rNUE951nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE6Z1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE6p1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUE651nEeKpItXg-ZWbFg" name="Tuple@10c2899a" outgoing="_rNUE-J1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUE7J1nEeKpItXg-ZWbFg" name="Value(&quot;year&quot;)">
                <result xmi:id="_rNUE7Z1nEeKpItXg-ZWbFg" name="Value(&quot;year&quot;).result" outgoing="_rNUE9p1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE7p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE751nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUE8J1nEeKpItXg-ZWbFg" value="year">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUE8Z1nEeKpItXg-ZWbFg" name="Value(2012)">
                <result xmi:id="_rNUE8p1nEeKpItXg-ZWbFg" name="Value(2012).result" outgoing="_rNUE951nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE851nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE9J1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUE9Z1nEeKpItXg-ZWbFg" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUE9p1nEeKpItXg-ZWbFg" source="_rNUE7Z1nEeKpItXg-ZWbFg" target="_rNUE4p1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUE951nEeKpItXg-ZWbFg" source="_rNUE8p1nEeKpItXg-ZWbFg" target="_rNUE6J1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUE-J1nEeKpItXg-ZWbFg" source="_rNUE651nEeKpItXg-ZWbFg" target="_rNUE4Z1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUE-Z1nEeKpItXg-ZWbFg" name="ExpressionStatement@55fda298" outgoing="_rNUrzZ1nEeKpItXg-ZWbFg" incoming="_rNUry51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUE-p1nEeKpItXg-ZWbFg" name="Call(AssertEqual)" incoming="_rNUFEZ1nEeKpItXg-ZWbFg" behavior="_rNbZap1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUE-51nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(label)" incoming="_rNUFD51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE_J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUE_Z1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUE_p1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value1)" incoming="_rNUryp1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUE_51nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUFAJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUFAZ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value2)" incoming="_rNUFEJ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUFAp1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUFA51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUFBJ1nEeKpItXg-ZWbFg" name="Tuple@2a69db26" outgoing="_rNUFEZ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUFBZ1nEeKpItXg-ZWbFg" name="Value(&quot;month&quot;)">
                <result xmi:id="_rNUFBp1nEeKpItXg-ZWbFg" name="Value(&quot;month&quot;).result" outgoing="_rNUFD51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUFB51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUFCJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUFCZ1nEeKpItXg-ZWbFg" value="month">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUFCp1nEeKpItXg-ZWbFg" name="Value(2)">
                <result xmi:id="_rNUFC51nEeKpItXg-ZWbFg" name="Value(2).result" outgoing="_rNUFEJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUFDJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUFDZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUFDp1nEeKpItXg-ZWbFg" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUFD51nEeKpItXg-ZWbFg" source="_rNUFBp1nEeKpItXg-ZWbFg" target="_rNUE-51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUFEJ1nEeKpItXg-ZWbFg" source="_rNUFC51nEeKpItXg-ZWbFg" target="_rNUFAZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUFEZ1nEeKpItXg-ZWbFg" source="_rNUFBJ1nEeKpItXg-ZWbFg" target="_rNUE-p1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUFEp1nEeKpItXg-ZWbFg" name="ExpressionStatement@3784c9a3" outgoing="_rNUrzp1nEeKpItXg-ZWbFg" incoming="_rNUrzZ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUFE51nEeKpItXg-ZWbFg" name="Call(AssertEqual)" incoming="_rNUrsZ1nEeKpItXg-ZWbFg" behavior="_rNbZap1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUFFJ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(label)" incoming="_rNUrr51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUFFZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUFFp1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUFF51nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value1)" incoming="_rNUrzJ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUFGJ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUroJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNUroZ1nEeKpItXg-ZWbFg" name="Call(AssertEqual).argument(value2)" incoming="_rNUrsJ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUrop1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUro51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUrpJ1nEeKpItXg-ZWbFg" name="Tuple@63e53078" outgoing="_rNUrsZ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUrpZ1nEeKpItXg-ZWbFg" name="Value(&quot;numDays&quot;)">
                <result xmi:id="_rNUrpp1nEeKpItXg-ZWbFg" name="Value(&quot;numDays&quot;).result" outgoing="_rNUrr51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUrp51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUrqJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUrqZ1nEeKpItXg-ZWbFg" value="numDays">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUrqp1nEeKpItXg-ZWbFg" name="Value(29)">
                <result xmi:id="_rNUrq51nEeKpItXg-ZWbFg" name="Value(29).result" outgoing="_rNUrsJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUrrJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUrrZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUrrp1nEeKpItXg-ZWbFg" value="29">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrr51nEeKpItXg-ZWbFg" source="_rNUrpp1nEeKpItXg-ZWbFg" target="_rNUFFJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrsJ1nEeKpItXg-ZWbFg" source="_rNUrq51nEeKpItXg-ZWbFg" target="_rNUroZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrsZ1nEeKpItXg-ZWbFg" source="_rNUrpJ1nEeKpItXg-ZWbFg" target="_rNUFE51nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUrsp1nEeKpItXg-ZWbFg" name="ExpressionStatement@1b430b76" incoming="_rNUrzp1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNUrs51nEeKpItXg-ZWbFg" name="Call(WriteLine)" incoming="_rNUrwZ1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNUrtJ1nEeKpItXg-ZWbFg" name="Call(WriteLine).argument(value)" incoming="_rNUrwJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUrtZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUrtp1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNUrt51nEeKpItXg-ZWbFg" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUruJ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUruZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUrup1nEeKpItXg-ZWbFg" name="Tuple@1b355879" outgoing="_rNUrwZ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUru51nEeKpItXg-ZWbFg" name="Value(&quot;Done&quot;)">
                <result xmi:id="_rNUrvJ1nEeKpItXg-ZWbFg" name="Value(&quot;Done&quot;).result" outgoing="_rNUrwJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUrvZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUrvp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNUrv51nEeKpItXg-ZWbFg" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrwJ1nEeKpItXg-ZWbFg" source="_rNUrvJ1nEeKpItXg-ZWbFg" target="_rNUrtJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrwZ1nEeKpItXg-ZWbFg" source="_rNUrup1nEeKpItXg-ZWbFg" target="_rNUrs51nEeKpItXg-ZWbFg"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrwp1nEeKpItXg-ZWbFg" source="_rNTdp51nEeKpItXg-ZWbFg" target="_rNUEmp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrw51nEeKpItXg-ZWbFg" source="_rNTdjJ1nEeKpItXg-ZWbFg" target="_rNUElZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrxJ1nEeKpItXg-ZWbFg" source="_rNTdqJ1nEeKpItXg-ZWbFg" target="_rNUEs51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrxZ1nEeKpItXg-ZWbFg" source="_rNUElZ1nEeKpItXg-ZWbFg" target="_rNUErp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrxp1nEeKpItXg-ZWbFg" source="_rNTdqZ1nEeKpItXg-ZWbFg" target="_rNUEzJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrx51nEeKpItXg-ZWbFg" source="_rNUErp1nEeKpItXg-ZWbFg" target="_rNUEx51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUryJ1nEeKpItXg-ZWbFg" source="_rNTdqp1nEeKpItXg-ZWbFg" target="_rNUE5Z1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUryZ1nEeKpItXg-ZWbFg" source="_rNUEx51nEeKpItXg-ZWbFg" target="_rNUE4J1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUryp1nEeKpItXg-ZWbFg" source="_rNTdq51nEeKpItXg-ZWbFg" target="_rNUE_p1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUry51nEeKpItXg-ZWbFg" source="_rNUE4J1nEeKpItXg-ZWbFg" target="_rNUE-Z1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUrzJ1nEeKpItXg-ZWbFg" source="_rNTdrJ1nEeKpItXg-ZWbFg" target="_rNUFF51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrzZ1nEeKpItXg-ZWbFg" source="_rNUE-Z1nEeKpItXg-ZWbFg" target="_rNUFEp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNUrzp1nEeKpItXg-ZWbFg" source="_rNUFEp1nEeKpItXg-ZWbFg" target="_rNUrsp1nEeKpItXg-ZWbFg"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNUrz51nEeKpItXg-ZWbFg" name="test$method$1" specification="_rNayRJ1nEeKpItXg-ZWbFg" group="_rNUr7p1nEeKpItXg-ZWbFg" node="_rNUr6J1nEeKpItXg-ZWbFg _rNUr6Z1nEeKpItXg-ZWbFg _rNUr6p1nEeKpItXg-ZWbFg _rNUr651nEeKpItXg-ZWbFg _rNUr7J1nEeKpItXg-ZWbFg _rNUr7Z1nEeKpItXg-ZWbFg _rNUr7p1nEeKpItXg-ZWbFg">
        <ownedParameter xmi:id="_rNUr0J1nEeKpItXg-ZWbFg" name="condition1" type="_rNbZZZ1nEeKpItXg-ZWbFg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr0Z1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr0p1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNUr051nEeKpItXg-ZWbFg" name="condition2" type="_rNbZZZ1nEeKpItXg-ZWbFg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr1J1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr1Z1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNUr1p1nEeKpItXg-ZWbFg" name="condition3" type="_rNbZZZ1nEeKpItXg-ZWbFg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr151nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr2J1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNUr2Z1nEeKpItXg-ZWbFg" name="year" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr2p1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr251nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNUr3J1nEeKpItXg-ZWbFg" name="month" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr3Z1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr3p1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNUr351nEeKpItXg-ZWbFg" name="numDays" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr4J1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr4Z1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr4p1nEeKpItXg-ZWbFg" source="_rNZkuZ1nEeKpItXg-ZWbFg" target="_rNUr6J1nEeKpItXg-ZWbFg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr451nEeKpItXg-ZWbFg" source="_rNZkvJ1nEeKpItXg-ZWbFg" target="_rNUr6Z1nEeKpItXg-ZWbFg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr5J1nEeKpItXg-ZWbFg" source="_rNZkv51nEeKpItXg-ZWbFg" target="_rNUr6p1nEeKpItXg-ZWbFg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr5Z1nEeKpItXg-ZWbFg" source="_rNZkwp1nEeKpItXg-ZWbFg" target="_rNUr651nEeKpItXg-ZWbFg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr5p1nEeKpItXg-ZWbFg" source="_rNZkxZ1nEeKpItXg-ZWbFg" target="_rNUr7J1nEeKpItXg-ZWbFg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr551nEeKpItXg-ZWbFg" source="_rNZkyJ1nEeKpItXg-ZWbFg" target="_rNUr7Z1nEeKpItXg-ZWbFg"/>
        <structuredNode xmi:id="_rNUr7p1nEeKpItXg-ZWbFg" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUr751nEeKpItXg-ZWbFg" name="ExpressionStatement@6cc7dc7" outgoing="_rNZky51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNUr8J1nEeKpItXg-ZWbFg" name="Fork(reading)@359e108c" outgoing="_rNZk0p1nEeKpItXg-ZWbFg _rNZk2J1nEeKpItXg-ZWbFg _rNZk2p1nEeKpItXg-ZWbFg _rNaLMZ1nEeKpItXg-ZWbFg _rNaLM51nEeKpItXg-ZWbFg" incoming="_rNUr951nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUr8Z1nEeKpItXg-ZWbFg" name="RightHandSide@1c5072d4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUr8p1nEeKpItXg-ZWbFg" name="Value(150)">
                <result xmi:id="_rNUr851nEeKpItXg-ZWbFg" name="Value(150).result" outgoing="_rNUr951nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr9J1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr9Z1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUr9p1nEeKpItXg-ZWbFg" value="150">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUr951nEeKpItXg-ZWbFg" source="_rNUr851nEeKpItXg-ZWbFg" target="_rNUr8J1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUr-J1nEeKpItXg-ZWbFg" name="ExpressionStatement@3c99980c" outgoing="_rNZkzJ1nEeKpItXg-ZWbFg" incoming="_rNZky51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNUr-Z1nEeKpItXg-ZWbFg" name="Fork(threshold)@7c44ec8b" outgoing="_rNZk051nEeKpItXg-ZWbFg" incoming="_rNUsAJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUr-p1nEeKpItXg-ZWbFg" name="RightHandSide@3a9ce995">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUr-51nEeKpItXg-ZWbFg" name="Value(10)">
                <result xmi:id="_rNUr_J1nEeKpItXg-ZWbFg" name="Value(10).result" outgoing="_rNUsAJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUr_Z1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUr_p1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUr_51nEeKpItXg-ZWbFg" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUsAJ1nEeKpItXg-ZWbFg" source="_rNUr_J1nEeKpItXg-ZWbFg" target="_rNUr-Z1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsAZ1nEeKpItXg-ZWbFg" name="ExpressionStatement@576740da" outgoing="_rNZkzZ1nEeKpItXg-ZWbFg" incoming="_rNZkzJ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNUsAp1nEeKpItXg-ZWbFg" name="Fork(safeLimit)@321591fd" outgoing="_rNZk2Z1nEeKpItXg-ZWbFg _rNaLMJ1nEeKpItXg-ZWbFg _rNaLOZ1nEeKpItXg-ZWbFg _rNaLP51nEeKpItXg-ZWbFg _rNaLQZ1nEeKpItXg-ZWbFg" incoming="_rNUsCZ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsA51nEeKpItXg-ZWbFg" name="RightHandSide@262392bb">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUsBJ1nEeKpItXg-ZWbFg" name="Value(100)">
                <result xmi:id="_rNUsBZ1nEeKpItXg-ZWbFg" name="Value(100).result" outgoing="_rNUsCZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUsBp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUsB51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUsCJ1nEeKpItXg-ZWbFg" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUsCZ1nEeKpItXg-ZWbFg" source="_rNUsBZ1nEeKpItXg-ZWbFg" target="_rNUsAp1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsCp1nEeKpItXg-ZWbFg" name="ExpressionStatement@2210e635" outgoing="_rNZkzp1nEeKpItXg-ZWbFg" incoming="_rNZkzZ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNUsC51nEeKpItXg-ZWbFg" name="Fork(criticalLimit)@176fff85" outgoing="_rNaLMp1nEeKpItXg-ZWbFg _rNaLNJ1nEeKpItXg-ZWbFg _rNaLO51nEeKpItXg-ZWbFg _rNaLQ51nEeKpItXg-ZWbFg _rNaLRZ1nEeKpItXg-ZWbFg" incoming="_rNUsEp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsDJ1nEeKpItXg-ZWbFg" name="RightHandSide@39f080c8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUsDZ1nEeKpItXg-ZWbFg" name="Value(200)">
                <result xmi:id="_rNUsDp1nEeKpItXg-ZWbFg" name="Value(200).result" outgoing="_rNUsEp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUsD51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUsEJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUsEZ1nEeKpItXg-ZWbFg" value="200">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUsEp1nEeKpItXg-ZWbFg" source="_rNUsDp1nEeKpItXg-ZWbFg" target="_rNUsC51nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsE51nEeKpItXg-ZWbFg" name="ExpressionStatement@3d56a31c" outgoing="_rNZkz51nEeKpItXg-ZWbFg" incoming="_rNZkzp1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNUsFJ1nEeKpItXg-ZWbFg" name="Fork(errorLimit)@5da1b1f9" outgoing="_rNaLR51nEeKpItXg-ZWbFg" incoming="_rNUsG51nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsFZ1nEeKpItXg-ZWbFg" name="RightHandSide@22ab8275">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUsFp1nEeKpItXg-ZWbFg" name="Value(1000)">
                <result xmi:id="_rNUsF51nEeKpItXg-ZWbFg" name="Value(1000).result" outgoing="_rNUsG51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUsGJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUsGZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUsGp1nEeKpItXg-ZWbFg" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUsG51nEeKpItXg-ZWbFg" source="_rNUsF51nEeKpItXg-ZWbFg" target="_rNUsFJ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsHJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@2efd8439" outgoing="_rNZk0J1nEeKpItXg-ZWbFg" incoming="_rNZkz51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNUsHZ1nEeKpItXg-ZWbFg" name="Fork(sensorId)@2233d29b" outgoing="_rNZk1J1nEeKpItXg-ZWbFg" incoming="_rNUsJJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNUsHp1nEeKpItXg-ZWbFg" name="RightHandSide@7847cfa7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNUsH51nEeKpItXg-ZWbFg" name="Value(1)">
                <result xmi:id="_rNUsIJ1nEeKpItXg-ZWbFg" name="Value(1).result" outgoing="_rNUsJJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNUsIZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNUsIp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNUsI51nEeKpItXg-ZWbFg" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNUsJJ1nEeKpItXg-ZWbFg" source="_rNUsIJ1nEeKpItXg-ZWbFg" target="_rNUsHZ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVSsJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@44f3b20d" outgoing="_rNZk0Z1nEeKpItXg-ZWbFg" incoming="_rNZk0J1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNVSsZ1nEeKpItXg-ZWbFg" name="Fork(monitor)@26cf515e" outgoing="_rNZk1Z1nEeKpItXg-ZWbFg" incoming="_rNVSv51nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVSsp1nEeKpItXg-ZWbFg" name="RightHandSide@74e70639">
              <node xmi:type="uml:CallOperationAction" xmi:id="_rNVSs51nEeKpItXg-ZWbFg" name="Call(Monitor)" operation="_rNbZYJ1nEeKpItXg-ZWbFg">
                <result xmi:id="_rNVStJ1nEeKpItXg-ZWbFg" name="Call(Monitor).result()" outgoing="_rNVSv51nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVStZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVStp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <target xmi:id="_rNVSt51nEeKpItXg-ZWbFg" name="Call(Monitor).target" incoming="_rNVSvp1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVSuJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVSuZ1nEeKpItXg-ZWbFg" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_rNVSup1nEeKpItXg-ZWbFg" name="Create(Monitor)" classifier="_rNayXJ1nEeKpItXg-ZWbFg">
                <result xmi:id="_rNVSu51nEeKpItXg-ZWbFg" name="Create(Monitor).result" outgoing="_rNVSvp1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVSvJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVSvZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVSvp1nEeKpItXg-ZWbFg" source="_rNVSu51nEeKpItXg-ZWbFg" target="_rNVSt51nEeKpItXg-ZWbFg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVSv51nEeKpItXg-ZWbFg" source="_rNVStJ1nEeKpItXg-ZWbFg" target="_rNVSsZ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVSwJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@ab83289" outgoing="_rNZk1p1nEeKpItXg-ZWbFg" incoming="_rNZk0Z1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNVSwZ1nEeKpItXg-ZWbFg" name="Fork(year)@33989d4c" outgoing="_rNaLSZ1nEeKpItXg-ZWbFg _rNaLSp1nEeKpItXg-ZWbFg _rNaLWZ1nEeKpItXg-ZWbFg _rNaLWp1nEeKpItXg-ZWbFg _rNaLW51nEeKpItXg-ZWbFg _rNaLYJ1nEeKpItXg-ZWbFg" incoming="_rNVSyJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVSwp1nEeKpItXg-ZWbFg" name="RightHandSide@687f030a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNVSw51nEeKpItXg-ZWbFg" name="Value(2012)">
                <result xmi:id="_rNVSxJ1nEeKpItXg-ZWbFg" name="Value(2012).result" outgoing="_rNVSyJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVSxZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVSxp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNVSx51nEeKpItXg-ZWbFg" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVSyJ1nEeKpItXg-ZWbFg" source="_rNVSxJ1nEeKpItXg-ZWbFg" target="_rNVSwZ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_rNVSyZ1nEeKpItXg-ZWbFg" name="IfStatement@29238769" outgoing="_rNaLNZ1nEeKpItXg-ZWbFg" incoming="_rNZk1p1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNVSyp1nEeKpItXg-ZWbFg" name="Call(>)">
              <argument xmi:id="_rNVSy51nEeKpItXg-ZWbFg" name="Call(>).argument(x)" incoming="_rNZk0p1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVSzJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVSzZ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNVSzp1nEeKpItXg-ZWbFg" name="Call(>).argument(y)" incoming="_rNZk051nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVSz51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS0J1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNVS0Z1nEeKpItXg-ZWbFg" name="Call(>).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS0p1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS051nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVS1J1nEeKpItXg-ZWbFg" name="ExpressionStatement@4cdf7c74">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_rNVS1Z1nEeKpItXg-ZWbFg" name="Collect(Call(raiseAlarm))" incoming="_rNVS5J1nEeKpItXg-ZWbFg" mode="parallel" inputElement="_rNVS4p1nEeKpItXg-ZWbFg">
                <node xmi:type="uml:CallOperationAction" xmi:id="_rNVS1p1nEeKpItXg-ZWbFg" name="Call(raiseAlarm)" operation="_rNbZW51nEeKpItXg-ZWbFg">
                  <argument xmi:id="_rNVS151nEeKpItXg-ZWbFg" name="Call(raiseAlarm).argument(sensorId)" incoming="_rNVS4J1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS2J1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS2Z1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <target xmi:id="_rNVS2p1nEeKpItXg-ZWbFg" name="Call(raiseAlarm).target" incoming="_rNVS4Z1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS251nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS3J1nEeKpItXg-ZWbFg" value="1"/>
                  </target>
                </node>
                <structuredNodeInput xmi:id="_rNVS3Z1nEeKpItXg-ZWbFg" name="Collect(Call(raiseAlarm)).input(Fork(sensorId)@2233d29b)" outgoing="_rNVS4J1nEeKpItXg-ZWbFg" incoming="_rNZk1J1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS3p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS351nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVS4J1nEeKpItXg-ZWbFg" source="_rNVS3Z1nEeKpItXg-ZWbFg" target="_rNVS151nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVS4Z1nEeKpItXg-ZWbFg" source="_rNVS4p1nEeKpItXg-ZWbFg" target="_rNVS2p1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_rNVS4p1nEeKpItXg-ZWbFg" name="Collect(Call(raiseAlarm)).inputElement" outgoing="_rNVS4Z1nEeKpItXg-ZWbFg" incoming="_rNZk1Z1nEeKpItXg-ZWbFg" regionAsInput="_rNVS1Z1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVS451nEeKpItXg-ZWbFg" name="Feature(Fork(monitor)@26cf515e)" outgoing="_rNVS5J1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_rNVS5J1nEeKpItXg-ZWbFg" source="_rNVS451nEeKpItXg-ZWbFg" target="_rNVS1Z1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNVS5Z1nEeKpItXg-ZWbFg" name="Value(true)">
              <result xmi:id="_rNVS5p1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS551nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS6J1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_rNVS6Z1nEeKpItXg-ZWbFg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <clause xmi:id="_rNVS6p1nEeKpItXg-ZWbFg" body="_rNVS1J1nEeKpItXg-ZWbFg" decider="_rNVS0Z1nEeKpItXg-ZWbFg" successorClause="_rNVS651nEeKpItXg-ZWbFg" test="_rNVSyp1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNVS651nEeKpItXg-ZWbFg" decider="_rNVS5p1nEeKpItXg-ZWbFg" predecessorClause="_rNVS6p1nEeKpItXg-ZWbFg" test="_rNVS5Z1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_rNVS7J1nEeKpItXg-ZWbFg" name="IfStatement@76152837" outgoing="_rNaLNp1nEeKpItXg-ZWbFg" incoming="_rNaLNZ1nEeKpItXg-ZWbFg" isAssured="true" isDeterminate="true">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNVS7Z1nEeKpItXg-ZWbFg" name="Call(&lt;=)">
              <argument xmi:id="_rNVS7p1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(x)" incoming="_rNZk2J1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS751nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS8J1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNVS8Z1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(y)" incoming="_rNZk2Z1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS8p1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS851nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNVS9J1nEeKpItXg-ZWbFg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS9Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS9p1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVS951nEeKpItXg-ZWbFg" name="ExpressionStatement@2f5da382">
              <node xmi:type="uml:ForkNode" xmi:id="_rNVS-J1nEeKpItXg-ZWbFg" name="Fork(condition1)@17199023" outgoing="_rNV5-J1nEeKpItXg-ZWbFg" incoming="_rNVS_51nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVS-Z1nEeKpItXg-ZWbFg" name="RightHandSide@f45f5ae">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNVS-p1nEeKpItXg-ZWbFg" name="Value(normal)">
                  <result xmi:id="_rNVS-51nEeKpItXg-ZWbFg" name="Value(normal).result" outgoing="_rNVS_51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVS_J1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVS_Z1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNVS_p1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZp1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVS_51nEeKpItXg-ZWbFg" source="_rNVS-51nEeKpItXg-ZWbFg" target="_rNVS-J1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVTAJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@17199023)">
              <structuredNodeInput xmi:id="_rNVTAZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@17199023).input" outgoing="_rNVTB51nEeKpItXg-ZWbFg" incoming="_rNV5-J1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTAp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTA51nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNVTBJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@17199023).output" incoming="_rNVTB51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTBZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTBp1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVTB51nEeKpItXg-ZWbFg" source="_rNVTAZ1nEeKpItXg-ZWbFg" target="_rNVTBJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNVTCJ1nEeKpItXg-ZWbFg" name="Call(>)">
              <argument xmi:id="_rNVTCZ1nEeKpItXg-ZWbFg" name="Call(>).argument(x)" incoming="_rNZk2p1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTCp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTC51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNVTDJ1nEeKpItXg-ZWbFg" name="Call(>).argument(y)" incoming="_rNaLMJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTDZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTDp1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNVTD51nEeKpItXg-ZWbFg" name="Call(>).result(result)" outgoing="_rNV5-p1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTEJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTEZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVTEp1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@687db965.operand2" incoming="_rNV5-51nEeKpItXg-ZWbFg">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNVTE51nEeKpItXg-ZWbFg" name="Call(&lt;=)">
                <argument xmi:id="_rNVTFJ1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(x)" incoming="_rNaLMZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTFZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTFp1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNVTF51nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(y)" incoming="_rNaLMp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTGJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTGZ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNVTGp1nEeKpItXg-ZWbFg" name="Call(&lt;=).result(result)" outgoing="_rNVTIJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTG51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTHJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
              <structuredNodeOutput xmi:id="_rNVTHZ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@687db965.operand2.result" outgoing="_rNV5_51nEeKpItXg-ZWbFg" incoming="_rNVTIJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTHp1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTH51nEeKpItXg-ZWbFg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVTIJ1nEeKpItXg-ZWbFg" source="_rNVTGp1nEeKpItXg-ZWbFg" target="_rNVTHZ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVTIZ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@687db965.operand3" incoming="_rNV5_Z1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNVTIp1nEeKpItXg-ZWbFg" name="Value(false)">
                <result xmi:id="_rNVTI51nEeKpItXg-ZWbFg" name="Value(false).result" outgoing="_rNVTKp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTJJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTJZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_rNVTJp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_rNVTJ51nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@687db965.operand3.result" outgoing="_rNV6AJ1nEeKpItXg-ZWbFg" incoming="_rNVTKp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNVTKJ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNVTKZ1nEeKpItXg-ZWbFg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNVTKp1nEeKpItXg-ZWbFg" source="_rNVTI51nEeKpItXg-ZWbFg" target="_rNVTJ51nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_rNVTK51nEeKpItXg-ZWbFg" name="Initial(ConditionalLogicalExpression@687db965)" outgoing="_rNV5-Z1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_rNVTLJ1nEeKpItXg-ZWbFg" name="Decision(ConditionalLogicalExpression@687db965)" outgoing="_rNV5-51nEeKpItXg-ZWbFg _rNV5_Z1nEeKpItXg-ZWbFg" incoming="_rNV5-Z1nEeKpItXg-ZWbFg _rNV5-p1nEeKpItXg-ZWbFg" decisionInputFlow="_rNV5-p1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:MergeNode" xmi:id="_rNVTLZ1nEeKpItXg-ZWbFg" name="Merge(ConditionalLogicalExpression@687db965.result)" outgoing="_rNV6AZ1nEeKpItXg-ZWbFg" incoming="_rNV5_51nEeKpItXg-ZWbFg _rNV6AJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNVTLp1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@687db965.result))">
              <structuredNodeInput xmi:id="_rNV5wJ1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@687db965.result)).input" outgoing="_rNV5xp1nEeKpItXg-ZWbFg" incoming="_rNV6AZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV5wZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV5wp1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNV5w51nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@687db965.result)).output" incoming="_rNV5xp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV5xJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV5xZ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV5xp1nEeKpItXg-ZWbFg" source="_rNV5wJ1nEeKpItXg-ZWbFg" target="_rNV5w51nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV5x51nEeKpItXg-ZWbFg" name="ExpressionStatement@2f474c10">
              <node xmi:type="uml:ForkNode" xmi:id="_rNV5yJ1nEeKpItXg-ZWbFg" name="Fork(condition1)@4ee2729c" outgoing="_rNV6Ap1nEeKpItXg-ZWbFg" incoming="_rNV5z51nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV5yZ1nEeKpItXg-ZWbFg" name="RightHandSide@74d28839">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNV5yp1nEeKpItXg-ZWbFg" name="Value(alert)">
                  <result xmi:id="_rNV5y51nEeKpItXg-ZWbFg" name="Value(alert).result" outgoing="_rNV5z51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV5zJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV5zZ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNV5zp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZ51nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV5z51nEeKpItXg-ZWbFg" source="_rNV5y51nEeKpItXg-ZWbFg" target="_rNV5yJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV50J1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@4ee2729c)">
              <structuredNodeInput xmi:id="_rNV50Z1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@4ee2729c).input" outgoing="_rNV5151nEeKpItXg-ZWbFg" incoming="_rNV6Ap1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV50p1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV5051nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNV51J1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@4ee2729c).output" incoming="_rNV5151nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV51Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV51p1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV5151nEeKpItXg-ZWbFg" source="_rNV50Z1nEeKpItXg-ZWbFg" target="_rNV51J1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNV52J1nEeKpItXg-ZWbFg" name="Call(>)">
              <argument xmi:id="_rNV52Z1nEeKpItXg-ZWbFg" name="Call(>).argument(x)" incoming="_rNaLM51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV52p1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV5251nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNV53J1nEeKpItXg-ZWbFg" name="Call(>).argument(y)" incoming="_rNaLNJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV53Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV53p1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNV5351nEeKpItXg-ZWbFg" name="Call(>).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV54J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV54Z1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV54p1nEeKpItXg-ZWbFg" name="ExpressionStatement@31bb77bf">
              <node xmi:type="uml:ForkNode" xmi:id="_rNV5451nEeKpItXg-ZWbFg" name="Fork(condition1)@5da40ac" outgoing="_rNV6A51nEeKpItXg-ZWbFg" incoming="_rNV56p1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV55J1nEeKpItXg-ZWbFg" name="RightHandSide@3bcbdf34">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNV55Z1nEeKpItXg-ZWbFg" name="Value(critical)">
                  <result xmi:id="_rNV55p1nEeKpItXg-ZWbFg" name="Value(critical).result" outgoing="_rNV56p1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV5551nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV56J1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNV56Z1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZaJ1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV56p1nEeKpItXg-ZWbFg" source="_rNV55p1nEeKpItXg-ZWbFg" target="_rNV5451nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV5651nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@5da40ac)">
              <structuredNodeInput xmi:id="_rNV57J1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@5da40ac).input" outgoing="_rNV58p1nEeKpItXg-ZWbFg" incoming="_rNV6A51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV57Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV57p1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNV5751nEeKpItXg-ZWbFg" name="Passthru(Fork(condition1)@5da40ac).output" incoming="_rNV58p1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV58J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV58Z1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV58p1nEeKpItXg-ZWbFg" source="_rNV57J1nEeKpItXg-ZWbFg" target="_rNV5751nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNV5851nEeKpItXg-ZWbFg" name="Value(true)">
              <result xmi:id="_rNV59J1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV59Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV59p1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_rNV5951nEeKpItXg-ZWbFg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV5-J1nEeKpItXg-ZWbFg" source="_rNVS-J1nEeKpItXg-ZWbFg" target="_rNVTAZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNV5-Z1nEeKpItXg-ZWbFg" source="_rNVTK51nEeKpItXg-ZWbFg" target="_rNVTLJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV5-p1nEeKpItXg-ZWbFg" source="_rNVTD51nEeKpItXg-ZWbFg" target="_rNVTLJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNV5-51nEeKpItXg-ZWbFg" source="_rNVTLJ1nEeKpItXg-ZWbFg" target="_rNVTEp1nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNV5_J1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNV5_Z1nEeKpItXg-ZWbFg" source="_rNVTLJ1nEeKpItXg-ZWbFg" target="_rNVTIZ1nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNV5_p1nEeKpItXg-ZWbFg" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV5_51nEeKpItXg-ZWbFg" source="_rNVTHZ1nEeKpItXg-ZWbFg" target="_rNVTLZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6AJ1nEeKpItXg-ZWbFg" source="_rNVTJ51nEeKpItXg-ZWbFg" target="_rNVTLZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6AZ1nEeKpItXg-ZWbFg" source="_rNVTLZ1nEeKpItXg-ZWbFg" target="_rNV5wJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6Ap1nEeKpItXg-ZWbFg" source="_rNV5yJ1nEeKpItXg-ZWbFg" target="_rNV50Z1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6A51nEeKpItXg-ZWbFg" source="_rNV5451nEeKpItXg-ZWbFg" target="_rNV57J1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNV6BJ1nEeKpItXg-ZWbFg" body="_rNVS951nEeKpItXg-ZWbFg _rNVTAJ1nEeKpItXg-ZWbFg" bodyOutput="_rNVTBJ1nEeKpItXg-ZWbFg" decider="_rNVS9J1nEeKpItXg-ZWbFg" successorClause="_rNV6B51nEeKpItXg-ZWbFg" test="_rNVS7Z1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNV6BZ1nEeKpItXg-ZWbFg" body="_rNV5x51nEeKpItXg-ZWbFg _rNV50J1nEeKpItXg-ZWbFg" bodyOutput="_rNV51J1nEeKpItXg-ZWbFg" decider="_rNV5w51nEeKpItXg-ZWbFg" successorClause="_rNV6B51nEeKpItXg-ZWbFg" test="_rNVTCJ1nEeKpItXg-ZWbFg _rNVTEp1nEeKpItXg-ZWbFg _rNVTIZ1nEeKpItXg-ZWbFg _rNVTLp1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNV6Bp1nEeKpItXg-ZWbFg" body="_rNV54p1nEeKpItXg-ZWbFg _rNV5651nEeKpItXg-ZWbFg" bodyOutput="_rNV5751nEeKpItXg-ZWbFg" decider="_rNV5351nEeKpItXg-ZWbFg" successorClause="_rNV6B51nEeKpItXg-ZWbFg" test="_rNV52J1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNV6B51nEeKpItXg-ZWbFg" decider="_rNV59J1nEeKpItXg-ZWbFg" predecessorClause="_rNV6BJ1nEeKpItXg-ZWbFg _rNV6BZ1nEeKpItXg-ZWbFg _rNV6Bp1nEeKpItXg-ZWbFg" test="_rNV5851nEeKpItXg-ZWbFg"/>
            <result xmi:id="_rNV6CJ1nEeKpItXg-ZWbFg" name="IfStatement@76152837.result(condition1)" outgoing="_rNZk151nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6CZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6Cp1nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNV6C51nEeKpItXg-ZWbFg" name="Fork(condition1)" outgoing="_rNaLXZ1nEeKpItXg-ZWbFg" incoming="_rNZk151nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6DJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@41516a8d" outgoing="_rNaLPJ1nEeKpItXg-ZWbFg" incoming="_rNaLNp1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ForkNode" xmi:id="_rNV6DZ1nEeKpItXg-ZWbFg" name="Fork(reading)@5a4c8604" outgoing="_rNaLOJ1nEeKpItXg-ZWbFg _rNaLOp1nEeKpItXg-ZWbFg _rNaLPp1nEeKpItXg-ZWbFg _rNaLQJ1nEeKpItXg-ZWbFg _rNaLQp1nEeKpItXg-ZWbFg _rNaLRJ1nEeKpItXg-ZWbFg _rNaLRp1nEeKpItXg-ZWbFg" incoming="_rNV6FJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6Dp1nEeKpItXg-ZWbFg" name="RightHandSide@55f29eec">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNV6D51nEeKpItXg-ZWbFg" name="Value(500)">
                <result xmi:id="_rNV6EJ1nEeKpItXg-ZWbFg" name="Value(500).result" outgoing="_rNV6FJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6EZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6Ep1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNV6E51nEeKpItXg-ZWbFg" value="500">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6FJ1nEeKpItXg-ZWbFg" source="_rNV6EJ1nEeKpItXg-ZWbFg" target="_rNV6DZ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_rNV6FZ1nEeKpItXg-ZWbFg" name="IfStatement@5dc5ae5e" outgoing="_rNaLSJ1nEeKpItXg-ZWbFg" incoming="_rNaLPJ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNV6Fp1nEeKpItXg-ZWbFg" name="Call(&lt;=)">
              <argument xmi:id="_rNV6F51nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(x)" incoming="_rNaLOJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6GJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6GZ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNV6Gp1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(y)" incoming="_rNaLOZ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6G51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6HJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNV6HZ1nEeKpItXg-ZWbFg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6Hp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6H51nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6IJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@10a73f18">
              <node xmi:type="uml:ForkNode" xmi:id="_rNV6IZ1nEeKpItXg-ZWbFg" name="Fork(condition2)@7f7f839a" outgoing="_rNWg651nEeKpItXg-ZWbFg" incoming="_rNV6KJ1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6Ip1nEeKpItXg-ZWbFg" name="RightHandSide@c9934db">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNV6I51nEeKpItXg-ZWbFg" name="Value(normal)">
                  <result xmi:id="_rNV6JJ1nEeKpItXg-ZWbFg" name="Value(normal).result" outgoing="_rNV6KJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6JZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6Jp1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNV6J51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZp1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6KJ1nEeKpItXg-ZWbFg" source="_rNV6JJ1nEeKpItXg-ZWbFg" target="_rNV6IZ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6KZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@7f7f839a)">
              <structuredNodeInput xmi:id="_rNV6Kp1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@7f7f839a).input" outgoing="_rNV6MJ1nEeKpItXg-ZWbFg" incoming="_rNWg651nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6K51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6LJ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNV6LZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@7f7f839a).output" incoming="_rNV6MJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6Lp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6L51nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6MJ1nEeKpItXg-ZWbFg" source="_rNV6Kp1nEeKpItXg-ZWbFg" target="_rNV6LZ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNV6MZ1nEeKpItXg-ZWbFg" name="Call(&lt;=)">
              <argument xmi:id="_rNV6Mp1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(x)" incoming="_rNaLOp1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6M51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6NJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNV6NZ1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(y)" incoming="_rNaLO51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6Np1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6N51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNV6OJ1nEeKpItXg-ZWbFg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6OZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6Op1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6O51nEeKpItXg-ZWbFg" name="ExpressionStatement@7ad84bd6">
              <node xmi:type="uml:ForkNode" xmi:id="_rNV6PJ1nEeKpItXg-ZWbFg" name="Fork(condition2)@1d751be1" outgoing="_rNWg7J1nEeKpItXg-ZWbFg" incoming="_rNV6Q51nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6PZ1nEeKpItXg-ZWbFg" name="RightHandSide@73795fe2">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNV6Pp1nEeKpItXg-ZWbFg" name="Value(alert)">
                  <result xmi:id="_rNV6P51nEeKpItXg-ZWbFg" name="Value(alert).result" outgoing="_rNV6Q51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6QJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNV6QZ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNV6Qp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZ51nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNV6Q51nEeKpItXg-ZWbFg" source="_rNV6P51nEeKpItXg-ZWbFg" target="_rNV6PJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNV6RJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@1d751be1)">
              <structuredNodeInput xmi:id="_rNV6RZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@1d751be1).input" outgoing="_rNWg1J1nEeKpItXg-ZWbFg" incoming="_rNWg7J1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNV6Rp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg0J1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNWg0Z1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@1d751be1).output" incoming="_rNWg1J1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg0p1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg051nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWg1J1nEeKpItXg-ZWbFg" source="_rNV6RZ1nEeKpItXg-ZWbFg" target="_rNWg0Z1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNWg1Z1nEeKpItXg-ZWbFg" name="Value(true)">
              <result xmi:id="_rNWg1p1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg151nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg2J1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_rNWg2Z1nEeKpItXg-ZWbFg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWg2p1nEeKpItXg-ZWbFg" name="ExpressionStatement@78ed3c43">
              <node xmi:type="uml:ForkNode" xmi:id="_rNWg251nEeKpItXg-ZWbFg" name="Fork(condition2)@13cc7f39" outgoing="_rNWg7Z1nEeKpItXg-ZWbFg" incoming="_rNWg4p1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWg3J1nEeKpItXg-ZWbFg" name="RightHandSide@56b48156">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNWg3Z1nEeKpItXg-ZWbFg" name="Value(critical)">
                  <result xmi:id="_rNWg3p1nEeKpItXg-ZWbFg" name="Value(critical).result" outgoing="_rNWg4p1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg351nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg4J1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNWg4Z1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZaJ1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWg4p1nEeKpItXg-ZWbFg" source="_rNWg3p1nEeKpItXg-ZWbFg" target="_rNWg251nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWg451nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@13cc7f39)">
              <structuredNodeInput xmi:id="_rNWg5J1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@13cc7f39).input" outgoing="_rNWg6p1nEeKpItXg-ZWbFg" incoming="_rNWg7Z1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg5Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg5p1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNWg551nEeKpItXg-ZWbFg" name="Passthru(Fork(condition2)@13cc7f39).output" incoming="_rNWg6p1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg6J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg6Z1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWg6p1nEeKpItXg-ZWbFg" source="_rNWg5J1nEeKpItXg-ZWbFg" target="_rNWg551nEeKpItXg-ZWbFg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWg651nEeKpItXg-ZWbFg" source="_rNV6IZ1nEeKpItXg-ZWbFg" target="_rNV6Kp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWg7J1nEeKpItXg-ZWbFg" source="_rNV6PJ1nEeKpItXg-ZWbFg" target="_rNV6RZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWg7Z1nEeKpItXg-ZWbFg" source="_rNWg251nEeKpItXg-ZWbFg" target="_rNWg5J1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNWg7p1nEeKpItXg-ZWbFg" body="_rNV6IJ1nEeKpItXg-ZWbFg _rNV6KZ1nEeKpItXg-ZWbFg" bodyOutput="_rNV6LZ1nEeKpItXg-ZWbFg" decider="_rNV6HZ1nEeKpItXg-ZWbFg" successorClause="_rNWg751nEeKpItXg-ZWbFg" test="_rNV6Fp1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNWg751nEeKpItXg-ZWbFg" body="_rNV6O51nEeKpItXg-ZWbFg _rNV6RJ1nEeKpItXg-ZWbFg" bodyOutput="_rNWg0Z1nEeKpItXg-ZWbFg" decider="_rNV6OJ1nEeKpItXg-ZWbFg" predecessorClause="_rNWg7p1nEeKpItXg-ZWbFg" successorClause="_rNWg8J1nEeKpItXg-ZWbFg" test="_rNV6MZ1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNWg8J1nEeKpItXg-ZWbFg" body="_rNWg2p1nEeKpItXg-ZWbFg _rNWg451nEeKpItXg-ZWbFg" bodyOutput="_rNWg551nEeKpItXg-ZWbFg" decider="_rNWg1p1nEeKpItXg-ZWbFg" predecessorClause="_rNWg751nEeKpItXg-ZWbFg" test="_rNWg1Z1nEeKpItXg-ZWbFg"/>
            <result xmi:id="_rNWg8Z1nEeKpItXg-ZWbFg" name="IfStatement@5dc5ae5e.result(condition2)" outgoing="_rNaLN51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg8p1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg851nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNWg9J1nEeKpItXg-ZWbFg" name="Fork(condition2)" outgoing="_rNaLXp1nEeKpItXg-ZWbFg" incoming="_rNaLN51nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_rNWg9Z1nEeKpItXg-ZWbFg" name="IfStatement@7924f073" outgoing="_rNaLS51nEeKpItXg-ZWbFg" incoming="_rNaLSJ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNWg9p1nEeKpItXg-ZWbFg" name="Call(&lt;=)">
              <argument xmi:id="_rNWg951nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(x)" incoming="_rNaLPp1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg-J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg-Z1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNWg-p1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(y)" incoming="_rNaLP51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg-51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg_J1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNWg_Z1nEeKpItXg-ZWbFg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWg_p1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWg_51nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhAJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@4d02d54f">
              <node xmi:type="uml:ForkNode" xmi:id="_rNWhAZ1nEeKpItXg-ZWbFg" name="Fork(condition3)@65348bce" outgoing="_rNXILJ1nEeKpItXg-ZWbFg" incoming="_rNWhCJ1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhAp1nEeKpItXg-ZWbFg" name="RightHandSide@5cc6b54a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNWhA51nEeKpItXg-ZWbFg" name="Value(normal)">
                  <result xmi:id="_rNWhBJ1nEeKpItXg-ZWbFg" name="Value(normal).result" outgoing="_rNWhCJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhBZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhBp1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNWhB51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZp1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhCJ1nEeKpItXg-ZWbFg" source="_rNWhBJ1nEeKpItXg-ZWbFg" target="_rNWhAZ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhCZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@65348bce)">
              <structuredNodeInput xmi:id="_rNWhCp1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@65348bce).input" outgoing="_rNWhEJ1nEeKpItXg-ZWbFg" incoming="_rNXILJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhC51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhDJ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNWhDZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@65348bce).output" incoming="_rNWhEJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhDp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhD51nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhEJ1nEeKpItXg-ZWbFg" source="_rNWhCp1nEeKpItXg-ZWbFg" target="_rNWhDZ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNWhEZ1nEeKpItXg-ZWbFg" name="Call(>)">
              <argument xmi:id="_rNWhEp1nEeKpItXg-ZWbFg" name="Call(>).argument(x)" incoming="_rNaLQJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhE51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhFJ1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNWhFZ1nEeKpItXg-ZWbFg" name="Call(>).argument(y)" incoming="_rNaLQZ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhFp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhF51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNWhGJ1nEeKpItXg-ZWbFg" name="Call(>).result(result)" outgoing="_rNXILp1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhGZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhGp1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhG51nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2f8c0993.operand2" incoming="_rNXIL51nEeKpItXg-ZWbFg">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNWhHJ1nEeKpItXg-ZWbFg" name="Call(&lt;=)">
                <argument xmi:id="_rNWhHZ1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(x)" incoming="_rNaLQp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhHp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhH51nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNWhIJ1nEeKpItXg-ZWbFg" name="Call(&lt;=).argument(y)" incoming="_rNaLQ51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhIZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhIp1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNWhI51nEeKpItXg-ZWbFg" name="Call(&lt;=).result(result)" outgoing="_rNWhKZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhJJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhJZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
              <structuredNodeOutput xmi:id="_rNWhJp1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2f8c0993.operand2.result" outgoing="_rNXIM51nEeKpItXg-ZWbFg" incoming="_rNWhKZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhJ51nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhKJ1nEeKpItXg-ZWbFg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhKZ1nEeKpItXg-ZWbFg" source="_rNWhI51nEeKpItXg-ZWbFg" target="_rNWhJp1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhKp1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2f8c0993.operand3" incoming="_rNXIMZ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNWhK51nEeKpItXg-ZWbFg" name="Value(false)">
                <result xmi:id="_rNWhLJ1nEeKpItXg-ZWbFg" name="Value(false).result" outgoing="_rNWhM51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhLZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhLp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_rNWhL51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_rNWhMJ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2f8c0993.operand3.result" outgoing="_rNXINJ1nEeKpItXg-ZWbFg" incoming="_rNWhM51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhMZ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhMp1nEeKpItXg-ZWbFg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhM51nEeKpItXg-ZWbFg" source="_rNWhLJ1nEeKpItXg-ZWbFg" target="_rNWhMJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_rNWhNJ1nEeKpItXg-ZWbFg" name="Initial(ConditionalLogicalExpression@2f8c0993)" outgoing="_rNXILZ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_rNWhNZ1nEeKpItXg-ZWbFg" name="Decision(ConditionalLogicalExpression@2f8c0993)" outgoing="_rNXIL51nEeKpItXg-ZWbFg _rNXIMZ1nEeKpItXg-ZWbFg" incoming="_rNXILZ1nEeKpItXg-ZWbFg _rNXILp1nEeKpItXg-ZWbFg" decisionInputFlow="_rNXILp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:MergeNode" xmi:id="_rNWhNp1nEeKpItXg-ZWbFg" name="Merge(ConditionalLogicalExpression@2f8c0993.result)" outgoing="_rNXINZ1nEeKpItXg-ZWbFg" incoming="_rNXIM51nEeKpItXg-ZWbFg _rNXINJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhN51nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@2f8c0993.result))">
              <structuredNodeInput xmi:id="_rNWhOJ1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@2f8c0993.result)).input" outgoing="_rNWhPp1nEeKpItXg-ZWbFg" incoming="_rNXINZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhOZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhOp1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNWhO51nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@2f8c0993.result)).output" incoming="_rNWhPp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhPJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhPZ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhPp1nEeKpItXg-ZWbFg" source="_rNWhOJ1nEeKpItXg-ZWbFg" target="_rNWhO51nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhP51nEeKpItXg-ZWbFg" name="ExpressionStatement@4a9358fb">
              <node xmi:type="uml:ForkNode" xmi:id="_rNWhQJ1nEeKpItXg-ZWbFg" name="Fork(condition3)@f34db0e" outgoing="_rNXINp1nEeKpItXg-ZWbFg" incoming="_rNWhR51nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhQZ1nEeKpItXg-ZWbFg" name="RightHandSide@57197bee">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNWhQp1nEeKpItXg-ZWbFg" name="Value(alert)">
                  <result xmi:id="_rNWhQ51nEeKpItXg-ZWbFg" name="Value(alert).result" outgoing="_rNWhR51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhRJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhRZ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNWhRp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZZ51nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhR51nEeKpItXg-ZWbFg" source="_rNWhQ51nEeKpItXg-ZWbFg" target="_rNWhQJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNWhSJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@f34db0e)">
              <structuredNodeInput xmi:id="_rNWhSZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@f34db0e).input" outgoing="_rNWhT51nEeKpItXg-ZWbFg" incoming="_rNXINp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhSp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhS51nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNWhTJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@f34db0e).output" incoming="_rNWhT51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhTZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhTp1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNWhT51nEeKpItXg-ZWbFg" source="_rNWhSZ1nEeKpItXg-ZWbFg" target="_rNWhTJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNWhUJ1nEeKpItXg-ZWbFg" name="Call(>)">
              <argument xmi:id="_rNWhUZ1nEeKpItXg-ZWbFg" name="Call(>).argument(x)" incoming="_rNaLRJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhUp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhU51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <argument xmi:id="_rNWhVJ1nEeKpItXg-ZWbFg" name="Call(>).argument(y)" incoming="_rNaLRZ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhVZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNWhVp1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNWhV51nEeKpItXg-ZWbFg" name="Call(>).result(result)" outgoing="_rNXIOJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNWhWJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH4J1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXH4Z1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@186eef5a.operand2" incoming="_rNXIOZ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNXH4p1nEeKpItXg-ZWbFg" name="Call(&lt;)">
                <argument xmi:id="_rNXH451nEeKpItXg-ZWbFg" name="Call(&lt;).argument(x)" incoming="_rNaLRp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH5J1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH5Z1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNXH5p1nEeKpItXg-ZWbFg" name="Call(&lt;).argument(y)" incoming="_rNaLR51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH551nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH6J1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNXH6Z1nEeKpItXg-ZWbFg" name="Call(&lt;).result(result)" outgoing="_rNXH751nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH6p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH651nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
              </node>
              <structuredNodeOutput xmi:id="_rNXH7J1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@186eef5a.operand2.result" outgoing="_rNXIPZ1nEeKpItXg-ZWbFg" incoming="_rNXH751nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH7Z1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH7p1nEeKpItXg-ZWbFg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXH751nEeKpItXg-ZWbFg" source="_rNXH6Z1nEeKpItXg-ZWbFg" target="_rNXH7J1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXH8J1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@186eef5a.operand3" incoming="_rNXIO51nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXH8Z1nEeKpItXg-ZWbFg" name="Value(false)">
                <result xmi:id="_rNXH8p1nEeKpItXg-ZWbFg" name="Value(false).result" outgoing="_rNXH-Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH851nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH9J1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_rNXH9Z1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_rNXH9p1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@186eef5a.operand3.result" outgoing="_rNXIPp1nEeKpItXg-ZWbFg" incoming="_rNXH-Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH951nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXH-J1nEeKpItXg-ZWbFg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXH-Z1nEeKpItXg-ZWbFg" source="_rNXH8p1nEeKpItXg-ZWbFg" target="_rNXH9p1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_rNXH-p1nEeKpItXg-ZWbFg" name="Initial(ConditionalLogicalExpression@186eef5a)" outgoing="_rNXIN51nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_rNXH-51nEeKpItXg-ZWbFg" name="Decision(ConditionalLogicalExpression@186eef5a)" outgoing="_rNXIOZ1nEeKpItXg-ZWbFg _rNXIO51nEeKpItXg-ZWbFg" incoming="_rNXIN51nEeKpItXg-ZWbFg _rNXIOJ1nEeKpItXg-ZWbFg" decisionInputFlow="_rNXIOJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:MergeNode" xmi:id="_rNXH_J1nEeKpItXg-ZWbFg" name="Merge(ConditionalLogicalExpression@186eef5a.result)" outgoing="_rNXIP51nEeKpItXg-ZWbFg" incoming="_rNXIPZ1nEeKpItXg-ZWbFg _rNXIPp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXH_Z1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@186eef5a.result))">
              <structuredNodeInput xmi:id="_rNXH_p1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@186eef5a.result)).input" outgoing="_rNXIBJ1nEeKpItXg-ZWbFg" incoming="_rNXIP51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXH_51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIAJ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNXIAZ1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@186eef5a.result)).output" incoming="_rNXIBJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIAp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIA51nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIBJ1nEeKpItXg-ZWbFg" source="_rNXH_p1nEeKpItXg-ZWbFg" target="_rNXIAZ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIBZ1nEeKpItXg-ZWbFg" name="ExpressionStatement@67f7b9f5">
              <node xmi:type="uml:ForkNode" xmi:id="_rNXIBp1nEeKpItXg-ZWbFg" name="Fork(condition3)@45038e17" outgoing="_rNXIQJ1nEeKpItXg-ZWbFg" incoming="_rNXIDZ1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIB51nEeKpItXg-ZWbFg" name="RightHandSide@6c65ab66">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXICJ1nEeKpItXg-ZWbFg" name="Value(critical)">
                  <result xmi:id="_rNXICZ1nEeKpItXg-ZWbFg" name="Value(critical).result" outgoing="_rNXIDZ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXICp1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIC51nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNXIDJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZaJ1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIDZ1nEeKpItXg-ZWbFg" source="_rNXICZ1nEeKpItXg-ZWbFg" target="_rNXIBp1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIDp1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@45038e17)">
              <structuredNodeInput xmi:id="_rNXID51nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@45038e17).input" outgoing="_rNXIFZ1nEeKpItXg-ZWbFg" incoming="_rNXIQJ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIEJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIEZ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNXIEp1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@45038e17).output" incoming="_rNXIFZ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIE51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIFJ1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIFZ1nEeKpItXg-ZWbFg" source="_rNXID51nEeKpItXg-ZWbFg" target="_rNXIEp1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXIFp1nEeKpItXg-ZWbFg" name="Value(true)">
              <result xmi:id="_rNXIF51nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIGJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIGZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_rNXIGp1nEeKpItXg-ZWbFg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIG51nEeKpItXg-ZWbFg" name="ExpressionStatement@61ea1dfc">
              <node xmi:type="uml:ForkNode" xmi:id="_rNXIHJ1nEeKpItXg-ZWbFg" name="Fork(condition3)@75b8c5e5" outgoing="_rNXIQZ1nEeKpItXg-ZWbFg" incoming="_rNXII51nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIHZ1nEeKpItXg-ZWbFg" name="RightHandSide@35c879c4">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXIHp1nEeKpItXg-ZWbFg" name="Value(error)">
                  <result xmi:id="_rNXIH51nEeKpItXg-ZWbFg" name="Value(error).result" outgoing="_rNXII51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIIJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIIZ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_rNXIIp1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" instance="_rNbZaZ1nEeKpItXg-ZWbFg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXII51nEeKpItXg-ZWbFg" source="_rNXIH51nEeKpItXg-ZWbFg" target="_rNXIHJ1nEeKpItXg-ZWbFg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIJJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@75b8c5e5)">
              <structuredNodeInput xmi:id="_rNXIJZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@75b8c5e5).input" outgoing="_rNXIK51nEeKpItXg-ZWbFg" incoming="_rNXIQZ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIJp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIJ51nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_rNXIKJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(condition3)@75b8c5e5).output" incoming="_rNXIK51nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIKZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIKp1nEeKpItXg-ZWbFg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIK51nEeKpItXg-ZWbFg" source="_rNXIJZ1nEeKpItXg-ZWbFg" target="_rNXIKJ1nEeKpItXg-ZWbFg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXILJ1nEeKpItXg-ZWbFg" source="_rNWhAZ1nEeKpItXg-ZWbFg" target="_rNWhCp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNXILZ1nEeKpItXg-ZWbFg" source="_rNWhNJ1nEeKpItXg-ZWbFg" target="_rNWhNZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXILp1nEeKpItXg-ZWbFg" source="_rNWhGJ1nEeKpItXg-ZWbFg" target="_rNWhNZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNXIL51nEeKpItXg-ZWbFg" source="_rNWhNZ1nEeKpItXg-ZWbFg" target="_rNWhG51nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNXIMJ1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNXIMZ1nEeKpItXg-ZWbFg" source="_rNWhNZ1nEeKpItXg-ZWbFg" target="_rNWhKp1nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNXIMp1nEeKpItXg-ZWbFg" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIM51nEeKpItXg-ZWbFg" source="_rNWhJp1nEeKpItXg-ZWbFg" target="_rNWhNp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXINJ1nEeKpItXg-ZWbFg" source="_rNWhMJ1nEeKpItXg-ZWbFg" target="_rNWhNp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXINZ1nEeKpItXg-ZWbFg" source="_rNWhNp1nEeKpItXg-ZWbFg" target="_rNWhOJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXINp1nEeKpItXg-ZWbFg" source="_rNWhQJ1nEeKpItXg-ZWbFg" target="_rNWhSZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNXIN51nEeKpItXg-ZWbFg" source="_rNXH-p1nEeKpItXg-ZWbFg" target="_rNXH-51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIOJ1nEeKpItXg-ZWbFg" source="_rNWhV51nEeKpItXg-ZWbFg" target="_rNXH-51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNXIOZ1nEeKpItXg-ZWbFg" source="_rNXH-51nEeKpItXg-ZWbFg" target="_rNXH4Z1nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNXIOp1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNXIO51nEeKpItXg-ZWbFg" source="_rNXH-51nEeKpItXg-ZWbFg" target="_rNXH8J1nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNXIPJ1nEeKpItXg-ZWbFg" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIPZ1nEeKpItXg-ZWbFg" source="_rNXH7J1nEeKpItXg-ZWbFg" target="_rNXH_J1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIPp1nEeKpItXg-ZWbFg" source="_rNXH9p1nEeKpItXg-ZWbFg" target="_rNXH_J1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIP51nEeKpItXg-ZWbFg" source="_rNXH_J1nEeKpItXg-ZWbFg" target="_rNXH_p1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIQJ1nEeKpItXg-ZWbFg" source="_rNXIBp1nEeKpItXg-ZWbFg" target="_rNXID51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIQZ1nEeKpItXg-ZWbFg" source="_rNXIHJ1nEeKpItXg-ZWbFg" target="_rNXIJZ1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNXIQp1nEeKpItXg-ZWbFg" body="_rNWhAJ1nEeKpItXg-ZWbFg _rNWhCZ1nEeKpItXg-ZWbFg" bodyOutput="_rNWhDZ1nEeKpItXg-ZWbFg" decider="_rNWg_Z1nEeKpItXg-ZWbFg" successorClause="_rNXIQ51nEeKpItXg-ZWbFg _rNXIRJ1nEeKpItXg-ZWbFg" test="_rNWg9p1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNXIQ51nEeKpItXg-ZWbFg" body="_rNWhP51nEeKpItXg-ZWbFg _rNWhSJ1nEeKpItXg-ZWbFg" bodyOutput="_rNWhTJ1nEeKpItXg-ZWbFg" decider="_rNWhO51nEeKpItXg-ZWbFg" predecessorClause="_rNXIQp1nEeKpItXg-ZWbFg" successorClause="_rNXIRZ1nEeKpItXg-ZWbFg" test="_rNWhEZ1nEeKpItXg-ZWbFg _rNWhG51nEeKpItXg-ZWbFg _rNWhKp1nEeKpItXg-ZWbFg _rNWhN51nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNXIRJ1nEeKpItXg-ZWbFg" body="_rNXIBZ1nEeKpItXg-ZWbFg _rNXIDp1nEeKpItXg-ZWbFg" bodyOutput="_rNXIEp1nEeKpItXg-ZWbFg" decider="_rNXIAZ1nEeKpItXg-ZWbFg" predecessorClause="_rNXIQp1nEeKpItXg-ZWbFg" successorClause="_rNXIRZ1nEeKpItXg-ZWbFg" test="_rNWhUJ1nEeKpItXg-ZWbFg _rNXH4Z1nEeKpItXg-ZWbFg _rNXH8J1nEeKpItXg-ZWbFg _rNXH_Z1nEeKpItXg-ZWbFg"/>
            <clause xmi:id="_rNXIRZ1nEeKpItXg-ZWbFg" body="_rNXIG51nEeKpItXg-ZWbFg _rNXIJJ1nEeKpItXg-ZWbFg" bodyOutput="_rNXIKJ1nEeKpItXg-ZWbFg" decider="_rNXIF51nEeKpItXg-ZWbFg" predecessorClause="_rNXIQ51nEeKpItXg-ZWbFg _rNXIRJ1nEeKpItXg-ZWbFg" test="_rNXIFp1nEeKpItXg-ZWbFg"/>
            <result xmi:id="_rNXIRp1nEeKpItXg-ZWbFg" name="IfStatement@7924f073.result(condition3)" outgoing="_rNaLPZ1nEeKpItXg-ZWbFg" type="_rNbZZZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIR51nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXISJ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNXISZ1nEeKpItXg-ZWbFg" name="Fork(condition3)" outgoing="_rNaLX51nEeKpItXg-ZWbFg" incoming="_rNaLPZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXISp1nEeKpItXg-ZWbFg" name="SwitchStatement@45f3a4ee" outgoing="_rNaLXJ1nEeKpItXg-ZWbFg" incoming="_rNaLS51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ConditionalNode" xmi:id="_rNXIS51nEeKpItXg-ZWbFg" name="Conditional(SwitchStatement@45f3a4ee)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXITJ1nEeKpItXg-ZWbFg" name="Value(2012)">
                <result xmi:id="_rNXITZ1nEeKpItXg-ZWbFg" name="Value(2012).result" outgoing="_rNXvDp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXITp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIT51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNXIUJ1nEeKpItXg-ZWbFg" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNXIUZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(2012).result))">
                <first xmi:id="_rNXIUp1nEeKpItXg-ZWbFg" name="Test(Case(Value(2012).result)).first" incoming="_rNaLSp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIU51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIVJ1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNXIVZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(2012).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIVp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIV51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNXIWJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(2012).result)).second" incoming="_rNXvDp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIWZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIWp1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIW51nEeKpItXg-ZWbFg" name="ExpressionStatement@5eaaf8c4">
                <node xmi:type="uml:ForkNode" xmi:id="_rNXIXJ1nEeKpItXg-ZWbFg" name="Fork(month)@2a9a08dc" outgoing="_rNXvD51nEeKpItXg-ZWbFg" incoming="_rNXIY51nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXIXZ1nEeKpItXg-ZWbFg" name="RightHandSide@66bbb95d">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXIXp1nEeKpItXg-ZWbFg" name="Value(2)">
                    <result xmi:id="_rNXIX51nEeKpItXg-ZWbFg" name="Value(2).result" outgoing="_rNXIY51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXIYJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXIYZ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNXIYp1nEeKpItXg-ZWbFg" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXIY51nEeKpItXg-ZWbFg" source="_rNXIX51nEeKpItXg-ZWbFg" target="_rNXIXJ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXu8J1nEeKpItXg-ZWbFg" name="Passthru(Fork(month)@2a9a08dc)">
                <structuredNodeInput xmi:id="_rNXu8Z1nEeKpItXg-ZWbFg" name="Passthru(Fork(month)@2a9a08dc).input" outgoing="_rNXu951nEeKpItXg-ZWbFg" incoming="_rNXvD51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXu8p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXu851nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_rNXu9J1nEeKpItXg-ZWbFg" name="Passthru(Fork(month)@2a9a08dc).output" incoming="_rNXu951nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXu9Z1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXu9p1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXu951nEeKpItXg-ZWbFg" source="_rNXu8Z1nEeKpItXg-ZWbFg" target="_rNXu9J1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXu-J1nEeKpItXg-ZWbFg" name="Value(true)">
                <result xmi:id="_rNXu-Z1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXu-p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXu-51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_rNXu_J1nEeKpItXg-ZWbFg" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXu_Z1nEeKpItXg-ZWbFg" name="ExpressionStatement@3814ffaf">
                <node xmi:type="uml:ForkNode" xmi:id="_rNXu_p1nEeKpItXg-ZWbFg" name="Fork(month)@7cfe024" outgoing="_rNXvEJ1nEeKpItXg-ZWbFg" incoming="_rNXvBZ1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXu_51nEeKpItXg-ZWbFg" name="RightHandSide@60845f7d">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXvAJ1nEeKpItXg-ZWbFg" name="Value(3)">
                    <result xmi:id="_rNXvAZ1nEeKpItXg-ZWbFg" name="Value(3).result" outgoing="_rNXvBZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvAp1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvA51nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNXvBJ1nEeKpItXg-ZWbFg" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXvBZ1nEeKpItXg-ZWbFg" source="_rNXvAZ1nEeKpItXg-ZWbFg" target="_rNXu_p1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXvBp1nEeKpItXg-ZWbFg" name="Passthru(Fork(month)@7cfe024)">
                <structuredNodeInput xmi:id="_rNXvB51nEeKpItXg-ZWbFg" name="Passthru(Fork(month)@7cfe024).input" outgoing="_rNXvDZ1nEeKpItXg-ZWbFg" incoming="_rNXvEJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvCJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvCZ1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_rNXvCp1nEeKpItXg-ZWbFg" name="Passthru(Fork(month)@7cfe024).output" incoming="_rNXvDZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvC51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvDJ1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXvDZ1nEeKpItXg-ZWbFg" source="_rNXvB51nEeKpItXg-ZWbFg" target="_rNXvCp1nEeKpItXg-ZWbFg"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXvDp1nEeKpItXg-ZWbFg" source="_rNXITZ1nEeKpItXg-ZWbFg" target="_rNXIWJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXvD51nEeKpItXg-ZWbFg" source="_rNXIXJ1nEeKpItXg-ZWbFg" target="_rNXu8Z1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXvEJ1nEeKpItXg-ZWbFg" source="_rNXu_p1nEeKpItXg-ZWbFg" target="_rNXvB51nEeKpItXg-ZWbFg"/>
              <clause xmi:id="_rNXvEZ1nEeKpItXg-ZWbFg" body="_rNXIW51nEeKpItXg-ZWbFg _rNXu8J1nEeKpItXg-ZWbFg" bodyOutput="_rNXu9J1nEeKpItXg-ZWbFg" decider="_rNXIVZ1nEeKpItXg-ZWbFg" successorClause="_rNXvEp1nEeKpItXg-ZWbFg" test="_rNXITJ1nEeKpItXg-ZWbFg _rNXIUZ1nEeKpItXg-ZWbFg"/>
              <clause xmi:id="_rNXvEp1nEeKpItXg-ZWbFg" body="_rNXu_Z1nEeKpItXg-ZWbFg _rNXvBp1nEeKpItXg-ZWbFg" bodyOutput="_rNXvCp1nEeKpItXg-ZWbFg" decider="_rNXu-Z1nEeKpItXg-ZWbFg" predecessorClause="_rNXvEZ1nEeKpItXg-ZWbFg" test="_rNXu-J1nEeKpItXg-ZWbFg"/>
              <result xmi:id="_rNXvE51nEeKpItXg-ZWbFg" name="Conditional(SwitchStatement@45f3a4ee).result(month)" outgoing="_rNXvGJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvFJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvFZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_rNXvFp1nEeKpItXg-ZWbFg" name="Fork(month)" outgoing="_rNaLTJ1nEeKpItXg-ZWbFg _rNaLTZ1nEeKpItXg-ZWbFg _rNaLTp1nEeKpItXg-ZWbFg _rNaLT51nEeKpItXg-ZWbFg _rNaLUJ1nEeKpItXg-ZWbFg _rNaLUZ1nEeKpItXg-ZWbFg _rNaLUp1nEeKpItXg-ZWbFg _rNaLU51nEeKpItXg-ZWbFg _rNaLVJ1nEeKpItXg-ZWbFg _rNaLVZ1nEeKpItXg-ZWbFg _rNaLVp1nEeKpItXg-ZWbFg _rNaLV51nEeKpItXg-ZWbFg _rNaLWJ1nEeKpItXg-ZWbFg _rNaLYZ1nEeKpItXg-ZWbFg" incoming="_rNXvGJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNXvF51nEeKpItXg-ZWbFg" name="Fork(Fork(year)@33989d4c)" incoming="_rNaLSZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNXvGJ1nEeKpItXg-ZWbFg" source="_rNXvE51nEeKpItXg-ZWbFg" target="_rNXvFp1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNXvGZ1nEeKpItXg-ZWbFg" name="SwitchStatement@50738a20" incoming="_rNaLXJ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:ConditionalNode" xmi:id="_rNXvGp1nEeKpItXg-ZWbFg" name="Conditional(SwitchStatement@50738a20)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXvG51nEeKpItXg-ZWbFg" name="Value(1)">
                <result xmi:id="_rNXvHJ1nEeKpItXg-ZWbFg" name="Value(1).result" outgoing="_rNZki51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvHZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvHp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNXvH51nEeKpItXg-ZWbFg" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNXvIJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(1).result))">
                <first xmi:id="_rNXvIZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(1).result)).first" incoming="_rNaLTZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvIp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvI51nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNXvJJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(1).result)).result" outgoing="_rNZkjZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvJZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvJp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNXvJ51nEeKpItXg-ZWbFg" name="Test(Case(Value(1).result)).second" incoming="_rNZki51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvKJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvKZ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXvKp1nEeKpItXg-ZWbFg" name="Value(3)">
                <result xmi:id="_rNXvK51nEeKpItXg-ZWbFg" name="Value(3).result" outgoing="_rNZkjJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvLJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvLZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNXvLp1nEeKpItXg-ZWbFg" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNXvL51nEeKpItXg-ZWbFg" name="Test(Case(Value(3).result))">
                <first xmi:id="_rNXvMJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(3).result)).first" incoming="_rNaLTp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvMZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvMp1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNXvM51nEeKpItXg-ZWbFg" name="Test(Case(Value(3).result)).result" outgoing="_rNZkjp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvNJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvNZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNXvNp1nEeKpItXg-ZWbFg" name="Test(Case(Value(3).result)).second" incoming="_rNZkjJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvN51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvOJ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNXvOZ1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNXvOp1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkjZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvO51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvPJ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNXvPZ1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkjp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvPp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvP51nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNXvQJ1nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZkkJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvQZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvQp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXvQ51nEeKpItXg-ZWbFg" name="Value(5)">
                <result xmi:id="_rNXvRJ1nEeKpItXg-ZWbFg" name="Value(5).result" outgoing="_rNZkj51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvRZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvRp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNXvR51nEeKpItXg-ZWbFg" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNXvSJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(5).result))">
                <first xmi:id="_rNXvSZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(5).result)).first" incoming="_rNaLT51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvSp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvS51nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNXvTJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(5).result)).result" outgoing="_rNZkkZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvTZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvTp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNXvT51nEeKpItXg-ZWbFg" name="Test(Case(Value(5).result)).second" incoming="_rNZkj51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvUJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvUZ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNXvUp1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNXvU51nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkkJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvVJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvVZ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNXvVp1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkkZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvV51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvWJ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNXvWZ1nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZkk51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvWp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvW51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXvXJ1nEeKpItXg-ZWbFg" name="Value(7)">
                <result xmi:id="_rNXvXZ1nEeKpItXg-ZWbFg" name="Value(7).result" outgoing="_rNZkkp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvXp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvX51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNXvYJ1nEeKpItXg-ZWbFg" value="7">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNXvYZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(7).result))">
                <first xmi:id="_rNXvYp1nEeKpItXg-ZWbFg" name="Test(Case(Value(7).result)).first" incoming="_rNaLUJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvY51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvZJ1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNXvZZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(7).result)).result" outgoing="_rNZklJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvZp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvZ51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNXvaJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(7).result)).second" incoming="_rNZkkp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvaZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvap1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNXva51nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNXvbJ1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkk51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvbZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvbp1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNXvb51nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZklJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvcJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvcZ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNXvcp1nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZklp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvc51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvdJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNXvdZ1nEeKpItXg-ZWbFg" name="Value(8)">
                <result xmi:id="_rNXvdp1nEeKpItXg-ZWbFg" name="Value(8).result" outgoing="_rNZklZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvd51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXveJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNXveZ1nEeKpItXg-ZWbFg" value="8">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNXvep1nEeKpItXg-ZWbFg" name="Test(Case(Value(8).result))">
                <first xmi:id="_rNXve51nEeKpItXg-ZWbFg" name="Test(Case(Value(8).result)).first" incoming="_rNaLUZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvfJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvfZ1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNXvfp1nEeKpItXg-ZWbFg" name="Test(Case(Value(8).result)).result" outgoing="_rNZkl51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvf51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvgJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNXvgZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(8).result)).second" incoming="_rNZklZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvgp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvg51nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNXvhJ1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNXvhZ1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZklp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXvhp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvh51nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNXviJ1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkl51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNXviZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNXvip1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNXvi51nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZkmZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWAJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWAZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWAp1nEeKpItXg-ZWbFg" name="Value(10)">
                <result xmi:id="_rNYWA51nEeKpItXg-ZWbFg" name="Value(10).result" outgoing="_rNZkmJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWBJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWBZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWBp1nEeKpItXg-ZWbFg" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNYWB51nEeKpItXg-ZWbFg" name="Test(Case(Value(10).result))">
                <first xmi:id="_rNYWCJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(10).result)).first" incoming="_rNaLUp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWCZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWCp1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNYWC51nEeKpItXg-ZWbFg" name="Test(Case(Value(10).result)).result" outgoing="_rNZkmp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWDJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWDZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNYWDp1nEeKpItXg-ZWbFg" name="Test(Case(Value(10).result)).second" incoming="_rNZkmJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWD51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWEJ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNYWEZ1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNYWEp1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkmZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWE51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWFJ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNYWFZ1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkmp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWFp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWF51nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNYWGJ1nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZknJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWGZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWGp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWG51nEeKpItXg-ZWbFg" name="Value(12)">
                <result xmi:id="_rNYWHJ1nEeKpItXg-ZWbFg" name="Value(12).result" outgoing="_rNZkm51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWHZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWHp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWH51nEeKpItXg-ZWbFg" value="12">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNYWIJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(12).result))">
                <first xmi:id="_rNYWIZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(12).result)).first" incoming="_rNaLU51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWIp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWI51nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNYWJJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(12).result)).result" outgoing="_rNZknZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWJZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWJp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNYWJ51nEeKpItXg-ZWbFg" name="Test(Case(Value(12).result)).second" incoming="_rNZkm51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWKJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWKZ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNYWKp1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNYWK51nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZknJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWLJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWLZ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNYWLp1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZknZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWL51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWMJ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNYWMZ1nEeKpItXg-ZWbFg" name="Call(Or).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWMp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWM51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNYWNJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@690ff226">
                <node xmi:type="uml:ForkNode" xmi:id="_rNYWNZ1nEeKpItXg-ZWbFg" name="Fork(numDays)@697168aa" outgoing="_rNZknp1nEeKpItXg-ZWbFg" incoming="_rNYWPJ1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNYWNp1nEeKpItXg-ZWbFg" name="RightHandSide@148ea6fb">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWN51nEeKpItXg-ZWbFg" name="Value(31)">
                    <result xmi:id="_rNYWOJ1nEeKpItXg-ZWbFg" name="Value(31).result" outgoing="_rNYWPJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWOZ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWOp1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWO51nEeKpItXg-ZWbFg" value="31">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNYWPJ1nEeKpItXg-ZWbFg" source="_rNYWOJ1nEeKpItXg-ZWbFg" target="_rNYWNZ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNYWPZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@697168aa)">
                <structuredNodeInput xmi:id="_rNYWPp1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@697168aa).input" outgoing="_rNYWRJ1nEeKpItXg-ZWbFg" incoming="_rNZknp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWP51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWQJ1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_rNYWQZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@697168aa).output" incoming="_rNYWRJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWQp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWQ51nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNYWRJ1nEeKpItXg-ZWbFg" source="_rNYWPp1nEeKpItXg-ZWbFg" target="_rNYWQZ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWRZ1nEeKpItXg-ZWbFg" name="Value(4)">
                <result xmi:id="_rNYWRp1nEeKpItXg-ZWbFg" name="Value(4).result" outgoing="_rNZkn51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWR51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWSJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWSZ1nEeKpItXg-ZWbFg" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNYWSp1nEeKpItXg-ZWbFg" name="Test(Case(Value(4).result))">
                <first xmi:id="_rNYWS51nEeKpItXg-ZWbFg" name="Test(Case(Value(4).result)).first" incoming="_rNaLVJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWTJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWTZ1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNYWTp1nEeKpItXg-ZWbFg" name="Test(Case(Value(4).result)).result" outgoing="_rNZkoZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWT51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWUJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNYWUZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(4).result)).second" incoming="_rNZkn51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWUp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWU51nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWVJ1nEeKpItXg-ZWbFg" name="Value(6)">
                <result xmi:id="_rNYWVZ1nEeKpItXg-ZWbFg" name="Value(6).result" outgoing="_rNZkoJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWVp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWV51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWWJ1nEeKpItXg-ZWbFg" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNYWWZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(6).result))">
                <first xmi:id="_rNYWWp1nEeKpItXg-ZWbFg" name="Test(Case(Value(6).result)).first" incoming="_rNaLVZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWW51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWXJ1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNYWXZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(6).result)).result" outgoing="_rNZkop1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWXp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWX51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNYWYJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(6).result)).second" incoming="_rNZkoJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWYZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWYp1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNYWY51nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNYWZJ1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkoZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWZZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWZp1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNYWZ51nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkop1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWaJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWaZ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNYWap1nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZkpJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWa51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWbJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWbZ1nEeKpItXg-ZWbFg" name="Value(9)">
                <result xmi:id="_rNYWbp1nEeKpItXg-ZWbFg" name="Value(9).result" outgoing="_rNZko51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWb51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWcJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWcZ1nEeKpItXg-ZWbFg" value="9">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNYWcp1nEeKpItXg-ZWbFg" name="Test(Case(Value(9).result))">
                <first xmi:id="_rNYWc51nEeKpItXg-ZWbFg" name="Test(Case(Value(9).result)).first" incoming="_rNaLVp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWdJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWdZ1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNYWdp1nEeKpItXg-ZWbFg" name="Test(Case(Value(9).result)).result" outgoing="_rNZkpZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWd51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWeJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNYWeZ1nEeKpItXg-ZWbFg" name="Test(Case(Value(9).result)).second" incoming="_rNZko51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWep1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWe51nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNYWfJ1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNYWfZ1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkpJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWfp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWf51nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNYWgJ1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkpZ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWgZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWgp1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNYWg51nEeKpItXg-ZWbFg" name="Call(Or).result(result)" outgoing="_rNZkp51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWhJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWhZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWhp1nEeKpItXg-ZWbFg" name="Value(11)">
                <result xmi:id="_rNYWh51nEeKpItXg-ZWbFg" name="Value(11).result" outgoing="_rNZkpp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWiJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWiZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWip1nEeKpItXg-ZWbFg" value="11">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNYWi51nEeKpItXg-ZWbFg" name="Test(Case(Value(11).result))">
                <first xmi:id="_rNYWjJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(11).result)).first" incoming="_rNaLV51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWjZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWjp1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNYWj51nEeKpItXg-ZWbFg" name="Test(Case(Value(11).result)).result" outgoing="_rNZkqJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWkJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWkZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNYWkp1nEeKpItXg-ZWbFg" name="Test(Case(Value(11).result)).second" incoming="_rNZkpp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWk51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWlJ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNYWlZ1nEeKpItXg-ZWbFg" name="Call(Or)">
                <argument xmi:id="_rNYWlp1nEeKpItXg-ZWbFg" name="Call(Or).argument(x)" incoming="_rNZkp51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWl51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWmJ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNYWmZ1nEeKpItXg-ZWbFg" name="Call(Or).argument(y)" incoming="_rNZkqJ1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWmp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWm51nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNYWnJ1nEeKpItXg-ZWbFg" name="Call(Or).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWnZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWnp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNYWn51nEeKpItXg-ZWbFg" name="ExpressionStatement@cb6b65f">
                <node xmi:type="uml:ForkNode" xmi:id="_rNYWoJ1nEeKpItXg-ZWbFg" name="Fork(numDays)@3c1b864c" outgoing="_rNZkqZ1nEeKpItXg-ZWbFg" incoming="_rNYWp51nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNYWoZ1nEeKpItXg-ZWbFg" name="RightHandSide@330e0668">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNYWop1nEeKpItXg-ZWbFg" name="Value(30)">
                    <result xmi:id="_rNYWo51nEeKpItXg-ZWbFg" name="Value(30).result" outgoing="_rNYWp51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWpJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWpZ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNYWpp1nEeKpItXg-ZWbFg" value="30">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNYWp51nEeKpItXg-ZWbFg" source="_rNYWo51nEeKpItXg-ZWbFg" target="_rNYWoJ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNYWqJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@3c1b864c)">
                <structuredNodeInput xmi:id="_rNYWqZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@3c1b864c).input" outgoing="_rNY9EZ1nEeKpItXg-ZWbFg" incoming="_rNZkqZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWqp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNYWq51nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_rNYWrJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@3c1b864c).output" incoming="_rNY9EZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNYWrZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9EJ1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9EZ1nEeKpItXg-ZWbFg" source="_rNYWqZ1nEeKpItXg-ZWbFg" target="_rNYWrJ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9Ep1nEeKpItXg-ZWbFg" name="Value(2)">
                <result xmi:id="_rNY9E51nEeKpItXg-ZWbFg" name="Value(2).result" outgoing="_rNZkqp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9FJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9FZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9Fp1nEeKpItXg-ZWbFg" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_rNY9F51nEeKpItXg-ZWbFg" name="Test(Case(Value(2).result))">
                <first xmi:id="_rNY9GJ1nEeKpItXg-ZWbFg" name="Test(Case(Value(2).result)).first" incoming="_rNaLWJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9GZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9Gp1nEeKpItXg-ZWbFg" value="1"/>
                </first>
                <result xmi:id="_rNY9G51nEeKpItXg-ZWbFg" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9HJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9HZ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <second xmi:id="_rNY9Hp1nEeKpItXg-ZWbFg" name="Test(Case(Value(2).result)).second" incoming="_rNZkqp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9H51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9IJ1nEeKpItXg-ZWbFg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ConditionalNode" xmi:id="_rNY9IZ1nEeKpItXg-ZWbFg" name="IfStatement@1ba95bfa">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9Ip1nEeKpItXg-ZWbFg" name="Value(4)">
                  <result xmi:id="_rNY9I51nEeKpItXg-ZWbFg" name="Value(4).result" outgoing="_rNZkQZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9JJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9JZ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9Jp1nEeKpItXg-ZWbFg" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNY9J51nEeKpItXg-ZWbFg" name="Call(Mod)">
                  <argument xmi:id="_rNY9KJ1nEeKpItXg-ZWbFg" name="Call(Mod).argument(x)" incoming="_rNaLWZ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9KZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9Kp1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <argument xmi:id="_rNY9K51nEeKpItXg-ZWbFg" name="Call(Mod).argument(y)" incoming="_rNZkQZ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9LJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9LZ1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <result xmi:id="_rNY9Lp1nEeKpItXg-ZWbFg" name="Call(Mod).result(result)" outgoing="_rNZkQp1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9L51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9MJ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9MZ1nEeKpItXg-ZWbFg" name="Value(0)">
                  <result xmi:id="_rNY9Mp1nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNZkQ51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9M51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9NJ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9NZ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_rNY9Np1nEeKpItXg-ZWbFg" name="Test(==)">
                  <first xmi:id="_rNY9N51nEeKpItXg-ZWbFg" name="Test(==).first" incoming="_rNZkQp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9OJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9OZ1nEeKpItXg-ZWbFg" value="1"/>
                  </first>
                  <result xmi:id="_rNY9Op1nEeKpItXg-ZWbFg" name="Test(==).result" outgoing="_rNZkRZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9O51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9PJ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <second xmi:id="_rNY9PZ1nEeKpItXg-ZWbFg" name="Test(==).second" incoming="_rNZkQ51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9Pp1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9P51nEeKpItXg-ZWbFg" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9QJ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@5a8d46a6.operand2" incoming="_rNZkRp1nEeKpItXg-ZWbFg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9QZ1nEeKpItXg-ZWbFg" name="Value(100)">
                    <result xmi:id="_rNY9Qp1nEeKpItXg-ZWbFg" name="Value(100).result" outgoing="_rNY9aZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9Q51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9RJ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9RZ1nEeKpItXg-ZWbFg" value="100">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNY9Rp1nEeKpItXg-ZWbFg" name="Call(Mod)">
                    <argument xmi:id="_rNY9R51nEeKpItXg-ZWbFg" name="Call(Mod).argument(x)" incoming="_rNaLWp1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9SJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9SZ1nEeKpItXg-ZWbFg" value="1"/>
                    </argument>
                    <argument xmi:id="_rNY9Sp1nEeKpItXg-ZWbFg" name="Call(Mod).argument(y)" incoming="_rNY9aZ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9S51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9TJ1nEeKpItXg-ZWbFg" value="1"/>
                    </argument>
                    <result xmi:id="_rNY9TZ1nEeKpItXg-ZWbFg" name="Call(Mod).result(result)" outgoing="_rNY9ap1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9Tp1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9T51nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9UJ1nEeKpItXg-ZWbFg" name="Value(0)">
                    <result xmi:id="_rNY9UZ1nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNY9a51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9Up1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9U51nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9VJ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_rNY9VZ1nEeKpItXg-ZWbFg" name="Test(==)">
                    <first xmi:id="_rNY9Vp1nEeKpItXg-ZWbFg" name="Test(==).first" incoming="_rNY9ap1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9V51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9WJ1nEeKpItXg-ZWbFg" value="1"/>
                    </first>
                    <result xmi:id="_rNY9WZ1nEeKpItXg-ZWbFg" name="Test(==).result" outgoing="_rNY9bJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9Wp1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9W51nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <second xmi:id="_rNY9XJ1nEeKpItXg-ZWbFg" name="Test(==).second" incoming="_rNY9a51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9XZ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9Xp1nEeKpItXg-ZWbFg" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNY9X51nEeKpItXg-ZWbFg" name="Call(Not)">
                    <argument xmi:id="_rNY9YJ1nEeKpItXg-ZWbFg" name="Call(Not).argument(x)" incoming="_rNY9bJ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9YZ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9Yp1nEeKpItXg-ZWbFg" value="1"/>
                    </argument>
                    <result xmi:id="_rNY9Y51nEeKpItXg-ZWbFg" name="Call(Not).result(result)" outgoing="_rNY9bZ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9ZJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9ZZ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                  </node>
                  <structuredNodeOutput xmi:id="_rNY9Zp1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@5a8d46a6.operand2.result" outgoing="_rNZkSp1nEeKpItXg-ZWbFg" incoming="_rNY9bZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9Z51nEeKpItXg-ZWbFg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9aJ1nEeKpItXg-ZWbFg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9aZ1nEeKpItXg-ZWbFg" source="_rNY9Qp1nEeKpItXg-ZWbFg" target="_rNY9Sp1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9ap1nEeKpItXg-ZWbFg" source="_rNY9TZ1nEeKpItXg-ZWbFg" target="_rNY9Vp1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9a51nEeKpItXg-ZWbFg" source="_rNY9UZ1nEeKpItXg-ZWbFg" target="_rNY9XJ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9bJ1nEeKpItXg-ZWbFg" source="_rNY9WZ1nEeKpItXg-ZWbFg" target="_rNY9YJ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9bZ1nEeKpItXg-ZWbFg" source="_rNY9Y51nEeKpItXg-ZWbFg" target="_rNY9Zp1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9bp1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@5a8d46a6.operand3" incoming="_rNZkSJ1nEeKpItXg-ZWbFg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9b51nEeKpItXg-ZWbFg" name="Value(false)">
                    <result xmi:id="_rNY9cJ1nEeKpItXg-ZWbFg" name="Value(false).result" outgoing="_rNY9d51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9cZ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9cp1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_rNY9c51nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                  <structuredNodeOutput xmi:id="_rNY9dJ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@5a8d46a6.operand3.result" outgoing="_rNZkS51nEeKpItXg-ZWbFg" incoming="_rNY9d51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9dZ1nEeKpItXg-ZWbFg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9dp1nEeKpItXg-ZWbFg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9d51nEeKpItXg-ZWbFg" source="_rNY9cJ1nEeKpItXg-ZWbFg" target="_rNY9dJ1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_rNY9eJ1nEeKpItXg-ZWbFg" name="Initial(ConditionalLogicalExpression@5a8d46a6)" outgoing="_rNZkRJ1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_rNY9eZ1nEeKpItXg-ZWbFg" name="Decision(ConditionalLogicalExpression@5a8d46a6)" outgoing="_rNZkRp1nEeKpItXg-ZWbFg _rNZkSJ1nEeKpItXg-ZWbFg" incoming="_rNZkRJ1nEeKpItXg-ZWbFg _rNZkRZ1nEeKpItXg-ZWbFg" decisionInputFlow="_rNZkRZ1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:MergeNode" xmi:id="_rNY9ep1nEeKpItXg-ZWbFg" name="Merge(ConditionalLogicalExpression@5a8d46a6.result)" outgoing="_rNZkTZ1nEeKpItXg-ZWbFg" incoming="_rNZkSp1nEeKpItXg-ZWbFg _rNZkS51nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9e51nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2e57224e.operand2" incoming="_rNZkTp1nEeKpItXg-ZWbFg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9fJ1nEeKpItXg-ZWbFg" name="Value(true)">
                    <result xmi:id="_rNY9fZ1nEeKpItXg-ZWbFg" name="Value(true).result" outgoing="_rNY9hJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9fp1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9f51nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_rNY9gJ1nEeKpItXg-ZWbFg" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                  <structuredNodeOutput xmi:id="_rNY9gZ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2e57224e.operand2.result" outgoing="_rNZkUp1nEeKpItXg-ZWbFg" incoming="_rNY9hJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9gp1nEeKpItXg-ZWbFg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9g51nEeKpItXg-ZWbFg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9hJ1nEeKpItXg-ZWbFg" source="_rNY9fZ1nEeKpItXg-ZWbFg" target="_rNY9gZ1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9hZ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2e57224e.operand3" incoming="_rNZkUJ1nEeKpItXg-ZWbFg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9hp1nEeKpItXg-ZWbFg" name="Value(400)">
                    <result xmi:id="_rNY9h51nEeKpItXg-ZWbFg" name="Value(400).result" outgoing="_rNY9p51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9iJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9iZ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9ip1nEeKpItXg-ZWbFg" value="400">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNY9i51nEeKpItXg-ZWbFg" name="Call(Mod)">
                    <argument xmi:id="_rNY9jJ1nEeKpItXg-ZWbFg" name="Call(Mod).argument(x)" incoming="_rNaLW51nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9jZ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9jp1nEeKpItXg-ZWbFg" value="1"/>
                    </argument>
                    <argument xmi:id="_rNY9j51nEeKpItXg-ZWbFg" name="Call(Mod).argument(y)" incoming="_rNY9p51nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9kJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9kZ1nEeKpItXg-ZWbFg" value="1"/>
                    </argument>
                    <result xmi:id="_rNY9kp1nEeKpItXg-ZWbFg" name="Call(Mod).result(result)" outgoing="_rNY9qJ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9k51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9lJ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9lZ1nEeKpItXg-ZWbFg" name="Value(0)">
                    <result xmi:id="_rNY9lp1nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNY9qZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9l51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9mJ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNY9mZ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_rNY9mp1nEeKpItXg-ZWbFg" name="Test(==)">
                    <first xmi:id="_rNY9m51nEeKpItXg-ZWbFg" name="Test(==).first" incoming="_rNY9qJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9nJ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9nZ1nEeKpItXg-ZWbFg" value="1"/>
                    </first>
                    <result xmi:id="_rNY9np1nEeKpItXg-ZWbFg" name="Test(==).result" outgoing="_rNY9qp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9n51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9oJ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <second xmi:id="_rNY9oZ1nEeKpItXg-ZWbFg" name="Test(==).second" incoming="_rNY9qZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9op1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9o51nEeKpItXg-ZWbFg" value="1"/>
                    </second>
                  </node>
                  <structuredNodeOutput xmi:id="_rNY9pJ1nEeKpItXg-ZWbFg" name="ConditionalLogicalExpression@2e57224e.operand3.result" outgoing="_rNZkU51nEeKpItXg-ZWbFg" incoming="_rNY9qp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9pZ1nEeKpItXg-ZWbFg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9pp1nEeKpItXg-ZWbFg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9p51nEeKpItXg-ZWbFg" source="_rNY9h51nEeKpItXg-ZWbFg" target="_rNY9j51nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9qJ1nEeKpItXg-ZWbFg" source="_rNY9kp1nEeKpItXg-ZWbFg" target="_rNY9m51nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9qZ1nEeKpItXg-ZWbFg" source="_rNY9lp1nEeKpItXg-ZWbFg" target="_rNY9oZ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9qp1nEeKpItXg-ZWbFg" source="_rNY9np1nEeKpItXg-ZWbFg" target="_rNY9pJ1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_rNY9q51nEeKpItXg-ZWbFg" name="Initial(ConditionalLogicalExpression@2e57224e)" outgoing="_rNZkTJ1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_rNY9rJ1nEeKpItXg-ZWbFg" name="Decision(ConditionalLogicalExpression@2e57224e)" outgoing="_rNZkTp1nEeKpItXg-ZWbFg _rNZkUJ1nEeKpItXg-ZWbFg" incoming="_rNZkTJ1nEeKpItXg-ZWbFg _rNZkTZ1nEeKpItXg-ZWbFg" decisionInputFlow="_rNZkTZ1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:MergeNode" xmi:id="_rNY9rZ1nEeKpItXg-ZWbFg" name="Merge(ConditionalLogicalExpression@2e57224e.result)" outgoing="_rNZkVJ1nEeKpItXg-ZWbFg" incoming="_rNZkUp1nEeKpItXg-ZWbFg _rNZkU51nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9rp1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@2e57224e.result))">
                  <structuredNodeInput xmi:id="_rNY9r51nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@2e57224e.result)).input" outgoing="_rNY9tZ1nEeKpItXg-ZWbFg" incoming="_rNZkVJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9sJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9sZ1nEeKpItXg-ZWbFg" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_rNY9sp1nEeKpItXg-ZWbFg" name="Passthru(Merge(ConditionalLogicalExpression@2e57224e.result)).output" incoming="_rNY9tZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9s51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNY9tJ1nEeKpItXg-ZWbFg" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNY9tZ1nEeKpItXg-ZWbFg" source="_rNY9r51nEeKpItXg-ZWbFg" target="_rNY9sp1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9tp1nEeKpItXg-ZWbFg" name="ExpressionStatement@1d348a4e">
                  <node xmi:type="uml:ForkNode" xmi:id="_rNY9t51nEeKpItXg-ZWbFg" name="Fork(numDays)@24093f11" outgoing="_rNZkVZ1nEeKpItXg-ZWbFg" incoming="_rNZkIp1nEeKpItXg-ZWbFg"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNY9uJ1nEeKpItXg-ZWbFg" name="RightHandSide@5b0b8792">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNY9uZ1nEeKpItXg-ZWbFg" name="Value(29)">
                      <result xmi:id="_rNY9up1nEeKpItXg-ZWbFg" name="Value(29).result" outgoing="_rNZkIp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNY9u51nEeKpItXg-ZWbFg" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkIJ1nEeKpItXg-ZWbFg" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_rNZkIZ1nEeKpItXg-ZWbFg" value="29">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkIp1nEeKpItXg-ZWbFg" source="_rNY9up1nEeKpItXg-ZWbFg" target="_rNY9t51nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkI51nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@24093f11)">
                  <structuredNodeInput xmi:id="_rNZkJJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@24093f11).input" outgoing="_rNZkKp1nEeKpItXg-ZWbFg" incoming="_rNZkVZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkJZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkJp1nEeKpItXg-ZWbFg" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_rNZkJ51nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@24093f11).output" incoming="_rNZkKp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkKJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkKZ1nEeKpItXg-ZWbFg" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkKp1nEeKpItXg-ZWbFg" source="_rNZkJJ1nEeKpItXg-ZWbFg" target="_rNZkJ51nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNZkK51nEeKpItXg-ZWbFg" name="Value(true)">
                  <result xmi:id="_rNZkLJ1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkLZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkLp1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_rNZkL51nEeKpItXg-ZWbFg" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkMJ1nEeKpItXg-ZWbFg" name="ExpressionStatement@1548f129">
                  <node xmi:type="uml:ForkNode" xmi:id="_rNZkMZ1nEeKpItXg-ZWbFg" name="Fork(numDays)@b9eca60" outgoing="_rNZkVp1nEeKpItXg-ZWbFg" incoming="_rNZkOJ1nEeKpItXg-ZWbFg"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkMp1nEeKpItXg-ZWbFg" name="RightHandSide@65f86a95">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNZkM51nEeKpItXg-ZWbFg" name="Value(28)">
                      <result xmi:id="_rNZkNJ1nEeKpItXg-ZWbFg" name="Value(28).result" outgoing="_rNZkOJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkNZ1nEeKpItXg-ZWbFg" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkNp1nEeKpItXg-ZWbFg" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_rNZkN51nEeKpItXg-ZWbFg" value="28">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkOJ1nEeKpItXg-ZWbFg" source="_rNZkNJ1nEeKpItXg-ZWbFg" target="_rNZkMZ1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkOZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@b9eca60)">
                  <structuredNodeInput xmi:id="_rNZkOp1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@b9eca60).input" outgoing="_rNZkQJ1nEeKpItXg-ZWbFg" incoming="_rNZkVp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkO51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkPJ1nEeKpItXg-ZWbFg" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_rNZkPZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@b9eca60).output" incoming="_rNZkQJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkPp1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkP51nEeKpItXg-ZWbFg" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkQJ1nEeKpItXg-ZWbFg" source="_rNZkOp1nEeKpItXg-ZWbFg" target="_rNZkPZ1nEeKpItXg-ZWbFg"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkQZ1nEeKpItXg-ZWbFg" source="_rNY9I51nEeKpItXg-ZWbFg" target="_rNY9K51nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkQp1nEeKpItXg-ZWbFg" source="_rNY9Lp1nEeKpItXg-ZWbFg" target="_rNY9N51nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkQ51nEeKpItXg-ZWbFg" source="_rNY9Mp1nEeKpItXg-ZWbFg" target="_rNY9PZ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkRJ1nEeKpItXg-ZWbFg" source="_rNY9eJ1nEeKpItXg-ZWbFg" target="_rNY9eZ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkRZ1nEeKpItXg-ZWbFg" source="_rNY9Op1nEeKpItXg-ZWbFg" target="_rNY9eZ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkRp1nEeKpItXg-ZWbFg" source="_rNY9eZ1nEeKpItXg-ZWbFg" target="_rNY9QJ1nEeKpItXg-ZWbFg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNZkR51nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkSJ1nEeKpItXg-ZWbFg" source="_rNY9eZ1nEeKpItXg-ZWbFg" target="_rNY9bp1nEeKpItXg-ZWbFg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNZkSZ1nEeKpItXg-ZWbFg" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkSp1nEeKpItXg-ZWbFg" source="_rNY9Zp1nEeKpItXg-ZWbFg" target="_rNY9ep1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkS51nEeKpItXg-ZWbFg" source="_rNY9dJ1nEeKpItXg-ZWbFg" target="_rNY9ep1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkTJ1nEeKpItXg-ZWbFg" source="_rNY9q51nEeKpItXg-ZWbFg" target="_rNY9rJ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkTZ1nEeKpItXg-ZWbFg" source="_rNY9ep1nEeKpItXg-ZWbFg" target="_rNY9rJ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkTp1nEeKpItXg-ZWbFg" source="_rNY9rJ1nEeKpItXg-ZWbFg" target="_rNY9e51nEeKpItXg-ZWbFg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNZkT51nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkUJ1nEeKpItXg-ZWbFg" source="_rNY9rJ1nEeKpItXg-ZWbFg" target="_rNY9hZ1nEeKpItXg-ZWbFg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNZkUZ1nEeKpItXg-ZWbFg" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkUp1nEeKpItXg-ZWbFg" source="_rNY9gZ1nEeKpItXg-ZWbFg" target="_rNY9rZ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkU51nEeKpItXg-ZWbFg" source="_rNY9pJ1nEeKpItXg-ZWbFg" target="_rNY9rZ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkVJ1nEeKpItXg-ZWbFg" source="_rNY9rZ1nEeKpItXg-ZWbFg" target="_rNY9r51nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkVZ1nEeKpItXg-ZWbFg" source="_rNY9t51nEeKpItXg-ZWbFg" target="_rNZkJJ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkVp1nEeKpItXg-ZWbFg" source="_rNZkMZ1nEeKpItXg-ZWbFg" target="_rNZkOp1nEeKpItXg-ZWbFg"/>
                <clause xmi:id="_rNZkV51nEeKpItXg-ZWbFg" body="_rNY9tp1nEeKpItXg-ZWbFg _rNZkI51nEeKpItXg-ZWbFg" bodyOutput="_rNZkJ51nEeKpItXg-ZWbFg" decider="_rNY9sp1nEeKpItXg-ZWbFg" successorClause="_rNZkWJ1nEeKpItXg-ZWbFg" test="_rNY9Ip1nEeKpItXg-ZWbFg _rNY9J51nEeKpItXg-ZWbFg _rNY9MZ1nEeKpItXg-ZWbFg _rNY9Np1nEeKpItXg-ZWbFg _rNY9QJ1nEeKpItXg-ZWbFg _rNY9bp1nEeKpItXg-ZWbFg _rNY9e51nEeKpItXg-ZWbFg _rNY9hZ1nEeKpItXg-ZWbFg _rNY9rp1nEeKpItXg-ZWbFg"/>
                <clause xmi:id="_rNZkWJ1nEeKpItXg-ZWbFg" body="_rNZkMJ1nEeKpItXg-ZWbFg _rNZkOZ1nEeKpItXg-ZWbFg" bodyOutput="_rNZkPZ1nEeKpItXg-ZWbFg" decider="_rNZkLJ1nEeKpItXg-ZWbFg" predecessorClause="_rNZkV51nEeKpItXg-ZWbFg" test="_rNZkK51nEeKpItXg-ZWbFg"/>
                <result xmi:id="_rNZkWZ1nEeKpItXg-ZWbFg" name="IfStatement@1ba95bfa.result(numDays)" outgoing="_rNZkq51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkWp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkW51nEeKpItXg-ZWbFg" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_rNZkXJ1nEeKpItXg-ZWbFg" name="Fork(numDays)" outgoing="_rNZkrJ1nEeKpItXg-ZWbFg" incoming="_rNZkq51nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkXZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays))">
                <structuredNodeInput xmi:id="_rNZkXp1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)).input" outgoing="_rNZkZJ1nEeKpItXg-ZWbFg" incoming="_rNZkrJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkX51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkYJ1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_rNZkYZ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)).output" incoming="_rNZkZJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkYp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkY51nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkZJ1nEeKpItXg-ZWbFg" source="_rNZkXp1nEeKpItXg-ZWbFg" target="_rNZkYZ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNZkZZ1nEeKpItXg-ZWbFg" name="Value(true)">
                <result xmi:id="_rNZkZp1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkZ51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkaJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_rNZkaZ1nEeKpItXg-ZWbFg" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkap1nEeKpItXg-ZWbFg" name="ExpressionStatement@54e890bb" outgoing="_rNZkrZ1nEeKpItXg-ZWbFg">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNZka51nEeKpItXg-ZWbFg" name="Call(WriteLine)" incoming="_rNZkeZ1nEeKpItXg-ZWbFg">
                  <argument xmi:id="_rNZkbJ1nEeKpItXg-ZWbFg" name="Call(WriteLine).argument(value)" incoming="_rNZkeJ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkbZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkbp1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <result xmi:id="_rNZkb51nEeKpItXg-ZWbFg" name="Call(WriteLine).result(errorStatus)">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkcJ1nEeKpItXg-ZWbFg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkcZ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkcp1nEeKpItXg-ZWbFg" name="Tuple@28ec6c71" outgoing="_rNZkeZ1nEeKpItXg-ZWbFg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNZkc51nEeKpItXg-ZWbFg" name="Value(&quot;Invalid month.&quot;)">
                    <result xmi:id="_rNZkdJ1nEeKpItXg-ZWbFg" name="Value(&quot;Invalid month.&quot;).result" outgoing="_rNZkeJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkdZ1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkdp1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_rNZkd51nEeKpItXg-ZWbFg" value="Invalid month.">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkeJ1nEeKpItXg-ZWbFg" source="_rNZkdJ1nEeKpItXg-ZWbFg" target="_rNZkbJ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkeZ1nEeKpItXg-ZWbFg" source="_rNZkcp1nEeKpItXg-ZWbFg" target="_rNZka51nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkep1nEeKpItXg-ZWbFg" name="ExpressionStatement@3ca8db08" incoming="_rNZkrZ1nEeKpItXg-ZWbFg">
                <node xmi:type="uml:ForkNode" xmi:id="_rNZke51nEeKpItXg-ZWbFg" name="Fork(numDays)@2f2b3607" outgoing="_rNZkrp1nEeKpItXg-ZWbFg" incoming="_rNZkgp1nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkfJ1nEeKpItXg-ZWbFg" name="RightHandSide@3de81dc2">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNZkfZ1nEeKpItXg-ZWbFg" name="Value(0)">
                    <result xmi:id="_rNZkfp1nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNZkgp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkf51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkgJ1nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_rNZkgZ1nEeKpItXg-ZWbFg">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkgp1nEeKpItXg-ZWbFg" source="_rNZkfp1nEeKpItXg-ZWbFg" target="_rNZke51nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNZkg51nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@2f2b3607)">
                <structuredNodeInput xmi:id="_rNZkhJ1nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@2f2b3607).input" outgoing="_rNZkip1nEeKpItXg-ZWbFg" incoming="_rNZkrp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkhZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkhp1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_rNZkh51nEeKpItXg-ZWbFg" name="Passthru(Fork(numDays)@2f2b3607).output" incoming="_rNZkip1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkiJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkiZ1nEeKpItXg-ZWbFg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkip1nEeKpItXg-ZWbFg" source="_rNZkhJ1nEeKpItXg-ZWbFg" target="_rNZkh51nEeKpItXg-ZWbFg"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZki51nEeKpItXg-ZWbFg" source="_rNXvHJ1nEeKpItXg-ZWbFg" target="_rNXvJ51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkjJ1nEeKpItXg-ZWbFg" source="_rNXvK51nEeKpItXg-ZWbFg" target="_rNXvNp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkjZ1nEeKpItXg-ZWbFg" source="_rNXvJJ1nEeKpItXg-ZWbFg" target="_rNXvOp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkjp1nEeKpItXg-ZWbFg" source="_rNXvM51nEeKpItXg-ZWbFg" target="_rNXvPZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkj51nEeKpItXg-ZWbFg" source="_rNXvRJ1nEeKpItXg-ZWbFg" target="_rNXvT51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkkJ1nEeKpItXg-ZWbFg" source="_rNXvQJ1nEeKpItXg-ZWbFg" target="_rNXvU51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkkZ1nEeKpItXg-ZWbFg" source="_rNXvTJ1nEeKpItXg-ZWbFg" target="_rNXvVp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkkp1nEeKpItXg-ZWbFg" source="_rNXvXZ1nEeKpItXg-ZWbFg" target="_rNXvaJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkk51nEeKpItXg-ZWbFg" source="_rNXvWZ1nEeKpItXg-ZWbFg" target="_rNXvbJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZklJ1nEeKpItXg-ZWbFg" source="_rNXvZZ1nEeKpItXg-ZWbFg" target="_rNXvb51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZklZ1nEeKpItXg-ZWbFg" source="_rNXvdp1nEeKpItXg-ZWbFg" target="_rNXvgZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZklp1nEeKpItXg-ZWbFg" source="_rNXvcp1nEeKpItXg-ZWbFg" target="_rNXvhZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkl51nEeKpItXg-ZWbFg" source="_rNXvfp1nEeKpItXg-ZWbFg" target="_rNXviJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkmJ1nEeKpItXg-ZWbFg" source="_rNYWA51nEeKpItXg-ZWbFg" target="_rNYWDp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkmZ1nEeKpItXg-ZWbFg" source="_rNXvi51nEeKpItXg-ZWbFg" target="_rNYWEp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkmp1nEeKpItXg-ZWbFg" source="_rNYWC51nEeKpItXg-ZWbFg" target="_rNYWFZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkm51nEeKpItXg-ZWbFg" source="_rNYWHJ1nEeKpItXg-ZWbFg" target="_rNYWJ51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZknJ1nEeKpItXg-ZWbFg" source="_rNYWGJ1nEeKpItXg-ZWbFg" target="_rNYWK51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZknZ1nEeKpItXg-ZWbFg" source="_rNYWJJ1nEeKpItXg-ZWbFg" target="_rNYWLp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZknp1nEeKpItXg-ZWbFg" source="_rNYWNZ1nEeKpItXg-ZWbFg" target="_rNYWPp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkn51nEeKpItXg-ZWbFg" source="_rNYWRp1nEeKpItXg-ZWbFg" target="_rNYWUZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkoJ1nEeKpItXg-ZWbFg" source="_rNYWVZ1nEeKpItXg-ZWbFg" target="_rNYWYJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkoZ1nEeKpItXg-ZWbFg" source="_rNYWTp1nEeKpItXg-ZWbFg" target="_rNYWZJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkop1nEeKpItXg-ZWbFg" source="_rNYWXZ1nEeKpItXg-ZWbFg" target="_rNYWZ51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZko51nEeKpItXg-ZWbFg" source="_rNYWbp1nEeKpItXg-ZWbFg" target="_rNYWeZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkpJ1nEeKpItXg-ZWbFg" source="_rNYWap1nEeKpItXg-ZWbFg" target="_rNYWfZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkpZ1nEeKpItXg-ZWbFg" source="_rNYWdp1nEeKpItXg-ZWbFg" target="_rNYWgJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkpp1nEeKpItXg-ZWbFg" source="_rNYWh51nEeKpItXg-ZWbFg" target="_rNYWkp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkp51nEeKpItXg-ZWbFg" source="_rNYWg51nEeKpItXg-ZWbFg" target="_rNYWlp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkqJ1nEeKpItXg-ZWbFg" source="_rNYWj51nEeKpItXg-ZWbFg" target="_rNYWmZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkqZ1nEeKpItXg-ZWbFg" source="_rNYWoJ1nEeKpItXg-ZWbFg" target="_rNYWqZ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkqp1nEeKpItXg-ZWbFg" source="_rNY9E51nEeKpItXg-ZWbFg" target="_rNY9Hp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkq51nEeKpItXg-ZWbFg" source="_rNZkWZ1nEeKpItXg-ZWbFg" target="_rNZkXJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkrJ1nEeKpItXg-ZWbFg" source="_rNZkXJ1nEeKpItXg-ZWbFg" target="_rNZkXp1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkrZ1nEeKpItXg-ZWbFg" source="_rNZkap1nEeKpItXg-ZWbFg" target="_rNZkep1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkrp1nEeKpItXg-ZWbFg" source="_rNZke51nEeKpItXg-ZWbFg" target="_rNZkhJ1nEeKpItXg-ZWbFg"/>
              <clause xmi:id="_rNZkr51nEeKpItXg-ZWbFg" body="_rNYWNJ1nEeKpItXg-ZWbFg _rNYWPZ1nEeKpItXg-ZWbFg" bodyOutput="_rNYWQZ1nEeKpItXg-ZWbFg" decider="_rNYWMZ1nEeKpItXg-ZWbFg" successorClause="_rNZksp1nEeKpItXg-ZWbFg" test="_rNXvG51nEeKpItXg-ZWbFg _rNXvIJ1nEeKpItXg-ZWbFg _rNXvKp1nEeKpItXg-ZWbFg _rNXvL51nEeKpItXg-ZWbFg _rNXvOZ1nEeKpItXg-ZWbFg _rNXvQ51nEeKpItXg-ZWbFg _rNXvSJ1nEeKpItXg-ZWbFg _rNXvUp1nEeKpItXg-ZWbFg _rNXvXJ1nEeKpItXg-ZWbFg _rNXvYZ1nEeKpItXg-ZWbFg _rNXva51nEeKpItXg-ZWbFg _rNXvdZ1nEeKpItXg-ZWbFg _rNXvep1nEeKpItXg-ZWbFg _rNXvhJ1nEeKpItXg-ZWbFg _rNYWAp1nEeKpItXg-ZWbFg _rNYWB51nEeKpItXg-ZWbFg _rNYWEZ1nEeKpItXg-ZWbFg _rNYWG51nEeKpItXg-ZWbFg _rNYWIJ1nEeKpItXg-ZWbFg _rNYWKp1nEeKpItXg-ZWbFg"/>
              <clause xmi:id="_rNZksJ1nEeKpItXg-ZWbFg" body="_rNYWn51nEeKpItXg-ZWbFg _rNYWqJ1nEeKpItXg-ZWbFg" bodyOutput="_rNYWrJ1nEeKpItXg-ZWbFg" decider="_rNYWnJ1nEeKpItXg-ZWbFg" successorClause="_rNZksp1nEeKpItXg-ZWbFg" test="_rNYWRZ1nEeKpItXg-ZWbFg _rNYWSp1nEeKpItXg-ZWbFg _rNYWVJ1nEeKpItXg-ZWbFg _rNYWWZ1nEeKpItXg-ZWbFg _rNYWY51nEeKpItXg-ZWbFg _rNYWbZ1nEeKpItXg-ZWbFg _rNYWcp1nEeKpItXg-ZWbFg _rNYWfJ1nEeKpItXg-ZWbFg _rNYWhp1nEeKpItXg-ZWbFg _rNYWi51nEeKpItXg-ZWbFg _rNYWlZ1nEeKpItXg-ZWbFg"/>
              <clause xmi:id="_rNZksZ1nEeKpItXg-ZWbFg" body="_rNY9IZ1nEeKpItXg-ZWbFg _rNZkXZ1nEeKpItXg-ZWbFg" bodyOutput="_rNZkYZ1nEeKpItXg-ZWbFg" decider="_rNY9G51nEeKpItXg-ZWbFg" successorClause="_rNZksp1nEeKpItXg-ZWbFg" test="_rNY9Ep1nEeKpItXg-ZWbFg _rNY9F51nEeKpItXg-ZWbFg"/>
              <clause xmi:id="_rNZksp1nEeKpItXg-ZWbFg" body="_rNZkap1nEeKpItXg-ZWbFg _rNZkep1nEeKpItXg-ZWbFg _rNZkg51nEeKpItXg-ZWbFg" bodyOutput="_rNZkh51nEeKpItXg-ZWbFg" decider="_rNZkZp1nEeKpItXg-ZWbFg" predecessorClause="_rNZkr51nEeKpItXg-ZWbFg _rNZksJ1nEeKpItXg-ZWbFg _rNZksZ1nEeKpItXg-ZWbFg" test="_rNZkZZ1nEeKpItXg-ZWbFg"/>
              <result xmi:id="_rNZks51nEeKpItXg-ZWbFg" name="Conditional(SwitchStatement@50738a20).result(numDays)" outgoing="_rNZkuJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZktJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZktZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_rNZktp1nEeKpItXg-ZWbFg" name="Fork(numDays)" outgoing="_rNaLYp1nEeKpItXg-ZWbFg" incoming="_rNZkuJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_rNZkt51nEeKpItXg-ZWbFg" name="Fork(Fork(month))" incoming="_rNaLTJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZkuJ1nEeKpItXg-ZWbFg" source="_rNZks51nEeKpItXg-ZWbFg" target="_rNZktp1nEeKpItXg-ZWbFg"/>
          </node>
          <structuredNodeOutput xmi:id="_rNZkuZ1nEeKpItXg-ZWbFg" name="Output(condition1)" outgoing="_rNUr4p1nEeKpItXg-ZWbFg" incoming="_rNaLXZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkup1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZku51nEeKpItXg-ZWbFg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_rNZkvJ1nEeKpItXg-ZWbFg" name="Output(condition2)" outgoing="_rNUr451nEeKpItXg-ZWbFg" incoming="_rNaLXp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkvZ1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkvp1nEeKpItXg-ZWbFg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_rNZkv51nEeKpItXg-ZWbFg" name="Output(condition3)" outgoing="_rNUr5J1nEeKpItXg-ZWbFg" incoming="_rNaLX51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkwJ1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkwZ1nEeKpItXg-ZWbFg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_rNZkwp1nEeKpItXg-ZWbFg" name="Output(year)" outgoing="_rNUr5Z1nEeKpItXg-ZWbFg" incoming="_rNaLYJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkw51nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkxJ1nEeKpItXg-ZWbFg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_rNZkxZ1nEeKpItXg-ZWbFg" name="Output(month)" outgoing="_rNUr5p1nEeKpItXg-ZWbFg" incoming="_rNaLYZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkxp1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkx51nEeKpItXg-ZWbFg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_rNZkyJ1nEeKpItXg-ZWbFg" name="Output(numDays)" outgoing="_rNUr551nEeKpItXg-ZWbFg" incoming="_rNaLYp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNZkyZ1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNZkyp1nEeKpItXg-ZWbFg" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZky51nEeKpItXg-ZWbFg" source="_rNUr751nEeKpItXg-ZWbFg" target="_rNUr-J1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkzJ1nEeKpItXg-ZWbFg" source="_rNUr-J1nEeKpItXg-ZWbFg" target="_rNUsAZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkzZ1nEeKpItXg-ZWbFg" source="_rNUsAZ1nEeKpItXg-ZWbFg" target="_rNUsCp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkzp1nEeKpItXg-ZWbFg" source="_rNUsCp1nEeKpItXg-ZWbFg" target="_rNUsE51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZkz51nEeKpItXg-ZWbFg" source="_rNUsE51nEeKpItXg-ZWbFg" target="_rNUsHJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZk0J1nEeKpItXg-ZWbFg" source="_rNUsHJ1nEeKpItXg-ZWbFg" target="_rNVSsJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZk0Z1nEeKpItXg-ZWbFg" source="_rNVSsJ1nEeKpItXg-ZWbFg" target="_rNVSwJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk0p1nEeKpItXg-ZWbFg" source="_rNUr8J1nEeKpItXg-ZWbFg" target="_rNVSy51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk051nEeKpItXg-ZWbFg" source="_rNUr-Z1nEeKpItXg-ZWbFg" target="_rNVSzp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk1J1nEeKpItXg-ZWbFg" source="_rNUsHZ1nEeKpItXg-ZWbFg" target="_rNVS3Z1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk1Z1nEeKpItXg-ZWbFg" source="_rNVSsZ1nEeKpItXg-ZWbFg" target="_rNVS4p1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNZk1p1nEeKpItXg-ZWbFg" source="_rNVSwJ1nEeKpItXg-ZWbFg" target="_rNVSyZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk151nEeKpItXg-ZWbFg" source="_rNV6CJ1nEeKpItXg-ZWbFg" target="_rNV6C51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk2J1nEeKpItXg-ZWbFg" source="_rNUr8J1nEeKpItXg-ZWbFg" target="_rNVS7p1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk2Z1nEeKpItXg-ZWbFg" source="_rNUsAp1nEeKpItXg-ZWbFg" target="_rNVS8Z1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNZk2p1nEeKpItXg-ZWbFg" source="_rNUr8J1nEeKpItXg-ZWbFg" target="_rNVTCZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLMJ1nEeKpItXg-ZWbFg" source="_rNUsAp1nEeKpItXg-ZWbFg" target="_rNVTDJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLMZ1nEeKpItXg-ZWbFg" source="_rNUr8J1nEeKpItXg-ZWbFg" target="_rNVTFJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLMp1nEeKpItXg-ZWbFg" source="_rNUsC51nEeKpItXg-ZWbFg" target="_rNVTF51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLM51nEeKpItXg-ZWbFg" source="_rNUr8J1nEeKpItXg-ZWbFg" target="_rNV52Z1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLNJ1nEeKpItXg-ZWbFg" source="_rNUsC51nEeKpItXg-ZWbFg" target="_rNV53J1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLNZ1nEeKpItXg-ZWbFg" source="_rNVSyZ1nEeKpItXg-ZWbFg" target="_rNVS7J1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLNp1nEeKpItXg-ZWbFg" source="_rNVS7J1nEeKpItXg-ZWbFg" target="_rNV6DJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLN51nEeKpItXg-ZWbFg" source="_rNWg8Z1nEeKpItXg-ZWbFg" target="_rNWg9J1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLOJ1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNV6F51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLOZ1nEeKpItXg-ZWbFg" source="_rNUsAp1nEeKpItXg-ZWbFg" target="_rNV6Gp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLOp1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNV6Mp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLO51nEeKpItXg-ZWbFg" source="_rNUsC51nEeKpItXg-ZWbFg" target="_rNV6NZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLPJ1nEeKpItXg-ZWbFg" source="_rNV6DJ1nEeKpItXg-ZWbFg" target="_rNV6FZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLPZ1nEeKpItXg-ZWbFg" source="_rNXIRp1nEeKpItXg-ZWbFg" target="_rNXISZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLPp1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNWg951nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLP51nEeKpItXg-ZWbFg" source="_rNUsAp1nEeKpItXg-ZWbFg" target="_rNWg-p1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLQJ1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNWhEp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLQZ1nEeKpItXg-ZWbFg" source="_rNUsAp1nEeKpItXg-ZWbFg" target="_rNWhFZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLQp1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNWhHZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLQ51nEeKpItXg-ZWbFg" source="_rNUsC51nEeKpItXg-ZWbFg" target="_rNWhIJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLRJ1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNWhUZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLRZ1nEeKpItXg-ZWbFg" source="_rNUsC51nEeKpItXg-ZWbFg" target="_rNWhVJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLRp1nEeKpItXg-ZWbFg" source="_rNV6DZ1nEeKpItXg-ZWbFg" target="_rNXH451nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLR51nEeKpItXg-ZWbFg" source="_rNUsFJ1nEeKpItXg-ZWbFg" target="_rNXH5p1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLSJ1nEeKpItXg-ZWbFg" source="_rNV6FZ1nEeKpItXg-ZWbFg" target="_rNWg9Z1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLSZ1nEeKpItXg-ZWbFg" source="_rNVSwZ1nEeKpItXg-ZWbFg" target="_rNXvF51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLSp1nEeKpItXg-ZWbFg" source="_rNVSwZ1nEeKpItXg-ZWbFg" target="_rNXIUp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLS51nEeKpItXg-ZWbFg" source="_rNWg9Z1nEeKpItXg-ZWbFg" target="_rNXISp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLTJ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNZkt51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLTZ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNXvIZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLTp1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNXvMJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLT51nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNXvSZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLUJ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNXvYp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLUZ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNXve51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLUp1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNYWCJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLU51nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNYWIZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLVJ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNYWS51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLVZ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNYWWp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLVp1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNYWc51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLV51nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNYWjJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLWJ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNY9GJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLWZ1nEeKpItXg-ZWbFg" source="_rNVSwZ1nEeKpItXg-ZWbFg" target="_rNY9KJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLWp1nEeKpItXg-ZWbFg" source="_rNVSwZ1nEeKpItXg-ZWbFg" target="_rNY9R51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLW51nEeKpItXg-ZWbFg" source="_rNVSwZ1nEeKpItXg-ZWbFg" target="_rNY9jJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLXJ1nEeKpItXg-ZWbFg" source="_rNXISp1nEeKpItXg-ZWbFg" target="_rNXvGZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLXZ1nEeKpItXg-ZWbFg" source="_rNV6C51nEeKpItXg-ZWbFg" target="_rNZkuZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLXp1nEeKpItXg-ZWbFg" source="_rNWg9J1nEeKpItXg-ZWbFg" target="_rNZkvJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLX51nEeKpItXg-ZWbFg" source="_rNXISZ1nEeKpItXg-ZWbFg" target="_rNZkv51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLYJ1nEeKpItXg-ZWbFg" source="_rNVSwZ1nEeKpItXg-ZWbFg" target="_rNZkwp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLYZ1nEeKpItXg-ZWbFg" source="_rNXvFp1nEeKpItXg-ZWbFg" target="_rNZkxZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLYp1nEeKpItXg-ZWbFg" source="_rNZktp1nEeKpItXg-ZWbFg" target="_rNZkyJ1nEeKpItXg-ZWbFg"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNUr6J1nEeKpItXg-ZWbFg" name="Output(condition1)" incoming="_rNUr4p1nEeKpItXg-ZWbFg" parameter="_rNUr0J1nEeKpItXg-ZWbFg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNUr6Z1nEeKpItXg-ZWbFg" name="Output(condition2)" incoming="_rNUr451nEeKpItXg-ZWbFg" parameter="_rNUr051nEeKpItXg-ZWbFg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNUr6p1nEeKpItXg-ZWbFg" name="Output(condition3)" incoming="_rNUr5J1nEeKpItXg-ZWbFg" parameter="_rNUr1p1nEeKpItXg-ZWbFg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNUr651nEeKpItXg-ZWbFg" name="Output(year)" incoming="_rNUr5Z1nEeKpItXg-ZWbFg" parameter="_rNUr2Z1nEeKpItXg-ZWbFg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNUr7J1nEeKpItXg-ZWbFg" name="Output(month)" incoming="_rNUr5p1nEeKpItXg-ZWbFg" parameter="_rNUr3J1nEeKpItXg-ZWbFg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNUr7Z1nEeKpItXg-ZWbFg" name="Output(numDays)" incoming="_rNUr551nEeKpItXg-ZWbFg" parameter="_rNUr351nEeKpItXg-ZWbFg"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNaLY51nEeKpItXg-ZWbFg" name="Statements_Conditional$method$1" specification="_rNayV51nEeKpItXg-ZWbFg" group="_rNaLaZ1nEeKpItXg-ZWbFg" node="_rNaLaJ1nEeKpItXg-ZWbFg _rNaLaZ1nEeKpItXg-ZWbFg">
        <ownedParameter xmi:id="_rNaLZJ1nEeKpItXg-ZWbFg" name="" type="_rNTdgZ1nEeKpItXg-ZWbFg" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLZZ1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLZp1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLZ51nEeKpItXg-ZWbFg" source="_rNaLb51nEeKpItXg-ZWbFg" target="_rNaLaJ1nEeKpItXg-ZWbFg"/>
        <structuredNode xmi:id="_rNaLaZ1nEeKpItXg-ZWbFg" name="Body(Statements_Conditional$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNaLap1nEeKpItXg-ZWbFg" name="Body" incoming="_rNaLlZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_rNaLa51nEeKpItXg-ZWbFg" name="ReadSelf">
            <result xmi:id="_rNaLbJ1nEeKpItXg-ZWbFg" name="ReadSelf.result" outgoing="_rNaLk51nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLbZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLbp1nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNaLb51nEeKpItXg-ZWbFg" name="Fork(ReadSelf.result)" outgoing="_rNaLZ51nEeKpItXg-ZWbFg _rNaLlJ1nEeKpItXg-ZWbFg _rNaLlp1nEeKpItXg-ZWbFg" incoming="_rNaLk51nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_rNaLcJ1nEeKpItXg-ZWbFg" name="Call(Statements_Conditional$initialization$1)" outgoing="_rNaLlZ1nEeKpItXg-ZWbFg" incoming="_rNaLnJ1nEeKpItXg-ZWbFg" operation="_rNayQ51nEeKpItXg-ZWbFg">
            <target xmi:id="_rNaLcZ1nEeKpItXg-ZWbFg" name="Call(Statements_Conditional$initialization$1).target" incoming="_rNaLlJ1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLcp1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLc51nEeKpItXg-ZWbFg" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_rNaLdJ1nEeKpItXg-ZWbFg" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_rNTdh51nEeKpItXg-ZWbFg">
            <object xmi:id="_rNaLdZ1nEeKpItXg-ZWbFg" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_rNaLlp1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLdp1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLd51nEeKpItXg-ZWbFg" value="1"/>
            </object>
            <result xmi:id="_rNaLeJ1nEeKpItXg-ZWbFg" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_rNaLl51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLeZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLep1nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNaLe51nEeKpItXg-ZWbFg" name="Call(ListSize)">
            <argument xmi:id="_rNaLfJ1nEeKpItXg-ZWbFg" name="Call(ListSize).argument(list)" incoming="_rNaLl51nEeKpItXg-ZWbFg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLfZ1nEeKpItXg-ZWbFg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLfp1nEeKpItXg-ZWbFg" value="*"/>
            </argument>
            <result xmi:id="_rNaLf51nEeKpItXg-ZWbFg" name="Call(ListSize).result(result)" outgoing="_rNaLmJ1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLgJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLgZ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNaLgp1nEeKpItXg-ZWbFg" name="Value(0)">
            <result xmi:id="_rNaLg51nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNaLmZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLhJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLhZ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_rNaLhp1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_rNaLh51nEeKpItXg-ZWbFg" name="Test(Size==0)">
            <first xmi:id="_rNaLiJ1nEeKpItXg-ZWbFg" name="Test(Size==0).first" incoming="_rNaLmJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLiZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLip1nEeKpItXg-ZWbFg" value="1"/>
            </first>
            <result xmi:id="_rNaLi51nEeKpItXg-ZWbFg" name="Test(Size==0).result" outgoing="_rNaLm51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLjJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLjZ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <second xmi:id="_rNaLjp1nEeKpItXg-ZWbFg" name="Test(Size==0).second" incoming="_rNaLmZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLj51nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLkJ1nEeKpItXg-ZWbFg" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_rNaLkZ1nEeKpItXg-ZWbFg" name="InitialNode" outgoing="_rNaLmp1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_rNaLkp1nEeKpItXg-ZWbFg" name="Decision(Test(Statements_Conditional$initializationFlag$1))" outgoing="_rNaLnJ1nEeKpItXg-ZWbFg" incoming="_rNaLmp1nEeKpItXg-ZWbFg _rNaLm51nEeKpItXg-ZWbFg" decisionInputFlow="_rNaLm51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLk51nEeKpItXg-ZWbFg" source="_rNaLbJ1nEeKpItXg-ZWbFg" target="_rNaLb51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLlJ1nEeKpItXg-ZWbFg" source="_rNaLb51nEeKpItXg-ZWbFg" target="_rNaLcZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLlZ1nEeKpItXg-ZWbFg" source="_rNaLcJ1nEeKpItXg-ZWbFg" target="_rNaLap1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLlp1nEeKpItXg-ZWbFg" source="_rNaLb51nEeKpItXg-ZWbFg" target="_rNaLdZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLl51nEeKpItXg-ZWbFg" source="_rNaLeJ1nEeKpItXg-ZWbFg" target="_rNaLfJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLmJ1nEeKpItXg-ZWbFg" source="_rNaLf51nEeKpItXg-ZWbFg" target="_rNaLiJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLmZ1nEeKpItXg-ZWbFg" source="_rNaLg51nEeKpItXg-ZWbFg" target="_rNaLjp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLmp1nEeKpItXg-ZWbFg" source="_rNaLkZ1nEeKpItXg-ZWbFg" target="_rNaLkp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLm51nEeKpItXg-ZWbFg" source="_rNaLi51nEeKpItXg-ZWbFg" target="_rNaLkp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaLnJ1nEeKpItXg-ZWbFg" source="_rNaLkp1nEeKpItXg-ZWbFg" target="_rNaLcJ1nEeKpItXg-ZWbFg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNaLnZ1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNaLaJ1nEeKpItXg-ZWbFg" name="Return" incoming="_rNaLZ51nEeKpItXg-ZWbFg" parameter="_rNaLZJ1nEeKpItXg-ZWbFg"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNaLnp1nEeKpItXg-ZWbFg" name="destroy$method$1" specification="_rNayW51nEeKpItXg-ZWbFg" group="_rNaLn51nEeKpItXg-ZWbFg" node="_rNaLn51nEeKpItXg-ZWbFg">
        <structuredNode xmi:id="_rNaLn51nEeKpItXg-ZWbFg" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNaLoJ1nEeKpItXg-ZWbFg" name="Statements_Conditional$initialization$1" specification="_rNayQ51nEeKpItXg-ZWbFg" group="_rNaLoZ1nEeKpItXg-ZWbFg" node="_rNaLoZ1nEeKpItXg-ZWbFg">
        <structuredNode xmi:id="_rNaLoZ1nEeKpItXg-ZWbFg" name="Body(Statements_Conditional$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_rNaLop1nEeKpItXg-ZWbFg" name="ReadSelf">
            <result xmi:id="_rNaLo51nEeKpItXg-ZWbFg" name="ReadSelf.result" outgoing="_rNaL2J1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLpJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLpZ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNaLpp1nEeKpItXg-ZWbFg" name="Fork(ReadSelf.result)" outgoing="_rNaL2Z1nEeKpItXg-ZWbFg _rNaL2p1nEeKpItXg-ZWbFg" incoming="_rNaL2J1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNaLp51nEeKpItXg-ZWbFg" name="Initialization" incoming="_rNayQZ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNaLqJ1nEeKpItXg-ZWbFg" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNaLqZ1nEeKpItXg-ZWbFg" name="Value(true)">
                <result xmi:id="_rNaLqp1nEeKpItXg-ZWbFg" name="Value(true).result" outgoing="_rNaLuJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLq51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLrJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_rNaLrZ1nEeKpItXg-ZWbFg" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_rNaLrp1nEeKpItXg-ZWbFg" name="Write(Statements_Conditional$initializationFlag$1)" structuralFeature="_rNTdh51nEeKpItXg-ZWbFg" isReplaceAll="true">
                <object xmi:id="_rNaLr51nEeKpItXg-ZWbFg" name="Write(Statements_Conditional$initializationFlag$1).object" incoming="_rNaL2Z1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLsJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLsZ1nEeKpItXg-ZWbFg" value="1"/>
                </object>
                <result xmi:id="_rNaLsp1nEeKpItXg-ZWbFg" name="Write(Statements_Conditional$initializationFlag$1).result" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLs51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLtJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:id="_rNaLtZ1nEeKpItXg-ZWbFg" name="Write(Statements_Conditional$initializationFlag$1).value" incoming="_rNaLuJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLtp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLt51nEeKpItXg-ZWbFg" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaLuJ1nEeKpItXg-ZWbFg" source="_rNaLqp1nEeKpItXg-ZWbFg" target="_rNaLtZ1nEeKpItXg-ZWbFg"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_rNaLuZ1nEeKpItXg-ZWbFg" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_rNTdh51nEeKpItXg-ZWbFg">
            <object xmi:id="_rNaLup1nEeKpItXg-ZWbFg" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_rNaL2p1nEeKpItXg-ZWbFg" type="_rNTdgZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLu51nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLvJ1nEeKpItXg-ZWbFg" value="1"/>
            </object>
            <result xmi:id="_rNaLvZ1nEeKpItXg-ZWbFg" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_rNaL251nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLvp1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLv51nEeKpItXg-ZWbFg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNaLwJ1nEeKpItXg-ZWbFg" name="Call(ListSize)">
            <argument xmi:id="_rNaLwZ1nEeKpItXg-ZWbFg" name="Call(ListSize).argument(list)" incoming="_rNaL251nEeKpItXg-ZWbFg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLwp1nEeKpItXg-ZWbFg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLw51nEeKpItXg-ZWbFg" value="*"/>
            </argument>
            <result xmi:id="_rNaLxJ1nEeKpItXg-ZWbFg" name="Call(ListSize).result(result)" outgoing="_rNaL3J1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLxZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLxp1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNaLx51nEeKpItXg-ZWbFg" name="Value(0)">
            <result xmi:id="_rNaLyJ1nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNaL3Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLyZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLyp1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_rNaLy51nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_rNaLzJ1nEeKpItXg-ZWbFg" name="Test(Size==0)">
            <first xmi:id="_rNaLzZ1nEeKpItXg-ZWbFg" name="Test(Size==0).first" incoming="_rNaL3J1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaLzp1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaLz51nEeKpItXg-ZWbFg" value="1"/>
            </first>
            <result xmi:id="_rNaL0J1nEeKpItXg-ZWbFg" name="Test(Size==0).result" outgoing="_rNayQJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaL0Z1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaL0p1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <second xmi:id="_rNaL051nEeKpItXg-ZWbFg" name="Test(Size==0).second" incoming="_rNaL3Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaL1J1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaL1Z1nEeKpItXg-ZWbFg" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_rNaL1p1nEeKpItXg-ZWbFg" name="InitialNode" outgoing="_rNaL3p1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_rNaL151nEeKpItXg-ZWbFg" name="Decision(Test(Statements_Conditional$initializationFlag$1))" outgoing="_rNayQZ1nEeKpItXg-ZWbFg" incoming="_rNaL3p1nEeKpItXg-ZWbFg _rNayQJ1nEeKpItXg-ZWbFg" decisionInputFlow="_rNayQJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaL2J1nEeKpItXg-ZWbFg" source="_rNaLo51nEeKpItXg-ZWbFg" target="_rNaLpp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaL2Z1nEeKpItXg-ZWbFg" source="_rNaLpp1nEeKpItXg-ZWbFg" target="_rNaLr51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaL2p1nEeKpItXg-ZWbFg" source="_rNaLpp1nEeKpItXg-ZWbFg" target="_rNaLup1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaL251nEeKpItXg-ZWbFg" source="_rNaLvZ1nEeKpItXg-ZWbFg" target="_rNaLwZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaL3J1nEeKpItXg-ZWbFg" source="_rNaLxJ1nEeKpItXg-ZWbFg" target="_rNaLzZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaL3Z1nEeKpItXg-ZWbFg" source="_rNaLyJ1nEeKpItXg-ZWbFg" target="_rNaL051nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNaL3p1nEeKpItXg-ZWbFg" source="_rNaL1p1nEeKpItXg-ZWbFg" target="_rNaL151nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNayQJ1nEeKpItXg-ZWbFg" source="_rNaL0J1nEeKpItXg-ZWbFg" target="_rNaL151nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNayQZ1nEeKpItXg-ZWbFg" source="_rNaL151nEeKpItXg-ZWbFg" target="_rNaLp51nEeKpItXg-ZWbFg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNayQp1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_rNayQ51nEeKpItXg-ZWbFg" name="Statements_Conditional$initialization$1" visibility="protected" method="_rNaLoJ1nEeKpItXg-ZWbFg"/>
      <ownedOperation xmi:id="_rNayRJ1nEeKpItXg-ZWbFg" name="test" visibility="package" method="_rNUrz51nEeKpItXg-ZWbFg">
        <ownedParameter xmi:id="_rNayRZ1nEeKpItXg-ZWbFg" name="condition1" visibility="package" type="_rNbZZZ1nEeKpItXg-ZWbFg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayRp1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayR51nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNaySJ1nEeKpItXg-ZWbFg" name="condition2" visibility="package" type="_rNbZZZ1nEeKpItXg-ZWbFg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaySZ1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaySp1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNayS51nEeKpItXg-ZWbFg" name="condition3" visibility="package" type="_rNbZZZ1nEeKpItXg-ZWbFg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayTJ1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayTZ1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNayTp1nEeKpItXg-ZWbFg" name="year" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayT51nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayUJ1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNayUZ1nEeKpItXg-ZWbFg" name="month" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayUp1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayU51nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rNayVJ1nEeKpItXg-ZWbFg" name="numDays" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayVZ1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayVp1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_rNayV51nEeKpItXg-ZWbFg" name="Statements_Conditional" visibility="package" method="_rNaLY51nEeKpItXg-ZWbFg">
        <ownedParameter xmi:id="_rNayWJ1nEeKpItXg-ZWbFg" name="" visibility="package" type="_rNTdgZ1nEeKpItXg-ZWbFg" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayWZ1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayWp1nEeKpItXg-ZWbFg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_rNayW51nEeKpItXg-ZWbFg" name="destroy" visibility="package" method="_rNaLnp1nEeKpItXg-ZWbFg"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_rNayXJ1nEeKpItXg-ZWbFg" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_rNayXZ1nEeKpItXg-ZWbFg" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayXp1nEeKpItXg-ZWbFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayX51nEeKpItXg-ZWbFg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNayYJ1nEeKpItXg-ZWbFg" name="raiseAlarm$method$1" specification="_rNbZW51nEeKpItXg-ZWbFg" group="_rNayZ51nEeKpItXg-ZWbFg" node="_rNayZZ1nEeKpItXg-ZWbFg _rNayZp1nEeKpItXg-ZWbFg _rNayZ51nEeKpItXg-ZWbFg">
          <ownedParameter xmi:id="_rNayYZ1nEeKpItXg-ZWbFg" name="sensorId">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayYp1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayY51nEeKpItXg-ZWbFg" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNayZJ1nEeKpItXg-ZWbFg" source="_rNayZZ1nEeKpItXg-ZWbFg" target="_rNayZp1nEeKpItXg-ZWbFg"/>
          <structuredNode xmi:id="_rNayZ51nEeKpItXg-ZWbFg" name="Body(raiseAlarm$method$1)"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNayZZ1nEeKpItXg-ZWbFg" name="Input(sensorId)" outgoing="_rNayZJ1nEeKpItXg-ZWbFg" parameter="_rNayYZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:ForkNode" xmi:id="_rNayZp1nEeKpItXg-ZWbFg" name="Fork(sensorId)" incoming="_rNayZJ1nEeKpItXg-ZWbFg"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNayaJ1nEeKpItXg-ZWbFg" name="cleanUp$method$1" specification="_rNbZX51nEeKpItXg-ZWbFg" group="_rNayaZ1nEeKpItXg-ZWbFg" node="_rNayaZ1nEeKpItXg-ZWbFg">
          <structuredNode xmi:id="_rNayaZ1nEeKpItXg-ZWbFg" name="Body(cleanUp$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNayap1nEeKpItXg-ZWbFg" name="Monitor$method$1" specification="_rNbZYJ1nEeKpItXg-ZWbFg" group="_rNaycJ1nEeKpItXg-ZWbFg" node="_rNayb51nEeKpItXg-ZWbFg _rNaycJ1nEeKpItXg-ZWbFg">
          <ownedParameter xmi:id="_rNaya51nEeKpItXg-ZWbFg" name="" type="_rNayXJ1nEeKpItXg-ZWbFg" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaybJ1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaybZ1nEeKpItXg-ZWbFg" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaybp1nEeKpItXg-ZWbFg" source="_rNaydp1nEeKpItXg-ZWbFg" target="_rNayb51nEeKpItXg-ZWbFg"/>
          <structuredNode xmi:id="_rNaycJ1nEeKpItXg-ZWbFg" name="Body(Monitor$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNaycZ1nEeKpItXg-ZWbFg" name="Body" incoming="_rNaynJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_rNaycp1nEeKpItXg-ZWbFg" name="ReadSelf">
              <result xmi:id="_rNayc51nEeKpItXg-ZWbFg" name="ReadSelf.result" outgoing="_rNaymp1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaydJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaydZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_rNaydp1nEeKpItXg-ZWbFg" name="Fork(ReadSelf.result)" outgoing="_rNaybp1nEeKpItXg-ZWbFg _rNaym51nEeKpItXg-ZWbFg _rNaynZ1nEeKpItXg-ZWbFg" incoming="_rNaymp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_rNayd51nEeKpItXg-ZWbFg" name="Call(Monitor$initialization$1)" outgoing="_rNaynJ1nEeKpItXg-ZWbFg" incoming="_rNayo51nEeKpItXg-ZWbFg" operation="_rNbZWp1nEeKpItXg-ZWbFg">
              <target xmi:id="_rNayeJ1nEeKpItXg-ZWbFg" name="Call(Monitor$initialization$1).target" incoming="_rNaym51nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayeZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayep1nEeKpItXg-ZWbFg" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_rNaye51nEeKpItXg-ZWbFg" name="Read(Monitor$initializationFlag$1)" structuralFeature="_rNayXZ1nEeKpItXg-ZWbFg">
              <object xmi:id="_rNayfJ1nEeKpItXg-ZWbFg" name="Read(Monitor$initializationFlag$1).object" incoming="_rNaynZ1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayfZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayfp1nEeKpItXg-ZWbFg" value="1"/>
              </object>
              <result xmi:id="_rNayf51nEeKpItXg-ZWbFg" name="Read(Monitor$initializationFlag$1).result" outgoing="_rNaynp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaygJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaygZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNaygp1nEeKpItXg-ZWbFg" name="Call(ListSize)">
              <argument xmi:id="_rNayg51nEeKpItXg-ZWbFg" name="Call(ListSize).argument(list)" incoming="_rNaynp1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayhJ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayhZ1nEeKpItXg-ZWbFg" value="*"/>
              </argument>
              <result xmi:id="_rNayhp1nEeKpItXg-ZWbFg" name="Call(ListSize).result(result)" outgoing="_rNayn51nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayh51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayiJ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNayiZ1nEeKpItXg-ZWbFg" name="Value(0)">
              <result xmi:id="_rNayip1nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNayoJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayi51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayjJ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_rNayjZ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_rNayjp1nEeKpItXg-ZWbFg" name="Test(Size==0)">
              <first xmi:id="_rNayj51nEeKpItXg-ZWbFg" name="Test(Size==0).first" incoming="_rNayn51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaykJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaykZ1nEeKpItXg-ZWbFg" value="1"/>
              </first>
              <result xmi:id="_rNaykp1nEeKpItXg-ZWbFg" name="Test(Size==0).result" outgoing="_rNayop1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayk51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNaylJ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <second xmi:id="_rNaylZ1nEeKpItXg-ZWbFg" name="Test(Size==0).second" incoming="_rNayoJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaylp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayl51nEeKpItXg-ZWbFg" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_rNaymJ1nEeKpItXg-ZWbFg" name="InitialNode" outgoing="_rNayoZ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_rNaymZ1nEeKpItXg-ZWbFg" name="Decision(Test(Monitor$initializationFlag$1))" outgoing="_rNayo51nEeKpItXg-ZWbFg" incoming="_rNayoZ1nEeKpItXg-ZWbFg _rNayop1nEeKpItXg-ZWbFg" decisionInputFlow="_rNayop1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaymp1nEeKpItXg-ZWbFg" source="_rNayc51nEeKpItXg-ZWbFg" target="_rNaydp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaym51nEeKpItXg-ZWbFg" source="_rNaydp1nEeKpItXg-ZWbFg" target="_rNayeJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNaynJ1nEeKpItXg-ZWbFg" source="_rNayd51nEeKpItXg-ZWbFg" target="_rNaycZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaynZ1nEeKpItXg-ZWbFg" source="_rNaydp1nEeKpItXg-ZWbFg" target="_rNayfJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNaynp1nEeKpItXg-ZWbFg" source="_rNayf51nEeKpItXg-ZWbFg" target="_rNayg51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNayn51nEeKpItXg-ZWbFg" source="_rNayhp1nEeKpItXg-ZWbFg" target="_rNayj51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNayoJ1nEeKpItXg-ZWbFg" source="_rNayip1nEeKpItXg-ZWbFg" target="_rNaylZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNayoZ1nEeKpItXg-ZWbFg" source="_rNaymJ1nEeKpItXg-ZWbFg" target="_rNaymZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNayop1nEeKpItXg-ZWbFg" source="_rNaykp1nEeKpItXg-ZWbFg" target="_rNaymZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNayo51nEeKpItXg-ZWbFg" source="_rNaymZ1nEeKpItXg-ZWbFg" target="_rNayd51nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNaypJ1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNayb51nEeKpItXg-ZWbFg" name="Return" incoming="_rNaybp1nEeKpItXg-ZWbFg" parameter="_rNaya51nEeKpItXg-ZWbFg"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNaypZ1nEeKpItXg-ZWbFg" name="destroy$method$1" specification="_rNbZZJ1nEeKpItXg-ZWbFg" group="_rNaypp1nEeKpItXg-ZWbFg" node="_rNaypp1nEeKpItXg-ZWbFg">
          <structuredNode xmi:id="_rNaypp1nEeKpItXg-ZWbFg" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_rNayp51nEeKpItXg-ZWbFg" name="Monitor$initialization$1" specification="_rNbZWp1nEeKpItXg-ZWbFg" group="_rNayqJ1nEeKpItXg-ZWbFg" node="_rNayqJ1nEeKpItXg-ZWbFg">
          <structuredNode xmi:id="_rNayqJ1nEeKpItXg-ZWbFg" name="Body(Monitor$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_rNayqZ1nEeKpItXg-ZWbFg" name="ReadSelf">
              <result xmi:id="_rNayqp1nEeKpItXg-ZWbFg" name="ReadSelf.result" outgoing="_rNbZUJ1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayq51nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayrJ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_rNayrZ1nEeKpItXg-ZWbFg" name="Fork(ReadSelf.result)" outgoing="_rNbZUZ1nEeKpItXg-ZWbFg _rNbZUp1nEeKpItXg-ZWbFg" incoming="_rNbZUJ1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNayrp1nEeKpItXg-ZWbFg" name="Initialization" incoming="_rNbZWJ1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNayr51nEeKpItXg-ZWbFg" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNaysJ1nEeKpItXg-ZWbFg" name="Value(true)">
                  <result xmi:id="_rNaysZ1nEeKpItXg-ZWbFg" name="Value(true).result" outgoing="_rNayv51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaysp1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNays51nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_rNaytJ1nEeKpItXg-ZWbFg" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_rNaytZ1nEeKpItXg-ZWbFg" name="Write(Monitor$initializationFlag$1)" structuralFeature="_rNayXZ1nEeKpItXg-ZWbFg" isReplaceAll="true">
                  <object xmi:id="_rNaytp1nEeKpItXg-ZWbFg" name="Write(Monitor$initializationFlag$1).object" incoming="_rNbZUZ1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayt51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayuJ1nEeKpItXg-ZWbFg" value="1"/>
                  </object>
                  <result xmi:id="_rNayuZ1nEeKpItXg-ZWbFg" name="Write(Monitor$initializationFlag$1).result" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayup1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayu51nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:id="_rNayvJ1nEeKpItXg-ZWbFg" name="Write(Monitor$initializationFlag$1).value" incoming="_rNayv51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayvZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayvp1nEeKpItXg-ZWbFg" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNayv51nEeKpItXg-ZWbFg" source="_rNaysZ1nEeKpItXg-ZWbFg" target="_rNayvJ1nEeKpItXg-ZWbFg"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_rNaywJ1nEeKpItXg-ZWbFg" name="Read(Monitor$initializationFlag$1)" structuralFeature="_rNayXZ1nEeKpItXg-ZWbFg">
              <object xmi:id="_rNaywZ1nEeKpItXg-ZWbFg" name="Read(Monitor$initializationFlag$1).object" incoming="_rNbZUp1nEeKpItXg-ZWbFg" type="_rNayXJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNaywp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayw51nEeKpItXg-ZWbFg" value="1"/>
              </object>
              <result xmi:id="_rNayxJ1nEeKpItXg-ZWbFg" name="Read(Monitor$initializationFlag$1).result" outgoing="_rNbZU51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayxZ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayxp1nEeKpItXg-ZWbFg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNayx51nEeKpItXg-ZWbFg" name="Call(ListSize)">
              <argument xmi:id="_rNayyJ1nEeKpItXg-ZWbFg" name="Call(ListSize).argument(list)" incoming="_rNbZU51nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayyZ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayyp1nEeKpItXg-ZWbFg" value="*"/>
              </argument>
              <result xmi:id="_rNayy51nEeKpItXg-ZWbFg" name="Call(ListSize).result(result)" outgoing="_rNbZVJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNayzJ1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNayzZ1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNayzp1nEeKpItXg-ZWbFg" name="Value(0)">
              <result xmi:id="_rNayz51nEeKpItXg-ZWbFg" name="Value(0).result" outgoing="_rNbZVZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNay0J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNay0Z1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_rNay0p1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_rNay051nEeKpItXg-ZWbFg" name="Test(Size==0)">
              <first xmi:id="_rNay1J1nEeKpItXg-ZWbFg" name="Test(Size==0).first" incoming="_rNbZVJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNay1Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNay1p1nEeKpItXg-ZWbFg" value="1"/>
              </first>
              <result xmi:id="_rNay151nEeKpItXg-ZWbFg" name="Test(Size==0).result" outgoing="_rNbZV51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNay2J1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNay2Z1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <second xmi:id="_rNay2p1nEeKpItXg-ZWbFg" name="Test(Size==0).second" incoming="_rNbZVZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNay251nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNay3J1nEeKpItXg-ZWbFg" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_rNay3Z1nEeKpItXg-ZWbFg" name="InitialNode" outgoing="_rNbZVp1nEeKpItXg-ZWbFg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_rNay3p1nEeKpItXg-ZWbFg" name="Decision(Test(Monitor$initializationFlag$1))" outgoing="_rNbZWJ1nEeKpItXg-ZWbFg" incoming="_rNbZVp1nEeKpItXg-ZWbFg _rNbZV51nEeKpItXg-ZWbFg" decisionInputFlow="_rNbZV51nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZUJ1nEeKpItXg-ZWbFg" source="_rNayqp1nEeKpItXg-ZWbFg" target="_rNayrZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZUZ1nEeKpItXg-ZWbFg" source="_rNayrZ1nEeKpItXg-ZWbFg" target="_rNaytp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZUp1nEeKpItXg-ZWbFg" source="_rNayrZ1nEeKpItXg-ZWbFg" target="_rNaywZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZU51nEeKpItXg-ZWbFg" source="_rNayxJ1nEeKpItXg-ZWbFg" target="_rNayyJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZVJ1nEeKpItXg-ZWbFg" source="_rNayy51nEeKpItXg-ZWbFg" target="_rNay1J1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZVZ1nEeKpItXg-ZWbFg" source="_rNayz51nEeKpItXg-ZWbFg" target="_rNay2p1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNbZVp1nEeKpItXg-ZWbFg" source="_rNay3Z1nEeKpItXg-ZWbFg" target="_rNay3p1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZV51nEeKpItXg-ZWbFg" source="_rNay151nEeKpItXg-ZWbFg" target="_rNay3p1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNbZWJ1nEeKpItXg-ZWbFg" source="_rNay3p1nEeKpItXg-ZWbFg" target="_rNayrp1nEeKpItXg-ZWbFg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNbZWZ1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_rNbZWp1nEeKpItXg-ZWbFg" name="Monitor$initialization$1" visibility="protected" method="_rNayp51nEeKpItXg-ZWbFg"/>
        <ownedOperation xmi:id="_rNbZW51nEeKpItXg-ZWbFg" name="raiseAlarm" visibility="public" method="_rNayYJ1nEeKpItXg-ZWbFg">
          <ownedParameter xmi:id="_rNbZXJ1nEeKpItXg-ZWbFg" name="sensorId" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZXZ1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZXp1nEeKpItXg-ZWbFg" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rNbZX51nEeKpItXg-ZWbFg" name="cleanUp" visibility="public" method="_rNayaJ1nEeKpItXg-ZWbFg"/>
        <ownedOperation xmi:id="_rNbZYJ1nEeKpItXg-ZWbFg" name="Monitor" visibility="package" method="_rNayap1nEeKpItXg-ZWbFg">
          <ownedParameter xmi:id="_rNbZYZ1nEeKpItXg-ZWbFg" name="" visibility="package" type="_rNayXJ1nEeKpItXg-ZWbFg" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZYp1nEeKpItXg-ZWbFg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZY51nEeKpItXg-ZWbFg" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rNbZZJ1nEeKpItXg-ZWbFg" name="destroy" visibility="package" method="_rNaypZ1nEeKpItXg-ZWbFg"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_rNbZZZ1nEeKpItXg-ZWbFg" name="Condition" visibility="package">
        <ownedLiteral xmi:id="_rNbZZp1nEeKpItXg-ZWbFg" name="normal" visibility="package"/>
        <ownedLiteral xmi:id="_rNbZZ51nEeKpItXg-ZWbFg" name="alert" visibility="package"/>
        <ownedLiteral xmi:id="_rNbZaJ1nEeKpItXg-ZWbFg" name="critical" visibility="package"/>
        <ownedLiteral xmi:id="_rNbZaZ1nEeKpItXg-ZWbFg" name="error" visibility="package"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_rNbZap1nEeKpItXg-ZWbFg" name="AssertEqual" group="_rNbZiJ1nEeKpItXg-ZWbFg" node="_rNbZgp1nEeKpItXg-ZWbFg _rNbZg51nEeKpItXg-ZWbFg _rNbZhJ1nEeKpItXg-ZWbFg _rNbZhZ1nEeKpItXg-ZWbFg _rNbZhp1nEeKpItXg-ZWbFg _rNbZh51nEeKpItXg-ZWbFg _rNbZiJ1nEeKpItXg-ZWbFg">
      <packageImport xmi:id="_rNbZa51nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_rNbZbJ1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_rNbZbZ1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_rNbZbp1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_rNbZb51nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_rNbZcJ1nEeKpItXg-ZWbFg" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZcZ1nEeKpItXg-ZWbFg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZcp1nEeKpItXg-ZWbFg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_rNbZc51nEeKpItXg-ZWbFg" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZdJ1nEeKpItXg-ZWbFg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZdZ1nEeKpItXg-ZWbFg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_rNbZdp1nEeKpItXg-ZWbFg" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZd51nEeKpItXg-ZWbFg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZeJ1nEeKpItXg-ZWbFg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZeZ1nEeKpItXg-ZWbFg" source="_rNbZgp1nEeKpItXg-ZWbFg" target="_rNbZg51nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZep1nEeKpItXg-ZWbFg" source="_rNbZhJ1nEeKpItXg-ZWbFg" target="_rNbZhZ1nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZe51nEeKpItXg-ZWbFg" source="_rNbZhp1nEeKpItXg-ZWbFg" target="_rNbZh51nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZfJ1nEeKpItXg-ZWbFg" source="_rNbZhZ1nEeKpItXg-ZWbFg" target="_rNbZlJ1nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZfZ1nEeKpItXg-ZWbFg" source="_rNbZh51nEeKpItXg-ZWbFg" target="_rNbZnJ1nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZfp1nEeKpItXg-ZWbFg" source="_rNbZg51nEeKpItXg-ZWbFg" target="_rNbZzp1nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZf51nEeKpItXg-ZWbFg" source="_rNbZh51nEeKpItXg-ZWbFg" target="_rNbZ751nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZgJ1nEeKpItXg-ZWbFg" source="_rNbZh51nEeKpItXg-ZWbFg" target="_rNcAaZ1nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZgZ1nEeKpItXg-ZWbFg" source="_rNbZh51nEeKpItXg-ZWbFg" target="_rNcAjZ1nEeKpItXg-ZWbFg"/>
      <structuredNode xmi:id="_rNbZiJ1nEeKpItXg-ZWbFg" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_rNbZiZ1nEeKpItXg-ZWbFg" name="IfStatement@3c2c56c7">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_rNbZip1nEeKpItXg-ZWbFg" name="Test(==)" incoming="_rNcAvZ1nEeKpItXg-ZWbFg">
            <first xmi:id="_rNbZi51nEeKpItXg-ZWbFg" name="Test(==).first" incoming="_rNcAtJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZjJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZjZ1nEeKpItXg-ZWbFg" value="1"/>
            </first>
            <result xmi:id="_rNbZjp1nEeKpItXg-ZWbFg" name="Test(==).result" outgoing="_rNcAx51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZj51nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZkJ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <second xmi:id="_rNbZkZ1nEeKpItXg-ZWbFg" name="Test(==).second" incoming="_rNcAtp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZkp1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZk51nEeKpItXg-ZWbFg" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNbZlJ1nEeKpItXg-ZWbFg" name="Fork(Fork(value1))" outgoing="_rNcAtJ1nEeKpItXg-ZWbFg _rNcAtZ1nEeKpItXg-ZWbFg" incoming="_rNbZfJ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZlZ1nEeKpItXg-ZWbFg" name="Call(NotEmpty)">
            <argument xmi:id="_rNbZlp1nEeKpItXg-ZWbFg" name="Call(NotEmpty).argument(seq)" incoming="_rNcAtZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZl51nEeKpItXg-ZWbFg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZmJ1nEeKpItXg-ZWbFg" value="*"/>
            </argument>
            <result xmi:id="_rNbZmZ1nEeKpItXg-ZWbFg" name="Call(NotEmpty).result()" outgoing="_rNcAuJ1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZmp1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZm51nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_rNbZnJ1nEeKpItXg-ZWbFg" name="Fork(Fork(value2))" outgoing="_rNcAtp1nEeKpItXg-ZWbFg _rNcAt51nEeKpItXg-ZWbFg" incoming="_rNbZfZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZnZ1nEeKpItXg-ZWbFg" name="Call(NotEmpty)">
            <argument xmi:id="_rNbZnp1nEeKpItXg-ZWbFg" name="Call(NotEmpty).argument(seq)" incoming="_rNcAt51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZn51nEeKpItXg-ZWbFg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZoJ1nEeKpItXg-ZWbFg" value="*"/>
            </argument>
            <result xmi:id="_rNbZoZ1nEeKpItXg-ZWbFg" name="Call(NotEmpty).result()" outgoing="_rNcAuZ1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZop1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZo51nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_rNbZpJ1nEeKpItXg-ZWbFg" name="Initial(Test(==))" outgoing="_rNcAwZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:ForkNode" xmi:id="_rNbZpZ1nEeKpItXg-ZWbFg" name="Fork(Call(NotEmpty).result())" outgoing="_rNcAup1nEeKpItXg-ZWbFg _rNcAwp1nEeKpItXg-ZWbFg" incoming="_rNcAuJ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:ForkNode" xmi:id="_rNbZpp1nEeKpItXg-ZWbFg" name="Fork(Call(NotEmpty).result())" outgoing="_rNcAu51nEeKpItXg-ZWbFg _rNcAvJ1nEeKpItXg-ZWbFg" incoming="_rNcAuZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZp51nEeKpItXg-ZWbFg" name="Call(Not)" incoming="_rNcAv51nEeKpItXg-ZWbFg">
            <argument xmi:id="_rNbZqJ1nEeKpItXg-ZWbFg" name="Call(Not).argument(x)" incoming="_rNcAup1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZqZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZqp1nEeKpItXg-ZWbFg" value="1"/>
            </argument>
            <result xmi:id="_rNbZq51nEeKpItXg-ZWbFg" name="Call(Not).result(result)" outgoing="_rNcAyJ1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZrJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZrZ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZrp1nEeKpItXg-ZWbFg" name="Call(Not)" incoming="_rNcAxZ1nEeKpItXg-ZWbFg">
            <argument xmi:id="_rNbZr51nEeKpItXg-ZWbFg" name="Call(Not).argument(x)" incoming="_rNcAu51nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZsJ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZsZ1nEeKpItXg-ZWbFg" value="1"/>
            </argument>
            <result xmi:id="_rNbZsp1nEeKpItXg-ZWbFg" name="Call(Not).result(result)" outgoing="_rNcAyZ1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZs51nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZtJ1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_rNbZtZ1nEeKpItXg-ZWbFg" name="Decision(Call(NotEmpty).result())" outgoing="_rNcAvZ1nEeKpItXg-ZWbFg _rNcAv51nEeKpItXg-ZWbFg" incoming="_rNcAvJ1nEeKpItXg-ZWbFg _rNcAw51nEeKpItXg-ZWbFg" decisionInputFlow="_rNcAvJ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_rNbZtp1nEeKpItXg-ZWbFg" name="Decision(Call(NotEmpty).result())" outgoing="_rNcAw51nEeKpItXg-ZWbFg _rNcAxZ1nEeKpItXg-ZWbFg" incoming="_rNcAwZ1nEeKpItXg-ZWbFg _rNcAwp1nEeKpItXg-ZWbFg" decisionInputFlow="_rNcAwp1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:MergeNode" xmi:id="_rNbZt51nEeKpItXg-ZWbFg" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_rNcAyp1nEeKpItXg-ZWbFg" incoming="_rNcAx51nEeKpItXg-ZWbFg _rNcAyJ1nEeKpItXg-ZWbFg _rNcAyZ1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZuJ1nEeKpItXg-ZWbFg" name="Call(Not)">
            <argument xmi:id="_rNbZuZ1nEeKpItXg-ZWbFg" name="Call(Not).argument(x)" incoming="_rNcAyp1nEeKpItXg-ZWbFg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZup1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZu51nEeKpItXg-ZWbFg" value="1"/>
            </argument>
            <result xmi:id="_rNbZvJ1nEeKpItXg-ZWbFg" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZvZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZvp1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNbZv51nEeKpItXg-ZWbFg" name="ExpressionStatement@3a05d3a5" outgoing="_rNcAy51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZwJ1nEeKpItXg-ZWbFg" name="Call(Write)" incoming="_rNbZ551nEeKpItXg-ZWbFg" behavior="_rNcAz51nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNbZwZ1nEeKpItXg-ZWbFg" name="Call(Write).argument(value)" incoming="_rNbZ5p1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZwp1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZw51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNbZxJ1nEeKpItXg-ZWbFg" name="Tuple@6a645797" outgoing="_rNbZ551nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNbZxZ1nEeKpItXg-ZWbFg" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_rNbZxp1nEeKpItXg-ZWbFg" name="Value(&quot;FAILED: &quot;).result" outgoing="_rNbZ451nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZx51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZyJ1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNbZyZ1nEeKpItXg-ZWbFg" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZyp1nEeKpItXg-ZWbFg" name="Call(Concat)">
                <argument xmi:id="_rNbZy51nEeKpItXg-ZWbFg" name="Call(Concat).argument(x)" incoming="_rNbZ451nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZzJ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZzZ1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNbZzp1nEeKpItXg-ZWbFg" name="Call(Concat).argument(y)" incoming="_rNbZfp1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZz51nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ0J1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNbZ0Z1nEeKpItXg-ZWbFg" name="Call(Concat).result(result)" outgoing="_rNbZ5J1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ0p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ051nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNbZ1J1nEeKpItXg-ZWbFg" name="Value(&quot;==&quot;)">
                <result xmi:id="_rNbZ1Z1nEeKpItXg-ZWbFg" name="Value(&quot;==&quot;).result" outgoing="_rNbZ5Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ1p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ151nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNbZ2J1nEeKpItXg-ZWbFg" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZ2Z1nEeKpItXg-ZWbFg" name="Call(Concat)">
                <argument xmi:id="_rNbZ2p1nEeKpItXg-ZWbFg" name="Call(Concat).argument(x)" incoming="_rNbZ5J1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ251nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ3J1nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <argument xmi:id="_rNbZ3Z1nEeKpItXg-ZWbFg" name="Call(Concat).argument(y)" incoming="_rNbZ5Z1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ3p1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ351nEeKpItXg-ZWbFg" value="1"/>
                </argument>
                <result xmi:id="_rNbZ4J1nEeKpItXg-ZWbFg" name="Call(Concat).result(result)" outgoing="_rNbZ5p1nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ4Z1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ4p1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZ451nEeKpItXg-ZWbFg" source="_rNbZxp1nEeKpItXg-ZWbFg" target="_rNbZy51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZ5J1nEeKpItXg-ZWbFg" source="_rNbZ0Z1nEeKpItXg-ZWbFg" target="_rNbZ2p1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZ5Z1nEeKpItXg-ZWbFg" source="_rNbZ1Z1nEeKpItXg-ZWbFg" target="_rNbZ3Z1nEeKpItXg-ZWbFg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNbZ5p1nEeKpItXg-ZWbFg" source="_rNbZ4J1nEeKpItXg-ZWbFg" target="_rNbZwZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNbZ551nEeKpItXg-ZWbFg" source="_rNbZxJ1nEeKpItXg-ZWbFg" target="_rNbZwJ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNbZ6J1nEeKpItXg-ZWbFg" name="ExpressionStatement@6a3f79a7" outgoing="_rNcAzJ1nEeKpItXg-ZWbFg" incoming="_rNcAy51nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNbZ6Z1nEeKpItXg-ZWbFg" name="Call(Write)" incoming="_rNcAnp1nEeKpItXg-ZWbFg" behavior="_rNcAz51nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNbZ6p1nEeKpItXg-ZWbFg" name="Call(Write).argument(value)" incoming="_rNcAnZ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ651nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ7J1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNbZ7Z1nEeKpItXg-ZWbFg" name="Tuple@6259802f" outgoing="_rNcAnp1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_rNbZ7p1nEeKpItXg-ZWbFg" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_rNbZ751nEeKpItXg-ZWbFg" name="ReadIsClassifiedObject(String).object" incoming="_rNbZf51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ8J1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ8Z1nEeKpItXg-ZWbFg" value="1"/>
                </object>
                <result xmi:id="_rNbZ8p1nEeKpItXg-ZWbFg" name="ReadIsClassifiedObject(String).result" outgoing="_rNcAlp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ851nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ9J1nEeKpItXg-ZWbFg" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNbZ9Z1nEeKpItXg-ZWbFg" name="ConditionalTestExpression@69d2daf2.operand2" incoming="_rNcAl51nEeKpItXg-ZWbFg">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNbZ9p1nEeKpItXg-ZWbFg" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_rNbZ951nEeKpItXg-ZWbFg" name="Value(&quot;&quot;&quot;).result" outgoing="_rNcAh51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ-J1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbZ-Z1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_rNbZ-p1nEeKpItXg-ZWbFg" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_rNbZ-51nEeKpItXg-ZWbFg" name="CastExpression@f5fc93" mode="parallel" outputElement="_rNcAap1nEeKpItXg-ZWbFg" inputElement="_rNcAaZ1nEeKpItXg-ZWbFg">
                  <node xmi:type="uml:MergeNode" xmi:id="_rNbZ_J1nEeKpItXg-ZWbFg" name="Merge(CastExpression@f5fc93.operand)" outgoing="_rNcAaJ1nEeKpItXg-ZWbFg" incoming="_rNcAZZ1nEeKpItXg-ZWbFg"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_rNbZ_Z1nEeKpItXg-ZWbFg" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_rNbZ_p1nEeKpItXg-ZWbFg" name="ReadIsClassifiedObject(String).object" incoming="_rNcAYp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbZ_51nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbaAJ1nEeKpItXg-ZWbFg" value="1"/>
                    </object>
                    <result xmi:id="_rNbaAZ1nEeKpItXg-ZWbFg" name="ReadIsClassifiedObject(String).result" outgoing="_rNcAZJ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNbaAp1nEeKpItXg-ZWbFg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNbaA51nEeKpItXg-ZWbFg" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_rNcAYJ1nEeKpItXg-ZWbFg" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_rNcAYp1nEeKpItXg-ZWbFg _rNcAY51nEeKpItXg-ZWbFg" incoming="_rNcAZ51nEeKpItXg-ZWbFg"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_rNcAYZ1nEeKpItXg-ZWbFg" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_rNcAZZ1nEeKpItXg-ZWbFg" incoming="_rNcAY51nEeKpItXg-ZWbFg _rNcAZJ1nEeKpItXg-ZWbFg" decisionInputFlow="_rNcAZJ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAYp1nEeKpItXg-ZWbFg" source="_rNcAYJ1nEeKpItXg-ZWbFg" target="_rNbZ_p1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAY51nEeKpItXg-ZWbFg" source="_rNcAYJ1nEeKpItXg-ZWbFg" target="_rNcAYZ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAZJ1nEeKpItXg-ZWbFg" source="_rNbaAZ1nEeKpItXg-ZWbFg" target="_rNcAYZ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAZZ1nEeKpItXg-ZWbFg" source="_rNcAYZ1nEeKpItXg-ZWbFg" target="_rNbZ_J1nEeKpItXg-ZWbFg">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAZp1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAZ51nEeKpItXg-ZWbFg" source="_rNcAaZ1nEeKpItXg-ZWbFg" target="_rNcAYJ1nEeKpItXg-ZWbFg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAaJ1nEeKpItXg-ZWbFg" source="_rNbZ_J1nEeKpItXg-ZWbFg" target="_rNcAap1nEeKpItXg-ZWbFg"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_rNcAaZ1nEeKpItXg-ZWbFg" name="CastExpression@f5fc93.inputElement" outgoing="_rNcAZ51nEeKpItXg-ZWbFg" incoming="_rNbZgJ1nEeKpItXg-ZWbFg" regionAsInput="_rNbZ-51nEeKpItXg-ZWbFg"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_rNcAap1nEeKpItXg-ZWbFg" name="CastExpression@f5fc93.outputElement" outgoing="_rNcAiJ1nEeKpItXg-ZWbFg" incoming="_rNcAaJ1nEeKpItXg-ZWbFg" regionAsOutput="_rNbZ-51nEeKpItXg-ZWbFg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNcAa51nEeKpItXg-ZWbFg" name="Call(Concat)">
                  <argument xmi:id="_rNcAbJ1nEeKpItXg-ZWbFg" name="Call(Concat).argument(x)" incoming="_rNcAh51nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAbZ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAbp1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <argument xmi:id="_rNcAb51nEeKpItXg-ZWbFg" name="Call(Concat).argument(y)" incoming="_rNcAiJ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAcJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAcZ1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <result xmi:id="_rNcAcp1nEeKpItXg-ZWbFg" name="Call(Concat).result(result)" outgoing="_rNcAiZ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAc51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAdJ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNcAdZ1nEeKpItXg-ZWbFg" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_rNcAdp1nEeKpItXg-ZWbFg" name="Value(&quot;&quot;&quot;).result" outgoing="_rNcAip1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAd51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAeJ1nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_rNcAeZ1nEeKpItXg-ZWbFg" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNcAep1nEeKpItXg-ZWbFg" name="Call(Concat)">
                  <argument xmi:id="_rNcAe51nEeKpItXg-ZWbFg" name="Call(Concat).argument(x)" incoming="_rNcAiZ1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAfJ1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAfZ1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <argument xmi:id="_rNcAfp1nEeKpItXg-ZWbFg" name="Call(Concat).argument(y)" incoming="_rNcAip1nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAf51nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAgJ1nEeKpItXg-ZWbFg" value="1"/>
                  </argument>
                  <result xmi:id="_rNcAgZ1nEeKpItXg-ZWbFg" name="Call(Concat).result(result)" outgoing="_rNcAi51nEeKpItXg-ZWbFg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAgp1nEeKpItXg-ZWbFg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAg51nEeKpItXg-ZWbFg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <structuredNodeOutput xmi:id="_rNcAhJ1nEeKpItXg-ZWbFg" name="ConditionalTestExpression@69d2daf2.operand2.result" outgoing="_rNcAm51nEeKpItXg-ZWbFg" incoming="_rNcAi51nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAhZ1nEeKpItXg-ZWbFg"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAhp1nEeKpItXg-ZWbFg" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAh51nEeKpItXg-ZWbFg" source="_rNbZ951nEeKpItXg-ZWbFg" target="_rNcAbJ1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAiJ1nEeKpItXg-ZWbFg" source="_rNcAap1nEeKpItXg-ZWbFg" target="_rNcAb51nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAiZ1nEeKpItXg-ZWbFg" source="_rNcAcp1nEeKpItXg-ZWbFg" target="_rNcAe51nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAip1nEeKpItXg-ZWbFg" source="_rNcAdp1nEeKpItXg-ZWbFg" target="_rNcAfp1nEeKpItXg-ZWbFg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAi51nEeKpItXg-ZWbFg" source="_rNcAgZ1nEeKpItXg-ZWbFg" target="_rNcAhJ1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNcAjJ1nEeKpItXg-ZWbFg" name="ConditionalTestExpression@69d2daf2.operand3" incoming="_rNcAmZ1nEeKpItXg-ZWbFg">
                <node xmi:type="uml:MergeNode" xmi:id="_rNcAjZ1nEeKpItXg-ZWbFg" name="Merge(Fork(value2))" outgoing="_rNcAkZ1nEeKpItXg-ZWbFg" incoming="_rNbZgZ1nEeKpItXg-ZWbFg"/>
                <structuredNodeOutput xmi:id="_rNcAjp1nEeKpItXg-ZWbFg" name="ConditionalTestExpression@69d2daf2.operand3.result" outgoing="_rNcAnJ1nEeKpItXg-ZWbFg" incoming="_rNcAkZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAj51nEeKpItXg-ZWbFg"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAkJ1nEeKpItXg-ZWbFg" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAkZ1nEeKpItXg-ZWbFg" source="_rNcAjZ1nEeKpItXg-ZWbFg" target="_rNcAjp1nEeKpItXg-ZWbFg"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_rNcAkp1nEeKpItXg-ZWbFg" name="Initial(ConditionalTestExpression@69d2daf2)" outgoing="_rNcAlZ1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_rNcAk51nEeKpItXg-ZWbFg" name="Decision(ConditionalTestExpression@69d2daf2)" outgoing="_rNcAl51nEeKpItXg-ZWbFg _rNcAmZ1nEeKpItXg-ZWbFg" incoming="_rNcAlZ1nEeKpItXg-ZWbFg _rNcAlp1nEeKpItXg-ZWbFg" decisionInputFlow="_rNcAlp1nEeKpItXg-ZWbFg"/>
              <node xmi:type="uml:MergeNode" xmi:id="_rNcAlJ1nEeKpItXg-ZWbFg" name="Merge(ConditionalTestExpression@69d2daf2.result)" outgoing="_rNcAnZ1nEeKpItXg-ZWbFg" incoming="_rNcAm51nEeKpItXg-ZWbFg _rNcAnJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAlZ1nEeKpItXg-ZWbFg" source="_rNcAkp1nEeKpItXg-ZWbFg" target="_rNcAk51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAlp1nEeKpItXg-ZWbFg" source="_rNbZ8p1nEeKpItXg-ZWbFg" target="_rNcAk51nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAl51nEeKpItXg-ZWbFg" source="_rNcAk51nEeKpItXg-ZWbFg" target="_rNbZ9Z1nEeKpItXg-ZWbFg">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAmJ1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAmZ1nEeKpItXg-ZWbFg" source="_rNcAk51nEeKpItXg-ZWbFg" target="_rNcAjJ1nEeKpItXg-ZWbFg">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAmp1nEeKpItXg-ZWbFg" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAm51nEeKpItXg-ZWbFg" source="_rNcAhJ1nEeKpItXg-ZWbFg" target="_rNcAlJ1nEeKpItXg-ZWbFg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAnJ1nEeKpItXg-ZWbFg" source="_rNcAjp1nEeKpItXg-ZWbFg" target="_rNcAlJ1nEeKpItXg-ZWbFg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAnZ1nEeKpItXg-ZWbFg" source="_rNcAlJ1nEeKpItXg-ZWbFg" target="_rNbZ6p1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAnp1nEeKpItXg-ZWbFg" source="_rNbZ7Z1nEeKpItXg-ZWbFg" target="_rNbZ6Z1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNcAn51nEeKpItXg-ZWbFg" name="ExpressionStatement@e3b15ff" incoming="_rNcAzJ1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNcAoJ1nEeKpItXg-ZWbFg" name="Call(WriteLine)" incoming="_rNcArp1nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNcAoZ1nEeKpItXg-ZWbFg" name="Call(WriteLine).argument(value)" incoming="_rNcArZ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAop1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAo51nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNcApJ1nEeKpItXg-ZWbFg" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcApZ1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcApp1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNcAp51nEeKpItXg-ZWbFg" name="Tuple@408398f2" outgoing="_rNcArp1nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNcAqJ1nEeKpItXg-ZWbFg" name="Value(&quot;&quot;)">
                <result xmi:id="_rNcAqZ1nEeKpItXg-ZWbFg" name="Value(&quot;&quot;).result" outgoing="_rNcArZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAqp1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAq51nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_rNcArJ1nEeKpItXg-ZWbFg" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcArZ1nEeKpItXg-ZWbFg" source="_rNcAqZ1nEeKpItXg-ZWbFg" target="_rNcAoZ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNcArp1nEeKpItXg-ZWbFg" source="_rNcAp51nEeKpItXg-ZWbFg" target="_rNcAoJ1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNcAr51nEeKpItXg-ZWbFg" name="Value(true)">
            <result xmi:id="_rNcAsJ1nEeKpItXg-ZWbFg" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcAsZ1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcAsp1nEeKpItXg-ZWbFg" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_rNcAs51nEeKpItXg-ZWbFg" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAtJ1nEeKpItXg-ZWbFg" source="_rNbZlJ1nEeKpItXg-ZWbFg" target="_rNbZi51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAtZ1nEeKpItXg-ZWbFg" source="_rNbZlJ1nEeKpItXg-ZWbFg" target="_rNbZlp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAtp1nEeKpItXg-ZWbFg" source="_rNbZnJ1nEeKpItXg-ZWbFg" target="_rNbZkZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAt51nEeKpItXg-ZWbFg" source="_rNbZnJ1nEeKpItXg-ZWbFg" target="_rNbZnp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAuJ1nEeKpItXg-ZWbFg" source="_rNbZmZ1nEeKpItXg-ZWbFg" target="_rNbZpZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAuZ1nEeKpItXg-ZWbFg" source="_rNbZoZ1nEeKpItXg-ZWbFg" target="_rNbZpp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAup1nEeKpItXg-ZWbFg" source="_rNbZpZ1nEeKpItXg-ZWbFg" target="_rNbZqJ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAu51nEeKpItXg-ZWbFg" source="_rNbZpp1nEeKpItXg-ZWbFg" target="_rNbZr51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAvJ1nEeKpItXg-ZWbFg" source="_rNbZpp1nEeKpItXg-ZWbFg" target="_rNbZtZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAvZ1nEeKpItXg-ZWbFg" source="_rNbZtZ1nEeKpItXg-ZWbFg" target="_rNbZip1nEeKpItXg-ZWbFg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAvp1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAv51nEeKpItXg-ZWbFg" source="_rNbZtZ1nEeKpItXg-ZWbFg" target="_rNbZp51nEeKpItXg-ZWbFg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAwJ1nEeKpItXg-ZWbFg" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAwZ1nEeKpItXg-ZWbFg" source="_rNbZpJ1nEeKpItXg-ZWbFg" target="_rNbZtp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAwp1nEeKpItXg-ZWbFg" source="_rNbZpZ1nEeKpItXg-ZWbFg" target="_rNbZtp1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAw51nEeKpItXg-ZWbFg" source="_rNbZtp1nEeKpItXg-ZWbFg" target="_rNbZtZ1nEeKpItXg-ZWbFg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAxJ1nEeKpItXg-ZWbFg" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAxZ1nEeKpItXg-ZWbFg" source="_rNbZtp1nEeKpItXg-ZWbFg" target="_rNbZrp1nEeKpItXg-ZWbFg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_rNcAxp1nEeKpItXg-ZWbFg" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAx51nEeKpItXg-ZWbFg" source="_rNbZjp1nEeKpItXg-ZWbFg" target="_rNbZt51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAyJ1nEeKpItXg-ZWbFg" source="_rNbZq51nEeKpItXg-ZWbFg" target="_rNbZt51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAyZ1nEeKpItXg-ZWbFg" source="_rNbZsp1nEeKpItXg-ZWbFg" target="_rNbZt51nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcAyp1nEeKpItXg-ZWbFg" source="_rNbZt51nEeKpItXg-ZWbFg" target="_rNbZuZ1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAy51nEeKpItXg-ZWbFg" source="_rNbZv51nEeKpItXg-ZWbFg" target="_rNbZ6J1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcAzJ1nEeKpItXg-ZWbFg" source="_rNbZ6J1nEeKpItXg-ZWbFg" target="_rNcAn51nEeKpItXg-ZWbFg"/>
          <clause xmi:id="_rNcAzZ1nEeKpItXg-ZWbFg" body="_rNbZv51nEeKpItXg-ZWbFg _rNbZ6J1nEeKpItXg-ZWbFg _rNcAn51nEeKpItXg-ZWbFg" decider="_rNbZvJ1nEeKpItXg-ZWbFg" successorClause="_rNcAzp1nEeKpItXg-ZWbFg" test="_rNbZip1nEeKpItXg-ZWbFg _rNbZlZ1nEeKpItXg-ZWbFg _rNbZnZ1nEeKpItXg-ZWbFg _rNbZp51nEeKpItXg-ZWbFg _rNbZrp1nEeKpItXg-ZWbFg _rNbZuJ1nEeKpItXg-ZWbFg"/>
          <clause xmi:id="_rNcAzp1nEeKpItXg-ZWbFg" decider="_rNcAsJ1nEeKpItXg-ZWbFg" predecessorClause="_rNcAzZ1nEeKpItXg-ZWbFg" test="_rNcAr51nEeKpItXg-ZWbFg"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNbZgp1nEeKpItXg-ZWbFg" name="Input(label)" outgoing="_rNbZeZ1nEeKpItXg-ZWbFg" parameter="_rNbZcJ1nEeKpItXg-ZWbFg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_rNbZg51nEeKpItXg-ZWbFg" name="Fork(label)" outgoing="_rNbZfp1nEeKpItXg-ZWbFg" incoming="_rNbZeZ1nEeKpItXg-ZWbFg"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNbZhJ1nEeKpItXg-ZWbFg" name="Input(value1)" outgoing="_rNbZep1nEeKpItXg-ZWbFg" parameter="_rNbZc51nEeKpItXg-ZWbFg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_rNbZhZ1nEeKpItXg-ZWbFg" name="Fork(value1)" outgoing="_rNbZfJ1nEeKpItXg-ZWbFg" incoming="_rNbZep1nEeKpItXg-ZWbFg"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNbZhp1nEeKpItXg-ZWbFg" name="Input(value2)" outgoing="_rNbZe51nEeKpItXg-ZWbFg" parameter="_rNbZdp1nEeKpItXg-ZWbFg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_rNbZh51nEeKpItXg-ZWbFg" name="Fork(value2)" outgoing="_rNbZfZ1nEeKpItXg-ZWbFg _rNbZf51nEeKpItXg-ZWbFg _rNbZgJ1nEeKpItXg-ZWbFg _rNbZgZ1nEeKpItXg-ZWbFg" incoming="_rNbZe51nEeKpItXg-ZWbFg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_rNcAz51nEeKpItXg-ZWbFg" name="Write" group="_rNcA3J1nEeKpItXg-ZWbFg" node="_rNcA2p1nEeKpItXg-ZWbFg _rNcA251nEeKpItXg-ZWbFg _rNcA3J1nEeKpItXg-ZWbFg">
      <packageImport xmi:id="_rNcA0J1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_rNcA0Z1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_rNcA0p1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_rNcA051nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_rNcA1J1nEeKpItXg-ZWbFg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_rNcA1Z1nEeKpItXg-ZWbFg" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA1p1nEeKpItXg-ZWbFg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA151nEeKpItXg-ZWbFg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcA2J1nEeKpItXg-ZWbFg" source="_rNcA2p1nEeKpItXg-ZWbFg" target="_rNcA251nEeKpItXg-ZWbFg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcA2Z1nEeKpItXg-ZWbFg" source="_rNcA251nEeKpItXg-ZWbFg" target="_rNcA6Z1nEeKpItXg-ZWbFg"/>
      <structuredNode xmi:id="_rNcA3J1nEeKpItXg-ZWbFg" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNcA3Z1nEeKpItXg-ZWbFg" name="ExpressionStatement@15388988">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_rNcA3p1nEeKpItXg-ZWbFg" name="Collect(Call(write))" incoming="_rNcBCp1nEeKpItXg-ZWbFg" mode="parallel" inputElement="_rNcA7p1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallOperationAction" xmi:id="_rNcA351nEeKpItXg-ZWbFg" name="Call(write)">
              <argument xmi:id="_rNcA4J1nEeKpItXg-ZWbFg" name="Call(write).argument(value)" incoming="_rNcA7J1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA4Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA4p1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNcA451nEeKpItXg-ZWbFg" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA5J1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA5Z1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_rNcA5p1nEeKpItXg-ZWbFg" name="Call(write).target" incoming="_rNcA7Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA551nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA6J1nEeKpItXg-ZWbFg" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_rNcA6Z1nEeKpItXg-ZWbFg" name="Collect(Call(write)).input(Fork(value))" outgoing="_rNcA7J1nEeKpItXg-ZWbFg" incoming="_rNcA2Z1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA6p1nEeKpItXg-ZWbFg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA651nEeKpItXg-ZWbFg" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcA7J1nEeKpItXg-ZWbFg" source="_rNcA6Z1nEeKpItXg-ZWbFg" target="_rNcA4J1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcA7Z1nEeKpItXg-ZWbFg" source="_rNcA7p1nEeKpItXg-ZWbFg" target="_rNcA5p1nEeKpItXg-ZWbFg"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_rNcA7p1nEeKpItXg-ZWbFg" name="Collect(Call(write)).inputElement" outgoing="_rNcA7Z1nEeKpItXg-ZWbFg" incoming="_rNcBCZ1nEeKpItXg-ZWbFg" regionAsInput="_rNcA3p1nEeKpItXg-ZWbFg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNcA751nEeKpItXg-ZWbFg" name="Feature(Call(At).result())" outgoing="_rNcBCp1nEeKpItXg-ZWbFg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_rNcA8J1nEeKpItXg-ZWbFg" name="Call(At)" incoming="_rNcBB51nEeKpItXg-ZWbFg">
              <argument xmi:id="_rNcA8Z1nEeKpItXg-ZWbFg" name="Call(At).argument(seq)" incoming="_rNcBBZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA8p1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA851nEeKpItXg-ZWbFg" value="*"/>
              </argument>
              <argument xmi:id="_rNcA9J1nEeKpItXg-ZWbFg" name="Call(At).argument(index)" incoming="_rNcBCJ1nEeKpItXg-ZWbFg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA9Z1nEeKpItXg-ZWbFg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA9p1nEeKpItXg-ZWbFg" value="1"/>
              </argument>
              <result xmi:id="_rNcA951nEeKpItXg-ZWbFg" name="Call(At).result()" outgoing="_rNcBCZ1nEeKpItXg-ZWbFg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA-J1nEeKpItXg-ZWbFg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA-Z1nEeKpItXg-ZWbFg" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_rNcA-p1nEeKpItXg-ZWbFg" name="Tuple@49bbc13b" outgoing="_rNcBB51nEeKpItXg-ZWbFg">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_rNcA-51nEeKpItXg-ZWbFg" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_rNcA_J1nEeKpItXg-ZWbFg" name="ReadExtent(StandardOutputChannel).result" outgoing="_rNcBBZ1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcA_Z1nEeKpItXg-ZWbFg"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcA_p1nEeKpItXg-ZWbFg" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rNcA_51nEeKpItXg-ZWbFg" name="Value(1)">
                <result xmi:id="_rNcBAJ1nEeKpItXg-ZWbFg" name="Value(1).result" outgoing="_rNcBBp1nEeKpItXg-ZWbFg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rNcBAZ1nEeKpItXg-ZWbFg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rNcBAp1nEeKpItXg-ZWbFg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_rNcBA51nEeKpItXg-ZWbFg" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_rNcBBJ1nEeKpItXg-ZWbFg" name="Fork(Call(At).argument(index))" outgoing="_rNcBCJ1nEeKpItXg-ZWbFg" incoming="_rNcBBp1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcBBZ1nEeKpItXg-ZWbFg" source="_rNcA_J1nEeKpItXg-ZWbFg" target="_rNcA8Z1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcBBp1nEeKpItXg-ZWbFg" source="_rNcBAJ1nEeKpItXg-ZWbFg" target="_rNcBBJ1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_rNcBB51nEeKpItXg-ZWbFg" source="_rNcA-p1nEeKpItXg-ZWbFg" target="_rNcA8J1nEeKpItXg-ZWbFg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcBCJ1nEeKpItXg-ZWbFg" source="_rNcBBJ1nEeKpItXg-ZWbFg" target="_rNcA9J1nEeKpItXg-ZWbFg"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rNcBCZ1nEeKpItXg-ZWbFg" source="_rNcA951nEeKpItXg-ZWbFg" target="_rNcA7p1nEeKpItXg-ZWbFg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rNcBCp1nEeKpItXg-ZWbFg" source="_rNcA751nEeKpItXg-ZWbFg" target="_rNcA3p1nEeKpItXg-ZWbFg"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_rNcA2p1nEeKpItXg-ZWbFg" name="Input(value)" outgoing="_rNcA2J1nEeKpItXg-ZWbFg" parameter="_rNcA1Z1nEeKpItXg-ZWbFg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_rNcA251nEeKpItXg-ZWbFg" name="Fork(value)" outgoing="_rNcA2Z1nEeKpItXg-ZWbFg" incoming="_rNcA2J1nEeKpItXg-ZWbFg"/>
    </packagedElement>
    <profileApplication xmi:id="_rNcBC51nEeKpItXg-ZWbFg">
      <eAnnotations xmi:id="_rNcBDJ1nEeKpItXg-ZWbFg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_rNdOgJ1nEeKpItXg-ZWbFg" base_BehavioralFeature="_rNayW51nEeKpItXg-ZWbFg"/>
  <l2:Create xmi:id="_rNfDsJ1nEeKpItXg-ZWbFg" base_BehavioralFeature="_rNayV51nEeKpItXg-ZWbFg"/>
  <l2:Destroy xmi:id="_rNfDsZ1nEeKpItXg-ZWbFg" base_BehavioralFeature="_rNbZZJ1nEeKpItXg-ZWbFg"/>
  <l2:Create xmi:id="_rNfDsp1nEeKpItXg-ZWbFg" base_BehavioralFeature="_rNbZYJ1nEeKpItXg-ZWbFg"/>
</xmi:XMI>

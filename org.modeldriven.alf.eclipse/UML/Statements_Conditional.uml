<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_RTDWYOYNEeWt6-AQEw3bRw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_RTDWYeYNEeWt6-AQEw3bRw" name="Statements_Conditional" visibility="public">
      <packageImport xmi:id="_RTDWYuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RTDWY-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RTDWZOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RTDWZeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RTDWZuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_RTDWZ-YNEeWt6-AQEw3bRw" general="_RTECkeYNEeWt6-AQEw3bRw"/>
      <ownedAttribute xmi:id="_RTDWaOYNEeWt6-AQEw3bRw" name="Statements_Conditional$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWaeYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWauYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTDWa-YNEeWt6-AQEw3bRw" name="Statements_Conditional$method$1" specification="_RTEBweYNEeWt6-AQEw3bRw" node="_RTDWcOYNEeWt6-AQEw3bRw _RTDWceYNEeWt6-AQEw3bRw" group="_RTDWceYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTDWbOYNEeWt6-AQEw3bRw" name="" type="_RTDWYeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWbeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWbuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWb-YNEeWt6-AQEw3bRw" target="_RTDWcOYNEeWt6-AQEw3bRw" source="_RTDWkOYNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RTDWceYNEeWt6-AQEw3bRw" name="Body(Statements_Conditional$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWcuYNEeWt6-AQEw3bRw" target="_RTDWkOYNEeWt6-AQEw3bRw" source="_RTDWjeYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDWc-YNEeWt6-AQEw3bRw" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDWdOYNEeWt6-AQEw3bRw" name="ExpressionStatement@318ac7ec">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWdeYNEeWt6-AQEw3bRw" target="_RTDWeeYNEeWt6-AQEw3bRw" source="_RTDWhOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWduYNEeWt6-AQEw3bRw" target="_RTDWeOYNEeWt6-AQEw3bRw" source="_RTDWguYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWd-YNEeWt6-AQEw3bRw" target="_RTDWf-YNEeWt6-AQEw3bRw" source="_RTDWieYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RTDWeOYNEeWt6-AQEw3bRw" name="Call(run)" incoming="_RTDWduYNEeWt6-AQEw3bRw" operation="_RTEBxeYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDWeeYNEeWt6-AQEw3bRw" name="Call(run).argument(tester)" incoming="_RTDWdeYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWeuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWe-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDWfOYNEeWt6-AQEw3bRw" name="Call(run).result()" type="_RTDWYeYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWfeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWfuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <target xmi:id="_RTDWf-YNEeWt6-AQEw3bRw" name="Call(run).target" incoming="_RTDWd-YNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWgOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWgeYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDWguYNEeWt6-AQEw3bRw" name="Tuple@37344d2" outgoing="_RTDWduYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDWg-YNEeWt6-AQEw3bRw" name="Value(null)">
                  <result xmi:id="_RTDWhOYNEeWt6-AQEw3bRw" name="Value(null).result" outgoing="_RTDWdeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWheYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWhuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_RTDWh-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RTDWiOYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RTDWieYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTDWd-YNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWiuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWi-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RTDWjOYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RTDWjeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTDWcuYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWjuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWj-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDWkOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTDWcuYNEeWt6-AQEw3bRw" outgoing="_RTDWb-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDWcOYNEeWt6-AQEw3bRw" name="Return" incoming="_RTDWb-YNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" parameter="_RTDWbOYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTDWkeYNEeWt6-AQEw3bRw" name="run$method$1" specification="_RTEBxeYNEeWt6-AQEw3bRw" node="_RTDWneYNEeWt6-AQEw3bRw _RTDWoOYNEeWt6-AQEw3bRw _RTDWnuYNEeWt6-AQEw3bRw _RTDWpuYNEeWt6-AQEw3bRw _RTDWn-YNEeWt6-AQEw3bRw" group="_RTDWoOYNEeWt6-AQEw3bRw _RTDWpuYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTDWkuYNEeWt6-AQEw3bRw" name="tester" type="_RTEDiuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWk-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWlOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDWleYNEeWt6-AQEw3bRw" name="" type="_RTDWYeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWluYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWl-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWmOYNEeWt6-AQEw3bRw" target="_RTDWouYNEeWt6-AQEw3bRw" source="_RTDWneYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWmeYNEeWt6-AQEw3bRw" target="_RTDWnuYNEeWt6-AQEw3bRw" source="_RTDYDeYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWmuYNEeWt6-AQEw3bRw" target="_RTDYEeYNEeWt6-AQEw3bRw" source="_RTDWpeYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWm-YNEeWt6-AQEw3bRw" target="_RTDWn-YNEeWt6-AQEw3bRw" source="_RTDWoOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWnOYNEeWt6-AQEw3bRw" target="_RTDWpuYNEeWt6-AQEw3bRw" source="_RTDWn-YNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RTDWoOYNEeWt6-AQEw3bRw" name="Node(Input(tester))" outgoing="_RTDWm-YNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWoeYNEeWt6-AQEw3bRw" target="_RTDWpeYNEeWt6-AQEw3bRw" source="_RTDWouYNEeWt6-AQEw3bRw"/>
          <structuredNodeInput xmi:id="_RTDWouYNEeWt6-AQEw3bRw" name="Input(tester)" incoming="_RTDWmOYNEeWt6-AQEw3bRw" outgoing="_RTDWoeYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDWo-YNEeWt6-AQEw3bRw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDWpOYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDWpeYNEeWt6-AQEw3bRw" name="Fork(tester)" incoming="_RTDWoeYNEeWt6-AQEw3bRw" outgoing="_RTDWmuYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <structuredNode xmi:id="_RTDWpuYNEeWt6-AQEw3bRw" name="Body(run$method$1)" incoming="_RTDWnOYNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWp-YNEeWt6-AQEw3bRw" target="_RTDYDeYNEeWt6-AQEw3bRw" source="_RTDYCuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWqOYNEeWt6-AQEw3bRw" target="_RTDYGOYNEeWt6-AQEw3bRw" source="_RTDYDeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWqeYNEeWt6-AQEw3bRw" target="_RTDWs-YNEeWt6-AQEw3bRw" source="_RTDYF-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWquYNEeWt6-AQEw3bRw" target="_RTDYF-YNEeWt6-AQEw3bRw" source="_RTDYDuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWq-YNEeWt6-AQEw3bRw" target="_RTDYHOYNEeWt6-AQEw3bRw" source="_RTDYDeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWrOYNEeWt6-AQEw3bRw" target="_RTDYI-YNEeWt6-AQEw3bRw" source="_RTDYH-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWreYNEeWt6-AQEw3bRw" target="_RTDYL-YNEeWt6-AQEw3bRw" source="_RTDYJuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWruYNEeWt6-AQEw3bRw" target="_RTDYNeYNEeWt6-AQEw3bRw" source="_RTDYKuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWr-YNEeWt6-AQEw3bRw" target="_RTDYOeYNEeWt6-AQEw3bRw" source="_RTDYOOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWsOYNEeWt6-AQEw3bRw" target="_RTDYOeYNEeWt6-AQEw3bRw" source="_RTDYMuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWseYNEeWt6-AQEw3bRw" target="_RTDYDuYNEeWt6-AQEw3bRw" source="_RTDYOeYNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDWsuYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDWs-YNEeWt6-AQEw3bRw" name="Body" incoming="_RTDWqeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWtOYNEeWt6-AQEw3bRw" target="_RTDXDeYNEeWt6-AQEw3bRw" source="_RTDW--YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWteYNEeWt6-AQEw3bRw" target="_RTDXBeYNEeWt6-AQEw3bRw" source="_RTDWyeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWtuYNEeWt6-AQEw3bRw" target="_RTDXJuYNEeWt6-AQEw3bRw" source="_RTDW_OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWt-YNEeWt6-AQEw3bRw" target="_RTDXHuYNEeWt6-AQEw3bRw" source="_RTDXBeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWuOYNEeWt6-AQEw3bRw" target="_RTDXP-YNEeWt6-AQEw3bRw" source="_RTDW_eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWueYNEeWt6-AQEw3bRw" target="_RTDXN-YNEeWt6-AQEw3bRw" source="_RTDXHuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWuuYNEeWt6-AQEw3bRw" target="_RTDXWOYNEeWt6-AQEw3bRw" source="_RTDW_uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWu-YNEeWt6-AQEw3bRw" target="_RTDXUOYNEeWt6-AQEw3bRw" source="_RTDXN-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWvOYNEeWt6-AQEw3bRw" target="_RTDXceYNEeWt6-AQEw3bRw" source="_RTDW_-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWveYNEeWt6-AQEw3bRw" target="_RTDXaeYNEeWt6-AQEw3bRw" source="_RTDXUOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWvuYNEeWt6-AQEw3bRw" target="_RTDXiuYNEeWt6-AQEw3bRw" source="_RTDXAOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWv-YNEeWt6-AQEw3bRw" target="_RTDXguYNEeWt6-AQEw3bRw" source="_RTDXaeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWwOYNEeWt6-AQEw3bRw" target="_RTDXo-YNEeWt6-AQEw3bRw" source="_RTDXAeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWweYNEeWt6-AQEw3bRw" target="_RTDXm-YNEeWt6-AQEw3bRw" source="_RTDXguYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWwuYNEeWt6-AQEw3bRw" target="_RTDXvOYNEeWt6-AQEw3bRw" source="_RTDXAuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWw-YNEeWt6-AQEw3bRw" target="_RTDXtOYNEeWt6-AQEw3bRw" source="_RTDXm-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWxOYNEeWt6-AQEw3bRw" target="_RTDX1eYNEeWt6-AQEw3bRw" source="_RTDXA-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWxeYNEeWt6-AQEw3bRw" target="_RTDXzeYNEeWt6-AQEw3bRw" source="_RTDXtOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWxuYNEeWt6-AQEw3bRw" target="_RTDX7uYNEeWt6-AQEw3bRw" source="_RTDXBOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWx-YNEeWt6-AQEw3bRw" target="_RTDX5uYNEeWt6-AQEw3bRw" source="_RTDXzeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDWyOYNEeWt6-AQEw3bRw" target="_RTDX_-YNEeWt6-AQEw3bRw" source="_RTDX5uYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDWyeYNEeWt6-AQEw3bRw" name="ExpressionStatement@3d29810f" outgoing="_RTDWteYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWyuYNEeWt6-AQEw3bRw" target="_RTDW--YNEeWt6-AQEw3bRw" source="_RTDW1uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWy-YNEeWt6-AQEw3bRw" target="_RTDW_OYNEeWt6-AQEw3bRw" source="_RTDW2eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWzOYNEeWt6-AQEw3bRw" target="_RTDW_eYNEeWt6-AQEw3bRw" source="_RTDW3OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWzeYNEeWt6-AQEw3bRw" target="_RTDW_uYNEeWt6-AQEw3bRw" source="_RTDW3-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWzuYNEeWt6-AQEw3bRw" target="_RTDW_-YNEeWt6-AQEw3bRw" source="_RTDW4uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDWz-YNEeWt6-AQEw3bRw" target="_RTDXAOYNEeWt6-AQEw3bRw" source="_RTDW5eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDW0OYNEeWt6-AQEw3bRw" target="_RTDXAeYNEeWt6-AQEw3bRw" source="_RTDW6OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDW0eYNEeWt6-AQEw3bRw" target="_RTDXAuYNEeWt6-AQEw3bRw" source="_RTDW6-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDW0uYNEeWt6-AQEw3bRw" target="_RTDXA-YNEeWt6-AQEw3bRw" source="_RTDW7uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDW0-YNEeWt6-AQEw3bRw" target="_RTDXBOYNEeWt6-AQEw3bRw" source="_RTDW8eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDW1OYNEeWt6-AQEw3bRw" target="_RTDW9OYNEeWt6-AQEw3bRw" source="_RTDW-OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RTDW1eYNEeWt6-AQEw3bRw" name="Call(test)" operation="_RTEBzOYNEeWt6-AQEw3bRw">
                <result xmi:id="_RTDW1uYNEeWt6-AQEw3bRw" name="Call(test).result(reading1)" outgoing="_RTDWyuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW1-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW2OYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW2eYNEeWt6-AQEw3bRw" name="Call(test).result(condition1)" outgoing="_RTDWy-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW2uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW2-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW3OYNEeWt6-AQEw3bRw" name="Call(test).result(condition2)" outgoing="_RTDWzOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW3eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW3uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW3-YNEeWt6-AQEw3bRw" name="Call(test).result(condition3)" outgoing="_RTDWzeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW4OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW4eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW4uYNEeWt6-AQEw3bRw" name="Call(test).result(year)" outgoing="_RTDWzuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW4-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW5OYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW5eYNEeWt6-AQEw3bRw" name="Call(test).result(month)" outgoing="_RTDWz-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW5uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW5-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW6OYNEeWt6-AQEw3bRw" name="Call(test).result(numDays)" outgoing="_RTDW0OYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW6eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW6uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW6-YNEeWt6-AQEw3bRw" name="Call(test).result(switch1)" outgoing="_RTDW0eYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW7OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW7eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW7uYNEeWt6-AQEw3bRw" name="Call(test).result(switch2)" outgoing="_RTDW0uYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW7-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW8OYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RTDW8eYNEeWt6-AQEw3bRw" name="Call(test).result(switch3)" outgoing="_RTDW0-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW8uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW8-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <target xmi:id="_RTDW9OYNEeWt6-AQEw3bRw" name="Call(test).target" incoming="_RTDW1OYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW9eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW9uYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RTDW9-YNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RTDW-OYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTDW1OYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDW-eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDW-uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDW--YNEeWt6-AQEw3bRw" name="Fork(reading)@421ea1ff" incoming="_RTDWyuYNEeWt6-AQEw3bRw" outgoing="_RTDWtOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDW_OYNEeWt6-AQEw3bRw" name="Fork(condition1)@1366c4f8" incoming="_RTDWy-YNEeWt6-AQEw3bRw" outgoing="_RTDWtuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDW_eYNEeWt6-AQEw3bRw" name="Fork(condition2)@400d7fbb" incoming="_RTDWzOYNEeWt6-AQEw3bRw" outgoing="_RTDWuOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDW_uYNEeWt6-AQEw3bRw" name="Fork(condition3)@363ceed7" incoming="_RTDWzeYNEeWt6-AQEw3bRw" outgoing="_RTDWuuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDW_-YNEeWt6-AQEw3bRw" name="Fork(year)@5a648112" incoming="_RTDWzuYNEeWt6-AQEw3bRw" outgoing="_RTDWvOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDXAOYNEeWt6-AQEw3bRw" name="Fork(month)@7c55f31a" incoming="_RTDWz-YNEeWt6-AQEw3bRw" outgoing="_RTDWvuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDXAeYNEeWt6-AQEw3bRw" name="Fork(numDays)@6ecb6fbb" incoming="_RTDW0OYNEeWt6-AQEw3bRw" outgoing="_RTDWwOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDXAuYNEeWt6-AQEw3bRw" name="Fork(switch1)@6e1496d0" incoming="_RTDW0eYNEeWt6-AQEw3bRw" outgoing="_RTDWwuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDXA-YNEeWt6-AQEw3bRw" name="Fork(switch2)@9b96a26" incoming="_RTDW0uYNEeWt6-AQEw3bRw" outgoing="_RTDWxOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDXBOYNEeWt6-AQEw3bRw" name="Fork(switch3)@6be7e9c6" incoming="_RTDW0-YNEeWt6-AQEw3bRw" outgoing="_RTDWxuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXBeYNEeWt6-AQEw3bRw" name="ExpressionStatement@511f7433" incoming="_RTDWteYNEeWt6-AQEw3bRw" outgoing="_RTDWt-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXBuYNEeWt6-AQEw3bRw" target="_RTDXCuYNEeWt6-AQEw3bRw" source="_RTDXFeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXB-YNEeWt6-AQEw3bRw" target="_RTDXEOYNEeWt6-AQEw3bRw" source="_RTDXGuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXCOYNEeWt6-AQEw3bRw" target="_RTDXCeYNEeWt6-AQEw3bRw" source="_RTDXE-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXCeYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXCOYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXCuYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXBuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXC-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXDOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXDeYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWtOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXDuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXD-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXEOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXB-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXEeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXEuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXE-YNEeWt6-AQEw3bRw" name="Tuple@7abab245" outgoing="_RTDXCOYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXFOYNEeWt6-AQEw3bRw" name="Value(&quot;reading&quot;)">
                  <result xmi:id="_RTDXFeYNEeWt6-AQEw3bRw" name="Value(&quot;reading&quot;).result" outgoing="_RTDXBuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXFuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXF-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXGOYNEeWt6-AQEw3bRw" value="reading">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXGeYNEeWt6-AQEw3bRw" name="Value(150)">
                  <result xmi:id="_RTDXGuYNEeWt6-AQEw3bRw" name="Value(150).result" outgoing="_RTDXB-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXG-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXHOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDXHeYNEeWt6-AQEw3bRw" value="150">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXHuYNEeWt6-AQEw3bRw" name="ExpressionStatement@4e8b58d4" incoming="_RTDWt-YNEeWt6-AQEw3bRw" outgoing="_RTDWueYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXH-YNEeWt6-AQEw3bRw" target="_RTDXI-YNEeWt6-AQEw3bRw" source="_RTDXLuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXIOYNEeWt6-AQEw3bRw" target="_RTDXKeYNEeWt6-AQEw3bRw" source="_RTDXM-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXIeYNEeWt6-AQEw3bRw" target="_RTDXIuYNEeWt6-AQEw3bRw" source="_RTDXLOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXIuYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXIeYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXI-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXH-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXJOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXJeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXJuYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWtuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXJ-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXKOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXKeYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXIOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXKuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXK-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXLOYNEeWt6-AQEw3bRw" name="Tuple@a198458" outgoing="_RTDXIeYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXLeYNEeWt6-AQEw3bRw" name="Value(&quot;condition1&quot;)">
                  <result xmi:id="_RTDXLuYNEeWt6-AQEw3bRw" name="Value(&quot;condition1&quot;).result" outgoing="_RTDXH-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXL-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXMOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXMeYNEeWt6-AQEw3bRw" value="condition1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXMuYNEeWt6-AQEw3bRw" name="Value(alert)">
                  <result xmi:id="_RTDXM-YNEeWt6-AQEw3bRw" name="Value(alert).result" outgoing="_RTDXIOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXNOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXNeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDXNuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjuYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXN-YNEeWt6-AQEw3bRw" name="ExpressionStatement@648b9eab" incoming="_RTDWueYNEeWt6-AQEw3bRw" outgoing="_RTDWu-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXOOYNEeWt6-AQEw3bRw" target="_RTDXPOYNEeWt6-AQEw3bRw" source="_RTDXR-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXOeYNEeWt6-AQEw3bRw" target="_RTDXQuYNEeWt6-AQEw3bRw" source="_RTDXTOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXOuYNEeWt6-AQEw3bRw" target="_RTDXO-YNEeWt6-AQEw3bRw" source="_RTDXReYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXO-YNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXOuYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXPOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXOOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXPeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXPuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXP-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWuOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXQOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXQeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXQuYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXOeYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXQ-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXROYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXReYNEeWt6-AQEw3bRw" name="Tuple@51a91a57" outgoing="_RTDXOuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXRuYNEeWt6-AQEw3bRw" name="Value(&quot;condition2&quot;)">
                  <result xmi:id="_RTDXR-YNEeWt6-AQEw3bRw" name="Value(&quot;condition2&quot;).result" outgoing="_RTDXOOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXSOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXSeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXSuYNEeWt6-AQEw3bRw" value="condition2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXS-YNEeWt6-AQEw3bRw" name="Value(critical)">
                  <result xmi:id="_RTDXTOYNEeWt6-AQEw3bRw" name="Value(critical).result" outgoing="_RTDXOeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXTeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXTuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDXT-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECj-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXUOYNEeWt6-AQEw3bRw" name="ExpressionStatement@78f7eded" incoming="_RTDWu-YNEeWt6-AQEw3bRw" outgoing="_RTDWveYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXUeYNEeWt6-AQEw3bRw" target="_RTDXVeYNEeWt6-AQEw3bRw" source="_RTDXYOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXUuYNEeWt6-AQEw3bRw" target="_RTDXW-YNEeWt6-AQEw3bRw" source="_RTDXZeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXU-YNEeWt6-AQEw3bRw" target="_RTDXVOYNEeWt6-AQEw3bRw" source="_RTDXXuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXVOYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXU-YNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXVeYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXUeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXVuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXV-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXWOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWuuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXWeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXWuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXW-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXUuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXXOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXXeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXXuYNEeWt6-AQEw3bRw" name="Tuple@321a5f57" outgoing="_RTDXU-YNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXX-YNEeWt6-AQEw3bRw" name="Value(&quot;condition3&quot;)">
                  <result xmi:id="_RTDXYOYNEeWt6-AQEw3bRw" name="Value(&quot;condition3&quot;).result" outgoing="_RTDXUeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXYeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXYuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXY-YNEeWt6-AQEw3bRw" value="condition3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXZOYNEeWt6-AQEw3bRw" name="Value(critical)">
                  <result xmi:id="_RTDXZeYNEeWt6-AQEw3bRw" name="Value(critical).result" outgoing="_RTDXUuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXZuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXZ-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDXaOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECj-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXaeYNEeWt6-AQEw3bRw" name="ExpressionStatement@485b0678" incoming="_RTDWveYNEeWt6-AQEw3bRw" outgoing="_RTDWv-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXauYNEeWt6-AQEw3bRw" target="_RTDXbuYNEeWt6-AQEw3bRw" source="_RTDXeeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXa-YNEeWt6-AQEw3bRw" target="_RTDXdOYNEeWt6-AQEw3bRw" source="_RTDXfuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXbOYNEeWt6-AQEw3bRw" target="_RTDXbeYNEeWt6-AQEw3bRw" source="_RTDXd-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXbeYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXbOYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXbuYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXauYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXb-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXcOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXceYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWvOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXcuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXc-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXdOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXa-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXdeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXduYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXd-YNEeWt6-AQEw3bRw" name="Tuple@495e7df4" outgoing="_RTDXbOYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXeOYNEeWt6-AQEw3bRw" name="Value(&quot;year&quot;)">
                  <result xmi:id="_RTDXeeYNEeWt6-AQEw3bRw" name="Value(&quot;year&quot;).result" outgoing="_RTDXauYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXeuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXe-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXfOYNEeWt6-AQEw3bRw" value="year">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXfeYNEeWt6-AQEw3bRw" name="Value(2012)">
                  <result xmi:id="_RTDXfuYNEeWt6-AQEw3bRw" name="Value(2012).result" outgoing="_RTDXa-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXf-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXgOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDXgeYNEeWt6-AQEw3bRw" value="2012">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXguYNEeWt6-AQEw3bRw" name="ExpressionStatement@7341517f" incoming="_RTDWv-YNEeWt6-AQEw3bRw" outgoing="_RTDWweYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXg-YNEeWt6-AQEw3bRw" target="_RTDXh-YNEeWt6-AQEw3bRw" source="_RTDXkuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXhOYNEeWt6-AQEw3bRw" target="_RTDXjeYNEeWt6-AQEw3bRw" source="_RTDXl-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXheYNEeWt6-AQEw3bRw" target="_RTDXhuYNEeWt6-AQEw3bRw" source="_RTDXkOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXhuYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXheYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXh-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXg-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXiOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXieYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXiuYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWvuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXi-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXjOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXjeYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXhOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXjuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXj-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXkOYNEeWt6-AQEw3bRw" name="Tuple@76eecb9d" outgoing="_RTDXheYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXkeYNEeWt6-AQEw3bRw" name="Value(&quot;month&quot;)">
                  <result xmi:id="_RTDXkuYNEeWt6-AQEw3bRw" name="Value(&quot;month&quot;).result" outgoing="_RTDXg-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXk-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXlOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXleYNEeWt6-AQEw3bRw" value="month">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXluYNEeWt6-AQEw3bRw" name="Value(2)">
                  <result xmi:id="_RTDXl-YNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RTDXhOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXmOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXmeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDXmuYNEeWt6-AQEw3bRw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXm-YNEeWt6-AQEw3bRw" name="ExpressionStatement@1844cc15" incoming="_RTDWweYNEeWt6-AQEw3bRw" outgoing="_RTDWw-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXnOYNEeWt6-AQEw3bRw" target="_RTDXoOYNEeWt6-AQEw3bRw" source="_RTDXq-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXneYNEeWt6-AQEw3bRw" target="_RTDXpuYNEeWt6-AQEw3bRw" source="_RTDXsOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXnuYNEeWt6-AQEw3bRw" target="_RTDXn-YNEeWt6-AQEw3bRw" source="_RTDXqeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXn-YNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXnuYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXoOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXnOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXoeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXouYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXo-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWwOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXpOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXpeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXpuYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXneYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXp-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXqOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXqeYNEeWt6-AQEw3bRw" name="Tuple@793eb62c" outgoing="_RTDXnuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXquYNEeWt6-AQEw3bRw" name="Value(&quot;numDays&quot;)">
                  <result xmi:id="_RTDXq-YNEeWt6-AQEw3bRw" name="Value(&quot;numDays&quot;).result" outgoing="_RTDXnOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXrOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXreYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXruYNEeWt6-AQEw3bRw" value="numDays">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXr-YNEeWt6-AQEw3bRw" name="Value(29)">
                  <result xmi:id="_RTDXsOYNEeWt6-AQEw3bRw" name="Value(29).result" outgoing="_RTDXneYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXseYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXsuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDXs-YNEeWt6-AQEw3bRw" value="29">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXtOYNEeWt6-AQEw3bRw" name="ExpressionStatement@104b61b7" incoming="_RTDWw-YNEeWt6-AQEw3bRw" outgoing="_RTDWxeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXteYNEeWt6-AQEw3bRw" target="_RTDXueYNEeWt6-AQEw3bRw" source="_RTDXxOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXtuYNEeWt6-AQEw3bRw" target="_RTDXv-YNEeWt6-AQEw3bRw" source="_RTDXyeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDXt-YNEeWt6-AQEw3bRw" target="_RTDXuOYNEeWt6-AQEw3bRw" source="_RTDXwuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDXuOYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDXt-YNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDXueYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXteYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXuuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXu-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXvOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWwuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXveYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXvuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDXv-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXtuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXwOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXweYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXwuYNEeWt6-AQEw3bRw" name="Tuple@691510d7" outgoing="_RTDXt-YNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXw-YNEeWt6-AQEw3bRw" name="Value(&quot;switch1&quot;)">
                  <result xmi:id="_RTDXxOYNEeWt6-AQEw3bRw" name="Value(&quot;switch1&quot;).result" outgoing="_RTDXteYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXxeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXxuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDXx-YNEeWt6-AQEw3bRw" value="switch1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDXyOYNEeWt6-AQEw3bRw" name="Value(3)">
                  <result xmi:id="_RTDXyeYNEeWt6-AQEw3bRw" name="Value(3).result" outgoing="_RTDXtuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDXyuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDXy-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDXzOYNEeWt6-AQEw3bRw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDXzeYNEeWt6-AQEw3bRw" name="ExpressionStatement@12277387" incoming="_RTDWxeYNEeWt6-AQEw3bRw" outgoing="_RTDWx-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXzuYNEeWt6-AQEw3bRw" target="_RTDX0uYNEeWt6-AQEw3bRw" source="_RTDX3eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDXz-YNEeWt6-AQEw3bRw" target="_RTDX2OYNEeWt6-AQEw3bRw" source="_RTDX4uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDX0OYNEeWt6-AQEw3bRw" target="_RTDX0eYNEeWt6-AQEw3bRw" source="_RTDX2-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDX0eYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDX0OYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDX0uYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDXzuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX0-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX1OYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDX1eYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWxOYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX1uYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX1-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDX2OYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDXz-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX2eYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX2uYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDX2-YNEeWt6-AQEw3bRw" name="Tuple@71fbb9dc" outgoing="_RTDX0OYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDX3OYNEeWt6-AQEw3bRw" name="Value(&quot;switch2&quot;)">
                  <result xmi:id="_RTDX3eYNEeWt6-AQEw3bRw" name="Value(&quot;switch2&quot;).result" outgoing="_RTDXzuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX3uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX3-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDX4OYNEeWt6-AQEw3bRw" value="switch2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDX4eYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RTDX4uYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTDXz-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX4-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX5OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDX5eYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDX5uYNEeWt6-AQEw3bRw" name="ExpressionStatement@68783a68" incoming="_RTDWx-YNEeWt6-AQEw3bRw" outgoing="_RTDWyOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDX5-YNEeWt6-AQEw3bRw" target="_RTDX6-YNEeWt6-AQEw3bRw" source="_RTDX9uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDX6OYNEeWt6-AQEw3bRw" target="_RTDX8eYNEeWt6-AQEw3bRw" source="_RTDX--YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDX6eYNEeWt6-AQEw3bRw" target="_RTDX6uYNEeWt6-AQEw3bRw" source="_RTDX9OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDX6uYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RTDX6eYNEeWt6-AQEw3bRw" behavior="_RTEk9eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDX6-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RTDX5-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX7OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX7eYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDX7uYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RTDWxuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX7-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX8OYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDX8eYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RTDX6OYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX8uYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX8-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDX9OYNEeWt6-AQEw3bRw" name="Tuple@75fe2ab5" outgoing="_RTDX6eYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDX9eYNEeWt6-AQEw3bRw" name="Value(&quot;switch3&quot;)">
                  <result xmi:id="_RTDX9uYNEeWt6-AQEw3bRw" name="Value(&quot;switch3&quot;).result" outgoing="_RTDX5-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX9-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX-OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTDX-eYNEeWt6-AQEw3bRw" value="switch3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDX-uYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RTDX--YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTDX6OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDX_OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDX_eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDX_uYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDX_-YNEeWt6-AQEw3bRw" name="ExpressionStatement@53b1a336" incoming="_RTDWyOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYAOYNEeWt6-AQEw3bRw" target="_RTDYAuYNEeWt6-AQEw3bRw" source="_RTDYBuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RTDYAeYNEeWt6-AQEw3bRw" name="Call(done)" operation="_RTEDguYNEeWt6-AQEw3bRw">
                <target xmi:id="_RTDYAuYNEeWt6-AQEw3bRw" name="Call(done).target" incoming="_RTDYAOYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYA-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYBOYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RTDYBeYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RTDYBuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTDYAOYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYB-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYCOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RTDYCeYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RTDYCuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTDWp-YNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYC-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYDOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDYDeYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTDWp-YNEeWt6-AQEw3bRw" outgoing="_RTDWmeYNEeWt6-AQEw3bRw _RTDWqOYNEeWt6-AQEw3bRw _RTDWq-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDYDuYNEeWt6-AQEw3bRw" name="Super" incoming="_RTDWseYNEeWt6-AQEw3bRw" outgoing="_RTDWquYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDYD-YNEeWt6-AQEw3bRw" name="ExpressionStatement@3e8da8df">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDYEOYNEeWt6-AQEw3bRw" name="Call(Test$method$1)" behavior="_RTECy-YNEeWt6-AQEw3bRw">
                <argument xmi:id="_RTDYEeYNEeWt6-AQEw3bRw" name="Call(Test$method$1).argument(tester)" incoming="_RTDWmuYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYEuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYE-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDYFOYNEeWt6-AQEw3bRw" name="Call(Test$method$1).result()" type="_RTECkeYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYFeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYFuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RTDYF-YNEeWt6-AQEw3bRw" name="Call(Statements_Conditional$initialization$1)" incoming="_RTDWquYNEeWt6-AQEw3bRw" outgoing="_RTDWqeYNEeWt6-AQEw3bRw" operation="_RTEBwOYNEeWt6-AQEw3bRw">
            <target xmi:id="_RTDYGOYNEeWt6-AQEw3bRw" name="Call(Statements_Conditional$initialization$1).target" incoming="_RTDWqOYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYGeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYGuYNEeWt6-AQEw3bRw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTDYG-YNEeWt6-AQEw3bRw" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_RTDWaOYNEeWt6-AQEw3bRw">
            <object xmi:id="_RTDYHOYNEeWt6-AQEw3bRw" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_RTDWq-YNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYHeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYHuYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RTDYH-YNEeWt6-AQEw3bRw" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_RTDWrOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYIOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYIeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDYIuYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RTDYI-YNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTDWrOYNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYJOYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYJeYNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RTDYJuYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTDWreYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYJ-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYKOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDYKeYNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RTDYKuYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTDWruYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYK-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYLOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RTDYLeYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RTDYLuYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RTDYL-YNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTDWreYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYMOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYMeYNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RTDYMuYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTDWsOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYM-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYNOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RTDYNeYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTDWruYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYNuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYN-YNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RTDYOOYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTDWr-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RTDYOeYNEeWt6-AQEw3bRw" name="Decision(Test(Statements_Conditional$initializationFlag$1))" incoming="_RTDWr-YNEeWt6-AQEw3bRw _RTDWsOYNEeWt6-AQEw3bRw" outgoing="_RTDWseYNEeWt6-AQEw3bRw" decisionInputFlow="_RTDWsOYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDWneYNEeWt6-AQEw3bRw" name="Input(tester)" outgoing="_RTDWmOYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" parameter="_RTDWkuYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDWnuYNEeWt6-AQEw3bRw" name="Return" incoming="_RTDWmeYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" parameter="_RTDWleYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:JoinNode" xmi:id="_RTDWn-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RTDWm-YNEeWt6-AQEw3bRw" outgoing="_RTDWnOYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTDYOuYNEeWt6-AQEw3bRw" name="test$method$1" specification="_RTEBzOYNEeWt6-AQEw3bRw" node="_RTDYY-YNEeWt6-AQEw3bRw _RTDYZOYNEeWt6-AQEw3bRw _RTDYZeYNEeWt6-AQEw3bRw _RTDYZuYNEeWt6-AQEw3bRw _RTDYZ-YNEeWt6-AQEw3bRw _RTDYaOYNEeWt6-AQEw3bRw _RTDYaeYNEeWt6-AQEw3bRw _RTDYauYNEeWt6-AQEw3bRw _RTDYa-YNEeWt6-AQEw3bRw _RTDYbOYNEeWt6-AQEw3bRw _RTDYbeYNEeWt6-AQEw3bRw" group="_RTDYbeYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTDYO-YNEeWt6-AQEw3bRw" name="reading1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYPOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYPeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYPuYNEeWt6-AQEw3bRw" name="condition1" type="_RTECjOYNEeWt6-AQEw3bRw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYP-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYQOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYQeYNEeWt6-AQEw3bRw" name="condition2" type="_RTECjOYNEeWt6-AQEw3bRw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYQuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYQ-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYROYNEeWt6-AQEw3bRw" name="condition3" type="_RTECjOYNEeWt6-AQEw3bRw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYReYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYRuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYR-YNEeWt6-AQEw3bRw" name="year" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYSOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYSeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYSuYNEeWt6-AQEw3bRw" name="month" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYS-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYTOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYTeYNEeWt6-AQEw3bRw" name="numDays" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYTuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYT-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYUOYNEeWt6-AQEw3bRw" name="switch1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYUeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYUuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYU-YNEeWt6-AQEw3bRw" name="switch2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYVOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYVeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTDYVuYNEeWt6-AQEw3bRw" name="switch3" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYV-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYWOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYWeYNEeWt6-AQEw3bRw" target="_RTDYY-YNEeWt6-AQEw3bRw" source="_RTDYteYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYWuYNEeWt6-AQEw3bRw" target="_RTDYZOYNEeWt6-AQEw3bRw" source="_RTDYuOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYW-YNEeWt6-AQEw3bRw" target="_RTDYZeYNEeWt6-AQEw3bRw" source="_RTDYu-YNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYXOYNEeWt6-AQEw3bRw" target="_RTDYZuYNEeWt6-AQEw3bRw" source="_RTDYvuYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYXeYNEeWt6-AQEw3bRw" target="_RTDYZ-YNEeWt6-AQEw3bRw" source="_RTDYweYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYXuYNEeWt6-AQEw3bRw" target="_RTDYaOYNEeWt6-AQEw3bRw" source="_RTDYxOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYX-YNEeWt6-AQEw3bRw" target="_RTDYaeYNEeWt6-AQEw3bRw" source="_RTDYx-YNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYYOYNEeWt6-AQEw3bRw" target="_RTDYauYNEeWt6-AQEw3bRw" source="_RTDYyuYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYYeYNEeWt6-AQEw3bRw" target="_RTDYa-YNEeWt6-AQEw3bRw" source="_RTDYzeYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYYuYNEeWt6-AQEw3bRw" target="_RTDYbOYNEeWt6-AQEw3bRw" source="_RTDY0OYNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RTDYbeYNEeWt6-AQEw3bRw" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYbuYNEeWt6-AQEw3bRw" target="_RTDY3OYNEeWt6-AQEw3bRw" source="_RTDY0-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYb-YNEeWt6-AQEw3bRw" target="_RTDY5eYNEeWt6-AQEw3bRw" source="_RTDY3OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYcOYNEeWt6-AQEw3bRw" target="_RTDY7uYNEeWt6-AQEw3bRw" source="_RTDY5eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYceYNEeWt6-AQEw3bRw" target="_RTDY9-YNEeWt6-AQEw3bRw" source="_RTDY7uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYcuYNEeWt6-AQEw3bRw" target="_RTDZAOYNEeWt6-AQEw3bRw" source="_RTDY9-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYc-YNEeWt6-AQEw3bRw" target="_RTDZCeYNEeWt6-AQEw3bRw" source="_RTDZAOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYdOYNEeWt6-AQEw3bRw" target="_RTDZEuYNEeWt6-AQEw3bRw" source="_RTDZCeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYdeYNEeWt6-AQEw3bRw" target="_RTDZIuYNEeWt6-AQEw3bRw" source="_RTDZEuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYduYNEeWt6-AQEw3bRw" target="_RTDZZuYNEeWt6-AQEw3bRw" source="_RTDZY-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYd-YNEeWt6-AQEw3bRw" target="_RTDZL-YNEeWt6-AQEw3bRw" source="_RTDY3uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYeOYNEeWt6-AQEw3bRw" target="_RTDZNeYNEeWt6-AQEw3bRw" source="_RTDY5-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYeeYNEeWt6-AQEw3bRw" target="_RTDZQOYNEeWt6-AQEw3bRw" source="_RTDZC-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYeuYNEeWt6-AQEw3bRw" target="_RTDZSuYNEeWt6-AQEw3bRw" source="_RTDZFOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYe-YNEeWt6-AQEw3bRw" target="_RTDZW-YNEeWt6-AQEw3bRw" source="_RTDY1eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYfOYNEeWt6-AQEw3bRw" target="_RTDZK-YNEeWt6-AQEw3bRw" source="_RTDZIuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYfeYNEeWt6-AQEw3bRw" target="_RTDZ8-YNEeWt6-AQEw3bRw" source="_RTDZ8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYfuYNEeWt6-AQEw3bRw" target="_RTDZbuYNEeWt6-AQEw3bRw" source="_RTDY3uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYf-YNEeWt6-AQEw3bRw" target="_RTDZceYNEeWt6-AQEw3bRw" source="_RTDY8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYgOYNEeWt6-AQEw3bRw" target="_RTDZleYNEeWt6-AQEw3bRw" source="_RTDY3uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYgeYNEeWt6-AQEw3bRw" target="_RTDZmOYNEeWt6-AQEw3bRw" source="_RTDY8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYguYNEeWt6-AQEw3bRw" target="_RTDZpOYNEeWt6-AQEw3bRw" source="_RTDY3uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYg-YNEeWt6-AQEw3bRw" target="_RTDZp-YNEeWt6-AQEw3bRw" source="_RTDY-eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYhOYNEeWt6-AQEw3bRw" target="_RTDZzeYNEeWt6-AQEw3bRw" source="_RTDY3uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYheYNEeWt6-AQEw3bRw" target="_RTDZ0OYNEeWt6-AQEw3bRw" source="_RTDY-eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYhuYNEeWt6-AQEw3bRw" target="_RTDZZ-YNEeWt6-AQEw3bRw" source="_RTDZK-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYh-YNEeWt6-AQEw3bRw" target="_RTDZ9OYNEeWt6-AQEw3bRw" source="_RTDZZ-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYiOYNEeWt6-AQEw3bRw" target="_RTDaVeYNEeWt6-AQEw3bRw" source="_RTDaUuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYieYNEeWt6-AQEw3bRw" target="_RTDaA-YNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYiuYNEeWt6-AQEw3bRw" target="_RTDaBuYNEeWt6-AQEw3bRw" source="_RTDY8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYi-YNEeWt6-AQEw3bRw" target="_RTDaH-YNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYjOYNEeWt6-AQEw3bRw" target="_RTDaIuYNEeWt6-AQEw3bRw" source="_RTDY-eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYjeYNEeWt6-AQEw3bRw" target="_RTDZ_eYNEeWt6-AQEw3bRw" source="_RTDZ9OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYjuYNEeWt6-AQEw3bRw" target="_RTDbHOYNEeWt6-AQEw3bRw" source="_RTDbGeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYj-YNEeWt6-AQEw3bRw" target="_RTDaX-YNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYkOYNEeWt6-AQEw3bRw" target="_RTDaYuYNEeWt6-AQEw3bRw" source="_RTDY8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYkeYNEeWt6-AQEw3bRw" target="_RTDahuYNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYkuYNEeWt6-AQEw3bRw" target="_RTDaieYNEeWt6-AQEw3bRw" source="_RTDY8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYk-YNEeWt6-AQEw3bRw" target="_RTDaleYNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYlOYNEeWt6-AQEw3bRw" target="_RTDamOYNEeWt6-AQEw3bRw" source="_RTDY-eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYleYNEeWt6-AQEw3bRw" target="_RTDayeYNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYluYNEeWt6-AQEw3bRw" target="_RTDazOYNEeWt6-AQEw3bRw" source="_RTDY-eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYl-YNEeWt6-AQEw3bRw" target="_RTDa2OYNEeWt6-AQEw3bRw" source="_RTDZ9uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYmOYNEeWt6-AQEw3bRw" target="_RTDa2-YNEeWt6-AQEw3bRw" source="_RTDZAuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYmeYNEeWt6-AQEw3bRw" target="_RTDaVuYNEeWt6-AQEw3bRw" source="_RTDZ_eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYmuYNEeWt6-AQEw3bRw" target="_RTDbJOYNEeWt6-AQEw3bRw" source="_RTDZJOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYm-YNEeWt6-AQEw3bRw" target="_RTDbHeYNEeWt6-AQEw3bRw" source="_RTDaVuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYnOYNEeWt6-AQEw3bRw" target="_RTD9h-YNEeWt6-AQEw3bRw" source="_RTDbYuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYneYNEeWt6-AQEw3bRw" target="_RTD--uYNEeWt6-AQEw3bRw" source="_RTDZJOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYnuYNEeWt6-AQEw3bRw" target="_RTD_IeYNEeWt6-AQEw3bRw" source="_RTDZJOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYn-YNEeWt6-AQEw3bRw" target="_RTD_ZeYNEeWt6-AQEw3bRw" source="_RTDZJOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYoOYNEeWt6-AQEw3bRw" target="_RTD9ceYNEeWt6-AQEw3bRw" source="_RTDbHeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYoeYNEeWt6-AQEw3bRw" target="_RTD_5OYNEeWt6-AQEw3bRw" source="_RTD9ceYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYouYNEeWt6-AQEw3bRw" target="_RTEAhuYNEeWt6-AQEw3bRw" source="_RTD_5uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYo-YNEeWt6-AQEw3bRw" target="_RTD_7eYNEeWt6-AQEw3bRw" source="_RTD_5OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYpOYNEeWt6-AQEw3bRw" target="_RTEAj-YNEeWt6-AQEw3bRw" source="_RTD_7eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYpeYNEeWt6-AQEw3bRw" target="_RTEBJuYNEeWt6-AQEw3bRw" source="_RTEAkeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYpuYNEeWt6-AQEw3bRw" target="_RTEAw-YNEeWt6-AQEw3bRw" source="_RTEAkeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYp-YNEeWt6-AQEw3bRw" target="_RTEBEuYNEeWt6-AQEw3bRw" source="_RTEAkeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYqOYNEeWt6-AQEw3bRw" target="_RTEAmOYNEeWt6-AQEw3bRw" source="_RTEAj-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYqeYNEeWt6-AQEw3bRw" target="_RTEBNuYNEeWt6-AQEw3bRw" source="_RTEBHeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTDYquYNEeWt6-AQEw3bRw" target="_RTEBL-YNEeWt6-AQEw3bRw" source="_RTEAmOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYq-YNEeWt6-AQEw3bRw" target="_RTDYteYNEeWt6-AQEw3bRw" source="_RTDZZuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYrOYNEeWt6-AQEw3bRw" target="_RTDYuOYNEeWt6-AQEw3bRw" source="_RTDZ8-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYreYNEeWt6-AQEw3bRw" target="_RTDYu-YNEeWt6-AQEw3bRw" source="_RTDaVeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYruYNEeWt6-AQEw3bRw" target="_RTDYvuYNEeWt6-AQEw3bRw" source="_RTDbHOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYr-YNEeWt6-AQEw3bRw" target="_RTDYweYNEeWt6-AQEw3bRw" source="_RTDZJOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYsOYNEeWt6-AQEw3bRw" target="_RTDYxOYNEeWt6-AQEw3bRw" source="_RTDbYuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYseYNEeWt6-AQEw3bRw" target="_RTDYx-YNEeWt6-AQEw3bRw" source="_RTD_4uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYsuYNEeWt6-AQEw3bRw" target="_RTDYyuYNEeWt6-AQEw3bRw" source="_RTEAfeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYs-YNEeWt6-AQEw3bRw" target="_RTDYzeYNEeWt6-AQEw3bRw" source="_RTEBHeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDYtOYNEeWt6-AQEw3bRw" target="_RTDY0OYNEeWt6-AQEw3bRw" source="_RTEBdOYNEeWt6-AQEw3bRw"/>
          <structuredNodeOutput xmi:id="_RTDYteYNEeWt6-AQEw3bRw" name="Output(reading1)" incoming="_RTDYq-YNEeWt6-AQEw3bRw" outgoing="_RTDYWeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYtuYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYt-YNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYuOYNEeWt6-AQEw3bRw" name="Output(condition1)" incoming="_RTDYrOYNEeWt6-AQEw3bRw" outgoing="_RTDYWuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYueYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYuuYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYu-YNEeWt6-AQEw3bRw" name="Output(condition2)" incoming="_RTDYreYNEeWt6-AQEw3bRw" outgoing="_RTDYW-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYvOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYveYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYvuYNEeWt6-AQEw3bRw" name="Output(condition3)" incoming="_RTDYruYNEeWt6-AQEw3bRw" outgoing="_RTDYXOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYv-YNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYwOYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYweYNEeWt6-AQEw3bRw" name="Output(year)" incoming="_RTDYr-YNEeWt6-AQEw3bRw" outgoing="_RTDYXeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYwuYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYw-YNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYxOYNEeWt6-AQEw3bRw" name="Output(month)" incoming="_RTDYsOYNEeWt6-AQEw3bRw" outgoing="_RTDYXuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYxeYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYxuYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYx-YNEeWt6-AQEw3bRw" name="Output(numDays)" incoming="_RTDYseYNEeWt6-AQEw3bRw" outgoing="_RTDYX-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYyOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYyeYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYyuYNEeWt6-AQEw3bRw" name="Output(switch1)" incoming="_RTDYsuYNEeWt6-AQEw3bRw" outgoing="_RTDYYOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYy-YNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYzOYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDYzeYNEeWt6-AQEw3bRw" name="Output(switch2)" incoming="_RTDYs-YNEeWt6-AQEw3bRw" outgoing="_RTDYYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDYzuYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDYz-YNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RTDY0OYNEeWt6-AQEw3bRw" name="Output(switch3)" incoming="_RTDYtOYNEeWt6-AQEw3bRw" outgoing="_RTDYYuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDY0eYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDY0uYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY0-YNEeWt6-AQEw3bRw" name="ExpressionStatement@18d92e92" outgoing="_RTDYbuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDY1OYNEeWt6-AQEw3bRw" target="_RTDY1eYNEeWt6-AQEw3bRw" source="_RTDY2OYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDY1eYNEeWt6-AQEw3bRw" name="Fork(reading1)@1dc30ba5" incoming="_RTDY1OYNEeWt6-AQEw3bRw" outgoing="_RTDYe-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY1uYNEeWt6-AQEw3bRw" name="RightHandSide@70318ce6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDY1-YNEeWt6-AQEw3bRw" name="Value(0)">
                <result xmi:id="_RTDY2OYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTDY1OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDY2eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDY2uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDY2-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY3OYNEeWt6-AQEw3bRw" name="ExpressionStatement@30addd77" incoming="_RTDYbuYNEeWt6-AQEw3bRw" outgoing="_RTDYb-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDY3eYNEeWt6-AQEw3bRw" target="_RTDY3uYNEeWt6-AQEw3bRw" source="_RTDY4eYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDY3uYNEeWt6-AQEw3bRw" name="Fork(reading)@1b50cd6e" incoming="_RTDY3eYNEeWt6-AQEw3bRw" outgoing="_RTDYd-YNEeWt6-AQEw3bRw _RTDYfuYNEeWt6-AQEw3bRw _RTDYgOYNEeWt6-AQEw3bRw _RTDYguYNEeWt6-AQEw3bRw _RTDYhOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY3-YNEeWt6-AQEw3bRw" name="RightHandSide@55defec4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDY4OYNEeWt6-AQEw3bRw" name="Value(150)">
                <result xmi:id="_RTDY4eYNEeWt6-AQEw3bRw" name="Value(150).result" outgoing="_RTDY3eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDY4uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDY4-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDY5OYNEeWt6-AQEw3bRw" value="150">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY5eYNEeWt6-AQEw3bRw" name="ExpressionStatement@49f4d5a" incoming="_RTDYb-YNEeWt6-AQEw3bRw" outgoing="_RTDYcOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDY5uYNEeWt6-AQEw3bRw" target="_RTDY5-YNEeWt6-AQEw3bRw" source="_RTDY6uYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDY5-YNEeWt6-AQEw3bRw" name="Fork(threshold)@71e10a67" incoming="_RTDY5uYNEeWt6-AQEw3bRw" outgoing="_RTDYeOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY6OYNEeWt6-AQEw3bRw" name="RightHandSide@6d722a99">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDY6eYNEeWt6-AQEw3bRw" name="Value(10)">
                <result xmi:id="_RTDY6uYNEeWt6-AQEw3bRw" name="Value(10).result" outgoing="_RTDY5uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDY6-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDY7OYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDY7eYNEeWt6-AQEw3bRw" value="10">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY7uYNEeWt6-AQEw3bRw" name="ExpressionStatement@360529f0" incoming="_RTDYcOYNEeWt6-AQEw3bRw" outgoing="_RTDYceYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDY7-YNEeWt6-AQEw3bRw" target="_RTDY8OYNEeWt6-AQEw3bRw" source="_RTDY8-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDY8OYNEeWt6-AQEw3bRw" name="Fork(safeLimit)@3519594" incoming="_RTDY7-YNEeWt6-AQEw3bRw" outgoing="_RTDYf-YNEeWt6-AQEw3bRw _RTDYgeYNEeWt6-AQEw3bRw _RTDYiuYNEeWt6-AQEw3bRw _RTDYkOYNEeWt6-AQEw3bRw _RTDYkuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY8eYNEeWt6-AQEw3bRw" name="RightHandSide@6133293f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDY8uYNEeWt6-AQEw3bRw" name="Value(100)">
                <result xmi:id="_RTDY8-YNEeWt6-AQEw3bRw" name="Value(100).result" outgoing="_RTDY7-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDY9OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDY9eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDY9uYNEeWt6-AQEw3bRw" value="100">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY9-YNEeWt6-AQEw3bRw" name="ExpressionStatement@434ee9d7" incoming="_RTDYceYNEeWt6-AQEw3bRw" outgoing="_RTDYcuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDY-OYNEeWt6-AQEw3bRw" target="_RTDY-eYNEeWt6-AQEw3bRw" source="_RTDY_OYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDY-eYNEeWt6-AQEw3bRw" name="Fork(criticalLimit)@193e811d" incoming="_RTDY-OYNEeWt6-AQEw3bRw" outgoing="_RTDYg-YNEeWt6-AQEw3bRw _RTDYheYNEeWt6-AQEw3bRw _RTDYjOYNEeWt6-AQEw3bRw _RTDYlOYNEeWt6-AQEw3bRw _RTDYluYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDY-uYNEeWt6-AQEw3bRw" name="RightHandSide@568ea3dd">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDY--YNEeWt6-AQEw3bRw" name="Value(200)">
                <result xmi:id="_RTDY_OYNEeWt6-AQEw3bRw" name="Value(200).result" outgoing="_RTDY-OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDY_eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDY_uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDY_-YNEeWt6-AQEw3bRw" value="200">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZAOYNEeWt6-AQEw3bRw" name="ExpressionStatement@2afc96fa" incoming="_RTDYcuYNEeWt6-AQEw3bRw" outgoing="_RTDYc-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZAeYNEeWt6-AQEw3bRw" target="_RTDZAuYNEeWt6-AQEw3bRw" source="_RTDZBeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDZAuYNEeWt6-AQEw3bRw" name="Fork(errorLimit)@48f2437b" incoming="_RTDZAeYNEeWt6-AQEw3bRw" outgoing="_RTDYmOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZA-YNEeWt6-AQEw3bRw" name="RightHandSide@192c65a7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZBOYNEeWt6-AQEw3bRw" name="Value(1000)">
                <result xmi:id="_RTDZBeYNEeWt6-AQEw3bRw" name="Value(1000).result" outgoing="_RTDZAeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZBuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZB-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDZCOYNEeWt6-AQEw3bRw" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZCeYNEeWt6-AQEw3bRw" name="ExpressionStatement@63965ce4" incoming="_RTDYc-YNEeWt6-AQEw3bRw" outgoing="_RTDYdOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZCuYNEeWt6-AQEw3bRw" target="_RTDZC-YNEeWt6-AQEw3bRw" source="_RTDZDuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDZC-YNEeWt6-AQEw3bRw" name="Fork(sensorId)@1b74b777" incoming="_RTDZCuYNEeWt6-AQEw3bRw" outgoing="_RTDYeeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZDOYNEeWt6-AQEw3bRw" name="RightHandSide@bb8f3b6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZDeYNEeWt6-AQEw3bRw" name="Value(1)">
                <result xmi:id="_RTDZDuYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTDZCuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZD-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZEOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDZEeYNEeWt6-AQEw3bRw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZEuYNEeWt6-AQEw3bRw" name="ExpressionStatement@2e37ab80" incoming="_RTDYdOYNEeWt6-AQEw3bRw" outgoing="_RTDYdeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZE-YNEeWt6-AQEw3bRw" target="_RTDZFOYNEeWt6-AQEw3bRw" source="_RTDZGOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDZFOYNEeWt6-AQEw3bRw" name="Fork(monitor)@4d9b4c51" incoming="_RTDZE-YNEeWt6-AQEw3bRw" outgoing="_RTDYeuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZFeYNEeWt6-AQEw3bRw" name="RightHandSide@eaf81a5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZFuYNEeWt6-AQEw3bRw" target="_RTDZG-YNEeWt6-AQEw3bRw" source="_RTDZH-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RTDZF-YNEeWt6-AQEw3bRw" name="Call(Monitor)" operation="_RTECh-YNEeWt6-AQEw3bRw">
                <result xmi:id="_RTDZGOYNEeWt6-AQEw3bRw" name="Call(Monitor).result()" outgoing="_RTDZE-YNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZGeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZGuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <target xmi:id="_RTDZG-YNEeWt6-AQEw3bRw" name="Call(Monitor).target" incoming="_RTDZFuYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZHOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZHeYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_RTDZHuYNEeWt6-AQEw3bRw" name="Create(Monitor)" classifier="_RTEB7OYNEeWt6-AQEw3bRw">
                <result xmi:id="_RTDZH-YNEeWt6-AQEw3bRw" name="Create(Monitor).result" outgoing="_RTDZFuYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZIOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZIeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZIuYNEeWt6-AQEw3bRw" name="ExpressionStatement@698f898" incoming="_RTDYdeYNEeWt6-AQEw3bRw" outgoing="_RTDYfOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZI-YNEeWt6-AQEw3bRw" target="_RTDZJOYNEeWt6-AQEw3bRw" source="_RTDZJ-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDZJOYNEeWt6-AQEw3bRw" name="Fork(year)@2bfeb945" incoming="_RTDZI-YNEeWt6-AQEw3bRw" outgoing="_RTDYmuYNEeWt6-AQEw3bRw _RTDYneYNEeWt6-AQEw3bRw _RTDYnuYNEeWt6-AQEw3bRw _RTDYn-YNEeWt6-AQEw3bRw _RTDYr-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZJeYNEeWt6-AQEw3bRw" name="RightHandSide@60357793">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZJuYNEeWt6-AQEw3bRw" name="Value(2012)">
                <result xmi:id="_RTDZJ-YNEeWt6-AQEw3bRw" name="Value(2012).result" outgoing="_RTDZI-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZKOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZKeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDZKuYNEeWt6-AQEw3bRw" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_RTDZK-YNEeWt6-AQEw3bRw" name="IfStatement@36059392" incoming="_RTDYfOYNEeWt6-AQEw3bRw" outgoing="_RTDYhuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZLOYNEeWt6-AQEw3bRw" target="_RTDZTuYNEeWt6-AQEw3bRw" source="_RTDZL-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZLeYNEeWt6-AQEw3bRw" name="Test(Call(>).result(result))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZLuYNEeWt6-AQEw3bRw" target="_RTDZMuYNEeWt6-AQEw3bRw" source="_RTDZL-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDZL-YNEeWt6-AQEw3bRw" name="Fork(reading1)@f0c401f" incoming="_RTDYd-YNEeWt6-AQEw3bRw" outgoing="_RTDZLuYNEeWt6-AQEw3bRw _RTDZLOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZMOYNEeWt6-AQEw3bRw" name="RightHandSide@6d45baf0"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDZMeYNEeWt6-AQEw3bRw" name="Call(>)">
                <argument xmi:id="_RTDZMuYNEeWt6-AQEw3bRw" name="Call(>).argument(x)" incoming="_RTDZLuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZM-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZNOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDZNeYNEeWt6-AQEw3bRw" name="Call(>).argument(y)" incoming="_RTDYeOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZNuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZN-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDZOOYNEeWt6-AQEw3bRw" name="Call(>).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZOeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZOuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZO-YNEeWt6-AQEw3bRw" name="ExpressionStatement@2cc7d2ff">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDZPOYNEeWt6-AQEw3bRw" target="_RTDZPeYNEeWt6-AQEw3bRw" source="_RTDZS-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_RTDZPeYNEeWt6-AQEw3bRw" name="Collect(Call(raiseAlarm))" incoming="_RTDZPOYNEeWt6-AQEw3bRw" mode="parallel" inputElement="_RTDZSuYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZPuYNEeWt6-AQEw3bRw" target="_RTDZROYNEeWt6-AQEw3bRw" source="_RTDZQOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZP-YNEeWt6-AQEw3bRw" target="_RTDZR-YNEeWt6-AQEw3bRw" source="_RTDZSuYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTDZQOYNEeWt6-AQEw3bRw" name="Collect(Call(raiseAlarm)).input(Fork(sensorId)@1b74b777)" incoming="_RTDYeeYNEeWt6-AQEw3bRw" outgoing="_RTDZPuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZQeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZQuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_RTDZQ-YNEeWt6-AQEw3bRw" name="Call(raiseAlarm)" operation="_RTECguYNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RTDZROYNEeWt6-AQEw3bRw" name="Call(raiseAlarm).argument(sensorId)" incoming="_RTDZPuYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZReYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZRuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <target xmi:id="_RTDZR-YNEeWt6-AQEw3bRw" name="Call(raiseAlarm).target" incoming="_RTDZP-YNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZSOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZSeYNEeWt6-AQEw3bRw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_RTDZSuYNEeWt6-AQEw3bRw" name="Collect(Call(raiseAlarm)).inputElement" incoming="_RTDYeuYNEeWt6-AQEw3bRw" outgoing="_RTDZP-YNEeWt6-AQEw3bRw" regionAsInput="_RTDZPeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZS-YNEeWt6-AQEw3bRw" name="Feature(Fork(monitor)@4d9b4c51)" outgoing="_RTDZPOYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZTOYNEeWt6-AQEw3bRw" name="Passthru(Fork(reading1)@f0c401f)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZTeYNEeWt6-AQEw3bRw" target="_RTDZUeYNEeWt6-AQEw3bRw" source="_RTDZTuYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDZTuYNEeWt6-AQEw3bRw" name="Passthru(Fork(reading1)@f0c401f).input" incoming="_RTDZLOYNEeWt6-AQEw3bRw" outgoing="_RTDZTeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZT-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZUOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDZUeYNEeWt6-AQEw3bRw" name="Passthru(Fork(reading1)@f0c401f).output" incoming="_RTDZTeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZUuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZU-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZVOYNEeWt6-AQEw3bRw" name="Value(true)">
              <result xmi:id="_RTDZVeYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZVuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZV-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDZWOYNEeWt6-AQEw3bRw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZWeYNEeWt6-AQEw3bRw" name="Passthru(Fork(reading1)@1dc30ba5)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZWuYNEeWt6-AQEw3bRw" target="_RTDZXuYNEeWt6-AQEw3bRw" source="_RTDZW-YNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDZW-YNEeWt6-AQEw3bRw" name="Passthru(Fork(reading1)@1dc30ba5).input" incoming="_RTDYe-YNEeWt6-AQEw3bRw" outgoing="_RTDZWuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZXOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZXeYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDZXuYNEeWt6-AQEw3bRw" name="Passthru(Fork(reading1)@1dc30ba5).output" incoming="_RTDZWuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZX-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZYOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_RTDZYeYNEeWt6-AQEw3bRw" body="_RTDZO-YNEeWt6-AQEw3bRw _RTDZTOYNEeWt6-AQEw3bRw" bodyOutput="_RTDZUeYNEeWt6-AQEw3bRw" decider="_RTDZOOYNEeWt6-AQEw3bRw" successorClause="_RTDZYuYNEeWt6-AQEw3bRw" test="_RTDZLeYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDZYuYNEeWt6-AQEw3bRw" body="_RTDZWeYNEeWt6-AQEw3bRw" bodyOutput="_RTDZXuYNEeWt6-AQEw3bRw" decider="_RTDZVeYNEeWt6-AQEw3bRw" predecessorClause="_RTDZYeYNEeWt6-AQEw3bRw" test="_RTDZVOYNEeWt6-AQEw3bRw"/>
            <result xmi:id="_RTDZY-YNEeWt6-AQEw3bRw" name="IfStatement@36059392.result(reading1)" outgoing="_RTDYduYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZZOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZZeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDZZuYNEeWt6-AQEw3bRw" name="Fork(reading1)" incoming="_RTDYduYNEeWt6-AQEw3bRw" outgoing="_RTDYq-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_RTDZZ-YNEeWt6-AQEw3bRw" name="IfStatement@6d856efd" incoming="_RTDYhuYNEeWt6-AQEw3bRw" outgoing="_RTDYh-YNEeWt6-AQEw3bRw" isAssured="true" isDeterminate="true">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZaOYNEeWt6-AQEw3bRw" target="_RTDZguYNEeWt6-AQEw3bRw" source="_RTDZeeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZaeYNEeWt6-AQEw3bRw" target="_RTDZkeYNEeWt6-AQEw3bRw" source="_RTDZueYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZauYNEeWt6-AQEw3bRw" target="_RTDZxeYNEeWt6-AQEw3bRw" source="_RTDZvOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZa-YNEeWt6-AQEw3bRw" target="_RTDZ4eYNEeWt6-AQEw3bRw" source="_RTDZ2OYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZbOYNEeWt6-AQEw3bRw" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDZbeYNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                <argument xmi:id="_RTDZbuYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RTDYfuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZb-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZcOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDZceYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RTDYf-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZcuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZc-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDZdOYNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZdeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZduYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZd-YNEeWt6-AQEw3bRw" name="ExpressionStatement@2043ba8b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZeOYNEeWt6-AQEw3bRw" target="_RTDZeeYNEeWt6-AQEw3bRw" source="_RTDZfOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDZeeYNEeWt6-AQEw3bRw" name="Fork(condition1)@7e899ade" incoming="_RTDZeOYNEeWt6-AQEw3bRw" outgoing="_RTDZaOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZeuYNEeWt6-AQEw3bRw" name="RightHandSide@7c16a5b8">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZe-YNEeWt6-AQEw3bRw" name="Value(normal)">
                  <result xmi:id="_RTDZfOYNEeWt6-AQEw3bRw" name="Value(normal).result" outgoing="_RTDZeOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZfeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZfuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDZf-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjeYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZgOYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@7e899ade)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZgeYNEeWt6-AQEw3bRw" target="_RTDZheYNEeWt6-AQEw3bRw" source="_RTDZguYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDZguYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@7e899ade).input" incoming="_RTDZaOYNEeWt6-AQEw3bRw" outgoing="_RTDZgeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZg-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZhOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDZheYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@7e899ade).output" incoming="_RTDZgeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZhuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZh-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZiOYNEeWt6-AQEw3bRw" name="Test(Merge(ConditionalLogicalExpression@65f54aa2.result))">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDZieYNEeWt6-AQEw3bRw" target="_RTDZuOYNEeWt6-AQEw3bRw" source="_RTDZt-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZiuYNEeWt6-AQEw3bRw" target="_RTDZuOYNEeWt6-AQEw3bRw" source="_RTDZm-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDZi-YNEeWt6-AQEw3bRw" target="_RTDZnuYNEeWt6-AQEw3bRw" source="_RTDZuOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDZjOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDZjeYNEeWt6-AQEw3bRw" target="_RTDZreYNEeWt6-AQEw3bRw" source="_RTDZuOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDZjuYNEeWt6-AQEw3bRw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZj-YNEeWt6-AQEw3bRw" target="_RTDZueYNEeWt6-AQEw3bRw" source="_RTDZoOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZkOYNEeWt6-AQEw3bRw" target="_RTDZueYNEeWt6-AQEw3bRw" source="_RTDZr-YNEeWt6-AQEw3bRw"/>
              <structuredNodeOutput xmi:id="_RTDZkeYNEeWt6-AQEw3bRw" name="Decider(Merge(ConditionalLogicalExpression@65f54aa2.result))" incoming="_RTDZaeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZkuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZk-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDZlOYNEeWt6-AQEw3bRw" name="Call(>)">
                <argument xmi:id="_RTDZleYNEeWt6-AQEw3bRw" name="Call(>).argument(x)" incoming="_RTDYgOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZluYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZl-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDZmOYNEeWt6-AQEw3bRw" name="Call(>).argument(y)" incoming="_RTDYgeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZmeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZmuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDZm-YNEeWt6-AQEw3bRw" name="Call(>).result(result)" outgoing="_RTDZiuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZnOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZneYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZnuYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65f54aa2.operand2" incoming="_RTDZi-YNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZn-YNEeWt6-AQEw3bRw" target="_RTDZoOYNEeWt6-AQEw3bRw" source="_RTDZquYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTDZoOYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65f54aa2.operand2.result" incoming="_RTDZn-YNEeWt6-AQEw3bRw" outgoing="_RTDZj-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZoeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZouYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDZo-YNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                  <argument xmi:id="_RTDZpOYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RTDYguYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZpeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZpuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTDZp-YNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RTDYg-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZqOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZqeYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTDZquYNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)" outgoing="_RTDZn-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZq-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZrOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZreYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65f54aa2.operand3" incoming="_RTDZjeYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZruYNEeWt6-AQEw3bRw" target="_RTDZr-YNEeWt6-AQEw3bRw" source="_RTDZs-YNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTDZr-YNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65f54aa2.operand3.result" incoming="_RTDZruYNEeWt6-AQEw3bRw" outgoing="_RTDZkOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZsOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZseYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZsuYNEeWt6-AQEw3bRw" name="Value(false)">
                  <result xmi:id="_RTDZs-YNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RTDZruYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZtOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZteYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDZtuYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RTDZt-YNEeWt6-AQEw3bRw" name="Initial(ConditionalLogicalExpression@65f54aa2)" outgoing="_RTDZieYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RTDZuOYNEeWt6-AQEw3bRw" name="Decision(ConditionalLogicalExpression@65f54aa2)" incoming="_RTDZieYNEeWt6-AQEw3bRw _RTDZiuYNEeWt6-AQEw3bRw" outgoing="_RTDZi-YNEeWt6-AQEw3bRw _RTDZjeYNEeWt6-AQEw3bRw" decisionInputFlow="_RTDZiuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RTDZueYNEeWt6-AQEw3bRw" name="Merge(ConditionalLogicalExpression@65f54aa2.result)" incoming="_RTDZj-YNEeWt6-AQEw3bRw _RTDZkOYNEeWt6-AQEw3bRw" outgoing="_RTDZaeYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZuuYNEeWt6-AQEw3bRw" name="ExpressionStatement@5ff8a691">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZu-YNEeWt6-AQEw3bRw" target="_RTDZvOYNEeWt6-AQEw3bRw" source="_RTDZv-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDZvOYNEeWt6-AQEw3bRw" name="Fork(condition1)@14389be6" incoming="_RTDZu-YNEeWt6-AQEw3bRw" outgoing="_RTDZauYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZveYNEeWt6-AQEw3bRw" name="RightHandSide@10832369">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZvuYNEeWt6-AQEw3bRw" name="Value(alert)">
                  <result xmi:id="_RTDZv-YNEeWt6-AQEw3bRw" name="Value(alert).result" outgoing="_RTDZu-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZwOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZweYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDZwuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjuYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZw-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@14389be6)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZxOYNEeWt6-AQEw3bRw" target="_RTDZyOYNEeWt6-AQEw3bRw" source="_RTDZxeYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDZxeYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@14389be6).input" incoming="_RTDZauYNEeWt6-AQEw3bRw" outgoing="_RTDZxOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZxuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZx-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDZyOYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@14389be6).output" incoming="_RTDZxOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZyeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZyuYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZy-YNEeWt6-AQEw3bRw" name="Test(Call(>).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDZzOYNEeWt6-AQEw3bRw" name="Call(>)">
                <argument xmi:id="_RTDZzeYNEeWt6-AQEw3bRw" name="Call(>).argument(x)" incoming="_RTDYhOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZzuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZz-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDZ0OYNEeWt6-AQEw3bRw" name="Call(>).argument(y)" incoming="_RTDYheYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ0eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ0uYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDZ0-YNEeWt6-AQEw3bRw" name="Call(>).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ1OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ1eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZ1uYNEeWt6-AQEw3bRw" name="ExpressionStatement@2b6b2f7a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZ1-YNEeWt6-AQEw3bRw" target="_RTDZ2OYNEeWt6-AQEw3bRw" source="_RTDZ2-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDZ2OYNEeWt6-AQEw3bRw" name="Fork(condition1)@40da2074" incoming="_RTDZ1-YNEeWt6-AQEw3bRw" outgoing="_RTDZa-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZ2eYNEeWt6-AQEw3bRw" name="RightHandSide@3088c0ef">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZ2uYNEeWt6-AQEw3bRw" name="Value(critical)">
                  <result xmi:id="_RTDZ2-YNEeWt6-AQEw3bRw" name="Value(critical).result" outgoing="_RTDZ1-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ3OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ3eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDZ3uYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECj-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZ3-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@40da2074)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZ4OYNEeWt6-AQEw3bRw" target="_RTDZ5OYNEeWt6-AQEw3bRw" source="_RTDZ4eYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDZ4eYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@40da2074).input" incoming="_RTDZa-YNEeWt6-AQEw3bRw" outgoing="_RTDZ4OYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ4uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ4-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDZ5OYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition1)@40da2074).output" incoming="_RTDZ4OYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ5eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ5uYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZ5-YNEeWt6-AQEw3bRw" name="Value(true)">
              <result xmi:id="_RTDZ6OYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ6eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ6uYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDZ6-YNEeWt6-AQEw3bRw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <clause xmi:id="_RTDZ7OYNEeWt6-AQEw3bRw" body="_RTDZd-YNEeWt6-AQEw3bRw _RTDZgOYNEeWt6-AQEw3bRw" bodyOutput="_RTDZheYNEeWt6-AQEw3bRw" decider="_RTDZdOYNEeWt6-AQEw3bRw" successorClause="_RTDZ7-YNEeWt6-AQEw3bRw" test="_RTDZbOYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDZ7eYNEeWt6-AQEw3bRw" body="_RTDZuuYNEeWt6-AQEw3bRw _RTDZw-YNEeWt6-AQEw3bRw" bodyOutput="_RTDZyOYNEeWt6-AQEw3bRw" decider="_RTDZkeYNEeWt6-AQEw3bRw" successorClause="_RTDZ7-YNEeWt6-AQEw3bRw" test="_RTDZiOYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDZ7uYNEeWt6-AQEw3bRw" body="_RTDZ1uYNEeWt6-AQEw3bRw _RTDZ3-YNEeWt6-AQEw3bRw" bodyOutput="_RTDZ5OYNEeWt6-AQEw3bRw" decider="_RTDZ0-YNEeWt6-AQEw3bRw" successorClause="_RTDZ7-YNEeWt6-AQEw3bRw" test="_RTDZy-YNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDZ7-YNEeWt6-AQEw3bRw" decider="_RTDZ6OYNEeWt6-AQEw3bRw" predecessorClause="_RTDZ7OYNEeWt6-AQEw3bRw _RTDZ7eYNEeWt6-AQEw3bRw _RTDZ7uYNEeWt6-AQEw3bRw" test="_RTDZ5-YNEeWt6-AQEw3bRw"/>
            <result xmi:id="_RTDZ8OYNEeWt6-AQEw3bRw" name="IfStatement@6d856efd.result(condition1)" outgoing="_RTDYfeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ8eYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ8uYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDZ8-YNEeWt6-AQEw3bRw" name="Fork(condition1)" incoming="_RTDYfeYNEeWt6-AQEw3bRw" outgoing="_RTDYrOYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZ9OYNEeWt6-AQEw3bRw" name="ExpressionStatement@6457487c" incoming="_RTDYh-YNEeWt6-AQEw3bRw" outgoing="_RTDYjeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZ9eYNEeWt6-AQEw3bRw" target="_RTDZ9uYNEeWt6-AQEw3bRw" source="_RTDZ-eYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDZ9uYNEeWt6-AQEw3bRw" name="Fork(reading)@5e54cabe" incoming="_RTDZ9eYNEeWt6-AQEw3bRw" outgoing="_RTDYieYNEeWt6-AQEw3bRw _RTDYi-YNEeWt6-AQEw3bRw _RTDYj-YNEeWt6-AQEw3bRw _RTDYkeYNEeWt6-AQEw3bRw _RTDYk-YNEeWt6-AQEw3bRw _RTDYleYNEeWt6-AQEw3bRw _RTDYl-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDZ9-YNEeWt6-AQEw3bRw" name="RightHandSide@10cab054">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDZ-OYNEeWt6-AQEw3bRw" name="Value(500)">
                <result xmi:id="_RTDZ-eYNEeWt6-AQEw3bRw" name="Value(500).result" outgoing="_RTDZ9eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDZ-uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDZ--YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTDZ_OYNEeWt6-AQEw3bRw" value="500">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_RTDZ_eYNEeWt6-AQEw3bRw" name="IfStatement@3ffc9ff" incoming="_RTDYjeYNEeWt6-AQEw3bRw" outgoing="_RTDYmeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZ_uYNEeWt6-AQEw3bRw" target="_RTDaF-YNEeWt6-AQEw3bRw" source="_RTDaDuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDZ_-YNEeWt6-AQEw3bRw" target="_RTDaM-YNEeWt6-AQEw3bRw" source="_RTDaKuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaAOYNEeWt6-AQEw3bRw" target="_RTDaSeYNEeWt6-AQEw3bRw" source="_RTDaQOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaAeYNEeWt6-AQEw3bRw" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDaAuYNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                <argument xmi:id="_RTDaA-YNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RTDYieYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaBOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaBeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDaBuYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RTDYiuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaB-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaCOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDaCeYNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaCuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaC-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaDOYNEeWt6-AQEw3bRw" name="ExpressionStatement@d54dd1f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaDeYNEeWt6-AQEw3bRw" target="_RTDaDuYNEeWt6-AQEw3bRw" source="_RTDaEeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDaDuYNEeWt6-AQEw3bRw" name="Fork(condition2)@532b5d0" incoming="_RTDaDeYNEeWt6-AQEw3bRw" outgoing="_RTDZ_uYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaD-YNEeWt6-AQEw3bRw" name="RightHandSide@443e6d5a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDaEOYNEeWt6-AQEw3bRw" name="Value(normal)">
                  <result xmi:id="_RTDaEeYNEeWt6-AQEw3bRw" name="Value(normal).result" outgoing="_RTDaDeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaEuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaE-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDaFOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjeYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaFeYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@532b5d0)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaFuYNEeWt6-AQEw3bRw" target="_RTDaGuYNEeWt6-AQEw3bRw" source="_RTDaF-YNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDaF-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@532b5d0).input" incoming="_RTDZ_uYNEeWt6-AQEw3bRw" outgoing="_RTDaFuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaGOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaGeYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDaGuYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@532b5d0).output" incoming="_RTDaFuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaG-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaHOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaHeYNEeWt6-AQEw3bRw" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDaHuYNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                <argument xmi:id="_RTDaH-YNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RTDYi-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaIOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaIeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDaIuYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RTDYjOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaI-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaJOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDaJeYNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaJuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaJ-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaKOYNEeWt6-AQEw3bRw" name="ExpressionStatement@5bab918">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaKeYNEeWt6-AQEw3bRw" target="_RTDaKuYNEeWt6-AQEw3bRw" source="_RTDaLeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDaKuYNEeWt6-AQEw3bRw" name="Fork(condition2)@33c79236" incoming="_RTDaKeYNEeWt6-AQEw3bRw" outgoing="_RTDZ_-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaK-YNEeWt6-AQEw3bRw" name="RightHandSide@735031c8">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDaLOYNEeWt6-AQEw3bRw" name="Value(alert)">
                  <result xmi:id="_RTDaLeYNEeWt6-AQEw3bRw" name="Value(alert).result" outgoing="_RTDaKeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaLuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaL-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDaMOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjuYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaMeYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@33c79236)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaMuYNEeWt6-AQEw3bRw" target="_RTDaNuYNEeWt6-AQEw3bRw" source="_RTDaM-YNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDaM-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@33c79236).input" incoming="_RTDZ_-YNEeWt6-AQEw3bRw" outgoing="_RTDaMuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaNOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaNeYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDaNuYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@33c79236).output" incoming="_RTDaMuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaN-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaOOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDaOeYNEeWt6-AQEw3bRw" name="Value(true)">
              <result xmi:id="_RTDaOuYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaO-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaPOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDaPeYNEeWt6-AQEw3bRw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaPuYNEeWt6-AQEw3bRw" name="ExpressionStatement@5219045">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaP-YNEeWt6-AQEw3bRw" target="_RTDaQOYNEeWt6-AQEw3bRw" source="_RTDaQ-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDaQOYNEeWt6-AQEw3bRw" name="Fork(condition2)@d1d68e3" incoming="_RTDaP-YNEeWt6-AQEw3bRw" outgoing="_RTDaAOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaQeYNEeWt6-AQEw3bRw" name="RightHandSide@5d115cf">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDaQuYNEeWt6-AQEw3bRw" name="Value(critical)">
                  <result xmi:id="_RTDaQ-YNEeWt6-AQEw3bRw" name="Value(critical).result" outgoing="_RTDaP-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaROYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaReYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDaRuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECj-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaR-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@d1d68e3)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaSOYNEeWt6-AQEw3bRw" target="_RTDaTOYNEeWt6-AQEw3bRw" source="_RTDaSeYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDaSeYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@d1d68e3).input" incoming="_RTDaAOYNEeWt6-AQEw3bRw" outgoing="_RTDaSOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaSuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaS-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDaTOYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition2)@d1d68e3).output" incoming="_RTDaSOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaTeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaTuYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_RTDaT-YNEeWt6-AQEw3bRw" body="_RTDaDOYNEeWt6-AQEw3bRw _RTDaFeYNEeWt6-AQEw3bRw" bodyOutput="_RTDaGuYNEeWt6-AQEw3bRw" decider="_RTDaCeYNEeWt6-AQEw3bRw" successorClause="_RTDaUOYNEeWt6-AQEw3bRw" test="_RTDaAeYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDaUOYNEeWt6-AQEw3bRw" body="_RTDaKOYNEeWt6-AQEw3bRw _RTDaMeYNEeWt6-AQEw3bRw" bodyOutput="_RTDaNuYNEeWt6-AQEw3bRw" decider="_RTDaJeYNEeWt6-AQEw3bRw" predecessorClause="_RTDaT-YNEeWt6-AQEw3bRw" successorClause="_RTDaUeYNEeWt6-AQEw3bRw" test="_RTDaHeYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDaUeYNEeWt6-AQEw3bRw" body="_RTDaPuYNEeWt6-AQEw3bRw _RTDaR-YNEeWt6-AQEw3bRw" bodyOutput="_RTDaTOYNEeWt6-AQEw3bRw" decider="_RTDaOuYNEeWt6-AQEw3bRw" predecessorClause="_RTDaUOYNEeWt6-AQEw3bRw" test="_RTDaOeYNEeWt6-AQEw3bRw"/>
            <result xmi:id="_RTDaUuYNEeWt6-AQEw3bRw" name="IfStatement@3ffc9ff.result(condition2)" outgoing="_RTDYiOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaU-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaVOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDaVeYNEeWt6-AQEw3bRw" name="Fork(condition2)" incoming="_RTDYiOYNEeWt6-AQEw3bRw" outgoing="_RTDYreYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_RTDaVuYNEeWt6-AQEw3bRw" name="IfStatement@162372a4" incoming="_RTDYmeYNEeWt6-AQEw3bRw" outgoing="_RTDYm-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaV-YNEeWt6-AQEw3bRw" target="_RTDac-YNEeWt6-AQEw3bRw" source="_RTDaauYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaWOYNEeWt6-AQEw3bRw" target="_RTDaguYNEeWt6-AQEw3bRw" source="_RTDaquYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaWeYNEeWt6-AQEw3bRw" target="_RTDatuYNEeWt6-AQEw3bRw" source="_RTDareYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaWuYNEeWt6-AQEw3bRw" target="_RTDaxeYNEeWt6-AQEw3bRw" source="_RTDa7eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaW-YNEeWt6-AQEw3bRw" target="_RTDa-eYNEeWt6-AQEw3bRw" source="_RTDa8OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaXOYNEeWt6-AQEw3bRw" target="_RTDbD-YNEeWt6-AQEw3bRw" source="_RTDbBuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaXeYNEeWt6-AQEw3bRw" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDaXuYNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                <argument xmi:id="_RTDaX-YNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RTDYj-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaYOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaYeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDaYuYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RTDYkOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaY-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaZOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDaZeYNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaZuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaZ-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaaOYNEeWt6-AQEw3bRw" name="ExpressionStatement@4c51704d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaaeYNEeWt6-AQEw3bRw" target="_RTDaauYNEeWt6-AQEw3bRw" source="_RTDabeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDaauYNEeWt6-AQEw3bRw" name="Fork(condition3)@1407fa5a" incoming="_RTDaaeYNEeWt6-AQEw3bRw" outgoing="_RTDaV-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaa-YNEeWt6-AQEw3bRw" name="RightHandSide@17c534fc">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDabOYNEeWt6-AQEw3bRw" name="Value(normal)">
                  <result xmi:id="_RTDabeYNEeWt6-AQEw3bRw" name="Value(normal).result" outgoing="_RTDaaeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDabuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDab-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDacOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjeYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaceYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@1407fa5a)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDacuYNEeWt6-AQEw3bRw" target="_RTDaduYNEeWt6-AQEw3bRw" source="_RTDac-YNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDac-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@1407fa5a).input" incoming="_RTDaV-YNEeWt6-AQEw3bRw" outgoing="_RTDacuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDadOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDadeYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDaduYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@1407fa5a).output" incoming="_RTDacuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDad-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaeOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaeeYNEeWt6-AQEw3bRw" name="Test(Merge(ConditionalLogicalExpression@4ecb5911.result))">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDaeuYNEeWt6-AQEw3bRw" target="_RTDaqeYNEeWt6-AQEw3bRw" source="_RTDaqOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDae-YNEeWt6-AQEw3bRw" target="_RTDaqeYNEeWt6-AQEw3bRw" source="_RTDajOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDafOYNEeWt6-AQEw3bRw" target="_RTDaj-YNEeWt6-AQEw3bRw" source="_RTDaqeYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDafeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDafuYNEeWt6-AQEw3bRw" target="_RTDanuYNEeWt6-AQEw3bRw" source="_RTDaqeYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDaf-YNEeWt6-AQEw3bRw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDagOYNEeWt6-AQEw3bRw" target="_RTDaquYNEeWt6-AQEw3bRw" source="_RTDakeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDageYNEeWt6-AQEw3bRw" target="_RTDaquYNEeWt6-AQEw3bRw" source="_RTDaoOYNEeWt6-AQEw3bRw"/>
              <structuredNodeOutput xmi:id="_RTDaguYNEeWt6-AQEw3bRw" name="Decider(Merge(ConditionalLogicalExpression@4ecb5911.result))" incoming="_RTDaWOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDag-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDahOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDaheYNEeWt6-AQEw3bRw" name="Call(>)">
                <argument xmi:id="_RTDahuYNEeWt6-AQEw3bRw" name="Call(>).argument(x)" incoming="_RTDYkeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDah-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaiOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDaieYNEeWt6-AQEw3bRw" name="Call(>).argument(y)" incoming="_RTDYkuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaiuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDai-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDajOYNEeWt6-AQEw3bRw" name="Call(>).result(result)" outgoing="_RTDae-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDajeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDajuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaj-YNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@4ecb5911.operand2" incoming="_RTDafOYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDakOYNEeWt6-AQEw3bRw" target="_RTDakeYNEeWt6-AQEw3bRw" source="_RTDam-YNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTDakeYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@4ecb5911.operand2.result" incoming="_RTDakOYNEeWt6-AQEw3bRw" outgoing="_RTDagOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDakuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDak-YNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDalOYNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                  <argument xmi:id="_RTDaleYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RTDYk-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaluYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDal-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTDamOYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RTDYlOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDameYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDamuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTDam-YNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)" outgoing="_RTDakOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDanOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaneYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDanuYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@4ecb5911.operand3" incoming="_RTDafuYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDan-YNEeWt6-AQEw3bRw" target="_RTDaoOYNEeWt6-AQEw3bRw" source="_RTDapOYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTDaoOYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@4ecb5911.operand3.result" incoming="_RTDan-YNEeWt6-AQEw3bRw" outgoing="_RTDageYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaoeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDaouYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDao-YNEeWt6-AQEw3bRw" name="Value(false)">
                  <result xmi:id="_RTDapOYNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RTDan-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDapeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDapuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDap-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RTDaqOYNEeWt6-AQEw3bRw" name="Initial(ConditionalLogicalExpression@4ecb5911)" outgoing="_RTDaeuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RTDaqeYNEeWt6-AQEw3bRw" name="Decision(ConditionalLogicalExpression@4ecb5911)" incoming="_RTDaeuYNEeWt6-AQEw3bRw _RTDae-YNEeWt6-AQEw3bRw" outgoing="_RTDafOYNEeWt6-AQEw3bRw _RTDafuYNEeWt6-AQEw3bRw" decisionInputFlow="_RTDae-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RTDaquYNEeWt6-AQEw3bRw" name="Merge(ConditionalLogicalExpression@4ecb5911.result)" incoming="_RTDagOYNEeWt6-AQEw3bRw _RTDageYNEeWt6-AQEw3bRw" outgoing="_RTDaWOYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaq-YNEeWt6-AQEw3bRw" name="ExpressionStatement@1617568c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDarOYNEeWt6-AQEw3bRw" target="_RTDareYNEeWt6-AQEw3bRw" source="_RTDasOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDareYNEeWt6-AQEw3bRw" name="Fork(condition3)@f78bbbf" incoming="_RTDarOYNEeWt6-AQEw3bRw" outgoing="_RTDaWeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDaruYNEeWt6-AQEw3bRw" name="RightHandSide@3f6e0088">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDar-YNEeWt6-AQEw3bRw" name="Value(alert)">
                  <result xmi:id="_RTDasOYNEeWt6-AQEw3bRw" name="Value(alert).result" outgoing="_RTDarOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaseYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDasuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDas-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECjuYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDatOYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@f78bbbf)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDateYNEeWt6-AQEw3bRw" target="_RTDaueYNEeWt6-AQEw3bRw" source="_RTDatuYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDatuYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@f78bbbf).input" incoming="_RTDaWeYNEeWt6-AQEw3bRw" outgoing="_RTDateYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDat-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDauOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDaueYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@f78bbbf).output" incoming="_RTDateYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDauuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDau-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDavOYNEeWt6-AQEw3bRw" name="Test(Merge(ConditionalLogicalExpression@37bc1452.result))">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDaveYNEeWt6-AQEw3bRw" target="_RTDa7OYNEeWt6-AQEw3bRw" source="_RTDa6-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDavuYNEeWt6-AQEw3bRw" target="_RTDa7OYNEeWt6-AQEw3bRw" source="_RTDaz-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDav-YNEeWt6-AQEw3bRw" target="_RTDa0uYNEeWt6-AQEw3bRw" source="_RTDa7OYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDawOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTDaweYNEeWt6-AQEw3bRw" target="_RTDa4eYNEeWt6-AQEw3bRw" source="_RTDa7OYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTDawuYNEeWt6-AQEw3bRw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaw-YNEeWt6-AQEw3bRw" target="_RTDa7eYNEeWt6-AQEw3bRw" source="_RTDa1OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDaxOYNEeWt6-AQEw3bRw" target="_RTDa7eYNEeWt6-AQEw3bRw" source="_RTDa4-YNEeWt6-AQEw3bRw"/>
              <structuredNodeOutput xmi:id="_RTDaxeYNEeWt6-AQEw3bRw" name="Decider(Merge(ConditionalLogicalExpression@37bc1452.result))" incoming="_RTDaWuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDaxuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDax-YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDayOYNEeWt6-AQEw3bRw" name="Call(>)">
                <argument xmi:id="_RTDayeYNEeWt6-AQEw3bRw" name="Call(>).argument(x)" incoming="_RTDYleYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDayuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDay-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTDazOYNEeWt6-AQEw3bRw" name="Call(>).argument(y)" incoming="_RTDYluYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDazeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDazuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTDaz-YNEeWt6-AQEw3bRw" name="Call(>).result(result)" outgoing="_RTDavuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa0OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa0eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDa0uYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@37bc1452.operand2" incoming="_RTDav-YNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDa0-YNEeWt6-AQEw3bRw" target="_RTDa1OYNEeWt6-AQEw3bRw" source="_RTDa3uYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTDa1OYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@37bc1452.operand2.result" incoming="_RTDa0-YNEeWt6-AQEw3bRw" outgoing="_RTDaw-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa1eYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa1uYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTDa1-YNEeWt6-AQEw3bRw" name="Call(&lt;)">
                  <argument xmi:id="_RTDa2OYNEeWt6-AQEw3bRw" name="Call(&lt;).argument(x)" incoming="_RTDYl-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa2eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa2uYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTDa2-YNEeWt6-AQEw3bRw" name="Call(&lt;).argument(y)" incoming="_RTDYmOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa3OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa3eYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTDa3uYNEeWt6-AQEw3bRw" name="Call(&lt;).result(result)" outgoing="_RTDa0-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa3-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa4OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDa4eYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@37bc1452.operand3" incoming="_RTDaweYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDa4uYNEeWt6-AQEw3bRw" target="_RTDa4-YNEeWt6-AQEw3bRw" source="_RTDa5-YNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTDa4-YNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@37bc1452.operand3.result" incoming="_RTDa4uYNEeWt6-AQEw3bRw" outgoing="_RTDaxOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa5OYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa5eYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDa5uYNEeWt6-AQEw3bRw" name="Value(false)">
                  <result xmi:id="_RTDa5-YNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RTDa4uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa6OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa6eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDa6uYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RTDa6-YNEeWt6-AQEw3bRw" name="Initial(ConditionalLogicalExpression@37bc1452)" outgoing="_RTDaveYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RTDa7OYNEeWt6-AQEw3bRw" name="Decision(ConditionalLogicalExpression@37bc1452)" incoming="_RTDaveYNEeWt6-AQEw3bRw _RTDavuYNEeWt6-AQEw3bRw" outgoing="_RTDav-YNEeWt6-AQEw3bRw _RTDaweYNEeWt6-AQEw3bRw" decisionInputFlow="_RTDavuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RTDa7eYNEeWt6-AQEw3bRw" name="Merge(ConditionalLogicalExpression@37bc1452.result)" incoming="_RTDaw-YNEeWt6-AQEw3bRw _RTDaxOYNEeWt6-AQEw3bRw" outgoing="_RTDaWuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDa7uYNEeWt6-AQEw3bRw" name="ExpressionStatement@6f2a5c86">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDa7-YNEeWt6-AQEw3bRw" target="_RTDa8OYNEeWt6-AQEw3bRw" source="_RTDa8-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDa8OYNEeWt6-AQEw3bRw" name="Fork(condition3)@448674ca" incoming="_RTDa7-YNEeWt6-AQEw3bRw" outgoing="_RTDaW-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDa8eYNEeWt6-AQEw3bRw" name="RightHandSide@575d9ceb">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDa8uYNEeWt6-AQEw3bRw" name="Value(critical)">
                  <result xmi:id="_RTDa8-YNEeWt6-AQEw3bRw" name="Value(critical).result" outgoing="_RTDa7-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa9OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa9eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDa9uYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECj-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDa9-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@448674ca)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDa-OYNEeWt6-AQEw3bRw" target="_RTDa_OYNEeWt6-AQEw3bRw" source="_RTDa-eYNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDa-eYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@448674ca).input" incoming="_RTDaW-YNEeWt6-AQEw3bRw" outgoing="_RTDa-OYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa-uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa--YNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDa_OYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@448674ca).output" incoming="_RTDa-OYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDa_eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDa_uYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDa_-YNEeWt6-AQEw3bRw" name="Value(true)">
              <result xmi:id="_RTDbAOYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbAeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbAuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDbA-YNEeWt6-AQEw3bRw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbBOYNEeWt6-AQEw3bRw" name="ExpressionStatement@1d351080">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbBeYNEeWt6-AQEw3bRw" target="_RTDbBuYNEeWt6-AQEw3bRw" source="_RTDbCeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDbBuYNEeWt6-AQEw3bRw" name="Fork(condition3)@7bcd69f3" incoming="_RTDbBeYNEeWt6-AQEw3bRw" outgoing="_RTDaXOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbB-YNEeWt6-AQEw3bRw" name="RightHandSide@6ae71004">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDbCOYNEeWt6-AQEw3bRw" name="Value(error)">
                  <result xmi:id="_RTDbCeYNEeWt6-AQEw3bRw" name="Value(error).result" outgoing="_RTDbBeYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbCuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbC-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_RTDbDOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" instance="_RTECkOYNEeWt6-AQEw3bRw"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbDeYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@7bcd69f3)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbDuYNEeWt6-AQEw3bRw" target="_RTDbEuYNEeWt6-AQEw3bRw" source="_RTDbD-YNEeWt6-AQEw3bRw"/>
              <structuredNodeInput xmi:id="_RTDbD-YNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@7bcd69f3).input" incoming="_RTDaXOYNEeWt6-AQEw3bRw" outgoing="_RTDbDuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbEOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbEeYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RTDbEuYNEeWt6-AQEw3bRw" name="Passthru(Fork(condition3)@7bcd69f3).output" incoming="_RTDbDuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbE-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbFOYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_RTDbFeYNEeWt6-AQEw3bRw" body="_RTDaaOYNEeWt6-AQEw3bRw _RTDaceYNEeWt6-AQEw3bRw" bodyOutput="_RTDaduYNEeWt6-AQEw3bRw" decider="_RTDaZeYNEeWt6-AQEw3bRw" successorClause="_RTDbFuYNEeWt6-AQEw3bRw _RTDbF-YNEeWt6-AQEw3bRw" test="_RTDaXeYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDbFuYNEeWt6-AQEw3bRw" body="_RTDaq-YNEeWt6-AQEw3bRw _RTDatOYNEeWt6-AQEw3bRw" bodyOutput="_RTDaueYNEeWt6-AQEw3bRw" decider="_RTDaguYNEeWt6-AQEw3bRw" predecessorClause="_RTDbFeYNEeWt6-AQEw3bRw" successorClause="_RTDbGOYNEeWt6-AQEw3bRw" test="_RTDaeeYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDbF-YNEeWt6-AQEw3bRw" body="_RTDa7uYNEeWt6-AQEw3bRw _RTDa9-YNEeWt6-AQEw3bRw" bodyOutput="_RTDa_OYNEeWt6-AQEw3bRw" decider="_RTDaxeYNEeWt6-AQEw3bRw" predecessorClause="_RTDbFeYNEeWt6-AQEw3bRw" successorClause="_RTDbGOYNEeWt6-AQEw3bRw" test="_RTDavOYNEeWt6-AQEw3bRw"/>
            <clause xmi:id="_RTDbGOYNEeWt6-AQEw3bRw" body="_RTDbBOYNEeWt6-AQEw3bRw _RTDbDeYNEeWt6-AQEw3bRw" bodyOutput="_RTDbEuYNEeWt6-AQEw3bRw" decider="_RTDbAOYNEeWt6-AQEw3bRw" predecessorClause="_RTDbFuYNEeWt6-AQEw3bRw _RTDbF-YNEeWt6-AQEw3bRw" test="_RTDa_-YNEeWt6-AQEw3bRw"/>
            <result xmi:id="_RTDbGeYNEeWt6-AQEw3bRw" name="IfStatement@162372a4.result(condition3)" outgoing="_RTDYjuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbGuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbG-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTDbHOYNEeWt6-AQEw3bRw" name="Fork(condition3)" incoming="_RTDYjuYNEeWt6-AQEw3bRw" outgoing="_RTDYruYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbHeYNEeWt6-AQEw3bRw" name="SwitchStatement@74e43fab" incoming="_RTDYm-YNEeWt6-AQEw3bRw" outgoing="_RTDYoOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbHuYNEeWt6-AQEw3bRw" target="_RTDbYuYNEeWt6-AQEw3bRw" source="_RTDbX-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTDbH-YNEeWt6-AQEw3bRw" target="_RTDbIOYNEeWt6-AQEw3bRw" source="_RTD9cOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_RTDbIOYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@74e43fab)" incoming="_RTDbH-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbIeYNEeWt6-AQEw3bRw" target="_RTDbLeYNEeWt6-AQEw3bRw" source="_RTDbJOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbIuYNEeWt6-AQEw3bRw" target="_RTDbQeYNEeWt6-AQEw3bRw" source="_RTDbOOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbI-YNEeWt6-AQEw3bRw" target="_RTDbV-YNEeWt6-AQEw3bRw" source="_RTDbTuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTDbJOYNEeWt6-AQEw3bRw" name="Fork(Fork(year)@2bfeb945)" incoming="_RTDYmuYNEeWt6-AQEw3bRw" outgoing="_RTDbIeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbJeYNEeWt6-AQEw3bRw" name="Test(Test(Case(Value(2012).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbJuYNEeWt6-AQEw3bRw" target="_RTDbM-YNEeWt6-AQEw3bRw" source="_RTDbKOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDbJ-YNEeWt6-AQEw3bRw" name="Value(2012)">
                  <result xmi:id="_RTDbKOYNEeWt6-AQEw3bRw" name="Value(2012).result" outgoing="_RTDbJuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbKeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbKuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTDbK-YNEeWt6-AQEw3bRw" value="2012">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTDbLOYNEeWt6-AQEw3bRw" name="Test(Case(Value(2012).result))">
                  <first xmi:id="_RTDbLeYNEeWt6-AQEw3bRw" name="Test(Case(Value(2012).result)).first" incoming="_RTDbIeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbLuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbL-YNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTDbMOYNEeWt6-AQEw3bRw" name="Test(Case(Value(2012).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbMeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbMuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTDbM-YNEeWt6-AQEw3bRw" name="Test(Case(Value(2012).result)).second" incoming="_RTDbJuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbNOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbNeYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbNuYNEeWt6-AQEw3bRw" name="ExpressionStatement@328036b8">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbN-YNEeWt6-AQEw3bRw" target="_RTDbOOYNEeWt6-AQEw3bRw" source="_RTDbO-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTDbOOYNEeWt6-AQEw3bRw" name="Fork(month)@40590bfd" incoming="_RTDbN-YNEeWt6-AQEw3bRw" outgoing="_RTDbIuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbOeYNEeWt6-AQEw3bRw" name="RightHandSide@1622300c">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDbOuYNEeWt6-AQEw3bRw" name="Value(2)">
                    <result xmi:id="_RTDbO-YNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RTDbN-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbPOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbPeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTDbPuYNEeWt6-AQEw3bRw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbP-YNEeWt6-AQEw3bRw" name="Passthru(Fork(month)@40590bfd)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbQOYNEeWt6-AQEw3bRw" target="_RTDbROYNEeWt6-AQEw3bRw" source="_RTDbQeYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTDbQeYNEeWt6-AQEw3bRw" name="Passthru(Fork(month)@40590bfd).input" incoming="_RTDbIuYNEeWt6-AQEw3bRw" outgoing="_RTDbQOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbQuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbQ-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTDbROYNEeWt6-AQEw3bRw" name="Passthru(Fork(month)@40590bfd).output" incoming="_RTDbQOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbReYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbRuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDbR-YNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTDbSOYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbSeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbSuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTDbS-YNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbTOYNEeWt6-AQEw3bRw" name="ExpressionStatement@3f916678">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbTeYNEeWt6-AQEw3bRw" target="_RTDbTuYNEeWt6-AQEw3bRw" source="_RTDbUeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTDbTuYNEeWt6-AQEw3bRw" name="Fork(month)@56ebc02b" incoming="_RTDbTeYNEeWt6-AQEw3bRw" outgoing="_RTDbI-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbT-YNEeWt6-AQEw3bRw" name="RightHandSide@f9573a2">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTDbUOYNEeWt6-AQEw3bRw" name="Value(3)">
                    <result xmi:id="_RTDbUeYNEeWt6-AQEw3bRw" name="Value(3).result" outgoing="_RTDbTeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbUuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbU-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTDbVOYNEeWt6-AQEw3bRw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTDbVeYNEeWt6-AQEw3bRw" name="Passthru(Fork(month)@56ebc02b)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTDbVuYNEeWt6-AQEw3bRw" target="_RTDbWuYNEeWt6-AQEw3bRw" source="_RTDbV-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTDbV-YNEeWt6-AQEw3bRw" name="Passthru(Fork(month)@56ebc02b).input" incoming="_RTDbI-YNEeWt6-AQEw3bRw" outgoing="_RTDbVuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbWOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbWeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTDbWuYNEeWt6-AQEw3bRw" name="Passthru(Fork(month)@56ebc02b).output" incoming="_RTDbVuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbW-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbXOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_RTDbXeYNEeWt6-AQEw3bRw" body="_RTDbNuYNEeWt6-AQEw3bRw _RTDbP-YNEeWt6-AQEw3bRw" bodyOutput="_RTDbROYNEeWt6-AQEw3bRw" decider="_RTDbMOYNEeWt6-AQEw3bRw" successorClause="_RTDbXuYNEeWt6-AQEw3bRw" test="_RTDbJeYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTDbXuYNEeWt6-AQEw3bRw" body="_RTDbTOYNEeWt6-AQEw3bRw _RTDbVeYNEeWt6-AQEw3bRw" bodyOutput="_RTDbWuYNEeWt6-AQEw3bRw" decider="_RTDbSOYNEeWt6-AQEw3bRw" predecessorClause="_RTDbXeYNEeWt6-AQEw3bRw" test="_RTDbR-YNEeWt6-AQEw3bRw"/>
              <result xmi:id="_RTDbX-YNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@74e43fab).result(month)" outgoing="_RTDbHuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTDbYOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTDbYeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTDbYuYNEeWt6-AQEw3bRw" name="Fork(month)" incoming="_RTDbHuYNEeWt6-AQEw3bRw" outgoing="_RTDYnOYNEeWt6-AQEw3bRw _RTDYsOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD9cOYNEeWt6-AQEw3bRw" name="Switch((SwitchStatement@74e43fab)" outgoing="_RTDbH-YNEeWt6-AQEw3bRw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD9ceYNEeWt6-AQEw3bRw" name="SwitchStatement@5e98e103" incoming="_RTDYoOYNEeWt6-AQEw3bRw" outgoing="_RTDYoeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9cuYNEeWt6-AQEw3bRw" target="_RTD_4uYNEeWt6-AQEw3bRw" source="_RTD_3-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTD9c-YNEeWt6-AQEw3bRw" target="_RTD9dOYNEeWt6-AQEw3bRw" source="_RTD_4-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_RTD9dOYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@5e98e103)" incoming="_RTD9c-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9deYNEeWt6-AQEw3bRw" target="_RTD9ouYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9duYNEeWt6-AQEw3bRw" target="_RTD9seYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9d-YNEeWt6-AQEw3bRw" target="_RTD9yuYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9eOYNEeWt6-AQEw3bRw" target="_RTD94-YNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9eeYNEeWt6-AQEw3bRw" target="_RTD9_OYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9euYNEeWt6-AQEw3bRw" target="_RTD-FeYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9e-YNEeWt6-AQEw3bRw" target="_RTD-LuYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9fOYNEeWt6-AQEw3bRw" target="_RTD-TOYNEeWt6-AQEw3bRw" source="_RTD-Q-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9feYNEeWt6-AQEw3bRw" target="_RTD-Y-YNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9fuYNEeWt6-AQEw3bRw" target="_RTD-cuYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9f-YNEeWt6-AQEw3bRw" target="_RTD-i-YNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9gOYNEeWt6-AQEw3bRw" target="_RTD-pOYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9geYNEeWt6-AQEw3bRw" target="_RTD-wuYNEeWt6-AQEw3bRw" source="_RTD-ueYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9guYNEeWt6-AQEw3bRw" target="_RTD-0OYNEeWt6-AQEw3bRw" source="_RTD9h-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9g-YNEeWt6-AQEw3bRw" target="_RTD_rOYNEeWt6-AQEw3bRw" source="_RTD_qeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9hOYNEeWt6-AQEw3bRw" target="_RTD_r-YNEeWt6-AQEw3bRw" source="_RTD_rOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTD9heYNEeWt6-AQEw3bRw" target="_RTD_yuYNEeWt6-AQEw3bRw" source="_RTD_uuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9huYNEeWt6-AQEw3bRw" target="_RTD_1eYNEeWt6-AQEw3bRw" source="_RTD_zOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTD9h-YNEeWt6-AQEw3bRw" name="Fork(Fork(month))" incoming="_RTDYnOYNEeWt6-AQEw3bRw" outgoing="_RTD9deYNEeWt6-AQEw3bRw _RTD9duYNEeWt6-AQEw3bRw _RTD9d-YNEeWt6-AQEw3bRw _RTD9eOYNEeWt6-AQEw3bRw _RTD9eeYNEeWt6-AQEw3bRw _RTD9euYNEeWt6-AQEw3bRw _RTD9e-YNEeWt6-AQEw3bRw _RTD9feYNEeWt6-AQEw3bRw _RTD9fuYNEeWt6-AQEw3bRw _RTD9f-YNEeWt6-AQEw3bRw _RTD9gOYNEeWt6-AQEw3bRw _RTD9guYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD9iOYNEeWt6-AQEw3bRw" name="Test(Call(Or).result(result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9ieYNEeWt6-AQEw3bRw" target="_RTD9qOYNEeWt6-AQEw3bRw" source="_RTD9neYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9iuYNEeWt6-AQEw3bRw" target="_RTD9t-YNEeWt6-AQEw3bRw" source="_RTD9rOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9i-YNEeWt6-AQEw3bRw" target="_RTD9u-YNEeWt6-AQEw3bRw" source="_RTD9peYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9jOYNEeWt6-AQEw3bRw" target="_RTD9vuYNEeWt6-AQEw3bRw" source="_RTD9tOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9jeYNEeWt6-AQEw3bRw" target="_RTD90OYNEeWt6-AQEw3bRw" source="_RTD9xeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9juYNEeWt6-AQEw3bRw" target="_RTD91OYNEeWt6-AQEw3bRw" source="_RTD9weYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9j-YNEeWt6-AQEw3bRw" target="_RTD91-YNEeWt6-AQEw3bRw" source="_RTD9zeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9kOYNEeWt6-AQEw3bRw" target="_RTD96eYNEeWt6-AQEw3bRw" source="_RTD93uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9keYNEeWt6-AQEw3bRw" target="_RTD97eYNEeWt6-AQEw3bRw" source="_RTD92uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9kuYNEeWt6-AQEw3bRw" target="_RTD98OYNEeWt6-AQEw3bRw" source="_RTD95uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9k-YNEeWt6-AQEw3bRw" target="_RTD-AuYNEeWt6-AQEw3bRw" source="_RTD99-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9lOYNEeWt6-AQEw3bRw" target="_RTD-BuYNEeWt6-AQEw3bRw" source="_RTD98-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9leYNEeWt6-AQEw3bRw" target="_RTD-CeYNEeWt6-AQEw3bRw" source="_RTD9_-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9luYNEeWt6-AQEw3bRw" target="_RTD-G-YNEeWt6-AQEw3bRw" source="_RTD-EOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9l-YNEeWt6-AQEw3bRw" target="_RTD-H-YNEeWt6-AQEw3bRw" source="_RTD-DOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9mOYNEeWt6-AQEw3bRw" target="_RTD-IuYNEeWt6-AQEw3bRw" source="_RTD-GOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9meYNEeWt6-AQEw3bRw" target="_RTD-NOYNEeWt6-AQEw3bRw" source="_RTD-KeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9muYNEeWt6-AQEw3bRw" target="_RTD-OOYNEeWt6-AQEw3bRw" source="_RTD-JeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD9m-YNEeWt6-AQEw3bRw" target="_RTD-O-YNEeWt6-AQEw3bRw" source="_RTD-MeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD9nOYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RTD9neYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTD9ieYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9nuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9n-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD9oOYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD9oeYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result))">
                  <first xmi:id="_RTD9ouYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result)).first" incoming="_RTD9deYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9o-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9pOYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD9peYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result)).result" outgoing="_RTD9i-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9puYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9p-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD9qOYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result)).second" incoming="_RTD9ieYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9qeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9quYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD9q-YNEeWt6-AQEw3bRw" name="Value(3)">
                  <result xmi:id="_RTD9rOYNEeWt6-AQEw3bRw" name="Value(3).result" outgoing="_RTD9iuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9reYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9ruYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD9r-YNEeWt6-AQEw3bRw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD9sOYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result))">
                  <first xmi:id="_RTD9seYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result)).first" incoming="_RTD9duYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9suYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9s-YNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD9tOYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result)).result" outgoing="_RTD9jOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9teYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9tuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD9t-YNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result)).second" incoming="_RTD9iuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9uOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9ueYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD9uuYNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD9u-YNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD9i-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9vOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9veYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD9vuYNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD9jOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9v-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9wOYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD9weYNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD9juYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9wuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9w-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD9xOYNEeWt6-AQEw3bRw" name="Value(5)">
                  <result xmi:id="_RTD9xeYNEeWt6-AQEw3bRw" name="Value(5).result" outgoing="_RTD9jeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9xuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9x-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD9yOYNEeWt6-AQEw3bRw" value="5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD9yeYNEeWt6-AQEw3bRw" name="Test(Case(Value(5).result))">
                  <first xmi:id="_RTD9yuYNEeWt6-AQEw3bRw" name="Test(Case(Value(5).result)).first" incoming="_RTD9d-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9y-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9zOYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD9zeYNEeWt6-AQEw3bRw" name="Test(Case(Value(5).result)).result" outgoing="_RTD9j-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9zuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9z-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD90OYNEeWt6-AQEw3bRw" name="Test(Case(Value(5).result)).second" incoming="_RTD9jeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD90eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD90uYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD90-YNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD91OYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD9juYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD91eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD91uYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD91-YNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD9j-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD92OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD92eYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD92uYNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD9keYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD92-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD93OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD93eYNEeWt6-AQEw3bRw" name="Value(7)">
                  <result xmi:id="_RTD93uYNEeWt6-AQEw3bRw" name="Value(7).result" outgoing="_RTD9kOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD93-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD94OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD94eYNEeWt6-AQEw3bRw" value="7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD94uYNEeWt6-AQEw3bRw" name="Test(Case(Value(7).result))">
                  <first xmi:id="_RTD94-YNEeWt6-AQEw3bRw" name="Test(Case(Value(7).result)).first" incoming="_RTD9eOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD95OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD95eYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD95uYNEeWt6-AQEw3bRw" name="Test(Case(Value(7).result)).result" outgoing="_RTD9kuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD95-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD96OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD96eYNEeWt6-AQEw3bRw" name="Test(Case(Value(7).result)).second" incoming="_RTD9kOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD96uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD96-YNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD97OYNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD97eYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD9keYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD97uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD97-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD98OYNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD9kuYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD98eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD98uYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD98-YNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD9lOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD99OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD99eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD99uYNEeWt6-AQEw3bRw" name="Value(8)">
                  <result xmi:id="_RTD99-YNEeWt6-AQEw3bRw" name="Value(8).result" outgoing="_RTD9k-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9-OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9-eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD9-uYNEeWt6-AQEw3bRw" value="8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD9--YNEeWt6-AQEw3bRw" name="Test(Case(Value(8).result))">
                  <first xmi:id="_RTD9_OYNEeWt6-AQEw3bRw" name="Test(Case(Value(8).result)).first" incoming="_RTD9eeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD9_eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD9_uYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD9_-YNEeWt6-AQEw3bRw" name="Test(Case(Value(8).result)).result" outgoing="_RTD9leYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-AOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-AeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-AuYNEeWt6-AQEw3bRw" name="Test(Case(Value(8).result)).second" incoming="_RTD9k-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-A-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-BOYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD-BeYNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD-BuYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD9lOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-B-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-COYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD-CeYNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD9leYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-CuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-C-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD-DOYNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD9l-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-DeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-DuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-D-YNEeWt6-AQEw3bRw" name="Value(10)">
                  <result xmi:id="_RTD-EOYNEeWt6-AQEw3bRw" name="Value(10).result" outgoing="_RTD9luYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-EeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-EuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-E-YNEeWt6-AQEw3bRw" value="10">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-FOYNEeWt6-AQEw3bRw" name="Test(Case(Value(10).result))">
                  <first xmi:id="_RTD-FeYNEeWt6-AQEw3bRw" name="Test(Case(Value(10).result)).first" incoming="_RTD9euYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-FuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-F-YNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-GOYNEeWt6-AQEw3bRw" name="Test(Case(Value(10).result)).result" outgoing="_RTD9mOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-GeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-GuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-G-YNEeWt6-AQEw3bRw" name="Test(Case(Value(10).result)).second" incoming="_RTD9luYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-HOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-HeYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD-HuYNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD-H-YNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD9l-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-IOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-IeYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD-IuYNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD9mOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-I-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-JOYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD-JeYNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD9muYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-JuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-J-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-KOYNEeWt6-AQEw3bRw" name="Value(12)">
                  <result xmi:id="_RTD-KeYNEeWt6-AQEw3bRw" name="Value(12).result" outgoing="_RTD9meYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-KuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-K-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-LOYNEeWt6-AQEw3bRw" value="12">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-LeYNEeWt6-AQEw3bRw" name="Test(Case(Value(12).result))">
                  <first xmi:id="_RTD-LuYNEeWt6-AQEw3bRw" name="Test(Case(Value(12).result)).first" incoming="_RTD9e-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-L-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-MOYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-MeYNEeWt6-AQEw3bRw" name="Test(Case(Value(12).result)).result" outgoing="_RTD9m-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-MuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-M-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-NOYNEeWt6-AQEw3bRw" name="Test(Case(Value(12).result)).second" incoming="_RTD9meYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-NeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-NuYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD-N-YNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD-OOYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD9muYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-OeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-OuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD-O-YNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD9m-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-POYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-PeYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD-PuYNEeWt6-AQEw3bRw" name="Call(Or).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-P-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-QOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-QeYNEeWt6-AQEw3bRw" name="ExpressionStatement@193d219f">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-QuYNEeWt6-AQEw3bRw" target="_RTD-Q-YNEeWt6-AQEw3bRw" source="_RTD-RuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTD-Q-YNEeWt6-AQEw3bRw" name="Fork(numDays)@3cf50330" incoming="_RTD-QuYNEeWt6-AQEw3bRw" outgoing="_RTD9fOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-ROYNEeWt6-AQEw3bRw" name="RightHandSide@79a46393">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-ReYNEeWt6-AQEw3bRw" name="Value(31)">
                    <result xmi:id="_RTD-RuYNEeWt6-AQEw3bRw" name="Value(31).result" outgoing="_RTD-QuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-R-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-SOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-SeYNEeWt6-AQEw3bRw" value="31">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-SuYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@3cf50330)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-S-YNEeWt6-AQEw3bRw" target="_RTD-T-YNEeWt6-AQEw3bRw" source="_RTD-TOYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTD-TOYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@3cf50330).input" incoming="_RTD9fOYNEeWt6-AQEw3bRw" outgoing="_RTD-S-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-TeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-TuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTD-T-YNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@3cf50330).output" incoming="_RTD-S-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-UOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-UeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-UuYNEeWt6-AQEw3bRw" name="Test(Call(Or).result(result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-U-YNEeWt6-AQEw3bRw" target="_RTD-aeYNEeWt6-AQEw3bRw" source="_RTD-XuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-VOYNEeWt6-AQEw3bRw" target="_RTD-eOYNEeWt6-AQEw3bRw" source="_RTD-beYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-VeYNEeWt6-AQEw3bRw" target="_RTD-fOYNEeWt6-AQEw3bRw" source="_RTD-ZuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-VuYNEeWt6-AQEw3bRw" target="_RTD-f-YNEeWt6-AQEw3bRw" source="_RTD-deYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-V-YNEeWt6-AQEw3bRw" target="_RTD-keYNEeWt6-AQEw3bRw" source="_RTD-huYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-WOYNEeWt6-AQEw3bRw" target="_RTD-leYNEeWt6-AQEw3bRw" source="_RTD-guYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-WeYNEeWt6-AQEw3bRw" target="_RTD-mOYNEeWt6-AQEw3bRw" source="_RTD-juYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-WuYNEeWt6-AQEw3bRw" target="_RTD-quYNEeWt6-AQEw3bRw" source="_RTD-n-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-W-YNEeWt6-AQEw3bRw" target="_RTD-ruYNEeWt6-AQEw3bRw" source="_RTD-m-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-XOYNEeWt6-AQEw3bRw" target="_RTD-seYNEeWt6-AQEw3bRw" source="_RTD-p-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-XeYNEeWt6-AQEw3bRw" name="Value(4)">
                  <result xmi:id="_RTD-XuYNEeWt6-AQEw3bRw" name="Value(4).result" outgoing="_RTD-U-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-X-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-YOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-YeYNEeWt6-AQEw3bRw" value="4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-YuYNEeWt6-AQEw3bRw" name="Test(Case(Value(4).result))">
                  <first xmi:id="_RTD-Y-YNEeWt6-AQEw3bRw" name="Test(Case(Value(4).result)).first" incoming="_RTD9feYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-ZOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-ZeYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-ZuYNEeWt6-AQEw3bRw" name="Test(Case(Value(4).result)).result" outgoing="_RTD-VeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-Z-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-aOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-aeYNEeWt6-AQEw3bRw" name="Test(Case(Value(4).result)).second" incoming="_RTD-U-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-auYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-a-YNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-bOYNEeWt6-AQEw3bRw" name="Value(6)">
                  <result xmi:id="_RTD-beYNEeWt6-AQEw3bRw" name="Value(6).result" outgoing="_RTD-VOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-buYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-b-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-cOYNEeWt6-AQEw3bRw" value="6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-ceYNEeWt6-AQEw3bRw" name="Test(Case(Value(6).result))">
                  <first xmi:id="_RTD-cuYNEeWt6-AQEw3bRw" name="Test(Case(Value(6).result)).first" incoming="_RTD9fuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-c-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-dOYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-deYNEeWt6-AQEw3bRw" name="Test(Case(Value(6).result)).result" outgoing="_RTD-VuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-duYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-d-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-eOYNEeWt6-AQEw3bRw" name="Test(Case(Value(6).result)).second" incoming="_RTD-VOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-eeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-euYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD-e-YNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD-fOYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD-VeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-feYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-fuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD-f-YNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD-VuYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-gOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-geYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD-guYNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD-WOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-g-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-hOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-heYNEeWt6-AQEw3bRw" name="Value(9)">
                  <result xmi:id="_RTD-huYNEeWt6-AQEw3bRw" name="Value(9).result" outgoing="_RTD-V-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-h-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-iOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-ieYNEeWt6-AQEw3bRw" value="9">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-iuYNEeWt6-AQEw3bRw" name="Test(Case(Value(9).result))">
                  <first xmi:id="_RTD-i-YNEeWt6-AQEw3bRw" name="Test(Case(Value(9).result)).first" incoming="_RTD9f-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-jOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-jeYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-juYNEeWt6-AQEw3bRw" name="Test(Case(Value(9).result)).result" outgoing="_RTD-WeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-j-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-kOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-keYNEeWt6-AQEw3bRw" name="Test(Case(Value(9).result)).second" incoming="_RTD-V-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-kuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-k-YNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD-lOYNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD-leYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD-WOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-luYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-l-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD-mOYNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD-WeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-meYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-muYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD-m-YNEeWt6-AQEw3bRw" name="Call(Or).result(result)" outgoing="_RTD-W-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-nOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-neYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-nuYNEeWt6-AQEw3bRw" name="Value(11)">
                  <result xmi:id="_RTD-n-YNEeWt6-AQEw3bRw" name="Value(11).result" outgoing="_RTD-WuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-oOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-oeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-ouYNEeWt6-AQEw3bRw" value="11">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-o-YNEeWt6-AQEw3bRw" name="Test(Case(Value(11).result))">
                  <first xmi:id="_RTD-pOYNEeWt6-AQEw3bRw" name="Test(Case(Value(11).result)).first" incoming="_RTD9gOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-peYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-puYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-p-YNEeWt6-AQEw3bRw" name="Test(Case(Value(11).result)).result" outgoing="_RTD-XOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-qOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-qeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-quYNEeWt6-AQEw3bRw" name="Test(Case(Value(11).result)).second" incoming="_RTD-WuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-q-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-rOYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD-reYNEeWt6-AQEw3bRw" name="Call(Or)">
                  <argument xmi:id="_RTD-ruYNEeWt6-AQEw3bRw" name="Call(Or).argument(x)" incoming="_RTD-W-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-r-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-sOYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTD-seYNEeWt6-AQEw3bRw" name="Call(Or).argument(y)" incoming="_RTD-XOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-suYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-s-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD-tOYNEeWt6-AQEw3bRw" name="Call(Or).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-teYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-tuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-t-YNEeWt6-AQEw3bRw" name="ExpressionStatement@70dabe3b">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-uOYNEeWt6-AQEw3bRw" target="_RTD-ueYNEeWt6-AQEw3bRw" source="_RTD-vOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTD-ueYNEeWt6-AQEw3bRw" name="Fork(numDays)@7e7bd18d" incoming="_RTD-uOYNEeWt6-AQEw3bRw" outgoing="_RTD9geYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-uuYNEeWt6-AQEw3bRw" name="RightHandSide@72fac0da">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-u-YNEeWt6-AQEw3bRw" name="Value(30)">
                    <result xmi:id="_RTD-vOYNEeWt6-AQEw3bRw" name="Value(30).result" outgoing="_RTD-uOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-veYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-vuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-v-YNEeWt6-AQEw3bRw" value="30">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-wOYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@7e7bd18d)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-weYNEeWt6-AQEw3bRw" target="_RTD-xeYNEeWt6-AQEw3bRw" source="_RTD-wuYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTD-wuYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@7e7bd18d).input" incoming="_RTD9geYNEeWt6-AQEw3bRw" outgoing="_RTD-weYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-w-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-xOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTD-xeYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@7e7bd18d).output" incoming="_RTD-weYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-xuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-x-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-yOYNEeWt6-AQEw3bRw" name="Test(Test(Case(Value(2).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-yeYNEeWt6-AQEw3bRw" target="_RTD-1uYNEeWt6-AQEw3bRw" source="_RTD-y-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-yuYNEeWt6-AQEw3bRw" name="Value(2)">
                  <result xmi:id="_RTD-y-YNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RTD-yeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-zOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-zeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTD-zuYNEeWt6-AQEw3bRw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD-z-YNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result))">
                  <first xmi:id="_RTD-0OYNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result)).first" incoming="_RTD9guYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-0eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-0uYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTD-0-YNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-1OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-1eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTD-1uYNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result)).second" incoming="_RTD-yeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-1-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-2OYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:ConditionalNode" xmi:id="_RTD-2eYNEeWt6-AQEw3bRw" name="IfStatement@3b93f34c">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-2uYNEeWt6-AQEw3bRw" target="_RTD-8eYNEeWt6-AQEw3bRw" source="_RTD_f-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-2-YNEeWt6-AQEw3bRw" target="_RTD_i-YNEeWt6-AQEw3bRw" source="_RTD_guYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-3OYNEeWt6-AQEw3bRw" target="_RTD_oeYNEeWt6-AQEw3bRw" source="_RTD_mOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD-3eYNEeWt6-AQEw3bRw" name="Test(Merge(ConditionalLogicalExpression@65569de5.result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-3uYNEeWt6-AQEw3bRw" target="_RTD-_eYNEeWt6-AQEw3bRw" source="_RTD-9eYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-3-YNEeWt6-AQEw3bRw" target="_RTD_CeYNEeWt6-AQEw3bRw" source="_RTD_AOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-4OYNEeWt6-AQEw3bRw" target="_RTD_D-YNEeWt6-AQEw3bRw" source="_RTD_BOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RTD-4eYNEeWt6-AQEw3bRw" target="_RTD_S-YNEeWt6-AQEw3bRw" source="_RTD_SuYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-4uYNEeWt6-AQEw3bRw" target="_RTD_S-YNEeWt6-AQEw3bRw" source="_RTD_DOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RTD-4-YNEeWt6-AQEw3bRw" target="_RTD_EuYNEeWt6-AQEw3bRw" source="_RTD_S-YNEeWt6-AQEw3bRw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTD-5OYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RTD-5eYNEeWt6-AQEw3bRw" target="_RTD_QOYNEeWt6-AQEw3bRw" source="_RTD_S-YNEeWt6-AQEw3bRw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTD-5uYNEeWt6-AQEw3bRw" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-5-YNEeWt6-AQEw3bRw" target="_RTD_TOYNEeWt6-AQEw3bRw" source="_RTD_GOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-6OYNEeWt6-AQEw3bRw" target="_RTD_TOYNEeWt6-AQEw3bRw" source="_RTD_QuYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RTD-6eYNEeWt6-AQEw3bRw" target="_RTD_fuYNEeWt6-AQEw3bRw" source="_RTD_feYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-6uYNEeWt6-AQEw3bRw" target="_RTD_fuYNEeWt6-AQEw3bRw" source="_RTD_TOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RTD-6-YNEeWt6-AQEw3bRw" target="_RTD_TeYNEeWt6-AQEw3bRw" source="_RTD_fuYNEeWt6-AQEw3bRw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTD-7OYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RTD-7eYNEeWt6-AQEw3bRw" target="_RTD_V-YNEeWt6-AQEw3bRw" source="_RTD_fuYNEeWt6-AQEw3bRw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTD-7uYNEeWt6-AQEw3bRw" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-7-YNEeWt6-AQEw3bRw" target="_RTD_f-YNEeWt6-AQEw3bRw" source="_RTD_T-YNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD-8OYNEeWt6-AQEw3bRw" target="_RTD_f-YNEeWt6-AQEw3bRw" source="_RTD_XOYNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RTD-8eYNEeWt6-AQEw3bRw" name="Decider(Merge(ConditionalLogicalExpression@65569de5.result))" incoming="_RTD-2uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-8uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-8-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD-9OYNEeWt6-AQEw3bRw" name="Value(4)">
                    <result xmi:id="_RTD-9eYNEeWt6-AQEw3bRw" name="Value(4).result" outgoing="_RTD-3uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-9uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-9-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTD--OYNEeWt6-AQEw3bRw" value="4">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD--eYNEeWt6-AQEw3bRw" name="Call(Mod)">
                    <argument xmi:id="_RTD--uYNEeWt6-AQEw3bRw" name="Call(Mod).argument(x)" incoming="_RTDYneYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD---YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-_OYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <argument xmi:id="_RTD-_eYNEeWt6-AQEw3bRw" name="Call(Mod).argument(y)" incoming="_RTD-3uYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD-_uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD-_-YNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RTD_AOYNEeWt6-AQEw3bRw" name="Call(Mod).result(result)" outgoing="_RTD-3-YNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_AeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_AuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_A-YNEeWt6-AQEw3bRw" name="Value(0)">
                    <result xmi:id="_RTD_BOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTD-4OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_BeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_BuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_B-YNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD_COYNEeWt6-AQEw3bRw" name="Test(==)">
                    <first xmi:id="_RTD_CeYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RTD-3-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_CuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_C-YNEeWt6-AQEw3bRw" value="1"/>
                    </first>
                    <result xmi:id="_RTD_DOYNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RTD-4uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_DeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_DuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <second xmi:id="_RTD_D-YNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RTD-4OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_EOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_EeYNEeWt6-AQEw3bRw" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_EuYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@1998595d.operand2" incoming="_RTD-4-YNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_E-YNEeWt6-AQEw3bRw" target="_RTD_JOYNEeWt6-AQEw3bRw" source="_RTD_HOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_FOYNEeWt6-AQEw3bRw" target="_RTD_MOYNEeWt6-AQEw3bRw" source="_RTD_J-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_FeYNEeWt6-AQEw3bRw" target="_RTD_NuYNEeWt6-AQEw3bRw" source="_RTD_K-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_FuYNEeWt6-AQEw3bRw" target="_RTD_OuYNEeWt6-AQEw3bRw" source="_RTD_M-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_F-YNEeWt6-AQEw3bRw" target="_RTD_GOYNEeWt6-AQEw3bRw" source="_RTD_PeYNEeWt6-AQEw3bRw"/>
                    <structuredNodeOutput xmi:id="_RTD_GOYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@1998595d.operand2.result" incoming="_RTD_F-YNEeWt6-AQEw3bRw" outgoing="_RTD-5-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_GeYNEeWt6-AQEw3bRw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_GuYNEeWt6-AQEw3bRw" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_G-YNEeWt6-AQEw3bRw" name="Value(100)">
                      <result xmi:id="_RTD_HOYNEeWt6-AQEw3bRw" name="Value(100).result" outgoing="_RTD_E-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_HeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_HuYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_H-YNEeWt6-AQEw3bRw" value="100">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD_IOYNEeWt6-AQEw3bRw" name="Call(Mod)">
                      <argument xmi:id="_RTD_IeYNEeWt6-AQEw3bRw" name="Call(Mod).argument(x)" incoming="_RTDYnuYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_IuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_I-YNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <argument xmi:id="_RTD_JOYNEeWt6-AQEw3bRw" name="Call(Mod).argument(y)" incoming="_RTD_E-YNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_JeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_JuYNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <result xmi:id="_RTD_J-YNEeWt6-AQEw3bRw" name="Call(Mod).result(result)" outgoing="_RTD_FOYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_KOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_KeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_KuYNEeWt6-AQEw3bRw" name="Value(0)">
                      <result xmi:id="_RTD_K-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTD_FeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_LOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_LeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_LuYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD_L-YNEeWt6-AQEw3bRw" name="Test(==)">
                      <first xmi:id="_RTD_MOYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RTD_FOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_MeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_MuYNEeWt6-AQEw3bRw" value="1"/>
                      </first>
                      <result xmi:id="_RTD_M-YNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RTD_FuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_NOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_NeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <second xmi:id="_RTD_NuYNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RTD_FeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_N-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_OOYNEeWt6-AQEw3bRw" value="1"/>
                      </second>
                    </node>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD_OeYNEeWt6-AQEw3bRw" name="Call(Not)">
                      <argument xmi:id="_RTD_OuYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RTD_FuYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_O-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_POYNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <result xmi:id="_RTD_PeYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RTD_F-YNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_PuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_P-YNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_QOYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@1998595d.operand3" incoming="_RTD-5eYNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_QeYNEeWt6-AQEw3bRw" target="_RTD_QuYNEeWt6-AQEw3bRw" source="_RTD_RuYNEeWt6-AQEw3bRw"/>
                    <structuredNodeOutput xmi:id="_RTD_QuYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@1998595d.operand3.result" incoming="_RTD_QeYNEeWt6-AQEw3bRw" outgoing="_RTD-6OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_Q-YNEeWt6-AQEw3bRw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_ROYNEeWt6-AQEw3bRw" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_ReYNEeWt6-AQEw3bRw" name="Value(false)">
                      <result xmi:id="_RTD_RuYNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RTD_QeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_R-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_SOYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_RTD_SeYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:InitialNode" xmi:id="_RTD_SuYNEeWt6-AQEw3bRw" name="Initial(ConditionalLogicalExpression@1998595d)" outgoing="_RTD-4eYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_RTD_S-YNEeWt6-AQEw3bRw" name="Decision(ConditionalLogicalExpression@1998595d)" incoming="_RTD-4eYNEeWt6-AQEw3bRw _RTD-4uYNEeWt6-AQEw3bRw" outgoing="_RTD-4-YNEeWt6-AQEw3bRw _RTD-5eYNEeWt6-AQEw3bRw" decisionInputFlow="_RTD-4uYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_RTD_TOYNEeWt6-AQEw3bRw" name="Merge(ConditionalLogicalExpression@1998595d.result)" incoming="_RTD-5-YNEeWt6-AQEw3bRw _RTD-6OYNEeWt6-AQEw3bRw" outgoing="_RTD-6uYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_TeYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65569de5.operand2" incoming="_RTD-6-YNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_TuYNEeWt6-AQEw3bRw" target="_RTD_T-YNEeWt6-AQEw3bRw" source="_RTD_U-YNEeWt6-AQEw3bRw"/>
                    <structuredNodeOutput xmi:id="_RTD_T-YNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65569de5.operand2.result" incoming="_RTD_TuYNEeWt6-AQEw3bRw" outgoing="_RTD-7-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_UOYNEeWt6-AQEw3bRw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_UeYNEeWt6-AQEw3bRw" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_UuYNEeWt6-AQEw3bRw" name="Value(true)">
                      <result xmi:id="_RTD_U-YNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RTD_TuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_VOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_VeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_RTD_VuYNEeWt6-AQEw3bRw" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_V-YNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65569de5.operand3" incoming="_RTD-7eYNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_WOYNEeWt6-AQEw3bRw" target="_RTD_aOYNEeWt6-AQEw3bRw" source="_RTD_YOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_WeYNEeWt6-AQEw3bRw" target="_RTD_dOYNEeWt6-AQEw3bRw" source="_RTD_a-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_WuYNEeWt6-AQEw3bRw" target="_RTD_euYNEeWt6-AQEw3bRw" source="_RTD_b-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_W-YNEeWt6-AQEw3bRw" target="_RTD_XOYNEeWt6-AQEw3bRw" source="_RTD_d-YNEeWt6-AQEw3bRw"/>
                    <structuredNodeOutput xmi:id="_RTD_XOYNEeWt6-AQEw3bRw" name="ConditionalLogicalExpression@65569de5.operand3.result" incoming="_RTD_W-YNEeWt6-AQEw3bRw" outgoing="_RTD-8OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_XeYNEeWt6-AQEw3bRw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_XuYNEeWt6-AQEw3bRw" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_X-YNEeWt6-AQEw3bRw" name="Value(400)">
                      <result xmi:id="_RTD_YOYNEeWt6-AQEw3bRw" name="Value(400).result" outgoing="_RTD_WOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_YeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_YuYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_Y-YNEeWt6-AQEw3bRw" value="400">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD_ZOYNEeWt6-AQEw3bRw" name="Call(Mod)">
                      <argument xmi:id="_RTD_ZeYNEeWt6-AQEw3bRw" name="Call(Mod).argument(x)" incoming="_RTDYn-YNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_ZuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_Z-YNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <argument xmi:id="_RTD_aOYNEeWt6-AQEw3bRw" name="Call(Mod).argument(y)" incoming="_RTD_WOYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_aeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_auYNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <result xmi:id="_RTD_a-YNEeWt6-AQEw3bRw" name="Call(Mod).result(result)" outgoing="_RTD_WeYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_bOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_beYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_buYNEeWt6-AQEw3bRw" name="Value(0)">
                      <result xmi:id="_RTD_b-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTD_WuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_cOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_ceYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_cuYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:TestIdentityAction" xmi:id="_RTD_c-YNEeWt6-AQEw3bRw" name="Test(==)">
                      <first xmi:id="_RTD_dOYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RTD_WeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_deYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_duYNEeWt6-AQEw3bRw" value="1"/>
                      </first>
                      <result xmi:id="_RTD_d-YNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RTD_W-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_eOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_eeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <second xmi:id="_RTD_euYNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RTD_WuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_e-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_fOYNEeWt6-AQEw3bRw" value="1"/>
                      </second>
                    </node>
                  </node>
                  <node xmi:type="uml:InitialNode" xmi:id="_RTD_feYNEeWt6-AQEw3bRw" name="Initial(ConditionalLogicalExpression@65569de5)" outgoing="_RTD-6eYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_RTD_fuYNEeWt6-AQEw3bRw" name="Decision(ConditionalLogicalExpression@65569de5)" incoming="_RTD-6eYNEeWt6-AQEw3bRw _RTD-6uYNEeWt6-AQEw3bRw" outgoing="_RTD-6-YNEeWt6-AQEw3bRw _RTD-7eYNEeWt6-AQEw3bRw" decisionInputFlow="_RTD-6uYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_RTD_f-YNEeWt6-AQEw3bRw" name="Merge(ConditionalLogicalExpression@65569de5.result)" incoming="_RTD-7-YNEeWt6-AQEw3bRw _RTD-8OYNEeWt6-AQEw3bRw" outgoing="_RTD-2uYNEeWt6-AQEw3bRw"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_gOYNEeWt6-AQEw3bRw" name="ExpressionStatement@3df920d">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_geYNEeWt6-AQEw3bRw" target="_RTD_guYNEeWt6-AQEw3bRw" source="_RTD_heYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_RTD_guYNEeWt6-AQEw3bRw" name="Fork(numDays)@337cbc54" incoming="_RTD_geYNEeWt6-AQEw3bRw" outgoing="_RTD-2-YNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_g-YNEeWt6-AQEw3bRw" name="RightHandSide@42304934">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_hOYNEeWt6-AQEw3bRw" name="Value(29)">
                      <result xmi:id="_RTD_heYNEeWt6-AQEw3bRw" name="Value(29).result" outgoing="_RTD_geYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_huYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_h-YNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_iOYNEeWt6-AQEw3bRw" value="29">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_ieYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@337cbc54)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_iuYNEeWt6-AQEw3bRw" target="_RTD_juYNEeWt6-AQEw3bRw" source="_RTD_i-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RTD_i-YNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@337cbc54).input" incoming="_RTD-2-YNEeWt6-AQEw3bRw" outgoing="_RTD_iuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_jOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_jeYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RTD_juYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@337cbc54).output" incoming="_RTD_iuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_j-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_kOYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_keYNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RTD_kuYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_k-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_lOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RTD_leYNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_luYNEeWt6-AQEw3bRw" name="ExpressionStatement@434d7142">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_l-YNEeWt6-AQEw3bRw" target="_RTD_mOYNEeWt6-AQEw3bRw" source="_RTD_m-YNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_RTD_mOYNEeWt6-AQEw3bRw" name="Fork(numDays)@62c6f9d1" incoming="_RTD_l-YNEeWt6-AQEw3bRw" outgoing="_RTD-3OYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_meYNEeWt6-AQEw3bRw" name="RightHandSide@753b3b00">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_muYNEeWt6-AQEw3bRw" name="Value(28)">
                      <result xmi:id="_RTD_m-YNEeWt6-AQEw3bRw" name="Value(28).result" outgoing="_RTD_l-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_nOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_neYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_nuYNEeWt6-AQEw3bRw" value="28">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_n-YNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@62c6f9d1)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_oOYNEeWt6-AQEw3bRw" target="_RTD_pOYNEeWt6-AQEw3bRw" source="_RTD_oeYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RTD_oeYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@62c6f9d1).input" incoming="_RTD-3OYNEeWt6-AQEw3bRw" outgoing="_RTD_oOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_ouYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_o-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RTD_pOYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@62c6f9d1).output" incoming="_RTD_oOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_peYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_puYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <clause xmi:id="_RTD_p-YNEeWt6-AQEw3bRw" body="_RTD_gOYNEeWt6-AQEw3bRw _RTD_ieYNEeWt6-AQEw3bRw" bodyOutput="_RTD_juYNEeWt6-AQEw3bRw" decider="_RTD-8eYNEeWt6-AQEw3bRw" successorClause="_RTD_qOYNEeWt6-AQEw3bRw" test="_RTD-3eYNEeWt6-AQEw3bRw"/>
                <clause xmi:id="_RTD_qOYNEeWt6-AQEw3bRw" body="_RTD_luYNEeWt6-AQEw3bRw _RTD_n-YNEeWt6-AQEw3bRw" bodyOutput="_RTD_pOYNEeWt6-AQEw3bRw" decider="_RTD_kuYNEeWt6-AQEw3bRw" predecessorClause="_RTD_p-YNEeWt6-AQEw3bRw" test="_RTD_keYNEeWt6-AQEw3bRw"/>
                <result xmi:id="_RTD_qeYNEeWt6-AQEw3bRw" name="IfStatement@3b93f34c.result(numDays)" outgoing="_RTD9g-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_quYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_q-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RTD_rOYNEeWt6-AQEw3bRw" name="Fork(numDays)" incoming="_RTD9g-YNEeWt6-AQEw3bRw" outgoing="_RTD9hOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_reYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_ruYNEeWt6-AQEw3bRw" target="_RTD_suYNEeWt6-AQEw3bRw" source="_RTD_r-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTD_r-YNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)).input" incoming="_RTD9hOYNEeWt6-AQEw3bRw" outgoing="_RTD_ruYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_sOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_seYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTD_suYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)).output" incoming="_RTD_ruYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_s-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_tOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_teYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTD_tuYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_t-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_uOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTD_ueYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_uuYNEeWt6-AQEw3bRw" name="ExpressionStatement@2b23ce36" outgoing="_RTD9heYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_u-YNEeWt6-AQEw3bRw" target="_RTD_vuYNEeWt6-AQEw3bRw" source="_RTD_xuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTD_vOYNEeWt6-AQEw3bRw" target="_RTD_veYNEeWt6-AQEw3bRw" source="_RTD_xOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTD_veYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RTD_vOYNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RTD_vuYNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RTD_u-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_v-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_wOYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTD_weYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_wuYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_w-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_xOYNEeWt6-AQEw3bRw" name="Tuple@7ee1d295" outgoing="_RTD_vOYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_xeYNEeWt6-AQEw3bRw" name="Value(&quot;Invalid month.&quot;)">
                    <result xmi:id="_RTD_xuYNEeWt6-AQEw3bRw" name="Value(&quot;Invalid month.&quot;).result" outgoing="_RTD_u-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_x-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_yOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RTD_yeYNEeWt6-AQEw3bRw" value="Invalid month.">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_yuYNEeWt6-AQEw3bRw" name="ExpressionStatement@450597ed" incoming="_RTD9heYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_y-YNEeWt6-AQEw3bRw" target="_RTD_zOYNEeWt6-AQEw3bRw" source="_RTD_z-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTD_zOYNEeWt6-AQEw3bRw" name="Fork(numDays)@39945928" incoming="_RTD_y-YNEeWt6-AQEw3bRw" outgoing="_RTD9huYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_zeYNEeWt6-AQEw3bRw" name="RightHandSide@3a696ea0">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_zuYNEeWt6-AQEw3bRw" name="Value(0)">
                    <result xmi:id="_RTD_z-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTD_y-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_0OYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_0eYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_0uYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_0-YNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@39945928)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_1OYNEeWt6-AQEw3bRw" target="_RTD_2OYNEeWt6-AQEw3bRw" source="_RTD_1eYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTD_1eYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@39945928).input" incoming="_RTD9huYNEeWt6-AQEw3bRw" outgoing="_RTD_1OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_1uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_1-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTD_2OYNEeWt6-AQEw3bRw" name="Passthru(Fork(numDays)@39945928).output" incoming="_RTD_1OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_2eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_2uYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_RTD_2-YNEeWt6-AQEw3bRw" body="_RTD-QeYNEeWt6-AQEw3bRw _RTD-SuYNEeWt6-AQEw3bRw" bodyOutput="_RTD-T-YNEeWt6-AQEw3bRw" decider="_RTD-PuYNEeWt6-AQEw3bRw" successorClause="_RTD_3uYNEeWt6-AQEw3bRw" test="_RTD9iOYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTD_3OYNEeWt6-AQEw3bRw" body="_RTD-t-YNEeWt6-AQEw3bRw _RTD-wOYNEeWt6-AQEw3bRw" bodyOutput="_RTD-xeYNEeWt6-AQEw3bRw" decider="_RTD-tOYNEeWt6-AQEw3bRw" successorClause="_RTD_3uYNEeWt6-AQEw3bRw" test="_RTD-UuYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTD_3eYNEeWt6-AQEw3bRw" body="_RTD-2eYNEeWt6-AQEw3bRw _RTD_reYNEeWt6-AQEw3bRw" bodyOutput="_RTD_suYNEeWt6-AQEw3bRw" decider="_RTD-0-YNEeWt6-AQEw3bRw" successorClause="_RTD_3uYNEeWt6-AQEw3bRw" test="_RTD-yOYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTD_3uYNEeWt6-AQEw3bRw" body="_RTD_uuYNEeWt6-AQEw3bRw _RTD_yuYNEeWt6-AQEw3bRw _RTD_0-YNEeWt6-AQEw3bRw" bodyOutput="_RTD_2OYNEeWt6-AQEw3bRw" decider="_RTD_tuYNEeWt6-AQEw3bRw" predecessorClause="_RTD_2-YNEeWt6-AQEw3bRw _RTD_3OYNEeWt6-AQEw3bRw _RTD_3eYNEeWt6-AQEw3bRw" test="_RTD_teYNEeWt6-AQEw3bRw"/>
              <result xmi:id="_RTD_3-YNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@5e98e103).result(numDays)" outgoing="_RTD9cuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_4OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_4eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTD_4uYNEeWt6-AQEw3bRw" name="Fork(numDays)" incoming="_RTD9cuYNEeWt6-AQEw3bRw" outgoing="_RTDYseYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_4-YNEeWt6-AQEw3bRw" name="Switch((SwitchStatement@5e98e103)" outgoing="_RTD9c-YNEeWt6-AQEw3bRw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_5OYNEeWt6-AQEw3bRw" name="ExpressionStatement@55a16b05" incoming="_RTDYoeYNEeWt6-AQEw3bRw" outgoing="_RTDYo-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_5eYNEeWt6-AQEw3bRw" target="_RTD_5uYNEeWt6-AQEw3bRw" source="_RTD_6eYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTD_5uYNEeWt6-AQEw3bRw" name="Fork(switch1)@5d0ceef3" incoming="_RTD_5eYNEeWt6-AQEw3bRw" outgoing="_RTDYouYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_5-YNEeWt6-AQEw3bRw" name="RightHandSide@7c1bc33e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD_6OYNEeWt6-AQEw3bRw" name="Value(1)">
                <result xmi:id="_RTD_6eYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTD_5eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD_6uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD_6-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTD_7OYNEeWt6-AQEw3bRw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_7eYNEeWt6-AQEw3bRw" name="SwitchStatement@77a76bc3" incoming="_RTDYo-YNEeWt6-AQEw3bRw" outgoing="_RTDYpOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_7uYNEeWt6-AQEw3bRw" target="_RTEAfeYNEeWt6-AQEw3bRw" source="_RTEAeuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTD_7-YNEeWt6-AQEw3bRw" target="_RTD_8eYNEeWt6-AQEw3bRw" source="_RTEAfuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_8OYNEeWt6-AQEw3bRw" target="_RTD_-eYNEeWt6-AQEw3bRw" source="_RTEAjOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_RTD_8eYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@77a76bc3)" incoming="_RTD_7-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_8uYNEeWt6-AQEw3bRw" target="_RTEAAuYNEeWt6-AQEw3bRw" source="_RTD_-eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_8-YNEeWt6-AQEw3bRw" target="_RTEAFuYNEeWt6-AQEw3bRw" source="_RTEADeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_9OYNEeWt6-AQEw3bRw" target="_RTEAJOYNEeWt6-AQEw3bRw" source="_RTD_-eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_9eYNEeWt6-AQEw3bRw" target="_RTEAOOYNEeWt6-AQEw3bRw" source="_RTEAL-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_9uYNEeWt6-AQEw3bRw" target="_RTEARuYNEeWt6-AQEw3bRw" source="_RTD_-eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_9-YNEeWt6-AQEw3bRw" target="_RTEAWuYNEeWt6-AQEw3bRw" source="_RTEAUeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_-OYNEeWt6-AQEw3bRw" target="_RTEAcOYNEeWt6-AQEw3bRw" source="_RTEAZ-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTD_-eYNEeWt6-AQEw3bRw" name="Fork(Call(+).result(result))" incoming="_RTD_8OYNEeWt6-AQEw3bRw" outgoing="_RTD_8uYNEeWt6-AQEw3bRw _RTD_9OYNEeWt6-AQEw3bRw _RTD_9uYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTD_-uYNEeWt6-AQEw3bRw" name="Test(Test(Case(Value(1).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTD_--YNEeWt6-AQEw3bRw" target="_RTEACOYNEeWt6-AQEw3bRw" source="_RTD__eYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTD__OYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RTD__eYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTD_--YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTD__uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTD__-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAAOYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEAAeYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result))">
                  <first xmi:id="_RTEAAuYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result)).first" incoming="_RTD_8uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAA-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEABOYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTEABeYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEABuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAB-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTEACOYNEeWt6-AQEw3bRw" name="Test(Case(Value(1).result)).second" incoming="_RTD_--YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEACeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEACuYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAC-YNEeWt6-AQEw3bRw" name="ExpressionStatement@d3ec691">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEADOYNEeWt6-AQEw3bRw" target="_RTEADeYNEeWt6-AQEw3bRw" source="_RTEAEOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEADeYNEeWt6-AQEw3bRw" name="Fork(switch1)@26a1fb24" incoming="_RTEADOYNEeWt6-AQEw3bRw" outgoing="_RTD_8-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEADuYNEeWt6-AQEw3bRw" name="RightHandSide@546f0c4c">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAD-YNEeWt6-AQEw3bRw" name="Value(1)">
                    <result xmi:id="_RTEAEOYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTEADOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAEeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAEuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAE-YNEeWt6-AQEw3bRw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAFOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@26a1fb24)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAFeYNEeWt6-AQEw3bRw" target="_RTEAGeYNEeWt6-AQEw3bRw" source="_RTEAFuYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEAFuYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@26a1fb24).input" incoming="_RTD_8-YNEeWt6-AQEw3bRw" outgoing="_RTEAFeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAF-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAGOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEAGeYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@26a1fb24).output" incoming="_RTEAFeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAGuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAG-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAHOYNEeWt6-AQEw3bRw" name="Test(Test(Case(Value(2).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAHeYNEeWt6-AQEw3bRw" target="_RTEAKuYNEeWt6-AQEw3bRw" source="_RTEAH-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAHuYNEeWt6-AQEw3bRw" name="Value(2)">
                  <result xmi:id="_RTEAH-YNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RTEAHeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAIOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAIeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAIuYNEeWt6-AQEw3bRw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEAI-YNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result))">
                  <first xmi:id="_RTEAJOYNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result)).first" incoming="_RTD_9OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAJeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAJuYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTEAJ-YNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAKOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAKeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTEAKuYNEeWt6-AQEw3bRw" name="Test(Case(Value(2).result)).second" incoming="_RTEAHeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAK-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEALOYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEALeYNEeWt6-AQEw3bRw" name="ExpressionStatement@2aa971c3">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEALuYNEeWt6-AQEw3bRw" target="_RTEAL-YNEeWt6-AQEw3bRw" source="_RTEAMuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEAL-YNEeWt6-AQEw3bRw" name="Fork(switch1)@736bc07c" incoming="_RTEALuYNEeWt6-AQEw3bRw" outgoing="_RTD_9eYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAMOYNEeWt6-AQEw3bRw" name="RightHandSide@272a4817">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAMeYNEeWt6-AQEw3bRw" name="Value(2)">
                    <result xmi:id="_RTEAMuYNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RTEALuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAM-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEANOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEANeYNEeWt6-AQEw3bRw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEANuYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@736bc07c)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAN-YNEeWt6-AQEw3bRw" target="_RTEAO-YNEeWt6-AQEw3bRw" source="_RTEAOOYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEAOOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@736bc07c).input" incoming="_RTD_9eYNEeWt6-AQEw3bRw" outgoing="_RTEAN-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAOeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAOuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEAO-YNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@736bc07c).output" incoming="_RTEAN-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAPOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAPeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAPuYNEeWt6-AQEw3bRw" name="Test(Test(Case(Value(3).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAP-YNEeWt6-AQEw3bRw" target="_RTEATOYNEeWt6-AQEw3bRw" source="_RTEAQeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAQOYNEeWt6-AQEw3bRw" name="Value(3)">
                  <result xmi:id="_RTEAQeYNEeWt6-AQEw3bRw" name="Value(3).result" outgoing="_RTEAP-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAQuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAQ-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAROYNEeWt6-AQEw3bRw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEAReYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result))">
                  <first xmi:id="_RTEARuYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result)).first" incoming="_RTD_9uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAR-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEASOYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTEASeYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEASuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAS-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTEATOYNEeWt6-AQEw3bRw" name="Test(Case(Value(3).result)).second" incoming="_RTEAP-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEATeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEATuYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAT-YNEeWt6-AQEw3bRw" name="ExpressionStatement@13cc8815">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAUOYNEeWt6-AQEw3bRw" target="_RTEAUeYNEeWt6-AQEw3bRw" source="_RTEAVOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEAUeYNEeWt6-AQEw3bRw" name="Fork(switch1)@6db576a3" incoming="_RTEAUOYNEeWt6-AQEw3bRw" outgoing="_RTD_9-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAUuYNEeWt6-AQEw3bRw" name="RightHandSide@247fff9a">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAU-YNEeWt6-AQEw3bRw" name="Value(3)">
                    <result xmi:id="_RTEAVOYNEeWt6-AQEw3bRw" name="Value(3).result" outgoing="_RTEAUOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAVeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAVuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAV-YNEeWt6-AQEw3bRw" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAWOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@6db576a3)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAWeYNEeWt6-AQEw3bRw" target="_RTEAXeYNEeWt6-AQEw3bRw" source="_RTEAWuYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEAWuYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@6db576a3).input" incoming="_RTD_9-YNEeWt6-AQEw3bRw" outgoing="_RTEAWeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAW-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAXOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEAXeYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@6db576a3).output" incoming="_RTEAWeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAXuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAX-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAYOYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTEAYeYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAYuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAY-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEAZOYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAZeYNEeWt6-AQEw3bRw" name="ExpressionStatement@35485f5">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAZuYNEeWt6-AQEw3bRw" target="_RTEAZ-YNEeWt6-AQEw3bRw" source="_RTEAauYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEAZ-YNEeWt6-AQEw3bRw" name="Fork(switch1)@56595bb5" incoming="_RTEAZuYNEeWt6-AQEw3bRw" outgoing="_RTD_-OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAaOYNEeWt6-AQEw3bRw" name="RightHandSide@493f45d">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAaeYNEeWt6-AQEw3bRw" name="Value(0)">
                    <result xmi:id="_RTEAauYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEAZuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAa-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAbOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAbeYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAbuYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@56595bb5)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAb-YNEeWt6-AQEw3bRw" target="_RTEAc-YNEeWt6-AQEw3bRw" source="_RTEAcOYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEAcOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@56595bb5).input" incoming="_RTD_-OYNEeWt6-AQEw3bRw" outgoing="_RTEAb-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAceYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAcuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEAc-YNEeWt6-AQEw3bRw" name="Passthru(Fork(switch1)@56595bb5).output" incoming="_RTEAb-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAdOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAdeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_RTEAduYNEeWt6-AQEw3bRw" body="_RTEAC-YNEeWt6-AQEw3bRw _RTEAFOYNEeWt6-AQEw3bRw" bodyOutput="_RTEAGeYNEeWt6-AQEw3bRw" decider="_RTEABeYNEeWt6-AQEw3bRw" successorClause="_RTEAeeYNEeWt6-AQEw3bRw" test="_RTD_-uYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTEAd-YNEeWt6-AQEw3bRw" body="_RTEALeYNEeWt6-AQEw3bRw _RTEANuYNEeWt6-AQEw3bRw" bodyOutput="_RTEAO-YNEeWt6-AQEw3bRw" decider="_RTEAJ-YNEeWt6-AQEw3bRw" successorClause="_RTEAeeYNEeWt6-AQEw3bRw" test="_RTEAHOYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTEAeOYNEeWt6-AQEw3bRw" body="_RTEAT-YNEeWt6-AQEw3bRw _RTEAWOYNEeWt6-AQEw3bRw" bodyOutput="_RTEAXeYNEeWt6-AQEw3bRw" decider="_RTEASeYNEeWt6-AQEw3bRw" successorClause="_RTEAeeYNEeWt6-AQEw3bRw" test="_RTEAPuYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTEAeeYNEeWt6-AQEw3bRw" body="_RTEAZeYNEeWt6-AQEw3bRw _RTEAbuYNEeWt6-AQEw3bRw" bodyOutput="_RTEAc-YNEeWt6-AQEw3bRw" decider="_RTEAYeYNEeWt6-AQEw3bRw" predecessorClause="_RTEAduYNEeWt6-AQEw3bRw _RTEAd-YNEeWt6-AQEw3bRw _RTEAeOYNEeWt6-AQEw3bRw" test="_RTEAYOYNEeWt6-AQEw3bRw"/>
              <result xmi:id="_RTEAeuYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@77a76bc3).result(switch1)" outgoing="_RTD_7uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAe-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAfOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEAfeYNEeWt6-AQEw3bRw" name="Fork(switch1)" incoming="_RTD_7uYNEeWt6-AQEw3bRw" outgoing="_RTDYsuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAfuYNEeWt6-AQEw3bRw" name="Switch((SwitchStatement@77a76bc3)" outgoing="_RTD_7-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAf-YNEeWt6-AQEw3bRw" target="_RTEAieYNEeWt6-AQEw3bRw" source="_RTEAgeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAgOYNEeWt6-AQEw3bRw" name="Value(2)">
                <result xmi:id="_RTEAgeYNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RTEAf-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAguYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAg-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAhOYNEeWt6-AQEw3bRw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEAheYNEeWt6-AQEw3bRw" name="Call(+)">
                <argument xmi:id="_RTEAhuYNEeWt6-AQEw3bRw" name="Call(+).argument(x)" incoming="_RTDYouYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAh-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAiOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTEAieYNEeWt6-AQEw3bRw" name="Call(+).argument(y)" incoming="_RTEAf-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAiuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAi-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTEAjOYNEeWt6-AQEw3bRw" name="Call(+).result(result)" outgoing="_RTD_8OYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAjeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAjuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAj-YNEeWt6-AQEw3bRw" name="ExpressionStatement@3a4bb6f9" incoming="_RTDYpOYNEeWt6-AQEw3bRw" outgoing="_RTDYqOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAkOYNEeWt6-AQEw3bRw" target="_RTEAkeYNEeWt6-AQEw3bRw" source="_RTEAlOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEAkeYNEeWt6-AQEw3bRw" name="Fork(switch2)@2f6c736" incoming="_RTEAkOYNEeWt6-AQEw3bRw" outgoing="_RTDYpeYNEeWt6-AQEw3bRw _RTDYpuYNEeWt6-AQEw3bRw _RTDYp-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAkuYNEeWt6-AQEw3bRw" name="RightHandSide@1790abbf">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAk-YNEeWt6-AQEw3bRw" name="Value(0)">
                <result xmi:id="_RTEAlOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEAkOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAleYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAluYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAl-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAmOYNEeWt6-AQEw3bRw" name="SwitchStatement@a59c266" incoming="_RTDYqOYNEeWt6-AQEw3bRw" outgoing="_RTDYquYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAmeYNEeWt6-AQEw3bRw" target="_RTEBHeYNEeWt6-AQEw3bRw" source="_RTEBGuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEAmuYNEeWt6-AQEw3bRw" target="_RTEAnOYNEeWt6-AQEw3bRw" source="_RTEBHuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAm-YNEeWt6-AQEw3bRw" target="_RTEAoOYNEeWt6-AQEw3bRw" source="_RTEBLOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_RTEAnOYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@a59c266)" incoming="_RTEAmuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAneYNEeWt6-AQEw3bRw" target="_RTEA1uYNEeWt6-AQEw3bRw" source="_RTEAoOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAnuYNEeWt6-AQEw3bRw" target="_RTEAuuYNEeWt6-AQEw3bRw" source="_RTEA-eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAn-YNEeWt6-AQEw3bRw" target="_RTEBBeYNEeWt6-AQEw3bRw" source="_RTEA_OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTEAoOYNEeWt6-AQEw3bRw" name="Fork(Call(Div).result(result))" incoming="_RTEAm-YNEeWt6-AQEw3bRw" outgoing="_RTEAneYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEAoeYNEeWt6-AQEw3bRw" name="Test(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result()))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAouYNEeWt6-AQEw3bRw" target="_RTEAxuYNEeWt6-AQEw3bRw" source="_RTEAvuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAo-YNEeWt6-AQEw3bRw" target="_RTEAzeYNEeWt6-AQEw3bRw" source="_RTEA1uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEApOYNEeWt6-AQEw3bRw" target="_RTEA2OYNEeWt6-AQEw3bRw" source="_RTEA1uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEApeYNEeWt6-AQEw3bRw" target="_RTEA3uYNEeWt6-AQEw3bRw" source="_RTEAyeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEApuYNEeWt6-AQEw3bRw" target="_RTEA0-YNEeWt6-AQEw3bRw" source="_RTEA3uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAp-YNEeWt6-AQEw3bRw" target="_RTEA4OYNEeWt6-AQEw3bRw" source="_RTEA3uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAqOYNEeWt6-AQEw3bRw" target="_RTEA5-YNEeWt6-AQEw3bRw" source="_RTEA2-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAqeYNEeWt6-AQEw3bRw" target="_RTEA6OYNEeWt6-AQEw3bRw" source="_RTEA4-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAquYNEeWt6-AQEw3bRw" target="_RTEA6uYNEeWt6-AQEw3bRw" source="_RTEA5-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAq-YNEeWt6-AQEw3bRw" target="_RTEA8eYNEeWt6-AQEw3bRw" source="_RTEA6OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEArOYNEeWt6-AQEw3bRw" target="_RTEA9-YNEeWt6-AQEw3bRw" source="_RTEA6OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTEAreYNEeWt6-AQEw3bRw" target="_RTEAzOYNEeWt6-AQEw3bRw" source="_RTEA9-YNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEAruYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTEAr-YNEeWt6-AQEw3bRw" target="_RTEA6eYNEeWt6-AQEw3bRw" source="_RTEA9-YNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEAsOYNEeWt6-AQEw3bRw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTEAseYNEeWt6-AQEw3bRw" target="_RTEA-OYNEeWt6-AQEw3bRw" source="_RTEA5uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAsuYNEeWt6-AQEw3bRw" target="_RTEA-OYNEeWt6-AQEw3bRw" source="_RTEA5-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTEAs-YNEeWt6-AQEw3bRw" target="_RTEA9-YNEeWt6-AQEw3bRw" source="_RTEA-OYNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEAtOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTEAteYNEeWt6-AQEw3bRw" target="_RTEA8OYNEeWt6-AQEw3bRw" source="_RTEA-OYNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEAtuYNEeWt6-AQEw3bRw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAt-YNEeWt6-AQEw3bRw" target="_RTEA-eYNEeWt6-AQEw3bRw" source="_RTEA0OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAuOYNEeWt6-AQEw3bRw" target="_RTEA-eYNEeWt6-AQEw3bRw" source="_RTEA7eYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEAueYNEeWt6-AQEw3bRw" target="_RTEA-eYNEeWt6-AQEw3bRw" source="_RTEA9OYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTEAuuYNEeWt6-AQEw3bRw" name="Decider(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result()))" incoming="_RTEAnuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAu-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAvOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEAveYNEeWt6-AQEw3bRw" name="Value(0)">
                  <result xmi:id="_RTEAvuYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEAouYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAv-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAwOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTEAweYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEAwuYNEeWt6-AQEw3bRw" name="Call(Div)">
                  <argument xmi:id="_RTEAw-YNEeWt6-AQEw3bRw" name="Call(Div).argument(x)" incoming="_RTDYpuYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAxOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAxeYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RTEAxuYNEeWt6-AQEw3bRw" name="Call(Div).argument(y)" incoming="_RTEAouYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAx-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAyOYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTEAyeYNEeWt6-AQEw3bRw" name="Call(Div).result(result)" outgoing="_RTEApeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAyuYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAy-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEAzOYNEeWt6-AQEw3bRw" name="Test(Case(Call(Div).result(result)))" incoming="_RTEAreYNEeWt6-AQEw3bRw">
                  <first xmi:id="_RTEAzeYNEeWt6-AQEw3bRw" name="Test(Case(Call(Div).result(result))).first" incoming="_RTEAo-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEAzuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEAz-YNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTEA0OYNEeWt6-AQEw3bRw" name="Test(Case(Call(Div).result(result))).result" outgoing="_RTEAt-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA0eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA0uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTEA0-YNEeWt6-AQEw3bRw" name="Test(Case(Call(Div).result(result))).second" incoming="_RTEApuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA1OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA1eYNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEA1uYNEeWt6-AQEw3bRw" name="Fork(Fork(Call(Div).result(result)))" incoming="_RTEAneYNEeWt6-AQEw3bRw" outgoing="_RTEAo-YNEeWt6-AQEw3bRw _RTEApOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEA1-YNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
                  <argument xmi:id="_RTEA2OYNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RTEApOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA2eYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA2uYNEeWt6-AQEw3bRw" value="*"/>
                  </argument>
                  <result xmi:id="_RTEA2-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RTEAqOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA3OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA3eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEA3uYNEeWt6-AQEw3bRw" name="Fork(Call(Div).result(result))" incoming="_RTEApeYNEeWt6-AQEw3bRw" outgoing="_RTEApuYNEeWt6-AQEw3bRw _RTEAp-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEA3-YNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
                  <argument xmi:id="_RTEA4OYNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RTEAp-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA4eYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA4uYNEeWt6-AQEw3bRw" value="*"/>
                  </argument>
                  <result xmi:id="_RTEA4-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RTEAqeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA5OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA5eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RTEA5uYNEeWt6-AQEw3bRw" name="Initial(Test(Case(Call(Div).result(result))))" outgoing="_RTEAseYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEA5-YNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RTEAqOYNEeWt6-AQEw3bRw" outgoing="_RTEAquYNEeWt6-AQEw3bRw _RTEAsuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEA6OYNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RTEAqeYNEeWt6-AQEw3bRw" outgoing="_RTEAq-YNEeWt6-AQEw3bRw _RTEArOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEA6eYNEeWt6-AQEw3bRw" name="Call(Not)" incoming="_RTEAr-YNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RTEA6uYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RTEAquYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA6-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA7OYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTEA7eYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RTEAuOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA7uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA7-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEA8OYNEeWt6-AQEw3bRw" name="Call(Not)" incoming="_RTEAteYNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RTEA8eYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RTEAq-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA8uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA8-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RTEA9OYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RTEAueYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEA9eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEA9uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_RTEA9-YNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RTEArOYNEeWt6-AQEw3bRw _RTEAs-YNEeWt6-AQEw3bRw" outgoing="_RTEAreYNEeWt6-AQEw3bRw _RTEAr-YNEeWt6-AQEw3bRw" decisionInputFlow="_RTEArOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_RTEA-OYNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RTEAseYNEeWt6-AQEw3bRw _RTEAsuYNEeWt6-AQEw3bRw" outgoing="_RTEAs-YNEeWt6-AQEw3bRw _RTEAteYNEeWt6-AQEw3bRw" decisionInputFlow="_RTEAsuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RTEA-eYNEeWt6-AQEw3bRw" name="Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RTEAt-YNEeWt6-AQEw3bRw _RTEAuOYNEeWt6-AQEw3bRw _RTEAueYNEeWt6-AQEw3bRw" outgoing="_RTEAnuYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEA-uYNEeWt6-AQEw3bRw" name="ExpressionStatement@6331ae23">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEA--YNEeWt6-AQEw3bRw" target="_RTEA_OYNEeWt6-AQEw3bRw" source="_RTEA_-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEA_OYNEeWt6-AQEw3bRw" name="Fork(switch2)@38415e83" incoming="_RTEA--YNEeWt6-AQEw3bRw" outgoing="_RTEAn-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEA_eYNEeWt6-AQEw3bRw" name="RightHandSide@4ba4074f">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEA_uYNEeWt6-AQEw3bRw" name="Value(1)">
                    <result xmi:id="_RTEA_-YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTEA--YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBAOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBAeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEBAuYNEeWt6-AQEw3bRw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBA-YNEeWt6-AQEw3bRw" name="Passthru(Fork(switch2)@38415e83)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBBOYNEeWt6-AQEw3bRw" target="_RTEBCOYNEeWt6-AQEw3bRw" source="_RTEBBeYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEBBeYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch2)@38415e83).input" incoming="_RTEAn-YNEeWt6-AQEw3bRw" outgoing="_RTEBBOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBBuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBB-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEBCOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch2)@38415e83).output" incoming="_RTEBBOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBCeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBCuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBC-YNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTEBDOYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBDeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBDuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEBD-YNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBEOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch2)@2f6c736)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBEeYNEeWt6-AQEw3bRw" target="_RTEBFeYNEeWt6-AQEw3bRw" source="_RTEBEuYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEBEuYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch2)@2f6c736).input" incoming="_RTDYp-YNEeWt6-AQEw3bRw" outgoing="_RTEBEeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBE-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBFOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEBFeYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch2)@2f6c736).output" incoming="_RTEBEeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBFuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBF-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_RTEBGOYNEeWt6-AQEw3bRw" body="_RTEA-uYNEeWt6-AQEw3bRw _RTEBA-YNEeWt6-AQEw3bRw" bodyOutput="_RTEBCOYNEeWt6-AQEw3bRw" decider="_RTEAuuYNEeWt6-AQEw3bRw" successorClause="_RTEBGeYNEeWt6-AQEw3bRw" test="_RTEAoeYNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTEBGeYNEeWt6-AQEw3bRw" body="_RTEBEOYNEeWt6-AQEw3bRw" bodyOutput="_RTEBFeYNEeWt6-AQEw3bRw" decider="_RTEBDOYNEeWt6-AQEw3bRw" predecessorClause="_RTEBGOYNEeWt6-AQEw3bRw" test="_RTEBC-YNEeWt6-AQEw3bRw"/>
              <result xmi:id="_RTEBGuYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@a59c266).result(switch2)" outgoing="_RTEAmeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBG-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBHOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEBHeYNEeWt6-AQEw3bRw" name="Fork(switch2)" incoming="_RTEAmeYNEeWt6-AQEw3bRw" outgoing="_RTDYqeYNEeWt6-AQEw3bRw _RTDYs-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBHuYNEeWt6-AQEw3bRw" name="Switch((SwitchStatement@a59c266)" outgoing="_RTEAmuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBH-YNEeWt6-AQEw3bRw" target="_RTEBKeYNEeWt6-AQEw3bRw" source="_RTEBIeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBIOYNEeWt6-AQEw3bRw" name="Value(0)">
                <result xmi:id="_RTEBIeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEBH-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBIuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBI-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTEBJOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEBJeYNEeWt6-AQEw3bRw" name="Call(Div)">
                <argument xmi:id="_RTEBJuYNEeWt6-AQEw3bRw" name="Call(Div).argument(x)" incoming="_RTDYpeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBJ-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBKOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTEBKeYNEeWt6-AQEw3bRw" name="Call(Div).argument(y)" incoming="_RTEBH-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBKuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBK-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTEBLOYNEeWt6-AQEw3bRw" name="Call(Div).result(result)" outgoing="_RTEAm-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBLeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBLuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBL-YNEeWt6-AQEw3bRw" name="SwitchStatement@45c2eaa4" incoming="_RTDYquYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBMOYNEeWt6-AQEw3bRw" target="_RTEBdOYNEeWt6-AQEw3bRw" source="_RTEBceYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEBMeYNEeWt6-AQEw3bRw" target="_RTEBMuYNEeWt6-AQEw3bRw" source="_RTEBdeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_RTEBMuYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@45c2eaa4)" incoming="_RTEBMeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBM-YNEeWt6-AQEw3bRw" target="_RTEBP-YNEeWt6-AQEw3bRw" source="_RTEBNuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBNOYNEeWt6-AQEw3bRw" target="_RTEBU-YNEeWt6-AQEw3bRw" source="_RTEBSuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBNeYNEeWt6-AQEw3bRw" target="_RTEBaeYNEeWt6-AQEw3bRw" source="_RTEBYOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RTEBNuYNEeWt6-AQEw3bRw" name="Fork(Fork(switch2))" incoming="_RTDYqeYNEeWt6-AQEw3bRw" outgoing="_RTEBM-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBN-YNEeWt6-AQEw3bRw" name="Test(Test(Case(Value(0).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBOOYNEeWt6-AQEw3bRw" target="_RTEBReYNEeWt6-AQEw3bRw" source="_RTEBOuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBOeYNEeWt6-AQEw3bRw" name="Value(0)">
                  <result xmi:id="_RTEBOuYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEBOOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBO-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBPOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RTEBPeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEBPuYNEeWt6-AQEw3bRw" name="Test(Case(Value(0).result))">
                  <first xmi:id="_RTEBP-YNEeWt6-AQEw3bRw" name="Test(Case(Value(0).result)).first" incoming="_RTEBM-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBQOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBQeYNEeWt6-AQEw3bRw" value="1"/>
                  </first>
                  <result xmi:id="_RTEBQuYNEeWt6-AQEw3bRw" name="Test(Case(Value(0).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBQ-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBROYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <second xmi:id="_RTEBReYNEeWt6-AQEw3bRw" name="Test(Case(Value(0).result)).second" incoming="_RTEBOOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBRuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBR-YNEeWt6-AQEw3bRw" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBSOYNEeWt6-AQEw3bRw" name="ExpressionStatement@4d61a0bb">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBSeYNEeWt6-AQEw3bRw" target="_RTEBSuYNEeWt6-AQEw3bRw" source="_RTEBTeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEBSuYNEeWt6-AQEw3bRw" name="Fork(switch3)@2e7e37a9" incoming="_RTEBSeYNEeWt6-AQEw3bRw" outgoing="_RTEBNOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBS-YNEeWt6-AQEw3bRw" name="RightHandSide@60785017">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBTOYNEeWt6-AQEw3bRw" name="Value(0)">
                    <result xmi:id="_RTEBTeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEBSeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBTuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBT-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEBUOYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBUeYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch3)@2e7e37a9)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBUuYNEeWt6-AQEw3bRw" target="_RTEBVuYNEeWt6-AQEw3bRw" source="_RTEBU-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEBU-YNEeWt6-AQEw3bRw" name="Passthru(Fork(switch3)@2e7e37a9).input" incoming="_RTEBNOYNEeWt6-AQEw3bRw" outgoing="_RTEBUuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBVOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBVeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEBVuYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch3)@2e7e37a9).output" incoming="_RTEBUuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBV-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBWOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBWeYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTEBWuYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBW-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBXOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEBXeYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBXuYNEeWt6-AQEw3bRw" name="ExpressionStatement@65ba39ae">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBX-YNEeWt6-AQEw3bRw" target="_RTEBYOYNEeWt6-AQEw3bRw" source="_RTEBY-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RTEBYOYNEeWt6-AQEw3bRw" name="Fork(switch3)@404d1e22" incoming="_RTEBX-YNEeWt6-AQEw3bRw" outgoing="_RTEBNeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBYeYNEeWt6-AQEw3bRw" name="RightHandSide@6f56b29">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBYuYNEeWt6-AQEw3bRw" name="Value(1)">
                    <result xmi:id="_RTEBY-YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTEBX-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBZOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBZeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RTEBZuYNEeWt6-AQEw3bRw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBZ-YNEeWt6-AQEw3bRw" name="Passthru(Fork(switch3)@404d1e22)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBaOYNEeWt6-AQEw3bRw" target="_RTEBbOYNEeWt6-AQEw3bRw" source="_RTEBaeYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEBaeYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch3)@404d1e22).input" incoming="_RTEBNeYNEeWt6-AQEw3bRw" outgoing="_RTEBaOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBauYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBa-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RTEBbOYNEeWt6-AQEw3bRw" name="Passthru(Fork(switch3)@404d1e22).output" incoming="_RTEBaOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBbeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBbuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_RTEBb-YNEeWt6-AQEw3bRw" body="_RTEBSOYNEeWt6-AQEw3bRw _RTEBUeYNEeWt6-AQEw3bRw" bodyOutput="_RTEBVuYNEeWt6-AQEw3bRw" decider="_RTEBQuYNEeWt6-AQEw3bRw" successorClause="_RTEBcOYNEeWt6-AQEw3bRw" test="_RTEBN-YNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RTEBcOYNEeWt6-AQEw3bRw" body="_RTEBXuYNEeWt6-AQEw3bRw _RTEBZ-YNEeWt6-AQEw3bRw" bodyOutput="_RTEBbOYNEeWt6-AQEw3bRw" decider="_RTEBWuYNEeWt6-AQEw3bRw" predecessorClause="_RTEBb-YNEeWt6-AQEw3bRw" test="_RTEBWeYNEeWt6-AQEw3bRw"/>
              <result xmi:id="_RTEBceYNEeWt6-AQEw3bRw" name="Conditional(SwitchStatement@45c2eaa4).result(switch3)" outgoing="_RTEBMOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBcuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBc-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEBdOYNEeWt6-AQEw3bRw" name="Fork(switch3)" incoming="_RTEBMOYNEeWt6-AQEw3bRw" outgoing="_RTDYtOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBdeYNEeWt6-AQEw3bRw" name="Switch((SwitchStatement@45c2eaa4)" outgoing="_RTEBMeYNEeWt6-AQEw3bRw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYY-YNEeWt6-AQEw3bRw" name="Output(reading1)" incoming="_RTDYWeYNEeWt6-AQEw3bRw" parameter="_RTDYO-YNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYZOYNEeWt6-AQEw3bRw" name="Output(condition1)" incoming="_RTDYWuYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" parameter="_RTDYPuYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYZeYNEeWt6-AQEw3bRw" name="Output(condition2)" incoming="_RTDYW-YNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" parameter="_RTDYQeYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYZuYNEeWt6-AQEw3bRw" name="Output(condition3)" incoming="_RTDYXOYNEeWt6-AQEw3bRw" type="_RTECjOYNEeWt6-AQEw3bRw" parameter="_RTDYROYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYZ-YNEeWt6-AQEw3bRw" name="Output(year)" incoming="_RTDYXeYNEeWt6-AQEw3bRw" parameter="_RTDYR-YNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYaOYNEeWt6-AQEw3bRw" name="Output(month)" incoming="_RTDYXuYNEeWt6-AQEw3bRw" parameter="_RTDYSuYNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYaeYNEeWt6-AQEw3bRw" name="Output(numDays)" incoming="_RTDYX-YNEeWt6-AQEw3bRw" parameter="_RTDYTeYNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYauYNEeWt6-AQEw3bRw" name="Output(switch1)" incoming="_RTDYYOYNEeWt6-AQEw3bRw" parameter="_RTDYUOYNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYa-YNEeWt6-AQEw3bRw" name="Output(switch2)" incoming="_RTDYYeYNEeWt6-AQEw3bRw" parameter="_RTDYU-YNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTDYbOYNEeWt6-AQEw3bRw" name="Output(switch3)" incoming="_RTDYYuYNEeWt6-AQEw3bRw" parameter="_RTDYVuYNEeWt6-AQEw3bRw">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEBduYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RTEB6-YNEeWt6-AQEw3bRw" node="_RTEBd-YNEeWt6-AQEw3bRw" group="_RTEBd-YNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RTEBd-YNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEBeOYNEeWt6-AQEw3bRw" name="Statements_Conditional$initialization$1" specification="_RTEBwOYNEeWt6-AQEw3bRw" node="_RTEBeeYNEeWt6-AQEw3bRw" group="_RTEBeeYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RTEBeeYNEeWt6-AQEw3bRw" name="Body(Statements_Conditional$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBeuYNEeWt6-AQEw3bRw" target="_RTEBieYNEeWt6-AQEw3bRw" source="_RTEBhuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBe-YNEeWt6-AQEw3bRw" target="_RTEBjeYNEeWt6-AQEw3bRw" source="_RTEBieYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBfOYNEeWt6-AQEw3bRw" target="_RTEBmOYNEeWt6-AQEw3bRw" source="_RTEBieYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBfeYNEeWt6-AQEw3bRw" target="_RTEBouYNEeWt6-AQEw3bRw" source="_RTEBieYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBfuYNEeWt6-AQEw3bRw" target="_RTEBqeYNEeWt6-AQEw3bRw" source="_RTEBpeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBf-YNEeWt6-AQEw3bRw" target="_RTEBteYNEeWt6-AQEw3bRw" source="_RTEBrOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBgOYNEeWt6-AQEw3bRw" target="_RTEBu-YNEeWt6-AQEw3bRw" source="_RTEBsOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEBgeYNEeWt6-AQEw3bRw" target="_RTEBv-YNEeWt6-AQEw3bRw" source="_RTEBvuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBguYNEeWt6-AQEw3bRw" target="_RTEBv-YNEeWt6-AQEw3bRw" source="_RTEBuOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEBg-YNEeWt6-AQEw3bRw" target="_RTEBiuYNEeWt6-AQEw3bRw" source="_RTEBv-YNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEBhOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RTEBheYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RTEBhuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTEBeuYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBh-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBiOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTEBieYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTEBeuYNEeWt6-AQEw3bRw" outgoing="_RTEBe-YNEeWt6-AQEw3bRw _RTEBfOYNEeWt6-AQEw3bRw _RTEBfeYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBiuYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RTEBg-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEBi-YNEeWt6-AQEw3bRw" target="_RTEBkOYNEeWt6-AQEw3bRw" source="_RTEBjOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RTEBjOYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1)" outgoing="_RTEBi-YNEeWt6-AQEw3bRw" operation="_RTEDgOYNEeWt6-AQEw3bRw">
              <target xmi:id="_RTEBjeYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1).target" incoming="_RTEBe-YNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBjuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBj-YNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEBkOYNEeWt6-AQEw3bRw" name="Set(initializationFlag)" incoming="_RTEBi-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEBkeYNEeWt6-AQEw3bRw" target="_RTEBnuYNEeWt6-AQEw3bRw" source="_RTEBk-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBkuYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTEBk-YNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RTEBkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBlOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBleYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEBluYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RTEBl-YNEeWt6-AQEw3bRw" name="Write(Statements_Conditional$initializationFlag$1)" structuralFeature="_RTDWaOYNEeWt6-AQEw3bRw" isReplaceAll="true">
                <object xmi:id="_RTEBmOYNEeWt6-AQEw3bRw" name="Write(Statements_Conditional$initializationFlag$1).object" incoming="_RTEBfOYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBmeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBmuYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RTEBm-YNEeWt6-AQEw3bRw" name="Write(Statements_Conditional$initializationFlag$1).result" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBnOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBneYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:id="_RTEBnuYNEeWt6-AQEw3bRw" name="Write(Statements_Conditional$initializationFlag$1).value" incoming="_RTEBkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBn-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBoOYNEeWt6-AQEw3bRw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTEBoeYNEeWt6-AQEw3bRw" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_RTDWaOYNEeWt6-AQEw3bRw">
            <object xmi:id="_RTEBouYNEeWt6-AQEw3bRw" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_RTEBfeYNEeWt6-AQEw3bRw" type="_RTDWYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBo-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBpOYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RTEBpeYNEeWt6-AQEw3bRw" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_RTEBfuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBpuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBp-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEBqOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RTEBqeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTEBfuYNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBquYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBq-YNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RTEBrOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTEBf-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBreYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBruYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEBr-YNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RTEBsOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEBgOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBseYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBsuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RTEBs-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEBtOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RTEBteYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTEBf-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBtuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBt-YNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RTEBuOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTEBguYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBueYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBuuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RTEBu-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTEBgOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBvOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBveYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RTEBvuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTEBgeYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RTEBv-YNEeWt6-AQEw3bRw" name="Decision(Test(Statements_Conditional$initializationFlag$1))" incoming="_RTEBgeYNEeWt6-AQEw3bRw _RTEBguYNEeWt6-AQEw3bRw" outgoing="_RTEBg-YNEeWt6-AQEw3bRw" decisionInputFlow="_RTEBguYNEeWt6-AQEw3bRw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RTEBwOYNEeWt6-AQEw3bRw" name="Statements_Conditional$initialization$1" visibility="protected" method="_RTEBeOYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RTEBweYNEeWt6-AQEw3bRw" name="Statements_Conditional" visibility="public" method="_RTDWa-YNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTEBwuYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RTDWYeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBw-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBxOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RTEBxeYNEeWt6-AQEw3bRw" name="run" visibility="public" method="_RTDWkeYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTEBxuYNEeWt6-AQEw3bRw" name="tester" visibility="package" type="_RTEDiuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBx-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEByOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEByeYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RTDWYeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEByuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBy-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RTEBzOYNEeWt6-AQEw3bRw" name="test" visibility="package" method="_RTDYOuYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTEBzeYNEeWt6-AQEw3bRw" name="reading1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEBzuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEBz-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB0OYNEeWt6-AQEw3bRw" name="condition1" visibility="package" type="_RTECjOYNEeWt6-AQEw3bRw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB0eYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB0uYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB0-YNEeWt6-AQEw3bRw" name="condition2" visibility="package" type="_RTECjOYNEeWt6-AQEw3bRw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB1OYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB1eYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB1uYNEeWt6-AQEw3bRw" name="condition3" visibility="package" type="_RTECjOYNEeWt6-AQEw3bRw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB1-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB2OYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB2eYNEeWt6-AQEw3bRw" name="year" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB2uYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB2-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB3OYNEeWt6-AQEw3bRw" name="month" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB3eYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB3uYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB3-YNEeWt6-AQEw3bRw" name="numDays" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB4OYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB4eYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB4uYNEeWt6-AQEw3bRw" name="switch1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB4-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB5OYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB5eYNEeWt6-AQEw3bRw" name="switch2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB5uYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB5-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEB6OYNEeWt6-AQEw3bRw" name="switch3" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB6eYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB6uYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RTEB6-YNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RTEBduYNEeWt6-AQEw3bRw" redefinedOperation="_RTEDgeYNEeWt6-AQEw3bRw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RTEB7OYNEeWt6-AQEw3bRw" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_RTEB7eYNEeWt6-AQEw3bRw" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB7uYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB7-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEB8OYNEeWt6-AQEw3bRw" name="raiseAlarm$method$1" specification="_RTECguYNEeWt6-AQEw3bRw" node="_RTEB9-YNEeWt6-AQEw3bRw _RTEB-eYNEeWt6-AQEw3bRw _RTEB_-YNEeWt6-AQEw3bRw _RTEB-OYNEeWt6-AQEw3bRw" group="_RTEB-eYNEeWt6-AQEw3bRw _RTEB_-YNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RTEB8eYNEeWt6-AQEw3bRw" name="sensorId">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB8uYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB8-YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEB9OYNEeWt6-AQEw3bRw" target="_RTEB--YNEeWt6-AQEw3bRw" source="_RTEB9-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEB9eYNEeWt6-AQEw3bRw" target="_RTEB-OYNEeWt6-AQEw3bRw" source="_RTEB-eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEB9uYNEeWt6-AQEw3bRw" target="_RTEB_-YNEeWt6-AQEw3bRw" source="_RTEB-OYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RTEB-eYNEeWt6-AQEw3bRw" name="Node(Input(sensorId))" outgoing="_RTEB9eYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEB-uYNEeWt6-AQEw3bRw" target="_RTEB_uYNEeWt6-AQEw3bRw" source="_RTEB--YNEeWt6-AQEw3bRw"/>
            <structuredNodeInput xmi:id="_RTEB--YNEeWt6-AQEw3bRw" name="Input(sensorId)" incoming="_RTEB9OYNEeWt6-AQEw3bRw" outgoing="_RTEB-uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEB_OYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEB_eYNEeWt6-AQEw3bRw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEB_uYNEeWt6-AQEw3bRw" name="Fork(sensorId)" incoming="_RTEB-uYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <structuredNode xmi:id="_RTEB_-YNEeWt6-AQEw3bRw" name="Body(raiseAlarm$method$1)" incoming="_RTEB9uYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTEB9-YNEeWt6-AQEw3bRw" name="Input(sensorId)" outgoing="_RTEB9OYNEeWt6-AQEw3bRw" parameter="_RTEB8eYNEeWt6-AQEw3bRw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </node>
          <node xmi:type="uml:JoinNode" xmi:id="_RTEB-OYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RTEB9eYNEeWt6-AQEw3bRw" outgoing="_RTEB9uYNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECAOYNEeWt6-AQEw3bRw" name="cleanUp$method$1" specification="_RTEChuYNEeWt6-AQEw3bRw" node="_RTECAeYNEeWt6-AQEw3bRw" group="_RTECAeYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RTECAeYNEeWt6-AQEw3bRw" name="Body(cleanUp$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECAuYNEeWt6-AQEw3bRw" name="Monitor$method$1" specification="_RTECh-YNEeWt6-AQEw3bRw" node="_RTECB-YNEeWt6-AQEw3bRw _RTECCOYNEeWt6-AQEw3bRw" group="_RTECCOYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RTECA-YNEeWt6-AQEw3bRw" name="" type="_RTEB7OYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECBOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECBeYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECBuYNEeWt6-AQEw3bRw" target="_RTECB-YNEeWt6-AQEw3bRw" source="_RTECGeYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RTECCOYNEeWt6-AQEw3bRw" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECCeYNEeWt6-AQEw3bRw" target="_RTECGeYNEeWt6-AQEw3bRw" source="_RTECFuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECCuYNEeWt6-AQEw3bRw" target="_RTECG-YNEeWt6-AQEw3bRw" source="_RTECGeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECC-YNEeWt6-AQEw3bRw" target="_RTECFOYNEeWt6-AQEw3bRw" source="_RTECGuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECDOYNEeWt6-AQEw3bRw" target="_RTECH-YNEeWt6-AQEw3bRw" source="_RTECGeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECDeYNEeWt6-AQEw3bRw" target="_RTECJuYNEeWt6-AQEw3bRw" source="_RTECIuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECDuYNEeWt6-AQEw3bRw" target="_RTECMuYNEeWt6-AQEw3bRw" source="_RTECKeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECD-YNEeWt6-AQEw3bRw" target="_RTECOOYNEeWt6-AQEw3bRw" source="_RTECLeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECEOYNEeWt6-AQEw3bRw" target="_RTECPOYNEeWt6-AQEw3bRw" source="_RTECO-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECEeYNEeWt6-AQEw3bRw" target="_RTECPOYNEeWt6-AQEw3bRw" source="_RTECNeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECEuYNEeWt6-AQEw3bRw" target="_RTECGuYNEeWt6-AQEw3bRw" source="_RTECPOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTECE-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECFOYNEeWt6-AQEw3bRw" name="Body" incoming="_RTECC-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RTECFeYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RTECFuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTECCeYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECF-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECGOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTECGeYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTECCeYNEeWt6-AQEw3bRw" outgoing="_RTECBuYNEeWt6-AQEw3bRw _RTECCuYNEeWt6-AQEw3bRw _RTECDOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RTECGuYNEeWt6-AQEw3bRw" name="Call(Monitor$initialization$1)" incoming="_RTECEuYNEeWt6-AQEw3bRw" outgoing="_RTECC-YNEeWt6-AQEw3bRw" operation="_RTECgeYNEeWt6-AQEw3bRw">
              <target xmi:id="_RTECG-YNEeWt6-AQEw3bRw" name="Call(Monitor$initialization$1).target" incoming="_RTECCuYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECHOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECHeYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTECHuYNEeWt6-AQEw3bRw" name="Read(Monitor$initializationFlag$1)" structuralFeature="_RTEB7eYNEeWt6-AQEw3bRw">
              <object xmi:id="_RTECH-YNEeWt6-AQEw3bRw" name="Read(Monitor$initializationFlag$1).object" incoming="_RTECDOYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECIOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECIeYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RTECIuYNEeWt6-AQEw3bRw" name="Read(Monitor$initializationFlag$1).result" outgoing="_RTECDeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECI-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECJOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTECJeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RTECJuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTECDeYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECJ-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECKOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RTECKeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTECDuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECKuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECK-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTECLOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RTECLeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTECD-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECLuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECL-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RTECMOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RTECMeYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RTECMuYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTECDuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECM-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECNOYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RTECNeYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTECEeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECNuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECN-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RTECOOYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTECD-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECOeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECOuYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RTECO-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTECEOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RTECPOYNEeWt6-AQEw3bRw" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_RTECEOYNEeWt6-AQEw3bRw _RTECEeYNEeWt6-AQEw3bRw" outgoing="_RTECEuYNEeWt6-AQEw3bRw" decisionInputFlow="_RTECEeYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTECB-YNEeWt6-AQEw3bRw" name="Return" incoming="_RTECBuYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" parameter="_RTECA-YNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECPeYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RTECi-YNEeWt6-AQEw3bRw" node="_RTECPuYNEeWt6-AQEw3bRw" group="_RTECPuYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RTECPuYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECP-YNEeWt6-AQEw3bRw" name="Monitor$initialization$1" specification="_RTECgeYNEeWt6-AQEw3bRw" node="_RTECQOYNEeWt6-AQEw3bRw" group="_RTECQOYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RTECQOYNEeWt6-AQEw3bRw" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECQeYNEeWt6-AQEw3bRw" target="_RTECT-YNEeWt6-AQEw3bRw" source="_RTECTOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECQuYNEeWt6-AQEw3bRw" target="_RTECWeYNEeWt6-AQEw3bRw" source="_RTECT-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECQ-YNEeWt6-AQEw3bRw" target="_RTECY-YNEeWt6-AQEw3bRw" source="_RTECT-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECROYNEeWt6-AQEw3bRw" target="_RTECauYNEeWt6-AQEw3bRw" source="_RTECZuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECReYNEeWt6-AQEw3bRw" target="_RTECduYNEeWt6-AQEw3bRw" source="_RTECbeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECRuYNEeWt6-AQEw3bRw" target="_RTECfOYNEeWt6-AQEw3bRw" source="_RTECceYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECR-YNEeWt6-AQEw3bRw" target="_RTECgOYNEeWt6-AQEw3bRw" source="_RTECf-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECSOYNEeWt6-AQEw3bRw" target="_RTECgOYNEeWt6-AQEw3bRw" source="_RTECeeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECSeYNEeWt6-AQEw3bRw" target="_RTECUOYNEeWt6-AQEw3bRw" source="_RTECgOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTECSuYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RTECS-YNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RTECTOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTECQeYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECTeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECTuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTECT-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTECQeYNEeWt6-AQEw3bRw" outgoing="_RTECQuYNEeWt6-AQEw3bRw _RTECQ-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECUOYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RTECSeYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECUeYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECUuYNEeWt6-AQEw3bRw" target="_RTECX-YNEeWt6-AQEw3bRw" source="_RTECVOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTECU-YNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RTECVOYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RTECUuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECVeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECVuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RTECV-YNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RTECWOYNEeWt6-AQEw3bRw" name="Write(Monitor$initializationFlag$1)" structuralFeature="_RTEB7eYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RTECWeYNEeWt6-AQEw3bRw" name="Write(Monitor$initializationFlag$1).object" incoming="_RTECQuYNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECWuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECW-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RTECXOYNEeWt6-AQEw3bRw" name="Write(Monitor$initializationFlag$1).result" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECXeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECXuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RTECX-YNEeWt6-AQEw3bRw" name="Write(Monitor$initializationFlag$1).value" incoming="_RTECUuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECYOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECYeYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTECYuYNEeWt6-AQEw3bRw" name="Read(Monitor$initializationFlag$1)" structuralFeature="_RTEB7eYNEeWt6-AQEw3bRw">
              <object xmi:id="_RTECY-YNEeWt6-AQEw3bRw" name="Read(Monitor$initializationFlag$1).object" incoming="_RTECQ-YNEeWt6-AQEw3bRw" type="_RTEB7OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECZOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECZeYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RTECZuYNEeWt6-AQEw3bRw" name="Read(Monitor$initializationFlag$1).result" outgoing="_RTECROYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECZ-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECaOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTECaeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RTECauYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTECROYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECa-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECbOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RTECbeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTECReYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECbuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECb-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTECcOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RTECceYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTECRuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECcuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECc-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RTECdOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RTECdeYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RTECduYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTECReYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECd-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECeOYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RTECeeYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTECSOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECeuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECe-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RTECfOYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTECRuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECfeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECfuYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RTECf-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTECR-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RTECgOYNEeWt6-AQEw3bRw" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_RTECR-YNEeWt6-AQEw3bRw _RTECSOYNEeWt6-AQEw3bRw" outgoing="_RTECSeYNEeWt6-AQEw3bRw" decisionInputFlow="_RTECSOYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RTECgeYNEeWt6-AQEw3bRw" name="Monitor$initialization$1" visibility="protected" method="_RTECP-YNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RTECguYNEeWt6-AQEw3bRw" name="raiseAlarm" visibility="public" method="_RTEB8OYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RTECg-YNEeWt6-AQEw3bRw" name="sensorId" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEChOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECheYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RTEChuYNEeWt6-AQEw3bRw" name="cleanUp" visibility="public" method="_RTECAOYNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RTECh-YNEeWt6-AQEw3bRw" name="Monitor" visibility="public" method="_RTECAuYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RTECiOYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RTEB7OYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECieYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECiuYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RTECi-YNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RTECPeYNEeWt6-AQEw3bRw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RTECjOYNEeWt6-AQEw3bRw" name="Condition" visibility="package">
        <ownedLiteral xmi:id="_RTECjeYNEeWt6-AQEw3bRw" name="normal" visibility="package"/>
        <ownedLiteral xmi:id="_RTECjuYNEeWt6-AQEw3bRw" name="alert" visibility="package"/>
        <ownedLiteral xmi:id="_RTECj-YNEeWt6-AQEw3bRw" name="critical" visibility="package"/>
        <ownedLiteral xmi:id="_RTECkOYNEeWt6-AQEw3bRw" name="error" visibility="package"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RTECkeYNEeWt6-AQEw3bRw" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_RTECkuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RTECk-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RTEClOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RTECleYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RTECluYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RTECl-YNEeWt6-AQEw3bRw" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECmOYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECmeYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RTECmuYNEeWt6-AQEw3bRw" name="tester" visibility="private" type="_RTEDiuYNEeWt6-AQEw3bRw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECm-YNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECnOYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECneYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RTEDgeYNEeWt6-AQEw3bRw" node="_RTECnuYNEeWt6-AQEw3bRw" group="_RTECnuYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RTECnuYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECn-YNEeWt6-AQEw3bRw" name="done$method$1" specification="_RTEDguYNEeWt6-AQEw3bRw" node="_RTECoOYNEeWt6-AQEw3bRw" group="_RTECoOYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RTECoOYNEeWt6-AQEw3bRw" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTECoeYNEeWt6-AQEw3bRw" target="_RTECsuYNEeWt6-AQEw3bRw" source="_RTECouYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECouYNEeWt6-AQEw3bRw" name="ExpressionStatement@4e74fed4" outgoing="_RTECoeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECo-YNEeWt6-AQEw3bRw" target="_RTECpuYNEeWt6-AQEw3bRw" source="_RTECruYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECpOYNEeWt6-AQEw3bRw" target="_RTECpeYNEeWt6-AQEw3bRw" source="_RTECrOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTECpeYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RTECpOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTECpuYNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RTECo-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECp-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECqOYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTECqeYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECquYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECq-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECrOYNEeWt6-AQEw3bRw" name="Tuple@2513d111" outgoing="_RTECpOYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTECreYNEeWt6-AQEw3bRw" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_RTECruYNEeWt6-AQEw3bRw" name="Value(&quot;Done.&quot;).result" outgoing="_RTECo-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECr-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECsOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RTECseYNEeWt6-AQEw3bRw" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECsuYNEeWt6-AQEw3bRw" name="ExpressionStatement@22082151" incoming="_RTECoeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECs-YNEeWt6-AQEw3bRw" target="_RTECu-YNEeWt6-AQEw3bRw" source="_RTECx-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTECtOYNEeWt6-AQEw3bRw" target="_RTECteYNEeWt6-AQEw3bRw" source="_RTECvOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_RTECteYNEeWt6-AQEw3bRw" name="Collect(SendSignal(Continue))" incoming="_RTECtOYNEeWt6-AQEw3bRw" mode="parallel" inputElement="_RTECu-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECtuYNEeWt6-AQEw3bRw" target="_RTECuOYNEeWt6-AQEw3bRw" source="_RTECu-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RTECt-YNEeWt6-AQEw3bRw" name="SendSignal(Continue)" signal="_RTEk8-YNEeWt6-AQEw3bRw">
                <target xmi:id="_RTECuOYNEeWt6-AQEw3bRw" name="SendSignal(Continue).target" incoming="_RTECtuYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECueYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECuuYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_RTECu-YNEeWt6-AQEw3bRw" name="Collect(SendSignal(Continue)).inputElement" incoming="_RTECs-YNEeWt6-AQEw3bRw" outgoing="_RTECtuYNEeWt6-AQEw3bRw" regionAsInput="_RTECteYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTECvOYNEeWt6-AQEw3bRw" name="Feature(Read(tester).result)" outgoing="_RTECtOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECveYNEeWt6-AQEw3bRw" target="_RTECyuYNEeWt6-AQEw3bRw" source="_RTECwOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTECvuYNEeWt6-AQEw3bRw" target="_RTECxOYNEeWt6-AQEw3bRw" source="_RTECyuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RTECv-YNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RTECwOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTECveYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECweYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECwuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTECw-YNEeWt6-AQEw3bRw" name="Read(tester)" structuralFeature="_RTECmuYNEeWt6-AQEw3bRw">
                <object xmi:id="_RTECxOYNEeWt6-AQEw3bRw" name="Read(tester).object" incoming="_RTECvuYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECxeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECxuYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RTECx-YNEeWt6-AQEw3bRw" name="Read(tester).result" outgoing="_RTECs-YNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECyOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECyeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RTECyuYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTECveYNEeWt6-AQEw3bRw" outgoing="_RTECvuYNEeWt6-AQEw3bRw"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTECy-YNEeWt6-AQEw3bRw" name="Test$method$1" specification="_RTEDg-YNEeWt6-AQEw3bRw" node="_RTEC1-YNEeWt6-AQEw3bRw _RTEC2uYNEeWt6-AQEw3bRw _RTEC2OYNEeWt6-AQEw3bRw _RTEC4OYNEeWt6-AQEw3bRw _RTEC2eYNEeWt6-AQEw3bRw" group="_RTEC2uYNEeWt6-AQEw3bRw _RTEC4OYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTECzOYNEeWt6-AQEw3bRw" name="tester" type="_RTEDiuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTECzeYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTECzuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTECz-YNEeWt6-AQEw3bRw" name="" type="_RTECkeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEC0OYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEC0eYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC0uYNEeWt6-AQEw3bRw" target="_RTEC3OYNEeWt6-AQEw3bRw" source="_RTEC1-YNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC0-YNEeWt6-AQEw3bRw" target="_RTEC_uYNEeWt6-AQEw3bRw" source="_RTEC3-YNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC1OYNEeWt6-AQEw3bRw" target="_RTEC2OYNEeWt6-AQEw3bRw" source="_RTEDGuYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RTEC1eYNEeWt6-AQEw3bRw" target="_RTEC2eYNEeWt6-AQEw3bRw" source="_RTEC2uYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RTEC1uYNEeWt6-AQEw3bRw" target="_RTEC4OYNEeWt6-AQEw3bRw" source="_RTEC2eYNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RTEC2uYNEeWt6-AQEw3bRw" name="Node(Input(tester))" outgoing="_RTEC1eYNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC2-YNEeWt6-AQEw3bRw" target="_RTEC3-YNEeWt6-AQEw3bRw" source="_RTEC3OYNEeWt6-AQEw3bRw"/>
          <structuredNodeInput xmi:id="_RTEC3OYNEeWt6-AQEw3bRw" name="Input(tester)" incoming="_RTEC0uYNEeWt6-AQEw3bRw" outgoing="_RTEC2-YNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEC3eYNEeWt6-AQEw3bRw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEC3uYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_RTEC3-YNEeWt6-AQEw3bRw" name="Fork(tester)" incoming="_RTEC2-YNEeWt6-AQEw3bRw" outgoing="_RTEC0-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <structuredNode xmi:id="_RTEC4OYNEeWt6-AQEw3bRw" name="Body(Test$method$1)" incoming="_RTEC1uYNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC4eYNEeWt6-AQEw3bRw" target="_RTEDGuYNEeWt6-AQEw3bRw" source="_RTEDF-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC4uYNEeWt6-AQEw3bRw" target="_RTEDHOYNEeWt6-AQEw3bRw" source="_RTEDGuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEC4-YNEeWt6-AQEw3bRw" target="_RTEC7OYNEeWt6-AQEw3bRw" source="_RTEDG-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC5OYNEeWt6-AQEw3bRw" target="_RTEDIOYNEeWt6-AQEw3bRw" source="_RTEDGuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC5eYNEeWt6-AQEw3bRw" target="_RTEDJ-YNEeWt6-AQEw3bRw" source="_RTEDI-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC5uYNEeWt6-AQEw3bRw" target="_RTEDM-YNEeWt6-AQEw3bRw" source="_RTEDKuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC5-YNEeWt6-AQEw3bRw" target="_RTEDOeYNEeWt6-AQEw3bRw" source="_RTEDLuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEC6OYNEeWt6-AQEw3bRw" target="_RTEDPeYNEeWt6-AQEw3bRw" source="_RTEDPOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC6eYNEeWt6-AQEw3bRw" target="_RTEDPeYNEeWt6-AQEw3bRw" source="_RTEDNuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEC6uYNEeWt6-AQEw3bRw" target="_RTEDG-YNEeWt6-AQEw3bRw" source="_RTEDPeYNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEC6-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEC7OYNEeWt6-AQEw3bRw" name="Body" incoming="_RTEC4-YNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEC7eYNEeWt6-AQEw3bRw" name="ExpressionStatement@78278dae">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC7uYNEeWt6-AQEw3bRw" target="_RTEC-OYNEeWt6-AQEw3bRw" source="_RTEC9OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC7-YNEeWt6-AQEw3bRw" target="_RTEDAeYNEeWt6-AQEw3bRw" source="_RTEC_uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEC8OYNEeWt6-AQEw3bRw" target="_RTEDB-YNEeWt6-AQEw3bRw" source="_RTEC--YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTEC8eYNEeWt6-AQEw3bRw" target="_RTEC8uYNEeWt6-AQEw3bRw" source="_RTEDFeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEC8uYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@60434618)" incoming="_RTEC8eYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RTEC8-YNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RTEC9OYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTEC7uYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEC9eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEC9uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RTEC9-YNEeWt6-AQEw3bRw" name="Clear(tester)" structuralFeature="_RTECmuYNEeWt6-AQEw3bRw">
                <object xmi:id="_RTEC-OYNEeWt6-AQEw3bRw" name="Clear(tester).object" incoming="_RTEC7uYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEC-eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEC-uYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RTEC--YNEeWt6-AQEw3bRw" name="Clear(tester).result" outgoing="_RTEC8OYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEC_OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEC_eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RTEC_uYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@60434618)" incoming="_RTEC0-YNEeWt6-AQEw3bRw" outgoing="_RTEC7-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEC_-YNEeWt6-AQEw3bRw" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDAOYNEeWt6-AQEw3bRw" target="_RTEDFOYNEeWt6-AQEw3bRw" source="_RTEDAeYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RTEDAeYNEeWt6-AQEw3bRw" name="WriteAll(Test::tester).input(Test::tester)" incoming="_RTEC7-YNEeWt6-AQEw3bRw" outgoing="_RTEDAOYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDAuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDA-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_RTEDBOYNEeWt6-AQEw3bRw" name="Iterate(Write(tester))" inputElement="_RTEDFOYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDBeYNEeWt6-AQEw3bRw" target="_RTEDEeYNEeWt6-AQEw3bRw" source="_RTEDFOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDBuYNEeWt6-AQEw3bRw" target="_RTEDC-YNEeWt6-AQEw3bRw" source="_RTEDB-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RTEDB-YNEeWt6-AQEw3bRw" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_RTEC8OYNEeWt6-AQEw3bRw" outgoing="_RTEDBuYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDCOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDCeYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RTEDCuYNEeWt6-AQEw3bRw" name="Write(tester)" structuralFeature="_RTECmuYNEeWt6-AQEw3bRw">
                    <object xmi:id="_RTEDC-YNEeWt6-AQEw3bRw" name="Write(tester).object" incoming="_RTEDBuYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDDOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDDeYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RTEDDuYNEeWt6-AQEw3bRw" name="Write(tester).result" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDD-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDEOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RTEDEeYNEeWt6-AQEw3bRw" name="Write(tester).value" incoming="_RTEDBeYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDEuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDE-YNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RTEDFOYNEeWt6-AQEw3bRw" name="Iterate(Write(tester)).inputElement" incoming="_RTEDAOYNEeWt6-AQEw3bRw" outgoing="_RTEDBeYNEeWt6-AQEw3bRw" regionAsInput="_RTEDBOYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEDFeYNEeWt6-AQEw3bRw" name="RightHandSide@11534466" outgoing="_RTEC8eYNEeWt6-AQEw3bRw"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RTEDFuYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RTEDF-YNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTEC4eYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDGOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDGeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTEDGuYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTEC4eYNEeWt6-AQEw3bRw" outgoing="_RTEC1OYNEeWt6-AQEw3bRw _RTEC4uYNEeWt6-AQEw3bRw _RTEC5OYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RTEDG-YNEeWt6-AQEw3bRw" name="Call(Test$initialization$1)" incoming="_RTEC6uYNEeWt6-AQEw3bRw" outgoing="_RTEC4-YNEeWt6-AQEw3bRw" operation="_RTEDgOYNEeWt6-AQEw3bRw">
            <target xmi:id="_RTEDHOYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1).target" incoming="_RTEC4uYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDHeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDHuYNEeWt6-AQEw3bRw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTEDH-YNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1)" structuralFeature="_RTECl-YNEeWt6-AQEw3bRw">
            <object xmi:id="_RTEDIOYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).object" incoming="_RTEC5OYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDIeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDIuYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RTEDI-YNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).result" outgoing="_RTEC5eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDJOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDJeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEDJuYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RTEDJ-YNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTEC5eYNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDKOYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDKeYNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RTEDKuYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTEC5uYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDK-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDLOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEDLeYNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RTEDLuYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEC5-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDL-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDMOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RTEDMeYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEDMuYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RTEDM-YNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTEC5uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDNOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDNeYNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RTEDNuYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTEC6eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDN-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDOOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RTEDOeYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTEC5-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDOuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDO-YNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RTEDPOYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTEC6OYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RTEDPeYNEeWt6-AQEw3bRw" name="Decision(Test(Test$initializationFlag$1))" incoming="_RTEC6OYNEeWt6-AQEw3bRw _RTEC6eYNEeWt6-AQEw3bRw" outgoing="_RTEC6uYNEeWt6-AQEw3bRw" decisionInputFlow="_RTEC6eYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTEC1-YNEeWt6-AQEw3bRw" name="Input(tester)" outgoing="_RTEC0uYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" parameter="_RTECzOYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTEC2OYNEeWt6-AQEw3bRw" name="Return" incoming="_RTEC1OYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" parameter="_RTECz-YNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:JoinNode" xmi:id="_RTEC2eYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RTEC1eYNEeWt6-AQEw3bRw" outgoing="_RTEC1uYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEDPuYNEeWt6-AQEw3bRw" name="Test$initialization$1" specification="_RTEDgOYNEeWt6-AQEw3bRw" node="_RTEDP-YNEeWt6-AQEw3bRw" group="_RTEDP-YNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RTEDP-YNEeWt6-AQEw3bRw" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDQOYNEeWt6-AQEw3bRw" target="_RTEDTuYNEeWt6-AQEw3bRw" source="_RTEDS-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDQeYNEeWt6-AQEw3bRw" target="_RTEDWOYNEeWt6-AQEw3bRw" source="_RTEDTuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDQuYNEeWt6-AQEw3bRw" target="_RTEDYuYNEeWt6-AQEw3bRw" source="_RTEDTuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDQ-YNEeWt6-AQEw3bRw" target="_RTEDaeYNEeWt6-AQEw3bRw" source="_RTEDZeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDROYNEeWt6-AQEw3bRw" target="_RTEDdeYNEeWt6-AQEw3bRw" source="_RTEDbOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDReYNEeWt6-AQEw3bRw" target="_RTEDe-YNEeWt6-AQEw3bRw" source="_RTEDcOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEDRuYNEeWt6-AQEw3bRw" target="_RTEDf-YNEeWt6-AQEw3bRw" source="_RTEDfuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDR-YNEeWt6-AQEw3bRw" target="_RTEDf-YNEeWt6-AQEw3bRw" source="_RTEDeOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEDSOYNEeWt6-AQEw3bRw" target="_RTEDT-YNEeWt6-AQEw3bRw" source="_RTEDf-YNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEDSeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RTEDSuYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RTEDS-YNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTEDQOYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDTOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDTeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RTEDTuYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTEDQOYNEeWt6-AQEw3bRw" outgoing="_RTEDQeYNEeWt6-AQEw3bRw _RTEDQuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEDT-YNEeWt6-AQEw3bRw" name="Initialization" incoming="_RTEDSOYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEDUOYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDUeYNEeWt6-AQEw3bRw" target="_RTEDXuYNEeWt6-AQEw3bRw" source="_RTEDU-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEDUuYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RTEDU-YNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RTEDUeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDVOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDVeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEDVuYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RTEDV-YNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1)" structuralFeature="_RTECl-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                <object xmi:id="_RTEDWOYNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).object" incoming="_RTEDQeYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDWeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDWuYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RTEDW-YNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).result" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDXOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDXeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:id="_RTEDXuYNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).value" incoming="_RTEDUeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDX-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDYOYNEeWt6-AQEw3bRw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTEDYeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1)" structuralFeature="_RTECl-YNEeWt6-AQEw3bRw">
            <object xmi:id="_RTEDYuYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).object" incoming="_RTEDQuYNEeWt6-AQEw3bRw" type="_RTECkeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDY-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDZOYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RTEDZeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).result" outgoing="_RTEDQ-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDZuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDZ-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEDaOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RTEDaeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTEDQ-YNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDauYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDa-YNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RTEDbOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTEDROYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDbeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDbuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEDb-YNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RTEDcOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEDReYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDceYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDcuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RTEDc-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEDdOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RTEDdeYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTEDROYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDduYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDd-YNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RTEDeOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTEDR-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDeeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDeuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RTEDe-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTEDReYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDfOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDfeYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RTEDfuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTEDRuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RTEDf-YNEeWt6-AQEw3bRw" name="Decision(Test(Test$initializationFlag$1))" incoming="_RTEDRuYNEeWt6-AQEw3bRw _RTEDR-YNEeWt6-AQEw3bRw" outgoing="_RTEDSOYNEeWt6-AQEw3bRw" decisionInputFlow="_RTEDR-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RTEDgOYNEeWt6-AQEw3bRw" name="Test$initialization$1" visibility="protected" method="_RTEDPuYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RTEDgeYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RTECneYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RTEDguYNEeWt6-AQEw3bRw" name="done" visibility="public" method="_RTECn-YNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RTEDg-YNEeWt6-AQEw3bRw" name="Test" visibility="protected" method="_RTECy-YNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RTEDhOYNEeWt6-AQEw3bRw" name="tester" visibility="package" type="_RTEDiuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDheYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDhuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RTEDh-YNEeWt6-AQEw3bRw" name="" visibility="package" type="_RTECkeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDiOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDieYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RTEDiuYNEeWt6-AQEw3bRw" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_RTEDi-YNEeWt6-AQEw3bRw" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDjOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDjeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEDjuYNEeWt6-AQEw3bRw" name="Tester$method$1" specification="_RTEk7uYNEeWt6-AQEw3bRw" node="_RTEDk-YNEeWt6-AQEw3bRw _RTEDlOYNEeWt6-AQEw3bRw" group="_RTEDlOYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RTEDj-YNEeWt6-AQEw3bRw" name="" type="_RTEDiuYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEDkOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEDkeYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDkuYNEeWt6-AQEw3bRw" target="_RTEDk-YNEeWt6-AQEw3bRw" source="_RTEkheYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RTEDlOYNEeWt6-AQEw3bRw" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDleYNEeWt6-AQEw3bRw" target="_RTEkheYNEeWt6-AQEw3bRw" source="_RTEkguYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDluYNEeWt6-AQEw3bRw" target="_RTEkh-YNEeWt6-AQEw3bRw" source="_RTEkheYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEDl-YNEeWt6-AQEw3bRw" target="_RTEkgOYNEeWt6-AQEw3bRw" source="_RTEkhuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDmOYNEeWt6-AQEw3bRw" target="_RTEki-YNEeWt6-AQEw3bRw" source="_RTEkheYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDmeYNEeWt6-AQEw3bRw" target="_RTEkkuYNEeWt6-AQEw3bRw" source="_RTEkjuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDmuYNEeWt6-AQEw3bRw" target="_RTEknuYNEeWt6-AQEw3bRw" source="_RTEkleYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDm-YNEeWt6-AQEw3bRw" target="_RTEkpOYNEeWt6-AQEw3bRw" source="_RTEkmeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEDnOYNEeWt6-AQEw3bRw" target="_RTEkqOYNEeWt6-AQEw3bRw" source="_RTEkp-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEDneYNEeWt6-AQEw3bRw" target="_RTEkqOYNEeWt6-AQEw3bRw" source="_RTEkoeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEDnuYNEeWt6-AQEw3bRw" target="_RTEkhuYNEeWt6-AQEw3bRw" source="_RTEkqOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEDn-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEkgOYNEeWt6-AQEw3bRw" name="Body" incoming="_RTEDl-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RTEkgeYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RTEkguYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTEDleYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkg-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkhOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEkheYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTEDleYNEeWt6-AQEw3bRw" outgoing="_RTEDkuYNEeWt6-AQEw3bRw _RTEDluYNEeWt6-AQEw3bRw _RTEDmOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RTEkhuYNEeWt6-AQEw3bRw" name="Call(Tester$initialization$1)" incoming="_RTEDnuYNEeWt6-AQEw3bRw" outgoing="_RTEDl-YNEeWt6-AQEw3bRw" operation="_RTEk7eYNEeWt6-AQEw3bRw">
              <target xmi:id="_RTEkh-YNEeWt6-AQEw3bRw" name="Call(Tester$initialization$1).target" incoming="_RTEDluYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkiOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkieYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTEkiuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1)" structuralFeature="_RTEDi-YNEeWt6-AQEw3bRw">
              <object xmi:id="_RTEki-YNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).object" incoming="_RTEDmOYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkjOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkjeYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RTEkjuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).result" outgoing="_RTEDmeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkj-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkkOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEkkeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RTEkkuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTEDmeYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkk-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEklOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RTEkleYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTEDmuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkluYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkl-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEkmOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RTEkmeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEDm-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkmuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkm-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RTEknOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEkneYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RTEknuYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTEDmuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkn-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkoOYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RTEkoeYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTEDneYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkouYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEko-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RTEkpOYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTEDm-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkpeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkpuYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RTEkp-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTEDnOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RTEkqOYNEeWt6-AQEw3bRw" name="Decision(Test(Tester$initializationFlag$1))" incoming="_RTEDnOYNEeWt6-AQEw3bRw _RTEDneYNEeWt6-AQEw3bRw" outgoing="_RTEDnuYNEeWt6-AQEw3bRw" decisionInputFlow="_RTEDneYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTEDk-YNEeWt6-AQEw3bRw" name="Return" incoming="_RTEDkuYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" parameter="_RTEDj-YNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEkqeYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RTEk8uYNEeWt6-AQEw3bRw" node="_RTEkquYNEeWt6-AQEw3bRw" group="_RTEkquYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RTEkquYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RTEkq-YNEeWt6-AQEw3bRw" name="Tester$initialization$1" specification="_RTEk7eYNEeWt6-AQEw3bRw" node="_RTEkrOYNEeWt6-AQEw3bRw" group="_RTEkrOYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RTEkrOYNEeWt6-AQEw3bRw" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEkreYNEeWt6-AQEw3bRw" target="_RTEku-YNEeWt6-AQEw3bRw" source="_RTEkuOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEkruYNEeWt6-AQEw3bRw" target="_RTEkxeYNEeWt6-AQEw3bRw" source="_RTEku-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEkr-YNEeWt6-AQEw3bRw" target="_RTEkz-YNEeWt6-AQEw3bRw" source="_RTEku-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEksOYNEeWt6-AQEw3bRw" target="_RTEk1uYNEeWt6-AQEw3bRw" source="_RTEk0uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEkseYNEeWt6-AQEw3bRw" target="_RTEk4uYNEeWt6-AQEw3bRw" source="_RTEk2eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEksuYNEeWt6-AQEw3bRw" target="_RTEk6OYNEeWt6-AQEw3bRw" source="_RTEk3eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEks-YNEeWt6-AQEw3bRw" target="_RTEk7OYNEeWt6-AQEw3bRw" source="_RTEk6-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEktOYNEeWt6-AQEw3bRw" target="_RTEk7OYNEeWt6-AQEw3bRw" source="_RTEk5eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEkteYNEeWt6-AQEw3bRw" target="_RTEkvOYNEeWt6-AQEw3bRw" source="_RTEk7OYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEktuYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RTEkt-YNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RTEkuOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RTEkreYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkueYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkuuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEku-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RTEkreYNEeWt6-AQEw3bRw" outgoing="_RTEkruYNEeWt6-AQEw3bRw _RTEkr-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEkvOYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RTEkteYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEkveYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEkvuYNEeWt6-AQEw3bRw" target="_RTEky-YNEeWt6-AQEw3bRw" source="_RTEkwOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEkv-YNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RTEkwOYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RTEkvuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkweYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkwuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEkw-YNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RTEkxOYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1)" structuralFeature="_RTEDi-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RTEkxeYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).object" incoming="_RTEkruYNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkxuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkx-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RTEkyOYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).result" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkyeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkyuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RTEky-YNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).value" incoming="_RTEkvuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEkzOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEkzeYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RTEkzuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1)" structuralFeature="_RTEDi-YNEeWt6-AQEw3bRw">
              <object xmi:id="_RTEkz-YNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).object" incoming="_RTEkr-YNEeWt6-AQEw3bRw" type="_RTEDiuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk0OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk0eYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RTEk0uYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).result" outgoing="_RTEksOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk0-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk1OYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEk1eYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RTEk1uYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RTEksOYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk1-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk2OYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RTEk2eYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RTEkseYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk2uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk2-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEk3OYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RTEk3eYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RTEksuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk3uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk3-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RTEk4OYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RTEk4eYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RTEk4uYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RTEkseYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk4-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk5OYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RTEk5eYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RTEktOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk5uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk5-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RTEk6OYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RTEksuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk6eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk6uYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RTEk6-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RTEks-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RTEk7OYNEeWt6-AQEw3bRw" name="Decision(Test(Tester$initializationFlag$1))" incoming="_RTEks-YNEeWt6-AQEw3bRw _RTEktOYNEeWt6-AQEw3bRw" outgoing="_RTEkteYNEeWt6-AQEw3bRw" decisionInputFlow="_RTEktOYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RTEk7eYNEeWt6-AQEw3bRw" name="Tester$initialization$1" visibility="protected" method="_RTEkq-YNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RTEk7uYNEeWt6-AQEw3bRw" name="Tester" visibility="public" method="_RTEDjuYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RTEk7-YNEeWt6-AQEw3bRw" name="" visibility="package" type="_RTEDiuYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk8OYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk8eYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RTEk8uYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RTEkqeYNEeWt6-AQEw3bRw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RTEk8-YNEeWt6-AQEw3bRw" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_RTEk9OYNEeWt6-AQEw3bRw" name="Continue" signal="_RTEk8-YNEeWt6-AQEw3bRw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RTEk9eYNEeWt6-AQEw3bRw" name="AssertEqual" visibility="public" node="_RTElEuYNEeWt6-AQEw3bRw _RTElFuYNEeWt6-AQEw3bRw _RTElE-YNEeWt6-AQEw3bRw _RTElHOYNEeWt6-AQEw3bRw _RTElFOYNEeWt6-AQEw3bRw _RTElIuYNEeWt6-AQEw3bRw _RTElKOYNEeWt6-AQEw3bRw _RTElFeYNEeWt6-AQEw3bRw" group="_RTElFuYNEeWt6-AQEw3bRw _RTElHOYNEeWt6-AQEw3bRw _RTElIuYNEeWt6-AQEw3bRw _RTElKOYNEeWt6-AQEw3bRw">
      <packageImport xmi:id="_RTEk9uYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RTEk9-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RTEk-OYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RTEk-eYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RTEk-uYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RTEk--YNEeWt6-AQEw3bRw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk_OYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEk_eYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RTEk_uYNEeWt6-AQEw3bRw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEk_-YNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElAOYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RTElAeYNEeWt6-AQEw3bRw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElAuYNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElA-YNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElBOYNEeWt6-AQEw3bRw" target="_RTElGOYNEeWt6-AQEw3bRw" source="_RTElEuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElBeYNEeWt6-AQEw3bRw" target="_RTElHuYNEeWt6-AQEw3bRw" source="_RTElE-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElBuYNEeWt6-AQEw3bRw" target="_RTElJOYNEeWt6-AQEw3bRw" source="_RTElFOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElB-YNEeWt6-AQEw3bRw" target="_RTElTuYNEeWt6-AQEw3bRw" source="_RTElIeYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElCOYNEeWt6-AQEw3bRw" target="_RTElVuYNEeWt6-AQEw3bRw" source="_RTElJ-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElCeYNEeWt6-AQEw3bRw" target="_RTEljeYNEeWt6-AQEw3bRw" source="_RTElG-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElCuYNEeWt6-AQEw3bRw" target="_RTEls-YNEeWt6-AQEw3bRw" source="_RTElJ-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElC-YNEeWt6-AQEw3bRw" target="_RTEl0eYNEeWt6-AQEw3bRw" source="_RTElJ-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElDOYNEeWt6-AQEw3bRw" target="_RTEl9-YNEeWt6-AQEw3bRw" source="_RTElJ-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElDeYNEeWt6-AQEw3bRw" target="_RTEmF-YNEeWt6-AQEw3bRw" source="_RTElJ-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RTElDuYNEeWt6-AQEw3bRw" target="_RTElFeYNEeWt6-AQEw3bRw" source="_RTElFuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RTElD-YNEeWt6-AQEw3bRw" target="_RTElFeYNEeWt6-AQEw3bRw" source="_RTElHOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RTElEOYNEeWt6-AQEw3bRw" target="_RTElFeYNEeWt6-AQEw3bRw" source="_RTElIuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RTElEeYNEeWt6-AQEw3bRw" target="_RTElKOYNEeWt6-AQEw3bRw" source="_RTElFeYNEeWt6-AQEw3bRw"/>
      <structuredNode xmi:id="_RTElFuYNEeWt6-AQEw3bRw" name="Node(Input(label))" outgoing="_RTElDuYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElF-YNEeWt6-AQEw3bRw" target="_RTElG-YNEeWt6-AQEw3bRw" source="_RTElGOYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RTElGOYNEeWt6-AQEw3bRw" name="Input(label)" incoming="_RTElBOYNEeWt6-AQEw3bRw" outgoing="_RTElF-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElGeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElGuYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RTElG-YNEeWt6-AQEw3bRw" name="Fork(label)" incoming="_RTElF-YNEeWt6-AQEw3bRw" outgoing="_RTElCeYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RTElHOYNEeWt6-AQEw3bRw" name="Node(Input(value1))" outgoing="_RTElD-YNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElHeYNEeWt6-AQEw3bRw" target="_RTElIeYNEeWt6-AQEw3bRw" source="_RTElHuYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RTElHuYNEeWt6-AQEw3bRw" name="Input(value1)" incoming="_RTElBeYNEeWt6-AQEw3bRw" outgoing="_RTElHeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElH-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElIOYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RTElIeYNEeWt6-AQEw3bRw" name="Fork(value1)" incoming="_RTElHeYNEeWt6-AQEw3bRw" outgoing="_RTElB-YNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RTElIuYNEeWt6-AQEw3bRw" name="Node(Input(value2))" outgoing="_RTElEOYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElI-YNEeWt6-AQEw3bRw" target="_RTElJ-YNEeWt6-AQEw3bRw" source="_RTElJOYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RTElJOYNEeWt6-AQEw3bRw" name="Input(value2)" incoming="_RTElBuYNEeWt6-AQEw3bRw" outgoing="_RTElI-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElJeYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElJuYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RTElJ-YNEeWt6-AQEw3bRw" name="Fork(value2)" incoming="_RTElI-YNEeWt6-AQEw3bRw" outgoing="_RTElCOYNEeWt6-AQEw3bRw _RTElCuYNEeWt6-AQEw3bRw _RTElC-YNEeWt6-AQEw3bRw _RTElDOYNEeWt6-AQEw3bRw _RTElDeYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RTElKOYNEeWt6-AQEw3bRw" name="Body(AssertEqual)" incoming="_RTElEeYNEeWt6-AQEw3bRw">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RTElKeYNEeWt6-AQEw3bRw" name="IfStatement@7a4029a0">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTElKuYNEeWt6-AQEw3bRw" target="_RTElouYNEeWt6-AQEw3bRw" source="_RTEleeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTElK-YNEeWt6-AQEw3bRw" target="_RTEmHuYNEeWt6-AQEw3bRw" source="_RTElouYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTElLOYNEeWt6-AQEw3bRw" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElLeYNEeWt6-AQEw3bRw" target="_RTElReYNEeWt6-AQEw3bRw" source="_RTElTuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElLuYNEeWt6-AQEw3bRw" target="_RTElUOYNEeWt6-AQEw3bRw" source="_RTElTuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElL-YNEeWt6-AQEw3bRw" target="_RTElS-YNEeWt6-AQEw3bRw" source="_RTElVuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElMOYNEeWt6-AQEw3bRw" target="_RTElWOYNEeWt6-AQEw3bRw" source="_RTElVuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElMeYNEeWt6-AQEw3bRw" target="_RTElX-YNEeWt6-AQEw3bRw" source="_RTElU-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElMuYNEeWt6-AQEw3bRw" target="_RTElYOYNEeWt6-AQEw3bRw" source="_RTElW-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElM-YNEeWt6-AQEw3bRw" target="_RTElYuYNEeWt6-AQEw3bRw" source="_RTElX-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElNOYNEeWt6-AQEw3bRw" target="_RTElaeYNEeWt6-AQEw3bRw" source="_RTElYOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElNeYNEeWt6-AQEw3bRw" target="_RTElb-YNEeWt6-AQEw3bRw" source="_RTElYOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTElNuYNEeWt6-AQEw3bRw" target="_RTElROYNEeWt6-AQEw3bRw" source="_RTElb-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElN-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTElOOYNEeWt6-AQEw3bRw" target="_RTElYeYNEeWt6-AQEw3bRw" source="_RTElb-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElOeYNEeWt6-AQEw3bRw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTElOuYNEeWt6-AQEw3bRw" target="_RTElcOYNEeWt6-AQEw3bRw" source="_RTElXuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElO-YNEeWt6-AQEw3bRw" target="_RTElcOYNEeWt6-AQEw3bRw" source="_RTElX-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTElPOYNEeWt6-AQEw3bRw" target="_RTElb-YNEeWt6-AQEw3bRw" source="_RTElcOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElPeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTElPuYNEeWt6-AQEw3bRw" target="_RTElaOYNEeWt6-AQEw3bRw" source="_RTElcOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElP-YNEeWt6-AQEw3bRw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElQOYNEeWt6-AQEw3bRw" target="_RTElceYNEeWt6-AQEw3bRw" source="_RTElSOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElQeYNEeWt6-AQEw3bRw" target="_RTElceYNEeWt6-AQEw3bRw" source="_RTElZeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElQuYNEeWt6-AQEw3bRw" target="_RTElceYNEeWt6-AQEw3bRw" source="_RTElbOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElQ-YNEeWt6-AQEw3bRw" target="_RTElc-YNEeWt6-AQEw3bRw" source="_RTElceYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RTElROYNEeWt6-AQEw3bRw" name="Test(==)" incoming="_RTElNuYNEeWt6-AQEw3bRw">
              <first xmi:id="_RTElReYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RTElLeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElRuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElR-YNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RTElSOYNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RTElQOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElSeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElSuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RTElS-YNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RTElL-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElTOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElTeYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTElTuYNEeWt6-AQEw3bRw" name="Fork(Fork(value1))" incoming="_RTElB-YNEeWt6-AQEw3bRw" outgoing="_RTElLeYNEeWt6-AQEw3bRw _RTElLuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElT-YNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
              <argument xmi:id="_RTElUOYNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RTElLuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElUeYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElUuYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RTElU-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RTElMeYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElVOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElVeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTElVuYNEeWt6-AQEw3bRw" name="Fork(Fork(value2))" incoming="_RTElCOYNEeWt6-AQEw3bRw" outgoing="_RTElL-YNEeWt6-AQEw3bRw _RTElMOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElV-YNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
              <argument xmi:id="_RTElWOYNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RTElMOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElWeYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElWuYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RTElW-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RTElMuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElXOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElXeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RTElXuYNEeWt6-AQEw3bRw" name="Initial(Test(==))" outgoing="_RTElOuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTElX-YNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RTElMeYNEeWt6-AQEw3bRw" outgoing="_RTElM-YNEeWt6-AQEw3bRw _RTElO-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RTElYOYNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RTElMuYNEeWt6-AQEw3bRw" outgoing="_RTElNOYNEeWt6-AQEw3bRw _RTElNeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElYeYNEeWt6-AQEw3bRw" name="Call(Not)" incoming="_RTElOOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTElYuYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RTElM-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElY-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElZOYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTElZeYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RTElQeYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElZuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElZ-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElaOYNEeWt6-AQEw3bRw" name="Call(Not)" incoming="_RTElPuYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTElaeYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RTElNOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElauYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEla-YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTElbOYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RTElQuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElbeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElbuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_RTElb-YNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RTElNeYNEeWt6-AQEw3bRw _RTElPOYNEeWt6-AQEw3bRw" outgoing="_RTElNuYNEeWt6-AQEw3bRw _RTElOOYNEeWt6-AQEw3bRw" decisionInputFlow="_RTElNeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RTElcOYNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RTElOuYNEeWt6-AQEw3bRw _RTElO-YNEeWt6-AQEw3bRw" outgoing="_RTElPOYNEeWt6-AQEw3bRw _RTElPuYNEeWt6-AQEw3bRw" decisionInputFlow="_RTElO-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RTElceYNEeWt6-AQEw3bRw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RTElQOYNEeWt6-AQEw3bRw _RTElQeYNEeWt6-AQEw3bRw _RTElQuYNEeWt6-AQEw3bRw" outgoing="_RTElQ-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElcuYNEeWt6-AQEw3bRw" name="Call(Not)">
              <argument xmi:id="_RTElc-YNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RTElQ-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEldOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEldeYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTElduYNEeWt6-AQEw3bRw" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEld-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEleOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEleeYNEeWt6-AQEw3bRw" name="ExpressionStatement@605aafa9" outgoing="_RTElKuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEleuYNEeWt6-AQEw3bRw" target="_RTElfeYNEeWt6-AQEw3bRw" source="_RTEln-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEle-YNEeWt6-AQEw3bRw" target="_RTElfOYNEeWt6-AQEw3bRw" source="_RTElgOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElfOYNEeWt6-AQEw3bRw" name="Call(Write)" incoming="_RTEle-YNEeWt6-AQEw3bRw" behavior="_RTEmNeYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTElfeYNEeWt6-AQEw3bRw" name="Call(Write).argument(value)" incoming="_RTEleuYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElfuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElf-YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTElgOYNEeWt6-AQEw3bRw" name="Tuple@3857eff" outgoing="_RTEle-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElgeYNEeWt6-AQEw3bRw" target="_RTEliuYNEeWt6-AQEw3bRw" source="_RTElheYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElguYNEeWt6-AQEw3bRw" target="_RTElmeYNEeWt6-AQEw3bRw" source="_RTElkOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElg-YNEeWt6-AQEw3bRw" target="_RTElnOYNEeWt6-AQEw3bRw" source="_RTEllOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTElhOYNEeWt6-AQEw3bRw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RTElheYNEeWt6-AQEw3bRw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RTElgeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElhuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElh-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RTEliOYNEeWt6-AQEw3bRw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElieYNEeWt6-AQEw3bRw" name="Call(Concat)">
                <argument xmi:id="_RTEliuYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RTElgeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEli-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEljOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTEljeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RTElCeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEljuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElj-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTElkOYNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RTElguYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElkeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElkuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTElk-YNEeWt6-AQEw3bRw" name="Value(&quot;==&quot;)">
                <result xmi:id="_RTEllOYNEeWt6-AQEw3bRw" name="Value(&quot;==&quot;).result" outgoing="_RTElg-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElleYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElluYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RTEll-YNEeWt6-AQEw3bRw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElmOYNEeWt6-AQEw3bRw" name="Call(Concat)">
                <argument xmi:id="_RTElmeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RTElguYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElmuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElm-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RTElnOYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RTElg-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElneYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElnuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RTEln-YNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RTEleuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEloOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEloeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTElouYNEeWt6-AQEw3bRw" name="ExpressionStatement@386f2f22" incoming="_RTElKuYNEeWt6-AQEw3bRw" outgoing="_RTElK-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElo-YNEeWt6-AQEw3bRw" target="_RTElpuYNEeWt6-AQEw3bRw" source="_RTEmHeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTElpOYNEeWt6-AQEw3bRw" target="_RTElpeYNEeWt6-AQEw3bRw" source="_RTElqeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElpeYNEeWt6-AQEw3bRw" name="Call(Write)" incoming="_RTElpOYNEeWt6-AQEw3bRw" behavior="_RTEmNeYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTElpuYNEeWt6-AQEw3bRw" name="Call(Write).argument(value)" incoming="_RTElo-YNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElp-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElqOYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTElqeYNEeWt6-AQEw3bRw" name="Tuple@6afe37fa" outgoing="_RTElpOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTElquYNEeWt6-AQEw3bRw" target="_RTEmHOYNEeWt6-AQEw3bRw" source="_RTEmG-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElq-YNEeWt6-AQEw3bRw" target="_RTEmHOYNEeWt6-AQEw3bRw" source="_RTEltuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTElrOYNEeWt6-AQEw3bRw" target="_RTElueYNEeWt6-AQEw3bRw" source="_RTEmHOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElreYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RTElruYNEeWt6-AQEw3bRw" target="_RTElw-YNEeWt6-AQEw3bRw" source="_RTEmHOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElr-YNEeWt6-AQEw3bRw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElsOYNEeWt6-AQEw3bRw" target="_RTEmHeYNEeWt6-AQEw3bRw" source="_RTElu-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElseYNEeWt6-AQEw3bRw" target="_RTEmHeYNEeWt6-AQEw3bRw" source="_RTElzeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTElsuYNEeWt6-AQEw3bRw" name="Call(IsEmpty)">
                <argument xmi:id="_RTEls-YNEeWt6-AQEw3bRw" name="Call(IsEmpty).argument(seq)" incoming="_RTElCuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEltOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElteYNEeWt6-AQEw3bRw" value="*"/>
                </argument>
                <result xmi:id="_RTEltuYNEeWt6-AQEw3bRw" name="Call(IsEmpty).result()" outgoing="_RTElq-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElt-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEluOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTElueYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@5b795762.operand2" incoming="_RTElrOYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEluuYNEeWt6-AQEw3bRw" target="_RTElu-YNEeWt6-AQEw3bRw" source="_RTElv-YNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTElu-YNEeWt6-AQEw3bRw" name="ConditionalTestExpression@5b795762.operand2.result" incoming="_RTEluuYNEeWt6-AQEw3bRw" outgoing="_RTElsOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElvOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElveYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTElvuYNEeWt6-AQEw3bRw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_RTElv-YNEeWt6-AQEw3bRw" name="Value(&quot;null&quot;).result" outgoing="_RTEluuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElwOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElweYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RTElwuYNEeWt6-AQEw3bRw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTElw-YNEeWt6-AQEw3bRw" name="ConditionalTestExpression@5b795762.operand3" incoming="_RTElruYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTElxOYNEeWt6-AQEw3bRw" target="_RTEmGeYNEeWt6-AQEw3bRw" source="_RTEmGOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElxeYNEeWt6-AQEw3bRw" target="_RTEmGeYNEeWt6-AQEw3bRw" source="_RTEl1OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTElxuYNEeWt6-AQEw3bRw" target="_RTEl1-YNEeWt6-AQEw3bRw" source="_RTEmGeYNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElx-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RTElyOYNEeWt6-AQEw3bRw" target="_RTEmEuYNEeWt6-AQEw3bRw" source="_RTEmGeYNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTElyeYNEeWt6-AQEw3bRw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElyuYNEeWt6-AQEw3bRw" target="_RTEmGuYNEeWt6-AQEw3bRw" source="_RTEl3eYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEly-YNEeWt6-AQEw3bRw" target="_RTEmGuYNEeWt6-AQEw3bRw" source="_RTEmFOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RTElzOYNEeWt6-AQEw3bRw" target="_RTElzeYNEeWt6-AQEw3bRw" source="_RTEmGuYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RTElzeYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@5b795762.operand3.result" incoming="_RTElzOYNEeWt6-AQEw3bRw" outgoing="_RTElseYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTElzuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTElz-YNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RTEl0OYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_RTEl0eYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).object" incoming="_RTElC-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl0uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl0-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RTEl1OYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).result" outgoing="_RTElxeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl1eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl1uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEl1-YNEeWt6-AQEw3bRw" name="ConditionalTestExpression@718dd7c6.operand2" incoming="_RTElxuYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl2OYNEeWt6-AQEw3bRw" target="_RTEl-uYNEeWt6-AQEw3bRw" source="_RTEl4eYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl2eYNEeWt6-AQEw3bRw" target="_RTEl_eYNEeWt6-AQEw3bRw" source="_RTEl-OYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl2uYNEeWt6-AQEw3bRw" target="_RTEmCeYNEeWt6-AQEw3bRw" source="_RTEmAOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl2-YNEeWt6-AQEw3bRw" target="_RTEmDOYNEeWt6-AQEw3bRw" source="_RTEmBOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl3OYNEeWt6-AQEw3bRw" target="_RTEl3eYNEeWt6-AQEw3bRw" source="_RTEmD-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RTEl3eYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@718dd7c6.operand2.result" incoming="_RTEl3OYNEeWt6-AQEw3bRw" outgoing="_RTElyuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl3uYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl3-YNEeWt6-AQEw3bRw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEl4OYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RTEl4eYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;).result" outgoing="_RTEl2OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl4uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl4-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RTEl5OYNEeWt6-AQEw3bRw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_RTEl5eYNEeWt6-AQEw3bRw" name="CastExpression@40e605ea" mode="parallel" outputElement="_RTEl-OYNEeWt6-AQEw3bRw" inputElement="_RTEl9-YNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl5uYNEeWt6-AQEw3bRw" target="_RTEl7-YNEeWt6-AQEw3bRw" source="_RTEl9eYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl5-YNEeWt6-AQEw3bRw" target="_RTEl9uYNEeWt6-AQEw3bRw" source="_RTEl9eYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl6OYNEeWt6-AQEw3bRw" target="_RTEl9uYNEeWt6-AQEw3bRw" source="_RTEl8uYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl6eYNEeWt6-AQEw3bRw" target="_RTEl7eYNEeWt6-AQEw3bRw" source="_RTEl9uYNEeWt6-AQEw3bRw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_RTEl6uYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl6-YNEeWt6-AQEw3bRw" target="_RTEl9eYNEeWt6-AQEw3bRw" source="_RTEl9-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEl7OYNEeWt6-AQEw3bRw" target="_RTEl-OYNEeWt6-AQEw3bRw" source="_RTEl7eYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_RTEl7eYNEeWt6-AQEw3bRw" name="Merge(CastExpression@40e605ea.operand)" incoming="_RTEl6eYNEeWt6-AQEw3bRw" outgoing="_RTEl7OYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RTEl7uYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_RTEl7-YNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).object" incoming="_RTEl5uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl8OYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl8eYNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RTEl8uYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).result" outgoing="_RTEl6OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl8-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl9OYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RTEl9eYNEeWt6-AQEw3bRw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RTEl6-YNEeWt6-AQEw3bRw" outgoing="_RTEl5uYNEeWt6-AQEw3bRw _RTEl5-YNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_RTEl9uYNEeWt6-AQEw3bRw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RTEl5-YNEeWt6-AQEw3bRw _RTEl6OYNEeWt6-AQEw3bRw" outgoing="_RTEl6eYNEeWt6-AQEw3bRw" decisionInputFlow="_RTEl6OYNEeWt6-AQEw3bRw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RTEl9-YNEeWt6-AQEw3bRw" name="CastExpression@40e605ea.inputElement" incoming="_RTElDOYNEeWt6-AQEw3bRw" outgoing="_RTEl6-YNEeWt6-AQEw3bRw" regionAsInput="_RTEl5eYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RTEl-OYNEeWt6-AQEw3bRw" name="CastExpression@40e605ea.outputElement" incoming="_RTEl7OYNEeWt6-AQEw3bRw" outgoing="_RTEl2eYNEeWt6-AQEw3bRw" regionAsOutput="_RTEl5eYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEl-eYNEeWt6-AQEw3bRw" name="Call(Concat)">
                    <argument xmi:id="_RTEl-uYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RTEl2OYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl--YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl_OYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <argument xmi:id="_RTEl_eYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RTEl2eYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEl_uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEl_-YNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RTEmAOYNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RTEl2uYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmAeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmAuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEmA-YNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RTEmBOYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;).result" outgoing="_RTEl2-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmBeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmBuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RTEmB-YNEeWt6-AQEw3bRw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEmCOYNEeWt6-AQEw3bRw" name="Call(Concat)">
                    <argument xmi:id="_RTEmCeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RTEl2uYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmCuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmC-YNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <argument xmi:id="_RTEmDOYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RTEl2-YNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmDeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmDuYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RTEmD-YNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RTEl3OYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmEOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmEeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEmEuYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@718dd7c6.operand3" incoming="_RTElyOYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmE-YNEeWt6-AQEw3bRw" target="_RTEmFOYNEeWt6-AQEw3bRw" source="_RTEmF-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RTEmFOYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@718dd7c6.operand3.result" incoming="_RTEmE-YNEeWt6-AQEw3bRw" outgoing="_RTEly-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmFeYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmFuYNEeWt6-AQEw3bRw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_RTEmF-YNEeWt6-AQEw3bRw" name="Merge(Fork(value2))" incoming="_RTElDeYNEeWt6-AQEw3bRw" outgoing="_RTEmE-YNEeWt6-AQEw3bRw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RTEmGOYNEeWt6-AQEw3bRw" name="Initial(ConditionalTestExpression@718dd7c6)" outgoing="_RTElxOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_RTEmGeYNEeWt6-AQEw3bRw" name="Decision(ConditionalTestExpression@718dd7c6)" incoming="_RTElxOYNEeWt6-AQEw3bRw _RTElxeYNEeWt6-AQEw3bRw" outgoing="_RTElxuYNEeWt6-AQEw3bRw _RTElyOYNEeWt6-AQEw3bRw" decisionInputFlow="_RTElxeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RTEmGuYNEeWt6-AQEw3bRw" name="Merge(ConditionalTestExpression@718dd7c6.result)" incoming="_RTElyuYNEeWt6-AQEw3bRw _RTEly-YNEeWt6-AQEw3bRw" outgoing="_RTElzOYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RTEmG-YNEeWt6-AQEw3bRw" name="Initial(ConditionalTestExpression@5b795762)" outgoing="_RTElquYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RTEmHOYNEeWt6-AQEw3bRw" name="Decision(ConditionalTestExpression@5b795762)" incoming="_RTElquYNEeWt6-AQEw3bRw _RTElq-YNEeWt6-AQEw3bRw" outgoing="_RTElrOYNEeWt6-AQEw3bRw _RTElruYNEeWt6-AQEw3bRw" decisionInputFlow="_RTElq-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RTEmHeYNEeWt6-AQEw3bRw" name="Merge(ConditionalTestExpression@5b795762.result)" incoming="_RTElsOYNEeWt6-AQEw3bRw _RTElseYNEeWt6-AQEw3bRw" outgoing="_RTElo-YNEeWt6-AQEw3bRw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEmHuYNEeWt6-AQEw3bRw" name="ExpressionStatement@777b38be" incoming="_RTElK-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmH-YNEeWt6-AQEw3bRw" target="_RTEmIuYNEeWt6-AQEw3bRw" source="_RTEmKuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEmIOYNEeWt6-AQEw3bRw" target="_RTEmIeYNEeWt6-AQEw3bRw" source="_RTEmKOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEmIeYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RTEmIOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTEmIuYNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RTEmH-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmI-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmJOYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTEmJeYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmJuYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmJ-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEmKOYNEeWt6-AQEw3bRw" name="Tuple@700c427" outgoing="_RTEmIOYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEmKeYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;)">
                <result xmi:id="_RTEmKuYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;).result" outgoing="_RTEmH-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmK-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmLOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RTEmLeYNEeWt6-AQEw3bRw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEmLuYNEeWt6-AQEw3bRw" name="Value(true)">
            <result xmi:id="_RTEmL-YNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmMOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmMeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RTEmMuYNEeWt6-AQEw3bRw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RTEmM-YNEeWt6-AQEw3bRw" body="_RTEleeYNEeWt6-AQEw3bRw _RTElouYNEeWt6-AQEw3bRw _RTEmHuYNEeWt6-AQEw3bRw" decider="_RTElduYNEeWt6-AQEw3bRw" successorClause="_RTEmNOYNEeWt6-AQEw3bRw" test="_RTElLOYNEeWt6-AQEw3bRw"/>
          <clause xmi:id="_RTEmNOYNEeWt6-AQEw3bRw" decider="_RTEmL-YNEeWt6-AQEw3bRw" predecessorClause="_RTEmM-YNEeWt6-AQEw3bRw" test="_RTEmLuYNEeWt6-AQEw3bRw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTElEuYNEeWt6-AQEw3bRw" name="Input(label)" outgoing="_RTElBOYNEeWt6-AQEw3bRw" parameter="_RTEk--YNEeWt6-AQEw3bRw">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTElE-YNEeWt6-AQEw3bRw" name="Input(value1)" outgoing="_RTElBeYNEeWt6-AQEw3bRw" parameter="_RTEk_uYNEeWt6-AQEw3bRw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTElFOYNEeWt6-AQEw3bRw" name="Input(value2)" outgoing="_RTElBuYNEeWt6-AQEw3bRw" parameter="_RTElAeYNEeWt6-AQEw3bRw"/>
      <node xmi:type="uml:JoinNode" xmi:id="_RTElFeYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RTElDuYNEeWt6-AQEw3bRw _RTElD-YNEeWt6-AQEw3bRw _RTElEOYNEeWt6-AQEw3bRw" outgoing="_RTElEeYNEeWt6-AQEw3bRw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RTEmNeYNEeWt6-AQEw3bRw" name="Write" visibility="public" node="_RTEmQuYNEeWt6-AQEw3bRw _RTEmROYNEeWt6-AQEw3bRw _RTEmSuYNEeWt6-AQEw3bRw _RTEmQ-YNEeWt6-AQEw3bRw" group="_RTEmROYNEeWt6-AQEw3bRw _RTEmSuYNEeWt6-AQEw3bRw">
      <packageImport xmi:id="_RTEmNuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RTEmN-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RTEmOOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RTEmOeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RTEmOuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RTEmO-YNEeWt6-AQEw3bRw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmPOYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmPeYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmPuYNEeWt6-AQEw3bRw" target="_RTEmRuYNEeWt6-AQEw3bRw" source="_RTEmQuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmP-YNEeWt6-AQEw3bRw" target="_RTEmUeYNEeWt6-AQEw3bRw" source="_RTEmSeYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RTEmQOYNEeWt6-AQEw3bRw" target="_RTEmQ-YNEeWt6-AQEw3bRw" source="_RTEmROYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RTEmQeYNEeWt6-AQEw3bRw" target="_RTEmSuYNEeWt6-AQEw3bRw" source="_RTEmQ-YNEeWt6-AQEw3bRw"/>
      <structuredNode xmi:id="_RTEmROYNEeWt6-AQEw3bRw" name="Node(Input(value))" outgoing="_RTEmQOYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmReYNEeWt6-AQEw3bRw" target="_RTEmSeYNEeWt6-AQEw3bRw" source="_RTEmRuYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RTEmRuYNEeWt6-AQEw3bRw" name="Input(value)" incoming="_RTEmPuYNEeWt6-AQEw3bRw" outgoing="_RTEmReYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmR-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmSOYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RTEmSeYNEeWt6-AQEw3bRw" name="Fork(value)" incoming="_RTEmReYNEeWt6-AQEw3bRw" outgoing="_RTEmP-YNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RTEmSuYNEeWt6-AQEw3bRw" name="Body(Write)" incoming="_RTEmQeYNEeWt6-AQEw3bRw">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEmS-YNEeWt6-AQEw3bRw" name="ExpressionStatement@18d7dc8c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmTOYNEeWt6-AQEw3bRw" target="_RTEmXuYNEeWt6-AQEw3bRw" source="_RTEma-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RTEmTeYNEeWt6-AQEw3bRw" target="_RTEmTuYNEeWt6-AQEw3bRw" source="_RTEmX-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_RTEmTuYNEeWt6-AQEw3bRw" name="Collect(Call(write))" incoming="_RTEmTeYNEeWt6-AQEw3bRw" mode="parallel" inputElement="_RTEmXuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmT-YNEeWt6-AQEw3bRw" target="_RTEmVeYNEeWt6-AQEw3bRw" source="_RTEmUeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmUOYNEeWt6-AQEw3bRw" target="_RTEmW-YNEeWt6-AQEw3bRw" source="_RTEmXuYNEeWt6-AQEw3bRw"/>
            <structuredNodeInput xmi:id="_RTEmUeYNEeWt6-AQEw3bRw" name="Collect(Call(write)).input(Fork(value))" incoming="_RTEmP-YNEeWt6-AQEw3bRw" outgoing="_RTEmT-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmUuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmU-YNEeWt6-AQEw3bRw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RTEmVOYNEeWt6-AQEw3bRw" name="Call(write)">
              <argument xmi:id="_RTEmVeYNEeWt6-AQEw3bRw" name="Call(write).argument(value)" incoming="_RTEmT-YNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmVuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmV-YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTEmWOYNEeWt6-AQEw3bRw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmWeYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmWuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_RTEmW-YNEeWt6-AQEw3bRw" name="Call(write).target" incoming="_RTEmUOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmXOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmXeYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_RTEmXuYNEeWt6-AQEw3bRw" name="Collect(Call(write)).inputElement" incoming="_RTEmTOYNEeWt6-AQEw3bRw" outgoing="_RTEmUOYNEeWt6-AQEw3bRw" regionAsInput="_RTEmTuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEmX-YNEeWt6-AQEw3bRw" name="Feature(Call(At).result())" outgoing="_RTEmTeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmYOYNEeWt6-AQEw3bRw" target="_RTEmZeYNEeWt6-AQEw3bRw" source="_RTEmcOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmYeYNEeWt6-AQEw3bRw" target="_RTEmeOYNEeWt6-AQEw3bRw" source="_RTEmdOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RTEmYuYNEeWt6-AQEw3bRw" target="_RTEmZOYNEeWt6-AQEw3bRw" source="_RTEmbuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RTEmY-YNEeWt6-AQEw3bRw" target="_RTEmaOYNEeWt6-AQEw3bRw" source="_RTEmeOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RTEmZOYNEeWt6-AQEw3bRw" name="Call(At)" incoming="_RTEmYuYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RTEmZeYNEeWt6-AQEw3bRw" name="Call(At).argument(seq)" incoming="_RTEmYOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmZuYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmZ-YNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <argument xmi:id="_RTEmaOYNEeWt6-AQEw3bRw" name="Call(At).argument(index)" incoming="_RTEmY-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmaeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmauYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RTEma-YNEeWt6-AQEw3bRw" name="Call(At).result()" outgoing="_RTEmTOYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmbOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmbeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RTEmbuYNEeWt6-AQEw3bRw" name="Tuple@66609ccf" outgoing="_RTEmYuYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_RTEmb-YNEeWt6-AQEw3bRw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_RTEmcOYNEeWt6-AQEw3bRw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RTEmYOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmceYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmcuYNEeWt6-AQEw3bRw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RTEmc-YNEeWt6-AQEw3bRw" name="Value(1)">
                <result xmi:id="_RTEmdOYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RTEmYeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RTEmdeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTEmduYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RTEmd-YNEeWt6-AQEw3bRw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RTEmeOYNEeWt6-AQEw3bRw" name="Fork(Call(At).argument(index))" incoming="_RTEmYeYNEeWt6-AQEw3bRw" outgoing="_RTEmY-YNEeWt6-AQEw3bRw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RTEmQuYNEeWt6-AQEw3bRw" name="Input(value)" outgoing="_RTEmPuYNEeWt6-AQEw3bRw" parameter="_RTEmO-YNEeWt6-AQEw3bRw"/>
      <node xmi:type="uml:JoinNode" xmi:id="_RTEmQ-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RTEmQOYNEeWt6-AQEw3bRw" outgoing="_RTEmQeYNEeWt6-AQEw3bRw"/>
    </packagedElement>
    <profileApplication xmi:id="_RTEmeeYNEeWt6-AQEw3bRw">
      <eAnnotations xmi:id="_RTEmeuYNEeWt6-AQEw3bRw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_RTEme-YNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEDgeYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RTEmfOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEB6-YNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RTEmfeYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTECh-YNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RTEmfuYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEk7uYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RTEmf-YNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEBweYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RTEmgOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEDg-YNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RTFLkOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEBxeYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RTFLkeYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTEk8uYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RTFLkuYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RTECi-YNEeWt6-AQEw3bRw"/>
</xmi:XMI>

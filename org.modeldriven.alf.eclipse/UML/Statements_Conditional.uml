<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_lZSA0NBAEeWhI4x9CGXwiQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_lZSA0dBAEeWhI4x9CGXwiQ" name="Statements_Conditional" visibility="public">
      <packageImport xmi:id="_lZSA0tBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_lZSA09BAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_lZSA1NBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_lZSA1dBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_lZSA1tBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_lZSA19BAEeWhI4x9CGXwiQ" general="_lZT2hNBAEeWhI4x9CGXwiQ"/>
      <ownedAttribute xmi:id="_lZSA2NBAEeWhI4x9CGXwiQ" name="Statements_Conditional$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA2dBAEeWhI4x9CGXwiQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA2tBAEeWhI4x9CGXwiQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZSA29BAEeWhI4x9CGXwiQ" name="Statements_Conditional$method$1" specification="_lZTSVtBAEeWhI4x9CGXwiQ" node="_lZSA4NBAEeWhI4x9CGXwiQ _lZSA4dBAEeWhI4x9CGXwiQ" group="_lZSA4dBAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZSA3NBAEeWhI4x9CGXwiQ" name="" type="_lZSA0dBAEeWhI4x9CGXwiQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA3dBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA3tBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSA39BAEeWhI4x9CGXwiQ" target="_lZSA4NBAEeWhI4x9CGXwiQ" source="_lZSBANBAEeWhI4x9CGXwiQ"/>
        <structuredNode xmi:id="_lZSA4dBAEeWhI4x9CGXwiQ" name="Body(Statements_Conditional$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSA4tBAEeWhI4x9CGXwiQ" target="_lZSBANBAEeWhI4x9CGXwiQ" source="_lZSA_dBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSA49BAEeWhI4x9CGXwiQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSA5NBAEeWhI4x9CGXwiQ" name="ExpressionStatement@5193b25b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSA5dBAEeWhI4x9CGXwiQ" target="_lZSA6dBAEeWhI4x9CGXwiQ" source="_lZSA9NBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSA5tBAEeWhI4x9CGXwiQ" target="_lZSA6NBAEeWhI4x9CGXwiQ" source="_lZSA8tBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSA59BAEeWhI4x9CGXwiQ" target="_lZSA79BAEeWhI4x9CGXwiQ" source="_lZSA-dBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_lZSA6NBAEeWhI4x9CGXwiQ" name="Call(run)" incoming="_lZSA5tBAEeWhI4x9CGXwiQ" operation="_lZTSWtBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSA6dBAEeWhI4x9CGXwiQ" name="Call(run).argument(tester)" incoming="_lZSA5dBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA6tBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA69BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSA7NBAEeWhI4x9CGXwiQ" name="Call(run).result()" type="_lZSA0dBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA7dBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA7tBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <target xmi:id="_lZSA79BAEeWhI4x9CGXwiQ" name="Call(run).target" incoming="_lZSA59BAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA8NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA8dBAEeWhI4x9CGXwiQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSA8tBAEeWhI4x9CGXwiQ" name="Tuple@4ac28ba1" outgoing="_lZSA5tBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSA89BAEeWhI4x9CGXwiQ" name="Value(null)">
                  <result xmi:id="_lZSA9NBAEeWhI4x9CGXwiQ" name="Value(null).result" outgoing="_lZSA5dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA9dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA9tBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_lZSA99BAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_lZSA-NBAEeWhI4x9CGXwiQ" name="ReadSelf">
                <result xmi:id="_lZSA-dBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZSA59BAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA-tBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA-9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_lZSA_NBAEeWhI4x9CGXwiQ" name="ReadSelf">
            <result xmi:id="_lZSA_dBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZSA4tBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSA_tBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSA_9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSBANBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZSA4tBAEeWhI4x9CGXwiQ" outgoing="_lZSA39BAEeWhI4x9CGXwiQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSA4NBAEeWhI4x9CGXwiQ" name="Return" incoming="_lZSA39BAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" parameter="_lZSA3NBAEeWhI4x9CGXwiQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZSBAdBAEeWhI4x9CGXwiQ" name="run$method$1" specification="_lZTSWtBAEeWhI4x9CGXwiQ" node="_lZSBDdBAEeWhI4x9CGXwiQ _lZSBENBAEeWhI4x9CGXwiQ _lZSBDtBAEeWhI4x9CGXwiQ _lZSBFtBAEeWhI4x9CGXwiQ _lZSBD9BAEeWhI4x9CGXwiQ" group="_lZSBENBAEeWhI4x9CGXwiQ _lZSBFtBAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZSBAtBAEeWhI4x9CGXwiQ" name="tester" type="_lZT3fdBAEeWhI4x9CGXwiQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBA9BAEeWhI4x9CGXwiQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBBNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSBBdBAEeWhI4x9CGXwiQ" name="" type="_lZSA0dBAEeWhI4x9CGXwiQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBBtBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBB9BAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBCNBAEeWhI4x9CGXwiQ" target="_lZSBEtBAEeWhI4x9CGXwiQ" source="_lZSBDdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBCdBAEeWhI4x9CGXwiQ" target="_lZSBDtBAEeWhI4x9CGXwiQ" source="_lZSCfdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBCtBAEeWhI4x9CGXwiQ" target="_lZSCgdBAEeWhI4x9CGXwiQ" source="_lZSBFdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBC9BAEeWhI4x9CGXwiQ" target="_lZSBD9BAEeWhI4x9CGXwiQ" source="_lZSBENBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBDNBAEeWhI4x9CGXwiQ" target="_lZSBFtBAEeWhI4x9CGXwiQ" source="_lZSBD9BAEeWhI4x9CGXwiQ"/>
        <structuredNode xmi:id="_lZSBENBAEeWhI4x9CGXwiQ" name="Node(Input(tester))" outgoing="_lZSBC9BAEeWhI4x9CGXwiQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBEdBAEeWhI4x9CGXwiQ" target="_lZSBFdBAEeWhI4x9CGXwiQ" source="_lZSBEtBAEeWhI4x9CGXwiQ"/>
          <structuredNodeInput xmi:id="_lZSBEtBAEeWhI4x9CGXwiQ" name="Input(tester)" incoming="_lZSBCNBAEeWhI4x9CGXwiQ" outgoing="_lZSBEdBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBE9BAEeWhI4x9CGXwiQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBFNBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSBFdBAEeWhI4x9CGXwiQ" name="Fork(tester)" incoming="_lZSBEdBAEeWhI4x9CGXwiQ" outgoing="_lZSBCtBAEeWhI4x9CGXwiQ"/>
        </structuredNode>
        <structuredNode xmi:id="_lZSBFtBAEeWhI4x9CGXwiQ" name="Body(run$method$1)" incoming="_lZSBDNBAEeWhI4x9CGXwiQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBF9BAEeWhI4x9CGXwiQ" target="_lZSCfdBAEeWhI4x9CGXwiQ" source="_lZSCetBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBGNBAEeWhI4x9CGXwiQ" target="_lZSCiNBAEeWhI4x9CGXwiQ" source="_lZSCfdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBGdBAEeWhI4x9CGXwiQ" target="_lZSBI9BAEeWhI4x9CGXwiQ" source="_lZSCh9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBGtBAEeWhI4x9CGXwiQ" target="_lZSCh9BAEeWhI4x9CGXwiQ" source="_lZSCftBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBG9BAEeWhI4x9CGXwiQ" target="_lZSCjNBAEeWhI4x9CGXwiQ" source="_lZSCfdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBHNBAEeWhI4x9CGXwiQ" target="_lZSCk9BAEeWhI4x9CGXwiQ" source="_lZSCj9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBHdBAEeWhI4x9CGXwiQ" target="_lZSCn9BAEeWhI4x9CGXwiQ" source="_lZSCltBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBHtBAEeWhI4x9CGXwiQ" target="_lZSCpdBAEeWhI4x9CGXwiQ" source="_lZSCmtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBH9BAEeWhI4x9CGXwiQ" target="_lZSCqdBAEeWhI4x9CGXwiQ" source="_lZSCqNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBINBAEeWhI4x9CGXwiQ" target="_lZSCqdBAEeWhI4x9CGXwiQ" source="_lZSCotBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBIdBAEeWhI4x9CGXwiQ" target="_lZSCftBAEeWhI4x9CGXwiQ" source="_lZSCqdBAEeWhI4x9CGXwiQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSBItBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBI9BAEeWhI4x9CGXwiQ" name="Body" incoming="_lZSBGdBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBJNBAEeWhI4x9CGXwiQ" target="_lZSBfdBAEeWhI4x9CGXwiQ" source="_lZSBa9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBJdBAEeWhI4x9CGXwiQ" target="_lZSBddBAEeWhI4x9CGXwiQ" source="_lZSBOdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBJtBAEeWhI4x9CGXwiQ" target="_lZSBltBAEeWhI4x9CGXwiQ" source="_lZSBbNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBJ9BAEeWhI4x9CGXwiQ" target="_lZSBjtBAEeWhI4x9CGXwiQ" source="_lZSBddBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBKNBAEeWhI4x9CGXwiQ" target="_lZSBr9BAEeWhI4x9CGXwiQ" source="_lZSBbdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBKdBAEeWhI4x9CGXwiQ" target="_lZSBp9BAEeWhI4x9CGXwiQ" source="_lZSBjtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBKtBAEeWhI4x9CGXwiQ" target="_lZSByNBAEeWhI4x9CGXwiQ" source="_lZSBbtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBK9BAEeWhI4x9CGXwiQ" target="_lZSBwNBAEeWhI4x9CGXwiQ" source="_lZSBp9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBLNBAEeWhI4x9CGXwiQ" target="_lZSB4dBAEeWhI4x9CGXwiQ" source="_lZSBb9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBLdBAEeWhI4x9CGXwiQ" target="_lZSB2dBAEeWhI4x9CGXwiQ" source="_lZSBwNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBLtBAEeWhI4x9CGXwiQ" target="_lZSB-tBAEeWhI4x9CGXwiQ" source="_lZSBcNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBL9BAEeWhI4x9CGXwiQ" target="_lZSB8tBAEeWhI4x9CGXwiQ" source="_lZSB2dBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBMNBAEeWhI4x9CGXwiQ" target="_lZSCE9BAEeWhI4x9CGXwiQ" source="_lZSBcdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBMdBAEeWhI4x9CGXwiQ" target="_lZSCC9BAEeWhI4x9CGXwiQ" source="_lZSB8tBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBMtBAEeWhI4x9CGXwiQ" target="_lZSCLNBAEeWhI4x9CGXwiQ" source="_lZSBctBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBM9BAEeWhI4x9CGXwiQ" target="_lZSCJNBAEeWhI4x9CGXwiQ" source="_lZSCC9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBNNBAEeWhI4x9CGXwiQ" target="_lZSCRdBAEeWhI4x9CGXwiQ" source="_lZSBc9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBNdBAEeWhI4x9CGXwiQ" target="_lZSCPdBAEeWhI4x9CGXwiQ" source="_lZSCJNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBNtBAEeWhI4x9CGXwiQ" target="_lZSCXtBAEeWhI4x9CGXwiQ" source="_lZSBdNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBN9BAEeWhI4x9CGXwiQ" target="_lZSCVtBAEeWhI4x9CGXwiQ" source="_lZSCPdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBONBAEeWhI4x9CGXwiQ" target="_lZSCb9BAEeWhI4x9CGXwiQ" source="_lZSCVtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBOdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@1f3fd35" outgoing="_lZSBJdBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBOtBAEeWhI4x9CGXwiQ" target="_lZSBa9BAEeWhI4x9CGXwiQ" source="_lZSBRtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBO9BAEeWhI4x9CGXwiQ" target="_lZSBbNBAEeWhI4x9CGXwiQ" source="_lZSBSdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBPNBAEeWhI4x9CGXwiQ" target="_lZSBbdBAEeWhI4x9CGXwiQ" source="_lZSBTNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBPdBAEeWhI4x9CGXwiQ" target="_lZSBbtBAEeWhI4x9CGXwiQ" source="_lZSBT9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBPtBAEeWhI4x9CGXwiQ" target="_lZSBb9BAEeWhI4x9CGXwiQ" source="_lZSBUtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBP9BAEeWhI4x9CGXwiQ" target="_lZSBcNBAEeWhI4x9CGXwiQ" source="_lZSBVdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBQNBAEeWhI4x9CGXwiQ" target="_lZSBcdBAEeWhI4x9CGXwiQ" source="_lZSBWNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBQdBAEeWhI4x9CGXwiQ" target="_lZSBctBAEeWhI4x9CGXwiQ" source="_lZSBW9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBQtBAEeWhI4x9CGXwiQ" target="_lZSBc9BAEeWhI4x9CGXwiQ" source="_lZSBXtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBQ9BAEeWhI4x9CGXwiQ" target="_lZSBdNBAEeWhI4x9CGXwiQ" source="_lZSBYdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBRNBAEeWhI4x9CGXwiQ" target="_lZSBZNBAEeWhI4x9CGXwiQ" source="_lZSBaNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_lZSBRdBAEeWhI4x9CGXwiQ" name="Call(test)" operation="_lZTSYdBAEeWhI4x9CGXwiQ">
                <result xmi:id="_lZSBRtBAEeWhI4x9CGXwiQ" name="Call(test).result(reading1)" outgoing="_lZSBOtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBR9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBSNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBSdBAEeWhI4x9CGXwiQ" name="Call(test).result(condition1)" outgoing="_lZSBO9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBStBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBS9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBTNBAEeWhI4x9CGXwiQ" name="Call(test).result(condition2)" outgoing="_lZSBPNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBTdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBTtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBT9BAEeWhI4x9CGXwiQ" name="Call(test).result(condition3)" outgoing="_lZSBPdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBUNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBUdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBUtBAEeWhI4x9CGXwiQ" name="Call(test).result(year)" outgoing="_lZSBPtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBU9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBVNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBVdBAEeWhI4x9CGXwiQ" name="Call(test).result(month)" outgoing="_lZSBP9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBVtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBV9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBWNBAEeWhI4x9CGXwiQ" name="Call(test).result(numDays)" outgoing="_lZSBQNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBWdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBWtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBW9BAEeWhI4x9CGXwiQ" name="Call(test).result(switch1)" outgoing="_lZSBQdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBXNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBXdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBXtBAEeWhI4x9CGXwiQ" name="Call(test).result(switch2)" outgoing="_lZSBQtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBX9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBYNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <result xmi:id="_lZSBYdBAEeWhI4x9CGXwiQ" name="Call(test).result(switch3)" outgoing="_lZSBQ9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBYtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBY9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <target xmi:id="_lZSBZNBAEeWhI4x9CGXwiQ" name="Call(test).target" incoming="_lZSBRNBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBZdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBZtBAEeWhI4x9CGXwiQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_lZSBZ9BAEeWhI4x9CGXwiQ" name="ReadSelf">
                <result xmi:id="_lZSBaNBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZSBRNBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBadBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBatBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBa9BAEeWhI4x9CGXwiQ" name="Fork(reading)@1fbff1e2" incoming="_lZSBOtBAEeWhI4x9CGXwiQ" outgoing="_lZSBJNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBbNBAEeWhI4x9CGXwiQ" name="Fork(condition1)@37990b85" incoming="_lZSBO9BAEeWhI4x9CGXwiQ" outgoing="_lZSBJtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBbdBAEeWhI4x9CGXwiQ" name="Fork(condition2)@20c36547" incoming="_lZSBPNBAEeWhI4x9CGXwiQ" outgoing="_lZSBKNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBbtBAEeWhI4x9CGXwiQ" name="Fork(condition3)@7c2e291e" incoming="_lZSBPdBAEeWhI4x9CGXwiQ" outgoing="_lZSBKtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBb9BAEeWhI4x9CGXwiQ" name="Fork(year)@3a8db043" incoming="_lZSBPtBAEeWhI4x9CGXwiQ" outgoing="_lZSBLNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBcNBAEeWhI4x9CGXwiQ" name="Fork(month)@2c2f1cbd" incoming="_lZSBP9BAEeWhI4x9CGXwiQ" outgoing="_lZSBLtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBcdBAEeWhI4x9CGXwiQ" name="Fork(numDays)@4907d2f4" incoming="_lZSBQNBAEeWhI4x9CGXwiQ" outgoing="_lZSBMNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBctBAEeWhI4x9CGXwiQ" name="Fork(switch1)@20aab6a1" incoming="_lZSBQdBAEeWhI4x9CGXwiQ" outgoing="_lZSBMtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBc9BAEeWhI4x9CGXwiQ" name="Fork(switch2)@27bc14c8" incoming="_lZSBQtBAEeWhI4x9CGXwiQ" outgoing="_lZSBNNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSBdNBAEeWhI4x9CGXwiQ" name="Fork(switch3)@2cf86ad9" incoming="_lZSBQ9BAEeWhI4x9CGXwiQ" outgoing="_lZSBNtBAEeWhI4x9CGXwiQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBddBAEeWhI4x9CGXwiQ" name="ExpressionStatement@7ba4f105" incoming="_lZSBJdBAEeWhI4x9CGXwiQ" outgoing="_lZSBJ9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBdtBAEeWhI4x9CGXwiQ" target="_lZSBetBAEeWhI4x9CGXwiQ" source="_lZSBhdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBd9BAEeWhI4x9CGXwiQ" target="_lZSBgNBAEeWhI4x9CGXwiQ" source="_lZSBitBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBeNBAEeWhI4x9CGXwiQ" target="_lZSBedBAEeWhI4x9CGXwiQ" source="_lZSBg9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSBedBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSBeNBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSBetBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSBdtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBe9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBfNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBfdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBJNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBftBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBf9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBgNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSBd9BAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBgdBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBgtBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBg9BAEeWhI4x9CGXwiQ" name="Tuple@e0c92d9" outgoing="_lZSBeNBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBhNBAEeWhI4x9CGXwiQ" name="Value(&quot;reading&quot;)">
                  <result xmi:id="_lZSBhdBAEeWhI4x9CGXwiQ" name="Value(&quot;reading&quot;).result" outgoing="_lZSBdtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBhtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBh9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSBiNBAEeWhI4x9CGXwiQ" value="reading">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBidBAEeWhI4x9CGXwiQ" name="Value(150)">
                  <result xmi:id="_lZSBitBAEeWhI4x9CGXwiQ" name="Value(150).result" outgoing="_lZSBd9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBi9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBjNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSBjdBAEeWhI4x9CGXwiQ" value="150">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBjtBAEeWhI4x9CGXwiQ" name="ExpressionStatement@2d49ea8f" incoming="_lZSBJ9BAEeWhI4x9CGXwiQ" outgoing="_lZSBKdBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBj9BAEeWhI4x9CGXwiQ" target="_lZSBk9BAEeWhI4x9CGXwiQ" source="_lZSBntBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBkNBAEeWhI4x9CGXwiQ" target="_lZSBmdBAEeWhI4x9CGXwiQ" source="_lZSBo9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBkdBAEeWhI4x9CGXwiQ" target="_lZSBktBAEeWhI4x9CGXwiQ" source="_lZSBnNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSBktBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSBkdBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSBk9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSBj9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBlNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBldBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBltBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBJtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBl9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBmNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBmdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSBkNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBmtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBm9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBnNBAEeWhI4x9CGXwiQ" name="Tuple@2b94230a" outgoing="_lZSBkdBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBndBAEeWhI4x9CGXwiQ" name="Value(&quot;condition1&quot;)">
                  <result xmi:id="_lZSBntBAEeWhI4x9CGXwiQ" name="Value(&quot;condition1&quot;).result" outgoing="_lZSBj9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBn9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBoNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSBodBAEeWhI4x9CGXwiQ" value="condition1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBotBAEeWhI4x9CGXwiQ" name="Value(alert)">
                  <result xmi:id="_lZSBo9BAEeWhI4x9CGXwiQ" name="Value(alert).result" outgoing="_lZSBkNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBpNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBpdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSBptBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gdBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBp9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@43bd9fe4" incoming="_lZSBKdBAEeWhI4x9CGXwiQ" outgoing="_lZSBK9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBqNBAEeWhI4x9CGXwiQ" target="_lZSBrNBAEeWhI4x9CGXwiQ" source="_lZSBt9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBqdBAEeWhI4x9CGXwiQ" target="_lZSBstBAEeWhI4x9CGXwiQ" source="_lZSBvNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBqtBAEeWhI4x9CGXwiQ" target="_lZSBq9BAEeWhI4x9CGXwiQ" source="_lZSBtdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSBq9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSBqtBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSBrNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSBqNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBrdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBrtBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBr9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBKNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBsNBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBsdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBstBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSBqdBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBs9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBtNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBtdBAEeWhI4x9CGXwiQ" name="Tuple@a2601e6" outgoing="_lZSBqtBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBttBAEeWhI4x9CGXwiQ" name="Value(&quot;condition2&quot;)">
                  <result xmi:id="_lZSBt9BAEeWhI4x9CGXwiQ" name="Value(&quot;condition2&quot;).result" outgoing="_lZSBqNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBuNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBudBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSButBAEeWhI4x9CGXwiQ" value="condition2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBu9BAEeWhI4x9CGXwiQ" name="Value(critical)">
                  <result xmi:id="_lZSBvNBAEeWhI4x9CGXwiQ" name="Value(critical).result" outgoing="_lZSBqdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBvdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBvtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSBv9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gtBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBwNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@6568aa44" incoming="_lZSBK9BAEeWhI4x9CGXwiQ" outgoing="_lZSBLdBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBwdBAEeWhI4x9CGXwiQ" target="_lZSBxdBAEeWhI4x9CGXwiQ" source="_lZSB0NBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSBwtBAEeWhI4x9CGXwiQ" target="_lZSBy9BAEeWhI4x9CGXwiQ" source="_lZSB1dBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSBw9BAEeWhI4x9CGXwiQ" target="_lZSBxNBAEeWhI4x9CGXwiQ" source="_lZSBztBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSBxNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSBw9BAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSBxdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSBwdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBxtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBx9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSByNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBKtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBydBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBytBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSBy9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSBwtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSBzNBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSBzdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSBztBAEeWhI4x9CGXwiQ" name="Tuple@6ae66c1f" outgoing="_lZSBw9BAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSBz9BAEeWhI4x9CGXwiQ" name="Value(&quot;condition3&quot;)">
                  <result xmi:id="_lZSB0NBAEeWhI4x9CGXwiQ" name="Value(&quot;condition3&quot;).result" outgoing="_lZSBwdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB0dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB0tBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSB09BAEeWhI4x9CGXwiQ" value="condition3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSB1NBAEeWhI4x9CGXwiQ" name="Value(critical)">
                  <result xmi:id="_lZSB1dBAEeWhI4x9CGXwiQ" name="Value(critical).result" outgoing="_lZSBwtBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB1tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB19BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSB2NBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gtBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSB2dBAEeWhI4x9CGXwiQ" name="ExpressionStatement@14b976fd" incoming="_lZSBLdBAEeWhI4x9CGXwiQ" outgoing="_lZSBL9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSB2tBAEeWhI4x9CGXwiQ" target="_lZSB3tBAEeWhI4x9CGXwiQ" source="_lZSB6dBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSB29BAEeWhI4x9CGXwiQ" target="_lZSB5NBAEeWhI4x9CGXwiQ" source="_lZSB7tBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSB3NBAEeWhI4x9CGXwiQ" target="_lZSB3dBAEeWhI4x9CGXwiQ" source="_lZSB59BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSB3dBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSB3NBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSB3tBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSB2tBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB39BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB4NBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSB4dBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBLNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB4tBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB49BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSB5NBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSB29BAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB5dBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB5tBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSB59BAEeWhI4x9CGXwiQ" name="Tuple@18bbfb78" outgoing="_lZSB3NBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSB6NBAEeWhI4x9CGXwiQ" name="Value(&quot;year&quot;)">
                  <result xmi:id="_lZSB6dBAEeWhI4x9CGXwiQ" name="Value(&quot;year&quot;).result" outgoing="_lZSB2tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB6tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB69BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSB7NBAEeWhI4x9CGXwiQ" value="year">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSB7dBAEeWhI4x9CGXwiQ" name="Value(2012)">
                  <result xmi:id="_lZSB7tBAEeWhI4x9CGXwiQ" name="Value(2012).result" outgoing="_lZSB29BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB79BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB8NBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSB8dBAEeWhI4x9CGXwiQ" value="2012">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSB8tBAEeWhI4x9CGXwiQ" name="ExpressionStatement@797d4842" incoming="_lZSBL9BAEeWhI4x9CGXwiQ" outgoing="_lZSBMdBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSB89BAEeWhI4x9CGXwiQ" target="_lZSB99BAEeWhI4x9CGXwiQ" source="_lZSCAtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSB9NBAEeWhI4x9CGXwiQ" target="_lZSB_dBAEeWhI4x9CGXwiQ" source="_lZSCB9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSB9dBAEeWhI4x9CGXwiQ" target="_lZSB9tBAEeWhI4x9CGXwiQ" source="_lZSCANBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSB9tBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSB9dBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSB99BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSB89BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB-NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB-dBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSB-tBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBLtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB-9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB_NBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSB_dBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSB9NBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSB_tBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSB_9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCANBAEeWhI4x9CGXwiQ" name="Tuple@291faca" outgoing="_lZSB9dBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCAdBAEeWhI4x9CGXwiQ" name="Value(&quot;month&quot;)">
                  <result xmi:id="_lZSCAtBAEeWhI4x9CGXwiQ" name="Value(&quot;month&quot;).result" outgoing="_lZSB89BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCA9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCBNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSCBdBAEeWhI4x9CGXwiQ" value="month">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCBtBAEeWhI4x9CGXwiQ" name="Value(2)">
                  <result xmi:id="_lZSCB9BAEeWhI4x9CGXwiQ" name="Value(2).result" outgoing="_lZSB9NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCCNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCCdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSCCtBAEeWhI4x9CGXwiQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCC9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@63189c49" incoming="_lZSBMdBAEeWhI4x9CGXwiQ" outgoing="_lZSBM9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCDNBAEeWhI4x9CGXwiQ" target="_lZSCENBAEeWhI4x9CGXwiQ" source="_lZSCG9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCDdBAEeWhI4x9CGXwiQ" target="_lZSCFtBAEeWhI4x9CGXwiQ" source="_lZSCINBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSCDtBAEeWhI4x9CGXwiQ" target="_lZSCD9BAEeWhI4x9CGXwiQ" source="_lZSCGdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSCD9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSCDtBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSCENBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSCDNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCEdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCEtBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCE9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBMNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCFNBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCFdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCFtBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSCDdBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCF9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCGNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCGdBAEeWhI4x9CGXwiQ" name="Tuple@2cf034ac" outgoing="_lZSCDtBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCGtBAEeWhI4x9CGXwiQ" name="Value(&quot;numDays&quot;)">
                  <result xmi:id="_lZSCG9BAEeWhI4x9CGXwiQ" name="Value(&quot;numDays&quot;).result" outgoing="_lZSCDNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCHNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCHdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSCHtBAEeWhI4x9CGXwiQ" value="numDays">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCH9BAEeWhI4x9CGXwiQ" name="Value(29)">
                  <result xmi:id="_lZSCINBAEeWhI4x9CGXwiQ" name="Value(29).result" outgoing="_lZSCDdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCIdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCItBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSCI9BAEeWhI4x9CGXwiQ" value="29">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCJNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@c8c1b4c" incoming="_lZSBM9BAEeWhI4x9CGXwiQ" outgoing="_lZSBNdBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCJdBAEeWhI4x9CGXwiQ" target="_lZSCKdBAEeWhI4x9CGXwiQ" source="_lZSCNNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCJtBAEeWhI4x9CGXwiQ" target="_lZSCL9BAEeWhI4x9CGXwiQ" source="_lZSCOdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSCJ9BAEeWhI4x9CGXwiQ" target="_lZSCKNBAEeWhI4x9CGXwiQ" source="_lZSCMtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSCKNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSCJ9BAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSCKdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSCJdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCKtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCK9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCLNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBMtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCLdBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCLtBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCL9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSCJtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCMNBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCMdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCMtBAEeWhI4x9CGXwiQ" name="Tuple@4724d642" outgoing="_lZSCJ9BAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCM9BAEeWhI4x9CGXwiQ" name="Value(&quot;switch1&quot;)">
                  <result xmi:id="_lZSCNNBAEeWhI4x9CGXwiQ" name="Value(&quot;switch1&quot;).result" outgoing="_lZSCJdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCNdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCNtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSCN9BAEeWhI4x9CGXwiQ" value="switch1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCONBAEeWhI4x9CGXwiQ" name="Value(3)">
                  <result xmi:id="_lZSCOdBAEeWhI4x9CGXwiQ" name="Value(3).result" outgoing="_lZSCJtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCOtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCO9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSCPNBAEeWhI4x9CGXwiQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCPdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@1ef41b6e" incoming="_lZSBNdBAEeWhI4x9CGXwiQ" outgoing="_lZSBN9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCPtBAEeWhI4x9CGXwiQ" target="_lZSCQtBAEeWhI4x9CGXwiQ" source="_lZSCTdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCP9BAEeWhI4x9CGXwiQ" target="_lZSCSNBAEeWhI4x9CGXwiQ" source="_lZSCUtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSCQNBAEeWhI4x9CGXwiQ" target="_lZSCQdBAEeWhI4x9CGXwiQ" source="_lZSCS9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSCQdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSCQNBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSCQtBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSCPtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCQ9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCRNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCRdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBNNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCRtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCR9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCSNBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSCP9BAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCSdBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCStBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCS9BAEeWhI4x9CGXwiQ" name="Tuple@9b1c0a0" outgoing="_lZSCQNBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCTNBAEeWhI4x9CGXwiQ" name="Value(&quot;switch2&quot;)">
                  <result xmi:id="_lZSCTdBAEeWhI4x9CGXwiQ" name="Value(&quot;switch2&quot;).result" outgoing="_lZSCPtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCTtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCT9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSCUNBAEeWhI4x9CGXwiQ" value="switch2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCUdBAEeWhI4x9CGXwiQ" name="Value(1)">
                  <result xmi:id="_lZSCUtBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZSCP9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCU9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCVNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSCVdBAEeWhI4x9CGXwiQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCVtBAEeWhI4x9CGXwiQ" name="ExpressionStatement@73d784ef" incoming="_lZSBN9BAEeWhI4x9CGXwiQ" outgoing="_lZSBONBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCV9BAEeWhI4x9CGXwiQ" target="_lZSCW9BAEeWhI4x9CGXwiQ" source="_lZSCZtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCWNBAEeWhI4x9CGXwiQ" target="_lZSCYdBAEeWhI4x9CGXwiQ" source="_lZSCa9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSCWdBAEeWhI4x9CGXwiQ" target="_lZSCWtBAEeWhI4x9CGXwiQ" source="_lZSCZNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSCWtBAEeWhI4x9CGXwiQ" name="Call(AssertEqual)" incoming="_lZSCWdBAEeWhI4x9CGXwiQ" behavior="_lZT4CNBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSCW9BAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(label)" incoming="_lZSCV9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCXNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCXdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCXtBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value1)" incoming="_lZSBNtBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCX9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCYNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSCYdBAEeWhI4x9CGXwiQ" name="Call(AssertEqual).argument(value2)" incoming="_lZSCWNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCYtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCY9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCZNBAEeWhI4x9CGXwiQ" name="Tuple@4638ce0f" outgoing="_lZSCWdBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCZdBAEeWhI4x9CGXwiQ" name="Value(&quot;switch3&quot;)">
                  <result xmi:id="_lZSCZtBAEeWhI4x9CGXwiQ" name="Value(&quot;switch3&quot;).result" outgoing="_lZSCV9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCZ9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCaNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZSCadBAEeWhI4x9CGXwiQ" value="switch3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCatBAEeWhI4x9CGXwiQ" name="Value(1)">
                  <result xmi:id="_lZSCa9BAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZSCWNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCbNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCbdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSCbtBAEeWhI4x9CGXwiQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCb9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@38b1cb70" incoming="_lZSBONBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCcNBAEeWhI4x9CGXwiQ" target="_lZSCctBAEeWhI4x9CGXwiQ" source="_lZSCdtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_lZSCcdBAEeWhI4x9CGXwiQ" name="Call(done)" operation="_lZT3ddBAEeWhI4x9CGXwiQ">
                <target xmi:id="_lZSCctBAEeWhI4x9CGXwiQ" name="Call(done).target" incoming="_lZSCcNBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCc9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCdNBAEeWhI4x9CGXwiQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_lZSCddBAEeWhI4x9CGXwiQ" name="ReadSelf">
                <result xmi:id="_lZSCdtBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZSCcNBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCd9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCeNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_lZSCedBAEeWhI4x9CGXwiQ" name="ReadSelf">
            <result xmi:id="_lZSCetBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZSBF9BAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCe9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCfNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSCfdBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZSBF9BAEeWhI4x9CGXwiQ" outgoing="_lZSBCdBAEeWhI4x9CGXwiQ _lZSBGNBAEeWhI4x9CGXwiQ _lZSBG9BAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCftBAEeWhI4x9CGXwiQ" name="Super" incoming="_lZSBIdBAEeWhI4x9CGXwiQ" outgoing="_lZSBGtBAEeWhI4x9CGXwiQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSCf9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@190f3ef6">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSCgNBAEeWhI4x9CGXwiQ" name="Call(Test$method$1)" behavior="_lZT2vtBAEeWhI4x9CGXwiQ">
                <argument xmi:id="_lZSCgdBAEeWhI4x9CGXwiQ" name="Call(Test$method$1).argument(tester)" incoming="_lZSBCtBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCgtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCg9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSChNBAEeWhI4x9CGXwiQ" name="Call(Test$method$1).result()" type="_lZT2hNBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSChdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSChtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_lZSCh9BAEeWhI4x9CGXwiQ" name="Call(Statements_Conditional$initialization$1)" incoming="_lZSBGtBAEeWhI4x9CGXwiQ" outgoing="_lZSBGdBAEeWhI4x9CGXwiQ" operation="_lZTSVdBAEeWhI4x9CGXwiQ">
            <target xmi:id="_lZSCiNBAEeWhI4x9CGXwiQ" name="Call(Statements_Conditional$initialization$1).target" incoming="_lZSBGNBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCidBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCitBAEeWhI4x9CGXwiQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZSCi9BAEeWhI4x9CGXwiQ" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_lZSA2NBAEeWhI4x9CGXwiQ">
            <object xmi:id="_lZSCjNBAEeWhI4x9CGXwiQ" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_lZSBG9BAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCjdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCjtBAEeWhI4x9CGXwiQ" value="1"/>
            </object>
            <result xmi:id="_lZSCj9BAEeWhI4x9CGXwiQ" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_lZSBHNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCkNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCkdBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSCktBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
            <argument xmi:id="_lZSCk9BAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZSBHNBAEeWhI4x9CGXwiQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSClNBAEeWhI4x9CGXwiQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCldBAEeWhI4x9CGXwiQ" value="*"/>
            </argument>
            <result xmi:id="_lZSCltBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZSBHdBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCl9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCmNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSCmdBAEeWhI4x9CGXwiQ" name="Value(0)">
            <result xmi:id="_lZSCmtBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZSBHtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCm9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCnNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_lZSCndBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSCntBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
            <first xmi:id="_lZSCn9BAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZSBHdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCoNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCodBAEeWhI4x9CGXwiQ" value="1"/>
            </first>
            <result xmi:id="_lZSCotBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZSBINBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCo9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCpNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <second xmi:id="_lZSCpdBAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZSBHtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCptBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCp9BAEeWhI4x9CGXwiQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_lZSCqNBAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZSBH9BAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_lZSCqdBAEeWhI4x9CGXwiQ" name="Decision(Test(Statements_Conditional$initializationFlag$1))" incoming="_lZSBH9BAEeWhI4x9CGXwiQ _lZSBINBAEeWhI4x9CGXwiQ" outgoing="_lZSBIdBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZSBINBAEeWhI4x9CGXwiQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSBDdBAEeWhI4x9CGXwiQ" name="Input(tester)" outgoing="_lZSBCNBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" parameter="_lZSBAtBAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSBDtBAEeWhI4x9CGXwiQ" name="Return" incoming="_lZSBCdBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" parameter="_lZSBBdBAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:JoinNode" xmi:id="_lZSBD9BAEeWhI4x9CGXwiQ" name="Join(Input))" incoming="_lZSBC9BAEeWhI4x9CGXwiQ" outgoing="_lZSBDNBAEeWhI4x9CGXwiQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZSCqtBAEeWhI4x9CGXwiQ" name="test$method$1" specification="_lZTSYdBAEeWhI4x9CGXwiQ" node="_lZSC09BAEeWhI4x9CGXwiQ _lZSC1NBAEeWhI4x9CGXwiQ _lZSC1dBAEeWhI4x9CGXwiQ _lZSC1tBAEeWhI4x9CGXwiQ _lZSC19BAEeWhI4x9CGXwiQ _lZSC2NBAEeWhI4x9CGXwiQ _lZSC2dBAEeWhI4x9CGXwiQ _lZSC2tBAEeWhI4x9CGXwiQ _lZSC29BAEeWhI4x9CGXwiQ _lZSC3NBAEeWhI4x9CGXwiQ _lZSC3dBAEeWhI4x9CGXwiQ" group="_lZSC3dBAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZSCq9BAEeWhI4x9CGXwiQ" name="reading1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCrNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCrdBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCrtBAEeWhI4x9CGXwiQ" name="condition1" type="_lZT2f9BAEeWhI4x9CGXwiQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCr9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCsNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCsdBAEeWhI4x9CGXwiQ" name="condition2" type="_lZT2f9BAEeWhI4x9CGXwiQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCstBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCs9BAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCtNBAEeWhI4x9CGXwiQ" name="condition3" type="_lZT2f9BAEeWhI4x9CGXwiQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCtdBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCttBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCt9BAEeWhI4x9CGXwiQ" name="year" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCuNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCudBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCutBAEeWhI4x9CGXwiQ" name="month" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCu9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCvNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCvdBAEeWhI4x9CGXwiQ" name="numDays" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCvtBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCv9BAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCwNBAEeWhI4x9CGXwiQ" name="switch1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCwdBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCwtBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCw9BAEeWhI4x9CGXwiQ" name="switch2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCxNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCxdBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZSCxtBAEeWhI4x9CGXwiQ" name="switch3" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSCx9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSCyNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCydBAEeWhI4x9CGXwiQ" target="_lZSC09BAEeWhI4x9CGXwiQ" source="_lZSDJdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCytBAEeWhI4x9CGXwiQ" target="_lZSC1NBAEeWhI4x9CGXwiQ" source="_lZSDKNBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCy9BAEeWhI4x9CGXwiQ" target="_lZSC1dBAEeWhI4x9CGXwiQ" source="_lZSDK9BAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCzNBAEeWhI4x9CGXwiQ" target="_lZSC1tBAEeWhI4x9CGXwiQ" source="_lZSDLtBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCzdBAEeWhI4x9CGXwiQ" target="_lZSC19BAEeWhI4x9CGXwiQ" source="_lZSDMdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCztBAEeWhI4x9CGXwiQ" target="_lZSC2NBAEeWhI4x9CGXwiQ" source="_lZSDNNBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSCz9BAEeWhI4x9CGXwiQ" target="_lZSC2dBAEeWhI4x9CGXwiQ" source="_lZSDN9BAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC0NBAEeWhI4x9CGXwiQ" target="_lZSC2tBAEeWhI4x9CGXwiQ" source="_lZSDOtBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC0dBAEeWhI4x9CGXwiQ" target="_lZSC29BAEeWhI4x9CGXwiQ" source="_lZSDPdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC0tBAEeWhI4x9CGXwiQ" target="_lZSC3NBAEeWhI4x9CGXwiQ" source="_lZSDQNBAEeWhI4x9CGXwiQ"/>
        <structuredNode xmi:id="_lZSC3dBAEeWhI4x9CGXwiQ" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC3tBAEeWhI4x9CGXwiQ" target="_lZSDTNBAEeWhI4x9CGXwiQ" source="_lZSDQ9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC39BAEeWhI4x9CGXwiQ" target="_lZSDVdBAEeWhI4x9CGXwiQ" source="_lZSDTNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC4NBAEeWhI4x9CGXwiQ" target="_lZSDXtBAEeWhI4x9CGXwiQ" source="_lZSDVdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC4dBAEeWhI4x9CGXwiQ" target="_lZSDZ9BAEeWhI4x9CGXwiQ" source="_lZSDXtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC4tBAEeWhI4x9CGXwiQ" target="_lZSDcNBAEeWhI4x9CGXwiQ" source="_lZSDZ9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC49BAEeWhI4x9CGXwiQ" target="_lZSDedBAEeWhI4x9CGXwiQ" source="_lZSDcNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC5NBAEeWhI4x9CGXwiQ" target="_lZSDgtBAEeWhI4x9CGXwiQ" source="_lZSDedBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC5dBAEeWhI4x9CGXwiQ" target="_lZSDktBAEeWhI4x9CGXwiQ" source="_lZSDgtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC5tBAEeWhI4x9CGXwiQ" target="_lZSoG9BAEeWhI4x9CGXwiQ" source="_lZSoGNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC59BAEeWhI4x9CGXwiQ" target="_lZSn5NBAEeWhI4x9CGXwiQ" source="_lZSDTtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC6NBAEeWhI4x9CGXwiQ" target="_lZSn6tBAEeWhI4x9CGXwiQ" source="_lZSDV9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC6dBAEeWhI4x9CGXwiQ" target="_lZSn9dBAEeWhI4x9CGXwiQ" source="_lZSDe9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC6tBAEeWhI4x9CGXwiQ" target="_lZSn_9BAEeWhI4x9CGXwiQ" source="_lZSDhNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC69BAEeWhI4x9CGXwiQ" target="_lZSoENBAEeWhI4x9CGXwiQ" source="_lZSDRdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC7NBAEeWhI4x9CGXwiQ" target="_lZSn4NBAEeWhI4x9CGXwiQ" source="_lZSDktBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC7dBAEeWhI4x9CGXwiQ" target="_lZSoqNBAEeWhI4x9CGXwiQ" source="_lZSopdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC7tBAEeWhI4x9CGXwiQ" target="_lZSoI9BAEeWhI4x9CGXwiQ" source="_lZSDTtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC79BAEeWhI4x9CGXwiQ" target="_lZSoJtBAEeWhI4x9CGXwiQ" source="_lZSDYNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC8NBAEeWhI4x9CGXwiQ" target="_lZSoStBAEeWhI4x9CGXwiQ" source="_lZSDTtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC8dBAEeWhI4x9CGXwiQ" target="_lZSoTdBAEeWhI4x9CGXwiQ" source="_lZSDYNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC8tBAEeWhI4x9CGXwiQ" target="_lZSoWdBAEeWhI4x9CGXwiQ" source="_lZSDTtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC89BAEeWhI4x9CGXwiQ" target="_lZSoXNBAEeWhI4x9CGXwiQ" source="_lZSDadBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC9NBAEeWhI4x9CGXwiQ" target="_lZSogtBAEeWhI4x9CGXwiQ" source="_lZSDTtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC9dBAEeWhI4x9CGXwiQ" target="_lZSohdBAEeWhI4x9CGXwiQ" source="_lZSDadBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC9tBAEeWhI4x9CGXwiQ" target="_lZSoHNBAEeWhI4x9CGXwiQ" source="_lZSn4NBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC99BAEeWhI4x9CGXwiQ" target="_lZSoqdBAEeWhI4x9CGXwiQ" source="_lZSoHNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC-NBAEeWhI4x9CGXwiQ" target="_lZSpCtBAEeWhI4x9CGXwiQ" source="_lZSpB9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC-dBAEeWhI4x9CGXwiQ" target="_lZSouNBAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC-tBAEeWhI4x9CGXwiQ" target="_lZSou9BAEeWhI4x9CGXwiQ" source="_lZSDYNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC-9BAEeWhI4x9CGXwiQ" target="_lZSo1NBAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC_NBAEeWhI4x9CGXwiQ" target="_lZSo19BAEeWhI4x9CGXwiQ" source="_lZSDadBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSC_dBAEeWhI4x9CGXwiQ" target="_lZSostBAEeWhI4x9CGXwiQ" source="_lZSoqdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC_tBAEeWhI4x9CGXwiQ" target="_lZSp0dBAEeWhI4x9CGXwiQ" source="_lZSpztBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSC_9BAEeWhI4x9CGXwiQ" target="_lZSpFNBAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDANBAEeWhI4x9CGXwiQ" target="_lZSpF9BAEeWhI4x9CGXwiQ" source="_lZSDYNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDAdBAEeWhI4x9CGXwiQ" target="_lZSpO9BAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDAtBAEeWhI4x9CGXwiQ" target="_lZSpPtBAEeWhI4x9CGXwiQ" source="_lZSDYNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDA9BAEeWhI4x9CGXwiQ" target="_lZSpStBAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDBNBAEeWhI4x9CGXwiQ" target="_lZSpTdBAEeWhI4x9CGXwiQ" source="_lZSDadBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDBdBAEeWhI4x9CGXwiQ" target="_lZSpftBAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDBtBAEeWhI4x9CGXwiQ" target="_lZSpgdBAEeWhI4x9CGXwiQ" source="_lZSDadBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDB9BAEeWhI4x9CGXwiQ" target="_lZSpjdBAEeWhI4x9CGXwiQ" source="_lZSoq9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDCNBAEeWhI4x9CGXwiQ" target="_lZSpkNBAEeWhI4x9CGXwiQ" source="_lZSDctBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDCdBAEeWhI4x9CGXwiQ" target="_lZSpC9BAEeWhI4x9CGXwiQ" source="_lZSostBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDCtBAEeWhI4x9CGXwiQ" target="_lZSp2dBAEeWhI4x9CGXwiQ" source="_lZSDlNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDC9BAEeWhI4x9CGXwiQ" target="_lZSp0tBAEeWhI4x9CGXwiQ" source="_lZSpC9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDDNBAEeWhI4x9CGXwiQ" target="_lZSqL9BAEeWhI4x9CGXwiQ" source="_lZSqF9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDDdBAEeWhI4x9CGXwiQ" target="_lZTPj9BAEeWhI4x9CGXwiQ" source="_lZSDlNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDDtBAEeWhI4x9CGXwiQ" target="_lZTPttBAEeWhI4x9CGXwiQ" source="_lZSDlNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDD9BAEeWhI4x9CGXwiQ" target="_lZTP-tBAEeWhI4x9CGXwiQ" source="_lZSDlNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDENBAEeWhI4x9CGXwiQ" target="_lZSqGdBAEeWhI4x9CGXwiQ" source="_lZSp0tBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDEdBAEeWhI4x9CGXwiQ" target="_lZTQedBAEeWhI4x9CGXwiQ" source="_lZSqGdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDEtBAEeWhI4x9CGXwiQ" target="_lZTRG9BAEeWhI4x9CGXwiQ" source="_lZTQe9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDE9BAEeWhI4x9CGXwiQ" target="_lZTQgtBAEeWhI4x9CGXwiQ" source="_lZTQedBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDFNBAEeWhI4x9CGXwiQ" target="_lZTRJNBAEeWhI4x9CGXwiQ" source="_lZTQgtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDFdBAEeWhI4x9CGXwiQ" target="_lZTRu9BAEeWhI4x9CGXwiQ" source="_lZTRJtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDFtBAEeWhI4x9CGXwiQ" target="_lZTRWNBAEeWhI4x9CGXwiQ" source="_lZTRJtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDF9BAEeWhI4x9CGXwiQ" target="_lZTRp9BAEeWhI4x9CGXwiQ" source="_lZTRJtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDGNBAEeWhI4x9CGXwiQ" target="_lZTRLdBAEeWhI4x9CGXwiQ" source="_lZTRJNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDGdBAEeWhI4x9CGXwiQ" target="_lZTRy9BAEeWhI4x9CGXwiQ" source="_lZTRstBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZSDGtBAEeWhI4x9CGXwiQ" target="_lZTRxNBAEeWhI4x9CGXwiQ" source="_lZTRLdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDG9BAEeWhI4x9CGXwiQ" target="_lZSDJdBAEeWhI4x9CGXwiQ" source="_lZSoG9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDHNBAEeWhI4x9CGXwiQ" target="_lZSDKNBAEeWhI4x9CGXwiQ" source="_lZSoqNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDHdBAEeWhI4x9CGXwiQ" target="_lZSDK9BAEeWhI4x9CGXwiQ" source="_lZSpCtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDHtBAEeWhI4x9CGXwiQ" target="_lZSDLtBAEeWhI4x9CGXwiQ" source="_lZSp0dBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDH9BAEeWhI4x9CGXwiQ" target="_lZSDMdBAEeWhI4x9CGXwiQ" source="_lZSDlNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDINBAEeWhI4x9CGXwiQ" target="_lZSDNNBAEeWhI4x9CGXwiQ" source="_lZSqF9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDIdBAEeWhI4x9CGXwiQ" target="_lZSDN9BAEeWhI4x9CGXwiQ" source="_lZTQd9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDItBAEeWhI4x9CGXwiQ" target="_lZSDOtBAEeWhI4x9CGXwiQ" source="_lZTREtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDI9BAEeWhI4x9CGXwiQ" target="_lZSDPdBAEeWhI4x9CGXwiQ" source="_lZTRstBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDJNBAEeWhI4x9CGXwiQ" target="_lZSDQNBAEeWhI4x9CGXwiQ" source="_lZTSCdBAEeWhI4x9CGXwiQ"/>
          <structuredNodeOutput xmi:id="_lZSDJdBAEeWhI4x9CGXwiQ" name="Output(reading1)" incoming="_lZSDG9BAEeWhI4x9CGXwiQ" outgoing="_lZSCydBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDJtBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDJ9BAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDKNBAEeWhI4x9CGXwiQ" name="Output(condition1)" incoming="_lZSDHNBAEeWhI4x9CGXwiQ" outgoing="_lZSCytBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDKdBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDKtBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDK9BAEeWhI4x9CGXwiQ" name="Output(condition2)" incoming="_lZSDHdBAEeWhI4x9CGXwiQ" outgoing="_lZSCy9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDLNBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDLdBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDLtBAEeWhI4x9CGXwiQ" name="Output(condition3)" incoming="_lZSDHtBAEeWhI4x9CGXwiQ" outgoing="_lZSCzNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDL9BAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDMNBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDMdBAEeWhI4x9CGXwiQ" name="Output(year)" incoming="_lZSDH9BAEeWhI4x9CGXwiQ" outgoing="_lZSCzdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDMtBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDM9BAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDNNBAEeWhI4x9CGXwiQ" name="Output(month)" incoming="_lZSDINBAEeWhI4x9CGXwiQ" outgoing="_lZSCztBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDNdBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDNtBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDN9BAEeWhI4x9CGXwiQ" name="Output(numDays)" incoming="_lZSDIdBAEeWhI4x9CGXwiQ" outgoing="_lZSCz9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDONBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDOdBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDOtBAEeWhI4x9CGXwiQ" name="Output(switch1)" incoming="_lZSDItBAEeWhI4x9CGXwiQ" outgoing="_lZSC0NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDO9BAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDPNBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDPdBAEeWhI4x9CGXwiQ" name="Output(switch2)" incoming="_lZSDI9BAEeWhI4x9CGXwiQ" outgoing="_lZSC0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDPtBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDP9BAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_lZSDQNBAEeWhI4x9CGXwiQ" name="Output(switch3)" incoming="_lZSDJNBAEeWhI4x9CGXwiQ" outgoing="_lZSC0tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDQdBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDQtBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDQ9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@1a0c63" outgoing="_lZSC3tBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDRNBAEeWhI4x9CGXwiQ" target="_lZSDRdBAEeWhI4x9CGXwiQ" source="_lZSDSNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDRdBAEeWhI4x9CGXwiQ" name="Fork(reading1)@5715eff8" incoming="_lZSDRNBAEeWhI4x9CGXwiQ" outgoing="_lZSC69BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDRtBAEeWhI4x9CGXwiQ" name="RightHandSide@613daf72">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDR9BAEeWhI4x9CGXwiQ" name="Value(0)">
                <result xmi:id="_lZSDSNBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZSDRNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDSdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDStBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDS9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDTNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@a5e201f" incoming="_lZSC3tBAEeWhI4x9CGXwiQ" outgoing="_lZSC39BAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDTdBAEeWhI4x9CGXwiQ" target="_lZSDTtBAEeWhI4x9CGXwiQ" source="_lZSDUdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDTtBAEeWhI4x9CGXwiQ" name="Fork(reading)@743780b3" incoming="_lZSDTdBAEeWhI4x9CGXwiQ" outgoing="_lZSC59BAEeWhI4x9CGXwiQ _lZSC7tBAEeWhI4x9CGXwiQ _lZSC8NBAEeWhI4x9CGXwiQ _lZSC8tBAEeWhI4x9CGXwiQ _lZSC9NBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDT9BAEeWhI4x9CGXwiQ" name="RightHandSide@67e2a360">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDUNBAEeWhI4x9CGXwiQ" name="Value(150)">
                <result xmi:id="_lZSDUdBAEeWhI4x9CGXwiQ" name="Value(150).result" outgoing="_lZSDTdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDUtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDU9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDVNBAEeWhI4x9CGXwiQ" value="150">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDVdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@4099573d" incoming="_lZSC39BAEeWhI4x9CGXwiQ" outgoing="_lZSC4NBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDVtBAEeWhI4x9CGXwiQ" target="_lZSDV9BAEeWhI4x9CGXwiQ" source="_lZSDWtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDV9BAEeWhI4x9CGXwiQ" name="Fork(threshold)@745275a2" incoming="_lZSDVtBAEeWhI4x9CGXwiQ" outgoing="_lZSC6NBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDWNBAEeWhI4x9CGXwiQ" name="RightHandSide@51a91a57">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDWdBAEeWhI4x9CGXwiQ" name="Value(10)">
                <result xmi:id="_lZSDWtBAEeWhI4x9CGXwiQ" name="Value(10).result" outgoing="_lZSDVtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDW9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDXNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDXdBAEeWhI4x9CGXwiQ" value="10">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDXtBAEeWhI4x9CGXwiQ" name="ExpressionStatement@2bdc1efb" incoming="_lZSC4NBAEeWhI4x9CGXwiQ" outgoing="_lZSC4dBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDX9BAEeWhI4x9CGXwiQ" target="_lZSDYNBAEeWhI4x9CGXwiQ" source="_lZSDY9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDYNBAEeWhI4x9CGXwiQ" name="Fork(safeLimit)@51562210" incoming="_lZSDX9BAEeWhI4x9CGXwiQ" outgoing="_lZSC79BAEeWhI4x9CGXwiQ _lZSC8dBAEeWhI4x9CGXwiQ _lZSC-tBAEeWhI4x9CGXwiQ _lZSDANBAEeWhI4x9CGXwiQ _lZSDAtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDYdBAEeWhI4x9CGXwiQ" name="RightHandSide@6dd67227">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDYtBAEeWhI4x9CGXwiQ" name="Value(100)">
                <result xmi:id="_lZSDY9BAEeWhI4x9CGXwiQ" name="Value(100).result" outgoing="_lZSDX9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDZNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDZdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDZtBAEeWhI4x9CGXwiQ" value="100">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDZ9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@27b6f03" incoming="_lZSC4dBAEeWhI4x9CGXwiQ" outgoing="_lZSC4tBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDaNBAEeWhI4x9CGXwiQ" target="_lZSDadBAEeWhI4x9CGXwiQ" source="_lZSDbNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDadBAEeWhI4x9CGXwiQ" name="Fork(criticalLimit)@bef0e4f" incoming="_lZSDaNBAEeWhI4x9CGXwiQ" outgoing="_lZSC89BAEeWhI4x9CGXwiQ _lZSC9dBAEeWhI4x9CGXwiQ _lZSC_NBAEeWhI4x9CGXwiQ _lZSDBNBAEeWhI4x9CGXwiQ _lZSDBtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDatBAEeWhI4x9CGXwiQ" name="RightHandSide@7b946aa7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDa9BAEeWhI4x9CGXwiQ" name="Value(200)">
                <result xmi:id="_lZSDbNBAEeWhI4x9CGXwiQ" name="Value(200).result" outgoing="_lZSDaNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDbdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDbtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDb9BAEeWhI4x9CGXwiQ" value="200">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDcNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@61696273" incoming="_lZSC4tBAEeWhI4x9CGXwiQ" outgoing="_lZSC49BAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDcdBAEeWhI4x9CGXwiQ" target="_lZSDctBAEeWhI4x9CGXwiQ" source="_lZSDddBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDctBAEeWhI4x9CGXwiQ" name="Fork(errorLimit)@64cd05b2" incoming="_lZSDcdBAEeWhI4x9CGXwiQ" outgoing="_lZSDCNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDc9BAEeWhI4x9CGXwiQ" name="RightHandSide@50311cd1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDdNBAEeWhI4x9CGXwiQ" name="Value(1000)">
                <result xmi:id="_lZSDddBAEeWhI4x9CGXwiQ" name="Value(1000).result" outgoing="_lZSDcdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDdtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDd9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDeNBAEeWhI4x9CGXwiQ" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDedBAEeWhI4x9CGXwiQ" name="ExpressionStatement@7444636" incoming="_lZSC49BAEeWhI4x9CGXwiQ" outgoing="_lZSC5NBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDetBAEeWhI4x9CGXwiQ" target="_lZSDe9BAEeWhI4x9CGXwiQ" source="_lZSDftBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDe9BAEeWhI4x9CGXwiQ" name="Fork(sensorId)@4b115946" incoming="_lZSDetBAEeWhI4x9CGXwiQ" outgoing="_lZSC6dBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDfNBAEeWhI4x9CGXwiQ" name="RightHandSide@5ffc292a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDfdBAEeWhI4x9CGXwiQ" name="Value(1)">
                <result xmi:id="_lZSDftBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZSDetBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDf9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDgNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDgdBAEeWhI4x9CGXwiQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDgtBAEeWhI4x9CGXwiQ" name="ExpressionStatement@3ba72b56" incoming="_lZSC5NBAEeWhI4x9CGXwiQ" outgoing="_lZSC5dBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDg9BAEeWhI4x9CGXwiQ" target="_lZSDhNBAEeWhI4x9CGXwiQ" source="_lZSDiNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDhNBAEeWhI4x9CGXwiQ" name="Fork(monitor)@7341517f" incoming="_lZSDg9BAEeWhI4x9CGXwiQ" outgoing="_lZSC6tBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDhdBAEeWhI4x9CGXwiQ" name="RightHandSide@454da3f6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDhtBAEeWhI4x9CGXwiQ" target="_lZSDi9BAEeWhI4x9CGXwiQ" source="_lZSDj9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_lZSDh9BAEeWhI4x9CGXwiQ" name="Call(Monitor)" operation="_lZT2etBAEeWhI4x9CGXwiQ">
                <result xmi:id="_lZSDiNBAEeWhI4x9CGXwiQ" name="Call(Monitor).result()" outgoing="_lZSDg9BAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDidBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDitBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <target xmi:id="_lZSDi9BAEeWhI4x9CGXwiQ" name="Call(Monitor).target" incoming="_lZSDhtBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDjNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDjdBAEeWhI4x9CGXwiQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_lZSDjtBAEeWhI4x9CGXwiQ" name="Create(Monitor)" classifier="_lZTSgdBAEeWhI4x9CGXwiQ">
                <result xmi:id="_lZSDj9BAEeWhI4x9CGXwiQ" name="Create(Monitor).result" outgoing="_lZSDhtBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDkNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDkdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDktBAEeWhI4x9CGXwiQ" name="ExpressionStatement@11384626" incoming="_lZSC5dBAEeWhI4x9CGXwiQ" outgoing="_lZSC7NBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSDk9BAEeWhI4x9CGXwiQ" target="_lZSDlNBAEeWhI4x9CGXwiQ" source="_lZSDl9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSDlNBAEeWhI4x9CGXwiQ" name="Fork(year)@72b5ecb" incoming="_lZSDk9BAEeWhI4x9CGXwiQ" outgoing="_lZSDCtBAEeWhI4x9CGXwiQ _lZSDDdBAEeWhI4x9CGXwiQ _lZSDDtBAEeWhI4x9CGXwiQ _lZSDD9BAEeWhI4x9CGXwiQ _lZSDH9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSDldBAEeWhI4x9CGXwiQ" name="RightHandSide@305c651a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSDltBAEeWhI4x9CGXwiQ" name="Value(2012)">
                <result xmi:id="_lZSDl9BAEeWhI4x9CGXwiQ" name="Value(2012).result" outgoing="_lZSDk9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSDmNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSDmdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSDmtBAEeWhI4x9CGXwiQ" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_lZSn4NBAEeWhI4x9CGXwiQ" name="IfStatement@76eecb9d" incoming="_lZSC7NBAEeWhI4x9CGXwiQ" outgoing="_lZSC9tBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSn4dBAEeWhI4x9CGXwiQ" target="_lZSoA9BAEeWhI4x9CGXwiQ" source="_lZSn5NBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSn4tBAEeWhI4x9CGXwiQ" name="Test(Call(>).result(result))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSn49BAEeWhI4x9CGXwiQ" target="_lZSn59BAEeWhI4x9CGXwiQ" source="_lZSn5NBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSn5NBAEeWhI4x9CGXwiQ" name="Fork(reading1)@53aaed2" incoming="_lZSC59BAEeWhI4x9CGXwiQ" outgoing="_lZSn49BAEeWhI4x9CGXwiQ _lZSn4dBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSn5dBAEeWhI4x9CGXwiQ" name="RightHandSide@4fab5fac"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSn5tBAEeWhI4x9CGXwiQ" name="Call(>)">
                <argument xmi:id="_lZSn59BAEeWhI4x9CGXwiQ" name="Call(>).argument(x)" incoming="_lZSn49BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSn6NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSn6dBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSn6tBAEeWhI4x9CGXwiQ" name="Call(>).argument(y)" incoming="_lZSC6NBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSn69BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSn7NBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSn7dBAEeWhI4x9CGXwiQ" name="Call(>).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSn7tBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSn79BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSn8NBAEeWhI4x9CGXwiQ" name="ExpressionStatement@2cb1dfee">
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSn8dBAEeWhI4x9CGXwiQ" target="_lZSn8tBAEeWhI4x9CGXwiQ" source="_lZSoANBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_lZSn8tBAEeWhI4x9CGXwiQ" name="Collect(Call(raiseAlarm))" incoming="_lZSn8dBAEeWhI4x9CGXwiQ" mode="parallel" inputElement="_lZSn_9BAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSn89BAEeWhI4x9CGXwiQ" target="_lZSn-dBAEeWhI4x9CGXwiQ" source="_lZSn9dBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSn9NBAEeWhI4x9CGXwiQ" target="_lZSn_NBAEeWhI4x9CGXwiQ" source="_lZSn_9BAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZSn9dBAEeWhI4x9CGXwiQ" name="Collect(Call(raiseAlarm)).input(Fork(sensorId)@4b115946)" incoming="_lZSC6dBAEeWhI4x9CGXwiQ" outgoing="_lZSn89BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSn9tBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSn99BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_lZSn-NBAEeWhI4x9CGXwiQ" name="Call(raiseAlarm)" operation="_lZT2ddBAEeWhI4x9CGXwiQ">
                  <argument xmi:id="_lZSn-dBAEeWhI4x9CGXwiQ" name="Call(raiseAlarm).argument(sensorId)" incoming="_lZSn89BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSn-tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSn-9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <target xmi:id="_lZSn_NBAEeWhI4x9CGXwiQ" name="Call(raiseAlarm).target" incoming="_lZSn9NBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSn_dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSn_tBAEeWhI4x9CGXwiQ" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_lZSn_9BAEeWhI4x9CGXwiQ" name="Collect(Call(raiseAlarm)).inputElement" incoming="_lZSC6tBAEeWhI4x9CGXwiQ" outgoing="_lZSn9NBAEeWhI4x9CGXwiQ" regionAsInput="_lZSn8tBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoANBAEeWhI4x9CGXwiQ" name="Feature(Fork(monitor)@7341517f)" outgoing="_lZSn8dBAEeWhI4x9CGXwiQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoAdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(reading1)@53aaed2)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoAtBAEeWhI4x9CGXwiQ" target="_lZSoBtBAEeWhI4x9CGXwiQ" source="_lZSoA9BAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSoA9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(reading1)@53aaed2).input" incoming="_lZSn4dBAEeWhI4x9CGXwiQ" outgoing="_lZSoAtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoBNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoBdBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSoBtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(reading1)@53aaed2).output" incoming="_lZSoAtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoB9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoCNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSoCdBAEeWhI4x9CGXwiQ" name="Value(true)">
              <result xmi:id="_lZSoCtBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoC9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoDNBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSoDdBAEeWhI4x9CGXwiQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoDtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(reading1)@5715eff8)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoD9BAEeWhI4x9CGXwiQ" target="_lZSoE9BAEeWhI4x9CGXwiQ" source="_lZSoENBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSoENBAEeWhI4x9CGXwiQ" name="Passthru(Fork(reading1)@5715eff8).input" incoming="_lZSC69BAEeWhI4x9CGXwiQ" outgoing="_lZSoD9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoEdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoEtBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSoE9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(reading1)@5715eff8).output" incoming="_lZSoD9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoFNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoFdBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_lZSoFtBAEeWhI4x9CGXwiQ" body="_lZSn8NBAEeWhI4x9CGXwiQ _lZSoAdBAEeWhI4x9CGXwiQ" bodyOutput="_lZSoBtBAEeWhI4x9CGXwiQ" decider="_lZSn7dBAEeWhI4x9CGXwiQ" successorClause="_lZSoF9BAEeWhI4x9CGXwiQ" test="_lZSn4tBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSoF9BAEeWhI4x9CGXwiQ" body="_lZSoDtBAEeWhI4x9CGXwiQ" bodyOutput="_lZSoE9BAEeWhI4x9CGXwiQ" decider="_lZSoCtBAEeWhI4x9CGXwiQ" predecessorClause="_lZSoFtBAEeWhI4x9CGXwiQ" test="_lZSoCdBAEeWhI4x9CGXwiQ"/>
            <result xmi:id="_lZSoGNBAEeWhI4x9CGXwiQ" name="IfStatement@76eecb9d.result(reading1)" outgoing="_lZSC5tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoGdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoGtBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSoG9BAEeWhI4x9CGXwiQ" name="Fork(reading1)" incoming="_lZSC5tBAEeWhI4x9CGXwiQ" outgoing="_lZSDG9BAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_lZSoHNBAEeWhI4x9CGXwiQ" name="IfStatement@20a9d602" incoming="_lZSC9tBAEeWhI4x9CGXwiQ" outgoing="_lZSC99BAEeWhI4x9CGXwiQ" isAssured="true" isDeterminate="true">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoHdBAEeWhI4x9CGXwiQ" target="_lZSoN9BAEeWhI4x9CGXwiQ" source="_lZSoLtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoHtBAEeWhI4x9CGXwiQ" target="_lZSoRtBAEeWhI4x9CGXwiQ" source="_lZSobtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoH9BAEeWhI4x9CGXwiQ" target="_lZSoetBAEeWhI4x9CGXwiQ" source="_lZSocdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoINBAEeWhI4x9CGXwiQ" target="_lZSoltBAEeWhI4x9CGXwiQ" source="_lZSojdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoIdBAEeWhI4x9CGXwiQ" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSoItBAEeWhI4x9CGXwiQ" name="Call(&lt;=)">
                <argument xmi:id="_lZSoI9BAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(x)" incoming="_lZSC7tBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoJNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoJdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSoJtBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(y)" incoming="_lZSC79BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoJ9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoKNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSoKdBAEeWhI4x9CGXwiQ" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoKtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoK9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoLNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@71fbb9dc">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoLdBAEeWhI4x9CGXwiQ" target="_lZSoLtBAEeWhI4x9CGXwiQ" source="_lZSoMdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSoLtBAEeWhI4x9CGXwiQ" name="Fork(condition1)@1386a63c" incoming="_lZSoLdBAEeWhI4x9CGXwiQ" outgoing="_lZSoHdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoL9BAEeWhI4x9CGXwiQ" name="RightHandSide@6d0bb727">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSoMNBAEeWhI4x9CGXwiQ" name="Value(normal)">
                  <result xmi:id="_lZSoMdBAEeWhI4x9CGXwiQ" name="Value(normal).result" outgoing="_lZSoLdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoMtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoM9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSoNNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gNBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoNdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@1386a63c)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoNtBAEeWhI4x9CGXwiQ" target="_lZSoOtBAEeWhI4x9CGXwiQ" source="_lZSoN9BAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSoN9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@1386a63c).input" incoming="_lZSoHdBAEeWhI4x9CGXwiQ" outgoing="_lZSoNtBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoONBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoOdBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSoOtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@1386a63c).output" incoming="_lZSoNtBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoO9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoPNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoPdBAEeWhI4x9CGXwiQ" name="Test(Merge(ConditionalLogicalExpression@5b97228a.result))">
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSoPtBAEeWhI4x9CGXwiQ" target="_lZSobdBAEeWhI4x9CGXwiQ" source="_lZSobNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoP9BAEeWhI4x9CGXwiQ" target="_lZSobdBAEeWhI4x9CGXwiQ" source="_lZSoUNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSoQNBAEeWhI4x9CGXwiQ" target="_lZSoU9BAEeWhI4x9CGXwiQ" source="_lZSobdBAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSoQdBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSoQtBAEeWhI4x9CGXwiQ" target="_lZSoYtBAEeWhI4x9CGXwiQ" source="_lZSobdBAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSoQ9BAEeWhI4x9CGXwiQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoRNBAEeWhI4x9CGXwiQ" target="_lZSobtBAEeWhI4x9CGXwiQ" source="_lZSoVdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoRdBAEeWhI4x9CGXwiQ" target="_lZSobtBAEeWhI4x9CGXwiQ" source="_lZSoZNBAEeWhI4x9CGXwiQ"/>
              <structuredNodeOutput xmi:id="_lZSoRtBAEeWhI4x9CGXwiQ" name="Decider(Merge(ConditionalLogicalExpression@5b97228a.result))" incoming="_lZSoHtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoR9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoSNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSoSdBAEeWhI4x9CGXwiQ" name="Call(>)">
                <argument xmi:id="_lZSoStBAEeWhI4x9CGXwiQ" name="Call(>).argument(x)" incoming="_lZSC8NBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoS9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoTNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSoTdBAEeWhI4x9CGXwiQ" name="Call(>).argument(y)" incoming="_lZSC8dBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoTtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoT9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSoUNBAEeWhI4x9CGXwiQ" name="Call(>).result(result)" outgoing="_lZSoP9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoUdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoUtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoU9BAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@5b97228a.operand2" incoming="_lZSoQNBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoVNBAEeWhI4x9CGXwiQ" target="_lZSoVdBAEeWhI4x9CGXwiQ" source="_lZSoX9BAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZSoVdBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@5b97228a.operand2.result" incoming="_lZSoVNBAEeWhI4x9CGXwiQ" outgoing="_lZSoRNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoVtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoV9BAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSoWNBAEeWhI4x9CGXwiQ" name="Call(&lt;=)">
                  <argument xmi:id="_lZSoWdBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(x)" incoming="_lZSC8tBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoWtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoW9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSoXNBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(y)" incoming="_lZSC89BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoXdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoXtBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSoX9BAEeWhI4x9CGXwiQ" name="Call(&lt;=).result(result)" outgoing="_lZSoVNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoYNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoYdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoYtBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@5b97228a.operand3" incoming="_lZSoQtBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoY9BAEeWhI4x9CGXwiQ" target="_lZSoZNBAEeWhI4x9CGXwiQ" source="_lZSoaNBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZSoZNBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@5b97228a.operand3.result" incoming="_lZSoY9BAEeWhI4x9CGXwiQ" outgoing="_lZSoRdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoZdBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoZtBAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSoZ9BAEeWhI4x9CGXwiQ" name="Value(false)">
                  <result xmi:id="_lZSoaNBAEeWhI4x9CGXwiQ" name="Value(false).result" outgoing="_lZSoY9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoadBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoatBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSoa9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_lZSobNBAEeWhI4x9CGXwiQ" name="Initial(ConditionalLogicalExpression@5b97228a)" outgoing="_lZSoPtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_lZSobdBAEeWhI4x9CGXwiQ" name="Decision(ConditionalLogicalExpression@5b97228a)" incoming="_lZSoPtBAEeWhI4x9CGXwiQ _lZSoP9BAEeWhI4x9CGXwiQ" outgoing="_lZSoQNBAEeWhI4x9CGXwiQ _lZSoQtBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZSoP9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_lZSobtBAEeWhI4x9CGXwiQ" name="Merge(ConditionalLogicalExpression@5b97228a.result)" incoming="_lZSoRNBAEeWhI4x9CGXwiQ _lZSoRdBAEeWhI4x9CGXwiQ" outgoing="_lZSoHtBAEeWhI4x9CGXwiQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSob9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@3f132e97">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSocNBAEeWhI4x9CGXwiQ" target="_lZSocdBAEeWhI4x9CGXwiQ" source="_lZSodNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSocdBAEeWhI4x9CGXwiQ" name="Fork(condition1)@668d4a33" incoming="_lZSocNBAEeWhI4x9CGXwiQ" outgoing="_lZSoH9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoctBAEeWhI4x9CGXwiQ" name="RightHandSide@46028ede">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSoc9BAEeWhI4x9CGXwiQ" name="Value(alert)">
                  <result xmi:id="_lZSodNBAEeWhI4x9CGXwiQ" name="Value(alert).result" outgoing="_lZSocNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoddBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSodtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSod9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gdBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoeNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@668d4a33)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoedBAEeWhI4x9CGXwiQ" target="_lZSofdBAEeWhI4x9CGXwiQ" source="_lZSoetBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSoetBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@668d4a33).input" incoming="_lZSoH9BAEeWhI4x9CGXwiQ" outgoing="_lZSoedBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoe9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSofNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSofdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@668d4a33).output" incoming="_lZSoedBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoftBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSof9BAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSogNBAEeWhI4x9CGXwiQ" name="Test(Call(>).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSogdBAEeWhI4x9CGXwiQ" name="Call(>)">
                <argument xmi:id="_lZSogtBAEeWhI4x9CGXwiQ" name="Call(>).argument(x)" incoming="_lZSC9NBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSog9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSohNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSohdBAEeWhI4x9CGXwiQ" name="Call(>).argument(y)" incoming="_lZSC9dBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSohtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoh9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSoiNBAEeWhI4x9CGXwiQ" name="Call(>).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoidBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoitBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoi9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@70d36a64">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSojNBAEeWhI4x9CGXwiQ" target="_lZSojdBAEeWhI4x9CGXwiQ" source="_lZSokNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSojdBAEeWhI4x9CGXwiQ" name="Fork(condition1)@15a9a5fd" incoming="_lZSojNBAEeWhI4x9CGXwiQ" outgoing="_lZSoINBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSojtBAEeWhI4x9CGXwiQ" name="RightHandSide@34d09027">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSoj9BAEeWhI4x9CGXwiQ" name="Value(critical)">
                  <result xmi:id="_lZSokNBAEeWhI4x9CGXwiQ" name="Value(critical).result" outgoing="_lZSojNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSokdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoktBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSok9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gtBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSolNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@15a9a5fd)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoldBAEeWhI4x9CGXwiQ" target="_lZSomdBAEeWhI4x9CGXwiQ" source="_lZSoltBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSoltBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@15a9a5fd).input" incoming="_lZSoINBAEeWhI4x9CGXwiQ" outgoing="_lZSoldBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSol9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSomNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSomdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition1)@15a9a5fd).output" incoming="_lZSoldBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSomtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSom9BAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSonNBAEeWhI4x9CGXwiQ" name="Value(true)">
              <result xmi:id="_lZSondBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSontBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSon9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSooNBAEeWhI4x9CGXwiQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <clause xmi:id="_lZSoodBAEeWhI4x9CGXwiQ" body="_lZSoLNBAEeWhI4x9CGXwiQ _lZSoNdBAEeWhI4x9CGXwiQ" bodyOutput="_lZSoOtBAEeWhI4x9CGXwiQ" decider="_lZSoKdBAEeWhI4x9CGXwiQ" successorClause="_lZSopNBAEeWhI4x9CGXwiQ" test="_lZSoIdBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSootBAEeWhI4x9CGXwiQ" body="_lZSob9BAEeWhI4x9CGXwiQ _lZSoeNBAEeWhI4x9CGXwiQ" bodyOutput="_lZSofdBAEeWhI4x9CGXwiQ" decider="_lZSoRtBAEeWhI4x9CGXwiQ" successorClause="_lZSopNBAEeWhI4x9CGXwiQ" test="_lZSoPdBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSoo9BAEeWhI4x9CGXwiQ" body="_lZSoi9BAEeWhI4x9CGXwiQ _lZSolNBAEeWhI4x9CGXwiQ" bodyOutput="_lZSomdBAEeWhI4x9CGXwiQ" decider="_lZSoiNBAEeWhI4x9CGXwiQ" successorClause="_lZSopNBAEeWhI4x9CGXwiQ" test="_lZSogNBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSopNBAEeWhI4x9CGXwiQ" decider="_lZSondBAEeWhI4x9CGXwiQ" predecessorClause="_lZSoodBAEeWhI4x9CGXwiQ _lZSootBAEeWhI4x9CGXwiQ _lZSoo9BAEeWhI4x9CGXwiQ" test="_lZSonNBAEeWhI4x9CGXwiQ"/>
            <result xmi:id="_lZSopdBAEeWhI4x9CGXwiQ" name="IfStatement@20a9d602.result(condition1)" outgoing="_lZSC7dBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoptBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSop9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSoqNBAEeWhI4x9CGXwiQ" name="Fork(condition1)" incoming="_lZSC7dBAEeWhI4x9CGXwiQ" outgoing="_lZSDHNBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoqdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@24604161" incoming="_lZSC99BAEeWhI4x9CGXwiQ" outgoing="_lZSC_dBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoqtBAEeWhI4x9CGXwiQ" target="_lZSoq9BAEeWhI4x9CGXwiQ" source="_lZSortBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSoq9BAEeWhI4x9CGXwiQ" name="Fork(reading)@228fcdfd" incoming="_lZSoqtBAEeWhI4x9CGXwiQ" outgoing="_lZSC-dBAEeWhI4x9CGXwiQ _lZSC-9BAEeWhI4x9CGXwiQ _lZSC_9BAEeWhI4x9CGXwiQ _lZSDAdBAEeWhI4x9CGXwiQ _lZSDA9BAEeWhI4x9CGXwiQ _lZSDBdBAEeWhI4x9CGXwiQ _lZSDB9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSorNBAEeWhI4x9CGXwiQ" name="RightHandSide@f1caec5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSordBAEeWhI4x9CGXwiQ" name="Value(500)">
                <result xmi:id="_lZSortBAEeWhI4x9CGXwiQ" name="Value(500).result" outgoing="_lZSoqtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSor9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSosNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZSosdBAEeWhI4x9CGXwiQ" value="500">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_lZSostBAEeWhI4x9CGXwiQ" name="IfStatement@7d41ae87" incoming="_lZSC_dBAEeWhI4x9CGXwiQ" outgoing="_lZSDCdBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSos9BAEeWhI4x9CGXwiQ" target="_lZSozNBAEeWhI4x9CGXwiQ" source="_lZSow9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSotNBAEeWhI4x9CGXwiQ" target="_lZSo6NBAEeWhI4x9CGXwiQ" source="_lZSo39BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSotdBAEeWhI4x9CGXwiQ" target="_lZSo_tBAEeWhI4x9CGXwiQ" source="_lZSo9dBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSottBAEeWhI4x9CGXwiQ" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSot9BAEeWhI4x9CGXwiQ" name="Call(&lt;=)">
                <argument xmi:id="_lZSouNBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(x)" incoming="_lZSC-dBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSoudBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoutBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSou9BAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(y)" incoming="_lZSC-tBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSovNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSovdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSovtBAEeWhI4x9CGXwiQ" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSov9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSowNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSowdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@5922439">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSowtBAEeWhI4x9CGXwiQ" target="_lZSow9BAEeWhI4x9CGXwiQ" source="_lZSoxtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSow9BAEeWhI4x9CGXwiQ" name="Fork(condition2)@61fbf11e" incoming="_lZSowtBAEeWhI4x9CGXwiQ" outgoing="_lZSos9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoxNBAEeWhI4x9CGXwiQ" name="RightHandSide@63931ad3">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSoxdBAEeWhI4x9CGXwiQ" name="Value(normal)">
                  <result xmi:id="_lZSoxtBAEeWhI4x9CGXwiQ" name="Value(normal).result" outgoing="_lZSowtBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSox9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoyNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSoydBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gNBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSoytBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@61fbf11e)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSoy9BAEeWhI4x9CGXwiQ" target="_lZSoz9BAEeWhI4x9CGXwiQ" source="_lZSozNBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSozNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@61fbf11e).input" incoming="_lZSos9BAEeWhI4x9CGXwiQ" outgoing="_lZSoy9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSozdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSoztBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSoz9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@61fbf11e).output" incoming="_lZSoy9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo0NBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo0dBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo0tBAEeWhI4x9CGXwiQ" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSo09BAEeWhI4x9CGXwiQ" name="Call(&lt;=)">
                <argument xmi:id="_lZSo1NBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(x)" incoming="_lZSC-9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo1dBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo1tBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSo19BAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(y)" incoming="_lZSC_NBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo2NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo2dBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSo2tBAEeWhI4x9CGXwiQ" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo29BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo3NBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo3dBAEeWhI4x9CGXwiQ" name="ExpressionStatement@7d87d293">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSo3tBAEeWhI4x9CGXwiQ" target="_lZSo39BAEeWhI4x9CGXwiQ" source="_lZSo4tBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSo39BAEeWhI4x9CGXwiQ" name="Fork(condition2)@7383ed7a" incoming="_lZSo3tBAEeWhI4x9CGXwiQ" outgoing="_lZSotNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo4NBAEeWhI4x9CGXwiQ" name="RightHandSide@5a5c1fd5">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSo4dBAEeWhI4x9CGXwiQ" name="Value(alert)">
                  <result xmi:id="_lZSo4tBAEeWhI4x9CGXwiQ" name="Value(alert).result" outgoing="_lZSo3tBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo49BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo5NBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSo5dBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gdBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo5tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@7383ed7a)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSo59BAEeWhI4x9CGXwiQ" target="_lZSo69BAEeWhI4x9CGXwiQ" source="_lZSo6NBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSo6NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@7383ed7a).input" incoming="_lZSotNBAEeWhI4x9CGXwiQ" outgoing="_lZSo59BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo6dBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo6tBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSo69BAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@7383ed7a).output" incoming="_lZSo59BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo7NBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo7dBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSo7tBAEeWhI4x9CGXwiQ" name="Value(true)">
              <result xmi:id="_lZSo79BAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo8NBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo8dBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSo8tBAEeWhI4x9CGXwiQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo89BAEeWhI4x9CGXwiQ" name="ExpressionStatement@738d6728">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSo9NBAEeWhI4x9CGXwiQ" target="_lZSo9dBAEeWhI4x9CGXwiQ" source="_lZSo-NBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSo9dBAEeWhI4x9CGXwiQ" name="Fork(condition2)@5ec3fae8" incoming="_lZSo9NBAEeWhI4x9CGXwiQ" outgoing="_lZSotdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo9tBAEeWhI4x9CGXwiQ" name="RightHandSide@148dc5f3">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSo99BAEeWhI4x9CGXwiQ" name="Value(critical)">
                  <result xmi:id="_lZSo-NBAEeWhI4x9CGXwiQ" name="Value(critical).result" outgoing="_lZSo9NBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo-dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSo-tBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSo-9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gtBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSo_NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@5ec3fae8)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSo_dBAEeWhI4x9CGXwiQ" target="_lZSpAdBAEeWhI4x9CGXwiQ" source="_lZSo_tBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSo_tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@5ec3fae8).input" incoming="_lZSotdBAEeWhI4x9CGXwiQ" outgoing="_lZSo_dBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSo_9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpANBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSpAdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition2)@5ec3fae8).output" incoming="_lZSo_dBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpAtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpA9BAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_lZSpBNBAEeWhI4x9CGXwiQ" body="_lZSowdBAEeWhI4x9CGXwiQ _lZSoytBAEeWhI4x9CGXwiQ" bodyOutput="_lZSoz9BAEeWhI4x9CGXwiQ" decider="_lZSovtBAEeWhI4x9CGXwiQ" successorClause="_lZSpBdBAEeWhI4x9CGXwiQ" test="_lZSottBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSpBdBAEeWhI4x9CGXwiQ" body="_lZSo3dBAEeWhI4x9CGXwiQ _lZSo5tBAEeWhI4x9CGXwiQ" bodyOutput="_lZSo69BAEeWhI4x9CGXwiQ" decider="_lZSo2tBAEeWhI4x9CGXwiQ" predecessorClause="_lZSpBNBAEeWhI4x9CGXwiQ" successorClause="_lZSpBtBAEeWhI4x9CGXwiQ" test="_lZSo0tBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSpBtBAEeWhI4x9CGXwiQ" body="_lZSo89BAEeWhI4x9CGXwiQ _lZSo_NBAEeWhI4x9CGXwiQ" bodyOutput="_lZSpAdBAEeWhI4x9CGXwiQ" decider="_lZSo79BAEeWhI4x9CGXwiQ" predecessorClause="_lZSpBdBAEeWhI4x9CGXwiQ" test="_lZSo7tBAEeWhI4x9CGXwiQ"/>
            <result xmi:id="_lZSpB9BAEeWhI4x9CGXwiQ" name="IfStatement@7d41ae87.result(condition2)" outgoing="_lZSC-NBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpCNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpCdBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSpCtBAEeWhI4x9CGXwiQ" name="Fork(condition2)" incoming="_lZSC-NBAEeWhI4x9CGXwiQ" outgoing="_lZSDHdBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_lZSpC9BAEeWhI4x9CGXwiQ" name="IfStatement@ad3536a" incoming="_lZSDCdBAEeWhI4x9CGXwiQ" outgoing="_lZSDC9BAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpDNBAEeWhI4x9CGXwiQ" target="_lZSpKNBAEeWhI4x9CGXwiQ" source="_lZSpH9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpDdBAEeWhI4x9CGXwiQ" target="_lZSpN9BAEeWhI4x9CGXwiQ" source="_lZSpX9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpDtBAEeWhI4x9CGXwiQ" target="_lZSpa9BAEeWhI4x9CGXwiQ" source="_lZSpYtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpD9BAEeWhI4x9CGXwiQ" target="_lZSpetBAEeWhI4x9CGXwiQ" source="_lZSpotBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpENBAEeWhI4x9CGXwiQ" target="_lZSprtBAEeWhI4x9CGXwiQ" source="_lZSppdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpEdBAEeWhI4x9CGXwiQ" target="_lZSpxNBAEeWhI4x9CGXwiQ" source="_lZSpu9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpEtBAEeWhI4x9CGXwiQ" name="Test(Call(&lt;=).result(result))">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSpE9BAEeWhI4x9CGXwiQ" name="Call(&lt;=)">
                <argument xmi:id="_lZSpFNBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(x)" incoming="_lZSC_9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpFdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpFtBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSpF9BAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(y)" incoming="_lZSDANBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpGNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpGdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSpGtBAEeWhI4x9CGXwiQ" name="Call(&lt;=).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpG9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpHNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpHdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@30032116">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpHtBAEeWhI4x9CGXwiQ" target="_lZSpH9BAEeWhI4x9CGXwiQ" source="_lZSpItBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSpH9BAEeWhI4x9CGXwiQ" name="Fork(condition3)@6507d6c7" incoming="_lZSpHtBAEeWhI4x9CGXwiQ" outgoing="_lZSpDNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpINBAEeWhI4x9CGXwiQ" name="RightHandSide@65a5d6a2">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSpIdBAEeWhI4x9CGXwiQ" name="Value(normal)">
                  <result xmi:id="_lZSpItBAEeWhI4x9CGXwiQ" name="Value(normal).result" outgoing="_lZSpHtBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpI9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpJNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSpJdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gNBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpJtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@6507d6c7)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpJ9BAEeWhI4x9CGXwiQ" target="_lZSpK9BAEeWhI4x9CGXwiQ" source="_lZSpKNBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSpKNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@6507d6c7).input" incoming="_lZSpDNBAEeWhI4x9CGXwiQ" outgoing="_lZSpJ9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpKdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpKtBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSpK9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@6507d6c7).output" incoming="_lZSpJ9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpLNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpLdBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpLtBAEeWhI4x9CGXwiQ" name="Test(Merge(ConditionalLogicalExpression@23c2b4ec.result))">
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSpL9BAEeWhI4x9CGXwiQ" target="_lZSpXtBAEeWhI4x9CGXwiQ" source="_lZSpXdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpMNBAEeWhI4x9CGXwiQ" target="_lZSpXtBAEeWhI4x9CGXwiQ" source="_lZSpQdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSpMdBAEeWhI4x9CGXwiQ" target="_lZSpRNBAEeWhI4x9CGXwiQ" source="_lZSpXtBAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSpMtBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSpM9BAEeWhI4x9CGXwiQ" target="_lZSpU9BAEeWhI4x9CGXwiQ" source="_lZSpXtBAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSpNNBAEeWhI4x9CGXwiQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpNdBAEeWhI4x9CGXwiQ" target="_lZSpX9BAEeWhI4x9CGXwiQ" source="_lZSpRtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpNtBAEeWhI4x9CGXwiQ" target="_lZSpX9BAEeWhI4x9CGXwiQ" source="_lZSpVdBAEeWhI4x9CGXwiQ"/>
              <structuredNodeOutput xmi:id="_lZSpN9BAEeWhI4x9CGXwiQ" name="Decider(Merge(ConditionalLogicalExpression@23c2b4ec.result))" incoming="_lZSpDdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpONBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpOdBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSpOtBAEeWhI4x9CGXwiQ" name="Call(>)">
                <argument xmi:id="_lZSpO9BAEeWhI4x9CGXwiQ" name="Call(>).argument(x)" incoming="_lZSDAdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpPNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpPdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSpPtBAEeWhI4x9CGXwiQ" name="Call(>).argument(y)" incoming="_lZSDAtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpP9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpQNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSpQdBAEeWhI4x9CGXwiQ" name="Call(>).result(result)" outgoing="_lZSpMNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpQtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpQ9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpRNBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@23c2b4ec.operand2" incoming="_lZSpMdBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpRdBAEeWhI4x9CGXwiQ" target="_lZSpRtBAEeWhI4x9CGXwiQ" source="_lZSpUNBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZSpRtBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@23c2b4ec.operand2.result" incoming="_lZSpRdBAEeWhI4x9CGXwiQ" outgoing="_lZSpNdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpR9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpSNBAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSpSdBAEeWhI4x9CGXwiQ" name="Call(&lt;=)">
                  <argument xmi:id="_lZSpStBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(x)" incoming="_lZSDA9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpS9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpTNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSpTdBAEeWhI4x9CGXwiQ" name="Call(&lt;=).argument(y)" incoming="_lZSDBNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpTtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpT9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSpUNBAEeWhI4x9CGXwiQ" name="Call(&lt;=).result(result)" outgoing="_lZSpRdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpUdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpUtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpU9BAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@23c2b4ec.operand3" incoming="_lZSpM9BAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpVNBAEeWhI4x9CGXwiQ" target="_lZSpVdBAEeWhI4x9CGXwiQ" source="_lZSpWdBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZSpVdBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@23c2b4ec.operand3.result" incoming="_lZSpVNBAEeWhI4x9CGXwiQ" outgoing="_lZSpNtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpVtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpV9BAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSpWNBAEeWhI4x9CGXwiQ" name="Value(false)">
                  <result xmi:id="_lZSpWdBAEeWhI4x9CGXwiQ" name="Value(false).result" outgoing="_lZSpVNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpWtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpW9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSpXNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_lZSpXdBAEeWhI4x9CGXwiQ" name="Initial(ConditionalLogicalExpression@23c2b4ec)" outgoing="_lZSpL9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_lZSpXtBAEeWhI4x9CGXwiQ" name="Decision(ConditionalLogicalExpression@23c2b4ec)" incoming="_lZSpL9BAEeWhI4x9CGXwiQ _lZSpMNBAEeWhI4x9CGXwiQ" outgoing="_lZSpMdBAEeWhI4x9CGXwiQ _lZSpM9BAEeWhI4x9CGXwiQ" decisionInputFlow="_lZSpMNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_lZSpX9BAEeWhI4x9CGXwiQ" name="Merge(ConditionalLogicalExpression@23c2b4ec.result)" incoming="_lZSpNdBAEeWhI4x9CGXwiQ _lZSpNtBAEeWhI4x9CGXwiQ" outgoing="_lZSpDdBAEeWhI4x9CGXwiQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpYNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@3e21bb52">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpYdBAEeWhI4x9CGXwiQ" target="_lZSpYtBAEeWhI4x9CGXwiQ" source="_lZSpZdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSpYtBAEeWhI4x9CGXwiQ" name="Fork(condition3)@39e3d09f" incoming="_lZSpYdBAEeWhI4x9CGXwiQ" outgoing="_lZSpDtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpY9BAEeWhI4x9CGXwiQ" name="RightHandSide@1b95946a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSpZNBAEeWhI4x9CGXwiQ" name="Value(alert)">
                  <result xmi:id="_lZSpZdBAEeWhI4x9CGXwiQ" name="Value(alert).result" outgoing="_lZSpYdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpZtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpZ9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSpaNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gdBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpadBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@39e3d09f)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpatBAEeWhI4x9CGXwiQ" target="_lZSpbtBAEeWhI4x9CGXwiQ" source="_lZSpa9BAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSpa9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@39e3d09f).input" incoming="_lZSpDtBAEeWhI4x9CGXwiQ" outgoing="_lZSpatBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpbNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpbdBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSpbtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@39e3d09f).output" incoming="_lZSpatBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpb9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpcNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpcdBAEeWhI4x9CGXwiQ" name="Test(Merge(ConditionalLogicalExpression@2d69dd29.result))">
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSpctBAEeWhI4x9CGXwiQ" target="_lZSpodBAEeWhI4x9CGXwiQ" source="_lZSpoNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpc9BAEeWhI4x9CGXwiQ" target="_lZSpodBAEeWhI4x9CGXwiQ" source="_lZSphNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSpdNBAEeWhI4x9CGXwiQ" target="_lZSph9BAEeWhI4x9CGXwiQ" source="_lZSpodBAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSpddBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSpdtBAEeWhI4x9CGXwiQ" target="_lZSpltBAEeWhI4x9CGXwiQ" source="_lZSpodBAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZSpd9BAEeWhI4x9CGXwiQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpeNBAEeWhI4x9CGXwiQ" target="_lZSpotBAEeWhI4x9CGXwiQ" source="_lZSpidBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpedBAEeWhI4x9CGXwiQ" target="_lZSpotBAEeWhI4x9CGXwiQ" source="_lZSpmNBAEeWhI4x9CGXwiQ"/>
              <structuredNodeOutput xmi:id="_lZSpetBAEeWhI4x9CGXwiQ" name="Decider(Merge(ConditionalLogicalExpression@2d69dd29.result))" incoming="_lZSpD9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpe9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpfNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSpfdBAEeWhI4x9CGXwiQ" name="Call(>)">
                <argument xmi:id="_lZSpftBAEeWhI4x9CGXwiQ" name="Call(>).argument(x)" incoming="_lZSDBdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpf9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpgNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZSpgdBAEeWhI4x9CGXwiQ" name="Call(>).argument(y)" incoming="_lZSDBtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpgtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpg9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZSphNBAEeWhI4x9CGXwiQ" name="Call(>).result(result)" outgoing="_lZSpc9BAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSphdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSphtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSph9BAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@2d69dd29.operand2" incoming="_lZSpdNBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpiNBAEeWhI4x9CGXwiQ" target="_lZSpidBAEeWhI4x9CGXwiQ" source="_lZSpk9BAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZSpidBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@2d69dd29.operand2.result" incoming="_lZSpiNBAEeWhI4x9CGXwiQ" outgoing="_lZSpeNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpitBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpi9BAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSpjNBAEeWhI4x9CGXwiQ" name="Call(&lt;)">
                  <argument xmi:id="_lZSpjdBAEeWhI4x9CGXwiQ" name="Call(&lt;).argument(x)" incoming="_lZSDB9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpjtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpj9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSpkNBAEeWhI4x9CGXwiQ" name="Call(&lt;).argument(y)" incoming="_lZSDCNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpkdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpktBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSpk9BAEeWhI4x9CGXwiQ" name="Call(&lt;).result(result)" outgoing="_lZSpiNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSplNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpldBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpltBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@2d69dd29.operand3" incoming="_lZSpdtBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpl9BAEeWhI4x9CGXwiQ" target="_lZSpmNBAEeWhI4x9CGXwiQ" source="_lZSpnNBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZSpmNBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@2d69dd29.operand3.result" incoming="_lZSpl9BAEeWhI4x9CGXwiQ" outgoing="_lZSpedBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpmdBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpmtBAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSpm9BAEeWhI4x9CGXwiQ" name="Value(false)">
                  <result xmi:id="_lZSpnNBAEeWhI4x9CGXwiQ" name="Value(false).result" outgoing="_lZSpl9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpndBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpntBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSpn9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_lZSpoNBAEeWhI4x9CGXwiQ" name="Initial(ConditionalLogicalExpression@2d69dd29)" outgoing="_lZSpctBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_lZSpodBAEeWhI4x9CGXwiQ" name="Decision(ConditionalLogicalExpression@2d69dd29)" incoming="_lZSpctBAEeWhI4x9CGXwiQ _lZSpc9BAEeWhI4x9CGXwiQ" outgoing="_lZSpdNBAEeWhI4x9CGXwiQ _lZSpdtBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZSpc9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_lZSpotBAEeWhI4x9CGXwiQ" name="Merge(ConditionalLogicalExpression@2d69dd29.result)" incoming="_lZSpeNBAEeWhI4x9CGXwiQ _lZSpedBAEeWhI4x9CGXwiQ" outgoing="_lZSpD9BAEeWhI4x9CGXwiQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpo9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@70518ef9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSppNBAEeWhI4x9CGXwiQ" target="_lZSppdBAEeWhI4x9CGXwiQ" source="_lZSpqNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSppdBAEeWhI4x9CGXwiQ" name="Fork(condition3)@141e8da6" incoming="_lZSppNBAEeWhI4x9CGXwiQ" outgoing="_lZSpENBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpptBAEeWhI4x9CGXwiQ" name="RightHandSide@61e5979b">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSpp9BAEeWhI4x9CGXwiQ" name="Value(critical)">
                  <result xmi:id="_lZSpqNBAEeWhI4x9CGXwiQ" name="Value(critical).result" outgoing="_lZSppNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpqdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpqtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSpq9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2gtBAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSprNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@141e8da6)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSprdBAEeWhI4x9CGXwiQ" target="_lZSpsdBAEeWhI4x9CGXwiQ" source="_lZSprtBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSprtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@141e8da6).input" incoming="_lZSpENBAEeWhI4x9CGXwiQ" outgoing="_lZSprdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpr9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpsNBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSpsdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@141e8da6).output" incoming="_lZSprdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpstBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSps9BAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSptNBAEeWhI4x9CGXwiQ" name="Value(true)">
              <result xmi:id="_lZSptdBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpttBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpt9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSpuNBAEeWhI4x9CGXwiQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpudBAEeWhI4x9CGXwiQ" name="ExpressionStatement@513dda28">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSputBAEeWhI4x9CGXwiQ" target="_lZSpu9BAEeWhI4x9CGXwiQ" source="_lZSpvtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSpu9BAEeWhI4x9CGXwiQ" name="Fork(condition3)@54bca5c" incoming="_lZSputBAEeWhI4x9CGXwiQ" outgoing="_lZSpEdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpvNBAEeWhI4x9CGXwiQ" name="RightHandSide@32d260bb">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSpvdBAEeWhI4x9CGXwiQ" name="Value(error)">
                  <result xmi:id="_lZSpvtBAEeWhI4x9CGXwiQ" name="Value(error).result" outgoing="_lZSputBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpv9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpwNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_lZSpwdBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" instance="_lZT2g9BAEeWhI4x9CGXwiQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSpwtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@54bca5c)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSpw9BAEeWhI4x9CGXwiQ" target="_lZSpx9BAEeWhI4x9CGXwiQ" source="_lZSpxNBAEeWhI4x9CGXwiQ"/>
              <structuredNodeInput xmi:id="_lZSpxNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@54bca5c).input" incoming="_lZSpEdBAEeWhI4x9CGXwiQ" outgoing="_lZSpw9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpxdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpxtBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_lZSpx9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(condition3)@54bca5c).output" incoming="_lZSpw9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpyNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSpydBAEeWhI4x9CGXwiQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_lZSpytBAEeWhI4x9CGXwiQ" body="_lZSpHdBAEeWhI4x9CGXwiQ _lZSpJtBAEeWhI4x9CGXwiQ" bodyOutput="_lZSpK9BAEeWhI4x9CGXwiQ" decider="_lZSpGtBAEeWhI4x9CGXwiQ" successorClause="_lZSpy9BAEeWhI4x9CGXwiQ _lZSpzNBAEeWhI4x9CGXwiQ" test="_lZSpEtBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSpy9BAEeWhI4x9CGXwiQ" body="_lZSpYNBAEeWhI4x9CGXwiQ _lZSpadBAEeWhI4x9CGXwiQ" bodyOutput="_lZSpbtBAEeWhI4x9CGXwiQ" decider="_lZSpN9BAEeWhI4x9CGXwiQ" predecessorClause="_lZSpytBAEeWhI4x9CGXwiQ" successorClause="_lZSpzdBAEeWhI4x9CGXwiQ" test="_lZSpLtBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSpzNBAEeWhI4x9CGXwiQ" body="_lZSpo9BAEeWhI4x9CGXwiQ _lZSprNBAEeWhI4x9CGXwiQ" bodyOutput="_lZSpsdBAEeWhI4x9CGXwiQ" decider="_lZSpetBAEeWhI4x9CGXwiQ" predecessorClause="_lZSpytBAEeWhI4x9CGXwiQ" successorClause="_lZSpzdBAEeWhI4x9CGXwiQ" test="_lZSpcdBAEeWhI4x9CGXwiQ"/>
            <clause xmi:id="_lZSpzdBAEeWhI4x9CGXwiQ" body="_lZSpudBAEeWhI4x9CGXwiQ _lZSpwtBAEeWhI4x9CGXwiQ" bodyOutput="_lZSpx9BAEeWhI4x9CGXwiQ" decider="_lZSptdBAEeWhI4x9CGXwiQ" predecessorClause="_lZSpy9BAEeWhI4x9CGXwiQ _lZSpzNBAEeWhI4x9CGXwiQ" test="_lZSptNBAEeWhI4x9CGXwiQ"/>
            <result xmi:id="_lZSpztBAEeWhI4x9CGXwiQ" name="IfStatement@ad3536a.result(condition3)" outgoing="_lZSC_tBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSpz9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp0NBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZSp0dBAEeWhI4x9CGXwiQ" name="Fork(condition3)" incoming="_lZSC_tBAEeWhI4x9CGXwiQ" outgoing="_lZSDHtBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSp0tBAEeWhI4x9CGXwiQ" name="SwitchStatement@220c95ab" incoming="_lZSDC9BAEeWhI4x9CGXwiQ" outgoing="_lZSDENBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp09BAEeWhI4x9CGXwiQ" target="_lZSqF9BAEeWhI4x9CGXwiQ" source="_lZSqFNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSp1NBAEeWhI4x9CGXwiQ" target="_lZSp1dBAEeWhI4x9CGXwiQ" source="_lZSqGNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_lZSp1dBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@220c95ab)" incoming="_lZSp1NBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp1tBAEeWhI4x9CGXwiQ" target="_lZSp4tBAEeWhI4x9CGXwiQ" source="_lZSp2dBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp19BAEeWhI4x9CGXwiQ" target="_lZSp9tBAEeWhI4x9CGXwiQ" source="_lZSp7dBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp2NBAEeWhI4x9CGXwiQ" target="_lZSqDNBAEeWhI4x9CGXwiQ" source="_lZSqA9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSp2dBAEeWhI4x9CGXwiQ" name="Fork(Fork(year)@72b5ecb)" incoming="_lZSDCtBAEeWhI4x9CGXwiQ" outgoing="_lZSp1tBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSp2tBAEeWhI4x9CGXwiQ" name="Test(Test(Case(Value(2012).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp29BAEeWhI4x9CGXwiQ" target="_lZSp6NBAEeWhI4x9CGXwiQ" source="_lZSp3dBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSp3NBAEeWhI4x9CGXwiQ" name="Value(2012)">
                  <result xmi:id="_lZSp3dBAEeWhI4x9CGXwiQ" name="Value(2012).result" outgoing="_lZSp29BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp3tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp39BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSp4NBAEeWhI4x9CGXwiQ" value="2012">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSp4dBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2012).result))">
                  <first xmi:id="_lZSp4tBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2012).result)).first" incoming="_lZSp1tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp49BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp5NBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSp5dBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2012).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp5tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp59BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSp6NBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2012).result)).second" incoming="_lZSp29BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp6dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp6tBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSp69BAEeWhI4x9CGXwiQ" name="ExpressionStatement@7141f363">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp7NBAEeWhI4x9CGXwiQ" target="_lZSp7dBAEeWhI4x9CGXwiQ" source="_lZSp8NBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZSp7dBAEeWhI4x9CGXwiQ" name="Fork(month)@46c36431" incoming="_lZSp7NBAEeWhI4x9CGXwiQ" outgoing="_lZSp19BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSp7tBAEeWhI4x9CGXwiQ" name="RightHandSide@45e6f142">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSp79BAEeWhI4x9CGXwiQ" name="Value(2)">
                    <result xmi:id="_lZSp8NBAEeWhI4x9CGXwiQ" name="Value(2).result" outgoing="_lZSp7NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp8dBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp8tBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZSp89BAEeWhI4x9CGXwiQ" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSp9NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(month)@46c36431)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSp9dBAEeWhI4x9CGXwiQ" target="_lZSp-dBAEeWhI4x9CGXwiQ" source="_lZSp9tBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZSp9tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(month)@46c36431).input" incoming="_lZSp19BAEeWhI4x9CGXwiQ" outgoing="_lZSp9dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp99BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp-NBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZSp-dBAEeWhI4x9CGXwiQ" name="Passthru(Fork(month)@46c36431).output" incoming="_lZSp9dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp-tBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp-9BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSp_NBAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZSp_dBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSp_tBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSp_9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZSqANBAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSqAdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@2905ee47">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqAtBAEeWhI4x9CGXwiQ" target="_lZSqA9BAEeWhI4x9CGXwiQ" source="_lZSqBtBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZSqA9BAEeWhI4x9CGXwiQ" name="Fork(month)@1fc9d6b9" incoming="_lZSqAtBAEeWhI4x9CGXwiQ" outgoing="_lZSp2NBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSqBNBAEeWhI4x9CGXwiQ" name="RightHandSide@7c301bfc">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqBdBAEeWhI4x9CGXwiQ" name="Value(3)">
                    <result xmi:id="_lZSqBtBAEeWhI4x9CGXwiQ" name="Value(3).result" outgoing="_lZSqAtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqB9BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqCNBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqCdBAEeWhI4x9CGXwiQ" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSqCtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(month)@1fc9d6b9)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqC9BAEeWhI4x9CGXwiQ" target="_lZSqD9BAEeWhI4x9CGXwiQ" source="_lZSqDNBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZSqDNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(month)@1fc9d6b9).input" incoming="_lZSp2NBAEeWhI4x9CGXwiQ" outgoing="_lZSqC9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqDdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqDtBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZSqD9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(month)@1fc9d6b9).output" incoming="_lZSqC9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqENBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqEdBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_lZSqEtBAEeWhI4x9CGXwiQ" body="_lZSp69BAEeWhI4x9CGXwiQ _lZSp9NBAEeWhI4x9CGXwiQ" bodyOutput="_lZSp-dBAEeWhI4x9CGXwiQ" decider="_lZSp5dBAEeWhI4x9CGXwiQ" successorClause="_lZSqE9BAEeWhI4x9CGXwiQ" test="_lZSp2tBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZSqE9BAEeWhI4x9CGXwiQ" body="_lZSqAdBAEeWhI4x9CGXwiQ _lZSqCtBAEeWhI4x9CGXwiQ" bodyOutput="_lZSqD9BAEeWhI4x9CGXwiQ" decider="_lZSp_dBAEeWhI4x9CGXwiQ" predecessorClause="_lZSqEtBAEeWhI4x9CGXwiQ" test="_lZSp_NBAEeWhI4x9CGXwiQ"/>
              <result xmi:id="_lZSqFNBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@220c95ab).result(month)" outgoing="_lZSp09BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqFdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqFtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZSqF9BAEeWhI4x9CGXwiQ" name="Fork(month)" incoming="_lZSp09BAEeWhI4x9CGXwiQ" outgoing="_lZSDDNBAEeWhI4x9CGXwiQ _lZSDINBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSqGNBAEeWhI4x9CGXwiQ" name="Switch((SwitchStatement@220c95ab)" outgoing="_lZSp1NBAEeWhI4x9CGXwiQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSqGdBAEeWhI4x9CGXwiQ" name="SwitchStatement@ff52dc2" incoming="_lZSDENBAEeWhI4x9CGXwiQ" outgoing="_lZSDEdBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqGtBAEeWhI4x9CGXwiQ" target="_lZTQd9BAEeWhI4x9CGXwiQ" source="_lZTQdNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZSqG9BAEeWhI4x9CGXwiQ" target="_lZSqHNBAEeWhI4x9CGXwiQ" source="_lZTQeNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_lZSqHNBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@ff52dc2)" incoming="_lZSqG9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqHdBAEeWhI4x9CGXwiQ" target="_lZSqStBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqHtBAEeWhI4x9CGXwiQ" target="_lZSqWdBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqH9BAEeWhI4x9CGXwiQ" target="_lZSqctBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqINBAEeWhI4x9CGXwiQ" target="_lZSqi9BAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqIdBAEeWhI4x9CGXwiQ" target="_lZSqpNBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqItBAEeWhI4x9CGXwiQ" target="_lZSqvdBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqI9BAEeWhI4x9CGXwiQ" target="_lZSq1tBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqJNBAEeWhI4x9CGXwiQ" target="_lZSq9NBAEeWhI4x9CGXwiQ" source="_lZSq69BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqJdBAEeWhI4x9CGXwiQ" target="_lZTO-NBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqJtBAEeWhI4x9CGXwiQ" target="_lZTPB9BAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqJ9BAEeWhI4x9CGXwiQ" target="_lZTPINBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqKNBAEeWhI4x9CGXwiQ" target="_lZTPOdBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqKdBAEeWhI4x9CGXwiQ" target="_lZTPV9BAEeWhI4x9CGXwiQ" source="_lZTPTtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqKtBAEeWhI4x9CGXwiQ" target="_lZTPZdBAEeWhI4x9CGXwiQ" source="_lZSqL9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqK9BAEeWhI4x9CGXwiQ" target="_lZTQQdBAEeWhI4x9CGXwiQ" source="_lZTQPtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqLNBAEeWhI4x9CGXwiQ" target="_lZTQRNBAEeWhI4x9CGXwiQ" source="_lZTQQdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZSqLdBAEeWhI4x9CGXwiQ" target="_lZTQX9BAEeWhI4x9CGXwiQ" source="_lZTQT9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqLtBAEeWhI4x9CGXwiQ" target="_lZTQatBAEeWhI4x9CGXwiQ" source="_lZTQYdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZSqL9BAEeWhI4x9CGXwiQ" name="Fork(Fork(month))" incoming="_lZSDDNBAEeWhI4x9CGXwiQ" outgoing="_lZSqHdBAEeWhI4x9CGXwiQ _lZSqHtBAEeWhI4x9CGXwiQ _lZSqH9BAEeWhI4x9CGXwiQ _lZSqINBAEeWhI4x9CGXwiQ _lZSqIdBAEeWhI4x9CGXwiQ _lZSqItBAEeWhI4x9CGXwiQ _lZSqI9BAEeWhI4x9CGXwiQ _lZSqJdBAEeWhI4x9CGXwiQ _lZSqJtBAEeWhI4x9CGXwiQ _lZSqJ9BAEeWhI4x9CGXwiQ _lZSqKNBAEeWhI4x9CGXwiQ _lZSqKtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSqMNBAEeWhI4x9CGXwiQ" name="Test(Call(Or).result(result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqMdBAEeWhI4x9CGXwiQ" target="_lZSqUNBAEeWhI4x9CGXwiQ" source="_lZSqRdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqMtBAEeWhI4x9CGXwiQ" target="_lZSqX9BAEeWhI4x9CGXwiQ" source="_lZSqVNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqM9BAEeWhI4x9CGXwiQ" target="_lZSqY9BAEeWhI4x9CGXwiQ" source="_lZSqTdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqNNBAEeWhI4x9CGXwiQ" target="_lZSqZtBAEeWhI4x9CGXwiQ" source="_lZSqXNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqNdBAEeWhI4x9CGXwiQ" target="_lZSqeNBAEeWhI4x9CGXwiQ" source="_lZSqbdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqNtBAEeWhI4x9CGXwiQ" target="_lZSqfNBAEeWhI4x9CGXwiQ" source="_lZSqadBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqN9BAEeWhI4x9CGXwiQ" target="_lZSqf9BAEeWhI4x9CGXwiQ" source="_lZSqddBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqONBAEeWhI4x9CGXwiQ" target="_lZSqkdBAEeWhI4x9CGXwiQ" source="_lZSqhtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqOdBAEeWhI4x9CGXwiQ" target="_lZSqldBAEeWhI4x9CGXwiQ" source="_lZSqgtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqOtBAEeWhI4x9CGXwiQ" target="_lZSqmNBAEeWhI4x9CGXwiQ" source="_lZSqjtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqO9BAEeWhI4x9CGXwiQ" target="_lZSqqtBAEeWhI4x9CGXwiQ" source="_lZSqn9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqPNBAEeWhI4x9CGXwiQ" target="_lZSqrtBAEeWhI4x9CGXwiQ" source="_lZSqm9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqPdBAEeWhI4x9CGXwiQ" target="_lZSqsdBAEeWhI4x9CGXwiQ" source="_lZSqp9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqPtBAEeWhI4x9CGXwiQ" target="_lZSqw9BAEeWhI4x9CGXwiQ" source="_lZSquNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqP9BAEeWhI4x9CGXwiQ" target="_lZSqx9BAEeWhI4x9CGXwiQ" source="_lZSqtNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqQNBAEeWhI4x9CGXwiQ" target="_lZSqytBAEeWhI4x9CGXwiQ" source="_lZSqwNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqQdBAEeWhI4x9CGXwiQ" target="_lZSq3NBAEeWhI4x9CGXwiQ" source="_lZSq0dBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqQtBAEeWhI4x9CGXwiQ" target="_lZSq4NBAEeWhI4x9CGXwiQ" source="_lZSqzdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSqQ9BAEeWhI4x9CGXwiQ" target="_lZSq49BAEeWhI4x9CGXwiQ" source="_lZSq2dBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqRNBAEeWhI4x9CGXwiQ" name="Value(1)">
                  <result xmi:id="_lZSqRdBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZSqMdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqRtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqR9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqSNBAEeWhI4x9CGXwiQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSqSdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result))">
                  <first xmi:id="_lZSqStBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result)).first" incoming="_lZSqHdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqS9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqTNBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSqTdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result)).result" outgoing="_lZSqM9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqTtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqT9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSqUNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result)).second" incoming="_lZSqMdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqUdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqUtBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqU9BAEeWhI4x9CGXwiQ" name="Value(3)">
                  <result xmi:id="_lZSqVNBAEeWhI4x9CGXwiQ" name="Value(3).result" outgoing="_lZSqMtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqVdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqVtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqV9BAEeWhI4x9CGXwiQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSqWNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result))">
                  <first xmi:id="_lZSqWdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result)).first" incoming="_lZSqHtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqWtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqW9BAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSqXNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result)).result" outgoing="_lZSqNNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqXdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqXtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSqX9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result)).second" incoming="_lZSqMtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqYNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqYdBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSqYtBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZSqY9BAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSqM9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqZNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqZdBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSqZtBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSqNNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqZ9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqaNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSqadBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZSqNtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqatBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqa9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqbNBAEeWhI4x9CGXwiQ" name="Value(5)">
                  <result xmi:id="_lZSqbdBAEeWhI4x9CGXwiQ" name="Value(5).result" outgoing="_lZSqNdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqbtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqb9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqcNBAEeWhI4x9CGXwiQ" value="5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSqcdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(5).result))">
                  <first xmi:id="_lZSqctBAEeWhI4x9CGXwiQ" name="Test(Case(Value(5).result)).first" incoming="_lZSqH9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqc9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqdNBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSqddBAEeWhI4x9CGXwiQ" name="Test(Case(Value(5).result)).result" outgoing="_lZSqN9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqdtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqd9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSqeNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(5).result)).second" incoming="_lZSqNdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqedBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqetBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSqe9BAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZSqfNBAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSqNtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqfdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqftBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSqf9BAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSqN9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqgNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqgdBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSqgtBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZSqOdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqg9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqhNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqhdBAEeWhI4x9CGXwiQ" name="Value(7)">
                  <result xmi:id="_lZSqhtBAEeWhI4x9CGXwiQ" name="Value(7).result" outgoing="_lZSqONBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqh9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqiNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqidBAEeWhI4x9CGXwiQ" value="7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSqitBAEeWhI4x9CGXwiQ" name="Test(Case(Value(7).result))">
                  <first xmi:id="_lZSqi9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(7).result)).first" incoming="_lZSqINBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqjNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqjdBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSqjtBAEeWhI4x9CGXwiQ" name="Test(Case(Value(7).result)).result" outgoing="_lZSqOtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqj9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqkNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSqkdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(7).result)).second" incoming="_lZSqONBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqktBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqk9BAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSqlNBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZSqldBAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSqOdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqltBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSql9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSqmNBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSqOtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqmdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqmtBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSqm9BAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZSqPNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqnNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqndBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqntBAEeWhI4x9CGXwiQ" name="Value(8)">
                  <result xmi:id="_lZSqn9BAEeWhI4x9CGXwiQ" name="Value(8).result" outgoing="_lZSqO9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqoNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqodBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqotBAEeWhI4x9CGXwiQ" value="8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSqo9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(8).result))">
                  <first xmi:id="_lZSqpNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(8).result)).first" incoming="_lZSqIdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqpdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqptBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSqp9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(8).result)).result" outgoing="_lZSqPdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqqNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqqdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSqqtBAEeWhI4x9CGXwiQ" name="Test(Case(Value(8).result)).second" incoming="_lZSqO9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqq9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqrNBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSqrdBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZSqrtBAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSqPNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqr9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqsNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSqsdBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSqPdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqstBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqs9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSqtNBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZSqP9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqtdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqttBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSqt9BAEeWhI4x9CGXwiQ" name="Value(10)">
                  <result xmi:id="_lZSquNBAEeWhI4x9CGXwiQ" name="Value(10).result" outgoing="_lZSqPtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqudBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqutBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSqu9BAEeWhI4x9CGXwiQ" value="10">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSqvNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(10).result))">
                  <first xmi:id="_lZSqvdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(10).result)).first" incoming="_lZSqItBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqvtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqv9BAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSqwNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(10).result)).result" outgoing="_lZSqQNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqwdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqwtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSqw9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(10).result)).second" incoming="_lZSqPtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqxNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqxdBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSqxtBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZSqx9BAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSqP9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqyNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqydBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSqytBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSqQNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqy9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqzNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSqzdBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZSqQtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSqztBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSqz9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSq0NBAEeWhI4x9CGXwiQ" name="Value(12)">
                  <result xmi:id="_lZSq0dBAEeWhI4x9CGXwiQ" name="Value(12).result" outgoing="_lZSqQdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq0tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq09BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZSq1NBAEeWhI4x9CGXwiQ" value="12">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZSq1dBAEeWhI4x9CGXwiQ" name="Test(Case(Value(12).result))">
                  <first xmi:id="_lZSq1tBAEeWhI4x9CGXwiQ" name="Test(Case(Value(12).result)).first" incoming="_lZSqI9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq19BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq2NBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZSq2dBAEeWhI4x9CGXwiQ" name="Test(Case(Value(12).result)).result" outgoing="_lZSqQ9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq2tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq29BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZSq3NBAEeWhI4x9CGXwiQ" name="Test(Case(Value(12).result)).second" incoming="_lZSqQdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq3dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq3tBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZSq39BAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZSq4NBAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSqQtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq4dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq4tBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZSq49BAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSqQ9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq5NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq5dBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZSq5tBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq59BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq6NBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSq6dBAEeWhI4x9CGXwiQ" name="ExpressionStatement@3ad52534">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq6tBAEeWhI4x9CGXwiQ" target="_lZSq69BAEeWhI4x9CGXwiQ" source="_lZSq7tBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZSq69BAEeWhI4x9CGXwiQ" name="Fork(numDays)@4c21261c" incoming="_lZSq6tBAEeWhI4x9CGXwiQ" outgoing="_lZSqJNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSq7NBAEeWhI4x9CGXwiQ" name="RightHandSide@144d1f50">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZSq7dBAEeWhI4x9CGXwiQ" name="Value(31)">
                    <result xmi:id="_lZSq7tBAEeWhI4x9CGXwiQ" name="Value(31).result" outgoing="_lZSq6tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq79BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq8NBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZSq8dBAEeWhI4x9CGXwiQ" value="31">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSq8tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@4c21261c)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq89BAEeWhI4x9CGXwiQ" target="_lZSq99BAEeWhI4x9CGXwiQ" source="_lZSq9NBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZSq9NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@4c21261c).input" incoming="_lZSqJNBAEeWhI4x9CGXwiQ" outgoing="_lZSq89BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq9dBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq9tBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZSq99BAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@4c21261c).output" incoming="_lZSq89BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZSq-NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZSq-dBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZSq-tBAEeWhI4x9CGXwiQ" name="Test(Call(Or).result(result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq-9BAEeWhI4x9CGXwiQ" target="_lZTO_tBAEeWhI4x9CGXwiQ" source="_lZTO89BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq_NBAEeWhI4x9CGXwiQ" target="_lZTPDdBAEeWhI4x9CGXwiQ" source="_lZTPAtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq_dBAEeWhI4x9CGXwiQ" target="_lZTPEdBAEeWhI4x9CGXwiQ" source="_lZTO-9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq_tBAEeWhI4x9CGXwiQ" target="_lZTPFNBAEeWhI4x9CGXwiQ" source="_lZTPCtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSq_9BAEeWhI4x9CGXwiQ" target="_lZTPJtBAEeWhI4x9CGXwiQ" source="_lZTPG9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSrANBAEeWhI4x9CGXwiQ" target="_lZTPKtBAEeWhI4x9CGXwiQ" source="_lZTPF9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSrAdBAEeWhI4x9CGXwiQ" target="_lZTPLdBAEeWhI4x9CGXwiQ" source="_lZTPI9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZSrAtBAEeWhI4x9CGXwiQ" target="_lZTPP9BAEeWhI4x9CGXwiQ" source="_lZTPNNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTO8NBAEeWhI4x9CGXwiQ" target="_lZTPQ9BAEeWhI4x9CGXwiQ" source="_lZTPMNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTO8dBAEeWhI4x9CGXwiQ" target="_lZTPRtBAEeWhI4x9CGXwiQ" source="_lZTPPNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTO8tBAEeWhI4x9CGXwiQ" name="Value(4)">
                  <result xmi:id="_lZTO89BAEeWhI4x9CGXwiQ" name="Value(4).result" outgoing="_lZSq-9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTO9NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTO9dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTO9tBAEeWhI4x9CGXwiQ" value="4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTO99BAEeWhI4x9CGXwiQ" name="Test(Case(Value(4).result))">
                  <first xmi:id="_lZTO-NBAEeWhI4x9CGXwiQ" name="Test(Case(Value(4).result)).first" incoming="_lZSqJdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTO-dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTO-tBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTO-9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(4).result)).result" outgoing="_lZSq_dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTO_NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTO_dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTO_tBAEeWhI4x9CGXwiQ" name="Test(Case(Value(4).result)).second" incoming="_lZSq-9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTO_9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPANBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPAdBAEeWhI4x9CGXwiQ" name="Value(6)">
                  <result xmi:id="_lZTPAtBAEeWhI4x9CGXwiQ" name="Value(6).result" outgoing="_lZSq_NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPA9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPBNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPBdBAEeWhI4x9CGXwiQ" value="6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTPBtBAEeWhI4x9CGXwiQ" name="Test(Case(Value(6).result))">
                  <first xmi:id="_lZTPB9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(6).result)).first" incoming="_lZSqJtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPCNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPCdBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTPCtBAEeWhI4x9CGXwiQ" name="Test(Case(Value(6).result)).result" outgoing="_lZSq_tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPC9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPDNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTPDdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(6).result)).second" incoming="_lZSq_NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPDtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPD9BAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTPENBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZTPEdBAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSq_dBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPEtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPE9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZTPFNBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSq_tBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPFdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPFtBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTPF9BAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZSrANBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPGNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPGdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPGtBAEeWhI4x9CGXwiQ" name="Value(9)">
                  <result xmi:id="_lZTPG9BAEeWhI4x9CGXwiQ" name="Value(9).result" outgoing="_lZSq_9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPHNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPHdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPHtBAEeWhI4x9CGXwiQ" value="9">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTPH9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(9).result))">
                  <first xmi:id="_lZTPINBAEeWhI4x9CGXwiQ" name="Test(Case(Value(9).result)).first" incoming="_lZSqJ9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPIdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPItBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTPI9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(9).result)).result" outgoing="_lZSrAdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPJNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPJdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTPJtBAEeWhI4x9CGXwiQ" name="Test(Case(Value(9).result)).second" incoming="_lZSq_9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPJ9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPKNBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTPKdBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZTPKtBAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZSrANBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPK9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPLNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZTPLdBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZSrAdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPLtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPL9BAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTPMNBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)" outgoing="_lZTO8NBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPMdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPMtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPM9BAEeWhI4x9CGXwiQ" name="Value(11)">
                  <result xmi:id="_lZTPNNBAEeWhI4x9CGXwiQ" name="Value(11).result" outgoing="_lZSrAtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPNdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPNtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPN9BAEeWhI4x9CGXwiQ" value="11">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTPONBAEeWhI4x9CGXwiQ" name="Test(Case(Value(11).result))">
                  <first xmi:id="_lZTPOdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(11).result)).first" incoming="_lZSqKNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPOtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPO9BAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTPPNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(11).result)).result" outgoing="_lZTO8dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPPdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPPtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTPP9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(11).result)).second" incoming="_lZSrAtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPQNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPQdBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTPQtBAEeWhI4x9CGXwiQ" name="Call(Or)">
                  <argument xmi:id="_lZTPQ9BAEeWhI4x9CGXwiQ" name="Call(Or).argument(x)" incoming="_lZTO8NBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPRNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPRdBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZTPRtBAEeWhI4x9CGXwiQ" name="Call(Or).argument(y)" incoming="_lZTO8dBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPR9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPSNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTPSdBAEeWhI4x9CGXwiQ" name="Call(Or).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPStBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPS9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTPTNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@2e090b14">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPTdBAEeWhI4x9CGXwiQ" target="_lZTPTtBAEeWhI4x9CGXwiQ" source="_lZTPUdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTPTtBAEeWhI4x9CGXwiQ" name="Fork(numDays)@5edd9b80" incoming="_lZTPTdBAEeWhI4x9CGXwiQ" outgoing="_lZSqKdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTPT9BAEeWhI4x9CGXwiQ" name="RightHandSide@270c2128">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPUNBAEeWhI4x9CGXwiQ" name="Value(30)">
                    <result xmi:id="_lZTPUdBAEeWhI4x9CGXwiQ" name="Value(30).result" outgoing="_lZTPTdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPUtBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPU9BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPVNBAEeWhI4x9CGXwiQ" value="30">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTPVdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@5edd9b80)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPVtBAEeWhI4x9CGXwiQ" target="_lZTPWtBAEeWhI4x9CGXwiQ" source="_lZTPV9BAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTPV9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@5edd9b80).input" incoming="_lZSqKdBAEeWhI4x9CGXwiQ" outgoing="_lZTPVtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPWNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPWdBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTPWtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@5edd9b80).output" incoming="_lZTPVtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPW9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPXNBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTPXdBAEeWhI4x9CGXwiQ" name="Test(Test(Case(Value(2).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPXtBAEeWhI4x9CGXwiQ" target="_lZTPa9BAEeWhI4x9CGXwiQ" source="_lZTPYNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPX9BAEeWhI4x9CGXwiQ" name="Value(2)">
                  <result xmi:id="_lZTPYNBAEeWhI4x9CGXwiQ" name="Value(2).result" outgoing="_lZTPXtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPYdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPYtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPY9BAEeWhI4x9CGXwiQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTPZNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result))">
                  <first xmi:id="_lZTPZdBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result)).first" incoming="_lZSqKtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPZtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPZ9BAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTPaNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPadBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPatBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTPa9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result)).second" incoming="_lZTPXtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPbNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPbdBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:ConditionalNode" xmi:id="_lZTPbtBAEeWhI4x9CGXwiQ" name="IfStatement@f6ea17f">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPb9BAEeWhI4x9CGXwiQ" target="_lZTPhtBAEeWhI4x9CGXwiQ" source="_lZTQFNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPcNBAEeWhI4x9CGXwiQ" target="_lZTQINBAEeWhI4x9CGXwiQ" source="_lZTQF9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPcdBAEeWhI4x9CGXwiQ" target="_lZTQNtBAEeWhI4x9CGXwiQ" source="_lZTQLdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTPctBAEeWhI4x9CGXwiQ" name="Test(Merge(ConditionalLogicalExpression@19278fc3.result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPc9BAEeWhI4x9CGXwiQ" target="_lZTPktBAEeWhI4x9CGXwiQ" source="_lZTPitBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPdNBAEeWhI4x9CGXwiQ" target="_lZTPntBAEeWhI4x9CGXwiQ" source="_lZTPldBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPddBAEeWhI4x9CGXwiQ" target="_lZTPpNBAEeWhI4x9CGXwiQ" source="_lZTPmdBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_lZTPdtBAEeWhI4x9CGXwiQ" target="_lZTP4NBAEeWhI4x9CGXwiQ" source="_lZTP39BAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPd9BAEeWhI4x9CGXwiQ" target="_lZTP4NBAEeWhI4x9CGXwiQ" source="_lZTPodBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_lZTPeNBAEeWhI4x9CGXwiQ" target="_lZTPp9BAEeWhI4x9CGXwiQ" source="_lZTP4NBAEeWhI4x9CGXwiQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTPedBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_lZTPetBAEeWhI4x9CGXwiQ" target="_lZTP1dBAEeWhI4x9CGXwiQ" source="_lZTP4NBAEeWhI4x9CGXwiQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTPe9BAEeWhI4x9CGXwiQ" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPfNBAEeWhI4x9CGXwiQ" target="_lZTP4dBAEeWhI4x9CGXwiQ" source="_lZTPrdBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPfdBAEeWhI4x9CGXwiQ" target="_lZTP4dBAEeWhI4x9CGXwiQ" source="_lZTP19BAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_lZTPftBAEeWhI4x9CGXwiQ" target="_lZTQE9BAEeWhI4x9CGXwiQ" source="_lZTQEtBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPf9BAEeWhI4x9CGXwiQ" target="_lZTQE9BAEeWhI4x9CGXwiQ" source="_lZTP4dBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_lZTPgNBAEeWhI4x9CGXwiQ" target="_lZTP4tBAEeWhI4x9CGXwiQ" source="_lZTQE9BAEeWhI4x9CGXwiQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTPgdBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_lZTPgtBAEeWhI4x9CGXwiQ" target="_lZTP7NBAEeWhI4x9CGXwiQ" source="_lZTQE9BAEeWhI4x9CGXwiQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTPg9BAEeWhI4x9CGXwiQ" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPhNBAEeWhI4x9CGXwiQ" target="_lZTQFNBAEeWhI4x9CGXwiQ" source="_lZTP5NBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPhdBAEeWhI4x9CGXwiQ" target="_lZTQFNBAEeWhI4x9CGXwiQ" source="_lZTP8dBAEeWhI4x9CGXwiQ"/>
                  <structuredNodeOutput xmi:id="_lZTPhtBAEeWhI4x9CGXwiQ" name="Decider(Merge(ConditionalLogicalExpression@19278fc3.result))" incoming="_lZTPb9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPh9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPiNBAEeWhI4x9CGXwiQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPidBAEeWhI4x9CGXwiQ" name="Value(4)">
                    <result xmi:id="_lZTPitBAEeWhI4x9CGXwiQ" name="Value(4).result" outgoing="_lZTPc9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPi9BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPjNBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPjdBAEeWhI4x9CGXwiQ" value="4">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTPjtBAEeWhI4x9CGXwiQ" name="Call(Mod)">
                    <argument xmi:id="_lZTPj9BAEeWhI4x9CGXwiQ" name="Call(Mod).argument(x)" incoming="_lZSDDdBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPkNBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPkdBAEeWhI4x9CGXwiQ" value="1"/>
                    </argument>
                    <argument xmi:id="_lZTPktBAEeWhI4x9CGXwiQ" name="Call(Mod).argument(y)" incoming="_lZTPc9BAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPk9BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPlNBAEeWhI4x9CGXwiQ" value="1"/>
                    </argument>
                    <result xmi:id="_lZTPldBAEeWhI4x9CGXwiQ" name="Call(Mod).result(result)" outgoing="_lZTPdNBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPltBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPl9BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPmNBAEeWhI4x9CGXwiQ" name="Value(0)">
                    <result xmi:id="_lZTPmdBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTPddBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPmtBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPm9BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPnNBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTPndBAEeWhI4x9CGXwiQ" name="Test(==)">
                    <first xmi:id="_lZTPntBAEeWhI4x9CGXwiQ" name="Test(==).first" incoming="_lZTPdNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPn9BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPoNBAEeWhI4x9CGXwiQ" value="1"/>
                    </first>
                    <result xmi:id="_lZTPodBAEeWhI4x9CGXwiQ" name="Test(==).result" outgoing="_lZTPd9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPotBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPo9BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <second xmi:id="_lZTPpNBAEeWhI4x9CGXwiQ" name="Test(==).second" incoming="_lZTPddBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPpdBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPptBAEeWhI4x9CGXwiQ" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTPp9BAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@744f581b.operand2" incoming="_lZTPeNBAEeWhI4x9CGXwiQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPqNBAEeWhI4x9CGXwiQ" target="_lZTPudBAEeWhI4x9CGXwiQ" source="_lZTPsdBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPqdBAEeWhI4x9CGXwiQ" target="_lZTPxdBAEeWhI4x9CGXwiQ" source="_lZTPvNBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPqtBAEeWhI4x9CGXwiQ" target="_lZTPy9BAEeWhI4x9CGXwiQ" source="_lZTPwNBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPq9BAEeWhI4x9CGXwiQ" target="_lZTPz9BAEeWhI4x9CGXwiQ" source="_lZTPyNBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTPrNBAEeWhI4x9CGXwiQ" target="_lZTPrdBAEeWhI4x9CGXwiQ" source="_lZTP0tBAEeWhI4x9CGXwiQ"/>
                    <structuredNodeOutput xmi:id="_lZTPrdBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@744f581b.operand2.result" incoming="_lZTPrNBAEeWhI4x9CGXwiQ" outgoing="_lZTPfNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPrtBAEeWhI4x9CGXwiQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPr9BAEeWhI4x9CGXwiQ" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPsNBAEeWhI4x9CGXwiQ" name="Value(100)">
                      <result xmi:id="_lZTPsdBAEeWhI4x9CGXwiQ" name="Value(100).result" outgoing="_lZTPqNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPstBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPs9BAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPtNBAEeWhI4x9CGXwiQ" value="100">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTPtdBAEeWhI4x9CGXwiQ" name="Call(Mod)">
                      <argument xmi:id="_lZTPttBAEeWhI4x9CGXwiQ" name="Call(Mod).argument(x)" incoming="_lZSDDtBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPt9BAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPuNBAEeWhI4x9CGXwiQ" value="1"/>
                      </argument>
                      <argument xmi:id="_lZTPudBAEeWhI4x9CGXwiQ" name="Call(Mod).argument(y)" incoming="_lZTPqNBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPutBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPu9BAEeWhI4x9CGXwiQ" value="1"/>
                      </argument>
                      <result xmi:id="_lZTPvNBAEeWhI4x9CGXwiQ" name="Call(Mod).result(result)" outgoing="_lZTPqdBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPvdBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPvtBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTPv9BAEeWhI4x9CGXwiQ" name="Value(0)">
                      <result xmi:id="_lZTPwNBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTPqtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPwdBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPwtBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_lZTPw9BAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTPxNBAEeWhI4x9CGXwiQ" name="Test(==)">
                      <first xmi:id="_lZTPxdBAEeWhI4x9CGXwiQ" name="Test(==).first" incoming="_lZTPqdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPxtBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPx9BAEeWhI4x9CGXwiQ" value="1"/>
                      </first>
                      <result xmi:id="_lZTPyNBAEeWhI4x9CGXwiQ" name="Test(==).result" outgoing="_lZTPq9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPydBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPytBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <second xmi:id="_lZTPy9BAEeWhI4x9CGXwiQ" name="Test(==).second" incoming="_lZTPqtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTPzNBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTPzdBAEeWhI4x9CGXwiQ" value="1"/>
                      </second>
                    </node>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTPztBAEeWhI4x9CGXwiQ" name="Call(Not)">
                      <argument xmi:id="_lZTPz9BAEeWhI4x9CGXwiQ" name="Call(Not).argument(x)" incoming="_lZTPq9BAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP0NBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP0dBAEeWhI4x9CGXwiQ" value="1"/>
                      </argument>
                      <result xmi:id="_lZTP0tBAEeWhI4x9CGXwiQ" name="Call(Not).result(result)" outgoing="_lZTPrNBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP09BAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP1NBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTP1dBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@744f581b.operand3" incoming="_lZTPetBAEeWhI4x9CGXwiQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTP1tBAEeWhI4x9CGXwiQ" target="_lZTP19BAEeWhI4x9CGXwiQ" source="_lZTP29BAEeWhI4x9CGXwiQ"/>
                    <structuredNodeOutput xmi:id="_lZTP19BAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@744f581b.operand3.result" incoming="_lZTP1tBAEeWhI4x9CGXwiQ" outgoing="_lZTPfdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP2NBAEeWhI4x9CGXwiQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP2dBAEeWhI4x9CGXwiQ" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTP2tBAEeWhI4x9CGXwiQ" name="Value(false)">
                      <result xmi:id="_lZTP29BAEeWhI4x9CGXwiQ" name="Value(false).result" outgoing="_lZTP1tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP3NBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP3dBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTP3tBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:InitialNode" xmi:id="_lZTP39BAEeWhI4x9CGXwiQ" name="Initial(ConditionalLogicalExpression@744f581b)" outgoing="_lZTPdtBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_lZTP4NBAEeWhI4x9CGXwiQ" name="Decision(ConditionalLogicalExpression@744f581b)" incoming="_lZTPdtBAEeWhI4x9CGXwiQ _lZTPd9BAEeWhI4x9CGXwiQ" outgoing="_lZTPeNBAEeWhI4x9CGXwiQ _lZTPetBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZTPd9BAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_lZTP4dBAEeWhI4x9CGXwiQ" name="Merge(ConditionalLogicalExpression@744f581b.result)" incoming="_lZTPfNBAEeWhI4x9CGXwiQ _lZTPfdBAEeWhI4x9CGXwiQ" outgoing="_lZTPf9BAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTP4tBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@19278fc3.operand2" incoming="_lZTPgNBAEeWhI4x9CGXwiQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTP49BAEeWhI4x9CGXwiQ" target="_lZTP5NBAEeWhI4x9CGXwiQ" source="_lZTP6NBAEeWhI4x9CGXwiQ"/>
                    <structuredNodeOutput xmi:id="_lZTP5NBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@19278fc3.operand2.result" incoming="_lZTP49BAEeWhI4x9CGXwiQ" outgoing="_lZTPhNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP5dBAEeWhI4x9CGXwiQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP5tBAEeWhI4x9CGXwiQ" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTP59BAEeWhI4x9CGXwiQ" name="Value(true)">
                      <result xmi:id="_lZTP6NBAEeWhI4x9CGXwiQ" name="Value(true).result" outgoing="_lZTP49BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP6dBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP6tBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTP69BAEeWhI4x9CGXwiQ" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTP7NBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@19278fc3.operand3" incoming="_lZTPgtBAEeWhI4x9CGXwiQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTP7dBAEeWhI4x9CGXwiQ" target="_lZTP_dBAEeWhI4x9CGXwiQ" source="_lZTP9dBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTP7tBAEeWhI4x9CGXwiQ" target="_lZTQCdBAEeWhI4x9CGXwiQ" source="_lZTQANBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTP79BAEeWhI4x9CGXwiQ" target="_lZTQD9BAEeWhI4x9CGXwiQ" source="_lZTQBNBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTP8NBAEeWhI4x9CGXwiQ" target="_lZTP8dBAEeWhI4x9CGXwiQ" source="_lZTQDNBAEeWhI4x9CGXwiQ"/>
                    <structuredNodeOutput xmi:id="_lZTP8dBAEeWhI4x9CGXwiQ" name="ConditionalLogicalExpression@19278fc3.operand3.result" incoming="_lZTP8NBAEeWhI4x9CGXwiQ" outgoing="_lZTPhdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP8tBAEeWhI4x9CGXwiQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP89BAEeWhI4x9CGXwiQ" value="*"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTP9NBAEeWhI4x9CGXwiQ" name="Value(400)">
                      <result xmi:id="_lZTP9dBAEeWhI4x9CGXwiQ" name="Value(400).result" outgoing="_lZTP7dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP9tBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP99BAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_lZTP-NBAEeWhI4x9CGXwiQ" value="400">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTP-dBAEeWhI4x9CGXwiQ" name="Call(Mod)">
                      <argument xmi:id="_lZTP-tBAEeWhI4x9CGXwiQ" name="Call(Mod).argument(x)" incoming="_lZSDD9BAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP-9BAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP_NBAEeWhI4x9CGXwiQ" value="1"/>
                      </argument>
                      <argument xmi:id="_lZTP_dBAEeWhI4x9CGXwiQ" name="Call(Mod).argument(y)" incoming="_lZTP7dBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTP_tBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTP_9BAEeWhI4x9CGXwiQ" value="1"/>
                      </argument>
                      <result xmi:id="_lZTQANBAEeWhI4x9CGXwiQ" name="Call(Mod).result(result)" outgoing="_lZTP7tBAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQAdBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQAtBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQA9BAEeWhI4x9CGXwiQ" name="Value(0)">
                      <result xmi:id="_lZTQBNBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTP79BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQBdBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQBtBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQB9BAEeWhI4x9CGXwiQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTQCNBAEeWhI4x9CGXwiQ" name="Test(==)">
                      <first xmi:id="_lZTQCdBAEeWhI4x9CGXwiQ" name="Test(==).first" incoming="_lZTP7tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQCtBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQC9BAEeWhI4x9CGXwiQ" value="1"/>
                      </first>
                      <result xmi:id="_lZTQDNBAEeWhI4x9CGXwiQ" name="Test(==).result" outgoing="_lZTP8NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQDdBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQDtBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <second xmi:id="_lZTQD9BAEeWhI4x9CGXwiQ" name="Test(==).second" incoming="_lZTP79BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQENBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQEdBAEeWhI4x9CGXwiQ" value="1"/>
                      </second>
                    </node>
                  </node>
                  <node xmi:type="uml:InitialNode" xmi:id="_lZTQEtBAEeWhI4x9CGXwiQ" name="Initial(ConditionalLogicalExpression@19278fc3)" outgoing="_lZTPftBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_lZTQE9BAEeWhI4x9CGXwiQ" name="Decision(ConditionalLogicalExpression@19278fc3)" incoming="_lZTPftBAEeWhI4x9CGXwiQ _lZTPf9BAEeWhI4x9CGXwiQ" outgoing="_lZTPgNBAEeWhI4x9CGXwiQ _lZTPgtBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZTPf9BAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_lZTQFNBAEeWhI4x9CGXwiQ" name="Merge(ConditionalLogicalExpression@19278fc3.result)" incoming="_lZTPhNBAEeWhI4x9CGXwiQ _lZTPhdBAEeWhI4x9CGXwiQ" outgoing="_lZTPb9BAEeWhI4x9CGXwiQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQFdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@388a7fd8">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQFtBAEeWhI4x9CGXwiQ" target="_lZTQF9BAEeWhI4x9CGXwiQ" source="_lZTQGtBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_lZTQF9BAEeWhI4x9CGXwiQ" name="Fork(numDays)@2e2fddaf" incoming="_lZTQFtBAEeWhI4x9CGXwiQ" outgoing="_lZTPcNBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQGNBAEeWhI4x9CGXwiQ" name="RightHandSide@488323d9">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQGdBAEeWhI4x9CGXwiQ" name="Value(29)">
                      <result xmi:id="_lZTQGtBAEeWhI4x9CGXwiQ" name="Value(29).result" outgoing="_lZTQFtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQG9BAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQHNBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQHdBAEeWhI4x9CGXwiQ" value="29">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQHtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@2e2fddaf)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQH9BAEeWhI4x9CGXwiQ" target="_lZTQI9BAEeWhI4x9CGXwiQ" source="_lZTQINBAEeWhI4x9CGXwiQ"/>
                  <structuredNodeInput xmi:id="_lZTQINBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@2e2fddaf).input" incoming="_lZTPcNBAEeWhI4x9CGXwiQ" outgoing="_lZTQH9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQIdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQItBAEeWhI4x9CGXwiQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_lZTQI9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@2e2fddaf).output" incoming="_lZTQH9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQJNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQJdBAEeWhI4x9CGXwiQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQJtBAEeWhI4x9CGXwiQ" name="Value(true)">
                  <result xmi:id="_lZTQJ9BAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQKNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQKdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTQKtBAEeWhI4x9CGXwiQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQK9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@38113ece">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQLNBAEeWhI4x9CGXwiQ" target="_lZTQLdBAEeWhI4x9CGXwiQ" source="_lZTQMNBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_lZTQLdBAEeWhI4x9CGXwiQ" name="Fork(numDays)@27f416f5" incoming="_lZTQLNBAEeWhI4x9CGXwiQ" outgoing="_lZTPcdBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQLtBAEeWhI4x9CGXwiQ" name="RightHandSide@a0f4351">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQL9BAEeWhI4x9CGXwiQ" name="Value(28)">
                      <result xmi:id="_lZTQMNBAEeWhI4x9CGXwiQ" name="Value(28).result" outgoing="_lZTQLNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQMdBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQMtBAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQM9BAEeWhI4x9CGXwiQ" value="28">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQNNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@27f416f5)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQNdBAEeWhI4x9CGXwiQ" target="_lZTQOdBAEeWhI4x9CGXwiQ" source="_lZTQNtBAEeWhI4x9CGXwiQ"/>
                  <structuredNodeInput xmi:id="_lZTQNtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@27f416f5).input" incoming="_lZTPcdBAEeWhI4x9CGXwiQ" outgoing="_lZTQNdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQN9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQONBAEeWhI4x9CGXwiQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_lZTQOdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@27f416f5).output" incoming="_lZTQNdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQOtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQO9BAEeWhI4x9CGXwiQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <clause xmi:id="_lZTQPNBAEeWhI4x9CGXwiQ" body="_lZTQFdBAEeWhI4x9CGXwiQ _lZTQHtBAEeWhI4x9CGXwiQ" bodyOutput="_lZTQI9BAEeWhI4x9CGXwiQ" decider="_lZTPhtBAEeWhI4x9CGXwiQ" successorClause="_lZTQPdBAEeWhI4x9CGXwiQ" test="_lZTPctBAEeWhI4x9CGXwiQ"/>
                <clause xmi:id="_lZTQPdBAEeWhI4x9CGXwiQ" body="_lZTQK9BAEeWhI4x9CGXwiQ _lZTQNNBAEeWhI4x9CGXwiQ" bodyOutput="_lZTQOdBAEeWhI4x9CGXwiQ" decider="_lZTQJ9BAEeWhI4x9CGXwiQ" predecessorClause="_lZTQPNBAEeWhI4x9CGXwiQ" test="_lZTQJtBAEeWhI4x9CGXwiQ"/>
                <result xmi:id="_lZTQPtBAEeWhI4x9CGXwiQ" name="IfStatement@f6ea17f.result(numDays)" outgoing="_lZSqK9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQP9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQQNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_lZTQQdBAEeWhI4x9CGXwiQ" name="Fork(numDays)" incoming="_lZSqK9BAEeWhI4x9CGXwiQ" outgoing="_lZSqLNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQQtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQQ9BAEeWhI4x9CGXwiQ" target="_lZTQR9BAEeWhI4x9CGXwiQ" source="_lZTQRNBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTQRNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)).input" incoming="_lZSqLNBAEeWhI4x9CGXwiQ" outgoing="_lZTQQ9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQRdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQRtBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTQR9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)).output" incoming="_lZTQQ9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQSNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQSdBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQStBAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZTQS9BAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQTNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQTdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTQTtBAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQT9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@7c61ed3" outgoing="_lZSqLdBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQUNBAEeWhI4x9CGXwiQ" target="_lZTQU9BAEeWhI4x9CGXwiQ" source="_lZTQW9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZTQUdBAEeWhI4x9CGXwiQ" target="_lZTQUtBAEeWhI4x9CGXwiQ" source="_lZTQWdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTQUtBAEeWhI4x9CGXwiQ" name="Call(WriteLine)" incoming="_lZTQUdBAEeWhI4x9CGXwiQ">
                  <argument xmi:id="_lZTQU9BAEeWhI4x9CGXwiQ" name="Call(WriteLine).argument(value)" incoming="_lZTQUNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQVNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQVdBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTQVtBAEeWhI4x9CGXwiQ" name="Call(WriteLine).result(errorStatus)">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQV9BAEeWhI4x9CGXwiQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQWNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQWdBAEeWhI4x9CGXwiQ" name="Tuple@4c0ccc66" outgoing="_lZTQUdBAEeWhI4x9CGXwiQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQWtBAEeWhI4x9CGXwiQ" name="Value(&quot;Invalid month.&quot;)">
                    <result xmi:id="_lZTQW9BAEeWhI4x9CGXwiQ" name="Value(&quot;Invalid month.&quot;).result" outgoing="_lZTQUNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQXNBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQXdBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_lZTQXtBAEeWhI4x9CGXwiQ" value="Invalid month.">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQX9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@53196afc" incoming="_lZSqLdBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQYNBAEeWhI4x9CGXwiQ" target="_lZTQYdBAEeWhI4x9CGXwiQ" source="_lZTQZNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTQYdBAEeWhI4x9CGXwiQ" name="Fork(numDays)@74e43fab" incoming="_lZTQYNBAEeWhI4x9CGXwiQ" outgoing="_lZSqLtBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQYtBAEeWhI4x9CGXwiQ" name="RightHandSide@35102f81">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQY9BAEeWhI4x9CGXwiQ" name="Value(0)">
                    <result xmi:id="_lZTQZNBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTQYNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQZdBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQZtBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQZ9BAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQaNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@74e43fab)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQadBAEeWhI4x9CGXwiQ" target="_lZTQbdBAEeWhI4x9CGXwiQ" source="_lZTQatBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTQatBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@74e43fab).input" incoming="_lZSqLtBAEeWhI4x9CGXwiQ" outgoing="_lZTQadBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQa9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQbNBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTQbdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(numDays)@74e43fab).output" incoming="_lZTQadBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQbtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQb9BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_lZTQcNBAEeWhI4x9CGXwiQ" body="_lZSq6dBAEeWhI4x9CGXwiQ _lZSq8tBAEeWhI4x9CGXwiQ" bodyOutput="_lZSq99BAEeWhI4x9CGXwiQ" decider="_lZSq5tBAEeWhI4x9CGXwiQ" successorClause="_lZTQc9BAEeWhI4x9CGXwiQ" test="_lZSqMNBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTQcdBAEeWhI4x9CGXwiQ" body="_lZTPTNBAEeWhI4x9CGXwiQ _lZTPVdBAEeWhI4x9CGXwiQ" bodyOutput="_lZTPWtBAEeWhI4x9CGXwiQ" decider="_lZTPSdBAEeWhI4x9CGXwiQ" successorClause="_lZTQc9BAEeWhI4x9CGXwiQ" test="_lZSq-tBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTQctBAEeWhI4x9CGXwiQ" body="_lZTPbtBAEeWhI4x9CGXwiQ _lZTQQtBAEeWhI4x9CGXwiQ" bodyOutput="_lZTQR9BAEeWhI4x9CGXwiQ" decider="_lZTPaNBAEeWhI4x9CGXwiQ" successorClause="_lZTQc9BAEeWhI4x9CGXwiQ" test="_lZTPXdBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTQc9BAEeWhI4x9CGXwiQ" body="_lZTQT9BAEeWhI4x9CGXwiQ _lZTQX9BAEeWhI4x9CGXwiQ _lZTQaNBAEeWhI4x9CGXwiQ" bodyOutput="_lZTQbdBAEeWhI4x9CGXwiQ" decider="_lZTQS9BAEeWhI4x9CGXwiQ" predecessorClause="_lZTQcNBAEeWhI4x9CGXwiQ _lZTQcdBAEeWhI4x9CGXwiQ _lZTQctBAEeWhI4x9CGXwiQ" test="_lZTQStBAEeWhI4x9CGXwiQ"/>
              <result xmi:id="_lZTQdNBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@ff52dc2).result(numDays)" outgoing="_lZSqGtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQddBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQdtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTQd9BAEeWhI4x9CGXwiQ" name="Fork(numDays)" incoming="_lZSqGtBAEeWhI4x9CGXwiQ" outgoing="_lZSDIdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQeNBAEeWhI4x9CGXwiQ" name="Switch((SwitchStatement@ff52dc2)" outgoing="_lZSqG9BAEeWhI4x9CGXwiQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQedBAEeWhI4x9CGXwiQ" name="ExpressionStatement@18d1b449" incoming="_lZSDEdBAEeWhI4x9CGXwiQ" outgoing="_lZSDE9BAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQetBAEeWhI4x9CGXwiQ" target="_lZTQe9BAEeWhI4x9CGXwiQ" source="_lZTQftBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTQe9BAEeWhI4x9CGXwiQ" name="Fork(switch1)@758fc7b4" incoming="_lZTQetBAEeWhI4x9CGXwiQ" outgoing="_lZSDEtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQfNBAEeWhI4x9CGXwiQ" name="RightHandSide@328036b8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQfdBAEeWhI4x9CGXwiQ" name="Value(1)">
                <result xmi:id="_lZTQftBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZTQetBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQf9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQgNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQgdBAEeWhI4x9CGXwiQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQgtBAEeWhI4x9CGXwiQ" name="SwitchStatement@40590bfd" incoming="_lZSDE9BAEeWhI4x9CGXwiQ" outgoing="_lZSDFNBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQg9BAEeWhI4x9CGXwiQ" target="_lZTREtBAEeWhI4x9CGXwiQ" source="_lZTRD9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZTQhNBAEeWhI4x9CGXwiQ" target="_lZTQhtBAEeWhI4x9CGXwiQ" source="_lZTRE9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQhdBAEeWhI4x9CGXwiQ" target="_lZTQjtBAEeWhI4x9CGXwiQ" source="_lZTRIdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_lZTQhtBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@40590bfd)" incoming="_lZTQhNBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQh9BAEeWhI4x9CGXwiQ" target="_lZTQl9BAEeWhI4x9CGXwiQ" source="_lZTQjtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQiNBAEeWhI4x9CGXwiQ" target="_lZTQq9BAEeWhI4x9CGXwiQ" source="_lZTQotBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQidBAEeWhI4x9CGXwiQ" target="_lZTQudBAEeWhI4x9CGXwiQ" source="_lZTQjtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQitBAEeWhI4x9CGXwiQ" target="_lZTQzdBAEeWhI4x9CGXwiQ" source="_lZTQxNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQi9BAEeWhI4x9CGXwiQ" target="_lZTQ29BAEeWhI4x9CGXwiQ" source="_lZTQjtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQjNBAEeWhI4x9CGXwiQ" target="_lZTQ79BAEeWhI4x9CGXwiQ" source="_lZTQ5tBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQjdBAEeWhI4x9CGXwiQ" target="_lZTRBdBAEeWhI4x9CGXwiQ" source="_lZTQ_NBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZTQjtBAEeWhI4x9CGXwiQ" name="Fork(Call(+).result(result))" incoming="_lZTQhdBAEeWhI4x9CGXwiQ" outgoing="_lZTQh9BAEeWhI4x9CGXwiQ _lZTQidBAEeWhI4x9CGXwiQ _lZTQi9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQj9BAEeWhI4x9CGXwiQ" name="Test(Test(Case(Value(1).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQkNBAEeWhI4x9CGXwiQ" target="_lZTQndBAEeWhI4x9CGXwiQ" source="_lZTQktBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQkdBAEeWhI4x9CGXwiQ" name="Value(1)">
                  <result xmi:id="_lZTQktBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZTQkNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQk9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQlNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQldBAEeWhI4x9CGXwiQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTQltBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result))">
                  <first xmi:id="_lZTQl9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result)).first" incoming="_lZTQh9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQmNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQmdBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTQmtBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQm9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQnNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTQndBAEeWhI4x9CGXwiQ" name="Test(Case(Value(1).result)).second" incoming="_lZTQkNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQntBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQn9BAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQoNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@13f44fc2">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQodBAEeWhI4x9CGXwiQ" target="_lZTQotBAEeWhI4x9CGXwiQ" source="_lZTQpdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTQotBAEeWhI4x9CGXwiQ" name="Fork(switch1)@1dd7b905" incoming="_lZTQodBAEeWhI4x9CGXwiQ" outgoing="_lZTQiNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQo9BAEeWhI4x9CGXwiQ" name="RightHandSide@3db40691">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQpNBAEeWhI4x9CGXwiQ" name="Value(1)">
                    <result xmi:id="_lZTQpdBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZTQodBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQptBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQp9BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQqNBAEeWhI4x9CGXwiQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQqdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@1dd7b905)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQqtBAEeWhI4x9CGXwiQ" target="_lZTQrtBAEeWhI4x9CGXwiQ" source="_lZTQq9BAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTQq9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@1dd7b905).input" incoming="_lZTQiNBAEeWhI4x9CGXwiQ" outgoing="_lZTQqtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQrNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQrdBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTQrtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@1dd7b905).output" incoming="_lZTQqtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQr9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQsNBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQsdBAEeWhI4x9CGXwiQ" name="Test(Test(Case(Value(2).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQstBAEeWhI4x9CGXwiQ" target="_lZTQv9BAEeWhI4x9CGXwiQ" source="_lZTQtNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQs9BAEeWhI4x9CGXwiQ" name="Value(2)">
                  <result xmi:id="_lZTQtNBAEeWhI4x9CGXwiQ" name="Value(2).result" outgoing="_lZTQstBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQtdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQttBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQt9BAEeWhI4x9CGXwiQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTQuNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result))">
                  <first xmi:id="_lZTQudBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result)).first" incoming="_lZTQidBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQutBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQu9BAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTQvNBAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQvdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQvtBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTQv9BAEeWhI4x9CGXwiQ" name="Test(Case(Value(2).result)).second" incoming="_lZTQstBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQwNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQwdBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQwtBAEeWhI4x9CGXwiQ" name="ExpressionStatement@26a1f00f">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQw9BAEeWhI4x9CGXwiQ" target="_lZTQxNBAEeWhI4x9CGXwiQ" source="_lZTQx9BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTQxNBAEeWhI4x9CGXwiQ" name="Fork(switch1)@644aa986" incoming="_lZTQw9BAEeWhI4x9CGXwiQ" outgoing="_lZTQitBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQxdBAEeWhI4x9CGXwiQ" name="RightHandSide@61bfcfda">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQxtBAEeWhI4x9CGXwiQ" name="Value(2)">
                    <result xmi:id="_lZTQx9BAEeWhI4x9CGXwiQ" name="Value(2).result" outgoing="_lZTQw9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQyNBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQydBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQytBAEeWhI4x9CGXwiQ" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQy9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@644aa986)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQzNBAEeWhI4x9CGXwiQ" target="_lZTQ0NBAEeWhI4x9CGXwiQ" source="_lZTQzdBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTQzdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@644aa986).input" incoming="_lZTQitBAEeWhI4x9CGXwiQ" outgoing="_lZTQzNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQztBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQz9BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTQ0NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@644aa986).output" incoming="_lZTQzNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ0dBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ0tBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQ09BAEeWhI4x9CGXwiQ" name="Test(Test(Case(Value(3).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQ1NBAEeWhI4x9CGXwiQ" target="_lZTQ4dBAEeWhI4x9CGXwiQ" source="_lZTQ1tBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQ1dBAEeWhI4x9CGXwiQ" name="Value(3)">
                  <result xmi:id="_lZTQ1tBAEeWhI4x9CGXwiQ" name="Value(3).result" outgoing="_lZTQ1NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ19BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ2NBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQ2dBAEeWhI4x9CGXwiQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTQ2tBAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result))">
                  <first xmi:id="_lZTQ29BAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result)).first" incoming="_lZTQi9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ3NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ3dBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTQ3tBAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ39BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ4NBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTQ4dBAEeWhI4x9CGXwiQ" name="Test(Case(Value(3).result)).second" incoming="_lZTQ1NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ4tBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ49BAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQ5NBAEeWhI4x9CGXwiQ" name="ExpressionStatement@37cc20a7">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQ5dBAEeWhI4x9CGXwiQ" target="_lZTQ5tBAEeWhI4x9CGXwiQ" source="_lZTQ6dBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTQ5tBAEeWhI4x9CGXwiQ" name="Fork(switch1)@7ab11349" incoming="_lZTQ5dBAEeWhI4x9CGXwiQ" outgoing="_lZTQjNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQ59BAEeWhI4x9CGXwiQ" name="RightHandSide@7f695c8c">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQ6NBAEeWhI4x9CGXwiQ" name="Value(3)">
                    <result xmi:id="_lZTQ6dBAEeWhI4x9CGXwiQ" name="Value(3).result" outgoing="_lZTQ5dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ6tBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ69BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTQ7NBAEeWhI4x9CGXwiQ" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQ7dBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@7ab11349)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQ7tBAEeWhI4x9CGXwiQ" target="_lZTQ8tBAEeWhI4x9CGXwiQ" source="_lZTQ79BAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTQ79BAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@7ab11349).input" incoming="_lZTQjNBAEeWhI4x9CGXwiQ" outgoing="_lZTQ7tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ8NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ8dBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTQ8tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@7ab11349).output" incoming="_lZTQ7tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ89BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ9NBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQ9dBAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZTQ9tBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTQ99BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTQ-NBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTQ-dBAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQ-tBAEeWhI4x9CGXwiQ" name="ExpressionStatement@6b4ee35a">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTQ-9BAEeWhI4x9CGXwiQ" target="_lZTQ_NBAEeWhI4x9CGXwiQ" source="_lZTQ_9BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTQ_NBAEeWhI4x9CGXwiQ" name="Fork(switch1)@7fa6087" incoming="_lZTQ-9BAEeWhI4x9CGXwiQ" outgoing="_lZTQjdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTQ_dBAEeWhI4x9CGXwiQ" name="RightHandSide@46d74328">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTQ_tBAEeWhI4x9CGXwiQ" name="Value(0)">
                    <result xmi:id="_lZTQ_9BAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTQ-9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRANBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRAdBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTRAtBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRA9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@7fa6087)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRBNBAEeWhI4x9CGXwiQ" target="_lZTRCNBAEeWhI4x9CGXwiQ" source="_lZTRBdBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTRBdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@7fa6087).input" incoming="_lZTQjdBAEeWhI4x9CGXwiQ" outgoing="_lZTRBNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRBtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRB9BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTRCNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch1)@7fa6087).output" incoming="_lZTRBNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRCdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRCtBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_lZTRC9BAEeWhI4x9CGXwiQ" body="_lZTQoNBAEeWhI4x9CGXwiQ _lZTQqdBAEeWhI4x9CGXwiQ" bodyOutput="_lZTQrtBAEeWhI4x9CGXwiQ" decider="_lZTQmtBAEeWhI4x9CGXwiQ" successorClause="_lZTRDtBAEeWhI4x9CGXwiQ" test="_lZTQj9BAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTRDNBAEeWhI4x9CGXwiQ" body="_lZTQwtBAEeWhI4x9CGXwiQ _lZTQy9BAEeWhI4x9CGXwiQ" bodyOutput="_lZTQ0NBAEeWhI4x9CGXwiQ" decider="_lZTQvNBAEeWhI4x9CGXwiQ" successorClause="_lZTRDtBAEeWhI4x9CGXwiQ" test="_lZTQsdBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTRDdBAEeWhI4x9CGXwiQ" body="_lZTQ5NBAEeWhI4x9CGXwiQ _lZTQ7dBAEeWhI4x9CGXwiQ" bodyOutput="_lZTQ8tBAEeWhI4x9CGXwiQ" decider="_lZTQ3tBAEeWhI4x9CGXwiQ" successorClause="_lZTRDtBAEeWhI4x9CGXwiQ" test="_lZTQ09BAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTRDtBAEeWhI4x9CGXwiQ" body="_lZTQ-tBAEeWhI4x9CGXwiQ _lZTRA9BAEeWhI4x9CGXwiQ" bodyOutput="_lZTRCNBAEeWhI4x9CGXwiQ" decider="_lZTQ9tBAEeWhI4x9CGXwiQ" predecessorClause="_lZTRC9BAEeWhI4x9CGXwiQ _lZTRDNBAEeWhI4x9CGXwiQ _lZTRDdBAEeWhI4x9CGXwiQ" test="_lZTQ9dBAEeWhI4x9CGXwiQ"/>
              <result xmi:id="_lZTRD9BAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@40590bfd).result(switch1)" outgoing="_lZTQg9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRENBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTREdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTREtBAEeWhI4x9CGXwiQ" name="Fork(switch1)" incoming="_lZTQg9BAEeWhI4x9CGXwiQ" outgoing="_lZSDItBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRE9BAEeWhI4x9CGXwiQ" name="Switch((SwitchStatement@40590bfd)" outgoing="_lZTQhNBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRFNBAEeWhI4x9CGXwiQ" target="_lZTRHtBAEeWhI4x9CGXwiQ" source="_lZTRFtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRFdBAEeWhI4x9CGXwiQ" name="Value(2)">
                <result xmi:id="_lZTRFtBAEeWhI4x9CGXwiQ" name="Value(2).result" outgoing="_lZTRFNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRF9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRGNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZTRGdBAEeWhI4x9CGXwiQ" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRGtBAEeWhI4x9CGXwiQ" name="Call(+)">
                <argument xmi:id="_lZTRG9BAEeWhI4x9CGXwiQ" name="Call(+).argument(x)" incoming="_lZSDEtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRHNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRHdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZTRHtBAEeWhI4x9CGXwiQ" name="Call(+).argument(y)" incoming="_lZTRFNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRH9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRINBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZTRIdBAEeWhI4x9CGXwiQ" name="Call(+).result(result)" outgoing="_lZTQhdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRItBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRI9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRJNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@179fb4d" incoming="_lZSDFNBAEeWhI4x9CGXwiQ" outgoing="_lZSDGNBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRJdBAEeWhI4x9CGXwiQ" target="_lZTRJtBAEeWhI4x9CGXwiQ" source="_lZTRKdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTRJtBAEeWhI4x9CGXwiQ" name="Fork(switch2)@11c086b" incoming="_lZTRJdBAEeWhI4x9CGXwiQ" outgoing="_lZSDFdBAEeWhI4x9CGXwiQ _lZSDFtBAEeWhI4x9CGXwiQ _lZSDF9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRJ9BAEeWhI4x9CGXwiQ" name="RightHandSide@576ca95e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRKNBAEeWhI4x9CGXwiQ" name="Value(0)">
                <result xmi:id="_lZTRKdBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTRJdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRKtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRK9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZTRLNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRLdBAEeWhI4x9CGXwiQ" name="SwitchStatement@23d1e2a5" incoming="_lZSDGNBAEeWhI4x9CGXwiQ" outgoing="_lZSDGtBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRLtBAEeWhI4x9CGXwiQ" target="_lZTRstBAEeWhI4x9CGXwiQ" source="_lZTRr9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRL9BAEeWhI4x9CGXwiQ" target="_lZTRMdBAEeWhI4x9CGXwiQ" source="_lZTRs9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRMNBAEeWhI4x9CGXwiQ" target="_lZTRNdBAEeWhI4x9CGXwiQ" source="_lZTRwdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_lZTRMdBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@23d1e2a5)" incoming="_lZTRL9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRMtBAEeWhI4x9CGXwiQ" target="_lZTRa9BAEeWhI4x9CGXwiQ" source="_lZTRNdBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRM9BAEeWhI4x9CGXwiQ" target="_lZTRT9BAEeWhI4x9CGXwiQ" source="_lZTRjtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRNNBAEeWhI4x9CGXwiQ" target="_lZTRmtBAEeWhI4x9CGXwiQ" source="_lZTRkdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZTRNdBAEeWhI4x9CGXwiQ" name="Fork(Call(Div).result(result))" incoming="_lZTRMNBAEeWhI4x9CGXwiQ" outgoing="_lZTRMtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRNtBAEeWhI4x9CGXwiQ" name="Test(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result()))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRN9BAEeWhI4x9CGXwiQ" target="_lZTRW9BAEeWhI4x9CGXwiQ" source="_lZTRU9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRONBAEeWhI4x9CGXwiQ" target="_lZTRYtBAEeWhI4x9CGXwiQ" source="_lZTRa9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTROdBAEeWhI4x9CGXwiQ" target="_lZTRbdBAEeWhI4x9CGXwiQ" source="_lZTRa9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTROtBAEeWhI4x9CGXwiQ" target="_lZTRc9BAEeWhI4x9CGXwiQ" source="_lZTRXtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRO9BAEeWhI4x9CGXwiQ" target="_lZTRaNBAEeWhI4x9CGXwiQ" source="_lZTRc9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRPNBAEeWhI4x9CGXwiQ" target="_lZTRddBAEeWhI4x9CGXwiQ" source="_lZTRc9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRPdBAEeWhI4x9CGXwiQ" target="_lZTRfNBAEeWhI4x9CGXwiQ" source="_lZTRcNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRPtBAEeWhI4x9CGXwiQ" target="_lZTRfdBAEeWhI4x9CGXwiQ" source="_lZTReNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRP9BAEeWhI4x9CGXwiQ" target="_lZTRf9BAEeWhI4x9CGXwiQ" source="_lZTRfNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRQNBAEeWhI4x9CGXwiQ" target="_lZTRhtBAEeWhI4x9CGXwiQ" source="_lZTRfdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRQdBAEeWhI4x9CGXwiQ" target="_lZTRjNBAEeWhI4x9CGXwiQ" source="_lZTRfdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRQtBAEeWhI4x9CGXwiQ" target="_lZTRYdBAEeWhI4x9CGXwiQ" source="_lZTRjNBAEeWhI4x9CGXwiQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTRQ9BAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRRNBAEeWhI4x9CGXwiQ" target="_lZTRftBAEeWhI4x9CGXwiQ" source="_lZTRjNBAEeWhI4x9CGXwiQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTRRdBAEeWhI4x9CGXwiQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRRtBAEeWhI4x9CGXwiQ" target="_lZTRjdBAEeWhI4x9CGXwiQ" source="_lZTRe9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRR9BAEeWhI4x9CGXwiQ" target="_lZTRjdBAEeWhI4x9CGXwiQ" source="_lZTRfNBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRSNBAEeWhI4x9CGXwiQ" target="_lZTRjNBAEeWhI4x9CGXwiQ" source="_lZTRjdBAEeWhI4x9CGXwiQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTRSdBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRStBAEeWhI4x9CGXwiQ" target="_lZTRhdBAEeWhI4x9CGXwiQ" source="_lZTRjdBAEeWhI4x9CGXwiQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTRS9BAEeWhI4x9CGXwiQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRTNBAEeWhI4x9CGXwiQ" target="_lZTRjtBAEeWhI4x9CGXwiQ" source="_lZTRZdBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRTdBAEeWhI4x9CGXwiQ" target="_lZTRjtBAEeWhI4x9CGXwiQ" source="_lZTRgtBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRTtBAEeWhI4x9CGXwiQ" target="_lZTRjtBAEeWhI4x9CGXwiQ" source="_lZTRidBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZTRT9BAEeWhI4x9CGXwiQ" name="Decider(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result()))" incoming="_lZTRM9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRUNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRUdBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRUtBAEeWhI4x9CGXwiQ" name="Value(0)">
                  <result xmi:id="_lZTRU9BAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTRN9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRVNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRVdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTRVtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRV9BAEeWhI4x9CGXwiQ" name="Call(Div)">
                  <argument xmi:id="_lZTRWNBAEeWhI4x9CGXwiQ" name="Call(Div).argument(x)" incoming="_lZSDFtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRWdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRWtBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <argument xmi:id="_lZTRW9BAEeWhI4x9CGXwiQ" name="Call(Div).argument(y)" incoming="_lZTRN9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRXNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRXdBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTRXtBAEeWhI4x9CGXwiQ" name="Call(Div).result(result)" outgoing="_lZTROtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRX9BAEeWhI4x9CGXwiQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRYNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTRYdBAEeWhI4x9CGXwiQ" name="Test(Case(Call(Div).result(result)))" incoming="_lZTRQtBAEeWhI4x9CGXwiQ">
                  <first xmi:id="_lZTRYtBAEeWhI4x9CGXwiQ" name="Test(Case(Call(Div).result(result))).first" incoming="_lZTRONBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRY9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRZNBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTRZdBAEeWhI4x9CGXwiQ" name="Test(Case(Call(Div).result(result))).result" outgoing="_lZTRTNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRZtBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRZ9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTRaNBAEeWhI4x9CGXwiQ" name="Test(Case(Call(Div).result(result))).second" incoming="_lZTRO9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRadBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRatBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTRa9BAEeWhI4x9CGXwiQ" name="Fork(Fork(Call(Div).result(result)))" incoming="_lZTRMtBAEeWhI4x9CGXwiQ" outgoing="_lZTRONBAEeWhI4x9CGXwiQ _lZTROdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRbNBAEeWhI4x9CGXwiQ" name="Call(NotEmpty)">
                  <argument xmi:id="_lZTRbdBAEeWhI4x9CGXwiQ" name="Call(NotEmpty).argument(seq)" incoming="_lZTROdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRbtBAEeWhI4x9CGXwiQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRb9BAEeWhI4x9CGXwiQ" value="*"/>
                  </argument>
                  <result xmi:id="_lZTRcNBAEeWhI4x9CGXwiQ" name="Call(NotEmpty).result()" outgoing="_lZTRPdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRcdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRctBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTRc9BAEeWhI4x9CGXwiQ" name="Fork(Call(Div).result(result))" incoming="_lZTROtBAEeWhI4x9CGXwiQ" outgoing="_lZTRO9BAEeWhI4x9CGXwiQ _lZTRPNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRdNBAEeWhI4x9CGXwiQ" name="Call(NotEmpty)">
                  <argument xmi:id="_lZTRddBAEeWhI4x9CGXwiQ" name="Call(NotEmpty).argument(seq)" incoming="_lZTRPNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRdtBAEeWhI4x9CGXwiQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRd9BAEeWhI4x9CGXwiQ" value="*"/>
                  </argument>
                  <result xmi:id="_lZTReNBAEeWhI4x9CGXwiQ" name="Call(NotEmpty).result()" outgoing="_lZTRPtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRedBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRetBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_lZTRe9BAEeWhI4x9CGXwiQ" name="Initial(Test(Case(Call(Div).result(result))))" outgoing="_lZTRRtBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTRfNBAEeWhI4x9CGXwiQ" name="Fork(Call(NotEmpty).result())" incoming="_lZTRPdBAEeWhI4x9CGXwiQ" outgoing="_lZTRP9BAEeWhI4x9CGXwiQ _lZTRR9BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTRfdBAEeWhI4x9CGXwiQ" name="Fork(Call(NotEmpty).result())" incoming="_lZTRPtBAEeWhI4x9CGXwiQ" outgoing="_lZTRQNBAEeWhI4x9CGXwiQ _lZTRQdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRftBAEeWhI4x9CGXwiQ" name="Call(Not)" incoming="_lZTRRNBAEeWhI4x9CGXwiQ">
                  <argument xmi:id="_lZTRf9BAEeWhI4x9CGXwiQ" name="Call(Not).argument(x)" incoming="_lZTRP9BAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRgNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRgdBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTRgtBAEeWhI4x9CGXwiQ" name="Call(Not).result(result)" outgoing="_lZTRTdBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRg9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRhNBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRhdBAEeWhI4x9CGXwiQ" name="Call(Not)" incoming="_lZTRStBAEeWhI4x9CGXwiQ">
                  <argument xmi:id="_lZTRhtBAEeWhI4x9CGXwiQ" name="Call(Not).argument(x)" incoming="_lZTRQNBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRh9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRiNBAEeWhI4x9CGXwiQ" value="1"/>
                  </argument>
                  <result xmi:id="_lZTRidBAEeWhI4x9CGXwiQ" name="Call(Not).result(result)" outgoing="_lZTRTtBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRitBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRi9BAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_lZTRjNBAEeWhI4x9CGXwiQ" name="Decision(Call(NotEmpty).result())" incoming="_lZTRQdBAEeWhI4x9CGXwiQ _lZTRSNBAEeWhI4x9CGXwiQ" outgoing="_lZTRQtBAEeWhI4x9CGXwiQ _lZTRRNBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZTRQdBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_lZTRjdBAEeWhI4x9CGXwiQ" name="Decision(Call(NotEmpty).result())" incoming="_lZTRRtBAEeWhI4x9CGXwiQ _lZTRR9BAEeWhI4x9CGXwiQ" outgoing="_lZTRSNBAEeWhI4x9CGXwiQ _lZTRStBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZTRR9BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_lZTRjtBAEeWhI4x9CGXwiQ" name="Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_lZTRTNBAEeWhI4x9CGXwiQ _lZTRTdBAEeWhI4x9CGXwiQ _lZTRTtBAEeWhI4x9CGXwiQ" outgoing="_lZTRM9BAEeWhI4x9CGXwiQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRj9BAEeWhI4x9CGXwiQ" name="ExpressionStatement@2b9f9d86">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRkNBAEeWhI4x9CGXwiQ" target="_lZTRkdBAEeWhI4x9CGXwiQ" source="_lZTRlNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTRkdBAEeWhI4x9CGXwiQ" name="Fork(switch2)@168c8560" incoming="_lZTRkNBAEeWhI4x9CGXwiQ" outgoing="_lZTRNNBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRktBAEeWhI4x9CGXwiQ" name="RightHandSide@63886d30">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRk9BAEeWhI4x9CGXwiQ" name="Value(1)">
                    <result xmi:id="_lZTRlNBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZTRkNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRldBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRltBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTRl9BAEeWhI4x9CGXwiQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRmNBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch2)@168c8560)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRmdBAEeWhI4x9CGXwiQ" target="_lZTRndBAEeWhI4x9CGXwiQ" source="_lZTRmtBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTRmtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch2)@168c8560).input" incoming="_lZTRNNBAEeWhI4x9CGXwiQ" outgoing="_lZTRmdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRm9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRnNBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTRndBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch2)@168c8560).output" incoming="_lZTRmdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRntBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRn9BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRoNBAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZTRodBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRotBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRo9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTRpNBAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRpdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch2)@11c086b)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRptBAEeWhI4x9CGXwiQ" target="_lZTRqtBAEeWhI4x9CGXwiQ" source="_lZTRp9BAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTRp9BAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch2)@11c086b).input" incoming="_lZSDF9BAEeWhI4x9CGXwiQ" outgoing="_lZTRptBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRqNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRqdBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTRqtBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch2)@11c086b).output" incoming="_lZTRptBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRq9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRrNBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_lZTRrdBAEeWhI4x9CGXwiQ" body="_lZTRj9BAEeWhI4x9CGXwiQ _lZTRmNBAEeWhI4x9CGXwiQ" bodyOutput="_lZTRndBAEeWhI4x9CGXwiQ" decider="_lZTRT9BAEeWhI4x9CGXwiQ" successorClause="_lZTRrtBAEeWhI4x9CGXwiQ" test="_lZTRNtBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTRrtBAEeWhI4x9CGXwiQ" body="_lZTRpdBAEeWhI4x9CGXwiQ" bodyOutput="_lZTRqtBAEeWhI4x9CGXwiQ" decider="_lZTRodBAEeWhI4x9CGXwiQ" predecessorClause="_lZTRrdBAEeWhI4x9CGXwiQ" test="_lZTRoNBAEeWhI4x9CGXwiQ"/>
              <result xmi:id="_lZTRr9BAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@23d1e2a5).result(switch2)" outgoing="_lZTRLtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRsNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRsdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTRstBAEeWhI4x9CGXwiQ" name="Fork(switch2)" incoming="_lZTRLtBAEeWhI4x9CGXwiQ" outgoing="_lZSDGdBAEeWhI4x9CGXwiQ _lZSDI9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRs9BAEeWhI4x9CGXwiQ" name="Switch((SwitchStatement@23d1e2a5)" outgoing="_lZTRL9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRtNBAEeWhI4x9CGXwiQ" target="_lZTRvtBAEeWhI4x9CGXwiQ" source="_lZTRttBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRtdBAEeWhI4x9CGXwiQ" name="Value(0)">
                <result xmi:id="_lZTRttBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTRtNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRt9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRuNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZTRudBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTRutBAEeWhI4x9CGXwiQ" name="Call(Div)">
                <argument xmi:id="_lZTRu9BAEeWhI4x9CGXwiQ" name="Call(Div).argument(x)" incoming="_lZSDFdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRvNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRvdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZTRvtBAEeWhI4x9CGXwiQ" name="Call(Div).argument(y)" incoming="_lZTRtNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRv9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRwNBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZTRwdBAEeWhI4x9CGXwiQ" name="Call(Div).result(result)" outgoing="_lZTRMNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTRwtBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTRw9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRxNBAEeWhI4x9CGXwiQ" name="SwitchStatement@e13ccbb" incoming="_lZSDGtBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRxdBAEeWhI4x9CGXwiQ" target="_lZTSCdBAEeWhI4x9CGXwiQ" source="_lZTSBtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZTRxtBAEeWhI4x9CGXwiQ" target="_lZTRx9BAEeWhI4x9CGXwiQ" source="_lZTSCtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_lZTRx9BAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@e13ccbb)" incoming="_lZTRxtBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRyNBAEeWhI4x9CGXwiQ" target="_lZTR1NBAEeWhI4x9CGXwiQ" source="_lZTRy9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRydBAEeWhI4x9CGXwiQ" target="_lZTR6NBAEeWhI4x9CGXwiQ" source="_lZTR39BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRytBAEeWhI4x9CGXwiQ" target="_lZTR_tBAEeWhI4x9CGXwiQ" source="_lZTR9dBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_lZTRy9BAEeWhI4x9CGXwiQ" name="Fork(Fork(switch2))" incoming="_lZSDGdBAEeWhI4x9CGXwiQ" outgoing="_lZTRyNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTRzNBAEeWhI4x9CGXwiQ" name="Test(Test(Case(Value(0).result)).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTRzdBAEeWhI4x9CGXwiQ" target="_lZTR2tBAEeWhI4x9CGXwiQ" source="_lZTRz9BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTRztBAEeWhI4x9CGXwiQ" name="Value(0)">
                  <result xmi:id="_lZTRz9BAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTRzdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR0NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR0dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_lZTR0tBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTR09BAEeWhI4x9CGXwiQ" name="Test(Case(Value(0).result))">
                  <first xmi:id="_lZTR1NBAEeWhI4x9CGXwiQ" name="Test(Case(Value(0).result)).first" incoming="_lZTRyNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR1dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR1tBAEeWhI4x9CGXwiQ" value="1"/>
                  </first>
                  <result xmi:id="_lZTR19BAEeWhI4x9CGXwiQ" name="Test(Case(Value(0).result)).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR2NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR2dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <second xmi:id="_lZTR2tBAEeWhI4x9CGXwiQ" name="Test(Case(Value(0).result)).second" incoming="_lZTRzdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR29BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR3NBAEeWhI4x9CGXwiQ" value="1"/>
                  </second>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTR3dBAEeWhI4x9CGXwiQ" name="ExpressionStatement@72fac0da">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTR3tBAEeWhI4x9CGXwiQ" target="_lZTR39BAEeWhI4x9CGXwiQ" source="_lZTR4tBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTR39BAEeWhI4x9CGXwiQ" name="Fork(switch3)@322da3fd" incoming="_lZTR3tBAEeWhI4x9CGXwiQ" outgoing="_lZTRydBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTR4NBAEeWhI4x9CGXwiQ" name="RightHandSide@526950c7">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTR4dBAEeWhI4x9CGXwiQ" name="Value(0)">
                    <result xmi:id="_lZTR4tBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTR3tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR49BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR5NBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTR5dBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTR5tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch3)@322da3fd)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTR59BAEeWhI4x9CGXwiQ" target="_lZTR69BAEeWhI4x9CGXwiQ" source="_lZTR6NBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTR6NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch3)@322da3fd).input" incoming="_lZTRydBAEeWhI4x9CGXwiQ" outgoing="_lZTR59BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR6dBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR6tBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTR69BAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch3)@322da3fd).output" incoming="_lZTR59BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR7NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR7dBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTR7tBAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZTR79BAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR8NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR8dBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTR8tBAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTR89BAEeWhI4x9CGXwiQ" name="ExpressionStatement@d1f7bfa">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTR9NBAEeWhI4x9CGXwiQ" target="_lZTR9dBAEeWhI4x9CGXwiQ" source="_lZTR-NBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_lZTR9dBAEeWhI4x9CGXwiQ" name="Fork(switch3)@55747dae" incoming="_lZTR9NBAEeWhI4x9CGXwiQ" outgoing="_lZTRytBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTR9tBAEeWhI4x9CGXwiQ" name="RightHandSide@52e75656">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTR99BAEeWhI4x9CGXwiQ" name="Value(1)">
                    <result xmi:id="_lZTR-NBAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZTR9NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR-dBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTR-tBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_lZTR-9BAEeWhI4x9CGXwiQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTR_NBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch3)@55747dae)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTR_dBAEeWhI4x9CGXwiQ" target="_lZTSAdBAEeWhI4x9CGXwiQ" source="_lZTR_tBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZTR_tBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch3)@55747dae).input" incoming="_lZTRytBAEeWhI4x9CGXwiQ" outgoing="_lZTR_dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTR_9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSANBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_lZTSAdBAEeWhI4x9CGXwiQ" name="Passthru(Fork(switch3)@55747dae).output" incoming="_lZTR_dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSAtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSA9BAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_lZTSBNBAEeWhI4x9CGXwiQ" body="_lZTR3dBAEeWhI4x9CGXwiQ _lZTR5tBAEeWhI4x9CGXwiQ" bodyOutput="_lZTR69BAEeWhI4x9CGXwiQ" decider="_lZTR19BAEeWhI4x9CGXwiQ" successorClause="_lZTSBdBAEeWhI4x9CGXwiQ" test="_lZTRzNBAEeWhI4x9CGXwiQ"/>
              <clause xmi:id="_lZTSBdBAEeWhI4x9CGXwiQ" body="_lZTR89BAEeWhI4x9CGXwiQ _lZTR_NBAEeWhI4x9CGXwiQ" bodyOutput="_lZTSAdBAEeWhI4x9CGXwiQ" decider="_lZTR79BAEeWhI4x9CGXwiQ" predecessorClause="_lZTSBNBAEeWhI4x9CGXwiQ" test="_lZTR7tBAEeWhI4x9CGXwiQ"/>
              <result xmi:id="_lZTSBtBAEeWhI4x9CGXwiQ" name="Conditional(SwitchStatement@e13ccbb).result(switch3)" outgoing="_lZTRxdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSB9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSCNBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTSCdBAEeWhI4x9CGXwiQ" name="Fork(switch3)" incoming="_lZTRxdBAEeWhI4x9CGXwiQ" outgoing="_lZSDJNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTSCtBAEeWhI4x9CGXwiQ" name="Switch((SwitchStatement@e13ccbb)" outgoing="_lZTRxtBAEeWhI4x9CGXwiQ"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC09BAEeWhI4x9CGXwiQ" name="Output(reading1)" incoming="_lZSCydBAEeWhI4x9CGXwiQ" parameter="_lZSCq9BAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC1NBAEeWhI4x9CGXwiQ" name="Output(condition1)" incoming="_lZSCytBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" parameter="_lZSCrtBAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC1dBAEeWhI4x9CGXwiQ" name="Output(condition2)" incoming="_lZSCy9BAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" parameter="_lZSCsdBAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC1tBAEeWhI4x9CGXwiQ" name="Output(condition3)" incoming="_lZSCzNBAEeWhI4x9CGXwiQ" type="_lZT2f9BAEeWhI4x9CGXwiQ" parameter="_lZSCtNBAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC19BAEeWhI4x9CGXwiQ" name="Output(year)" incoming="_lZSCzdBAEeWhI4x9CGXwiQ" parameter="_lZSCt9BAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC2NBAEeWhI4x9CGXwiQ" name="Output(month)" incoming="_lZSCztBAEeWhI4x9CGXwiQ" parameter="_lZSCutBAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC2dBAEeWhI4x9CGXwiQ" name="Output(numDays)" incoming="_lZSCz9BAEeWhI4x9CGXwiQ" parameter="_lZSCvdBAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC2tBAEeWhI4x9CGXwiQ" name="Output(switch1)" incoming="_lZSC0NBAEeWhI4x9CGXwiQ" parameter="_lZSCwNBAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC29BAEeWhI4x9CGXwiQ" name="Output(switch2)" incoming="_lZSC0dBAEeWhI4x9CGXwiQ" parameter="_lZSCw9BAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZSC3NBAEeWhI4x9CGXwiQ" name="Output(switch3)" incoming="_lZSC0tBAEeWhI4x9CGXwiQ" parameter="_lZSCxtBAEeWhI4x9CGXwiQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZTSC9BAEeWhI4x9CGXwiQ" name="destroy$method$1" specification="_lZTSgNBAEeWhI4x9CGXwiQ" node="_lZTSDNBAEeWhI4x9CGXwiQ" group="_lZTSDNBAEeWhI4x9CGXwiQ">
        <structuredNode xmi:id="_lZTSDNBAEeWhI4x9CGXwiQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZTSDdBAEeWhI4x9CGXwiQ" name="Statements_Conditional$initialization$1" specification="_lZTSVdBAEeWhI4x9CGXwiQ" node="_lZTSDtBAEeWhI4x9CGXwiQ" group="_lZTSDtBAEeWhI4x9CGXwiQ">
        <structuredNode xmi:id="_lZTSDtBAEeWhI4x9CGXwiQ" name="Body(Statements_Conditional$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSD9BAEeWhI4x9CGXwiQ" target="_lZTSHtBAEeWhI4x9CGXwiQ" source="_lZTSG9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSENBAEeWhI4x9CGXwiQ" target="_lZTSItBAEeWhI4x9CGXwiQ" source="_lZTSHtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSEdBAEeWhI4x9CGXwiQ" target="_lZTSLdBAEeWhI4x9CGXwiQ" source="_lZTSHtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSEtBAEeWhI4x9CGXwiQ" target="_lZTSN9BAEeWhI4x9CGXwiQ" source="_lZTSHtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSE9BAEeWhI4x9CGXwiQ" target="_lZTSPtBAEeWhI4x9CGXwiQ" source="_lZTSOtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSFNBAEeWhI4x9CGXwiQ" target="_lZTSStBAEeWhI4x9CGXwiQ" source="_lZTSQdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSFdBAEeWhI4x9CGXwiQ" target="_lZTSUNBAEeWhI4x9CGXwiQ" source="_lZTSRdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZTSFtBAEeWhI4x9CGXwiQ" target="_lZTSVNBAEeWhI4x9CGXwiQ" source="_lZTSU9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSF9BAEeWhI4x9CGXwiQ" target="_lZTSVNBAEeWhI4x9CGXwiQ" source="_lZTSTdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZTSGNBAEeWhI4x9CGXwiQ" target="_lZTSH9BAEeWhI4x9CGXwiQ" source="_lZTSVNBAEeWhI4x9CGXwiQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZTSGdBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_lZTSGtBAEeWhI4x9CGXwiQ" name="ReadSelf">
            <result xmi:id="_lZTSG9BAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZTSD9BAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSHNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSHdBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZTSHtBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZTSD9BAEeWhI4x9CGXwiQ" outgoing="_lZTSENBAEeWhI4x9CGXwiQ _lZTSEdBAEeWhI4x9CGXwiQ _lZTSEtBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTSH9BAEeWhI4x9CGXwiQ" name="Initialization" incoming="_lZTSGNBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZTSINBAEeWhI4x9CGXwiQ" target="_lZTSJdBAEeWhI4x9CGXwiQ" source="_lZTSIdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_lZTSIdBAEeWhI4x9CGXwiQ" name="Call(Test$initialization$1)" outgoing="_lZTSINBAEeWhI4x9CGXwiQ" operation="_lZT3c9BAEeWhI4x9CGXwiQ">
              <target xmi:id="_lZTSItBAEeWhI4x9CGXwiQ" name="Call(Test$initialization$1).target" incoming="_lZTSENBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSI9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSJNBAEeWhI4x9CGXwiQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZTSJdBAEeWhI4x9CGXwiQ" name="Set(initializationFlag)" incoming="_lZTSINBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSJtBAEeWhI4x9CGXwiQ" target="_lZTSM9BAEeWhI4x9CGXwiQ" source="_lZTSKNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTSJ9BAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZTSKNBAEeWhI4x9CGXwiQ" name="Value(true).result" outgoing="_lZTSJtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSKdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSKtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZTSK9BAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_lZTSLNBAEeWhI4x9CGXwiQ" name="Write(Statements_Conditional$initializationFlag$1)" structuralFeature="_lZSA2NBAEeWhI4x9CGXwiQ" isReplaceAll="true">
                <object xmi:id="_lZTSLdBAEeWhI4x9CGXwiQ" name="Write(Statements_Conditional$initializationFlag$1).object" incoming="_lZTSEdBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSLtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSL9BAEeWhI4x9CGXwiQ" value="1"/>
                </object>
                <result xmi:id="_lZTSMNBAEeWhI4x9CGXwiQ" name="Write(Statements_Conditional$initializationFlag$1).result" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSMdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSMtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:id="_lZTSM9BAEeWhI4x9CGXwiQ" name="Write(Statements_Conditional$initializationFlag$1).value" incoming="_lZTSJtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSNNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSNdBAEeWhI4x9CGXwiQ" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZTSNtBAEeWhI4x9CGXwiQ" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_lZSA2NBAEeWhI4x9CGXwiQ">
            <object xmi:id="_lZTSN9BAEeWhI4x9CGXwiQ" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_lZTSEtBAEeWhI4x9CGXwiQ" type="_lZSA0dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSONBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSOdBAEeWhI4x9CGXwiQ" value="1"/>
            </object>
            <result xmi:id="_lZTSOtBAEeWhI4x9CGXwiQ" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_lZTSE9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSO9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSPNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZTSPdBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
            <argument xmi:id="_lZTSPtBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZTSE9BAEeWhI4x9CGXwiQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSP9BAEeWhI4x9CGXwiQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSQNBAEeWhI4x9CGXwiQ" value="*"/>
            </argument>
            <result xmi:id="_lZTSQdBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZTSFNBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSQtBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSQ9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZTSRNBAEeWhI4x9CGXwiQ" name="Value(0)">
            <result xmi:id="_lZTSRdBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZTSFdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSRtBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSR9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_lZTSSNBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_lZTSSdBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
            <first xmi:id="_lZTSStBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZTSFNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSS9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSTNBAEeWhI4x9CGXwiQ" value="1"/>
            </first>
            <result xmi:id="_lZTSTdBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZTSF9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSTtBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTST9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <second xmi:id="_lZTSUNBAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZTSFdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSUdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSUtBAEeWhI4x9CGXwiQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_lZTSU9BAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZTSFtBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_lZTSVNBAEeWhI4x9CGXwiQ" name="Decision(Test(Statements_Conditional$initializationFlag$1))" incoming="_lZTSFtBAEeWhI4x9CGXwiQ _lZTSF9BAEeWhI4x9CGXwiQ" outgoing="_lZTSGNBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZTSF9BAEeWhI4x9CGXwiQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_lZTSVdBAEeWhI4x9CGXwiQ" name="Statements_Conditional$initialization$1" visibility="protected" method="_lZTSDdBAEeWhI4x9CGXwiQ"/>
      <ownedOperation xmi:id="_lZTSVtBAEeWhI4x9CGXwiQ" name="Statements_Conditional" visibility="public" method="_lZSA29BAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZTSV9BAEeWhI4x9CGXwiQ" name="" visibility="package" type="_lZSA0dBAEeWhI4x9CGXwiQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSWNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSWdBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lZTSWtBAEeWhI4x9CGXwiQ" name="run" visibility="public" method="_lZSBAdBAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZTSW9BAEeWhI4x9CGXwiQ" name="tester" visibility="package" type="_lZT3fdBAEeWhI4x9CGXwiQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSXNBAEeWhI4x9CGXwiQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSXdBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSXtBAEeWhI4x9CGXwiQ" name="" visibility="package" type="_lZSA0dBAEeWhI4x9CGXwiQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSX9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSYNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lZTSYdBAEeWhI4x9CGXwiQ" name="test" visibility="package" method="_lZSCqtBAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZTSYtBAEeWhI4x9CGXwiQ" name="reading1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSY9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSZNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSZdBAEeWhI4x9CGXwiQ" name="condition1" visibility="package" type="_lZT2f9BAEeWhI4x9CGXwiQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSZtBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSZ9BAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSaNBAEeWhI4x9CGXwiQ" name="condition2" visibility="package" type="_lZT2f9BAEeWhI4x9CGXwiQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSadBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSatBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSa9BAEeWhI4x9CGXwiQ" name="condition3" visibility="package" type="_lZT2f9BAEeWhI4x9CGXwiQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSbNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSbdBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSbtBAEeWhI4x9CGXwiQ" name="year" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSb9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTScNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTScdBAEeWhI4x9CGXwiQ" name="month" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSctBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSc9BAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSdNBAEeWhI4x9CGXwiQ" name="numDays" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSddBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSdtBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSd9BAEeWhI4x9CGXwiQ" name="switch1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSeNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSedBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSetBAEeWhI4x9CGXwiQ" name="switch2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSe9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSfNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZTSfdBAEeWhI4x9CGXwiQ" name="switch3" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSftBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSf9BAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lZTSgNBAEeWhI4x9CGXwiQ" name="destroy" visibility="public" method="_lZTSC9BAEeWhI4x9CGXwiQ" redefinedOperation="_lZT3dNBAEeWhI4x9CGXwiQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_lZTSgdBAEeWhI4x9CGXwiQ" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_lZTSgtBAEeWhI4x9CGXwiQ" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSg9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTShNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZTShdBAEeWhI4x9CGXwiQ" name="raiseAlarm$method$1" specification="_lZT2ddBAEeWhI4x9CGXwiQ" node="_lZTSjNBAEeWhI4x9CGXwiQ _lZTSjtBAEeWhI4x9CGXwiQ _lZTSlNBAEeWhI4x9CGXwiQ _lZTSjdBAEeWhI4x9CGXwiQ" group="_lZTSjtBAEeWhI4x9CGXwiQ _lZTSlNBAEeWhI4x9CGXwiQ">
          <ownedParameter xmi:id="_lZTShtBAEeWhI4x9CGXwiQ" name="sensorId">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSh9BAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSiNBAEeWhI4x9CGXwiQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSidBAEeWhI4x9CGXwiQ" target="_lZTSkNBAEeWhI4x9CGXwiQ" source="_lZTSjNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZTSitBAEeWhI4x9CGXwiQ" target="_lZTSjdBAEeWhI4x9CGXwiQ" source="_lZTSjtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZTSi9BAEeWhI4x9CGXwiQ" target="_lZTSlNBAEeWhI4x9CGXwiQ" source="_lZTSjdBAEeWhI4x9CGXwiQ"/>
          <structuredNode xmi:id="_lZTSjtBAEeWhI4x9CGXwiQ" name="Node(Input(sensorId))" outgoing="_lZTSitBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSj9BAEeWhI4x9CGXwiQ" target="_lZTSk9BAEeWhI4x9CGXwiQ" source="_lZTSkNBAEeWhI4x9CGXwiQ"/>
            <structuredNodeInput xmi:id="_lZTSkNBAEeWhI4x9CGXwiQ" name="Input(sensorId)" incoming="_lZTSidBAEeWhI4x9CGXwiQ" outgoing="_lZTSj9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSkdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSktBAEeWhI4x9CGXwiQ" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_lZTSk9BAEeWhI4x9CGXwiQ" name="Fork(sensorId)" incoming="_lZTSj9BAEeWhI4x9CGXwiQ"/>
          </structuredNode>
          <structuredNode xmi:id="_lZTSlNBAEeWhI4x9CGXwiQ" name="Body(raiseAlarm$method$1)" incoming="_lZTSi9BAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZTSjNBAEeWhI4x9CGXwiQ" name="Input(sensorId)" outgoing="_lZTSidBAEeWhI4x9CGXwiQ" parameter="_lZTShtBAEeWhI4x9CGXwiQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </node>
          <node xmi:type="uml:JoinNode" xmi:id="_lZTSjdBAEeWhI4x9CGXwiQ" name="Join(Input))" incoming="_lZTSitBAEeWhI4x9CGXwiQ" outgoing="_lZTSi9BAEeWhI4x9CGXwiQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZTSldBAEeWhI4x9CGXwiQ" name="cleanUp$method$1" specification="_lZT2edBAEeWhI4x9CGXwiQ" node="_lZTSltBAEeWhI4x9CGXwiQ" group="_lZTSltBAEeWhI4x9CGXwiQ">
          <structuredNode xmi:id="_lZTSltBAEeWhI4x9CGXwiQ" name="Body(cleanUp$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZTSl9BAEeWhI4x9CGXwiQ" name="Monitor$method$1" specification="_lZT2etBAEeWhI4x9CGXwiQ" node="_lZTSnNBAEeWhI4x9CGXwiQ _lZTSndBAEeWhI4x9CGXwiQ" group="_lZTSndBAEeWhI4x9CGXwiQ">
          <ownedParameter xmi:id="_lZTSmNBAEeWhI4x9CGXwiQ" name="" type="_lZTSgdBAEeWhI4x9CGXwiQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZTSmdBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZTSmtBAEeWhI4x9CGXwiQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSm9BAEeWhI4x9CGXwiQ" target="_lZTSnNBAEeWhI4x9CGXwiQ" source="_lZT2DNBAEeWhI4x9CGXwiQ"/>
          <structuredNode xmi:id="_lZTSndBAEeWhI4x9CGXwiQ" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSntBAEeWhI4x9CGXwiQ" target="_lZT2DNBAEeWhI4x9CGXwiQ" source="_lZT2CdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSn9BAEeWhI4x9CGXwiQ" target="_lZT2DtBAEeWhI4x9CGXwiQ" source="_lZT2DNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZTSoNBAEeWhI4x9CGXwiQ" target="_lZT2B9BAEeWhI4x9CGXwiQ" source="_lZT2DdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZTSodBAEeWhI4x9CGXwiQ" target="_lZT2EtBAEeWhI4x9CGXwiQ" source="_lZT2DNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2ANBAEeWhI4x9CGXwiQ" target="_lZT2GdBAEeWhI4x9CGXwiQ" source="_lZT2FdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2AdBAEeWhI4x9CGXwiQ" target="_lZT2JdBAEeWhI4x9CGXwiQ" source="_lZT2HNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2AtBAEeWhI4x9CGXwiQ" target="_lZT2K9BAEeWhI4x9CGXwiQ" source="_lZT2INBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2A9BAEeWhI4x9CGXwiQ" target="_lZT2L9BAEeWhI4x9CGXwiQ" source="_lZT2LtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2BNBAEeWhI4x9CGXwiQ" target="_lZT2L9BAEeWhI4x9CGXwiQ" source="_lZT2KNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2BdBAEeWhI4x9CGXwiQ" target="_lZT2DdBAEeWhI4x9CGXwiQ" source="_lZT2L9BAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT2BtBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2B9BAEeWhI4x9CGXwiQ" name="Body" incoming="_lZTSoNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT2CNBAEeWhI4x9CGXwiQ" name="ReadSelf">
              <result xmi:id="_lZT2CdBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZTSntBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2CtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2C9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT2DNBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZTSntBAEeWhI4x9CGXwiQ" outgoing="_lZTSm9BAEeWhI4x9CGXwiQ _lZTSn9BAEeWhI4x9CGXwiQ _lZTSodBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_lZT2DdBAEeWhI4x9CGXwiQ" name="Call(Monitor$initialization$1)" incoming="_lZT2BdBAEeWhI4x9CGXwiQ" outgoing="_lZTSoNBAEeWhI4x9CGXwiQ" operation="_lZT2dNBAEeWhI4x9CGXwiQ">
              <target xmi:id="_lZT2DtBAEeWhI4x9CGXwiQ" name="Call(Monitor$initialization$1).target" incoming="_lZTSn9BAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2D9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2ENBAEeWhI4x9CGXwiQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT2EdBAEeWhI4x9CGXwiQ" name="Read(Monitor$initializationFlag$1)" structuralFeature="_lZTSgtBAEeWhI4x9CGXwiQ">
              <object xmi:id="_lZT2EtBAEeWhI4x9CGXwiQ" name="Read(Monitor$initializationFlag$1).object" incoming="_lZTSodBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2E9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2FNBAEeWhI4x9CGXwiQ" value="1"/>
              </object>
              <result xmi:id="_lZT2FdBAEeWhI4x9CGXwiQ" name="Read(Monitor$initializationFlag$1).result" outgoing="_lZT2ANBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2FtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2F9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT2GNBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
              <argument xmi:id="_lZT2GdBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZT2ANBAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2GtBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2G9BAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <result xmi:id="_lZT2HNBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZT2AdBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2HdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2HtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT2H9BAEeWhI4x9CGXwiQ" name="Value(0)">
              <result xmi:id="_lZT2INBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZT2AtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2IdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2ItBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_lZT2I9BAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT2JNBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
              <first xmi:id="_lZT2JdBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZT2AdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2JtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2J9BAEeWhI4x9CGXwiQ" value="1"/>
              </first>
              <result xmi:id="_lZT2KNBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZT2BNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2KdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2KtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <second xmi:id="_lZT2K9BAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZT2AtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2LNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2LdBAEeWhI4x9CGXwiQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_lZT2LtBAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZT2A9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_lZT2L9BAEeWhI4x9CGXwiQ" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_lZT2A9BAEeWhI4x9CGXwiQ _lZT2BNBAEeWhI4x9CGXwiQ" outgoing="_lZT2BdBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT2BNBAEeWhI4x9CGXwiQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZTSnNBAEeWhI4x9CGXwiQ" name="Return" incoming="_lZTSm9BAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" parameter="_lZTSmNBAEeWhI4x9CGXwiQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT2MNBAEeWhI4x9CGXwiQ" name="destroy$method$1" specification="_lZT2ftBAEeWhI4x9CGXwiQ" node="_lZT2MdBAEeWhI4x9CGXwiQ" group="_lZT2MdBAEeWhI4x9CGXwiQ">
          <structuredNode xmi:id="_lZT2MdBAEeWhI4x9CGXwiQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT2MtBAEeWhI4x9CGXwiQ" name="Monitor$initialization$1" specification="_lZT2dNBAEeWhI4x9CGXwiQ" node="_lZT2M9BAEeWhI4x9CGXwiQ" group="_lZT2M9BAEeWhI4x9CGXwiQ">
          <structuredNode xmi:id="_lZT2M9BAEeWhI4x9CGXwiQ" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2NNBAEeWhI4x9CGXwiQ" target="_lZT2QtBAEeWhI4x9CGXwiQ" source="_lZT2P9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2NdBAEeWhI4x9CGXwiQ" target="_lZT2TNBAEeWhI4x9CGXwiQ" source="_lZT2QtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2NtBAEeWhI4x9CGXwiQ" target="_lZT2VtBAEeWhI4x9CGXwiQ" source="_lZT2QtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2N9BAEeWhI4x9CGXwiQ" target="_lZT2XdBAEeWhI4x9CGXwiQ" source="_lZT2WdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2ONBAEeWhI4x9CGXwiQ" target="_lZT2adBAEeWhI4x9CGXwiQ" source="_lZT2YNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2OdBAEeWhI4x9CGXwiQ" target="_lZT2b9BAEeWhI4x9CGXwiQ" source="_lZT2ZNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2OtBAEeWhI4x9CGXwiQ" target="_lZT2c9BAEeWhI4x9CGXwiQ" source="_lZT2ctBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2O9BAEeWhI4x9CGXwiQ" target="_lZT2c9BAEeWhI4x9CGXwiQ" source="_lZT2bNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2PNBAEeWhI4x9CGXwiQ" target="_lZT2Q9BAEeWhI4x9CGXwiQ" source="_lZT2c9BAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT2PdBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT2PtBAEeWhI4x9CGXwiQ" name="ReadSelf">
              <result xmi:id="_lZT2P9BAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT2NNBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2QNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2QdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT2QtBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZT2NNBAEeWhI4x9CGXwiQ" outgoing="_lZT2NdBAEeWhI4x9CGXwiQ _lZT2NtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2Q9BAEeWhI4x9CGXwiQ" name="Initialization" incoming="_lZT2PNBAEeWhI4x9CGXwiQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2RNBAEeWhI4x9CGXwiQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2RdBAEeWhI4x9CGXwiQ" target="_lZT2UtBAEeWhI4x9CGXwiQ" source="_lZT2R9BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT2RtBAEeWhI4x9CGXwiQ" name="Value(true)">
                  <result xmi:id="_lZT2R9BAEeWhI4x9CGXwiQ" name="Value(true).result" outgoing="_lZT2RdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2SNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2SdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_lZT2StBAEeWhI4x9CGXwiQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_lZT2S9BAEeWhI4x9CGXwiQ" name="Write(Monitor$initializationFlag$1)" structuralFeature="_lZTSgtBAEeWhI4x9CGXwiQ" isReplaceAll="true">
                  <object xmi:id="_lZT2TNBAEeWhI4x9CGXwiQ" name="Write(Monitor$initializationFlag$1).object" incoming="_lZT2NdBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2TdBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2TtBAEeWhI4x9CGXwiQ" value="1"/>
                  </object>
                  <result xmi:id="_lZT2T9BAEeWhI4x9CGXwiQ" name="Write(Monitor$initializationFlag$1).result" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2UNBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2UdBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:id="_lZT2UtBAEeWhI4x9CGXwiQ" name="Write(Monitor$initializationFlag$1).value" incoming="_lZT2RdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2U9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2VNBAEeWhI4x9CGXwiQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT2VdBAEeWhI4x9CGXwiQ" name="Read(Monitor$initializationFlag$1)" structuralFeature="_lZTSgtBAEeWhI4x9CGXwiQ">
              <object xmi:id="_lZT2VtBAEeWhI4x9CGXwiQ" name="Read(Monitor$initializationFlag$1).object" incoming="_lZT2NtBAEeWhI4x9CGXwiQ" type="_lZTSgdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2V9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2WNBAEeWhI4x9CGXwiQ" value="1"/>
              </object>
              <result xmi:id="_lZT2WdBAEeWhI4x9CGXwiQ" name="Read(Monitor$initializationFlag$1).result" outgoing="_lZT2N9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2WtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2W9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT2XNBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
              <argument xmi:id="_lZT2XdBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZT2N9BAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2XtBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2X9BAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <result xmi:id="_lZT2YNBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZT2ONBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2YdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2YtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT2Y9BAEeWhI4x9CGXwiQ" name="Value(0)">
              <result xmi:id="_lZT2ZNBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZT2OdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2ZdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2ZtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_lZT2Z9BAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT2aNBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
              <first xmi:id="_lZT2adBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZT2ONBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2atBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2a9BAEeWhI4x9CGXwiQ" value="1"/>
              </first>
              <result xmi:id="_lZT2bNBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZT2O9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2bdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2btBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <second xmi:id="_lZT2b9BAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZT2OdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2cNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2cdBAEeWhI4x9CGXwiQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_lZT2ctBAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZT2OtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_lZT2c9BAEeWhI4x9CGXwiQ" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_lZT2OtBAEeWhI4x9CGXwiQ _lZT2O9BAEeWhI4x9CGXwiQ" outgoing="_lZT2PNBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT2O9BAEeWhI4x9CGXwiQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_lZT2dNBAEeWhI4x9CGXwiQ" name="Monitor$initialization$1" visibility="protected" method="_lZT2MtBAEeWhI4x9CGXwiQ"/>
        <ownedOperation xmi:id="_lZT2ddBAEeWhI4x9CGXwiQ" name="raiseAlarm" visibility="public" method="_lZTShdBAEeWhI4x9CGXwiQ">
          <ownedParameter xmi:id="_lZT2dtBAEeWhI4x9CGXwiQ" name="sensorId" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2d9BAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2eNBAEeWhI4x9CGXwiQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_lZT2edBAEeWhI4x9CGXwiQ" name="cleanUp" visibility="public" method="_lZTSldBAEeWhI4x9CGXwiQ"/>
        <ownedOperation xmi:id="_lZT2etBAEeWhI4x9CGXwiQ" name="Monitor" visibility="public" method="_lZTSl9BAEeWhI4x9CGXwiQ">
          <ownedParameter xmi:id="_lZT2e9BAEeWhI4x9CGXwiQ" name="" visibility="package" type="_lZTSgdBAEeWhI4x9CGXwiQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2fNBAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2fdBAEeWhI4x9CGXwiQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_lZT2ftBAEeWhI4x9CGXwiQ" name="destroy" visibility="public" method="_lZT2MNBAEeWhI4x9CGXwiQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_lZT2f9BAEeWhI4x9CGXwiQ" name="Condition" visibility="package">
        <ownedLiteral xmi:id="_lZT2gNBAEeWhI4x9CGXwiQ" name="normal" visibility="package"/>
        <ownedLiteral xmi:id="_lZT2gdBAEeWhI4x9CGXwiQ" name="alert" visibility="package"/>
        <ownedLiteral xmi:id="_lZT2gtBAEeWhI4x9CGXwiQ" name="critical" visibility="package"/>
        <ownedLiteral xmi:id="_lZT2g9BAEeWhI4x9CGXwiQ" name="error" visibility="package"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lZT2hNBAEeWhI4x9CGXwiQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_lZT2hdBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_lZT2htBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_lZT2h9BAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_lZT2iNBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_lZT2idBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_lZT2itBAEeWhI4x9CGXwiQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2i9BAEeWhI4x9CGXwiQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2jNBAEeWhI4x9CGXwiQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_lZT2jdBAEeWhI4x9CGXwiQ" name="tester" visibility="private" type="_lZT3fdBAEeWhI4x9CGXwiQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2jtBAEeWhI4x9CGXwiQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2j9BAEeWhI4x9CGXwiQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT2kNBAEeWhI4x9CGXwiQ" name="destroy$method$1" specification="_lZT3dNBAEeWhI4x9CGXwiQ" node="_lZT2kdBAEeWhI4x9CGXwiQ" group="_lZT2kdBAEeWhI4x9CGXwiQ">
        <structuredNode xmi:id="_lZT2kdBAEeWhI4x9CGXwiQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT2ktBAEeWhI4x9CGXwiQ" name="done$method$1" specification="_lZT3ddBAEeWhI4x9CGXwiQ" node="_lZT2k9BAEeWhI4x9CGXwiQ" group="_lZT2k9BAEeWhI4x9CGXwiQ">
        <structuredNode xmi:id="_lZT2k9BAEeWhI4x9CGXwiQ" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2lNBAEeWhI4x9CGXwiQ" target="_lZT2pdBAEeWhI4x9CGXwiQ" source="_lZT2ldBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2ldBAEeWhI4x9CGXwiQ" name="ExpressionStatement@37344d2" outgoing="_lZT2lNBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2ltBAEeWhI4x9CGXwiQ" target="_lZT2mdBAEeWhI4x9CGXwiQ" source="_lZT2odBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2l9BAEeWhI4x9CGXwiQ" target="_lZT2mNBAEeWhI4x9CGXwiQ" source="_lZT2n9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT2mNBAEeWhI4x9CGXwiQ" name="Call(WriteLine)" incoming="_lZT2l9BAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT2mdBAEeWhI4x9CGXwiQ" name="Call(WriteLine).argument(value)" incoming="_lZT2ltBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2mtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2m9BAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT2nNBAEeWhI4x9CGXwiQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2ndBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2ntBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2n9BAEeWhI4x9CGXwiQ" name="Tuple@1aac48f5" outgoing="_lZT2l9BAEeWhI4x9CGXwiQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT2oNBAEeWhI4x9CGXwiQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_lZT2odBAEeWhI4x9CGXwiQ" name="Value(&quot;Done.&quot;).result" outgoing="_lZT2ltBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2otBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2o9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_lZT2pNBAEeWhI4x9CGXwiQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2pdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@144ebf08" incoming="_lZT2lNBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2ptBAEeWhI4x9CGXwiQ" target="_lZT2rtBAEeWhI4x9CGXwiQ" source="_lZT2utBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2p9BAEeWhI4x9CGXwiQ" target="_lZT2qNBAEeWhI4x9CGXwiQ" source="_lZT2r9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_lZT2qNBAEeWhI4x9CGXwiQ" name="Collect(SendSignal(Continue))" incoming="_lZT2p9BAEeWhI4x9CGXwiQ" mode="parallel" inputElement="_lZT2rtBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2qdBAEeWhI4x9CGXwiQ" target="_lZT2q9BAEeWhI4x9CGXwiQ" source="_lZT2rtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_lZT2qtBAEeWhI4x9CGXwiQ" name="SendSignal(Continue)" signal="_lZT4BtBAEeWhI4x9CGXwiQ">
                <target xmi:id="_lZT2q9BAEeWhI4x9CGXwiQ" name="SendSignal(Continue).target" incoming="_lZT2qdBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2rNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2rdBAEeWhI4x9CGXwiQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_lZT2rtBAEeWhI4x9CGXwiQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_lZT2ptBAEeWhI4x9CGXwiQ" outgoing="_lZT2qdBAEeWhI4x9CGXwiQ" regionAsInput="_lZT2qNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT2r9BAEeWhI4x9CGXwiQ" name="Feature(Read(tester).result)" outgoing="_lZT2p9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2sNBAEeWhI4x9CGXwiQ" target="_lZT2vdBAEeWhI4x9CGXwiQ" source="_lZT2s9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2sdBAEeWhI4x9CGXwiQ" target="_lZT2t9BAEeWhI4x9CGXwiQ" source="_lZT2vdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT2stBAEeWhI4x9CGXwiQ" name="ReadSelf">
                <result xmi:id="_lZT2s9BAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT2sNBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2tNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2tdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT2ttBAEeWhI4x9CGXwiQ" name="Read(tester)" structuralFeature="_lZT2jdBAEeWhI4x9CGXwiQ">
                <object xmi:id="_lZT2t9BAEeWhI4x9CGXwiQ" name="Read(tester).object" incoming="_lZT2sdBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2uNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2udBAEeWhI4x9CGXwiQ" value="1"/>
                </object>
                <result xmi:id="_lZT2utBAEeWhI4x9CGXwiQ" name="Read(tester).result" outgoing="_lZT2ptBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2u9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2vNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_lZT2vdBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZT2sNBAEeWhI4x9CGXwiQ" outgoing="_lZT2sdBAEeWhI4x9CGXwiQ"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT2vtBAEeWhI4x9CGXwiQ" name="Test$method$1" specification="_lZT3dtBAEeWhI4x9CGXwiQ" node="_lZT2ytBAEeWhI4x9CGXwiQ _lZT2zdBAEeWhI4x9CGXwiQ _lZT2y9BAEeWhI4x9CGXwiQ _lZT209BAEeWhI4x9CGXwiQ _lZT2zNBAEeWhI4x9CGXwiQ" group="_lZT2zdBAEeWhI4x9CGXwiQ _lZT209BAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZT2v9BAEeWhI4x9CGXwiQ" name="tester" type="_lZT3fdBAEeWhI4x9CGXwiQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2wNBAEeWhI4x9CGXwiQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2wdBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZT2wtBAEeWhI4x9CGXwiQ" name="" type="_lZT2hNBAEeWhI4x9CGXwiQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2w9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2xNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2xdBAEeWhI4x9CGXwiQ" target="_lZT2z9BAEeWhI4x9CGXwiQ" source="_lZT2ytBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2xtBAEeWhI4x9CGXwiQ" target="_lZT28dBAEeWhI4x9CGXwiQ" source="_lZT20tBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2x9BAEeWhI4x9CGXwiQ" target="_lZT2y9BAEeWhI4x9CGXwiQ" source="_lZT3DdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2yNBAEeWhI4x9CGXwiQ" target="_lZT2zNBAEeWhI4x9CGXwiQ" source="_lZT2zdBAEeWhI4x9CGXwiQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_lZT2ydBAEeWhI4x9CGXwiQ" target="_lZT209BAEeWhI4x9CGXwiQ" source="_lZT2zNBAEeWhI4x9CGXwiQ"/>
        <structuredNode xmi:id="_lZT2zdBAEeWhI4x9CGXwiQ" name="Node(Input(tester))" outgoing="_lZT2yNBAEeWhI4x9CGXwiQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2ztBAEeWhI4x9CGXwiQ" target="_lZT20tBAEeWhI4x9CGXwiQ" source="_lZT2z9BAEeWhI4x9CGXwiQ"/>
          <structuredNodeInput xmi:id="_lZT2z9BAEeWhI4x9CGXwiQ" name="Input(tester)" incoming="_lZT2xdBAEeWhI4x9CGXwiQ" outgoing="_lZT2ztBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT20NBAEeWhI4x9CGXwiQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT20dBAEeWhI4x9CGXwiQ" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_lZT20tBAEeWhI4x9CGXwiQ" name="Fork(tester)" incoming="_lZT2ztBAEeWhI4x9CGXwiQ" outgoing="_lZT2xtBAEeWhI4x9CGXwiQ"/>
        </structuredNode>
        <structuredNode xmi:id="_lZT209BAEeWhI4x9CGXwiQ" name="Body(Test$method$1)" incoming="_lZT2ydBAEeWhI4x9CGXwiQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT21NBAEeWhI4x9CGXwiQ" target="_lZT3DdBAEeWhI4x9CGXwiQ" source="_lZT3CtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT21dBAEeWhI4x9CGXwiQ" target="_lZT3D9BAEeWhI4x9CGXwiQ" source="_lZT3DdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT21tBAEeWhI4x9CGXwiQ" target="_lZT239BAEeWhI4x9CGXwiQ" source="_lZT3DtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT219BAEeWhI4x9CGXwiQ" target="_lZT3E9BAEeWhI4x9CGXwiQ" source="_lZT3DdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT22NBAEeWhI4x9CGXwiQ" target="_lZT3GtBAEeWhI4x9CGXwiQ" source="_lZT3FtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT22dBAEeWhI4x9CGXwiQ" target="_lZT3JtBAEeWhI4x9CGXwiQ" source="_lZT3HdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT22tBAEeWhI4x9CGXwiQ" target="_lZT3LNBAEeWhI4x9CGXwiQ" source="_lZT3IdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT229BAEeWhI4x9CGXwiQ" target="_lZT3MNBAEeWhI4x9CGXwiQ" source="_lZT3L9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT23NBAEeWhI4x9CGXwiQ" target="_lZT3MNBAEeWhI4x9CGXwiQ" source="_lZT3KdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT23dBAEeWhI4x9CGXwiQ" target="_lZT3DtBAEeWhI4x9CGXwiQ" source="_lZT3MNBAEeWhI4x9CGXwiQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT23tBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT239BAEeWhI4x9CGXwiQ" name="Body" incoming="_lZT21tBAEeWhI4x9CGXwiQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT24NBAEeWhI4x9CGXwiQ" name="ExpressionStatement@3fd52988">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT24dBAEeWhI4x9CGXwiQ" target="_lZT269BAEeWhI4x9CGXwiQ" source="_lZT259BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT24tBAEeWhI4x9CGXwiQ" target="_lZT29NBAEeWhI4x9CGXwiQ" source="_lZT28dBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT249BAEeWhI4x9CGXwiQ" target="_lZT2-tBAEeWhI4x9CGXwiQ" source="_lZT27tBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZT25NBAEeWhI4x9CGXwiQ" target="_lZT25dBAEeWhI4x9CGXwiQ" source="_lZT3CNBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT25dBAEeWhI4x9CGXwiQ" name="Expression(LeftHandSide@415a109f)" incoming="_lZT25NBAEeWhI4x9CGXwiQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT25tBAEeWhI4x9CGXwiQ" name="ReadSelf">
                  <result xmi:id="_lZT259BAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT24dBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT26NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT26dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_lZT26tBAEeWhI4x9CGXwiQ" name="Clear(tester)" structuralFeature="_lZT2jdBAEeWhI4x9CGXwiQ">
                <object xmi:id="_lZT269BAEeWhI4x9CGXwiQ" name="Clear(tester).object" incoming="_lZT24dBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT27NBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT27dBAEeWhI4x9CGXwiQ" value="1"/>
                </object>
                <result xmi:id="_lZT27tBAEeWhI4x9CGXwiQ" name="Clear(tester).result" outgoing="_lZT249BAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT279BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT28NBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_lZT28dBAEeWhI4x9CGXwiQ" name="Fork(LeftHandSide@415a109f)" incoming="_lZT2xtBAEeWhI4x9CGXwiQ" outgoing="_lZT24tBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT28tBAEeWhI4x9CGXwiQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT289BAEeWhI4x9CGXwiQ" target="_lZT3B9BAEeWhI4x9CGXwiQ" source="_lZT29NBAEeWhI4x9CGXwiQ"/>
                <structuredNodeInput xmi:id="_lZT29NBAEeWhI4x9CGXwiQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_lZT24tBAEeWhI4x9CGXwiQ" outgoing="_lZT289BAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT29dBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT29tBAEeWhI4x9CGXwiQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_lZT299BAEeWhI4x9CGXwiQ" name="Iterate(Write(tester))" inputElement="_lZT3B9BAEeWhI4x9CGXwiQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2-NBAEeWhI4x9CGXwiQ" target="_lZT3BNBAEeWhI4x9CGXwiQ" source="_lZT3B9BAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT2-dBAEeWhI4x9CGXwiQ" target="_lZT2_tBAEeWhI4x9CGXwiQ" source="_lZT2-tBAEeWhI4x9CGXwiQ"/>
                  <structuredNodeInput xmi:id="_lZT2-tBAEeWhI4x9CGXwiQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_lZT249BAEeWhI4x9CGXwiQ" outgoing="_lZT2-dBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2-9BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT2_NBAEeWhI4x9CGXwiQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_lZT2_dBAEeWhI4x9CGXwiQ" name="Write(tester)" structuralFeature="_lZT2jdBAEeWhI4x9CGXwiQ">
                    <object xmi:id="_lZT2_tBAEeWhI4x9CGXwiQ" name="Write(tester).object" incoming="_lZT2-dBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT2_9BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3ANBAEeWhI4x9CGXwiQ" value="1"/>
                    </object>
                    <result xmi:id="_lZT3AdBAEeWhI4x9CGXwiQ" name="Write(tester).result" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3AtBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3A9BAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:id="_lZT3BNBAEeWhI4x9CGXwiQ" name="Write(tester).value" incoming="_lZT2-NBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3BdBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3BtBAEeWhI4x9CGXwiQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_lZT3B9BAEeWhI4x9CGXwiQ" name="Iterate(Write(tester)).inputElement" incoming="_lZT289BAEeWhI4x9CGXwiQ" outgoing="_lZT2-NBAEeWhI4x9CGXwiQ" regionAsInput="_lZT299BAEeWhI4x9CGXwiQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT3CNBAEeWhI4x9CGXwiQ" name="RightHandSide@71baee2c" outgoing="_lZT25NBAEeWhI4x9CGXwiQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT3CdBAEeWhI4x9CGXwiQ" name="ReadSelf">
            <result xmi:id="_lZT3CtBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT21NBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3C9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3DNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZT3DdBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZT21NBAEeWhI4x9CGXwiQ" outgoing="_lZT2x9BAEeWhI4x9CGXwiQ _lZT21dBAEeWhI4x9CGXwiQ _lZT219BAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_lZT3DtBAEeWhI4x9CGXwiQ" name="Call(Test$initialization$1)" incoming="_lZT23dBAEeWhI4x9CGXwiQ" outgoing="_lZT21tBAEeWhI4x9CGXwiQ" operation="_lZT3c9BAEeWhI4x9CGXwiQ">
            <target xmi:id="_lZT3D9BAEeWhI4x9CGXwiQ" name="Call(Test$initialization$1).target" incoming="_lZT21dBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3ENBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3EdBAEeWhI4x9CGXwiQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT3EtBAEeWhI4x9CGXwiQ" name="Read(Test$initializationFlag$1)" structuralFeature="_lZT2itBAEeWhI4x9CGXwiQ">
            <object xmi:id="_lZT3E9BAEeWhI4x9CGXwiQ" name="Read(Test$initializationFlag$1).object" incoming="_lZT219BAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3FNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3FdBAEeWhI4x9CGXwiQ" value="1"/>
            </object>
            <result xmi:id="_lZT3FtBAEeWhI4x9CGXwiQ" name="Read(Test$initializationFlag$1).result" outgoing="_lZT22NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3F9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3GNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT3GdBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
            <argument xmi:id="_lZT3GtBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZT22NBAEeWhI4x9CGXwiQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3G9BAEeWhI4x9CGXwiQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3HNBAEeWhI4x9CGXwiQ" value="*"/>
            </argument>
            <result xmi:id="_lZT3HdBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZT22dBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3HtBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3H9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT3INBAEeWhI4x9CGXwiQ" name="Value(0)">
            <result xmi:id="_lZT3IdBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZT22tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3ItBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3I9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_lZT3JNBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT3JdBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
            <first xmi:id="_lZT3JtBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZT22dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3J9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3KNBAEeWhI4x9CGXwiQ" value="1"/>
            </first>
            <result xmi:id="_lZT3KdBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZT23NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3KtBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3K9BAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <second xmi:id="_lZT3LNBAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZT22tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3LdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3LtBAEeWhI4x9CGXwiQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_lZT3L9BAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZT229BAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_lZT3MNBAEeWhI4x9CGXwiQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_lZT229BAEeWhI4x9CGXwiQ _lZT23NBAEeWhI4x9CGXwiQ" outgoing="_lZT23dBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT23NBAEeWhI4x9CGXwiQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT2ytBAEeWhI4x9CGXwiQ" name="Input(tester)" outgoing="_lZT2xdBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" parameter="_lZT2v9BAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT2y9BAEeWhI4x9CGXwiQ" name="Return" incoming="_lZT2x9BAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" parameter="_lZT2wtBAEeWhI4x9CGXwiQ"/>
        <node xmi:type="uml:JoinNode" xmi:id="_lZT2zNBAEeWhI4x9CGXwiQ" name="Join(Input))" incoming="_lZT2yNBAEeWhI4x9CGXwiQ" outgoing="_lZT2ydBAEeWhI4x9CGXwiQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT3MdBAEeWhI4x9CGXwiQ" name="Test$initialization$1" specification="_lZT3c9BAEeWhI4x9CGXwiQ" node="_lZT3MtBAEeWhI4x9CGXwiQ" group="_lZT3MtBAEeWhI4x9CGXwiQ">
        <structuredNode xmi:id="_lZT3MtBAEeWhI4x9CGXwiQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3M9BAEeWhI4x9CGXwiQ" target="_lZT3QdBAEeWhI4x9CGXwiQ" source="_lZT3PtBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3NNBAEeWhI4x9CGXwiQ" target="_lZT3S9BAEeWhI4x9CGXwiQ" source="_lZT3QdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3NdBAEeWhI4x9CGXwiQ" target="_lZT3VdBAEeWhI4x9CGXwiQ" source="_lZT3QdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3NtBAEeWhI4x9CGXwiQ" target="_lZT3XNBAEeWhI4x9CGXwiQ" source="_lZT3WNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3N9BAEeWhI4x9CGXwiQ" target="_lZT3aNBAEeWhI4x9CGXwiQ" source="_lZT3X9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3ONBAEeWhI4x9CGXwiQ" target="_lZT3btBAEeWhI4x9CGXwiQ" source="_lZT3Y9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3OdBAEeWhI4x9CGXwiQ" target="_lZT3ctBAEeWhI4x9CGXwiQ" source="_lZT3cdBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3OtBAEeWhI4x9CGXwiQ" target="_lZT3ctBAEeWhI4x9CGXwiQ" source="_lZT3a9BAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3O9BAEeWhI4x9CGXwiQ" target="_lZT3QtBAEeWhI4x9CGXwiQ" source="_lZT3ctBAEeWhI4x9CGXwiQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT3PNBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT3PdBAEeWhI4x9CGXwiQ" name="ReadSelf">
            <result xmi:id="_lZT3PtBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT3M9BAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3P9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3QNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_lZT3QdBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZT3M9BAEeWhI4x9CGXwiQ" outgoing="_lZT3NNBAEeWhI4x9CGXwiQ _lZT3NdBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT3QtBAEeWhI4x9CGXwiQ" name="Initialization" incoming="_lZT3O9BAEeWhI4x9CGXwiQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT3Q9BAEeWhI4x9CGXwiQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3RNBAEeWhI4x9CGXwiQ" target="_lZT3UdBAEeWhI4x9CGXwiQ" source="_lZT3RtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT3RdBAEeWhI4x9CGXwiQ" name="Value(true)">
                <result xmi:id="_lZT3RtBAEeWhI4x9CGXwiQ" name="Value(true).result" outgoing="_lZT3RNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3R9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3SNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_lZT3SdBAEeWhI4x9CGXwiQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_lZT3StBAEeWhI4x9CGXwiQ" name="Write(Test$initializationFlag$1)" structuralFeature="_lZT2itBAEeWhI4x9CGXwiQ" isReplaceAll="true">
                <object xmi:id="_lZT3S9BAEeWhI4x9CGXwiQ" name="Write(Test$initializationFlag$1).object" incoming="_lZT3NNBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3TNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3TdBAEeWhI4x9CGXwiQ" value="1"/>
                </object>
                <result xmi:id="_lZT3TtBAEeWhI4x9CGXwiQ" name="Write(Test$initializationFlag$1).result" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3T9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3UNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:id="_lZT3UdBAEeWhI4x9CGXwiQ" name="Write(Test$initializationFlag$1).value" incoming="_lZT3RNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3UtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3U9BAEeWhI4x9CGXwiQ" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT3VNBAEeWhI4x9CGXwiQ" name="Read(Test$initializationFlag$1)" structuralFeature="_lZT2itBAEeWhI4x9CGXwiQ">
            <object xmi:id="_lZT3VdBAEeWhI4x9CGXwiQ" name="Read(Test$initializationFlag$1).object" incoming="_lZT3NdBAEeWhI4x9CGXwiQ" type="_lZT2hNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3VtBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3V9BAEeWhI4x9CGXwiQ" value="1"/>
            </object>
            <result xmi:id="_lZT3WNBAEeWhI4x9CGXwiQ" name="Read(Test$initializationFlag$1).result" outgoing="_lZT3NtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3WdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3WtBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT3W9BAEeWhI4x9CGXwiQ" name="Call(ListSize)">
            <argument xmi:id="_lZT3XNBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZT3NtBAEeWhI4x9CGXwiQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3XdBAEeWhI4x9CGXwiQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3XtBAEeWhI4x9CGXwiQ" value="*"/>
            </argument>
            <result xmi:id="_lZT3X9BAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZT3N9BAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3YNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3YdBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT3YtBAEeWhI4x9CGXwiQ" name="Value(0)">
            <result xmi:id="_lZT3Y9BAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZT3ONBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3ZNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3ZdBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_lZT3ZtBAEeWhI4x9CGXwiQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT3Z9BAEeWhI4x9CGXwiQ" name="Test(Size==0)">
            <first xmi:id="_lZT3aNBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZT3N9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3adBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3atBAEeWhI4x9CGXwiQ" value="1"/>
            </first>
            <result xmi:id="_lZT3a9BAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZT3OtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3bNBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3bdBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <second xmi:id="_lZT3btBAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZT3ONBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3b9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3cNBAEeWhI4x9CGXwiQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_lZT3cdBAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZT3OdBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_lZT3ctBAEeWhI4x9CGXwiQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_lZT3OdBAEeWhI4x9CGXwiQ _lZT3OtBAEeWhI4x9CGXwiQ" outgoing="_lZT3O9BAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT3OtBAEeWhI4x9CGXwiQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_lZT3c9BAEeWhI4x9CGXwiQ" name="Test$initialization$1" visibility="protected" method="_lZT3MdBAEeWhI4x9CGXwiQ"/>
      <ownedOperation xmi:id="_lZT3dNBAEeWhI4x9CGXwiQ" name="destroy" visibility="public" method="_lZT2kNBAEeWhI4x9CGXwiQ"/>
      <ownedOperation xmi:id="_lZT3ddBAEeWhI4x9CGXwiQ" name="done" visibility="public" method="_lZT2ktBAEeWhI4x9CGXwiQ"/>
      <ownedOperation xmi:id="_lZT3dtBAEeWhI4x9CGXwiQ" name="Test" visibility="protected" method="_lZT2vtBAEeWhI4x9CGXwiQ">
        <ownedParameter xmi:id="_lZT3d9BAEeWhI4x9CGXwiQ" name="tester" visibility="package" type="_lZT3fdBAEeWhI4x9CGXwiQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3eNBAEeWhI4x9CGXwiQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3edBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lZT3etBAEeWhI4x9CGXwiQ" name="" visibility="package" type="_lZT2hNBAEeWhI4x9CGXwiQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3e9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3fNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_lZT3fdBAEeWhI4x9CGXwiQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_lZT3ftBAEeWhI4x9CGXwiQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3f9BAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3gNBAEeWhI4x9CGXwiQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT3gdBAEeWhI4x9CGXwiQ" name="Tester$method$1" specification="_lZT4AdBAEeWhI4x9CGXwiQ" node="_lZT3htBAEeWhI4x9CGXwiQ _lZT3h9BAEeWhI4x9CGXwiQ" group="_lZT3h9BAEeWhI4x9CGXwiQ">
          <ownedParameter xmi:id="_lZT3gtBAEeWhI4x9CGXwiQ" name="" type="_lZT3fdBAEeWhI4x9CGXwiQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3g9BAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3hNBAEeWhI4x9CGXwiQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3hdBAEeWhI4x9CGXwiQ" target="_lZT3htBAEeWhI4x9CGXwiQ" source="_lZT3mNBAEeWhI4x9CGXwiQ"/>
          <structuredNode xmi:id="_lZT3h9BAEeWhI4x9CGXwiQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3iNBAEeWhI4x9CGXwiQ" target="_lZT3mNBAEeWhI4x9CGXwiQ" source="_lZT3ldBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3idBAEeWhI4x9CGXwiQ" target="_lZT3mtBAEeWhI4x9CGXwiQ" source="_lZT3mNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3itBAEeWhI4x9CGXwiQ" target="_lZT3k9BAEeWhI4x9CGXwiQ" source="_lZT3mdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3i9BAEeWhI4x9CGXwiQ" target="_lZT3ntBAEeWhI4x9CGXwiQ" source="_lZT3mNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3jNBAEeWhI4x9CGXwiQ" target="_lZT3pdBAEeWhI4x9CGXwiQ" source="_lZT3odBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3jdBAEeWhI4x9CGXwiQ" target="_lZT3sdBAEeWhI4x9CGXwiQ" source="_lZT3qNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3jtBAEeWhI4x9CGXwiQ" target="_lZT3t9BAEeWhI4x9CGXwiQ" source="_lZT3rNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3j9BAEeWhI4x9CGXwiQ" target="_lZT3u9BAEeWhI4x9CGXwiQ" source="_lZT3utBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3kNBAEeWhI4x9CGXwiQ" target="_lZT3u9BAEeWhI4x9CGXwiQ" source="_lZT3tNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3kdBAEeWhI4x9CGXwiQ" target="_lZT3mdBAEeWhI4x9CGXwiQ" source="_lZT3u9BAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT3ktBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT3k9BAEeWhI4x9CGXwiQ" name="Body" incoming="_lZT3itBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT3lNBAEeWhI4x9CGXwiQ" name="ReadSelf">
              <result xmi:id="_lZT3ldBAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT3iNBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3ltBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3l9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT3mNBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZT3iNBAEeWhI4x9CGXwiQ" outgoing="_lZT3hdBAEeWhI4x9CGXwiQ _lZT3idBAEeWhI4x9CGXwiQ _lZT3i9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_lZT3mdBAEeWhI4x9CGXwiQ" name="Call(Tester$initialization$1)" incoming="_lZT3kdBAEeWhI4x9CGXwiQ" outgoing="_lZT3itBAEeWhI4x9CGXwiQ" operation="_lZT4ANBAEeWhI4x9CGXwiQ">
              <target xmi:id="_lZT3mtBAEeWhI4x9CGXwiQ" name="Call(Tester$initialization$1).target" incoming="_lZT3idBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3m9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3nNBAEeWhI4x9CGXwiQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT3ndBAEeWhI4x9CGXwiQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_lZT3ftBAEeWhI4x9CGXwiQ">
              <object xmi:id="_lZT3ntBAEeWhI4x9CGXwiQ" name="Read(Tester$initializationFlag$1).object" incoming="_lZT3i9BAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3n9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3oNBAEeWhI4x9CGXwiQ" value="1"/>
              </object>
              <result xmi:id="_lZT3odBAEeWhI4x9CGXwiQ" name="Read(Tester$initializationFlag$1).result" outgoing="_lZT3jNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3otBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3o9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT3pNBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
              <argument xmi:id="_lZT3pdBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZT3jNBAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3ptBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3p9BAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <result xmi:id="_lZT3qNBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZT3jdBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3qdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3qtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT3q9BAEeWhI4x9CGXwiQ" name="Value(0)">
              <result xmi:id="_lZT3rNBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZT3jtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3rdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3rtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_lZT3r9BAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT3sNBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
              <first xmi:id="_lZT3sdBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZT3jdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3stBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3s9BAEeWhI4x9CGXwiQ" value="1"/>
              </first>
              <result xmi:id="_lZT3tNBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZT3kNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3tdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3ttBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <second xmi:id="_lZT3t9BAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZT3jtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3uNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3udBAEeWhI4x9CGXwiQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_lZT3utBAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZT3j9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_lZT3u9BAEeWhI4x9CGXwiQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_lZT3j9BAEeWhI4x9CGXwiQ _lZT3kNBAEeWhI4x9CGXwiQ" outgoing="_lZT3kdBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT3kNBAEeWhI4x9CGXwiQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT3htBAEeWhI4x9CGXwiQ" name="Return" incoming="_lZT3hdBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" parameter="_lZT3gtBAEeWhI4x9CGXwiQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT3vNBAEeWhI4x9CGXwiQ" name="destroy$method$1" specification="_lZT4BdBAEeWhI4x9CGXwiQ" node="_lZT3vdBAEeWhI4x9CGXwiQ" group="_lZT3vdBAEeWhI4x9CGXwiQ">
          <structuredNode xmi:id="_lZT3vdBAEeWhI4x9CGXwiQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_lZT3vtBAEeWhI4x9CGXwiQ" name="Tester$initialization$1" specification="_lZT4ANBAEeWhI4x9CGXwiQ" node="_lZT3v9BAEeWhI4x9CGXwiQ" group="_lZT3v9BAEeWhI4x9CGXwiQ">
          <structuredNode xmi:id="_lZT3v9BAEeWhI4x9CGXwiQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3wNBAEeWhI4x9CGXwiQ" target="_lZT3ztBAEeWhI4x9CGXwiQ" source="_lZT3y9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3wdBAEeWhI4x9CGXwiQ" target="_lZT32NBAEeWhI4x9CGXwiQ" source="_lZT3ztBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3wtBAEeWhI4x9CGXwiQ" target="_lZT34tBAEeWhI4x9CGXwiQ" source="_lZT3ztBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3w9BAEeWhI4x9CGXwiQ" target="_lZT36dBAEeWhI4x9CGXwiQ" source="_lZT35dBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3xNBAEeWhI4x9CGXwiQ" target="_lZT39dBAEeWhI4x9CGXwiQ" source="_lZT37NBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3xdBAEeWhI4x9CGXwiQ" target="_lZT3-9BAEeWhI4x9CGXwiQ" source="_lZT38NBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3xtBAEeWhI4x9CGXwiQ" target="_lZT3_9BAEeWhI4x9CGXwiQ" source="_lZT3_tBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT3x9BAEeWhI4x9CGXwiQ" target="_lZT3_9BAEeWhI4x9CGXwiQ" source="_lZT3-NBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT3yNBAEeWhI4x9CGXwiQ" target="_lZT3z9BAEeWhI4x9CGXwiQ" source="_lZT3_9BAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT3ydBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_lZT3ytBAEeWhI4x9CGXwiQ" name="ReadSelf">
              <result xmi:id="_lZT3y9BAEeWhI4x9CGXwiQ" name="ReadSelf.result" outgoing="_lZT3wNBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3zNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3zdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT3ztBAEeWhI4x9CGXwiQ" name="Fork(ReadSelf.result)" incoming="_lZT3wNBAEeWhI4x9CGXwiQ" outgoing="_lZT3wdBAEeWhI4x9CGXwiQ _lZT3wtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT3z9BAEeWhI4x9CGXwiQ" name="Initialization" incoming="_lZT3yNBAEeWhI4x9CGXwiQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT30NBAEeWhI4x9CGXwiQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT30dBAEeWhI4x9CGXwiQ" target="_lZT33tBAEeWhI4x9CGXwiQ" source="_lZT309BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT30tBAEeWhI4x9CGXwiQ" name="Value(true)">
                  <result xmi:id="_lZT309BAEeWhI4x9CGXwiQ" name="Value(true).result" outgoing="_lZT30dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT31NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT31dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_lZT31tBAEeWhI4x9CGXwiQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_lZT319BAEeWhI4x9CGXwiQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_lZT3ftBAEeWhI4x9CGXwiQ" isReplaceAll="true">
                  <object xmi:id="_lZT32NBAEeWhI4x9CGXwiQ" name="Write(Tester$initializationFlag$1).object" incoming="_lZT3wdBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT32dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT32tBAEeWhI4x9CGXwiQ" value="1"/>
                  </object>
                  <result xmi:id="_lZT329BAEeWhI4x9CGXwiQ" name="Write(Tester$initializationFlag$1).result" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT33NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT33dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:id="_lZT33tBAEeWhI4x9CGXwiQ" name="Write(Tester$initializationFlag$1).value" incoming="_lZT30dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT339BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT34NBAEeWhI4x9CGXwiQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_lZT34dBAEeWhI4x9CGXwiQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_lZT3ftBAEeWhI4x9CGXwiQ">
              <object xmi:id="_lZT34tBAEeWhI4x9CGXwiQ" name="Read(Tester$initializationFlag$1).object" incoming="_lZT3wtBAEeWhI4x9CGXwiQ" type="_lZT3fdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT349BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT35NBAEeWhI4x9CGXwiQ" value="1"/>
              </object>
              <result xmi:id="_lZT35dBAEeWhI4x9CGXwiQ" name="Read(Tester$initializationFlag$1).result" outgoing="_lZT3w9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT35tBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT359BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT36NBAEeWhI4x9CGXwiQ" name="Call(ListSize)">
              <argument xmi:id="_lZT36dBAEeWhI4x9CGXwiQ" name="Call(ListSize).argument(list)" incoming="_lZT3w9BAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT36tBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT369BAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <result xmi:id="_lZT37NBAEeWhI4x9CGXwiQ" name="Call(ListSize).result(result)" outgoing="_lZT3xNBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT37dBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT37tBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT379BAEeWhI4x9CGXwiQ" name="Value(0)">
              <result xmi:id="_lZT38NBAEeWhI4x9CGXwiQ" name="Value(0).result" outgoing="_lZT3xdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT38dBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT38tBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_lZT389BAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT39NBAEeWhI4x9CGXwiQ" name="Test(Size==0)">
              <first xmi:id="_lZT39dBAEeWhI4x9CGXwiQ" name="Test(Size==0).first" incoming="_lZT3xNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT39tBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT399BAEeWhI4x9CGXwiQ" value="1"/>
              </first>
              <result xmi:id="_lZT3-NBAEeWhI4x9CGXwiQ" name="Test(Size==0).result" outgoing="_lZT3x9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3-dBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3-tBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <second xmi:id="_lZT3-9BAEeWhI4x9CGXwiQ" name="Test(Size==0).second" incoming="_lZT3xdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT3_NBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT3_dBAEeWhI4x9CGXwiQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_lZT3_tBAEeWhI4x9CGXwiQ" name="InitialNode" outgoing="_lZT3xtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_lZT3_9BAEeWhI4x9CGXwiQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_lZT3xtBAEeWhI4x9CGXwiQ _lZT3x9BAEeWhI4x9CGXwiQ" outgoing="_lZT3yNBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT3x9BAEeWhI4x9CGXwiQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_lZT4ANBAEeWhI4x9CGXwiQ" name="Tester$initialization$1" visibility="protected" method="_lZT3vtBAEeWhI4x9CGXwiQ"/>
        <ownedOperation xmi:id="_lZT4AdBAEeWhI4x9CGXwiQ" name="Tester" visibility="public" method="_lZT3gdBAEeWhI4x9CGXwiQ">
          <ownedParameter xmi:id="_lZT4AtBAEeWhI4x9CGXwiQ" name="" visibility="package" type="_lZT3fdBAEeWhI4x9CGXwiQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4A9BAEeWhI4x9CGXwiQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4BNBAEeWhI4x9CGXwiQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_lZT4BdBAEeWhI4x9CGXwiQ" name="destroy" visibility="public" method="_lZT3vNBAEeWhI4x9CGXwiQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_lZT4BtBAEeWhI4x9CGXwiQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_lZT4B9BAEeWhI4x9CGXwiQ" name="Continue" signal="_lZT4BtBAEeWhI4x9CGXwiQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_lZT4CNBAEeWhI4x9CGXwiQ" name="AssertEqual" visibility="public" node="_lZT4JdBAEeWhI4x9CGXwiQ _lZT4KdBAEeWhI4x9CGXwiQ _lZT4JtBAEeWhI4x9CGXwiQ _lZT4L9BAEeWhI4x9CGXwiQ _lZT4J9BAEeWhI4x9CGXwiQ _lZT4NdBAEeWhI4x9CGXwiQ _lZT4O9BAEeWhI4x9CGXwiQ _lZT4KNBAEeWhI4x9CGXwiQ" group="_lZT4KdBAEeWhI4x9CGXwiQ _lZT4L9BAEeWhI4x9CGXwiQ _lZT4NdBAEeWhI4x9CGXwiQ _lZT4O9BAEeWhI4x9CGXwiQ">
      <packageImport xmi:id="_lZT4CdBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_lZT4CtBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_lZT4C9BAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_lZT4DNBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_lZT4DdBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_lZT4DtBAEeWhI4x9CGXwiQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4D9BAEeWhI4x9CGXwiQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4ENBAEeWhI4x9CGXwiQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_lZT4EdBAEeWhI4x9CGXwiQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4EtBAEeWhI4x9CGXwiQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4E9BAEeWhI4x9CGXwiQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_lZT4FNBAEeWhI4x9CGXwiQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4FdBAEeWhI4x9CGXwiQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4FtBAEeWhI4x9CGXwiQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4F9BAEeWhI4x9CGXwiQ" target="_lZT4K9BAEeWhI4x9CGXwiQ" source="_lZT4JdBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4GNBAEeWhI4x9CGXwiQ" target="_lZT4MdBAEeWhI4x9CGXwiQ" source="_lZT4JtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4GdBAEeWhI4x9CGXwiQ" target="_lZT4N9BAEeWhI4x9CGXwiQ" source="_lZT4J9BAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4GtBAEeWhI4x9CGXwiQ" target="_lZT4YdBAEeWhI4x9CGXwiQ" source="_lZT4NNBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4G9BAEeWhI4x9CGXwiQ" target="_lZT4adBAEeWhI4x9CGXwiQ" source="_lZT4OtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4HNBAEeWhI4x9CGXwiQ" target="_lZT4oNBAEeWhI4x9CGXwiQ" source="_lZT4LtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4HdBAEeWhI4x9CGXwiQ" target="_lZT4xtBAEeWhI4x9CGXwiQ" source="_lZT4OtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4HtBAEeWhI4x9CGXwiQ" target="_lZT45NBAEeWhI4x9CGXwiQ" source="_lZT4OtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4H9BAEeWhI4x9CGXwiQ" target="_lZT5CtBAEeWhI4x9CGXwiQ" source="_lZT4OtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4INBAEeWhI4x9CGXwiQ" target="_lZT5KtBAEeWhI4x9CGXwiQ" source="_lZT4OtBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4IdBAEeWhI4x9CGXwiQ" target="_lZT4KNBAEeWhI4x9CGXwiQ" source="_lZT4KdBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4ItBAEeWhI4x9CGXwiQ" target="_lZT4KNBAEeWhI4x9CGXwiQ" source="_lZT4L9BAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4I9BAEeWhI4x9CGXwiQ" target="_lZT4KNBAEeWhI4x9CGXwiQ" source="_lZT4NdBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4JNBAEeWhI4x9CGXwiQ" target="_lZT4O9BAEeWhI4x9CGXwiQ" source="_lZT4KNBAEeWhI4x9CGXwiQ"/>
      <structuredNode xmi:id="_lZT4KdBAEeWhI4x9CGXwiQ" name="Node(Input(label))" outgoing="_lZT4IdBAEeWhI4x9CGXwiQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4KtBAEeWhI4x9CGXwiQ" target="_lZT4LtBAEeWhI4x9CGXwiQ" source="_lZT4K9BAEeWhI4x9CGXwiQ"/>
        <structuredNodeInput xmi:id="_lZT4K9BAEeWhI4x9CGXwiQ" name="Input(label)" incoming="_lZT4F9BAEeWhI4x9CGXwiQ" outgoing="_lZT4KtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4LNBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4LdBAEeWhI4x9CGXwiQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_lZT4LtBAEeWhI4x9CGXwiQ" name="Fork(label)" incoming="_lZT4KtBAEeWhI4x9CGXwiQ" outgoing="_lZT4HNBAEeWhI4x9CGXwiQ"/>
      </structuredNode>
      <structuredNode xmi:id="_lZT4L9BAEeWhI4x9CGXwiQ" name="Node(Input(value1))" outgoing="_lZT4ItBAEeWhI4x9CGXwiQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4MNBAEeWhI4x9CGXwiQ" target="_lZT4NNBAEeWhI4x9CGXwiQ" source="_lZT4MdBAEeWhI4x9CGXwiQ"/>
        <structuredNodeInput xmi:id="_lZT4MdBAEeWhI4x9CGXwiQ" name="Input(value1)" incoming="_lZT4GNBAEeWhI4x9CGXwiQ" outgoing="_lZT4MNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4MtBAEeWhI4x9CGXwiQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4M9BAEeWhI4x9CGXwiQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_lZT4NNBAEeWhI4x9CGXwiQ" name="Fork(value1)" incoming="_lZT4MNBAEeWhI4x9CGXwiQ" outgoing="_lZT4GtBAEeWhI4x9CGXwiQ"/>
      </structuredNode>
      <structuredNode xmi:id="_lZT4NdBAEeWhI4x9CGXwiQ" name="Node(Input(value2))" outgoing="_lZT4I9BAEeWhI4x9CGXwiQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4NtBAEeWhI4x9CGXwiQ" target="_lZT4OtBAEeWhI4x9CGXwiQ" source="_lZT4N9BAEeWhI4x9CGXwiQ"/>
        <structuredNodeInput xmi:id="_lZT4N9BAEeWhI4x9CGXwiQ" name="Input(value2)" incoming="_lZT4GdBAEeWhI4x9CGXwiQ" outgoing="_lZT4NtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4ONBAEeWhI4x9CGXwiQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4OdBAEeWhI4x9CGXwiQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_lZT4OtBAEeWhI4x9CGXwiQ" name="Fork(value2)" incoming="_lZT4NtBAEeWhI4x9CGXwiQ" outgoing="_lZT4G9BAEeWhI4x9CGXwiQ _lZT4HdBAEeWhI4x9CGXwiQ _lZT4HtBAEeWhI4x9CGXwiQ _lZT4H9BAEeWhI4x9CGXwiQ _lZT4INBAEeWhI4x9CGXwiQ"/>
      </structuredNode>
      <structuredNode xmi:id="_lZT4O9BAEeWhI4x9CGXwiQ" name="Body(AssertEqual)" incoming="_lZT4JNBAEeWhI4x9CGXwiQ">
        <node xmi:type="uml:ConditionalNode" xmi:id="_lZT4PNBAEeWhI4x9CGXwiQ" name="IfStatement@6844b248">
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4PdBAEeWhI4x9CGXwiQ" target="_lZT4tdBAEeWhI4x9CGXwiQ" source="_lZT4jNBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4PtBAEeWhI4x9CGXwiQ" target="_lZT5MdBAEeWhI4x9CGXwiQ" source="_lZT4tdBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT4P9BAEeWhI4x9CGXwiQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4QNBAEeWhI4x9CGXwiQ" target="_lZT4WNBAEeWhI4x9CGXwiQ" source="_lZT4YdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4QdBAEeWhI4x9CGXwiQ" target="_lZT4Y9BAEeWhI4x9CGXwiQ" source="_lZT4YdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4QtBAEeWhI4x9CGXwiQ" target="_lZT4XtBAEeWhI4x9CGXwiQ" source="_lZT4adBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4Q9BAEeWhI4x9CGXwiQ" target="_lZT4a9BAEeWhI4x9CGXwiQ" source="_lZT4adBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4RNBAEeWhI4x9CGXwiQ" target="_lZT4ctBAEeWhI4x9CGXwiQ" source="_lZT4ZtBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4RdBAEeWhI4x9CGXwiQ" target="_lZT4c9BAEeWhI4x9CGXwiQ" source="_lZT4btBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4RtBAEeWhI4x9CGXwiQ" target="_lZT4ddBAEeWhI4x9CGXwiQ" source="_lZT4ctBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4R9BAEeWhI4x9CGXwiQ" target="_lZT4fNBAEeWhI4x9CGXwiQ" source="_lZT4c9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4SNBAEeWhI4x9CGXwiQ" target="_lZT4gtBAEeWhI4x9CGXwiQ" source="_lZT4c9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4SdBAEeWhI4x9CGXwiQ" target="_lZT4V9BAEeWhI4x9CGXwiQ" source="_lZT4gtBAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4StBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4S9BAEeWhI4x9CGXwiQ" target="_lZT4dNBAEeWhI4x9CGXwiQ" source="_lZT4gtBAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4TNBAEeWhI4x9CGXwiQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4TdBAEeWhI4x9CGXwiQ" target="_lZT4g9BAEeWhI4x9CGXwiQ" source="_lZT4cdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4TtBAEeWhI4x9CGXwiQ" target="_lZT4g9BAEeWhI4x9CGXwiQ" source="_lZT4ctBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4T9BAEeWhI4x9CGXwiQ" target="_lZT4gtBAEeWhI4x9CGXwiQ" source="_lZT4g9BAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4UNBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4UdBAEeWhI4x9CGXwiQ" target="_lZT4e9BAEeWhI4x9CGXwiQ" source="_lZT4g9BAEeWhI4x9CGXwiQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4UtBAEeWhI4x9CGXwiQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4U9BAEeWhI4x9CGXwiQ" target="_lZT4hNBAEeWhI4x9CGXwiQ" source="_lZT4W9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4VNBAEeWhI4x9CGXwiQ" target="_lZT4hNBAEeWhI4x9CGXwiQ" source="_lZT4eNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4VdBAEeWhI4x9CGXwiQ" target="_lZT4hNBAEeWhI4x9CGXwiQ" source="_lZT4f9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4VtBAEeWhI4x9CGXwiQ" target="_lZT4htBAEeWhI4x9CGXwiQ" source="_lZT4hNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_lZT4V9BAEeWhI4x9CGXwiQ" name="Test(==)" incoming="_lZT4SdBAEeWhI4x9CGXwiQ">
              <first xmi:id="_lZT4WNBAEeWhI4x9CGXwiQ" name="Test(==).first" incoming="_lZT4QNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4WdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4WtBAEeWhI4x9CGXwiQ" value="1"/>
              </first>
              <result xmi:id="_lZT4W9BAEeWhI4x9CGXwiQ" name="Test(==).result" outgoing="_lZT4U9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4XNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4XdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <second xmi:id="_lZT4XtBAEeWhI4x9CGXwiQ" name="Test(==).second" incoming="_lZT4QtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4X9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4YNBAEeWhI4x9CGXwiQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT4YdBAEeWhI4x9CGXwiQ" name="Fork(Fork(value1))" incoming="_lZT4GtBAEeWhI4x9CGXwiQ" outgoing="_lZT4QNBAEeWhI4x9CGXwiQ _lZT4QdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4YtBAEeWhI4x9CGXwiQ" name="Call(NotEmpty)">
              <argument xmi:id="_lZT4Y9BAEeWhI4x9CGXwiQ" name="Call(NotEmpty).argument(seq)" incoming="_lZT4QdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4ZNBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4ZdBAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <result xmi:id="_lZT4ZtBAEeWhI4x9CGXwiQ" name="Call(NotEmpty).result()" outgoing="_lZT4RNBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4Z9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4aNBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT4adBAEeWhI4x9CGXwiQ" name="Fork(Fork(value2))" incoming="_lZT4G9BAEeWhI4x9CGXwiQ" outgoing="_lZT4QtBAEeWhI4x9CGXwiQ _lZT4Q9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4atBAEeWhI4x9CGXwiQ" name="Call(NotEmpty)">
              <argument xmi:id="_lZT4a9BAEeWhI4x9CGXwiQ" name="Call(NotEmpty).argument(seq)" incoming="_lZT4Q9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4bNBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4bdBAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <result xmi:id="_lZT4btBAEeWhI4x9CGXwiQ" name="Call(NotEmpty).result()" outgoing="_lZT4RdBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4b9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4cNBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_lZT4cdBAEeWhI4x9CGXwiQ" name="Initial(Test(==))" outgoing="_lZT4TdBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT4ctBAEeWhI4x9CGXwiQ" name="Fork(Call(NotEmpty).result())" incoming="_lZT4RNBAEeWhI4x9CGXwiQ" outgoing="_lZT4RtBAEeWhI4x9CGXwiQ _lZT4TtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT4c9BAEeWhI4x9CGXwiQ" name="Fork(Call(NotEmpty).result())" incoming="_lZT4RdBAEeWhI4x9CGXwiQ" outgoing="_lZT4R9BAEeWhI4x9CGXwiQ _lZT4SNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4dNBAEeWhI4x9CGXwiQ" name="Call(Not)" incoming="_lZT4S9BAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT4ddBAEeWhI4x9CGXwiQ" name="Call(Not).argument(x)" incoming="_lZT4RtBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4dtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4d9BAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT4eNBAEeWhI4x9CGXwiQ" name="Call(Not).result(result)" outgoing="_lZT4VNBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4edBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4etBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4e9BAEeWhI4x9CGXwiQ" name="Call(Not)" incoming="_lZT4UdBAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT4fNBAEeWhI4x9CGXwiQ" name="Call(Not).argument(x)" incoming="_lZT4R9BAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4fdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4ftBAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT4f9BAEeWhI4x9CGXwiQ" name="Call(Not).result(result)" outgoing="_lZT4VdBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4gNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4gdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_lZT4gtBAEeWhI4x9CGXwiQ" name="Decision(Call(NotEmpty).result())" incoming="_lZT4SNBAEeWhI4x9CGXwiQ _lZT4T9BAEeWhI4x9CGXwiQ" outgoing="_lZT4SdBAEeWhI4x9CGXwiQ _lZT4S9BAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT4SNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_lZT4g9BAEeWhI4x9CGXwiQ" name="Decision(Call(NotEmpty).result())" incoming="_lZT4TdBAEeWhI4x9CGXwiQ _lZT4TtBAEeWhI4x9CGXwiQ" outgoing="_lZT4T9BAEeWhI4x9CGXwiQ _lZT4UdBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT4TtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_lZT4hNBAEeWhI4x9CGXwiQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_lZT4U9BAEeWhI4x9CGXwiQ _lZT4VNBAEeWhI4x9CGXwiQ _lZT4VdBAEeWhI4x9CGXwiQ" outgoing="_lZT4VtBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4hdBAEeWhI4x9CGXwiQ" name="Call(Not)">
              <argument xmi:id="_lZT4htBAEeWhI4x9CGXwiQ" name="Call(Not).argument(x)" incoming="_lZT4VtBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4h9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4iNBAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT4idBAEeWhI4x9CGXwiQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4itBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4i9BAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT4jNBAEeWhI4x9CGXwiQ" name="ExpressionStatement@e7523ed" outgoing="_lZT4PdBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4jdBAEeWhI4x9CGXwiQ" target="_lZT4kNBAEeWhI4x9CGXwiQ" source="_lZT4stBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4jtBAEeWhI4x9CGXwiQ" target="_lZT4j9BAEeWhI4x9CGXwiQ" source="_lZT4k9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4j9BAEeWhI4x9CGXwiQ" name="Call(Write)" incoming="_lZT4jtBAEeWhI4x9CGXwiQ" behavior="_lZT5SNBAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT4kNBAEeWhI4x9CGXwiQ" name="Call(Write).argument(value)" incoming="_lZT4jdBAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4kdBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4ktBAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT4k9BAEeWhI4x9CGXwiQ" name="Tuple@1d1f88e8" outgoing="_lZT4jtBAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4lNBAEeWhI4x9CGXwiQ" target="_lZT4ndBAEeWhI4x9CGXwiQ" source="_lZT4mNBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4ldBAEeWhI4x9CGXwiQ" target="_lZT4rNBAEeWhI4x9CGXwiQ" source="_lZT4o9BAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4ltBAEeWhI4x9CGXwiQ" target="_lZT4r9BAEeWhI4x9CGXwiQ" source="_lZT4p9BAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT4l9BAEeWhI4x9CGXwiQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_lZT4mNBAEeWhI4x9CGXwiQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_lZT4lNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4mdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4mtBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_lZT4m9BAEeWhI4x9CGXwiQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4nNBAEeWhI4x9CGXwiQ" name="Call(Concat)">
                <argument xmi:id="_lZT4ndBAEeWhI4x9CGXwiQ" name="Call(Concat).argument(x)" incoming="_lZT4lNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4ntBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4n9BAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZT4oNBAEeWhI4x9CGXwiQ" name="Call(Concat).argument(y)" incoming="_lZT4HNBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4odBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4otBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZT4o9BAEeWhI4x9CGXwiQ" name="Call(Concat).result(result)" outgoing="_lZT4ldBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4pNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4pdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT4ptBAEeWhI4x9CGXwiQ" name="Value(&quot;==&quot;)">
                <result xmi:id="_lZT4p9BAEeWhI4x9CGXwiQ" name="Value(&quot;==&quot;).result" outgoing="_lZT4ltBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4qNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4qdBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_lZT4qtBAEeWhI4x9CGXwiQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4q9BAEeWhI4x9CGXwiQ" name="Call(Concat)">
                <argument xmi:id="_lZT4rNBAEeWhI4x9CGXwiQ" name="Call(Concat).argument(x)" incoming="_lZT4ldBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4rdBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4rtBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <argument xmi:id="_lZT4r9BAEeWhI4x9CGXwiQ" name="Call(Concat).argument(y)" incoming="_lZT4ltBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4sNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4sdBAEeWhI4x9CGXwiQ" value="1"/>
                </argument>
                <result xmi:id="_lZT4stBAEeWhI4x9CGXwiQ" name="Call(Concat).result(result)" outgoing="_lZT4jdBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4s9BAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4tNBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT4tdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@3f0f5be6" incoming="_lZT4PdBAEeWhI4x9CGXwiQ" outgoing="_lZT4PtBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4ttBAEeWhI4x9CGXwiQ" target="_lZT4udBAEeWhI4x9CGXwiQ" source="_lZT5MNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4t9BAEeWhI4x9CGXwiQ" target="_lZT4uNBAEeWhI4x9CGXwiQ" source="_lZT4vNBAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4uNBAEeWhI4x9CGXwiQ" name="Call(Write)" incoming="_lZT4t9BAEeWhI4x9CGXwiQ" behavior="_lZT5SNBAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT4udBAEeWhI4x9CGXwiQ" name="Call(Write).argument(value)" incoming="_lZT4ttBAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4utBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4u9BAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT4vNBAEeWhI4x9CGXwiQ" name="Tuple@1668383" outgoing="_lZT4t9BAEeWhI4x9CGXwiQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4vdBAEeWhI4x9CGXwiQ" target="_lZT5L9BAEeWhI4x9CGXwiQ" source="_lZT5LtBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4vtBAEeWhI4x9CGXwiQ" target="_lZT5L9BAEeWhI4x9CGXwiQ" source="_lZT4ydBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4v9BAEeWhI4x9CGXwiQ" target="_lZT4zNBAEeWhI4x9CGXwiQ" source="_lZT5L9BAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4wNBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_lZT4wdBAEeWhI4x9CGXwiQ" target="_lZT41tBAEeWhI4x9CGXwiQ" source="_lZT5L9BAEeWhI4x9CGXwiQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4wtBAEeWhI4x9CGXwiQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4w9BAEeWhI4x9CGXwiQ" target="_lZT5MNBAEeWhI4x9CGXwiQ" source="_lZT4ztBAEeWhI4x9CGXwiQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4xNBAEeWhI4x9CGXwiQ" target="_lZT5MNBAEeWhI4x9CGXwiQ" source="_lZT44NBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT4xdBAEeWhI4x9CGXwiQ" name="Call(IsEmpty)">
                <argument xmi:id="_lZT4xtBAEeWhI4x9CGXwiQ" name="Call(IsEmpty).argument(seq)" incoming="_lZT4HdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4x9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4yNBAEeWhI4x9CGXwiQ" value="*"/>
                </argument>
                <result xmi:id="_lZT4ydBAEeWhI4x9CGXwiQ" name="Call(IsEmpty).result()" outgoing="_lZT4vtBAEeWhI4x9CGXwiQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4ytBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT4y9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT4zNBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@3a1acac4.operand2" incoming="_lZT4v9BAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4zdBAEeWhI4x9CGXwiQ" target="_lZT4ztBAEeWhI4x9CGXwiQ" source="_lZT40tBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZT4ztBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@3a1acac4.operand2.result" incoming="_lZT4zdBAEeWhI4x9CGXwiQ" outgoing="_lZT4w9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT4z9BAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT40NBAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT40dBAEeWhI4x9CGXwiQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_lZT40tBAEeWhI4x9CGXwiQ" name="Value(&quot;null&quot;).result" outgoing="_lZT4zdBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT409BAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT41NBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_lZT41dBAEeWhI4x9CGXwiQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT41tBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@3a1acac4.operand3" incoming="_lZT4wdBAEeWhI4x9CGXwiQ">
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZT419BAEeWhI4x9CGXwiQ" target="_lZT5LNBAEeWhI4x9CGXwiQ" source="_lZT5K9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT42NBAEeWhI4x9CGXwiQ" target="_lZT5LNBAEeWhI4x9CGXwiQ" source="_lZT459BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZT42dBAEeWhI4x9CGXwiQ" target="_lZT46tBAEeWhI4x9CGXwiQ" source="_lZT5LNBAEeWhI4x9CGXwiQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT42tBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_lZT429BAEeWhI4x9CGXwiQ" target="_lZT5JdBAEeWhI4x9CGXwiQ" source="_lZT5LNBAEeWhI4x9CGXwiQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT43NBAEeWhI4x9CGXwiQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT43dBAEeWhI4x9CGXwiQ" target="_lZT5LdBAEeWhI4x9CGXwiQ" source="_lZT48NBAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT43tBAEeWhI4x9CGXwiQ" target="_lZT5LdBAEeWhI4x9CGXwiQ" source="_lZT5J9BAEeWhI4x9CGXwiQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT439BAEeWhI4x9CGXwiQ" target="_lZT44NBAEeWhI4x9CGXwiQ" source="_lZT5LdBAEeWhI4x9CGXwiQ"/>
                <structuredNodeOutput xmi:id="_lZT44NBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@3a1acac4.operand3.result" incoming="_lZT439BAEeWhI4x9CGXwiQ" outgoing="_lZT4xNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT44dBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT44tBAEeWhI4x9CGXwiQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_lZT449BAEeWhI4x9CGXwiQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_lZT45NBAEeWhI4x9CGXwiQ" name="ReadIsClassifiedObject(String).object" incoming="_lZT4HtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT45dBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT45tBAEeWhI4x9CGXwiQ" value="1"/>
                  </object>
                  <result xmi:id="_lZT459BAEeWhI4x9CGXwiQ" name="ReadIsClassifiedObject(String).result" outgoing="_lZT42NBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT46NBAEeWhI4x9CGXwiQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT46dBAEeWhI4x9CGXwiQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT46tBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@4009cc60.operand2" incoming="_lZT42dBAEeWhI4x9CGXwiQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT469BAEeWhI4x9CGXwiQ" target="_lZT5DdBAEeWhI4x9CGXwiQ" source="_lZT49NBAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT47NBAEeWhI4x9CGXwiQ" target="_lZT5ENBAEeWhI4x9CGXwiQ" source="_lZT5C9BAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT47dBAEeWhI4x9CGXwiQ" target="_lZT5HNBAEeWhI4x9CGXwiQ" source="_lZT5E9BAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT47tBAEeWhI4x9CGXwiQ" target="_lZT5H9BAEeWhI4x9CGXwiQ" source="_lZT5F9BAEeWhI4x9CGXwiQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT479BAEeWhI4x9CGXwiQ" target="_lZT48NBAEeWhI4x9CGXwiQ" source="_lZT5ItBAEeWhI4x9CGXwiQ"/>
                  <structuredNodeOutput xmi:id="_lZT48NBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@4009cc60.operand2.result" incoming="_lZT479BAEeWhI4x9CGXwiQ" outgoing="_lZT43dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT48dBAEeWhI4x9CGXwiQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT48tBAEeWhI4x9CGXwiQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT489BAEeWhI4x9CGXwiQ" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_lZT49NBAEeWhI4x9CGXwiQ" name="Value(&quot;&quot;&quot;).result" outgoing="_lZT469BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT49dBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT49tBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_lZT499BAEeWhI4x9CGXwiQ" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_lZT4-NBAEeWhI4x9CGXwiQ" name="CastExpression@5ff96743" mode="parallel" outputElement="_lZT5C9BAEeWhI4x9CGXwiQ" inputElement="_lZT5CtBAEeWhI4x9CGXwiQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4-dBAEeWhI4x9CGXwiQ" target="_lZT5AtBAEeWhI4x9CGXwiQ" source="_lZT5CNBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4-tBAEeWhI4x9CGXwiQ" target="_lZT5CdBAEeWhI4x9CGXwiQ" source="_lZT5CNBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4-9BAEeWhI4x9CGXwiQ" target="_lZT5CdBAEeWhI4x9CGXwiQ" source="_lZT5BdBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4_NBAEeWhI4x9CGXwiQ" target="_lZT5ANBAEeWhI4x9CGXwiQ" source="_lZT5CdBAEeWhI4x9CGXwiQ">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_lZT4_dBAEeWhI4x9CGXwiQ" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4_tBAEeWhI4x9CGXwiQ" target="_lZT5CNBAEeWhI4x9CGXwiQ" source="_lZT5CtBAEeWhI4x9CGXwiQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT4_9BAEeWhI4x9CGXwiQ" target="_lZT5C9BAEeWhI4x9CGXwiQ" source="_lZT5ANBAEeWhI4x9CGXwiQ"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_lZT5ANBAEeWhI4x9CGXwiQ" name="Merge(CastExpression@5ff96743.operand)" incoming="_lZT4_NBAEeWhI4x9CGXwiQ" outgoing="_lZT4_9BAEeWhI4x9CGXwiQ"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_lZT5AdBAEeWhI4x9CGXwiQ" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_lZT5AtBAEeWhI4x9CGXwiQ" name="ReadIsClassifiedObject(String).object" incoming="_lZT4-dBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5A9BAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5BNBAEeWhI4x9CGXwiQ" value="1"/>
                      </object>
                      <result xmi:id="_lZT5BdBAEeWhI4x9CGXwiQ" name="ReadIsClassifiedObject(String).result" outgoing="_lZT4-9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5BtBAEeWhI4x9CGXwiQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5B9BAEeWhI4x9CGXwiQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_lZT5CNBAEeWhI4x9CGXwiQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_lZT4_tBAEeWhI4x9CGXwiQ" outgoing="_lZT4-dBAEeWhI4x9CGXwiQ _lZT4-tBAEeWhI4x9CGXwiQ"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_lZT5CdBAEeWhI4x9CGXwiQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_lZT4-tBAEeWhI4x9CGXwiQ _lZT4-9BAEeWhI4x9CGXwiQ" outgoing="_lZT4_NBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT4-9BAEeWhI4x9CGXwiQ"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_lZT5CtBAEeWhI4x9CGXwiQ" name="CastExpression@5ff96743.inputElement" incoming="_lZT4H9BAEeWhI4x9CGXwiQ" outgoing="_lZT4_tBAEeWhI4x9CGXwiQ" regionAsInput="_lZT4-NBAEeWhI4x9CGXwiQ"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_lZT5C9BAEeWhI4x9CGXwiQ" name="CastExpression@5ff96743.outputElement" incoming="_lZT4_9BAEeWhI4x9CGXwiQ" outgoing="_lZT47NBAEeWhI4x9CGXwiQ" regionAsOutput="_lZT4-NBAEeWhI4x9CGXwiQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT5DNBAEeWhI4x9CGXwiQ" name="Call(Concat)">
                    <argument xmi:id="_lZT5DdBAEeWhI4x9CGXwiQ" name="Call(Concat).argument(x)" incoming="_lZT469BAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5DtBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5D9BAEeWhI4x9CGXwiQ" value="1"/>
                    </argument>
                    <argument xmi:id="_lZT5ENBAEeWhI4x9CGXwiQ" name="Call(Concat).argument(y)" incoming="_lZT47NBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5EdBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5EtBAEeWhI4x9CGXwiQ" value="1"/>
                    </argument>
                    <result xmi:id="_lZT5E9BAEeWhI4x9CGXwiQ" name="Call(Concat).result(result)" outgoing="_lZT47dBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5FNBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5FdBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT5FtBAEeWhI4x9CGXwiQ" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_lZT5F9BAEeWhI4x9CGXwiQ" name="Value(&quot;&quot;&quot;).result" outgoing="_lZT47tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5GNBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5GdBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_lZT5GtBAEeWhI4x9CGXwiQ" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT5G9BAEeWhI4x9CGXwiQ" name="Call(Concat)">
                    <argument xmi:id="_lZT5HNBAEeWhI4x9CGXwiQ" name="Call(Concat).argument(x)" incoming="_lZT47dBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5HdBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5HtBAEeWhI4x9CGXwiQ" value="1"/>
                    </argument>
                    <argument xmi:id="_lZT5H9BAEeWhI4x9CGXwiQ" name="Call(Concat).argument(y)" incoming="_lZT47tBAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5INBAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5IdBAEeWhI4x9CGXwiQ" value="1"/>
                    </argument>
                    <result xmi:id="_lZT5ItBAEeWhI4x9CGXwiQ" name="Call(Concat).result(result)" outgoing="_lZT479BAEeWhI4x9CGXwiQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5I9BAEeWhI4x9CGXwiQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5JNBAEeWhI4x9CGXwiQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT5JdBAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@4009cc60.operand3" incoming="_lZT429BAEeWhI4x9CGXwiQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5JtBAEeWhI4x9CGXwiQ" target="_lZT5J9BAEeWhI4x9CGXwiQ" source="_lZT5KtBAEeWhI4x9CGXwiQ"/>
                  <structuredNodeOutput xmi:id="_lZT5J9BAEeWhI4x9CGXwiQ" name="ConditionalTestExpression@4009cc60.operand3.result" incoming="_lZT5JtBAEeWhI4x9CGXwiQ" outgoing="_lZT43tBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5KNBAEeWhI4x9CGXwiQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5KdBAEeWhI4x9CGXwiQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_lZT5KtBAEeWhI4x9CGXwiQ" name="Merge(Fork(value2))" incoming="_lZT4INBAEeWhI4x9CGXwiQ" outgoing="_lZT5JtBAEeWhI4x9CGXwiQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_lZT5K9BAEeWhI4x9CGXwiQ" name="Initial(ConditionalTestExpression@4009cc60)" outgoing="_lZT419BAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_lZT5LNBAEeWhI4x9CGXwiQ" name="Decision(ConditionalTestExpression@4009cc60)" incoming="_lZT419BAEeWhI4x9CGXwiQ _lZT42NBAEeWhI4x9CGXwiQ" outgoing="_lZT42dBAEeWhI4x9CGXwiQ _lZT429BAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT42NBAEeWhI4x9CGXwiQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_lZT5LdBAEeWhI4x9CGXwiQ" name="Merge(ConditionalTestExpression@4009cc60.result)" incoming="_lZT43dBAEeWhI4x9CGXwiQ _lZT43tBAEeWhI4x9CGXwiQ" outgoing="_lZT439BAEeWhI4x9CGXwiQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_lZT5LtBAEeWhI4x9CGXwiQ" name="Initial(ConditionalTestExpression@3a1acac4)" outgoing="_lZT4vdBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_lZT5L9BAEeWhI4x9CGXwiQ" name="Decision(ConditionalTestExpression@3a1acac4)" incoming="_lZT4vdBAEeWhI4x9CGXwiQ _lZT4vtBAEeWhI4x9CGXwiQ" outgoing="_lZT4v9BAEeWhI4x9CGXwiQ _lZT4wdBAEeWhI4x9CGXwiQ" decisionInputFlow="_lZT4vtBAEeWhI4x9CGXwiQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_lZT5MNBAEeWhI4x9CGXwiQ" name="Merge(ConditionalTestExpression@3a1acac4.result)" incoming="_lZT4w9BAEeWhI4x9CGXwiQ _lZT4xNBAEeWhI4x9CGXwiQ" outgoing="_lZT4ttBAEeWhI4x9CGXwiQ"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT5MdBAEeWhI4x9CGXwiQ" name="ExpressionStatement@76518fa8" incoming="_lZT4PtBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5MtBAEeWhI4x9CGXwiQ" target="_lZT5NdBAEeWhI4x9CGXwiQ" source="_lZT5PdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT5M9BAEeWhI4x9CGXwiQ" target="_lZT5NNBAEeWhI4x9CGXwiQ" source="_lZT5O9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT5NNBAEeWhI4x9CGXwiQ" name="Call(WriteLine)" incoming="_lZT5M9BAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT5NdBAEeWhI4x9CGXwiQ" name="Call(WriteLine).argument(value)" incoming="_lZT5MtBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5NtBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5N9BAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT5ONBAEeWhI4x9CGXwiQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5OdBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5OtBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT5O9BAEeWhI4x9CGXwiQ" name="Tuple@5b8927d0" outgoing="_lZT5M9BAEeWhI4x9CGXwiQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT5PNBAEeWhI4x9CGXwiQ" name="Value(&quot;&quot;)">
                <result xmi:id="_lZT5PdBAEeWhI4x9CGXwiQ" name="Value(&quot;&quot;).result" outgoing="_lZT5MtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5PtBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5P9BAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_lZT5QNBAEeWhI4x9CGXwiQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT5QdBAEeWhI4x9CGXwiQ" name="Value(true)">
            <result xmi:id="_lZT5QtBAEeWhI4x9CGXwiQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5Q9BAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5RNBAEeWhI4x9CGXwiQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_lZT5RdBAEeWhI4x9CGXwiQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_lZT5RtBAEeWhI4x9CGXwiQ" body="_lZT4jNBAEeWhI4x9CGXwiQ _lZT4tdBAEeWhI4x9CGXwiQ _lZT5MdBAEeWhI4x9CGXwiQ" decider="_lZT4idBAEeWhI4x9CGXwiQ" successorClause="_lZT5R9BAEeWhI4x9CGXwiQ" test="_lZT4P9BAEeWhI4x9CGXwiQ"/>
          <clause xmi:id="_lZT5R9BAEeWhI4x9CGXwiQ" decider="_lZT5QtBAEeWhI4x9CGXwiQ" predecessorClause="_lZT5RtBAEeWhI4x9CGXwiQ" test="_lZT5QdBAEeWhI4x9CGXwiQ"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT4JdBAEeWhI4x9CGXwiQ" name="Input(label)" outgoing="_lZT4F9BAEeWhI4x9CGXwiQ" parameter="_lZT4DtBAEeWhI4x9CGXwiQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT4JtBAEeWhI4x9CGXwiQ" name="Input(value1)" outgoing="_lZT4GNBAEeWhI4x9CGXwiQ" parameter="_lZT4EdBAEeWhI4x9CGXwiQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT4J9BAEeWhI4x9CGXwiQ" name="Input(value2)" outgoing="_lZT4GdBAEeWhI4x9CGXwiQ" parameter="_lZT4FNBAEeWhI4x9CGXwiQ"/>
      <node xmi:type="uml:JoinNode" xmi:id="_lZT4KNBAEeWhI4x9CGXwiQ" name="Join(Input))" incoming="_lZT4IdBAEeWhI4x9CGXwiQ _lZT4ItBAEeWhI4x9CGXwiQ _lZT4I9BAEeWhI4x9CGXwiQ" outgoing="_lZT4JNBAEeWhI4x9CGXwiQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_lZT5SNBAEeWhI4x9CGXwiQ" name="Write" visibility="public" node="_lZT5VdBAEeWhI4x9CGXwiQ _lZT5V9BAEeWhI4x9CGXwiQ _lZT5XdBAEeWhI4x9CGXwiQ _lZT5VtBAEeWhI4x9CGXwiQ" group="_lZT5V9BAEeWhI4x9CGXwiQ _lZT5XdBAEeWhI4x9CGXwiQ">
      <packageImport xmi:id="_lZT5SdBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_lZT5StBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_lZT5S9BAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_lZT5TNBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_lZT5TdBAEeWhI4x9CGXwiQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_lZT5TtBAEeWhI4x9CGXwiQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5T9BAEeWhI4x9CGXwiQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5UNBAEeWhI4x9CGXwiQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5UdBAEeWhI4x9CGXwiQ" target="_lZT5WdBAEeWhI4x9CGXwiQ" source="_lZT5VdBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5UtBAEeWhI4x9CGXwiQ" target="_lZT5ZNBAEeWhI4x9CGXwiQ" source="_lZT5XNBAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_lZT5U9BAEeWhI4x9CGXwiQ" target="_lZT5VtBAEeWhI4x9CGXwiQ" source="_lZT5V9BAEeWhI4x9CGXwiQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_lZT5VNBAEeWhI4x9CGXwiQ" target="_lZT5XdBAEeWhI4x9CGXwiQ" source="_lZT5VtBAEeWhI4x9CGXwiQ"/>
      <structuredNode xmi:id="_lZT5V9BAEeWhI4x9CGXwiQ" name="Node(Input(value))" outgoing="_lZT5U9BAEeWhI4x9CGXwiQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5WNBAEeWhI4x9CGXwiQ" target="_lZT5XNBAEeWhI4x9CGXwiQ" source="_lZT5WdBAEeWhI4x9CGXwiQ"/>
        <structuredNodeInput xmi:id="_lZT5WdBAEeWhI4x9CGXwiQ" name="Input(value)" incoming="_lZT5UdBAEeWhI4x9CGXwiQ" outgoing="_lZT5WNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5WtBAEeWhI4x9CGXwiQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5W9BAEeWhI4x9CGXwiQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_lZT5XNBAEeWhI4x9CGXwiQ" name="Fork(value)" incoming="_lZT5WNBAEeWhI4x9CGXwiQ" outgoing="_lZT5UtBAEeWhI4x9CGXwiQ"/>
      </structuredNode>
      <structuredNode xmi:id="_lZT5XdBAEeWhI4x9CGXwiQ" name="Body(Write)" incoming="_lZT5VNBAEeWhI4x9CGXwiQ">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT5XtBAEeWhI4x9CGXwiQ" name="ExpressionStatement@4873c552">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5X9BAEeWhI4x9CGXwiQ" target="_lZT5cdBAEeWhI4x9CGXwiQ" source="_lZT5ftBAEeWhI4x9CGXwiQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_lZT5YNBAEeWhI4x9CGXwiQ" target="_lZT5YdBAEeWhI4x9CGXwiQ" source="_lZT5ctBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_lZT5YdBAEeWhI4x9CGXwiQ" name="Collect(Call(write))" incoming="_lZT5YNBAEeWhI4x9CGXwiQ" mode="parallel" inputElement="_lZT5cdBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5YtBAEeWhI4x9CGXwiQ" target="_lZT5aNBAEeWhI4x9CGXwiQ" source="_lZT5ZNBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5Y9BAEeWhI4x9CGXwiQ" target="_lZT5btBAEeWhI4x9CGXwiQ" source="_lZT5cdBAEeWhI4x9CGXwiQ"/>
            <structuredNodeInput xmi:id="_lZT5ZNBAEeWhI4x9CGXwiQ" name="Collect(Call(write)).input(Fork(value))" incoming="_lZT5UtBAEeWhI4x9CGXwiQ" outgoing="_lZT5YtBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5ZdBAEeWhI4x9CGXwiQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5ZtBAEeWhI4x9CGXwiQ" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_lZT5Z9BAEeWhI4x9CGXwiQ" name="Call(write)">
              <argument xmi:id="_lZT5aNBAEeWhI4x9CGXwiQ" name="Call(write).argument(value)" incoming="_lZT5YtBAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5adBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5atBAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT5a9BAEeWhI4x9CGXwiQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5bNBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5bdBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_lZT5btBAEeWhI4x9CGXwiQ" name="Call(write).target" incoming="_lZT5Y9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5b9BAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5cNBAEeWhI4x9CGXwiQ" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_lZT5cdBAEeWhI4x9CGXwiQ" name="Collect(Call(write)).inputElement" incoming="_lZT5X9BAEeWhI4x9CGXwiQ" outgoing="_lZT5Y9BAEeWhI4x9CGXwiQ" regionAsInput="_lZT5YdBAEeWhI4x9CGXwiQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT5ctBAEeWhI4x9CGXwiQ" name="Feature(Call(At).result())" outgoing="_lZT5YNBAEeWhI4x9CGXwiQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5c9BAEeWhI4x9CGXwiQ" target="_lZT5eNBAEeWhI4x9CGXwiQ" source="_lZT5g9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5dNBAEeWhI4x9CGXwiQ" target="_lZT5i9BAEeWhI4x9CGXwiQ" source="_lZT5h9BAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_lZT5ddBAEeWhI4x9CGXwiQ" target="_lZT5d9BAEeWhI4x9CGXwiQ" source="_lZT5gdBAEeWhI4x9CGXwiQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_lZT5dtBAEeWhI4x9CGXwiQ" target="_lZT5e9BAEeWhI4x9CGXwiQ" source="_lZT5i9BAEeWhI4x9CGXwiQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_lZT5d9BAEeWhI4x9CGXwiQ" name="Call(At)" incoming="_lZT5ddBAEeWhI4x9CGXwiQ">
              <argument xmi:id="_lZT5eNBAEeWhI4x9CGXwiQ" name="Call(At).argument(seq)" incoming="_lZT5c9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5edBAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5etBAEeWhI4x9CGXwiQ" value="*"/>
              </argument>
              <argument xmi:id="_lZT5e9BAEeWhI4x9CGXwiQ" name="Call(At).argument(index)" incoming="_lZT5dtBAEeWhI4x9CGXwiQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5fNBAEeWhI4x9CGXwiQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5fdBAEeWhI4x9CGXwiQ" value="1"/>
              </argument>
              <result xmi:id="_lZT5ftBAEeWhI4x9CGXwiQ" name="Call(At).result()" outgoing="_lZT5X9BAEeWhI4x9CGXwiQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5f9BAEeWhI4x9CGXwiQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5gNBAEeWhI4x9CGXwiQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_lZT5gdBAEeWhI4x9CGXwiQ" name="Tuple@39589aa" outgoing="_lZT5ddBAEeWhI4x9CGXwiQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_lZT5gtBAEeWhI4x9CGXwiQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_lZT5g9BAEeWhI4x9CGXwiQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_lZT5c9BAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5hNBAEeWhI4x9CGXwiQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5hdBAEeWhI4x9CGXwiQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_lZT5htBAEeWhI4x9CGXwiQ" name="Value(1)">
                <result xmi:id="_lZT5h9BAEeWhI4x9CGXwiQ" name="Value(1).result" outgoing="_lZT5dNBAEeWhI4x9CGXwiQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lZT5iNBAEeWhI4x9CGXwiQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lZT5idBAEeWhI4x9CGXwiQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_lZT5itBAEeWhI4x9CGXwiQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_lZT5i9BAEeWhI4x9CGXwiQ" name="Fork(Call(At).argument(index))" incoming="_lZT5dNBAEeWhI4x9CGXwiQ" outgoing="_lZT5dtBAEeWhI4x9CGXwiQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_lZT5VdBAEeWhI4x9CGXwiQ" name="Input(value)" outgoing="_lZT5UdBAEeWhI4x9CGXwiQ" parameter="_lZT5TtBAEeWhI4x9CGXwiQ"/>
      <node xmi:type="uml:JoinNode" xmi:id="_lZT5VtBAEeWhI4x9CGXwiQ" name="Join(Input))" incoming="_lZT5U9BAEeWhI4x9CGXwiQ" outgoing="_lZT5VNBAEeWhI4x9CGXwiQ"/>
    </packagedElement>
    <profileApplication xmi:id="_lZT5jNBAEeWhI4x9CGXwiQ">
      <eAnnotations xmi:id="_lZT5jdBAEeWhI4x9CGXwiQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_lZUdENBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZTSWtBAEeWhI4x9CGXwiQ"/>
  <l2:Destroy xmi:id="_lZUdEdBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZT3dNBAEeWhI4x9CGXwiQ"/>
  <l2:Create xmi:id="_lZUdEtBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZT2etBAEeWhI4x9CGXwiQ"/>
  <l2:Create xmi:id="_lZUdE9BAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZTSVtBAEeWhI4x9CGXwiQ"/>
  <l2:Create xmi:id="_lZUdFNBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZT4AdBAEeWhI4x9CGXwiQ"/>
  <l2:Destroy xmi:id="_lZUdFdBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZT2ftBAEeWhI4x9CGXwiQ"/>
  <l2:Create xmi:id="_lZUdFtBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZT3dtBAEeWhI4x9CGXwiQ"/>
  <l2:Destroy xmi:id="_lZUdF9BAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZT4BdBAEeWhI4x9CGXwiQ"/>
  <l2:Destroy xmi:id="_lZUdGNBAEeWhI4x9CGXwiQ" base_BehavioralFeature="_lZTSgNBAEeWhI4x9CGXwiQ"/>
</xmi:XMI>

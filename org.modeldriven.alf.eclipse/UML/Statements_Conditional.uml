<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_-LEkII52EeKPK79J7cDCvg" name="Model">
    <packagedElement xmi:type="uml:Class" xmi:id="_-LEkIY52EeKPK79J7cDCvg" name="Statements_Conditional" classifierBehavior="_-LEkKo52EeKPK79J7cDCvg" isActive="true">
      <packageImport xmi:id="_-LEkIo52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_-LEkI452EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_-LEkJI52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_-LEkJY52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_-LEkJo52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_-LEkJ452EeKPK79J7cDCvg" name="Statements_Conditional$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkKI52EeKPK79J7cDCvg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkKY52EeKPK79J7cDCvg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LEkKo52EeKPK79J7cDCvg" name="Statements_Conditional$classifierBehavior$1" visibility="private" isActive="true" group="_-LEkK452EeKPK79J7cDCvg" node="_-LEkK452EeKPK79J7cDCvg">
        <structuredNode xmi:id="_-LEkK452EeKPK79J7cDCvg" name="Body(Statements_Conditional$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LEkLI52EeKPK79J7cDCvg" name="ExpressionStatement@2c432405" outgoing="_-LFylY52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallOperationAction" xmi:id="_-LEkLY52EeKPK79J7cDCvg" name="Call(test)" operation="_-LQKj452EeKPK79J7cDCvg">
              <result xmi:id="_-LEkLo52EeKPK79J7cDCvg" name="Call(test).result(condition1)" outgoing="_-LFLMY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkL452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkMI52EeKPK79J7cDCvg" value="1"/>
              </result>
              <result xmi:id="_-LEkMY52EeKPK79J7cDCvg" name="Call(test).result(condition2)" outgoing="_-LFLMo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkMo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkM452EeKPK79J7cDCvg" value="1"/>
              </result>
              <result xmi:id="_-LEkNI52EeKPK79J7cDCvg" name="Call(test).result(condition3)" outgoing="_-LFLM452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkNY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkNo52EeKPK79J7cDCvg" value="1"/>
              </result>
              <result xmi:id="_-LEkN452EeKPK79J7cDCvg" name="Call(test).result(year)" outgoing="_-LFLNI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkOI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkOY52EeKPK79J7cDCvg" value="1"/>
              </result>
              <result xmi:id="_-LEkOo52EeKPK79J7cDCvg" name="Call(test).result(month)" outgoing="_-LFLNY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkO452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkPI52EeKPK79J7cDCvg" value="1"/>
              </result>
              <result xmi:id="_-LEkPY52EeKPK79J7cDCvg" name="Call(test).result(numDays)" outgoing="_-LFLNo52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkPo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkP452EeKPK79J7cDCvg" value="1"/>
              </result>
              <target xmi:id="_-LEkQI52EeKPK79J7cDCvg" name="Call(test).target" incoming="_-LFLN452EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkQY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkQo52EeKPK79J7cDCvg" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_-LEkQ452EeKPK79J7cDCvg" name="ReadSelf">
              <result xmi:id="_-LEkRI52EeKPK79J7cDCvg" name="ReadSelf.result" outgoing="_-LFLN452EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LEkRY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LEkRo52EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LEkR452EeKPK79J7cDCvg" name="Fork(condition1)@2e85533f" outgoing="_-LFylI52EeKPK79J7cDCvg" incoming="_-LFLMY52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LEkSI52EeKPK79J7cDCvg" name="Fork(condition2)@d282b0a" outgoing="_-LFylo52EeKPK79J7cDCvg" incoming="_-LFLMo52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LEkSY52EeKPK79J7cDCvg" name="Fork(condition3)@4821a445" outgoing="_-LFymI52EeKPK79J7cDCvg" incoming="_-LFLM452EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LEkSo52EeKPK79J7cDCvg" name="Fork(year)@18a7d302" outgoing="_-LFymo52EeKPK79J7cDCvg" incoming="_-LFLNI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LEkS452EeKPK79J7cDCvg" name="Fork(month)@320e34f3" outgoing="_-LGZUY52EeKPK79J7cDCvg" incoming="_-LFLNY52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LFLMI52EeKPK79J7cDCvg" name="Fork(numDays)@42b65731" outgoing="_-LGZU452EeKPK79J7cDCvg" incoming="_-LFLNo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLMY52EeKPK79J7cDCvg" source="_-LEkLo52EeKPK79J7cDCvg" target="_-LEkR452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLMo52EeKPK79J7cDCvg" source="_-LEkMY52EeKPK79J7cDCvg" target="_-LEkSI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLM452EeKPK79J7cDCvg" source="_-LEkNI52EeKPK79J7cDCvg" target="_-LEkSY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLNI52EeKPK79J7cDCvg" source="_-LEkN452EeKPK79J7cDCvg" target="_-LEkSo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLNY52EeKPK79J7cDCvg" source="_-LEkOo52EeKPK79J7cDCvg" target="_-LEkS452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLNo52EeKPK79J7cDCvg" source="_-LEkPY52EeKPK79J7cDCvg" target="_-LFLMI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLN452EeKPK79J7cDCvg" source="_-LEkRI52EeKPK79J7cDCvg" target="_-LEkQI52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLOI52EeKPK79J7cDCvg" name="ExpressionStatement@67f9f574" outgoing="_-LFyl452EeKPK79J7cDCvg" incoming="_-LFylY52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFLOY52EeKPK79J7cDCvg" name="Call(AssertEqual)" incoming="_-LFLUI52EeKPK79J7cDCvg" behavior="_-LR_hI52EeKPK79J7cDCvg">
              <argument xmi:id="_-LFLOo52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(label)" incoming="_-LFLTo52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLO452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLPI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLPY52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value1)" incoming="_-LFylI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLPo52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLP452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLQI52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value2)" incoming="_-LFLT452EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLQY52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLQo52EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLQ452EeKPK79J7cDCvg" name="Tuple@3dde0609" outgoing="_-LFLUI52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFLRI52EeKPK79J7cDCvg" name="Value(&quot;condition1&quot;)">
                <result xmi:id="_-LFLRY52EeKPK79J7cDCvg" name="Value(&quot;condition1&quot;).result" outgoing="_-LFLTo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLRo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLR452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFLSI52EeKPK79J7cDCvg" value="condition1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFLSY52EeKPK79J7cDCvg" name="Value(alert)">
                <result xmi:id="_-LFLSo52EeKPK79J7cDCvg" name="Value(alert).result" outgoing="_-LFLT452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLS452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLTI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:InstanceValue" xmi:id="_-LFLTY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gY52EeKPK79J7cDCvg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLTo52EeKPK79J7cDCvg" source="_-LFLRY52EeKPK79J7cDCvg" target="_-LFLOo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLT452EeKPK79J7cDCvg" source="_-LFLSo52EeKPK79J7cDCvg" target="_-LFLQI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFLUI52EeKPK79J7cDCvg" source="_-LFLQ452EeKPK79J7cDCvg" target="_-LFLOY52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLUY52EeKPK79J7cDCvg" name="ExpressionStatement@468d2e07" outgoing="_-LFymY52EeKPK79J7cDCvg" incoming="_-LFyl452EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFLUo52EeKPK79J7cDCvg" name="Call(AssertEqual)" incoming="_-LFLaY52EeKPK79J7cDCvg" behavior="_-LR_hI52EeKPK79J7cDCvg">
              <argument xmi:id="_-LFLU452EeKPK79J7cDCvg" name="Call(AssertEqual).argument(label)" incoming="_-LFLZ452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLVI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLVY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLVo52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value1)" incoming="_-LFylo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLV452EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLWI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLWY52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value2)" incoming="_-LFLaI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLWo52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLW452EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLXI52EeKPK79J7cDCvg" name="Tuple@577edf46" outgoing="_-LFLaY52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFLXY52EeKPK79J7cDCvg" name="Value(&quot;condition2&quot;)">
                <result xmi:id="_-LFLXo52EeKPK79J7cDCvg" name="Value(&quot;condition2&quot;).result" outgoing="_-LFLZ452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLX452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLYI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFLYY52EeKPK79J7cDCvg" value="condition2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFLYo52EeKPK79J7cDCvg" name="Value(critical)">
                <result xmi:id="_-LFLY452EeKPK79J7cDCvg" name="Value(critical).result" outgoing="_-LFLaI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLZI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLZY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:InstanceValue" xmi:id="_-LFLZo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_go52EeKPK79J7cDCvg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLZ452EeKPK79J7cDCvg" source="_-LFLXo52EeKPK79J7cDCvg" target="_-LFLU452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLaI52EeKPK79J7cDCvg" source="_-LFLY452EeKPK79J7cDCvg" target="_-LFLWY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFLaY52EeKPK79J7cDCvg" source="_-LFLXI52EeKPK79J7cDCvg" target="_-LFLUo52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLao52EeKPK79J7cDCvg" name="ExpressionStatement@3ebecb47" outgoing="_-LGZUI52EeKPK79J7cDCvg" incoming="_-LFymY52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFLa452EeKPK79J7cDCvg" name="Call(AssertEqual)" incoming="_-LFLgo52EeKPK79J7cDCvg" behavior="_-LR_hI52EeKPK79J7cDCvg">
              <argument xmi:id="_-LFLbI52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(label)" incoming="_-LFLgI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLbY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLbo52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLb452EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value1)" incoming="_-LFymI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLcI52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLcY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLco52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value2)" incoming="_-LFLgY52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLc452EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLdI52EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLdY52EeKPK79J7cDCvg" name="Tuple@36a82e3c" outgoing="_-LFLgo52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFLdo52EeKPK79J7cDCvg" name="Value(&quot;condition3&quot;)">
                <result xmi:id="_-LFLd452EeKPK79J7cDCvg" name="Value(&quot;condition3&quot;).result" outgoing="_-LFLgI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLeI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLeY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFLeo52EeKPK79J7cDCvg" value="condition3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFLe452EeKPK79J7cDCvg" name="Value(critical)">
                <result xmi:id="_-LFLfI52EeKPK79J7cDCvg" name="Value(critical).result" outgoing="_-LFLgY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLfY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLfo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:InstanceValue" xmi:id="_-LFLf452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_go52EeKPK79J7cDCvg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLgI52EeKPK79J7cDCvg" source="_-LFLd452EeKPK79J7cDCvg" target="_-LFLbI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFLgY52EeKPK79J7cDCvg" source="_-LFLfI52EeKPK79J7cDCvg" target="_-LFLco52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFLgo52EeKPK79J7cDCvg" source="_-LFLdY52EeKPK79J7cDCvg" target="_-LFLa452EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFLg452EeKPK79J7cDCvg" name="ExpressionStatement@4d44c7bf" outgoing="_-LGZUo52EeKPK79J7cDCvg" incoming="_-LGZUI52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFLhI52EeKPK79J7cDCvg" name="Call(AssertEqual)" incoming="_-LFyUY52EeKPK79J7cDCvg" behavior="_-LR_hI52EeKPK79J7cDCvg">
              <argument xmi:id="_-LFLhY52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(label)" incoming="_-LFyT452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLho52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFLh452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFLiI52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value1)" incoming="_-LFymo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFLiY52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyQI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFyQY52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value2)" incoming="_-LFyUI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyQo52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyQ452EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFyRI52EeKPK79J7cDCvg" name="Tuple@38e5095f" outgoing="_-LFyUY52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFyRY52EeKPK79J7cDCvg" name="Value(&quot;year&quot;)">
                <result xmi:id="_-LFyRo52EeKPK79J7cDCvg" name="Value(&quot;year&quot;).result" outgoing="_-LFyT452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyR452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFySI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFySY52EeKPK79J7cDCvg" value="year">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFySo52EeKPK79J7cDCvg" name="Value(2012)">
                <result xmi:id="_-LFyS452EeKPK79J7cDCvg" name="Value(2012).result" outgoing="_-LFyUI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyTI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyTY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LFyTo52EeKPK79J7cDCvg" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFyT452EeKPK79J7cDCvg" source="_-LFyRo52EeKPK79J7cDCvg" target="_-LFLhY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFyUI52EeKPK79J7cDCvg" source="_-LFyS452EeKPK79J7cDCvg" target="_-LFyQY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFyUY52EeKPK79J7cDCvg" source="_-LFyRI52EeKPK79J7cDCvg" target="_-LFLhI52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFyUo52EeKPK79J7cDCvg" name="ExpressionStatement@732e53c1" outgoing="_-LGZVI52EeKPK79J7cDCvg" incoming="_-LGZUo52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFyU452EeKPK79J7cDCvg" name="Call(AssertEqual)" incoming="_-LFyao52EeKPK79J7cDCvg" behavior="_-LR_hI52EeKPK79J7cDCvg">
              <argument xmi:id="_-LFyVI52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(label)" incoming="_-LFyaI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyVY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyVo52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFyV452EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value1)" incoming="_-LGZUY52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyWI52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyWY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFyWo52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value2)" incoming="_-LFyaY52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyW452EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyXI52EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFyXY52EeKPK79J7cDCvg" name="Tuple@5c368e92" outgoing="_-LFyao52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFyXo52EeKPK79J7cDCvg" name="Value(&quot;month&quot;)">
                <result xmi:id="_-LFyX452EeKPK79J7cDCvg" name="Value(&quot;month&quot;).result" outgoing="_-LFyaI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyYI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyYY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFyYo52EeKPK79J7cDCvg" value="month">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFyY452EeKPK79J7cDCvg" name="Value(2)">
                <result xmi:id="_-LFyZI52EeKPK79J7cDCvg" name="Value(2).result" outgoing="_-LFyaY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyZY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyZo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LFyZ452EeKPK79J7cDCvg" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFyaI52EeKPK79J7cDCvg" source="_-LFyX452EeKPK79J7cDCvg" target="_-LFyVI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFyaY52EeKPK79J7cDCvg" source="_-LFyZI52EeKPK79J7cDCvg" target="_-LFyWo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFyao52EeKPK79J7cDCvg" source="_-LFyXY52EeKPK79J7cDCvg" target="_-LFyU452EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFya452EeKPK79J7cDCvg" name="ExpressionStatement@3c583f74" outgoing="_-LGZVY52EeKPK79J7cDCvg" incoming="_-LGZVI52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFybI52EeKPK79J7cDCvg" name="Call(AssertEqual)" incoming="_-LFyg452EeKPK79J7cDCvg" behavior="_-LR_hI52EeKPK79J7cDCvg">
              <argument xmi:id="_-LFybY52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(label)" incoming="_-LFygY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFybo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyb452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFycI52EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value1)" incoming="_-LGZU452EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFycY52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyco52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LFyc452EeKPK79J7cDCvg" name="Call(AssertEqual).argument(value2)" incoming="_-LFygo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFydI52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFydY52EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFydo52EeKPK79J7cDCvg" name="Tuple@609f971d" outgoing="_-LFyg452EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFyd452EeKPK79J7cDCvg" name="Value(&quot;numDays&quot;)">
                <result xmi:id="_-LFyeI52EeKPK79J7cDCvg" name="Value(&quot;numDays&quot;).result" outgoing="_-LFygY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyeY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyeo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFye452EeKPK79J7cDCvg" value="numDays">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFyfI52EeKPK79J7cDCvg" name="Value(29)">
                <result xmi:id="_-LFyfY52EeKPK79J7cDCvg" name="Value(29).result" outgoing="_-LFygo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyfo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyf452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LFygI52EeKPK79J7cDCvg" value="29">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFygY52EeKPK79J7cDCvg" source="_-LFyeI52EeKPK79J7cDCvg" target="_-LFybY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFygo52EeKPK79J7cDCvg" source="_-LFyfY52EeKPK79J7cDCvg" target="_-LFyc452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFyg452EeKPK79J7cDCvg" source="_-LFydo52EeKPK79J7cDCvg" target="_-LFybI52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFyhI52EeKPK79J7cDCvg" name="ExpressionStatement@2731125d" incoming="_-LGZVY52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LFyhY52EeKPK79J7cDCvg" name="Call(WriteLine)" incoming="_-LFyk452EeKPK79J7cDCvg">
              <argument xmi:id="_-LFyho52EeKPK79J7cDCvg" name="Call(WriteLine).argument(value)" incoming="_-LFyko52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyh452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyiI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LFyiY52EeKPK79J7cDCvg" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyio52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFyi452EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LFyjI52EeKPK79J7cDCvg" name="Tuple@580fd367" outgoing="_-LFyk452EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LFyjY52EeKPK79J7cDCvg" name="Value(&quot;Done&quot;)">
                <result xmi:id="_-LFyjo52EeKPK79J7cDCvg" name="Value(&quot;Done&quot;).result" outgoing="_-LFyko52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LFyj452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LFykI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LFykY52EeKPK79J7cDCvg" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFyko52EeKPK79J7cDCvg" source="_-LFyjo52EeKPK79J7cDCvg" target="_-LFyho52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LFyk452EeKPK79J7cDCvg" source="_-LFyjI52EeKPK79J7cDCvg" target="_-LFyhY52EeKPK79J7cDCvg"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFylI52EeKPK79J7cDCvg" source="_-LEkR452EeKPK79J7cDCvg" target="_-LFLPY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LFylY52EeKPK79J7cDCvg" source="_-LEkLI52EeKPK79J7cDCvg" target="_-LFLOI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFylo52EeKPK79J7cDCvg" source="_-LEkSI52EeKPK79J7cDCvg" target="_-LFLVo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LFyl452EeKPK79J7cDCvg" source="_-LFLOI52EeKPK79J7cDCvg" target="_-LFLUY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFymI52EeKPK79J7cDCvg" source="_-LEkSY52EeKPK79J7cDCvg" target="_-LFLb452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LFymY52EeKPK79J7cDCvg" source="_-LFLUY52EeKPK79J7cDCvg" target="_-LFLao52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LFymo52EeKPK79J7cDCvg" source="_-LEkSo52EeKPK79J7cDCvg" target="_-LFLiI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LGZUI52EeKPK79J7cDCvg" source="_-LFLao52EeKPK79J7cDCvg" target="_-LFLg452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZUY52EeKPK79J7cDCvg" source="_-LEkS452EeKPK79J7cDCvg" target="_-LFyV452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LGZUo52EeKPK79J7cDCvg" source="_-LFLg452EeKPK79J7cDCvg" target="_-LFyUo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZU452EeKPK79J7cDCvg" source="_-LFLMI52EeKPK79J7cDCvg" target="_-LFycI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LGZVI52EeKPK79J7cDCvg" source="_-LFyUo52EeKPK79J7cDCvg" target="_-LFya452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LGZVY52EeKPK79J7cDCvg" source="_-LFya452EeKPK79J7cDCvg" target="_-LFyhI52EeKPK79J7cDCvg"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LGZVo52EeKPK79J7cDCvg" name="test$method$1" specification="_-LQKj452EeKPK79J7cDCvg" group="_-LGZdY52EeKPK79J7cDCvg" node="_-LGZb452EeKPK79J7cDCvg _-LGZcI52EeKPK79J7cDCvg _-LGZcY52EeKPK79J7cDCvg _-LGZco52EeKPK79J7cDCvg _-LGZc452EeKPK79J7cDCvg _-LGZdI52EeKPK79J7cDCvg _-LGZdY52EeKPK79J7cDCvg">
        <ownedParameter xmi:id="_-LGZV452EeKPK79J7cDCvg" name="condition1" type="_-LRYvo52EeKPK79J7cDCvg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZWI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZWY52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LGZWo52EeKPK79J7cDCvg" name="condition2" type="_-LRYvo52EeKPK79J7cDCvg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZW452EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZXI52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LGZXY52EeKPK79J7cDCvg" name="condition3" type="_-LRYvo52EeKPK79J7cDCvg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZXo52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZX452EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LGZYI52EeKPK79J7cDCvg" name="year" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZYY52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZYo52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LGZY452EeKPK79J7cDCvg" name="month" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZZI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZZY52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LGZZo52EeKPK79J7cDCvg" name="numDays" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZZ452EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZaI52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZaY52EeKPK79J7cDCvg" source="_-LO8S452EeKPK79J7cDCvg" target="_-LGZb452EeKPK79J7cDCvg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZao52EeKPK79J7cDCvg" source="_-LO8To52EeKPK79J7cDCvg" target="_-LGZcI52EeKPK79J7cDCvg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZa452EeKPK79J7cDCvg" source="_-LO8UY52EeKPK79J7cDCvg" target="_-LGZcY52EeKPK79J7cDCvg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZbI52EeKPK79J7cDCvg" source="_-LO8VI52EeKPK79J7cDCvg" target="_-LGZco52EeKPK79J7cDCvg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZbY52EeKPK79J7cDCvg" source="_-LO8V452EeKPK79J7cDCvg" target="_-LGZc452EeKPK79J7cDCvg"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZbo52EeKPK79J7cDCvg" source="_-LO8Wo52EeKPK79J7cDCvg" target="_-LGZdI52EeKPK79J7cDCvg"/>
        <structuredNode xmi:id="_-LGZdY52EeKPK79J7cDCvg" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZdo52EeKPK79J7cDCvg" name="ExpressionStatement@33c21169" outgoing="_-LO8XY52EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LGZd452EeKPK79J7cDCvg" name="Fork(reading)@6b824057" outgoing="_-LO8ZI52EeKPK79J7cDCvg _-LO8ao52EeKPK79J7cDCvg _-LO8bI52EeKPK79J7cDCvg _-LO8bo52EeKPK79J7cDCvg _-LO8cI52EeKPK79J7cDCvg" incoming="_-LGZfo52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZeI52EeKPK79J7cDCvg" name="RightHandSide@344e46e5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LGZeY52EeKPK79J7cDCvg" name="Value(150)">
                <result xmi:id="_-LGZeo52EeKPK79J7cDCvg" name="Value(150).result" outgoing="_-LGZfo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZe452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZfI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LGZfY52EeKPK79J7cDCvg" value="150">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZfo52EeKPK79J7cDCvg" source="_-LGZeo52EeKPK79J7cDCvg" target="_-LGZd452EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZf452EeKPK79J7cDCvg" name="ExpressionStatement@62099e8" outgoing="_-LO8Xo52EeKPK79J7cDCvg" incoming="_-LO8XY52EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LGZgI52EeKPK79J7cDCvg" name="Fork(threshold)@33eb2d7" outgoing="_-LO8ZY52EeKPK79J7cDCvg" incoming="_-LGZh452EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZgY52EeKPK79J7cDCvg" name="RightHandSide@5a72ba65">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LGZgo52EeKPK79J7cDCvg" name="Value(10)">
                <result xmi:id="_-LGZg452EeKPK79J7cDCvg" name="Value(10).result" outgoing="_-LGZh452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZhI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZhY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LGZho52EeKPK79J7cDCvg" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZh452EeKPK79J7cDCvg" source="_-LGZg452EeKPK79J7cDCvg" target="_-LGZgI52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZiI52EeKPK79J7cDCvg" name="ExpressionStatement@2305eee7" outgoing="_-LO8X452EeKPK79J7cDCvg" incoming="_-LO8Xo52EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LGZiY52EeKPK79J7cDCvg" name="Fork(safeLimit)@2faa33b4" outgoing="_-LO8a452EeKPK79J7cDCvg _-LO8bY52EeKPK79J7cDCvg _-LO8do52EeKPK79J7cDCvg _-LO8fI52EeKPK79J7cDCvg _-LO8fo52EeKPK79J7cDCvg" incoming="_-LGZkI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZio52EeKPK79J7cDCvg" name="RightHandSide@4f2886de">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LGZi452EeKPK79J7cDCvg" name="Value(100)">
                <result xmi:id="_-LGZjI52EeKPK79J7cDCvg" name="Value(100).result" outgoing="_-LGZkI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZjY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZjo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LGZj452EeKPK79J7cDCvg" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZkI52EeKPK79J7cDCvg" source="_-LGZjI52EeKPK79J7cDCvg" target="_-LGZiY52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZkY52EeKPK79J7cDCvg" name="ExpressionStatement@1da77562" outgoing="_-LO8YI52EeKPK79J7cDCvg" incoming="_-LO8X452EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LGZko52EeKPK79J7cDCvg" name="Fork(criticalLimit)@538124be" outgoing="_-LO8b452EeKPK79J7cDCvg _-LO8cY52EeKPK79J7cDCvg _-LO8eI52EeKPK79J7cDCvg _-LO8gI52EeKPK79J7cDCvg _-LO8go52EeKPK79J7cDCvg" incoming="_-LGZmY52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZk452EeKPK79J7cDCvg" name="RightHandSide@439360c6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LGZlI52EeKPK79J7cDCvg" name="Value(200)">
                <result xmi:id="_-LGZlY52EeKPK79J7cDCvg" name="Value(200).result" outgoing="_-LGZmY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZlo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZl452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LGZmI52EeKPK79J7cDCvg" value="200">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZmY52EeKPK79J7cDCvg" source="_-LGZlY52EeKPK79J7cDCvg" target="_-LGZko52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZmo52EeKPK79J7cDCvg" name="ExpressionStatement@6ceb3941" outgoing="_-LO8YY52EeKPK79J7cDCvg" incoming="_-LO8YI52EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LGZm452EeKPK79J7cDCvg" name="Fork(errorLimit)@68d8ce9f" outgoing="_-LO8hI52EeKPK79J7cDCvg" incoming="_-LGZoo52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LGZnI52EeKPK79J7cDCvg" name="RightHandSide@71e55e7f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LGZnY52EeKPK79J7cDCvg" name="Value(1000)">
                <result xmi:id="_-LGZno52EeKPK79J7cDCvg" name="Value(1000).result" outgoing="_-LGZoo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LGZn452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LGZoI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LGZoY52EeKPK79J7cDCvg" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LGZoo52EeKPK79J7cDCvg" source="_-LGZno52EeKPK79J7cDCvg" target="_-LGZm452EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAYI52EeKPK79J7cDCvg" name="ExpressionStatement@2bc8dfa6" outgoing="_-LO8Yo52EeKPK79J7cDCvg" incoming="_-LO8YY52EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LHAYY52EeKPK79J7cDCvg" name="Fork(sensorId)@51faf4c7" outgoing="_-LO8Zo52EeKPK79J7cDCvg" incoming="_-LHAaI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAYo52EeKPK79J7cDCvg" name="RightHandSide@32dc5edd">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LHAY452EeKPK79J7cDCvg" name="Value(1)">
                <result xmi:id="_-LHAZI52EeKPK79J7cDCvg" name="Value(1).result" outgoing="_-LHAaI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAZY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAZo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LHAZ452EeKPK79J7cDCvg" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHAaI52EeKPK79J7cDCvg" source="_-LHAZI52EeKPK79J7cDCvg" target="_-LHAYY52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAaY52EeKPK79J7cDCvg" name="ExpressionStatement@531dfae6" outgoing="_-LO8Y452EeKPK79J7cDCvg" incoming="_-LO8Yo52EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LHAao52EeKPK79J7cDCvg" name="Fork(monitor)@23b697a5" outgoing="_-LO8Z452EeKPK79J7cDCvg" incoming="_-LHAeI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAa452EeKPK79J7cDCvg" name="RightHandSide@289de3f4">
              <node xmi:type="uml:CallOperationAction" xmi:id="_-LHAbI52EeKPK79J7cDCvg" name="Call(Monitor)" operation="_-LRYuY52EeKPK79J7cDCvg">
                <result xmi:id="_-LHAbY52EeKPK79J7cDCvg" name="Call(Monitor).result()" outgoing="_-LHAeI52EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAbo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAb452EeKPK79J7cDCvg" value="1"/>
                </result>
                <target xmi:id="_-LHAcI52EeKPK79J7cDCvg" name="Call(Monitor).target" incoming="_-LHAd452EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAcY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAco52EeKPK79J7cDCvg" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_-LHAc452EeKPK79J7cDCvg" name="Create(Monitor)" classifier="_-LQxYo52EeKPK79J7cDCvg">
                <result xmi:id="_-LHAdI52EeKPK79J7cDCvg" name="Create(Monitor).result" outgoing="_-LHAd452EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAdY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAdo52EeKPK79J7cDCvg" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHAd452EeKPK79J7cDCvg" source="_-LHAdI52EeKPK79J7cDCvg" target="_-LHAcI52EeKPK79J7cDCvg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHAeI52EeKPK79J7cDCvg" source="_-LHAbY52EeKPK79J7cDCvg" target="_-LHAao52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAeY52EeKPK79J7cDCvg" name="ExpressionStatement@40149550" outgoing="_-LO8aI52EeKPK79J7cDCvg" incoming="_-LO8Y452EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LHAeo52EeKPK79J7cDCvg" name="Fork(year)@37a3d5b2" outgoing="_-LO8ho52EeKPK79J7cDCvg _-LO8h452EeKPK79J7cDCvg _-LPjSI52EeKPK79J7cDCvg _-LPjSY52EeKPK79J7cDCvg _-LPjSo52EeKPK79J7cDCvg _-LPjT452EeKPK79J7cDCvg" incoming="_-LHAgY52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAe452EeKPK79J7cDCvg" name="RightHandSide@6522b5a7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LHAfI52EeKPK79J7cDCvg" name="Value(2012)">
                <result xmi:id="_-LHAfY52EeKPK79J7cDCvg" name="Value(2012).result" outgoing="_-LHAgY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAfo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAf452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LHAgI52EeKPK79J7cDCvg" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHAgY52EeKPK79J7cDCvg" source="_-LHAfY52EeKPK79J7cDCvg" target="_-LHAeo52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_-LHAgo52EeKPK79J7cDCvg" name="IfStatement@37765da2" outgoing="_-LO8co52EeKPK79J7cDCvg" incoming="_-LO8aI52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LHAg452EeKPK79J7cDCvg" name="Call(>)">
              <argument xmi:id="_-LHAhI52EeKPK79J7cDCvg" name="Call(>).argument(x)" incoming="_-LO8ZI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAhY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAho52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LHAh452EeKPK79J7cDCvg" name="Call(>).argument(y)" incoming="_-LO8ZY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAiI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAiY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LHAio52EeKPK79J7cDCvg" name="Call(>).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAi452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAjI52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAjY52EeKPK79J7cDCvg" name="ExpressionStatement@1ae6038f">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_-LHAjo52EeKPK79J7cDCvg" name="Collect(Call(raiseAlarm))" incoming="_-LHAnY52EeKPK79J7cDCvg" mode="parallel" inputElement="_-LHAm452EeKPK79J7cDCvg">
                <node xmi:type="uml:CallOperationAction" xmi:id="_-LHAj452EeKPK79J7cDCvg" name="Call(raiseAlarm)" operation="_-LRYtI52EeKPK79J7cDCvg">
                  <argument xmi:id="_-LHAkI52EeKPK79J7cDCvg" name="Call(raiseAlarm).argument(sensorId)" incoming="_-LHAmY52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAkY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAko52EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <target xmi:id="_-LHAk452EeKPK79J7cDCvg" name="Call(raiseAlarm).target" incoming="_-LHAmo52EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAlI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAlY52EeKPK79J7cDCvg" value="1"/>
                  </target>
                </node>
                <structuredNodeInput xmi:id="_-LHAlo52EeKPK79J7cDCvg" name="Collect(Call(raiseAlarm)).input(Fork(sensorId)@51faf4c7)" outgoing="_-LHAmY52EeKPK79J7cDCvg" incoming="_-LO8Zo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAl452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAmI52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHAmY52EeKPK79J7cDCvg" source="_-LHAlo52EeKPK79J7cDCvg" target="_-LHAkI52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHAmo52EeKPK79J7cDCvg" source="_-LHAm452EeKPK79J7cDCvg" target="_-LHAk452EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_-LHAm452EeKPK79J7cDCvg" name="Collect(Call(raiseAlarm)).inputElement" outgoing="_-LHAmo52EeKPK79J7cDCvg" incoming="_-LO8Z452EeKPK79J7cDCvg" regionAsInput="_-LHAjo52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAnI52EeKPK79J7cDCvg" name="Feature(Fork(monitor)@23b697a5)" outgoing="_-LHAnY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_-LHAnY52EeKPK79J7cDCvg" source="_-LHAnI52EeKPK79J7cDCvg" target="_-LHAjo52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LHAno52EeKPK79J7cDCvg" name="Value(true)">
              <result xmi:id="_-LHAn452EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAoI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAoY52EeKPK79J7cDCvg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_-LHAoo52EeKPK79J7cDCvg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <clause xmi:id="_-LHAo452EeKPK79J7cDCvg" body="_-LHAjY52EeKPK79J7cDCvg" decider="_-LHAio52EeKPK79J7cDCvg" successorClause="_-LHApI52EeKPK79J7cDCvg" test="_-LHAg452EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LHApI52EeKPK79J7cDCvg" decider="_-LHAn452EeKPK79J7cDCvg" predecessorClause="_-LHAo452EeKPK79J7cDCvg" test="_-LHAno52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_-LHApY52EeKPK79J7cDCvg" name="IfStatement@58b4f70b" outgoing="_-LO8c452EeKPK79J7cDCvg" incoming="_-LO8co52EeKPK79J7cDCvg" isAssured="true" isDeterminate="true">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LHApo52EeKPK79J7cDCvg" name="Call(&lt;=)">
              <argument xmi:id="_-LHAp452EeKPK79J7cDCvg" name="Call(&lt;=).argument(x)" incoming="_-LO8ao52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAqI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAqY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LHAqo52EeKPK79J7cDCvg" name="Call(&lt;=).argument(y)" incoming="_-LO8a452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAq452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHArI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LHArY52EeKPK79J7cDCvg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHAro52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHAr452EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAsI52EeKPK79J7cDCvg" name="ExpressionStatement@6cd9981">
              <node xmi:type="uml:ForkNode" xmi:id="_-LHAsY52EeKPK79J7cDCvg" name="Fork(condition1)@170febba" outgoing="_-LIOlI52EeKPK79J7cDCvg" incoming="_-LHndY52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHAso52EeKPK79J7cDCvg" name="RightHandSide@163d0c2a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LHncI52EeKPK79J7cDCvg" name="Value(normal)">
                  <result xmi:id="_-LHncY52EeKPK79J7cDCvg" name="Value(normal).result" outgoing="_-LHndY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnco52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnc452EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LHndI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gI52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHndY52EeKPK79J7cDCvg" source="_-LHncY52EeKPK79J7cDCvg" target="_-LHAsY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHndo52EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@170febba)">
              <structuredNodeInput xmi:id="_-LHnd452EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@170febba).input" outgoing="_-LHnfY52EeKPK79J7cDCvg" incoming="_-LIOlI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHneI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHneY52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LHneo52EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@170febba).output" incoming="_-LHnfY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHne452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnfI52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHnfY52EeKPK79J7cDCvg" source="_-LHnd452EeKPK79J7cDCvg" target="_-LHneo52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LHnfo52EeKPK79J7cDCvg" name="Call(>)">
              <argument xmi:id="_-LHnf452EeKPK79J7cDCvg" name="Call(>).argument(x)" incoming="_-LO8bI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHngI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHngY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LHngo52EeKPK79J7cDCvg" name="Call(>).argument(y)" incoming="_-LO8bY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHng452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnhI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LHnhY52EeKPK79J7cDCvg" name="Call(>).result(result)" outgoing="_-LIOlo52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnho52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnh452EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHniI52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@1b0d8c30.operand2" incoming="_-LIOl452EeKPK79J7cDCvg">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LHniY52EeKPK79J7cDCvg" name="Call(&lt;=)">
                <argument xmi:id="_-LHnio52EeKPK79J7cDCvg" name="Call(&lt;=).argument(x)" incoming="_-LO8bo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHni452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnjI52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LHnjY52EeKPK79J7cDCvg" name="Call(&lt;=).argument(y)" incoming="_-LO8b452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnjo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnj452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LHnkI52EeKPK79J7cDCvg" name="Call(&lt;=).result(result)" outgoing="_-LHnlo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnkY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnko52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
              <structuredNodeOutput xmi:id="_-LHnk452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@1b0d8c30.operand2.result" outgoing="_-LIOm452EeKPK79J7cDCvg" incoming="_-LHnlo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnlI52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnlY52EeKPK79J7cDCvg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHnlo52EeKPK79J7cDCvg" source="_-LHnkI52EeKPK79J7cDCvg" target="_-LHnk452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHnl452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@1b0d8c30.operand3" incoming="_-LIOmY52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LHnmI52EeKPK79J7cDCvg" name="Value(false)">
                <result xmi:id="_-LHnmY52EeKPK79J7cDCvg" name="Value(false).result" outgoing="_-LHnoI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnmo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnm452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_-LHnnI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_-LHnnY52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@1b0d8c30.operand3.result" outgoing="_-LIOnI52EeKPK79J7cDCvg" incoming="_-LHnoI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnno52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnn452EeKPK79J7cDCvg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHnoI52EeKPK79J7cDCvg" source="_-LHnmY52EeKPK79J7cDCvg" target="_-LHnnY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_-LHnoY52EeKPK79J7cDCvg" name="Initial(ConditionalLogicalExpression@1b0d8c30)" outgoing="_-LIOlY52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_-LHnoo52EeKPK79J7cDCvg" name="Decision(ConditionalLogicalExpression@1b0d8c30)" outgoing="_-LIOl452EeKPK79J7cDCvg _-LIOmY52EeKPK79J7cDCvg" incoming="_-LIOlY52EeKPK79J7cDCvg _-LIOlo52EeKPK79J7cDCvg" decisionInputFlow="_-LIOlo52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:MergeNode" xmi:id="_-LHno452EeKPK79J7cDCvg" name="Merge(ConditionalLogicalExpression@1b0d8c30.result)" outgoing="_-LIOnY52EeKPK79J7cDCvg" incoming="_-LIOm452EeKPK79J7cDCvg _-LIOnI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHnpI52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@1b0d8c30.result))">
              <structuredNodeInput xmi:id="_-LHnpY52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@1b0d8c30.result)).input" outgoing="_-LHnq452EeKPK79J7cDCvg" incoming="_-LIOnY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnpo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnp452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LHnqI52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@1b0d8c30.result)).output" incoming="_-LHnq452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnqY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnqo52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHnq452EeKPK79J7cDCvg" source="_-LHnpY52EeKPK79J7cDCvg" target="_-LHnqI52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHnrI52EeKPK79J7cDCvg" name="ExpressionStatement@96a71e9">
              <node xmi:type="uml:ForkNode" xmi:id="_-LHnrY52EeKPK79J7cDCvg" name="Fork(condition1)@2cfdc099" outgoing="_-LIOno52EeKPK79J7cDCvg" incoming="_-LHntI52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHnro52EeKPK79J7cDCvg" name="RightHandSide@476f93e2">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LHnr452EeKPK79J7cDCvg" name="Value(alert)">
                  <result xmi:id="_-LHnsI52EeKPK79J7cDCvg" name="Value(alert).result" outgoing="_-LHntI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnsY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnso52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LHns452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gY52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHntI52EeKPK79J7cDCvg" source="_-LHnsI52EeKPK79J7cDCvg" target="_-LHnrY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHntY52EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@2cfdc099)">
              <structuredNodeInput xmi:id="_-LHnto52EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@2cfdc099).input" outgoing="_-LHnvI52EeKPK79J7cDCvg" incoming="_-LIOno52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnt452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnuI52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LHnuY52EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@2cfdc099).output" incoming="_-LHnvI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnuo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnu452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LHnvI52EeKPK79J7cDCvg" source="_-LHnto52EeKPK79J7cDCvg" target="_-LHnuY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LHnvY52EeKPK79J7cDCvg" name="Call(>)">
              <argument xmi:id="_-LHnvo52EeKPK79J7cDCvg" name="Call(>).argument(x)" incoming="_-LO8cI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnv452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnwI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LHnwY52EeKPK79J7cDCvg" name="Call(>).argument(y)" incoming="_-LO8cY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnwo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnw452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LHnxI52EeKPK79J7cDCvg" name="Call(>).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LHnxY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LHnxo52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LHnx452EeKPK79J7cDCvg" name="ExpressionStatement@254e0063">
              <node xmi:type="uml:ForkNode" xmi:id="_-LHnyI52EeKPK79J7cDCvg" name="Fork(condition1)@26b5e4d2" outgoing="_-LIOn452EeKPK79J7cDCvg" incoming="_-LIOho52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOgI52EeKPK79J7cDCvg" name="RightHandSide@6fc1aad8">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LIOgY52EeKPK79J7cDCvg" name="Value(critical)">
                  <result xmi:id="_-LIOgo52EeKPK79J7cDCvg" name="Value(critical).result" outgoing="_-LIOho52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOg452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOhI52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LIOhY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_go52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOho52EeKPK79J7cDCvg" source="_-LIOgo52EeKPK79J7cDCvg" target="_-LHnyI52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOh452EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@26b5e4d2)">
              <structuredNodeInput xmi:id="_-LIOiI52EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@26b5e4d2).input" outgoing="_-LIOjo52EeKPK79J7cDCvg" incoming="_-LIOn452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOiY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOio52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LIOi452EeKPK79J7cDCvg" name="Passthru(Fork(condition1)@26b5e4d2).output" incoming="_-LIOjo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOjI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOjY52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOjo52EeKPK79J7cDCvg" source="_-LIOiI52EeKPK79J7cDCvg" target="_-LIOi452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LIOj452EeKPK79J7cDCvg" name="Value(true)">
              <result xmi:id="_-LIOkI52EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOkY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOko52EeKPK79J7cDCvg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_-LIOk452EeKPK79J7cDCvg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOlI52EeKPK79J7cDCvg" source="_-LHAsY52EeKPK79J7cDCvg" target="_-LHnd452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LIOlY52EeKPK79J7cDCvg" source="_-LHnoY52EeKPK79J7cDCvg" target="_-LHnoo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOlo52EeKPK79J7cDCvg" source="_-LHnhY52EeKPK79J7cDCvg" target="_-LHnoo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LIOl452EeKPK79J7cDCvg" source="_-LHnoo52EeKPK79J7cDCvg" target="_-LHniI52EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LIOmI52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LIOmY52EeKPK79J7cDCvg" source="_-LHnoo52EeKPK79J7cDCvg" target="_-LHnl452EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LIOmo52EeKPK79J7cDCvg" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOm452EeKPK79J7cDCvg" source="_-LHnk452EeKPK79J7cDCvg" target="_-LHno452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOnI52EeKPK79J7cDCvg" source="_-LHnnY52EeKPK79J7cDCvg" target="_-LHno452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOnY52EeKPK79J7cDCvg" source="_-LHno452EeKPK79J7cDCvg" target="_-LHnpY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOno52EeKPK79J7cDCvg" source="_-LHnrY52EeKPK79J7cDCvg" target="_-LHnto52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOn452EeKPK79J7cDCvg" source="_-LHnyI52EeKPK79J7cDCvg" target="_-LIOiI52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LIOoI52EeKPK79J7cDCvg" body="_-LHAsI52EeKPK79J7cDCvg _-LHndo52EeKPK79J7cDCvg" bodyOutput="_-LHneo52EeKPK79J7cDCvg" decider="_-LHArY52EeKPK79J7cDCvg" successorClause="_-LIOo452EeKPK79J7cDCvg" test="_-LHApo52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LIOoY52EeKPK79J7cDCvg" body="_-LHnrI52EeKPK79J7cDCvg _-LHntY52EeKPK79J7cDCvg" bodyOutput="_-LHnuY52EeKPK79J7cDCvg" decider="_-LHnqI52EeKPK79J7cDCvg" successorClause="_-LIOo452EeKPK79J7cDCvg" test="_-LHnfo52EeKPK79J7cDCvg _-LHniI52EeKPK79J7cDCvg _-LHnl452EeKPK79J7cDCvg _-LHnpI52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LIOoo52EeKPK79J7cDCvg" body="_-LHnx452EeKPK79J7cDCvg _-LIOh452EeKPK79J7cDCvg" bodyOutput="_-LIOi452EeKPK79J7cDCvg" decider="_-LHnxI52EeKPK79J7cDCvg" successorClause="_-LIOo452EeKPK79J7cDCvg" test="_-LHnvY52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LIOo452EeKPK79J7cDCvg" decider="_-LIOkI52EeKPK79J7cDCvg" predecessorClause="_-LIOoI52EeKPK79J7cDCvg _-LIOoY52EeKPK79J7cDCvg _-LIOoo52EeKPK79J7cDCvg" test="_-LIOj452EeKPK79J7cDCvg"/>
            <result xmi:id="_-LIOpI52EeKPK79J7cDCvg" name="IfStatement@58b4f70b.result(condition1)" outgoing="_-LO8aY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOpY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOpo52EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LIOp452EeKPK79J7cDCvg" name="Fork(condition1)" outgoing="_-LPjTI52EeKPK79J7cDCvg" incoming="_-LO8aY52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOqI52EeKPK79J7cDCvg" name="ExpressionStatement@7f90fbfa" outgoing="_-LO8eY52EeKPK79J7cDCvg" incoming="_-LO8c452EeKPK79J7cDCvg">
            <node xmi:type="uml:ForkNode" xmi:id="_-LIOqY52EeKPK79J7cDCvg" name="Fork(reading)@52903d34" outgoing="_-LO8dY52EeKPK79J7cDCvg _-LO8d452EeKPK79J7cDCvg _-LO8e452EeKPK79J7cDCvg _-LO8fY52EeKPK79J7cDCvg _-LO8f452EeKPK79J7cDCvg _-LO8gY52EeKPK79J7cDCvg _-LO8g452EeKPK79J7cDCvg" incoming="_-LIOsI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOqo52EeKPK79J7cDCvg" name="RightHandSide@7ba24b44">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LIOq452EeKPK79J7cDCvg" name="Value(500)">
                <result xmi:id="_-LIOrI52EeKPK79J7cDCvg" name="Value(500).result" outgoing="_-LIOsI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOrY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOro52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LIOr452EeKPK79J7cDCvg" value="500">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOsI52EeKPK79J7cDCvg" source="_-LIOrI52EeKPK79J7cDCvg" target="_-LIOqY52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_-LIOsY52EeKPK79J7cDCvg" name="IfStatement@61a11e5" outgoing="_-LO8hY52EeKPK79J7cDCvg" incoming="_-LO8eY52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LIOso52EeKPK79J7cDCvg" name="Call(&lt;=)">
              <argument xmi:id="_-LIOs452EeKPK79J7cDCvg" name="Call(&lt;=).argument(x)" incoming="_-LO8dY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOtI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOtY52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LIOto52EeKPK79J7cDCvg" name="Call(&lt;=).argument(y)" incoming="_-LO8do52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOt452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOuI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LIOuY52EeKPK79J7cDCvg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOuo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOu452EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOvI52EeKPK79J7cDCvg" name="ExpressionStatement@23be5ba2">
              <node xmi:type="uml:ForkNode" xmi:id="_-LIOvY52EeKPK79J7cDCvg" name="Fork(condition2)@5f38590f" outgoing="_-LI1tY52EeKPK79J7cDCvg" incoming="_-LIOxI52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOvo52EeKPK79J7cDCvg" name="RightHandSide@6c5f189f">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LIOv452EeKPK79J7cDCvg" name="Value(normal)">
                  <result xmi:id="_-LIOwI52EeKPK79J7cDCvg" name="Value(normal).result" outgoing="_-LIOxI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOwY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOwo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LIOw452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gI52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOxI52EeKPK79J7cDCvg" source="_-LIOwI52EeKPK79J7cDCvg" target="_-LIOvY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIOxY52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@5f38590f)">
              <structuredNodeInput xmi:id="_-LIOxo52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@5f38590f).input" outgoing="_-LIOzI52EeKPK79J7cDCvg" incoming="_-LI1tY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOx452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOyI52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LIOyY52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@5f38590f).output" incoming="_-LIOzI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOyo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIOy452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LIOzI52EeKPK79J7cDCvg" source="_-LIOxo52EeKPK79J7cDCvg" target="_-LIOyY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LIOzY52EeKPK79J7cDCvg" name="Call(&lt;=)">
              <argument xmi:id="_-LIOzo52EeKPK79J7cDCvg" name="Call(&lt;=).argument(x)" incoming="_-LO8d452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIOz452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIO0I52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LIO0Y52EeKPK79J7cDCvg" name="Call(&lt;=).argument(y)" incoming="_-LO8eI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIO0o52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIO0452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LIO1I52EeKPK79J7cDCvg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LIO1Y52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LIO1o52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LIO1452EeKPK79J7cDCvg" name="ExpressionStatement@67ba8ceb">
              <node xmi:type="uml:ForkNode" xmi:id="_-LIO2I52EeKPK79J7cDCvg" name="Fork(condition2)@23b5f153" outgoing="_-LI1to52EeKPK79J7cDCvg" incoming="_-LI1lo52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1kI52EeKPK79J7cDCvg" name="RightHandSide@7df69275">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LI1kY52EeKPK79J7cDCvg" name="Value(alert)">
                  <result xmi:id="_-LI1ko52EeKPK79J7cDCvg" name="Value(alert).result" outgoing="_-LI1lo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1k452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1lI52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LI1lY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gY52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1lo52EeKPK79J7cDCvg" source="_-LI1ko52EeKPK79J7cDCvg" target="_-LIO2I52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1l452EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@23b5f153)">
              <structuredNodeInput xmi:id="_-LI1mI52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@23b5f153).input" outgoing="_-LI1no52EeKPK79J7cDCvg" incoming="_-LI1to52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1mY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1mo52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LI1m452EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@23b5f153).output" incoming="_-LI1no52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1nI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1nY52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1no52EeKPK79J7cDCvg" source="_-LI1mI52EeKPK79J7cDCvg" target="_-LI1m452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LI1n452EeKPK79J7cDCvg" name="Value(true)">
              <result xmi:id="_-LI1oI52EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1oY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1oo52EeKPK79J7cDCvg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_-LI1o452EeKPK79J7cDCvg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1pI52EeKPK79J7cDCvg" name="ExpressionStatement@5297c6e0">
              <node xmi:type="uml:ForkNode" xmi:id="_-LI1pY52EeKPK79J7cDCvg" name="Fork(condition2)@2d1dd3ea" outgoing="_-LI1t452EeKPK79J7cDCvg" incoming="_-LI1rI52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1po52EeKPK79J7cDCvg" name="RightHandSide@143beca">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LI1p452EeKPK79J7cDCvg" name="Value(critical)">
                  <result xmi:id="_-LI1qI52EeKPK79J7cDCvg" name="Value(critical).result" outgoing="_-LI1rI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1qY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1qo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LI1q452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_go52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1rI52EeKPK79J7cDCvg" source="_-LI1qI52EeKPK79J7cDCvg" target="_-LI1pY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1rY52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@2d1dd3ea)">
              <structuredNodeInput xmi:id="_-LI1ro52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@2d1dd3ea).input" outgoing="_-LI1tI52EeKPK79J7cDCvg" incoming="_-LI1t452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1r452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1sI52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LI1sY52EeKPK79J7cDCvg" name="Passthru(Fork(condition2)@2d1dd3ea).output" incoming="_-LI1tI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1so52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1s452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1tI52EeKPK79J7cDCvg" source="_-LI1ro52EeKPK79J7cDCvg" target="_-LI1sY52EeKPK79J7cDCvg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1tY52EeKPK79J7cDCvg" source="_-LIOvY52EeKPK79J7cDCvg" target="_-LIOxo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1to52EeKPK79J7cDCvg" source="_-LIO2I52EeKPK79J7cDCvg" target="_-LI1mI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI1t452EeKPK79J7cDCvg" source="_-LI1pY52EeKPK79J7cDCvg" target="_-LI1ro52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LI1uI52EeKPK79J7cDCvg" body="_-LIOvI52EeKPK79J7cDCvg _-LIOxY52EeKPK79J7cDCvg" bodyOutput="_-LIOyY52EeKPK79J7cDCvg" decider="_-LIOuY52EeKPK79J7cDCvg" successorClause="_-LI1uY52EeKPK79J7cDCvg" test="_-LIOso52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LI1uY52EeKPK79J7cDCvg" body="_-LIO1452EeKPK79J7cDCvg _-LI1l452EeKPK79J7cDCvg" bodyOutput="_-LI1m452EeKPK79J7cDCvg" decider="_-LIO1I52EeKPK79J7cDCvg" predecessorClause="_-LI1uI52EeKPK79J7cDCvg" successorClause="_-LI1uo52EeKPK79J7cDCvg" test="_-LIOzY52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LI1uo52EeKPK79J7cDCvg" body="_-LI1pI52EeKPK79J7cDCvg _-LI1rY52EeKPK79J7cDCvg" bodyOutput="_-LI1sY52EeKPK79J7cDCvg" decider="_-LI1oI52EeKPK79J7cDCvg" predecessorClause="_-LI1uY52EeKPK79J7cDCvg" test="_-LI1n452EeKPK79J7cDCvg"/>
            <result xmi:id="_-LI1u452EeKPK79J7cDCvg" name="IfStatement@61a11e5.result(condition2)" outgoing="_-LO8dI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1vI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1vY52EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LI1vo52EeKPK79J7cDCvg" name="Fork(condition2)" outgoing="_-LPjTY52EeKPK79J7cDCvg" incoming="_-LO8dI52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_-LI1v452EeKPK79J7cDCvg" name="IfStatement@2c7a6632" outgoing="_-LO8iI52EeKPK79J7cDCvg" incoming="_-LO8hY52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LI1wI52EeKPK79J7cDCvg" name="Call(&lt;=)">
              <argument xmi:id="_-LI1wY52EeKPK79J7cDCvg" name="Call(&lt;=).argument(x)" incoming="_-LO8e452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1wo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1w452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LI1xI52EeKPK79J7cDCvg" name="Call(&lt;=).argument(y)" incoming="_-LO8fI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1xY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1xo52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LI1x452EeKPK79J7cDCvg" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1yI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI1yY52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1yo52EeKPK79J7cDCvg" name="ExpressionStatement@601ca503">
              <node xmi:type="uml:ForkNode" xmi:id="_-LI1y452EeKPK79J7cDCvg" name="Fork(condition3)@4eed9585" outgoing="_-LKD3Y52EeKPK79J7cDCvg" incoming="_-LI10o52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI1zI52EeKPK79J7cDCvg" name="RightHandSide@4ff3773e">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LI1zY52EeKPK79J7cDCvg" name="Value(normal)">
                  <result xmi:id="_-LI1zo52EeKPK79J7cDCvg" name="Value(normal).result" outgoing="_-LI10o52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI1z452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI10I52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LI10Y52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gI52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI10o52EeKPK79J7cDCvg" source="_-LI1zo52EeKPK79J7cDCvg" target="_-LI1y452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI10452EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@4eed9585)">
              <structuredNodeInput xmi:id="_-LI11I52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@4eed9585).input" outgoing="_-LI12o52EeKPK79J7cDCvg" incoming="_-LKD3Y52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI11Y52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI11o52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LI11452EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@4eed9585).output" incoming="_-LI12o52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI12I52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI12Y52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LI12o52EeKPK79J7cDCvg" source="_-LI11I52EeKPK79J7cDCvg" target="_-LI11452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LI12452EeKPK79J7cDCvg" name="Call(>)">
              <argument xmi:id="_-LI13I52EeKPK79J7cDCvg" name="Call(>).argument(x)" incoming="_-LO8fY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI13Y52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI13o52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LI13452EeKPK79J7cDCvg" name="Call(>).argument(y)" incoming="_-LO8fo52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI14I52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI14Y52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LI14o52EeKPK79J7cDCvg" name="Call(>).result(result)" outgoing="_-LKD3452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI14452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LI15I52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LI15Y52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@40453eb2.operand2" incoming="_-LKD4I52EeKPK79J7cDCvg">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LI15o52EeKPK79J7cDCvg" name="Call(&lt;=)">
                <argument xmi:id="_-LI15452EeKPK79J7cDCvg" name="Call(&lt;=).argument(x)" incoming="_-LO8f452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LI16I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcoI52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LJcoY52EeKPK79J7cDCvg" name="Call(&lt;=).argument(y)" incoming="_-LO8gI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcoo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJco452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LJcpI52EeKPK79J7cDCvg" name="Call(&lt;=).result(result)" outgoing="_-LJcqo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcpY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcpo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
              <structuredNodeOutput xmi:id="_-LJcp452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@40453eb2.operand2.result" outgoing="_-LKD5I52EeKPK79J7cDCvg" incoming="_-LJcqo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcqI52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcqY52EeKPK79J7cDCvg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJcqo52EeKPK79J7cDCvg" source="_-LJcpI52EeKPK79J7cDCvg" target="_-LJcp452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJcq452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@40453eb2.operand3" incoming="_-LKD4o52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LJcrI52EeKPK79J7cDCvg" name="Value(false)">
                <result xmi:id="_-LJcrY52EeKPK79J7cDCvg" name="Value(false).result" outgoing="_-LJctI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcro52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcr452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_-LJcsI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_-LJcsY52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@40453eb2.operand3.result" outgoing="_-LKD5Y52EeKPK79J7cDCvg" incoming="_-LJctI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcso52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcs452EeKPK79J7cDCvg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJctI52EeKPK79J7cDCvg" source="_-LJcrY52EeKPK79J7cDCvg" target="_-LJcsY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_-LJctY52EeKPK79J7cDCvg" name="Initial(ConditionalLogicalExpression@40453eb2)" outgoing="_-LKD3o52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_-LJcto52EeKPK79J7cDCvg" name="Decision(ConditionalLogicalExpression@40453eb2)" outgoing="_-LKD4I52EeKPK79J7cDCvg _-LKD4o52EeKPK79J7cDCvg" incoming="_-LKD3o52EeKPK79J7cDCvg _-LKD3452EeKPK79J7cDCvg" decisionInputFlow="_-LKD3452EeKPK79J7cDCvg"/>
            <node xmi:type="uml:MergeNode" xmi:id="_-LJct452EeKPK79J7cDCvg" name="Merge(ConditionalLogicalExpression@40453eb2.result)" outgoing="_-LKD5o52EeKPK79J7cDCvg" incoming="_-LKD5I52EeKPK79J7cDCvg _-LKD5Y52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJcuI52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@40453eb2.result))">
              <structuredNodeInput xmi:id="_-LJcuY52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@40453eb2.result)).input" outgoing="_-LJcv452EeKPK79J7cDCvg" incoming="_-LKD5o52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcuo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcu452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LJcvI52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@40453eb2.result)).output" incoming="_-LJcv452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcvY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcvo52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJcv452EeKPK79J7cDCvg" source="_-LJcuY52EeKPK79J7cDCvg" target="_-LJcvI52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJcwI52EeKPK79J7cDCvg" name="ExpressionStatement@7ef7caeb">
              <node xmi:type="uml:ForkNode" xmi:id="_-LJcwY52EeKPK79J7cDCvg" name="Fork(condition3)@2282fd06" outgoing="_-LKD5452EeKPK79J7cDCvg" incoming="_-LJcyI52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJcwo52EeKPK79J7cDCvg" name="RightHandSide@45b1a69d">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LJcw452EeKPK79J7cDCvg" name="Value(alert)">
                  <result xmi:id="_-LJcxI52EeKPK79J7cDCvg" name="Value(alert).result" outgoing="_-LJcyI52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcxY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcxo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LJcx452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_gY52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJcyI52EeKPK79J7cDCvg" source="_-LJcxI52EeKPK79J7cDCvg" target="_-LJcwY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJcyY52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@2282fd06)">
              <structuredNodeInput xmi:id="_-LJcyo52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@2282fd06).input" outgoing="_-LJc0I52EeKPK79J7cDCvg" incoming="_-LKD5452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJcy452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJczI52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LJczY52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@2282fd06).output" incoming="_-LJc0I52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJczo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJcz452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJc0I52EeKPK79J7cDCvg" source="_-LJcyo52EeKPK79J7cDCvg" target="_-LJczY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LJc0Y52EeKPK79J7cDCvg" name="Call(>)">
              <argument xmi:id="_-LJc0o52EeKPK79J7cDCvg" name="Call(>).argument(x)" incoming="_-LO8gY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc0452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc1I52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <argument xmi:id="_-LJc1Y52EeKPK79J7cDCvg" name="Call(>).argument(y)" incoming="_-LO8go52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc1o52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc1452EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LJc2I52EeKPK79J7cDCvg" name="Call(>).result(result)" outgoing="_-LKD6Y52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc2Y52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc2o52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJc2452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@6e9d9864.operand2" incoming="_-LKD6o52EeKPK79J7cDCvg">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LJc3I52EeKPK79J7cDCvg" name="Call(&lt;)">
                <argument xmi:id="_-LJc3Y52EeKPK79J7cDCvg" name="Call(&lt;).argument(x)" incoming="_-LO8g452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc3o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc3452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LJc4I52EeKPK79J7cDCvg" name="Call(&lt;).argument(y)" incoming="_-LO8hI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc4Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc4o52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LJc4452EeKPK79J7cDCvg" name="Call(&lt;).result(result)" outgoing="_-LJc6Y52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc5I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc5Y52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
              </node>
              <structuredNodeOutput xmi:id="_-LJc5o52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@6e9d9864.operand2.result" outgoing="_-LKD7o52EeKPK79J7cDCvg" incoming="_-LJc6Y52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc5452EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc6I52EeKPK79J7cDCvg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJc6Y52EeKPK79J7cDCvg" source="_-LJc4452EeKPK79J7cDCvg" target="_-LJc5o52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJc6o52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@6e9d9864.operand3" incoming="_-LKD7I52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LJc6452EeKPK79J7cDCvg" name="Value(false)">
                <result xmi:id="_-LJc7I52EeKPK79J7cDCvg" name="Value(false).result" outgoing="_-LJc8452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc7Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc7o52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_-LJc7452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_-LJc8I52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@6e9d9864.operand3.result" outgoing="_-LKD7452EeKPK79J7cDCvg" incoming="_-LJc8452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LJc8Y52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LJc8o52EeKPK79J7cDCvg" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LJc8452EeKPK79J7cDCvg" source="_-LJc7I52EeKPK79J7cDCvg" target="_-LJc8I52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_-LJc9I52EeKPK79J7cDCvg" name="Initial(ConditionalLogicalExpression@6e9d9864)" outgoing="_-LKD6I52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_-LJc9Y52EeKPK79J7cDCvg" name="Decision(ConditionalLogicalExpression@6e9d9864)" outgoing="_-LKD6o52EeKPK79J7cDCvg _-LKD7I52EeKPK79J7cDCvg" incoming="_-LKD6I52EeKPK79J7cDCvg _-LKD6Y52EeKPK79J7cDCvg" decisionInputFlow="_-LKD6Y52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:MergeNode" xmi:id="_-LJc9o52EeKPK79J7cDCvg" name="Merge(ConditionalLogicalExpression@6e9d9864.result)" outgoing="_-LKD8I52EeKPK79J7cDCvg" incoming="_-LKD7o52EeKPK79J7cDCvg _-LKD7452EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LJc9452EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@6e9d9864.result))">
              <structuredNodeInput xmi:id="_-LJc-I52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@6e9d9864.result)).input" outgoing="_-LKDtY52EeKPK79J7cDCvg" incoming="_-LKD8I52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKDsI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKDsY52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LKDso52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@6e9d9864.result)).output" incoming="_-LKDtY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKDs452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKDtI52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKDtY52EeKPK79J7cDCvg" source="_-LJc-I52EeKPK79J7cDCvg" target="_-LKDso52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKDto52EeKPK79J7cDCvg" name="ExpressionStatement@2fa252ef">
              <node xmi:type="uml:ForkNode" xmi:id="_-LKDt452EeKPK79J7cDCvg" name="Fork(condition3)@2ed6b2db" outgoing="_-LKD8Y52EeKPK79J7cDCvg" incoming="_-LKDvo52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKDuI52EeKPK79J7cDCvg" name="RightHandSide@11785fe3">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKDuY52EeKPK79J7cDCvg" name="Value(critical)">
                  <result xmi:id="_-LKDuo52EeKPK79J7cDCvg" name="Value(critical).result" outgoing="_-LKDvo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKDu452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKDvI52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LKDvY52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_go52EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKDvo52EeKPK79J7cDCvg" source="_-LKDuo52EeKPK79J7cDCvg" target="_-LKDt452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKDv452EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@2ed6b2db)">
              <structuredNodeInput xmi:id="_-LKDwI52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@2ed6b2db).input" outgoing="_-LKDxo52EeKPK79J7cDCvg" incoming="_-LKD8Y52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKDwY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKDwo52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LKDw452EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@2ed6b2db).output" incoming="_-LKDxo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKDxI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKDxY52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKDxo52EeKPK79J7cDCvg" source="_-LKDwI52EeKPK79J7cDCvg" target="_-LKDw452EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKDx452EeKPK79J7cDCvg" name="Value(true)">
              <result xmi:id="_-LKDyI52EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKDyY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKDyo52EeKPK79J7cDCvg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_-LKDy452EeKPK79J7cDCvg" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKDzI52EeKPK79J7cDCvg" name="ExpressionStatement@2bf6d13a">
              <node xmi:type="uml:ForkNode" xmi:id="_-LKDzY52EeKPK79J7cDCvg" name="Fork(condition3)@4e6ce81e" outgoing="_-LKD8o52EeKPK79J7cDCvg" incoming="_-LKD1I52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKDzo52EeKPK79J7cDCvg" name="RightHandSide@4ffb31cb">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKDz452EeKPK79J7cDCvg" name="Value(error)">
                  <result xmi:id="_-LKD0I52EeKPK79J7cDCvg" name="Value(error).result" outgoing="_-LKD1I52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKD0Y52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKD0o52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_-LKD0452EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" instance="_-LR_g452EeKPK79J7cDCvg"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD1I52EeKPK79J7cDCvg" source="_-LKD0I52EeKPK79J7cDCvg" target="_-LKDzY52EeKPK79J7cDCvg"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKD1Y52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@4e6ce81e)">
              <structuredNodeInput xmi:id="_-LKD1o52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@4e6ce81e).input" outgoing="_-LKD3I52EeKPK79J7cDCvg" incoming="_-LKD8o52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKD1452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKD2I52EeKPK79J7cDCvg" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LKD2Y52EeKPK79J7cDCvg" name="Passthru(Fork(condition3)@4e6ce81e).output" incoming="_-LKD3I52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKD2o52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKD2452EeKPK79J7cDCvg" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD3I52EeKPK79J7cDCvg" source="_-LKD1o52EeKPK79J7cDCvg" target="_-LKD2Y52EeKPK79J7cDCvg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD3Y52EeKPK79J7cDCvg" source="_-LI1y452EeKPK79J7cDCvg" target="_-LI11I52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LKD3o52EeKPK79J7cDCvg" source="_-LJctY52EeKPK79J7cDCvg" target="_-LJcto52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD3452EeKPK79J7cDCvg" source="_-LI14o52EeKPK79J7cDCvg" target="_-LJcto52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LKD4I52EeKPK79J7cDCvg" source="_-LJcto52EeKPK79J7cDCvg" target="_-LI15Y52EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LKD4Y52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LKD4o52EeKPK79J7cDCvg" source="_-LJcto52EeKPK79J7cDCvg" target="_-LJcq452EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LKD4452EeKPK79J7cDCvg" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD5I52EeKPK79J7cDCvg" source="_-LJcp452EeKPK79J7cDCvg" target="_-LJct452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD5Y52EeKPK79J7cDCvg" source="_-LJcsY52EeKPK79J7cDCvg" target="_-LJct452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD5o52EeKPK79J7cDCvg" source="_-LJct452EeKPK79J7cDCvg" target="_-LJcuY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD5452EeKPK79J7cDCvg" source="_-LJcwY52EeKPK79J7cDCvg" target="_-LJcyo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LKD6I52EeKPK79J7cDCvg" source="_-LJc9I52EeKPK79J7cDCvg" target="_-LJc9Y52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD6Y52EeKPK79J7cDCvg" source="_-LJc2I52EeKPK79J7cDCvg" target="_-LJc9Y52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LKD6o52EeKPK79J7cDCvg" source="_-LJc9Y52EeKPK79J7cDCvg" target="_-LJc2452EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LKD6452EeKPK79J7cDCvg" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LKD7I52EeKPK79J7cDCvg" source="_-LJc9Y52EeKPK79J7cDCvg" target="_-LJc6o52EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LKD7Y52EeKPK79J7cDCvg" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD7o52EeKPK79J7cDCvg" source="_-LJc5o52EeKPK79J7cDCvg" target="_-LJc9o52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD7452EeKPK79J7cDCvg" source="_-LJc8I52EeKPK79J7cDCvg" target="_-LJc9o52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD8I52EeKPK79J7cDCvg" source="_-LJc9o52EeKPK79J7cDCvg" target="_-LJc-I52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD8Y52EeKPK79J7cDCvg" source="_-LKDt452EeKPK79J7cDCvg" target="_-LKDwI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKD8o52EeKPK79J7cDCvg" source="_-LKDzY52EeKPK79J7cDCvg" target="_-LKD1o52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LKD8452EeKPK79J7cDCvg" body="_-LI1yo52EeKPK79J7cDCvg _-LI10452EeKPK79J7cDCvg" bodyOutput="_-LI11452EeKPK79J7cDCvg" decider="_-LI1x452EeKPK79J7cDCvg" successorClause="_-LKD9I52EeKPK79J7cDCvg _-LKD9Y52EeKPK79J7cDCvg" test="_-LI1wI52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LKD9I52EeKPK79J7cDCvg" body="_-LJcwI52EeKPK79J7cDCvg _-LJcyY52EeKPK79J7cDCvg" bodyOutput="_-LJczY52EeKPK79J7cDCvg" decider="_-LJcvI52EeKPK79J7cDCvg" predecessorClause="_-LKD8452EeKPK79J7cDCvg" successorClause="_-LKD9o52EeKPK79J7cDCvg" test="_-LI12452EeKPK79J7cDCvg _-LI15Y52EeKPK79J7cDCvg _-LJcq452EeKPK79J7cDCvg _-LJcuI52EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LKD9Y52EeKPK79J7cDCvg" body="_-LKDto52EeKPK79J7cDCvg _-LKDv452EeKPK79J7cDCvg" bodyOutput="_-LKDw452EeKPK79J7cDCvg" decider="_-LKDso52EeKPK79J7cDCvg" predecessorClause="_-LKD8452EeKPK79J7cDCvg" successorClause="_-LKD9o52EeKPK79J7cDCvg" test="_-LJc0Y52EeKPK79J7cDCvg _-LJc2452EeKPK79J7cDCvg _-LJc6o52EeKPK79J7cDCvg _-LJc9452EeKPK79J7cDCvg"/>
            <clause xmi:id="_-LKD9o52EeKPK79J7cDCvg" body="_-LKDzI52EeKPK79J7cDCvg _-LKD1Y52EeKPK79J7cDCvg" bodyOutput="_-LKD2Y52EeKPK79J7cDCvg" decider="_-LKDyI52EeKPK79J7cDCvg" predecessorClause="_-LKD9I52EeKPK79J7cDCvg _-LKD9Y52EeKPK79J7cDCvg" test="_-LKDx452EeKPK79J7cDCvg"/>
            <result xmi:id="_-LKD9452EeKPK79J7cDCvg" name="IfStatement@2c7a6632.result(condition3)" outgoing="_-LO8eo52EeKPK79J7cDCvg" type="_-LRYvo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKD-I52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKD-Y52EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LKD-o52EeKPK79J7cDCvg" name="Fork(condition3)" outgoing="_-LPjTo52EeKPK79J7cDCvg" incoming="_-LO8eo52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKD-452EeKPK79J7cDCvg" name="SwitchStatement@7fceb418" outgoing="_-LPjS452EeKPK79J7cDCvg" incoming="_-LO8iI52EeKPK79J7cDCvg">
            <node xmi:type="uml:ConditionalNode" xmi:id="_-LKD_I52EeKPK79J7cDCvg" name="Conditional(SwitchStatement@7fceb418)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKD_Y52EeKPK79J7cDCvg" name="Value(2012)">
                <result xmi:id="_-LKD_o52EeKPK79J7cDCvg" name="Value(2012).result" outgoing="_-LKq6452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKD_452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKEAI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LKEAY52EeKPK79J7cDCvg" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LKEAo52EeKPK79J7cDCvg" name="Test(Case(Value(2012).result))">
                <first xmi:id="_-LKEA452EeKPK79J7cDCvg" name="Test(Case(Value(2012).result)).first" incoming="_-LO8h452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKEBI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKEBY52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LKEBo52EeKPK79J7cDCvg" name="Test(Case(Value(2012).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKEB452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKqwI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LKqwY52EeKPK79J7cDCvg" name="Test(Case(Value(2012).result)).second" incoming="_-LKq6452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKqwo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKqw452EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKqxI52EeKPK79J7cDCvg" name="ExpressionStatement@f08eda9">
                <node xmi:type="uml:ForkNode" xmi:id="_-LKqxY52EeKPK79J7cDCvg" name="Fork(month)@6dc8140c" outgoing="_-LKq7I52EeKPK79J7cDCvg" incoming="_-LKqzI52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKqxo52EeKPK79J7cDCvg" name="RightHandSide@6a9c5822">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKqx452EeKPK79J7cDCvg" name="Value(2)">
                    <result xmi:id="_-LKqyI52EeKPK79J7cDCvg" name="Value(2).result" outgoing="_-LKqzI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKqyY52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKqyo52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LKqy452EeKPK79J7cDCvg" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKqzI52EeKPK79J7cDCvg" source="_-LKqyI52EeKPK79J7cDCvg" target="_-LKqxY52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKqzY52EeKPK79J7cDCvg" name="Passthru(Fork(month)@6dc8140c)">
                <structuredNodeInput xmi:id="_-LKqzo52EeKPK79J7cDCvg" name="Passthru(Fork(month)@6dc8140c).input" outgoing="_-LKq1I52EeKPK79J7cDCvg" incoming="_-LKq7I52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKqz452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq0I52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LKq0Y52EeKPK79J7cDCvg" name="Passthru(Fork(month)@6dc8140c).output" incoming="_-LKq1I52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq0o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq0452EeKPK79J7cDCvg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq1I52EeKPK79J7cDCvg" source="_-LKqzo52EeKPK79J7cDCvg" target="_-LKq0Y52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKq1Y52EeKPK79J7cDCvg" name="Value(true)">
                <result xmi:id="_-LKq1o52EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq1452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq2I52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_-LKq2Y52EeKPK79J7cDCvg" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKq2o52EeKPK79J7cDCvg" name="ExpressionStatement@230ff79f">
                <node xmi:type="uml:ForkNode" xmi:id="_-LKq2452EeKPK79J7cDCvg" name="Fork(month)@6c3b81ab" outgoing="_-LKq7Y52EeKPK79J7cDCvg" incoming="_-LKq4o52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKq3I52EeKPK79J7cDCvg" name="RightHandSide@36be3910">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKq3Y52EeKPK79J7cDCvg" name="Value(3)">
                    <result xmi:id="_-LKq3o52EeKPK79J7cDCvg" name="Value(3).result" outgoing="_-LKq4o52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq3452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq4I52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LKq4Y52EeKPK79J7cDCvg" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq4o52EeKPK79J7cDCvg" source="_-LKq3o52EeKPK79J7cDCvg" target="_-LKq2452EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKq4452EeKPK79J7cDCvg" name="Passthru(Fork(month)@6c3b81ab)">
                <structuredNodeInput xmi:id="_-LKq5I52EeKPK79J7cDCvg" name="Passthru(Fork(month)@6c3b81ab).input" outgoing="_-LKq6o52EeKPK79J7cDCvg" incoming="_-LKq7Y52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq5Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq5o52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LKq5452EeKPK79J7cDCvg" name="Passthru(Fork(month)@6c3b81ab).output" incoming="_-LKq6o52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq6I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq6Y52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq6o52EeKPK79J7cDCvg" source="_-LKq5I52EeKPK79J7cDCvg" target="_-LKq5452EeKPK79J7cDCvg"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq6452EeKPK79J7cDCvg" source="_-LKD_o52EeKPK79J7cDCvg" target="_-LKqwY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq7I52EeKPK79J7cDCvg" source="_-LKqxY52EeKPK79J7cDCvg" target="_-LKqzo52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq7Y52EeKPK79J7cDCvg" source="_-LKq2452EeKPK79J7cDCvg" target="_-LKq5I52EeKPK79J7cDCvg"/>
              <clause xmi:id="_-LKq7o52EeKPK79J7cDCvg" body="_-LKqxI52EeKPK79J7cDCvg _-LKqzY52EeKPK79J7cDCvg" bodyOutput="_-LKq0Y52EeKPK79J7cDCvg" decider="_-LKEBo52EeKPK79J7cDCvg" successorClause="_-LKq7452EeKPK79J7cDCvg" test="_-LKD_Y52EeKPK79J7cDCvg _-LKEAo52EeKPK79J7cDCvg"/>
              <clause xmi:id="_-LKq7452EeKPK79J7cDCvg" body="_-LKq2o52EeKPK79J7cDCvg _-LKq4452EeKPK79J7cDCvg" bodyOutput="_-LKq5452EeKPK79J7cDCvg" decider="_-LKq1o52EeKPK79J7cDCvg" predecessorClause="_-LKq7o52EeKPK79J7cDCvg" test="_-LKq1Y52EeKPK79J7cDCvg"/>
              <result xmi:id="_-LKq8I52EeKPK79J7cDCvg" name="Conditional(SwitchStatement@7fceb418).result(month)" outgoing="_-LKq9Y52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq8Y52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq8o52EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LKq8452EeKPK79J7cDCvg" name="Fork(month)" outgoing="_-LO8iY52EeKPK79J7cDCvg _-LO8io52EeKPK79J7cDCvg _-LO8i452EeKPK79J7cDCvg _-LO8jI52EeKPK79J7cDCvg _-LO8jY52EeKPK79J7cDCvg _-LPjQI52EeKPK79J7cDCvg _-LPjQY52EeKPK79J7cDCvg _-LPjQo52EeKPK79J7cDCvg _-LPjQ452EeKPK79J7cDCvg _-LPjRI52EeKPK79J7cDCvg _-LPjRY52EeKPK79J7cDCvg _-LPjRo52EeKPK79J7cDCvg _-LPjR452EeKPK79J7cDCvg _-LPjUI52EeKPK79J7cDCvg" incoming="_-LKq9Y52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LKq9I52EeKPK79J7cDCvg" name="Fork(Fork(year)@37a3d5b2)" incoming="_-LO8ho52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LKq9Y52EeKPK79J7cDCvg" source="_-LKq8I52EeKPK79J7cDCvg" target="_-LKq8452EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LKq9o52EeKPK79J7cDCvg" name="SwitchStatement@5f390734" incoming="_-LPjS452EeKPK79J7cDCvg">
            <node xmi:type="uml:ConditionalNode" xmi:id="_-LKq9452EeKPK79J7cDCvg" name="Conditional(SwitchStatement@5f390734)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKq-I52EeKPK79J7cDCvg" name="Value(1)">
                <result xmi:id="_-LKq-Y52EeKPK79J7cDCvg" name="Value(1).result" outgoing="_-LOVZI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq-o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKq-452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LKq_I52EeKPK79J7cDCvg" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LKq_Y52EeKPK79J7cDCvg" name="Test(Case(Value(1).result))">
                <first xmi:id="_-LKq_o52EeKPK79J7cDCvg" name="Test(Case(Value(1).result)).first" incoming="_-LO8io52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKq_452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrAI52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LKrAY52EeKPK79J7cDCvg" name="Test(Case(Value(1).result)).result" outgoing="_-LOVZo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKrAo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrA452EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LKrBI52EeKPK79J7cDCvg" name="Test(Case(Value(1).result)).second" incoming="_-LOVZI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKrBY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrBo52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LKrB452EeKPK79J7cDCvg" name="Value(3)">
                <result xmi:id="_-LKrCI52EeKPK79J7cDCvg" name="Value(3).result" outgoing="_-LOVZY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKrCY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrCo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LKrC452EeKPK79J7cDCvg" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LKrDI52EeKPK79J7cDCvg" name="Test(Case(Value(3).result))">
                <first xmi:id="_-LKrDY52EeKPK79J7cDCvg" name="Test(Case(Value(3).result)).first" incoming="_-LO8i452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKrDo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrD452EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LKrEI52EeKPK79J7cDCvg" name="Test(Case(Value(3).result)).result" outgoing="_-LOVZ452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKrEY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrEo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LKrE452EeKPK79J7cDCvg" name="Test(Case(Value(3).result)).second" incoming="_-LOVZY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LKrFI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LKrFY52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LKrFo52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LLR0I52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LOVZo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR0Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR0o52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LLR0452EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LOVZ452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR1I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR1Y52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LLR1o52EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LOVaY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR1452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR2I52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LLR2Y52EeKPK79J7cDCvg" name="Value(5)">
                <result xmi:id="_-LLR2o52EeKPK79J7cDCvg" name="Value(5).result" outgoing="_-LOVaI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR2452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR3I52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LLR3Y52EeKPK79J7cDCvg" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LLR3o52EeKPK79J7cDCvg" name="Test(Case(Value(5).result))">
                <first xmi:id="_-LLR3452EeKPK79J7cDCvg" name="Test(Case(Value(5).result)).first" incoming="_-LO8jI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR4I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR4Y52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LLR4o52EeKPK79J7cDCvg" name="Test(Case(Value(5).result)).result" outgoing="_-LOVao52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR4452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR5I52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LLR5Y52EeKPK79J7cDCvg" name="Test(Case(Value(5).result)).second" incoming="_-LOVaI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR5o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR5452EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LLR6I52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LLR6Y52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LOVaY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR6o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR6452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LLR7I52EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LOVao52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR7Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR7o52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LLR7452EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LOVbI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR8I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR8Y52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LLR8o52EeKPK79J7cDCvg" name="Value(7)">
                <result xmi:id="_-LLR8452EeKPK79J7cDCvg" name="Value(7).result" outgoing="_-LOVa452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR9I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR9Y52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LLR9o52EeKPK79J7cDCvg" value="7">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LLR9452EeKPK79J7cDCvg" name="Test(Case(Value(7).result))">
                <first xmi:id="_-LLR-I52EeKPK79J7cDCvg" name="Test(Case(Value(7).result)).first" incoming="_-LO8jY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR-Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR-o52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LLR-452EeKPK79J7cDCvg" name="Test(Case(Value(7).result)).result" outgoing="_-LOVbY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR_I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLR_Y52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LLR_o52EeKPK79J7cDCvg" name="Test(Case(Value(7).result)).second" incoming="_-LOVa452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLR_452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSAI52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LLSAY52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LLSAo52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LOVbI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSA452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSBI52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LLSBY52EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LOVbY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSBo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSB452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LLSCI52EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LOVb452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSCY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSCo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LLSC452EeKPK79J7cDCvg" name="Value(8)">
                <result xmi:id="_-LLSDI52EeKPK79J7cDCvg" name="Value(8).result" outgoing="_-LOVbo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSDY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSDo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LLSD452EeKPK79J7cDCvg" value="8">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LLSEI52EeKPK79J7cDCvg" name="Test(Case(Value(8).result))">
                <first xmi:id="_-LLSEY52EeKPK79J7cDCvg" name="Test(Case(Value(8).result)).first" incoming="_-LPjQI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSEo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSE452EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LLSFI52EeKPK79J7cDCvg" name="Test(Case(Value(8).result)).result" outgoing="_-LOVcI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSFY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSFo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LLSF452EeKPK79J7cDCvg" name="Test(Case(Value(8).result)).second" incoming="_-LOVbo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSGI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSGY52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LLSGo52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LLSG452EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LOVb452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSHI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSHY52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LLSHo52EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LOVcI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSH452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSII52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LLSIY52EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LOVco52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSIo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSI452EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LLSJI52EeKPK79J7cDCvg" name="Value(10)">
                <result xmi:id="_-LLSJY52EeKPK79J7cDCvg" name="Value(10).result" outgoing="_-LOVcY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSJo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSJ452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LLSKI52EeKPK79J7cDCvg" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LLSKY52EeKPK79J7cDCvg" name="Test(Case(Value(10).result))">
                <first xmi:id="_-LLSKo52EeKPK79J7cDCvg" name="Test(Case(Value(10).result)).first" incoming="_-LPjQY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSK452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSLI52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LLSLY52EeKPK79J7cDCvg" name="Test(Case(Value(10).result)).result" outgoing="_-LOVc452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LLSLo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LLSL452EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LLSMI52EeKPK79J7cDCvg" name="Test(Case(Value(10).result)).second" incoming="_-LOVcY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL44I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL44Y52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LL44o52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LL44452EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LOVco52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL45I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL45Y52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LL45o52EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LOVc452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL45452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL46I52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LL46Y52EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LOVdY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL46o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL46452EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LL47I52EeKPK79J7cDCvg" name="Value(12)">
                <result xmi:id="_-LL47Y52EeKPK79J7cDCvg" name="Value(12).result" outgoing="_-LOVdI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL47o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL47452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LL48I52EeKPK79J7cDCvg" value="12">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LL48Y52EeKPK79J7cDCvg" name="Test(Case(Value(12).result))">
                <first xmi:id="_-LL48o52EeKPK79J7cDCvg" name="Test(Case(Value(12).result)).first" incoming="_-LPjQo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL48452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL49I52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LL49Y52EeKPK79J7cDCvg" name="Test(Case(Value(12).result)).result" outgoing="_-LOVdo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL49o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL49452EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LL4-I52EeKPK79J7cDCvg" name="Test(Case(Value(12).result)).second" incoming="_-LOVdI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL4-Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL4-o52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LL4-452EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LL4_I52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LOVdY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL4_Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL4_o52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LL4_452EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LOVdo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5AI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5AY52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LL5Ao52EeKPK79J7cDCvg" name="Call(Or).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5A452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5BI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LL5BY52EeKPK79J7cDCvg" name="ExpressionStatement@186305ad">
                <node xmi:type="uml:ForkNode" xmi:id="_-LL5Bo52EeKPK79J7cDCvg" name="Fork(numDays)@4272a0bc" outgoing="_-LO8MI52EeKPK79J7cDCvg" incoming="_-LL5DY52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LL5B452EeKPK79J7cDCvg" name="RightHandSide@7396b8b8">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LL5CI52EeKPK79J7cDCvg" name="Value(31)">
                    <result xmi:id="_-LL5CY52EeKPK79J7cDCvg" name="Value(31).result" outgoing="_-LL5DY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5Co52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5C452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LL5DI52EeKPK79J7cDCvg" value="31">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LL5DY52EeKPK79J7cDCvg" source="_-LL5CY52EeKPK79J7cDCvg" target="_-LL5Bo52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LL5Do52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@4272a0bc)">
                <structuredNodeInput xmi:id="_-LL5D452EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@4272a0bc).input" outgoing="_-LL5FY52EeKPK79J7cDCvg" incoming="_-LO8MI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5EI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5EY52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LL5Eo52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@4272a0bc).output" incoming="_-LL5FY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5E452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5FI52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LL5FY52EeKPK79J7cDCvg" source="_-LL5D452EeKPK79J7cDCvg" target="_-LL5Eo52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LL5Fo52EeKPK79J7cDCvg" name="Value(4)">
                <result xmi:id="_-LL5F452EeKPK79J7cDCvg" name="Value(4).result" outgoing="_-LO8MY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5GI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5GY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LL5Go52EeKPK79J7cDCvg" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LL5G452EeKPK79J7cDCvg" name="Test(Case(Value(4).result))">
                <first xmi:id="_-LL5HI52EeKPK79J7cDCvg" name="Test(Case(Value(4).result)).first" incoming="_-LPjQ452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5HY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5Ho52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LL5H452EeKPK79J7cDCvg" name="Test(Case(Value(4).result)).result" outgoing="_-LO8M452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5II52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5IY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LL5Io52EeKPK79J7cDCvg" name="Test(Case(Value(4).result)).second" incoming="_-LO8MY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5I452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5JI52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LL5JY52EeKPK79J7cDCvg" name="Value(6)">
                <result xmi:id="_-LL5Jo52EeKPK79J7cDCvg" name="Value(6).result" outgoing="_-LO8Mo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5J452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5KI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LL5KY52EeKPK79J7cDCvg" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LL5Ko52EeKPK79J7cDCvg" name="Test(Case(Value(6).result))">
                <first xmi:id="_-LL5K452EeKPK79J7cDCvg" name="Test(Case(Value(6).result)).first" incoming="_-LPjRI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5LI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5LY52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LL5Lo52EeKPK79J7cDCvg" name="Test(Case(Value(6).result)).result" outgoing="_-LO8NI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5L452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5MI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LL5MY52EeKPK79J7cDCvg" name="Test(Case(Value(6).result)).second" incoming="_-LO8Mo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5Mo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5M452EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LL5NI52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LL5NY52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LO8M452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5No52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5N452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LL5OI52EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LO8NI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5OY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5Oo52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LL5O452EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LO8No52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LL5PI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LL5PY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LMf8I52EeKPK79J7cDCvg" name="Value(9)">
                <result xmi:id="_-LMf8Y52EeKPK79J7cDCvg" name="Value(9).result" outgoing="_-LO8NY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMf8o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMf8452EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LMf9I52EeKPK79J7cDCvg" value="9">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LMf9Y52EeKPK79J7cDCvg" name="Test(Case(Value(9).result))">
                <first xmi:id="_-LMf9o52EeKPK79J7cDCvg" name="Test(Case(Value(9).result)).first" incoming="_-LPjRY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMf9452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMf-I52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LMf-Y52EeKPK79J7cDCvg" name="Test(Case(Value(9).result)).result" outgoing="_-LO8N452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMf-o52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMf-452EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LMf_I52EeKPK79J7cDCvg" name="Test(Case(Value(9).result)).second" incoming="_-LO8NY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMf_Y52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMf_o52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LMf_452EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LMgAI52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LO8No52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgAY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgAo52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LMgA452EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LO8N452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgBI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgBY52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LMgBo52EeKPK79J7cDCvg" name="Call(Or).result(result)" outgoing="_-LO8OY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgB452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgCI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LMgCY52EeKPK79J7cDCvg" name="Value(11)">
                <result xmi:id="_-LMgCo52EeKPK79J7cDCvg" name="Value(11).result" outgoing="_-LO8OI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgC452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgDI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LMgDY52EeKPK79J7cDCvg" value="11">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LMgDo52EeKPK79J7cDCvg" name="Test(Case(Value(11).result))">
                <first xmi:id="_-LMgD452EeKPK79J7cDCvg" name="Test(Case(Value(11).result)).first" incoming="_-LPjRo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgEI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgEY52EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LMgEo52EeKPK79J7cDCvg" name="Test(Case(Value(11).result)).result" outgoing="_-LO8Oo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgE452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgFI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LMgFY52EeKPK79J7cDCvg" name="Test(Case(Value(11).result)).second" incoming="_-LO8OI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgFo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgF452EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LMgGI52EeKPK79J7cDCvg" name="Call(Or)">
                <argument xmi:id="_-LMgGY52EeKPK79J7cDCvg" name="Call(Or).argument(x)" incoming="_-LO8OY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgGo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgG452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LMgHI52EeKPK79J7cDCvg" name="Call(Or).argument(y)" incoming="_-LO8Oo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgHY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgHo52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LMgH452EeKPK79J7cDCvg" name="Call(Or).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgII52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgIY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LMgIo52EeKPK79J7cDCvg" name="ExpressionStatement@680af166">
                <node xmi:type="uml:ForkNode" xmi:id="_-LMgI452EeKPK79J7cDCvg" name="Fork(numDays)@2c12b964" outgoing="_-LO8O452EeKPK79J7cDCvg" incoming="_-LMgKo52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LMgJI52EeKPK79J7cDCvg" name="RightHandSide@1496ad7">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LMgJY52EeKPK79J7cDCvg" name="Value(30)">
                    <result xmi:id="_-LMgJo52EeKPK79J7cDCvg" name="Value(30).result" outgoing="_-LMgKo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgJ452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgKI52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LMgKY52EeKPK79J7cDCvg" value="30">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LMgKo52EeKPK79J7cDCvg" source="_-LMgJo52EeKPK79J7cDCvg" target="_-LMgI452EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LMgK452EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@2c12b964)">
                <structuredNodeInput xmi:id="_-LMgLI52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@2c12b964).input" outgoing="_-LMgMo52EeKPK79J7cDCvg" incoming="_-LO8O452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgLY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgLo52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LMgL452EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@2c12b964).output" incoming="_-LMgMo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgMI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgMY52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LMgMo52EeKPK79J7cDCvg" source="_-LMgLI52EeKPK79J7cDCvg" target="_-LMgL452EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LMgM452EeKPK79J7cDCvg" name="Value(2)">
                <result xmi:id="_-LMgNI52EeKPK79J7cDCvg" name="Value(2).result" outgoing="_-LO8PI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgNY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgNo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LMgN452EeKPK79J7cDCvg" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_-LMgOI52EeKPK79J7cDCvg" name="Test(Case(Value(2).result))">
                <first xmi:id="_-LMgOY52EeKPK79J7cDCvg" name="Test(Case(Value(2).result)).first" incoming="_-LPjR452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgOo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgO452EeKPK79J7cDCvg" value="1"/>
                </first>
                <result xmi:id="_-LMgPI52EeKPK79J7cDCvg" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgPY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgPo52EeKPK79J7cDCvg" value="1"/>
                </result>
                <second xmi:id="_-LMgP452EeKPK79J7cDCvg" name="Test(Case(Value(2).result)).second" incoming="_-LO8PI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgQI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgQY52EeKPK79J7cDCvg" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ConditionalNode" xmi:id="_-LMgQo52EeKPK79J7cDCvg" name="IfStatement@5d956d73">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LMgQ452EeKPK79J7cDCvg" name="Value(4)">
                  <result xmi:id="_-LMgRI52EeKPK79J7cDCvg" name="Value(4).result" outgoing="_-LNuZI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgRY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgRo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_-LMgR452EeKPK79J7cDCvg" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LMgSI52EeKPK79J7cDCvg" name="Call(Mod)">
                  <argument xmi:id="_-LMgSY52EeKPK79J7cDCvg" name="Call(Mod).argument(x)" incoming="_-LPjSI52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LMgSo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LMgS452EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <argument xmi:id="_-LMgTI52EeKPK79J7cDCvg" name="Call(Mod).argument(y)" incoming="_-LNuZI52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHAI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHAY52EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <result xmi:id="_-LNHAo52EeKPK79J7cDCvg" name="Call(Mod).result(result)" outgoing="_-LNuZY52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHA452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHBI52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNHBY52EeKPK79J7cDCvg" name="Value(0)">
                  <result xmi:id="_-LNHBo52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LNuZo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHB452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHCI52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_-LNHCY52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_-LNHCo52EeKPK79J7cDCvg" name="Test(==)">
                  <first xmi:id="_-LNHC452EeKPK79J7cDCvg" name="Test(==).first" incoming="_-LNuZY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHDI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHDY52EeKPK79J7cDCvg" value="1"/>
                  </first>
                  <result xmi:id="_-LNHDo52EeKPK79J7cDCvg" name="Test(==).result" outgoing="_-LNuaI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHD452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHEI52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <second xmi:id="_-LNHEY52EeKPK79J7cDCvg" name="Test(==).second" incoming="_-LNuZo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHEo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHE452EeKPK79J7cDCvg" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNHFI52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@152122bf.operand2" incoming="_-LNuaY52EeKPK79J7cDCvg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNHFY52EeKPK79J7cDCvg" name="Value(100)">
                    <result xmi:id="_-LNHFo52EeKPK79J7cDCvg" name="Value(100).result" outgoing="_-LNHPY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHF452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHGI52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LNHGY52EeKPK79J7cDCvg" value="100">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LNHGo52EeKPK79J7cDCvg" name="Call(Mod)">
                    <argument xmi:id="_-LNHG452EeKPK79J7cDCvg" name="Call(Mod).argument(x)" incoming="_-LPjSY52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHHI52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHHY52EeKPK79J7cDCvg" value="1"/>
                    </argument>
                    <argument xmi:id="_-LNHHo52EeKPK79J7cDCvg" name="Call(Mod).argument(y)" incoming="_-LNHPY52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHH452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHII52EeKPK79J7cDCvg" value="1"/>
                    </argument>
                    <result xmi:id="_-LNHIY52EeKPK79J7cDCvg" name="Call(Mod).result(result)" outgoing="_-LNHPo52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHIo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHI452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNHJI52EeKPK79J7cDCvg" name="Value(0)">
                    <result xmi:id="_-LNHJY52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LNHP452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHJo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHJ452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LNHKI52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_-LNHKY52EeKPK79J7cDCvg" name="Test(==)">
                    <first xmi:id="_-LNHKo52EeKPK79J7cDCvg" name="Test(==).first" incoming="_-LNHPo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHK452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHLI52EeKPK79J7cDCvg" value="1"/>
                    </first>
                    <result xmi:id="_-LNHLY52EeKPK79J7cDCvg" name="Test(==).result" outgoing="_-LNHQI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHLo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHL452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <second xmi:id="_-LNHMI52EeKPK79J7cDCvg" name="Test(==).second" incoming="_-LNHP452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHMY52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHMo52EeKPK79J7cDCvg" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LNHM452EeKPK79J7cDCvg" name="Call(Not)">
                    <argument xmi:id="_-LNHNI52EeKPK79J7cDCvg" name="Call(Not).argument(x)" incoming="_-LNHQI52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHNY52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHNo52EeKPK79J7cDCvg" value="1"/>
                    </argument>
                    <result xmi:id="_-LNHN452EeKPK79J7cDCvg" name="Call(Not).result(result)" outgoing="_-LNHQY52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHOI52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHOY52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                  </node>
                  <structuredNodeOutput xmi:id="_-LNHOo52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@152122bf.operand2.result" outgoing="_-LOVI452EeKPK79J7cDCvg" incoming="_-LNHQY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHO452EeKPK79J7cDCvg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHPI52EeKPK79J7cDCvg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHPY52EeKPK79J7cDCvg" source="_-LNHFo52EeKPK79J7cDCvg" target="_-LNHHo52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHPo52EeKPK79J7cDCvg" source="_-LNHIY52EeKPK79J7cDCvg" target="_-LNHKo52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHP452EeKPK79J7cDCvg" source="_-LNHJY52EeKPK79J7cDCvg" target="_-LNHMI52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHQI52EeKPK79J7cDCvg" source="_-LNHLY52EeKPK79J7cDCvg" target="_-LNHNI52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHQY52EeKPK79J7cDCvg" source="_-LNHN452EeKPK79J7cDCvg" target="_-LNHOo52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNHQo52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@152122bf.operand3" incoming="_-LOVIY52EeKPK79J7cDCvg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNHQ452EeKPK79J7cDCvg" name="Value(false)">
                    <result xmi:id="_-LNHRI52EeKPK79J7cDCvg" name="Value(false).result" outgoing="_-LNHS452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHRY52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHRo52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_-LNHR452EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                  <structuredNodeOutput xmi:id="_-LNHSI52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@152122bf.operand3.result" outgoing="_-LOVJI52EeKPK79J7cDCvg" incoming="_-LNHS452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHSY52EeKPK79J7cDCvg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHSo52EeKPK79J7cDCvg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHS452EeKPK79J7cDCvg" source="_-LNHRI52EeKPK79J7cDCvg" target="_-LNHSI52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_-LNHTI52EeKPK79J7cDCvg" name="Initial(ConditionalLogicalExpression@152122bf)" outgoing="_-LNuZ452EeKPK79J7cDCvg"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_-LNHTY52EeKPK79J7cDCvg" name="Decision(ConditionalLogicalExpression@152122bf)" outgoing="_-LNuaY52EeKPK79J7cDCvg _-LOVIY52EeKPK79J7cDCvg" incoming="_-LNuZ452EeKPK79J7cDCvg _-LNuaI52EeKPK79J7cDCvg" decisionInputFlow="_-LNuaI52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:MergeNode" xmi:id="_-LNHTo52EeKPK79J7cDCvg" name="Merge(ConditionalLogicalExpression@152122bf.result)" outgoing="_-LOVJo52EeKPK79J7cDCvg" incoming="_-LOVI452EeKPK79J7cDCvg _-LOVJI52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNHT452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@7fd84ea.operand2" incoming="_-LOVJ452EeKPK79J7cDCvg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNHUI52EeKPK79J7cDCvg" name="Value(true)">
                    <result xmi:id="_-LNHUY52EeKPK79J7cDCvg" name="Value(true).result" outgoing="_-LNHWI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHUo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHU452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_-LNHVI52EeKPK79J7cDCvg" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                  <structuredNodeOutput xmi:id="_-LNHVY52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@7fd84ea.operand2.result" outgoing="_-LOVK452EeKPK79J7cDCvg" incoming="_-LNHWI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHVo52EeKPK79J7cDCvg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNHV452EeKPK79J7cDCvg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNHWI52EeKPK79J7cDCvg" source="_-LNHUY52EeKPK79J7cDCvg" target="_-LNHVY52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNHWY52EeKPK79J7cDCvg" name="ConditionalLogicalExpression@7fd84ea.operand3" incoming="_-LOVKY52EeKPK79J7cDCvg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNHWo52EeKPK79J7cDCvg" name="Value(400)">
                    <result xmi:id="_-LNHW452EeKPK79J7cDCvg" name="Value(400).result" outgoing="_-LNuLo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNHXI52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuEI52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LNuEY52EeKPK79J7cDCvg" value="400">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LNuEo52EeKPK79J7cDCvg" name="Call(Mod)">
                    <argument xmi:id="_-LNuE452EeKPK79J7cDCvg" name="Call(Mod).argument(x)" incoming="_-LPjSo52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuFI52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuFY52EeKPK79J7cDCvg" value="1"/>
                    </argument>
                    <argument xmi:id="_-LNuFo52EeKPK79J7cDCvg" name="Call(Mod).argument(y)" incoming="_-LNuLo52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuF452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuGI52EeKPK79J7cDCvg" value="1"/>
                    </argument>
                    <result xmi:id="_-LNuGY52EeKPK79J7cDCvg" name="Call(Mod).result(result)" outgoing="_-LNuL452EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuGo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuG452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNuHI52EeKPK79J7cDCvg" name="Value(0)">
                    <result xmi:id="_-LNuHY52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LNuMI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuHo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuH452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LNuII52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_-LNuIY52EeKPK79J7cDCvg" name="Test(==)">
                    <first xmi:id="_-LNuIo52EeKPK79J7cDCvg" name="Test(==).first" incoming="_-LNuL452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuI452EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuJI52EeKPK79J7cDCvg" value="1"/>
                    </first>
                    <result xmi:id="_-LNuJY52EeKPK79J7cDCvg" name="Test(==).result" outgoing="_-LNuMY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuJo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuJ452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <second xmi:id="_-LNuKI52EeKPK79J7cDCvg" name="Test(==).second" incoming="_-LNuMI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuKY52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuKo52EeKPK79J7cDCvg" value="1"/>
                    </second>
                  </node>
                  <structuredNodeOutput xmi:id="_-LNuK452EeKPK79J7cDCvg" name="ConditionalLogicalExpression@7fd84ea.operand3.result" outgoing="_-LOVLI52EeKPK79J7cDCvg" incoming="_-LNuMY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuLI52EeKPK79J7cDCvg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuLY52EeKPK79J7cDCvg" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuLo52EeKPK79J7cDCvg" source="_-LNHW452EeKPK79J7cDCvg" target="_-LNuFo52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuL452EeKPK79J7cDCvg" source="_-LNuGY52EeKPK79J7cDCvg" target="_-LNuIo52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuMI52EeKPK79J7cDCvg" source="_-LNuHY52EeKPK79J7cDCvg" target="_-LNuKI52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuMY52EeKPK79J7cDCvg" source="_-LNuJY52EeKPK79J7cDCvg" target="_-LNuK452EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_-LNuMo52EeKPK79J7cDCvg" name="Initial(ConditionalLogicalExpression@7fd84ea)" outgoing="_-LOVJY52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_-LNuM452EeKPK79J7cDCvg" name="Decision(ConditionalLogicalExpression@7fd84ea)" outgoing="_-LOVJ452EeKPK79J7cDCvg _-LOVKY52EeKPK79J7cDCvg" incoming="_-LOVJY52EeKPK79J7cDCvg _-LOVJo52EeKPK79J7cDCvg" decisionInputFlow="_-LOVJo52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:MergeNode" xmi:id="_-LNuNI52EeKPK79J7cDCvg" name="Merge(ConditionalLogicalExpression@7fd84ea.result)" outgoing="_-LOVLY52EeKPK79J7cDCvg" incoming="_-LOVK452EeKPK79J7cDCvg _-LOVLI52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuNY52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@7fd84ea.result))">
                  <structuredNodeInput xmi:id="_-LNuNo52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@7fd84ea.result)).input" outgoing="_-LNuPI52EeKPK79J7cDCvg" incoming="_-LOVLY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuN452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuOI52EeKPK79J7cDCvg" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_-LNuOY52EeKPK79J7cDCvg" name="Passthru(Merge(ConditionalLogicalExpression@7fd84ea.result)).output" incoming="_-LNuPI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuOo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuO452EeKPK79J7cDCvg" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuPI52EeKPK79J7cDCvg" source="_-LNuNo52EeKPK79J7cDCvg" target="_-LNuOY52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuPY52EeKPK79J7cDCvg" name="ExpressionStatement@65a0a3aa">
                  <node xmi:type="uml:ForkNode" xmi:id="_-LNuPo52EeKPK79J7cDCvg" name="Fork(numDays)@22407278" outgoing="_-LOVLo52EeKPK79J7cDCvg" incoming="_-LNuRY52EeKPK79J7cDCvg"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuP452EeKPK79J7cDCvg" name="RightHandSide@351b35d9">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNuQI52EeKPK79J7cDCvg" name="Value(29)">
                      <result xmi:id="_-LNuQY52EeKPK79J7cDCvg" name="Value(29).result" outgoing="_-LNuRY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuQo52EeKPK79J7cDCvg" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuQ452EeKPK79J7cDCvg" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_-LNuRI52EeKPK79J7cDCvg" value="29">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuRY52EeKPK79J7cDCvg" source="_-LNuQY52EeKPK79J7cDCvg" target="_-LNuPo52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuRo52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@22407278)">
                  <structuredNodeInput xmi:id="_-LNuR452EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@22407278).input" outgoing="_-LNuTY52EeKPK79J7cDCvg" incoming="_-LOVLo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuSI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuSY52EeKPK79J7cDCvg" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_-LNuSo52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@22407278).output" incoming="_-LNuTY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuS452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuTI52EeKPK79J7cDCvg" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuTY52EeKPK79J7cDCvg" source="_-LNuR452EeKPK79J7cDCvg" target="_-LNuSo52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNuTo52EeKPK79J7cDCvg" name="Value(true)">
                  <result xmi:id="_-LNuT452EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuUI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuUY52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_-LNuUo52EeKPK79J7cDCvg" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuU452EeKPK79J7cDCvg" name="ExpressionStatement@16a1e094">
                  <node xmi:type="uml:ForkNode" xmi:id="_-LNuVI52EeKPK79J7cDCvg" name="Fork(numDays)@e20a0e1" outgoing="_-LOVL452EeKPK79J7cDCvg" incoming="_-LNuW452EeKPK79J7cDCvg"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuVY52EeKPK79J7cDCvg" name="RightHandSide@221b06">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LNuVo52EeKPK79J7cDCvg" name="Value(28)">
                      <result xmi:id="_-LNuV452EeKPK79J7cDCvg" name="Value(28).result" outgoing="_-LNuW452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuWI52EeKPK79J7cDCvg" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuWY52EeKPK79J7cDCvg" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_-LNuWo52EeKPK79J7cDCvg" value="28">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuW452EeKPK79J7cDCvg" source="_-LNuV452EeKPK79J7cDCvg" target="_-LNuVI52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LNuXI52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@e20a0e1)">
                  <structuredNodeInput xmi:id="_-LNuXY52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@e20a0e1).input" outgoing="_-LNuY452EeKPK79J7cDCvg" incoming="_-LOVL452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuXo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuX452EeKPK79J7cDCvg" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_-LNuYI52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@e20a0e1).output" incoming="_-LNuY452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LNuYY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LNuYo52EeKPK79J7cDCvg" value="1"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuY452EeKPK79J7cDCvg" source="_-LNuXY52EeKPK79J7cDCvg" target="_-LNuYI52EeKPK79J7cDCvg"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuZI52EeKPK79J7cDCvg" source="_-LMgRI52EeKPK79J7cDCvg" target="_-LMgTI52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuZY52EeKPK79J7cDCvg" source="_-LNHAo52EeKPK79J7cDCvg" target="_-LNHC452EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuZo52EeKPK79J7cDCvg" source="_-LNHBo52EeKPK79J7cDCvg" target="_-LNHEY52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LNuZ452EeKPK79J7cDCvg" source="_-LNHTI52EeKPK79J7cDCvg" target="_-LNHTY52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LNuaI52EeKPK79J7cDCvg" source="_-LNHDo52EeKPK79J7cDCvg" target="_-LNHTY52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LNuaY52EeKPK79J7cDCvg" source="_-LNHTY52EeKPK79J7cDCvg" target="_-LNHFI52EeKPK79J7cDCvg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LOVII52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LOVIY52EeKPK79J7cDCvg" source="_-LNHTY52EeKPK79J7cDCvg" target="_-LNHQo52EeKPK79J7cDCvg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LOVIo52EeKPK79J7cDCvg" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVI452EeKPK79J7cDCvg" source="_-LNHOo52EeKPK79J7cDCvg" target="_-LNHTo52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVJI52EeKPK79J7cDCvg" source="_-LNHSI52EeKPK79J7cDCvg" target="_-LNHTo52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LOVJY52EeKPK79J7cDCvg" source="_-LNuMo52EeKPK79J7cDCvg" target="_-LNuM452EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVJo52EeKPK79J7cDCvg" source="_-LNHTo52EeKPK79J7cDCvg" target="_-LNuM452EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LOVJ452EeKPK79J7cDCvg" source="_-LNuM452EeKPK79J7cDCvg" target="_-LNHT452EeKPK79J7cDCvg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LOVKI52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LOVKY52EeKPK79J7cDCvg" source="_-LNuM452EeKPK79J7cDCvg" target="_-LNHWY52EeKPK79J7cDCvg">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LOVKo52EeKPK79J7cDCvg" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVK452EeKPK79J7cDCvg" source="_-LNHVY52EeKPK79J7cDCvg" target="_-LNuNI52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVLI52EeKPK79J7cDCvg" source="_-LNuK452EeKPK79J7cDCvg" target="_-LNuNI52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVLY52EeKPK79J7cDCvg" source="_-LNuNI52EeKPK79J7cDCvg" target="_-LNuNo52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVLo52EeKPK79J7cDCvg" source="_-LNuPo52EeKPK79J7cDCvg" target="_-LNuR452EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVL452EeKPK79J7cDCvg" source="_-LNuVI52EeKPK79J7cDCvg" target="_-LNuXY52EeKPK79J7cDCvg"/>
                <clause xmi:id="_-LOVMI52EeKPK79J7cDCvg" body="_-LNuPY52EeKPK79J7cDCvg _-LNuRo52EeKPK79J7cDCvg" bodyOutput="_-LNuSo52EeKPK79J7cDCvg" decider="_-LNuOY52EeKPK79J7cDCvg" successorClause="_-LOVMY52EeKPK79J7cDCvg" test="_-LMgQ452EeKPK79J7cDCvg _-LMgSI52EeKPK79J7cDCvg _-LNHBY52EeKPK79J7cDCvg _-LNHCo52EeKPK79J7cDCvg _-LNHFI52EeKPK79J7cDCvg _-LNHQo52EeKPK79J7cDCvg _-LNHT452EeKPK79J7cDCvg _-LNHWY52EeKPK79J7cDCvg _-LNuNY52EeKPK79J7cDCvg"/>
                <clause xmi:id="_-LOVMY52EeKPK79J7cDCvg" body="_-LNuU452EeKPK79J7cDCvg _-LNuXI52EeKPK79J7cDCvg" bodyOutput="_-LNuYI52EeKPK79J7cDCvg" decider="_-LNuT452EeKPK79J7cDCvg" predecessorClause="_-LOVMI52EeKPK79J7cDCvg" test="_-LNuTo52EeKPK79J7cDCvg"/>
                <result xmi:id="_-LOVMo52EeKPK79J7cDCvg" name="IfStatement@5d956d73.result(numDays)" outgoing="_-LO8PY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVM452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVNI52EeKPK79J7cDCvg" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_-LOVNY52EeKPK79J7cDCvg" name="Fork(numDays)" outgoing="_-LO8Po52EeKPK79J7cDCvg" incoming="_-LO8PY52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LOVNo52EeKPK79J7cDCvg" name="Passthru(Fork(numDays))">
                <structuredNodeInput xmi:id="_-LOVN452EeKPK79J7cDCvg" name="Passthru(Fork(numDays)).input" outgoing="_-LOVPY52EeKPK79J7cDCvg" incoming="_-LO8Po52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVOI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVOY52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LOVOo52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)).output" incoming="_-LOVPY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVO452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVPI52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVPY52EeKPK79J7cDCvg" source="_-LOVN452EeKPK79J7cDCvg" target="_-LOVOo52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LOVPo52EeKPK79J7cDCvg" name="Value(true)">
                <result xmi:id="_-LOVP452EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVQI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVQY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_-LOVQo52EeKPK79J7cDCvg" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LOVQ452EeKPK79J7cDCvg" name="ExpressionStatement@d658658" outgoing="_-LO8P452EeKPK79J7cDCvg">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LOVRI52EeKPK79J7cDCvg" name="Call(WriteLine)" incoming="_-LOVUo52EeKPK79J7cDCvg">
                  <argument xmi:id="_-LOVRY52EeKPK79J7cDCvg" name="Call(WriteLine).argument(value)" incoming="_-LOVUY52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVRo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVR452EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <result xmi:id="_-LOVSI52EeKPK79J7cDCvg" name="Call(WriteLine).result(errorStatus)">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVSY52EeKPK79J7cDCvg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVSo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LOVS452EeKPK79J7cDCvg" name="Tuple@6994aa87" outgoing="_-LOVUo52EeKPK79J7cDCvg">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LOVTI52EeKPK79J7cDCvg" name="Value(&quot;Invalid month.&quot;)">
                    <result xmi:id="_-LOVTY52EeKPK79J7cDCvg" name="Value(&quot;Invalid month.&quot;).result" outgoing="_-LOVUY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVTo52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVT452EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_-LOVUI52EeKPK79J7cDCvg" value="Invalid month.">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVUY52EeKPK79J7cDCvg" source="_-LOVTY52EeKPK79J7cDCvg" target="_-LOVRY52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LOVUo52EeKPK79J7cDCvg" source="_-LOVS452EeKPK79J7cDCvg" target="_-LOVRI52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LOVU452EeKPK79J7cDCvg" name="ExpressionStatement@6fa45c33" incoming="_-LO8P452EeKPK79J7cDCvg">
                <node xmi:type="uml:ForkNode" xmi:id="_-LOVVI52EeKPK79J7cDCvg" name="Fork(numDays)@1c9cf4db" outgoing="_-LO8QI52EeKPK79J7cDCvg" incoming="_-LOVW452EeKPK79J7cDCvg"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LOVVY52EeKPK79J7cDCvg" name="RightHandSide@48f648a">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LOVVo52EeKPK79J7cDCvg" name="Value(0)">
                    <result xmi:id="_-LOVV452EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LOVW452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVWI52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVWY52EeKPK79J7cDCvg" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_-LOVWo52EeKPK79J7cDCvg">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVW452EeKPK79J7cDCvg" source="_-LOVV452EeKPK79J7cDCvg" target="_-LOVVI52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LOVXI52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@1c9cf4db)">
                <structuredNodeInput xmi:id="_-LOVXY52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@1c9cf4db).input" outgoing="_-LOVY452EeKPK79J7cDCvg" incoming="_-LO8QI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVXo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVX452EeKPK79J7cDCvg" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LOVYI52EeKPK79J7cDCvg" name="Passthru(Fork(numDays)@1c9cf4db).output" incoming="_-LOVY452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LOVYY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LOVYo52EeKPK79J7cDCvg" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVY452EeKPK79J7cDCvg" source="_-LOVXY52EeKPK79J7cDCvg" target="_-LOVYI52EeKPK79J7cDCvg"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVZI52EeKPK79J7cDCvg" source="_-LKq-Y52EeKPK79J7cDCvg" target="_-LKrBI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVZY52EeKPK79J7cDCvg" source="_-LKrCI52EeKPK79J7cDCvg" target="_-LKrE452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVZo52EeKPK79J7cDCvg" source="_-LKrAY52EeKPK79J7cDCvg" target="_-LLR0I52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVZ452EeKPK79J7cDCvg" source="_-LKrEI52EeKPK79J7cDCvg" target="_-LLR0452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVaI52EeKPK79J7cDCvg" source="_-LLR2o52EeKPK79J7cDCvg" target="_-LLR5Y52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVaY52EeKPK79J7cDCvg" source="_-LLR1o52EeKPK79J7cDCvg" target="_-LLR6Y52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVao52EeKPK79J7cDCvg" source="_-LLR4o52EeKPK79J7cDCvg" target="_-LLR7I52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVa452EeKPK79J7cDCvg" source="_-LLR8452EeKPK79J7cDCvg" target="_-LLR_o52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVbI52EeKPK79J7cDCvg" source="_-LLR7452EeKPK79J7cDCvg" target="_-LLSAo52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVbY52EeKPK79J7cDCvg" source="_-LLR-452EeKPK79J7cDCvg" target="_-LLSBY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVbo52EeKPK79J7cDCvg" source="_-LLSDI52EeKPK79J7cDCvg" target="_-LLSF452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVb452EeKPK79J7cDCvg" source="_-LLSCI52EeKPK79J7cDCvg" target="_-LLSG452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVcI52EeKPK79J7cDCvg" source="_-LLSFI52EeKPK79J7cDCvg" target="_-LLSHo52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVcY52EeKPK79J7cDCvg" source="_-LLSJY52EeKPK79J7cDCvg" target="_-LLSMI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVco52EeKPK79J7cDCvg" source="_-LLSIY52EeKPK79J7cDCvg" target="_-LL44452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVc452EeKPK79J7cDCvg" source="_-LLSLY52EeKPK79J7cDCvg" target="_-LL45o52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVdI52EeKPK79J7cDCvg" source="_-LL47Y52EeKPK79J7cDCvg" target="_-LL4-I52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVdY52EeKPK79J7cDCvg" source="_-LL46Y52EeKPK79J7cDCvg" target="_-LL4_I52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LOVdo52EeKPK79J7cDCvg" source="_-LL49Y52EeKPK79J7cDCvg" target="_-LL4_452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8MI52EeKPK79J7cDCvg" source="_-LL5Bo52EeKPK79J7cDCvg" target="_-LL5D452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8MY52EeKPK79J7cDCvg" source="_-LL5F452EeKPK79J7cDCvg" target="_-LL5Io52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8Mo52EeKPK79J7cDCvg" source="_-LL5Jo52EeKPK79J7cDCvg" target="_-LL5MY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8M452EeKPK79J7cDCvg" source="_-LL5H452EeKPK79J7cDCvg" target="_-LL5NY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8NI52EeKPK79J7cDCvg" source="_-LL5Lo52EeKPK79J7cDCvg" target="_-LL5OI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8NY52EeKPK79J7cDCvg" source="_-LMf8Y52EeKPK79J7cDCvg" target="_-LMf_I52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8No52EeKPK79J7cDCvg" source="_-LL5O452EeKPK79J7cDCvg" target="_-LMgAI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8N452EeKPK79J7cDCvg" source="_-LMf-Y52EeKPK79J7cDCvg" target="_-LMgA452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8OI52EeKPK79J7cDCvg" source="_-LMgCo52EeKPK79J7cDCvg" target="_-LMgFY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8OY52EeKPK79J7cDCvg" source="_-LMgBo52EeKPK79J7cDCvg" target="_-LMgGY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8Oo52EeKPK79J7cDCvg" source="_-LMgEo52EeKPK79J7cDCvg" target="_-LMgHI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8O452EeKPK79J7cDCvg" source="_-LMgI452EeKPK79J7cDCvg" target="_-LMgLI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8PI52EeKPK79J7cDCvg" source="_-LMgNI52EeKPK79J7cDCvg" target="_-LMgP452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8PY52EeKPK79J7cDCvg" source="_-LOVMo52EeKPK79J7cDCvg" target="_-LOVNY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8Po52EeKPK79J7cDCvg" source="_-LOVNY52EeKPK79J7cDCvg" target="_-LOVN452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8P452EeKPK79J7cDCvg" source="_-LOVQ452EeKPK79J7cDCvg" target="_-LOVU452EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8QI52EeKPK79J7cDCvg" source="_-LOVVI52EeKPK79J7cDCvg" target="_-LOVXY52EeKPK79J7cDCvg"/>
              <clause xmi:id="_-LO8QY52EeKPK79J7cDCvg" body="_-LL5BY52EeKPK79J7cDCvg _-LL5Do52EeKPK79J7cDCvg" bodyOutput="_-LL5Eo52EeKPK79J7cDCvg" decider="_-LL5Ao52EeKPK79J7cDCvg" successorClause="_-LO8RI52EeKPK79J7cDCvg" test="_-LKq-I52EeKPK79J7cDCvg _-LKq_Y52EeKPK79J7cDCvg _-LKrB452EeKPK79J7cDCvg _-LKrDI52EeKPK79J7cDCvg _-LKrFo52EeKPK79J7cDCvg _-LLR2Y52EeKPK79J7cDCvg _-LLR3o52EeKPK79J7cDCvg _-LLR6I52EeKPK79J7cDCvg _-LLR8o52EeKPK79J7cDCvg _-LLR9452EeKPK79J7cDCvg _-LLSAY52EeKPK79J7cDCvg _-LLSC452EeKPK79J7cDCvg _-LLSEI52EeKPK79J7cDCvg _-LLSGo52EeKPK79J7cDCvg _-LLSJI52EeKPK79J7cDCvg _-LLSKY52EeKPK79J7cDCvg _-LL44o52EeKPK79J7cDCvg _-LL47I52EeKPK79J7cDCvg _-LL48Y52EeKPK79J7cDCvg _-LL4-452EeKPK79J7cDCvg"/>
              <clause xmi:id="_-LO8Qo52EeKPK79J7cDCvg" body="_-LMgIo52EeKPK79J7cDCvg _-LMgK452EeKPK79J7cDCvg" bodyOutput="_-LMgL452EeKPK79J7cDCvg" decider="_-LMgH452EeKPK79J7cDCvg" successorClause="_-LO8RI52EeKPK79J7cDCvg" test="_-LL5Fo52EeKPK79J7cDCvg _-LL5G452EeKPK79J7cDCvg _-LL5JY52EeKPK79J7cDCvg _-LL5Ko52EeKPK79J7cDCvg _-LL5NI52EeKPK79J7cDCvg _-LMf8I52EeKPK79J7cDCvg _-LMf9Y52EeKPK79J7cDCvg _-LMf_452EeKPK79J7cDCvg _-LMgCY52EeKPK79J7cDCvg _-LMgDo52EeKPK79J7cDCvg _-LMgGI52EeKPK79J7cDCvg"/>
              <clause xmi:id="_-LO8Q452EeKPK79J7cDCvg" body="_-LMgQo52EeKPK79J7cDCvg _-LOVNo52EeKPK79J7cDCvg" bodyOutput="_-LOVOo52EeKPK79J7cDCvg" decider="_-LMgPI52EeKPK79J7cDCvg" successorClause="_-LO8RI52EeKPK79J7cDCvg" test="_-LMgM452EeKPK79J7cDCvg _-LMgOI52EeKPK79J7cDCvg"/>
              <clause xmi:id="_-LO8RI52EeKPK79J7cDCvg" body="_-LOVQ452EeKPK79J7cDCvg _-LOVU452EeKPK79J7cDCvg _-LOVXI52EeKPK79J7cDCvg" bodyOutput="_-LOVYI52EeKPK79J7cDCvg" decider="_-LOVP452EeKPK79J7cDCvg" predecessorClause="_-LO8QY52EeKPK79J7cDCvg _-LO8Qo52EeKPK79J7cDCvg _-LO8Q452EeKPK79J7cDCvg" test="_-LOVPo52EeKPK79J7cDCvg"/>
              <result xmi:id="_-LO8RY52EeKPK79J7cDCvg" name="Conditional(SwitchStatement@5f390734).result(numDays)" outgoing="_-LO8So52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8Ro52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8R452EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LO8SI52EeKPK79J7cDCvg" name="Fork(numDays)" outgoing="_-LPjUY52EeKPK79J7cDCvg" incoming="_-LO8So52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LO8SY52EeKPK79J7cDCvg" name="Fork(Fork(month))" incoming="_-LO8iY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8So52EeKPK79J7cDCvg" source="_-LO8RY52EeKPK79J7cDCvg" target="_-LO8SI52EeKPK79J7cDCvg"/>
          </node>
          <structuredNodeOutput xmi:id="_-LO8S452EeKPK79J7cDCvg" name="Output(condition1)" outgoing="_-LGZaY52EeKPK79J7cDCvg" incoming="_-LPjTI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8TI52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8TY52EeKPK79J7cDCvg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_-LO8To52EeKPK79J7cDCvg" name="Output(condition2)" outgoing="_-LGZao52EeKPK79J7cDCvg" incoming="_-LPjTY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8T452EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8UI52EeKPK79J7cDCvg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_-LO8UY52EeKPK79J7cDCvg" name="Output(condition3)" outgoing="_-LGZa452EeKPK79J7cDCvg" incoming="_-LPjTo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8Uo52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8U452EeKPK79J7cDCvg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_-LO8VI52EeKPK79J7cDCvg" name="Output(year)" outgoing="_-LGZbI52EeKPK79J7cDCvg" incoming="_-LPjT452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8VY52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8Vo52EeKPK79J7cDCvg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_-LO8V452EeKPK79J7cDCvg" name="Output(month)" outgoing="_-LGZbY52EeKPK79J7cDCvg" incoming="_-LPjUI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8WI52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8WY52EeKPK79J7cDCvg" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_-LO8Wo52EeKPK79J7cDCvg" name="Output(numDays)" outgoing="_-LGZbo52EeKPK79J7cDCvg" incoming="_-LPjUY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LO8W452EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LO8XI52EeKPK79J7cDCvg" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8XY52EeKPK79J7cDCvg" source="_-LGZdo52EeKPK79J7cDCvg" target="_-LGZf452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8Xo52EeKPK79J7cDCvg" source="_-LGZf452EeKPK79J7cDCvg" target="_-LGZiI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8X452EeKPK79J7cDCvg" source="_-LGZiI52EeKPK79J7cDCvg" target="_-LGZkY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8YI52EeKPK79J7cDCvg" source="_-LGZkY52EeKPK79J7cDCvg" target="_-LGZmo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8YY52EeKPK79J7cDCvg" source="_-LGZmo52EeKPK79J7cDCvg" target="_-LHAYI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8Yo52EeKPK79J7cDCvg" source="_-LHAYI52EeKPK79J7cDCvg" target="_-LHAaY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8Y452EeKPK79J7cDCvg" source="_-LHAaY52EeKPK79J7cDCvg" target="_-LHAeY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8ZI52EeKPK79J7cDCvg" source="_-LGZd452EeKPK79J7cDCvg" target="_-LHAhI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8ZY52EeKPK79J7cDCvg" source="_-LGZgI52EeKPK79J7cDCvg" target="_-LHAh452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8Zo52EeKPK79J7cDCvg" source="_-LHAYY52EeKPK79J7cDCvg" target="_-LHAlo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8Z452EeKPK79J7cDCvg" source="_-LHAao52EeKPK79J7cDCvg" target="_-LHAm452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8aI52EeKPK79J7cDCvg" source="_-LHAeY52EeKPK79J7cDCvg" target="_-LHAgo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8aY52EeKPK79J7cDCvg" source="_-LIOpI52EeKPK79J7cDCvg" target="_-LIOp452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8ao52EeKPK79J7cDCvg" source="_-LGZd452EeKPK79J7cDCvg" target="_-LHAp452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8a452EeKPK79J7cDCvg" source="_-LGZiY52EeKPK79J7cDCvg" target="_-LHAqo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8bI52EeKPK79J7cDCvg" source="_-LGZd452EeKPK79J7cDCvg" target="_-LHnf452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8bY52EeKPK79J7cDCvg" source="_-LGZiY52EeKPK79J7cDCvg" target="_-LHngo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8bo52EeKPK79J7cDCvg" source="_-LGZd452EeKPK79J7cDCvg" target="_-LHnio52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8b452EeKPK79J7cDCvg" source="_-LGZko52EeKPK79J7cDCvg" target="_-LHnjY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8cI52EeKPK79J7cDCvg" source="_-LGZd452EeKPK79J7cDCvg" target="_-LHnvo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8cY52EeKPK79J7cDCvg" source="_-LGZko52EeKPK79J7cDCvg" target="_-LHnwY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8co52EeKPK79J7cDCvg" source="_-LHAgo52EeKPK79J7cDCvg" target="_-LHApY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8c452EeKPK79J7cDCvg" source="_-LHApY52EeKPK79J7cDCvg" target="_-LIOqI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8dI52EeKPK79J7cDCvg" source="_-LI1u452EeKPK79J7cDCvg" target="_-LI1vo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8dY52EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LIOs452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8do52EeKPK79J7cDCvg" source="_-LGZiY52EeKPK79J7cDCvg" target="_-LIOto52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8d452EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LIOzo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8eI52EeKPK79J7cDCvg" source="_-LGZko52EeKPK79J7cDCvg" target="_-LIO0Y52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8eY52EeKPK79J7cDCvg" source="_-LIOqI52EeKPK79J7cDCvg" target="_-LIOsY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8eo52EeKPK79J7cDCvg" source="_-LKD9452EeKPK79J7cDCvg" target="_-LKD-o52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8e452EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LI1wY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8fI52EeKPK79J7cDCvg" source="_-LGZiY52EeKPK79J7cDCvg" target="_-LI1xI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8fY52EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LI13I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8fo52EeKPK79J7cDCvg" source="_-LGZiY52EeKPK79J7cDCvg" target="_-LI13452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8f452EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LI15452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8gI52EeKPK79J7cDCvg" source="_-LGZko52EeKPK79J7cDCvg" target="_-LJcoY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8gY52EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LJc0o52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8go52EeKPK79J7cDCvg" source="_-LGZko52EeKPK79J7cDCvg" target="_-LJc1Y52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8g452EeKPK79J7cDCvg" source="_-LIOqY52EeKPK79J7cDCvg" target="_-LJc3Y52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8hI52EeKPK79J7cDCvg" source="_-LGZm452EeKPK79J7cDCvg" target="_-LJc4I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8hY52EeKPK79J7cDCvg" source="_-LIOsY52EeKPK79J7cDCvg" target="_-LI1v452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8ho52EeKPK79J7cDCvg" source="_-LHAeo52EeKPK79J7cDCvg" target="_-LKq9I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8h452EeKPK79J7cDCvg" source="_-LHAeo52EeKPK79J7cDCvg" target="_-LKEA452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LO8iI52EeKPK79J7cDCvg" source="_-LI1v452EeKPK79J7cDCvg" target="_-LKD-452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8iY52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LO8SY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8io52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LKq_o52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8i452EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LKrDY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8jI52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LLR3452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LO8jY52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LLR-I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjQI52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LLSEY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjQY52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LLSKo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjQo52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LL48o52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjQ452EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LL5HI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjRI52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LL5K452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjRY52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LMf9o52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjRo52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LMgD452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjR452EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LMgOY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjSI52EeKPK79J7cDCvg" source="_-LHAeo52EeKPK79J7cDCvg" target="_-LMgSY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjSY52EeKPK79J7cDCvg" source="_-LHAeo52EeKPK79J7cDCvg" target="_-LNHG452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjSo52EeKPK79J7cDCvg" source="_-LHAeo52EeKPK79J7cDCvg" target="_-LNuE452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LPjS452EeKPK79J7cDCvg" source="_-LKD-452EeKPK79J7cDCvg" target="_-LKq9o52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjTI52EeKPK79J7cDCvg" source="_-LIOp452EeKPK79J7cDCvg" target="_-LO8S452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjTY52EeKPK79J7cDCvg" source="_-LI1vo52EeKPK79J7cDCvg" target="_-LO8To52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjTo52EeKPK79J7cDCvg" source="_-LKD-o52EeKPK79J7cDCvg" target="_-LO8UY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjT452EeKPK79J7cDCvg" source="_-LHAeo52EeKPK79J7cDCvg" target="_-LO8VI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjUI52EeKPK79J7cDCvg" source="_-LKq8452EeKPK79J7cDCvg" target="_-LO8V452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjUY52EeKPK79J7cDCvg" source="_-LO8SI52EeKPK79J7cDCvg" target="_-LO8Wo52EeKPK79J7cDCvg"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LGZb452EeKPK79J7cDCvg" name="Output(condition1)" incoming="_-LGZaY52EeKPK79J7cDCvg" parameter="_-LGZV452EeKPK79J7cDCvg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LGZcI52EeKPK79J7cDCvg" name="Output(condition2)" incoming="_-LGZao52EeKPK79J7cDCvg" parameter="_-LGZWo52EeKPK79J7cDCvg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LGZcY52EeKPK79J7cDCvg" name="Output(condition3)" incoming="_-LGZa452EeKPK79J7cDCvg" parameter="_-LGZXY52EeKPK79J7cDCvg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LGZco52EeKPK79J7cDCvg" name="Output(year)" incoming="_-LGZbI52EeKPK79J7cDCvg" parameter="_-LGZYI52EeKPK79J7cDCvg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LGZc452EeKPK79J7cDCvg" name="Output(month)" incoming="_-LGZbY52EeKPK79J7cDCvg" parameter="_-LGZY452EeKPK79J7cDCvg"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LGZdI52EeKPK79J7cDCvg" name="Output(numDays)" incoming="_-LGZbo52EeKPK79J7cDCvg" parameter="_-LGZZo52EeKPK79J7cDCvg"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LPjUo52EeKPK79J7cDCvg" name="Statements_Conditional$method$1" specification="_-LQKoo52EeKPK79J7cDCvg" group="_-LPjWI52EeKPK79J7cDCvg" node="_-LPjV452EeKPK79J7cDCvg _-LPjWI52EeKPK79J7cDCvg">
        <ownedParameter xmi:id="_-LPjU452EeKPK79J7cDCvg" name="" type="_-LEkIY52EeKPK79J7cDCvg" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjVI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjVY52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjVo52EeKPK79J7cDCvg" source="_-LPjXo52EeKPK79J7cDCvg" target="_-LPjV452EeKPK79J7cDCvg"/>
        <structuredNode xmi:id="_-LPjWI52EeKPK79J7cDCvg" name="Body(Statements_Conditional$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LPjWY52EeKPK79J7cDCvg" name="Body" incoming="_-LPjhI52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_-LPjWo52EeKPK79J7cDCvg" name="ReadSelf">
            <result xmi:id="_-LPjW452EeKPK79J7cDCvg" name="ReadSelf.result" outgoing="_-LPjgo52EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjXI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjXY52EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LPjXo52EeKPK79J7cDCvg" name="Fork(ReadSelf.result)" outgoing="_-LPjVo52EeKPK79J7cDCvg _-LPjg452EeKPK79J7cDCvg _-LPjhY52EeKPK79J7cDCvg" incoming="_-LPjgo52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_-LPjX452EeKPK79J7cDCvg" name="Call(Statements_Conditional$initialization$1)" outgoing="_-LPjhI52EeKPK79J7cDCvg" incoming="_-LPji452EeKPK79J7cDCvg" operation="_-LQKjo52EeKPK79J7cDCvg">
            <target xmi:id="_-LPjYI52EeKPK79J7cDCvg" name="Call(Statements_Conditional$initialization$1).target" incoming="_-LPjg452EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjYY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjYo52EeKPK79J7cDCvg" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_-LPjY452EeKPK79J7cDCvg" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_-LEkJ452EeKPK79J7cDCvg">
            <object xmi:id="_-LPjZI52EeKPK79J7cDCvg" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_-LPjhY52EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjZY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjZo52EeKPK79J7cDCvg" value="1"/>
            </object>
            <result xmi:id="_-LPjZ452EeKPK79J7cDCvg" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_-LPjho52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjaI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjaY52EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LPjao52EeKPK79J7cDCvg" name="Call(ListSize)">
            <argument xmi:id="_-LPja452EeKPK79J7cDCvg" name="Call(ListSize).argument(list)" incoming="_-LPjho52EeKPK79J7cDCvg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjbI52EeKPK79J7cDCvg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjbY52EeKPK79J7cDCvg" value="*"/>
            </argument>
            <result xmi:id="_-LPjbo52EeKPK79J7cDCvg" name="Call(ListSize).result(result)" outgoing="_-LPjh452EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjb452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjcI52EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LPjcY52EeKPK79J7cDCvg" name="Value(0)">
            <result xmi:id="_-LPjco52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LPjiI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjc452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjdI52EeKPK79J7cDCvg" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_-LPjdY52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_-LPjdo52EeKPK79J7cDCvg" name="Test(Size==0)">
            <first xmi:id="_-LPjd452EeKPK79J7cDCvg" name="Test(Size==0).first" incoming="_-LPjh452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjeI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjeY52EeKPK79J7cDCvg" value="1"/>
            </first>
            <result xmi:id="_-LPjeo52EeKPK79J7cDCvg" name="Test(Size==0).result" outgoing="_-LPjio52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPje452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjfI52EeKPK79J7cDCvg" value="1"/>
            </result>
            <second xmi:id="_-LPjfY52EeKPK79J7cDCvg" name="Test(Size==0).second" incoming="_-LPjiI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LPjfo52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LPjf452EeKPK79J7cDCvg" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_-LPjgI52EeKPK79J7cDCvg" name="InitialNode" outgoing="_-LPjiY52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_-LPjgY52EeKPK79J7cDCvg" name="Decision(Test(Statements_Conditional$initializationFlag$1))" outgoing="_-LPji452EeKPK79J7cDCvg" incoming="_-LPjiY52EeKPK79J7cDCvg _-LPjio52EeKPK79J7cDCvg" decisionInputFlow="_-LPjio52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjgo52EeKPK79J7cDCvg" source="_-LPjW452EeKPK79J7cDCvg" target="_-LPjXo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjg452EeKPK79J7cDCvg" source="_-LPjXo52EeKPK79J7cDCvg" target="_-LPjYI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LPjhI52EeKPK79J7cDCvg" source="_-LPjX452EeKPK79J7cDCvg" target="_-LPjWY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjhY52EeKPK79J7cDCvg" source="_-LPjXo52EeKPK79J7cDCvg" target="_-LPjZI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjho52EeKPK79J7cDCvg" source="_-LPjZ452EeKPK79J7cDCvg" target="_-LPja452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjh452EeKPK79J7cDCvg" source="_-LPjbo52EeKPK79J7cDCvg" target="_-LPjd452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjiI52EeKPK79J7cDCvg" source="_-LPjco52EeKPK79J7cDCvg" target="_-LPjfY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LPjiY52EeKPK79J7cDCvg" source="_-LPjgI52EeKPK79J7cDCvg" target="_-LPjgY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LPjio52EeKPK79J7cDCvg" source="_-LPjeo52EeKPK79J7cDCvg" target="_-LPjgY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LPji452EeKPK79J7cDCvg" source="_-LPjgY52EeKPK79J7cDCvg" target="_-LPjX452EeKPK79J7cDCvg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LPjjI52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LPjV452EeKPK79J7cDCvg" name="Return" incoming="_-LPjVo52EeKPK79J7cDCvg" parameter="_-LPjU452EeKPK79J7cDCvg"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LPjjY52EeKPK79J7cDCvg" name="destroy$method$1" specification="_-LQxYY52EeKPK79J7cDCvg" group="_-LPjjo52EeKPK79J7cDCvg" node="_-LPjjo52EeKPK79J7cDCvg">
        <structuredNode xmi:id="_-LPjjo52EeKPK79J7cDCvg" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LPjj452EeKPK79J7cDCvg" name="Statements_Conditional$initialization$1" specification="_-LQKjo52EeKPK79J7cDCvg" group="_-LPjkI52EeKPK79J7cDCvg" node="_-LPjkI52EeKPK79J7cDCvg">
        <structuredNode xmi:id="_-LPjkI52EeKPK79J7cDCvg" name="Body(Statements_Conditional$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_-LPjkY52EeKPK79J7cDCvg" name="ReadSelf">
            <result xmi:id="_-LPjko52EeKPK79J7cDCvg" name="ReadSelf.result" outgoing="_-LQKhI52EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKUI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKUY52EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LQKUo52EeKPK79J7cDCvg" name="Fork(ReadSelf.result)" outgoing="_-LQKhY52EeKPK79J7cDCvg _-LQKho52EeKPK79J7cDCvg" incoming="_-LQKhI52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LQKU452EeKPK79J7cDCvg" name="Initialization" incoming="_-LQKjI52EeKPK79J7cDCvg">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LQKVI52EeKPK79J7cDCvg" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LQKVY52EeKPK79J7cDCvg" name="Value(true)">
                <result xmi:id="_-LQKVo52EeKPK79J7cDCvg" name="Value(true).result" outgoing="_-LQKZI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKV452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKWI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_-LQKWY52EeKPK79J7cDCvg" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_-LQKWo52EeKPK79J7cDCvg" name="Write(Statements_Conditional$initializationFlag$1)" structuralFeature="_-LEkJ452EeKPK79J7cDCvg" isReplaceAll="true">
                <object xmi:id="_-LQKW452EeKPK79J7cDCvg" name="Write(Statements_Conditional$initializationFlag$1).object" incoming="_-LQKhY52EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKXI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKXY52EeKPK79J7cDCvg" value="1"/>
                </object>
                <result xmi:id="_-LQKXo52EeKPK79J7cDCvg" name="Write(Statements_Conditional$initializationFlag$1).result" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKX452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKYI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:id="_-LQKYY52EeKPK79J7cDCvg" name="Write(Statements_Conditional$initializationFlag$1).value" incoming="_-LQKZI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKYo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKY452EeKPK79J7cDCvg" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKZI52EeKPK79J7cDCvg" source="_-LQKVo52EeKPK79J7cDCvg" target="_-LQKYY52EeKPK79J7cDCvg"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_-LQKZY52EeKPK79J7cDCvg" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_-LEkJ452EeKPK79J7cDCvg">
            <object xmi:id="_-LQKZo52EeKPK79J7cDCvg" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_-LQKho52EeKPK79J7cDCvg" type="_-LEkIY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKZ452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKaI52EeKPK79J7cDCvg" value="1"/>
            </object>
            <result xmi:id="_-LQKaY52EeKPK79J7cDCvg" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_-LQKh452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKao52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKa452EeKPK79J7cDCvg" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LQKbI52EeKPK79J7cDCvg" name="Call(ListSize)">
            <argument xmi:id="_-LQKbY52EeKPK79J7cDCvg" name="Call(ListSize).argument(list)" incoming="_-LQKh452EeKPK79J7cDCvg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKbo52EeKPK79J7cDCvg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKb452EeKPK79J7cDCvg" value="*"/>
            </argument>
            <result xmi:id="_-LQKcI52EeKPK79J7cDCvg" name="Call(ListSize).result(result)" outgoing="_-LQKiI52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKcY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKco52EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LQKc452EeKPK79J7cDCvg" name="Value(0)">
            <result xmi:id="_-LQKdI52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LQKiY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKdY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKdo52EeKPK79J7cDCvg" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_-LQKd452EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_-LQKeI52EeKPK79J7cDCvg" name="Test(Size==0)">
            <first xmi:id="_-LQKeY52EeKPK79J7cDCvg" name="Test(Size==0).first" incoming="_-LQKiI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKeo52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKe452EeKPK79J7cDCvg" value="1"/>
            </first>
            <result xmi:id="_-LQKfI52EeKPK79J7cDCvg" name="Test(Size==0).result" outgoing="_-LQKi452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKfY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKfo52EeKPK79J7cDCvg" value="1"/>
            </result>
            <second xmi:id="_-LQKf452EeKPK79J7cDCvg" name="Test(Size==0).second" incoming="_-LQKiY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKgI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKgY52EeKPK79J7cDCvg" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_-LQKgo52EeKPK79J7cDCvg" name="InitialNode" outgoing="_-LQKio52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_-LQKg452EeKPK79J7cDCvg" name="Decision(Test(Statements_Conditional$initializationFlag$1))" outgoing="_-LQKjI52EeKPK79J7cDCvg" incoming="_-LQKio52EeKPK79J7cDCvg _-LQKi452EeKPK79J7cDCvg" decisionInputFlow="_-LQKi452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKhI52EeKPK79J7cDCvg" source="_-LPjko52EeKPK79J7cDCvg" target="_-LQKUo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKhY52EeKPK79J7cDCvg" source="_-LQKUo52EeKPK79J7cDCvg" target="_-LQKW452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKho52EeKPK79J7cDCvg" source="_-LQKUo52EeKPK79J7cDCvg" target="_-LQKZo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKh452EeKPK79J7cDCvg" source="_-LQKaY52EeKPK79J7cDCvg" target="_-LQKbY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKiI52EeKPK79J7cDCvg" source="_-LQKcI52EeKPK79J7cDCvg" target="_-LQKeY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKiY52EeKPK79J7cDCvg" source="_-LQKdI52EeKPK79J7cDCvg" target="_-LQKf452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LQKio52EeKPK79J7cDCvg" source="_-LQKgo52EeKPK79J7cDCvg" target="_-LQKg452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQKi452EeKPK79J7cDCvg" source="_-LQKfI52EeKPK79J7cDCvg" target="_-LQKg452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LQKjI52EeKPK79J7cDCvg" source="_-LQKg452EeKPK79J7cDCvg" target="_-LQKU452EeKPK79J7cDCvg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LQKjY52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_-LQKjo52EeKPK79J7cDCvg" name="Statements_Conditional$initialization$1" visibility="protected" method="_-LPjj452EeKPK79J7cDCvg"/>
      <ownedOperation xmi:id="_-LQKj452EeKPK79J7cDCvg" name="test" visibility="package" method="_-LGZVo52EeKPK79J7cDCvg">
        <ownedParameter xmi:id="_-LQKkI52EeKPK79J7cDCvg" name="condition1" visibility="package" type="_-LRYvo52EeKPK79J7cDCvg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKkY52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKko52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LQKk452EeKPK79J7cDCvg" name="condition2" visibility="package" type="_-LRYvo52EeKPK79J7cDCvg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKlI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKlY52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LQKlo52EeKPK79J7cDCvg" name="condition3" visibility="package" type="_-LRYvo52EeKPK79J7cDCvg" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKl452EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKmI52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LQKmY52EeKPK79J7cDCvg" name="year" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKmo52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKm452EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LQKnI52EeKPK79J7cDCvg" name="month" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKnY52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKno52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-LQKn452EeKPK79J7cDCvg" name="numDays" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKoI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQKoY52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-LQKoo52EeKPK79J7cDCvg" name="Statements_Conditional" visibility="package" method="_-LPjUo52EeKPK79J7cDCvg">
        <ownedParameter xmi:id="_-LQKo452EeKPK79J7cDCvg" name="" visibility="package" type="_-LEkIY52EeKPK79J7cDCvg" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQKpI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxYI52EeKPK79J7cDCvg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-LQxYY52EeKPK79J7cDCvg" name="destroy" visibility="package" method="_-LPjjY52EeKPK79J7cDCvg"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_-LQxYo52EeKPK79J7cDCvg" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_-LQxY452EeKPK79J7cDCvg" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxZI52EeKPK79J7cDCvg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxZY52EeKPK79J7cDCvg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LQxZo52EeKPK79J7cDCvg" name="raiseAlarm$method$1" specification="_-LRYtI52EeKPK79J7cDCvg" group="_-LQxbY52EeKPK79J7cDCvg" node="_-LQxa452EeKPK79J7cDCvg _-LQxbI52EeKPK79J7cDCvg _-LQxbY52EeKPK79J7cDCvg">
          <ownedParameter xmi:id="_-LQxZ452EeKPK79J7cDCvg" name="sensorId">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxaI52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxaY52EeKPK79J7cDCvg" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxao52EeKPK79J7cDCvg" source="_-LQxa452EeKPK79J7cDCvg" target="_-LQxbI52EeKPK79J7cDCvg"/>
          <structuredNode xmi:id="_-LQxbY52EeKPK79J7cDCvg" name="Body(raiseAlarm$method$1)"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LQxa452EeKPK79J7cDCvg" name="Input(sensorId)" outgoing="_-LQxao52EeKPK79J7cDCvg" parameter="_-LQxZ452EeKPK79J7cDCvg"/>
          <node xmi:type="uml:ForkNode" xmi:id="_-LQxbI52EeKPK79J7cDCvg" name="Fork(sensorId)" incoming="_-LQxao52EeKPK79J7cDCvg"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LQxbo52EeKPK79J7cDCvg" name="cleanUp$method$1" specification="_-LRYuI52EeKPK79J7cDCvg" group="_-LQxb452EeKPK79J7cDCvg" node="_-LQxb452EeKPK79J7cDCvg">
          <structuredNode xmi:id="_-LQxb452EeKPK79J7cDCvg" name="Body(cleanUp$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LQxcI52EeKPK79J7cDCvg" name="Monitor$method$1" specification="_-LRYuY52EeKPK79J7cDCvg" group="_-LQxdo52EeKPK79J7cDCvg" node="_-LQxdY52EeKPK79J7cDCvg _-LQxdo52EeKPK79J7cDCvg">
          <ownedParameter xmi:id="_-LQxcY52EeKPK79J7cDCvg" name="" type="_-LQxYo52EeKPK79J7cDCvg" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxco52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxc452EeKPK79J7cDCvg" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxdI52EeKPK79J7cDCvg" source="_-LQxfI52EeKPK79J7cDCvg" target="_-LQxdY52EeKPK79J7cDCvg"/>
          <structuredNode xmi:id="_-LQxdo52EeKPK79J7cDCvg" name="Body(Monitor$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LQxd452EeKPK79J7cDCvg" name="Body" incoming="_-LQxoo52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_-LQxeI52EeKPK79J7cDCvg" name="ReadSelf">
              <result xmi:id="_-LQxeY52EeKPK79J7cDCvg" name="ReadSelf.result" outgoing="_-LQxoI52EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxeo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxe452EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LQxfI52EeKPK79J7cDCvg" name="Fork(ReadSelf.result)" outgoing="_-LQxdI52EeKPK79J7cDCvg _-LQxoY52EeKPK79J7cDCvg _-LQxo452EeKPK79J7cDCvg" incoming="_-LQxoI52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_-LQxfY52EeKPK79J7cDCvg" name="Call(Monitor$initialization$1)" outgoing="_-LQxoo52EeKPK79J7cDCvg" incoming="_-LQxqY52EeKPK79J7cDCvg" operation="_-LRYs452EeKPK79J7cDCvg">
              <target xmi:id="_-LQxfo52EeKPK79J7cDCvg" name="Call(Monitor$initialization$1).target" incoming="_-LQxoY52EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxf452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxgI52EeKPK79J7cDCvg" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_-LQxgY52EeKPK79J7cDCvg" name="Read(Monitor$initializationFlag$1)" structuralFeature="_-LQxY452EeKPK79J7cDCvg">
              <object xmi:id="_-LQxgo52EeKPK79J7cDCvg" name="Read(Monitor$initializationFlag$1).object" incoming="_-LQxo452EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxg452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxhI52EeKPK79J7cDCvg" value="1"/>
              </object>
              <result xmi:id="_-LQxhY52EeKPK79J7cDCvg" name="Read(Monitor$initializationFlag$1).result" outgoing="_-LQxpI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxho52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxh452EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LQxiI52EeKPK79J7cDCvg" name="Call(ListSize)">
              <argument xmi:id="_-LQxiY52EeKPK79J7cDCvg" name="Call(ListSize).argument(list)" incoming="_-LQxpI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxio52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxi452EeKPK79J7cDCvg" value="*"/>
              </argument>
              <result xmi:id="_-LQxjI52EeKPK79J7cDCvg" name="Call(ListSize).result(result)" outgoing="_-LQxpY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxjY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxjo52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LQxj452EeKPK79J7cDCvg" name="Value(0)">
              <result xmi:id="_-LQxkI52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LQxpo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxkY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxko52EeKPK79J7cDCvg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LQxk452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_-LQxlI52EeKPK79J7cDCvg" name="Test(Size==0)">
              <first xmi:id="_-LQxlY52EeKPK79J7cDCvg" name="Test(Size==0).first" incoming="_-LQxpY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxlo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxl452EeKPK79J7cDCvg" value="1"/>
              </first>
              <result xmi:id="_-LQxmI52EeKPK79J7cDCvg" name="Test(Size==0).result" outgoing="_-LQxqI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxmY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxmo52EeKPK79J7cDCvg" value="1"/>
              </result>
              <second xmi:id="_-LQxm452EeKPK79J7cDCvg" name="Test(Size==0).second" incoming="_-LQxpo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LQxnI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LQxnY52EeKPK79J7cDCvg" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_-LQxno52EeKPK79J7cDCvg" name="InitialNode" outgoing="_-LQxp452EeKPK79J7cDCvg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_-LQxn452EeKPK79J7cDCvg" name="Decision(Test(Monitor$initializationFlag$1))" outgoing="_-LQxqY52EeKPK79J7cDCvg" incoming="_-LQxp452EeKPK79J7cDCvg _-LQxqI52EeKPK79J7cDCvg" decisionInputFlow="_-LQxqI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxoI52EeKPK79J7cDCvg" source="_-LQxeY52EeKPK79J7cDCvg" target="_-LQxfI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxoY52EeKPK79J7cDCvg" source="_-LQxfI52EeKPK79J7cDCvg" target="_-LQxfo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LQxoo52EeKPK79J7cDCvg" source="_-LQxfY52EeKPK79J7cDCvg" target="_-LQxd452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxo452EeKPK79J7cDCvg" source="_-LQxfI52EeKPK79J7cDCvg" target="_-LQxgo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxpI52EeKPK79J7cDCvg" source="_-LQxhY52EeKPK79J7cDCvg" target="_-LQxiY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxpY52EeKPK79J7cDCvg" source="_-LQxjI52EeKPK79J7cDCvg" target="_-LQxlY52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxpo52EeKPK79J7cDCvg" source="_-LQxkI52EeKPK79J7cDCvg" target="_-LQxm452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LQxp452EeKPK79J7cDCvg" source="_-LQxno52EeKPK79J7cDCvg" target="_-LQxn452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LQxqI52EeKPK79J7cDCvg" source="_-LQxmI52EeKPK79J7cDCvg" target="_-LQxn452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LQxqY52EeKPK79J7cDCvg" source="_-LQxn452EeKPK79J7cDCvg" target="_-LQxfY52EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LQxqo52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LQxdY52EeKPK79J7cDCvg" name="Return" incoming="_-LQxdI52EeKPK79J7cDCvg" parameter="_-LQxcY52EeKPK79J7cDCvg"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LQxq452EeKPK79J7cDCvg" name="destroy$method$1" specification="_-LRYvY52EeKPK79J7cDCvg" group="_-LRYcI52EeKPK79J7cDCvg" node="_-LRYcI52EeKPK79J7cDCvg">
          <structuredNode xmi:id="_-LRYcI52EeKPK79J7cDCvg" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_-LRYcY52EeKPK79J7cDCvg" name="Monitor$initialization$1" specification="_-LRYs452EeKPK79J7cDCvg" group="_-LRYco52EeKPK79J7cDCvg" node="_-LRYco52EeKPK79J7cDCvg">
          <structuredNode xmi:id="_-LRYco52EeKPK79J7cDCvg" name="Body(Monitor$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_-LRYc452EeKPK79J7cDCvg" name="ReadSelf">
              <result xmi:id="_-LRYdI52EeKPK79J7cDCvg" name="ReadSelf.result" outgoing="_-LRYqY52EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYdY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYdo52EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LRYd452EeKPK79J7cDCvg" name="Fork(ReadSelf.result)" outgoing="_-LRYqo52EeKPK79J7cDCvg _-LRYq452EeKPK79J7cDCvg" incoming="_-LRYqY52EeKPK79J7cDCvg"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LRYeI52EeKPK79J7cDCvg" name="Initialization" incoming="_-LRYsY52EeKPK79J7cDCvg">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LRYeY52EeKPK79J7cDCvg" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LRYeo52EeKPK79J7cDCvg" name="Value(true)">
                  <result xmi:id="_-LRYe452EeKPK79J7cDCvg" name="Value(true).result" outgoing="_-LRYiY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYfI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYfY52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_-LRYfo52EeKPK79J7cDCvg" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_-LRYf452EeKPK79J7cDCvg" name="Write(Monitor$initializationFlag$1)" structuralFeature="_-LQxY452EeKPK79J7cDCvg" isReplaceAll="true">
                  <object xmi:id="_-LRYgI52EeKPK79J7cDCvg" name="Write(Monitor$initializationFlag$1).object" incoming="_-LRYqo52EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYgY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYgo52EeKPK79J7cDCvg" value="1"/>
                  </object>
                  <result xmi:id="_-LRYg452EeKPK79J7cDCvg" name="Write(Monitor$initializationFlag$1).result" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYhI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYhY52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:id="_-LRYho52EeKPK79J7cDCvg" name="Write(Monitor$initializationFlag$1).value" incoming="_-LRYiY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYh452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYiI52EeKPK79J7cDCvg" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYiY52EeKPK79J7cDCvg" source="_-LRYe452EeKPK79J7cDCvg" target="_-LRYho52EeKPK79J7cDCvg"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_-LRYio52EeKPK79J7cDCvg" name="Read(Monitor$initializationFlag$1)" structuralFeature="_-LQxY452EeKPK79J7cDCvg">
              <object xmi:id="_-LRYi452EeKPK79J7cDCvg" name="Read(Monitor$initializationFlag$1).object" incoming="_-LRYq452EeKPK79J7cDCvg" type="_-LQxYo52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYjI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYjY52EeKPK79J7cDCvg" value="1"/>
              </object>
              <result xmi:id="_-LRYjo52EeKPK79J7cDCvg" name="Read(Monitor$initializationFlag$1).result" outgoing="_-LRYrI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYj452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYkI52EeKPK79J7cDCvg" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LRYkY52EeKPK79J7cDCvg" name="Call(ListSize)">
              <argument xmi:id="_-LRYko52EeKPK79J7cDCvg" name="Call(ListSize).argument(list)" incoming="_-LRYrI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYk452EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYlI52EeKPK79J7cDCvg" value="*"/>
              </argument>
              <result xmi:id="_-LRYlY52EeKPK79J7cDCvg" name="Call(ListSize).result(result)" outgoing="_-LRYrY52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYlo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYl452EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LRYmI52EeKPK79J7cDCvg" name="Value(0)">
              <result xmi:id="_-LRYmY52EeKPK79J7cDCvg" name="Value(0).result" outgoing="_-LRYro52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYmo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYm452EeKPK79J7cDCvg" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LRYnI52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_-LRYnY52EeKPK79J7cDCvg" name="Test(Size==0)">
              <first xmi:id="_-LRYno52EeKPK79J7cDCvg" name="Test(Size==0).first" incoming="_-LRYrY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYn452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYoI52EeKPK79J7cDCvg" value="1"/>
              </first>
              <result xmi:id="_-LRYoY52EeKPK79J7cDCvg" name="Test(Size==0).result" outgoing="_-LRYsI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYoo52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYo452EeKPK79J7cDCvg" value="1"/>
              </result>
              <second xmi:id="_-LRYpI52EeKPK79J7cDCvg" name="Test(Size==0).second" incoming="_-LRYro52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYpY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYpo52EeKPK79J7cDCvg" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_-LRYp452EeKPK79J7cDCvg" name="InitialNode" outgoing="_-LRYr452EeKPK79J7cDCvg"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_-LRYqI52EeKPK79J7cDCvg" name="Decision(Test(Monitor$initializationFlag$1))" outgoing="_-LRYsY52EeKPK79J7cDCvg" incoming="_-LRYr452EeKPK79J7cDCvg _-LRYsI52EeKPK79J7cDCvg" decisionInputFlow="_-LRYsI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYqY52EeKPK79J7cDCvg" source="_-LRYdI52EeKPK79J7cDCvg" target="_-LRYd452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYqo52EeKPK79J7cDCvg" source="_-LRYd452EeKPK79J7cDCvg" target="_-LRYgI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYq452EeKPK79J7cDCvg" source="_-LRYd452EeKPK79J7cDCvg" target="_-LRYi452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYrI52EeKPK79J7cDCvg" source="_-LRYjo52EeKPK79J7cDCvg" target="_-LRYko52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYrY52EeKPK79J7cDCvg" source="_-LRYlY52EeKPK79J7cDCvg" target="_-LRYno52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYro52EeKPK79J7cDCvg" source="_-LRYmY52EeKPK79J7cDCvg" target="_-LRYpI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LRYr452EeKPK79J7cDCvg" source="_-LRYp452EeKPK79J7cDCvg" target="_-LRYqI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LRYsI52EeKPK79J7cDCvg" source="_-LRYoY52EeKPK79J7cDCvg" target="_-LRYqI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LRYsY52EeKPK79J7cDCvg" source="_-LRYqI52EeKPK79J7cDCvg" target="_-LRYeI52EeKPK79J7cDCvg">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LRYso52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_-LRYs452EeKPK79J7cDCvg" name="Monitor$initialization$1" visibility="protected" method="_-LRYcY52EeKPK79J7cDCvg"/>
        <ownedOperation xmi:id="_-LRYtI52EeKPK79J7cDCvg" name="raiseAlarm" visibility="public" method="_-LQxZo52EeKPK79J7cDCvg">
          <ownedParameter xmi:id="_-LRYtY52EeKPK79J7cDCvg" name="sensorId" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYto52EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYt452EeKPK79J7cDCvg" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-LRYuI52EeKPK79J7cDCvg" name="cleanUp" visibility="public" method="_-LQxbo52EeKPK79J7cDCvg"/>
        <ownedOperation xmi:id="_-LRYuY52EeKPK79J7cDCvg" name="Monitor" visibility="package" method="_-LQxcI52EeKPK79J7cDCvg">
          <ownedParameter xmi:id="_-LRYuo52EeKPK79J7cDCvg" name="" visibility="package" type="_-LQxYo52EeKPK79J7cDCvg" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LRYu452EeKPK79J7cDCvg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LRYvI52EeKPK79J7cDCvg" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_-LRYvY52EeKPK79J7cDCvg" name="destroy" visibility="package" method="_-LQxq452EeKPK79J7cDCvg"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_-LRYvo52EeKPK79J7cDCvg" name="Condition" visibility="package">
        <ownedLiteral xmi:id="_-LR_gI52EeKPK79J7cDCvg" name="normal" visibility="package"/>
        <ownedLiteral xmi:id="_-LR_gY52EeKPK79J7cDCvg" name="alert" visibility="package"/>
        <ownedLiteral xmi:id="_-LR_go52EeKPK79J7cDCvg" name="critical" visibility="package"/>
        <ownedLiteral xmi:id="_-LR_g452EeKPK79J7cDCvg" name="error" visibility="package"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_-LR_hI52EeKPK79J7cDCvg" name="AssertEqual" group="_-LR_oo52EeKPK79J7cDCvg" node="_-LR_nI52EeKPK79J7cDCvg _-LR_nY52EeKPK79J7cDCvg _-LR_no52EeKPK79J7cDCvg _-LR_n452EeKPK79J7cDCvg _-LR_oI52EeKPK79J7cDCvg _-LR_oY52EeKPK79J7cDCvg _-LR_oo52EeKPK79J7cDCvg">
      <packageImport xmi:id="_-LR_hY52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_-LR_ho52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_-LR_h452EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_-LR_iI52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_-LR_iY52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_-LR_io52EeKPK79J7cDCvg" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_i452EeKPK79J7cDCvg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_jI52EeKPK79J7cDCvg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_-LR_jY52EeKPK79J7cDCvg" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_jo52EeKPK79J7cDCvg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_j452EeKPK79J7cDCvg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_-LR_kI52EeKPK79J7cDCvg" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_kY52EeKPK79J7cDCvg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_ko52EeKPK79J7cDCvg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_k452EeKPK79J7cDCvg" source="_-LR_nI52EeKPK79J7cDCvg" target="_-LR_nY52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_lI52EeKPK79J7cDCvg" source="_-LR_no52EeKPK79J7cDCvg" target="_-LR_n452EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_lY52EeKPK79J7cDCvg" source="_-LR_oI52EeKPK79J7cDCvg" target="_-LR_oY52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_lo52EeKPK79J7cDCvg" source="_-LR_n452EeKPK79J7cDCvg" target="_-LR_ro52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_l452EeKPK79J7cDCvg" source="_-LR_oY52EeKPK79J7cDCvg" target="_-LR_to52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_mI52EeKPK79J7cDCvg" source="_-LR_nY52EeKPK79J7cDCvg" target="_-LSmpI52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_mY52EeKPK79J7cDCvg" source="_-LR_oY52EeKPK79J7cDCvg" target="_-LSmxY52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_mo52EeKPK79J7cDCvg" source="_-LR_oY52EeKPK79J7cDCvg" target="_-LSm4452EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LR_m452EeKPK79J7cDCvg" source="_-LR_oY52EeKPK79J7cDCvg" target="_-LTNu452EeKPK79J7cDCvg"/>
      <structuredNode xmi:id="_-LR_oo52EeKPK79J7cDCvg" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_-LR_o452EeKPK79J7cDCvg" name="IfStatement@36dcd4b4">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_-LR_pI52EeKPK79J7cDCvg" name="Test(==)" incoming="_-LTN6452EeKPK79J7cDCvg">
            <first xmi:id="_-LR_pY52EeKPK79J7cDCvg" name="Test(==).first" incoming="_-LTN4o52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_po52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_p452EeKPK79J7cDCvg" value="1"/>
            </first>
            <result xmi:id="_-LR_qI52EeKPK79J7cDCvg" name="Test(==).result" outgoing="_-LTN9Y52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_qY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_qo52EeKPK79J7cDCvg" value="1"/>
            </result>
            <second xmi:id="_-LR_q452EeKPK79J7cDCvg" name="Test(==).second" incoming="_-LTN5I52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_rI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_rY52EeKPK79J7cDCvg" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LR_ro52EeKPK79J7cDCvg" name="Fork(Fork(value1))" outgoing="_-LTN4o52EeKPK79J7cDCvg _-LTN4452EeKPK79J7cDCvg" incoming="_-LR_lo52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LR_r452EeKPK79J7cDCvg" name="Call(NotEmpty)">
            <argument xmi:id="_-LR_sI52EeKPK79J7cDCvg" name="Call(NotEmpty).argument(seq)" incoming="_-LTN4452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_sY52EeKPK79J7cDCvg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_so52EeKPK79J7cDCvg" value="*"/>
            </argument>
            <result xmi:id="_-LR_s452EeKPK79J7cDCvg" name="Call(NotEmpty).result()" outgoing="_-LTN5o52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_tI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_tY52EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_-LR_to52EeKPK79J7cDCvg" name="Fork(Fork(value2))" outgoing="_-LTN5I52EeKPK79J7cDCvg _-LTN5Y52EeKPK79J7cDCvg" incoming="_-LR_l452EeKPK79J7cDCvg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LR_t452EeKPK79J7cDCvg" name="Call(NotEmpty)">
            <argument xmi:id="_-LR_uI52EeKPK79J7cDCvg" name="Call(NotEmpty).argument(seq)" incoming="_-LTN5Y52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_uY52EeKPK79J7cDCvg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_uo52EeKPK79J7cDCvg" value="*"/>
            </argument>
            <result xmi:id="_-LR_u452EeKPK79J7cDCvg" name="Call(NotEmpty).result()" outgoing="_-LTN5452EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_vI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_vY52EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_-LR_vo52EeKPK79J7cDCvg" name="Initial(Test(==))" outgoing="_-LTN7452EeKPK79J7cDCvg"/>
          <node xmi:type="uml:ForkNode" xmi:id="_-LR_v452EeKPK79J7cDCvg" name="Fork(Call(NotEmpty).result())" outgoing="_-LTN6I52EeKPK79J7cDCvg _-LTN8I52EeKPK79J7cDCvg" incoming="_-LTN5o52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:ForkNode" xmi:id="_-LR_wI52EeKPK79J7cDCvg" name="Fork(Call(NotEmpty).result())" outgoing="_-LTN6Y52EeKPK79J7cDCvg _-LTN6o52EeKPK79J7cDCvg" incoming="_-LTN5452EeKPK79J7cDCvg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LR_wY52EeKPK79J7cDCvg" name="Call(Not)" incoming="_-LTN7Y52EeKPK79J7cDCvg">
            <argument xmi:id="_-LR_wo52EeKPK79J7cDCvg" name="Call(Not).argument(x)" incoming="_-LTN6I52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_w452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_xI52EeKPK79J7cDCvg" value="1"/>
            </argument>
            <result xmi:id="_-LR_xY52EeKPK79J7cDCvg" name="Call(Not).result(result)" outgoing="_-LTN9o52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_xo52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_x452EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LR_yI52EeKPK79J7cDCvg" name="Call(Not)" incoming="_-LTN8452EeKPK79J7cDCvg">
            <argument xmi:id="_-LR_yY52EeKPK79J7cDCvg" name="Call(Not).argument(x)" incoming="_-LTN6Y52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_yo52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_y452EeKPK79J7cDCvg" value="1"/>
            </argument>
            <result xmi:id="_-LR_zI52EeKPK79J7cDCvg" name="Call(Not).result(result)" outgoing="_-LTN9452EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LR_zY52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LR_zo52EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_-LR_z452EeKPK79J7cDCvg" name="Decision(Call(NotEmpty).result())" outgoing="_-LTN6452EeKPK79J7cDCvg _-LTN7Y52EeKPK79J7cDCvg" incoming="_-LTN6o52EeKPK79J7cDCvg _-LTN8Y52EeKPK79J7cDCvg" decisionInputFlow="_-LTN6o52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_-LR_0I52EeKPK79J7cDCvg" name="Decision(Call(NotEmpty).result())" outgoing="_-LTN8Y52EeKPK79J7cDCvg _-LTN8452EeKPK79J7cDCvg" incoming="_-LTN7452EeKPK79J7cDCvg _-LTN8I52EeKPK79J7cDCvg" decisionInputFlow="_-LTN8I52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:MergeNode" xmi:id="_-LR_0Y52EeKPK79J7cDCvg" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_-LTN-I52EeKPK79J7cDCvg" incoming="_-LTN9Y52EeKPK79J7cDCvg _-LTN9o52EeKPK79J7cDCvg _-LTN9452EeKPK79J7cDCvg"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LR_0o52EeKPK79J7cDCvg" name="Call(Not)">
            <argument xmi:id="_-LR_0452EeKPK79J7cDCvg" name="Call(Not).argument(x)" incoming="_-LTN-I52EeKPK79J7cDCvg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmkI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmkY52EeKPK79J7cDCvg" value="1"/>
            </argument>
            <result xmi:id="_-LSmko52EeKPK79J7cDCvg" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmk452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmlI52EeKPK79J7cDCvg" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LSmlY52EeKPK79J7cDCvg" name="ExpressionStatement@77fe4c59" outgoing="_-LTN-Y52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LSmlo52EeKPK79J7cDCvg" name="Call(Write)" incoming="_-LSmvY52EeKPK79J7cDCvg" behavior="_-LT0sY52EeKPK79J7cDCvg">
              <argument xmi:id="_-LSml452EeKPK79J7cDCvg" name="Call(Write).argument(value)" incoming="_-LSmvI52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmmI52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmmY52EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LSmmo52EeKPK79J7cDCvg" name="Tuple@44aa0d2c" outgoing="_-LSmvY52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LSmm452EeKPK79J7cDCvg" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_-LSmnI52EeKPK79J7cDCvg" name="Value(&quot;FAILED: &quot;).result" outgoing="_-LSmuY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmnY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmno52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LSmn452EeKPK79J7cDCvg" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LSmoI52EeKPK79J7cDCvg" name="Call(Concat)">
                <argument xmi:id="_-LSmoY52EeKPK79J7cDCvg" name="Call(Concat).argument(x)" incoming="_-LSmuY52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmoo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmo452EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LSmpI52EeKPK79J7cDCvg" name="Call(Concat).argument(y)" incoming="_-LR_mI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmpY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmpo52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LSmp452EeKPK79J7cDCvg" name="Call(Concat).result(result)" outgoing="_-LSmuo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmqI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmqY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LSmqo52EeKPK79J7cDCvg" name="Value(&quot;==&quot;)">
                <result xmi:id="_-LSmq452EeKPK79J7cDCvg" name="Value(&quot;==&quot;).result" outgoing="_-LSmu452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmrI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmrY52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LSmro52EeKPK79J7cDCvg" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LSmr452EeKPK79J7cDCvg" name="Call(Concat)">
                <argument xmi:id="_-LSmsI52EeKPK79J7cDCvg" name="Call(Concat).argument(x)" incoming="_-LSmuo52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmsY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmso52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <argument xmi:id="_-LSms452EeKPK79J7cDCvg" name="Call(Concat).argument(y)" incoming="_-LSmu452EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmtI52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmtY52EeKPK79J7cDCvg" value="1"/>
                </argument>
                <result xmi:id="_-LSmto52EeKPK79J7cDCvg" name="Call(Concat).result(result)" outgoing="_-LSmvI52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmt452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmuI52EeKPK79J7cDCvg" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSmuY52EeKPK79J7cDCvg" source="_-LSmnI52EeKPK79J7cDCvg" target="_-LSmoY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSmuo52EeKPK79J7cDCvg" source="_-LSmp452EeKPK79J7cDCvg" target="_-LSmsI52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSmu452EeKPK79J7cDCvg" source="_-LSmq452EeKPK79J7cDCvg" target="_-LSms452EeKPK79J7cDCvg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSmvI52EeKPK79J7cDCvg" source="_-LSmto52EeKPK79J7cDCvg" target="_-LSml452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LSmvY52EeKPK79J7cDCvg" source="_-LSmmo52EeKPK79J7cDCvg" target="_-LSmlo52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LSmvo52EeKPK79J7cDCvg" name="ExpressionStatement@4870381" outgoing="_-LTN-o52EeKPK79J7cDCvg" incoming="_-LTN-Y52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LSmv452EeKPK79J7cDCvg" name="Call(Write)" incoming="_-LTNzI52EeKPK79J7cDCvg" behavior="_-LT0sY52EeKPK79J7cDCvg">
              <argument xmi:id="_-LSmwI52EeKPK79J7cDCvg" name="Call(Write).argument(value)" incoming="_-LTNy452EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmwY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmwo52EeKPK79J7cDCvg" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LSmw452EeKPK79J7cDCvg" name="Tuple@421eddaf" outgoing="_-LTNzI52EeKPK79J7cDCvg">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_-LSmxI52EeKPK79J7cDCvg" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_-LSmxY52EeKPK79J7cDCvg" name="ReadIsClassifiedObject(String).object" incoming="_-LR_mY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmxo52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmx452EeKPK79J7cDCvg" value="1"/>
                </object>
                <result xmi:id="_-LSmyI52EeKPK79J7cDCvg" name="ReadIsClassifiedObject(String).result" outgoing="_-LTNxI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmyY52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmyo52EeKPK79J7cDCvg" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LSmy452EeKPK79J7cDCvg" name="ConditionalTestExpression@2ae0c0ed.operand2" incoming="_-LTNxY52EeKPK79J7cDCvg">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LSmzI52EeKPK79J7cDCvg" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_-LSmzY52EeKPK79J7cDCvg" name="Value(&quot;&quot;&quot;).result" outgoing="_-LTNtY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSmzo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSmz452EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_-LSm0I52EeKPK79J7cDCvg" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_-LSm0Y52EeKPK79J7cDCvg" name="CastExpression@191e12f" mode="parallel" outputElement="_-LSm5I52EeKPK79J7cDCvg" inputElement="_-LSm4452EeKPK79J7cDCvg">
                  <node xmi:type="uml:MergeNode" xmi:id="_-LSm0o52EeKPK79J7cDCvg" name="Merge(CastExpression@191e12f.operand)" outgoing="_-LSm4o52EeKPK79J7cDCvg" incoming="_-LSm3452EeKPK79J7cDCvg"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_-LSm0452EeKPK79J7cDCvg" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_-LSm1I52EeKPK79J7cDCvg" name="ReadIsClassifiedObject(String).object" incoming="_-LSm3I52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSm1Y52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSm1o52EeKPK79J7cDCvg" value="1"/>
                    </object>
                    <result xmi:id="_-LSm1452EeKPK79J7cDCvg" name="ReadIsClassifiedObject(String).result" outgoing="_-LSm3o52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSm2I52EeKPK79J7cDCvg" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSm2Y52EeKPK79J7cDCvg" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_-LSm2o52EeKPK79J7cDCvg" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_-LSm3I52EeKPK79J7cDCvg _-LSm3Y52EeKPK79J7cDCvg" incoming="_-LSm4Y52EeKPK79J7cDCvg"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_-LSm2452EeKPK79J7cDCvg" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_-LSm3452EeKPK79J7cDCvg" incoming="_-LSm3Y52EeKPK79J7cDCvg _-LSm3o52EeKPK79J7cDCvg" decisionInputFlow="_-LSm3o52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSm3I52EeKPK79J7cDCvg" source="_-LSm2o52EeKPK79J7cDCvg" target="_-LSm1I52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSm3Y52EeKPK79J7cDCvg" source="_-LSm2o52EeKPK79J7cDCvg" target="_-LSm2452EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSm3o52EeKPK79J7cDCvg" source="_-LSm1452EeKPK79J7cDCvg" target="_-LSm2452EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSm3452EeKPK79J7cDCvg" source="_-LSm2452EeKPK79J7cDCvg" target="_-LSm0o52EeKPK79J7cDCvg">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LSm4I52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSm4Y52EeKPK79J7cDCvg" source="_-LSm4452EeKPK79J7cDCvg" target="_-LSm2o52EeKPK79J7cDCvg"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LSm4o52EeKPK79J7cDCvg" source="_-LSm0o52EeKPK79J7cDCvg" target="_-LSm5I52EeKPK79J7cDCvg"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_-LSm4452EeKPK79J7cDCvg" name="CastExpression@191e12f.inputElement" outgoing="_-LSm4Y52EeKPK79J7cDCvg" incoming="_-LR_mo52EeKPK79J7cDCvg" regionAsInput="_-LSm0Y52EeKPK79J7cDCvg"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_-LSm5I52EeKPK79J7cDCvg" name="CastExpression@191e12f.outputElement" outgoing="_-LTNto52EeKPK79J7cDCvg" incoming="_-LSm4o52EeKPK79J7cDCvg" regionAsOutput="_-LSm0Y52EeKPK79J7cDCvg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LSm5Y52EeKPK79J7cDCvg" name="Call(Concat)">
                  <argument xmi:id="_-LSm5o52EeKPK79J7cDCvg" name="Call(Concat).argument(x)" incoming="_-LTNtY52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSm5452EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSm6I52EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <argument xmi:id="_-LSm6Y52EeKPK79J7cDCvg" name="Call(Concat).argument(y)" incoming="_-LTNto52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LSm6o52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LSm6452EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <result xmi:id="_-LTNoI52EeKPK79J7cDCvg" name="Call(Concat).result(result)" outgoing="_-LTNt452EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNoY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNoo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LTNo452EeKPK79J7cDCvg" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_-LTNpI52EeKPK79J7cDCvg" name="Value(&quot;&quot;&quot;).result" outgoing="_-LTNuI52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNpY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNpo52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_-LTNp452EeKPK79J7cDCvg" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LTNqI52EeKPK79J7cDCvg" name="Call(Concat)">
                  <argument xmi:id="_-LTNqY52EeKPK79J7cDCvg" name="Call(Concat).argument(x)" incoming="_-LTNt452EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNqo52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNq452EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <argument xmi:id="_-LTNrI52EeKPK79J7cDCvg" name="Call(Concat).argument(y)" incoming="_-LTNuI52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNrY52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNro52EeKPK79J7cDCvg" value="1"/>
                  </argument>
                  <result xmi:id="_-LTNr452EeKPK79J7cDCvg" name="Call(Concat).result(result)" outgoing="_-LTNuY52EeKPK79J7cDCvg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNsI52EeKPK79J7cDCvg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNsY52EeKPK79J7cDCvg" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <structuredNodeOutput xmi:id="_-LTNso52EeKPK79J7cDCvg" name="ConditionalTestExpression@2ae0c0ed.operand2.result" outgoing="_-LTNyY52EeKPK79J7cDCvg" incoming="_-LTNuY52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNs452EeKPK79J7cDCvg"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNtI52EeKPK79J7cDCvg" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNtY52EeKPK79J7cDCvg" source="_-LSmzY52EeKPK79J7cDCvg" target="_-LSm5o52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNto52EeKPK79J7cDCvg" source="_-LSm5I52EeKPK79J7cDCvg" target="_-LSm6Y52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNt452EeKPK79J7cDCvg" source="_-LTNoI52EeKPK79J7cDCvg" target="_-LTNqY52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNuI52EeKPK79J7cDCvg" source="_-LTNpI52EeKPK79J7cDCvg" target="_-LTNrI52EeKPK79J7cDCvg"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNuY52EeKPK79J7cDCvg" source="_-LTNr452EeKPK79J7cDCvg" target="_-LTNso52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LTNuo52EeKPK79J7cDCvg" name="ConditionalTestExpression@2ae0c0ed.operand3" incoming="_-LTNx452EeKPK79J7cDCvg">
                <node xmi:type="uml:MergeNode" xmi:id="_-LTNu452EeKPK79J7cDCvg" name="Merge(Fork(value2))" outgoing="_-LTNv452EeKPK79J7cDCvg" incoming="_-LR_m452EeKPK79J7cDCvg"/>
                <structuredNodeOutput xmi:id="_-LTNvI52EeKPK79J7cDCvg" name="ConditionalTestExpression@2ae0c0ed.operand3.result" outgoing="_-LTNyo52EeKPK79J7cDCvg" incoming="_-LTNv452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTNvY52EeKPK79J7cDCvg"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTNvo52EeKPK79J7cDCvg" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNv452EeKPK79J7cDCvg" source="_-LTNu452EeKPK79J7cDCvg" target="_-LTNvI52EeKPK79J7cDCvg"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_-LTNwI52EeKPK79J7cDCvg" name="Initial(ConditionalTestExpression@2ae0c0ed)" outgoing="_-LTNw452EeKPK79J7cDCvg"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_-LTNwY52EeKPK79J7cDCvg" name="Decision(ConditionalTestExpression@2ae0c0ed)" outgoing="_-LTNxY52EeKPK79J7cDCvg _-LTNx452EeKPK79J7cDCvg" incoming="_-LTNw452EeKPK79J7cDCvg _-LTNxI52EeKPK79J7cDCvg" decisionInputFlow="_-LTNxI52EeKPK79J7cDCvg"/>
              <node xmi:type="uml:MergeNode" xmi:id="_-LTNwo52EeKPK79J7cDCvg" name="Merge(ConditionalTestExpression@2ae0c0ed.result)" outgoing="_-LTNy452EeKPK79J7cDCvg" incoming="_-LTNyY52EeKPK79J7cDCvg _-LTNyo52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_-LTNw452EeKPK79J7cDCvg" source="_-LTNwI52EeKPK79J7cDCvg" target="_-LTNwY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNxI52EeKPK79J7cDCvg" source="_-LSmyI52EeKPK79J7cDCvg" target="_-LTNwY52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_-LTNxY52EeKPK79J7cDCvg" source="_-LTNwY52EeKPK79J7cDCvg" target="_-LSmy452EeKPK79J7cDCvg">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LTNxo52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_-LTNx452EeKPK79J7cDCvg" source="_-LTNwY52EeKPK79J7cDCvg" target="_-LTNuo52EeKPK79J7cDCvg">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LTNyI52EeKPK79J7cDCvg" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNyY52EeKPK79J7cDCvg" source="_-LTNso52EeKPK79J7cDCvg" target="_-LTNwo52EeKPK79J7cDCvg"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNyo52EeKPK79J7cDCvg" source="_-LTNvI52EeKPK79J7cDCvg" target="_-LTNwo52EeKPK79J7cDCvg"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTNy452EeKPK79J7cDCvg" source="_-LTNwo52EeKPK79J7cDCvg" target="_-LSmwI52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LTNzI52EeKPK79J7cDCvg" source="_-LSmw452EeKPK79J7cDCvg" target="_-LSmv452EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LTNzY52EeKPK79J7cDCvg" name="ExpressionStatement@b019c0c" incoming="_-LTN-o52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LTNzo52EeKPK79J7cDCvg" name="Call(WriteLine)" incoming="_-LTN3I52EeKPK79J7cDCvg">
              <argument xmi:id="_-LTNz452EeKPK79J7cDCvg" name="Call(WriteLine).argument(value)" incoming="_-LTN2452EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTN0I52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTN0Y52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LTN0o52EeKPK79J7cDCvg" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTN0452EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTN1I52EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LTN1Y52EeKPK79J7cDCvg" name="Tuple@36dc5642" outgoing="_-LTN3I52EeKPK79J7cDCvg">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LTN1o52EeKPK79J7cDCvg" name="Value(&quot;&quot;)">
                <result xmi:id="_-LTN1452EeKPK79J7cDCvg" name="Value(&quot;&quot;).result" outgoing="_-LTN2452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTN2I52EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTN2Y52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_-LTN2o52EeKPK79J7cDCvg" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN2452EeKPK79J7cDCvg" source="_-LTN1452EeKPK79J7cDCvg" target="_-LTNz452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN3I52EeKPK79J7cDCvg" source="_-LTN1Y52EeKPK79J7cDCvg" target="_-LTNzo52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LTN3Y52EeKPK79J7cDCvg" name="Value(true)">
            <result xmi:id="_-LTN3o52EeKPK79J7cDCvg" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LTN3452EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LTN4I52EeKPK79J7cDCvg" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_-LTN4Y52EeKPK79J7cDCvg" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN4o52EeKPK79J7cDCvg" source="_-LR_ro52EeKPK79J7cDCvg" target="_-LR_pY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN4452EeKPK79J7cDCvg" source="_-LR_ro52EeKPK79J7cDCvg" target="_-LR_sI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN5I52EeKPK79J7cDCvg" source="_-LR_to52EeKPK79J7cDCvg" target="_-LR_q452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN5Y52EeKPK79J7cDCvg" source="_-LR_to52EeKPK79J7cDCvg" target="_-LR_uI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN5o52EeKPK79J7cDCvg" source="_-LR_s452EeKPK79J7cDCvg" target="_-LR_v452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN5452EeKPK79J7cDCvg" source="_-LR_u452EeKPK79J7cDCvg" target="_-LR_wI52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN6I52EeKPK79J7cDCvg" source="_-LR_v452EeKPK79J7cDCvg" target="_-LR_wo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN6Y52EeKPK79J7cDCvg" source="_-LR_wI52EeKPK79J7cDCvg" target="_-LR_yY52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN6o52EeKPK79J7cDCvg" source="_-LR_wI52EeKPK79J7cDCvg" target="_-LR_z452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN6452EeKPK79J7cDCvg" source="_-LR_z452EeKPK79J7cDCvg" target="_-LR_pI52EeKPK79J7cDCvg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LTN7I52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN7Y52EeKPK79J7cDCvg" source="_-LR_z452EeKPK79J7cDCvg" target="_-LR_wY52EeKPK79J7cDCvg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LTN7o52EeKPK79J7cDCvg" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN7452EeKPK79J7cDCvg" source="_-LR_vo52EeKPK79J7cDCvg" target="_-LR_0I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN8I52EeKPK79J7cDCvg" source="_-LR_v452EeKPK79J7cDCvg" target="_-LR_0I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN8Y52EeKPK79J7cDCvg" source="_-LR_0I52EeKPK79J7cDCvg" target="_-LR_z452EeKPK79J7cDCvg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LTN8o52EeKPK79J7cDCvg" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN8452EeKPK79J7cDCvg" source="_-LR_0I52EeKPK79J7cDCvg" target="_-LR_yI52EeKPK79J7cDCvg">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_-LTN9I52EeKPK79J7cDCvg" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN9Y52EeKPK79J7cDCvg" source="_-LR_qI52EeKPK79J7cDCvg" target="_-LR_0Y52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN9o52EeKPK79J7cDCvg" source="_-LR_xY52EeKPK79J7cDCvg" target="_-LR_0Y52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN9452EeKPK79J7cDCvg" source="_-LR_zI52EeKPK79J7cDCvg" target="_-LR_0Y52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LTN-I52EeKPK79J7cDCvg" source="_-LR_0Y52EeKPK79J7cDCvg" target="_-LR_0452EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN-Y52EeKPK79J7cDCvg" source="_-LSmlY52EeKPK79J7cDCvg" target="_-LSmvo52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LTN-o52EeKPK79J7cDCvg" source="_-LSmvo52EeKPK79J7cDCvg" target="_-LTNzY52EeKPK79J7cDCvg"/>
          <clause xmi:id="_-LTN-452EeKPK79J7cDCvg" body="_-LSmlY52EeKPK79J7cDCvg _-LSmvo52EeKPK79J7cDCvg _-LTNzY52EeKPK79J7cDCvg" decider="_-LSmko52EeKPK79J7cDCvg" successorClause="_-LT0sI52EeKPK79J7cDCvg" test="_-LR_pI52EeKPK79J7cDCvg _-LR_r452EeKPK79J7cDCvg _-LR_t452EeKPK79J7cDCvg _-LR_wY52EeKPK79J7cDCvg _-LR_yI52EeKPK79J7cDCvg _-LR_0o52EeKPK79J7cDCvg"/>
          <clause xmi:id="_-LT0sI52EeKPK79J7cDCvg" decider="_-LTN3o52EeKPK79J7cDCvg" predecessorClause="_-LTN-452EeKPK79J7cDCvg" test="_-LTN3Y52EeKPK79J7cDCvg"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LR_nI52EeKPK79J7cDCvg" name="Input(label)" outgoing="_-LR_k452EeKPK79J7cDCvg" parameter="_-LR_io52EeKPK79J7cDCvg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LR_nY52EeKPK79J7cDCvg" name="Fork(label)" outgoing="_-LR_mI52EeKPK79J7cDCvg" incoming="_-LR_k452EeKPK79J7cDCvg"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LR_no52EeKPK79J7cDCvg" name="Input(value1)" outgoing="_-LR_lI52EeKPK79J7cDCvg" parameter="_-LR_jY52EeKPK79J7cDCvg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LR_n452EeKPK79J7cDCvg" name="Fork(value1)" outgoing="_-LR_lo52EeKPK79J7cDCvg" incoming="_-LR_lI52EeKPK79J7cDCvg"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LR_oI52EeKPK79J7cDCvg" name="Input(value2)" outgoing="_-LR_lY52EeKPK79J7cDCvg" parameter="_-LR_kI52EeKPK79J7cDCvg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LR_oY52EeKPK79J7cDCvg" name="Fork(value2)" outgoing="_-LR_l452EeKPK79J7cDCvg _-LR_mY52EeKPK79J7cDCvg _-LR_mo52EeKPK79J7cDCvg _-LR_m452EeKPK79J7cDCvg" incoming="_-LR_lY52EeKPK79J7cDCvg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_-LT0sY52EeKPK79J7cDCvg" name="Write" group="_-LT0vo52EeKPK79J7cDCvg" node="_-LT0vI52EeKPK79J7cDCvg _-LT0vY52EeKPK79J7cDCvg _-LT0vo52EeKPK79J7cDCvg">
      <packageImport xmi:id="_-LT0so52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_-LT0s452EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_-LT0tI52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_-LT0tY52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_-LT0to52EeKPK79J7cDCvg" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_-LT0t452EeKPK79J7cDCvg" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT0uI52EeKPK79J7cDCvg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT0uY52EeKPK79J7cDCvg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT0uo52EeKPK79J7cDCvg" source="_-LT0vI52EeKPK79J7cDCvg" target="_-LT0vY52EeKPK79J7cDCvg"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT0u452EeKPK79J7cDCvg" source="_-LT0vY52EeKPK79J7cDCvg" target="_-LT0y452EeKPK79J7cDCvg"/>
      <structuredNode xmi:id="_-LT0vo52EeKPK79J7cDCvg" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LT0v452EeKPK79J7cDCvg" name="ExpressionStatement@30869e">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_-LT0wI52EeKPK79J7cDCvg" name="Collect(Call(write))" incoming="_-LT07I52EeKPK79J7cDCvg" mode="parallel" inputElement="_-LT00I52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallOperationAction" xmi:id="_-LT0wY52EeKPK79J7cDCvg" name="Call(write)">
              <argument xmi:id="_-LT0wo52EeKPK79J7cDCvg" name="Call(write).argument(value)" incoming="_-LT0zo52EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT0w452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT0xI52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LT0xY52EeKPK79J7cDCvg" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT0xo52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT0x452EeKPK79J7cDCvg" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_-LT0yI52EeKPK79J7cDCvg" name="Call(write).target" incoming="_-LT0z452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT0yY52EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT0yo52EeKPK79J7cDCvg" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_-LT0y452EeKPK79J7cDCvg" name="Collect(Call(write)).input(Fork(value))" outgoing="_-LT0zo52EeKPK79J7cDCvg" incoming="_-LT0u452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT0zI52EeKPK79J7cDCvg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT0zY52EeKPK79J7cDCvg" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT0zo52EeKPK79J7cDCvg" source="_-LT0y452EeKPK79J7cDCvg" target="_-LT0wo52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT0z452EeKPK79J7cDCvg" source="_-LT00I52EeKPK79J7cDCvg" target="_-LT0yI52EeKPK79J7cDCvg"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_-LT00I52EeKPK79J7cDCvg" name="Collect(Call(write)).inputElement" outgoing="_-LT0z452EeKPK79J7cDCvg" incoming="_-LT06452EeKPK79J7cDCvg" regionAsInput="_-LT0wI52EeKPK79J7cDCvg"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LT00Y52EeKPK79J7cDCvg" name="Feature(Call(At).result())" outgoing="_-LT07I52EeKPK79J7cDCvg">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LT00o52EeKPK79J7cDCvg" name="Call(At)" incoming="_-LT06Y52EeKPK79J7cDCvg">
              <argument xmi:id="_-LT00452EeKPK79J7cDCvg" name="Call(At).argument(seq)" incoming="_-LT05452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT01I52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT01Y52EeKPK79J7cDCvg" value="*"/>
              </argument>
              <argument xmi:id="_-LT01o52EeKPK79J7cDCvg" name="Call(At).argument(index)" incoming="_-LT06o52EeKPK79J7cDCvg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT01452EeKPK79J7cDCvg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT02I52EeKPK79J7cDCvg" value="1"/>
              </argument>
              <result xmi:id="_-LT02Y52EeKPK79J7cDCvg" name="Call(At).result()" outgoing="_-LT06452EeKPK79J7cDCvg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT02o52EeKPK79J7cDCvg"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT02452EeKPK79J7cDCvg" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LT03I52EeKPK79J7cDCvg" name="Tuple@6c716300" outgoing="_-LT06Y52EeKPK79J7cDCvg">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_-LT03Y52EeKPK79J7cDCvg" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_-LT03o52EeKPK79J7cDCvg" name="ReadExtent(StandardOutputChannel).result" outgoing="_-LT05452EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT03452EeKPK79J7cDCvg"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT04I52EeKPK79J7cDCvg" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LT04Y52EeKPK79J7cDCvg" name="Value(1)">
                <result xmi:id="_-LT04o52EeKPK79J7cDCvg" name="Value(1).result" outgoing="_-LT06I52EeKPK79J7cDCvg" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LT04452EeKPK79J7cDCvg" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LT05I52EeKPK79J7cDCvg" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_-LT05Y52EeKPK79J7cDCvg" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LT05o52EeKPK79J7cDCvg" name="Fork(Call(At).argument(index))" outgoing="_-LT06o52EeKPK79J7cDCvg" incoming="_-LT06I52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT05452EeKPK79J7cDCvg" source="_-LT03o52EeKPK79J7cDCvg" target="_-LT00452EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT06I52EeKPK79J7cDCvg" source="_-LT04o52EeKPK79J7cDCvg" target="_-LT05o52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LT06Y52EeKPK79J7cDCvg" source="_-LT03I52EeKPK79J7cDCvg" target="_-LT00o52EeKPK79J7cDCvg"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT06o52EeKPK79J7cDCvg" source="_-LT05o52EeKPK79J7cDCvg" target="_-LT01o52EeKPK79J7cDCvg"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LT06452EeKPK79J7cDCvg" source="_-LT02Y52EeKPK79J7cDCvg" target="_-LT00I52EeKPK79J7cDCvg"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LT07I52EeKPK79J7cDCvg" source="_-LT00Y52EeKPK79J7cDCvg" target="_-LT0wI52EeKPK79J7cDCvg"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LT0vI52EeKPK79J7cDCvg" name="Input(value)" outgoing="_-LT0uo52EeKPK79J7cDCvg" parameter="_-LT0t452EeKPK79J7cDCvg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LT0vY52EeKPK79J7cDCvg" name="Fork(value)" outgoing="_-LT0u452EeKPK79J7cDCvg" incoming="_-LT0uo52EeKPK79J7cDCvg"/>
    </packagedElement>
    <profileApplication xmi:id="_-LT07Y52EeKPK79J7cDCvg">
      <eAnnotations xmi:id="_-LT07o52EeKPK79J7cDCvg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_-LWQ8I52EeKPK79J7cDCvg" base_BehavioralFeature="_-LRYvY52EeKPK79J7cDCvg"/>
  <l2:Create xmi:id="_-LYGII52EeKPK79J7cDCvg" base_BehavioralFeature="_-LQKoo52EeKPK79J7cDCvg"/>
  <l2:Create xmi:id="_-LYGIY52EeKPK79J7cDCvg" base_BehavioralFeature="_-LRYuY52EeKPK79J7cDCvg"/>
  <l2:Destroy xmi:id="_-LYGIo52EeKPK79J7cDCvg" base_BehavioralFeature="_-LQxYY52EeKPK79J7cDCvg"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_y56YQJKyEeSxfoZP3kXR8Q" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_y56YQZKyEeSxfoZP3kXR8Q" name="AssertEqual" node="_y56_U5KyEeSxfoZP3kXR8Q _y56_VJKyEeSxfoZP3kXR8Q _y56_VZKyEeSxfoZP3kXR8Q _y56_VpKyEeSxfoZP3kXR8Q _y56_V5KyEeSxfoZP3kXR8Q _y56_WJKyEeSxfoZP3kXR8Q _y56_WZKyEeSxfoZP3kXR8Q" group="_y56_WZKyEeSxfoZP3kXR8Q">
    <packageImport xmi:id="_y56YQpKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_y56YQ5KyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_y56YRJKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_y56YRZKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_y56YRpKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_y56YR5KyEeSxfoZP3kXR8Q" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56YSJKyEeSxfoZP3kXR8Q" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56YSZKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_y56YSpKyEeSxfoZP3kXR8Q" name="value1" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56YS5KyEeSxfoZP3kXR8Q"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56YTJKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_y56YTZKyEeSxfoZP3kXR8Q" name="value2" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56YTpKyEeSxfoZP3kXR8Q"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56YT5KyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YUJKyEeSxfoZP3kXR8Q" target="_y56_VJKyEeSxfoZP3kXR8Q" source="_y56_U5KyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YUZKyEeSxfoZP3kXR8Q" target="_y56_VpKyEeSxfoZP3kXR8Q" source="_y56_VZKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YUpKyEeSxfoZP3kXR8Q" target="_y56_WJKyEeSxfoZP3kXR8Q" source="_y56_V5KyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YU5KyEeSxfoZP3kXR8Q" target="_y56_fpKyEeSxfoZP3kXR8Q" source="_y56_VpKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YVJKyEeSxfoZP3kXR8Q" target="_y56_hpKyEeSxfoZP3kXR8Q" source="_y56_WJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YVZKyEeSxfoZP3kXR8Q" target="_y56_vZKyEeSxfoZP3kXR8Q" source="_y56_VJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56YVpKyEeSxfoZP3kXR8Q" target="_y57mfJKyEeSxfoZP3kXR8Q" source="_y56_WJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_UJKyEeSxfoZP3kXR8Q" target="_y57mmpKyEeSxfoZP3kXR8Q" source="_y56_WJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_UZKyEeSxfoZP3kXR8Q" target="_y57mwJKyEeSxfoZP3kXR8Q" source="_y56_WJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_UpKyEeSxfoZP3kXR8Q" target="_y58NepKyEeSxfoZP3kXR8Q" source="_y56_WJKyEeSxfoZP3kXR8Q"/>
    <structuredNode xmi:id="_y56_WZKyEeSxfoZP3kXR8Q" name="Body(AssertEqual)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_y56_WpKyEeSxfoZP3kXR8Q" name="IfStatement@36f8df68">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_W5KyEeSxfoZP3kXR8Q" target="_y56_dZKyEeSxfoZP3kXR8Q" source="_y56_fpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_XJKyEeSxfoZP3kXR8Q" target="_y56_gJKyEeSxfoZP3kXR8Q" source="_y56_fpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_XZKyEeSxfoZP3kXR8Q" target="_y56_e5KyEeSxfoZP3kXR8Q" source="_y56_hpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_XpKyEeSxfoZP3kXR8Q" target="_y56_iJKyEeSxfoZP3kXR8Q" source="_y56_hpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_X5KyEeSxfoZP3kXR8Q" target="_y56_j5KyEeSxfoZP3kXR8Q" source="_y56_g5KyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_YJKyEeSxfoZP3kXR8Q" target="_y56_kJKyEeSxfoZP3kXR8Q" source="_y56_i5KyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_YZKyEeSxfoZP3kXR8Q" target="_y56_kpKyEeSxfoZP3kXR8Q" source="_y56_j5KyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_YpKyEeSxfoZP3kXR8Q" target="_y56_mZKyEeSxfoZP3kXR8Q" source="_y56_kJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_Y5KyEeSxfoZP3kXR8Q" target="_y56_n5KyEeSxfoZP3kXR8Q" source="_y56_kJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_ZJKyEeSxfoZP3kXR8Q" target="_y56_dJKyEeSxfoZP3kXR8Q" source="_y56_n5KyEeSxfoZP3kXR8Q">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_y56_ZZKyEeSxfoZP3kXR8Q" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_ZpKyEeSxfoZP3kXR8Q" target="_y56_kZKyEeSxfoZP3kXR8Q" source="_y56_n5KyEeSxfoZP3kXR8Q">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_y56_Z5KyEeSxfoZP3kXR8Q" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_aJKyEeSxfoZP3kXR8Q" target="_y56_oJKyEeSxfoZP3kXR8Q" source="_y56_jpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_aZKyEeSxfoZP3kXR8Q" target="_y56_oJKyEeSxfoZP3kXR8Q" source="_y56_j5KyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_apKyEeSxfoZP3kXR8Q" target="_y56_n5KyEeSxfoZP3kXR8Q" source="_y56_oJKyEeSxfoZP3kXR8Q">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_y56_a5KyEeSxfoZP3kXR8Q" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_bJKyEeSxfoZP3kXR8Q" target="_y56_mJKyEeSxfoZP3kXR8Q" source="_y56_oJKyEeSxfoZP3kXR8Q">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_y56_bZKyEeSxfoZP3kXR8Q" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_bpKyEeSxfoZP3kXR8Q" target="_y56_oZKyEeSxfoZP3kXR8Q" source="_y56_eJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_b5KyEeSxfoZP3kXR8Q" target="_y56_oZKyEeSxfoZP3kXR8Q" source="_y56_lZKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_cJKyEeSxfoZP3kXR8Q" target="_y56_oZKyEeSxfoZP3kXR8Q" source="_y56_nJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_cZKyEeSxfoZP3kXR8Q" target="_y56_o5KyEeSxfoZP3kXR8Q" source="_y56_oZKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_cpKyEeSxfoZP3kXR8Q" target="_y57ma5KyEeSxfoZP3kXR8Q" source="_y56_qZKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y56_c5KyEeSxfoZP3kXR8Q" target="_y58NgZKyEeSxfoZP3kXR8Q" source="_y57ma5KyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_y56_dJKyEeSxfoZP3kXR8Q" name="Test(==)" incoming="_y56_ZJKyEeSxfoZP3kXR8Q">
          <first xmi:id="_y56_dZKyEeSxfoZP3kXR8Q" name="Test(==).first" incoming="_y56_W5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_dpKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_d5KyEeSxfoZP3kXR8Q" value="1"/>
          </first>
          <result xmi:id="_y56_eJKyEeSxfoZP3kXR8Q" name="Test(==).result" outgoing="_y56_bpKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_eZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_epKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <second xmi:id="_y56_e5KyEeSxfoZP3kXR8Q" name="Test(==).second" incoming="_y56_XZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_fJKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_fZKyEeSxfoZP3kXR8Q" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_y56_fpKyEeSxfoZP3kXR8Q" name="Fork(Fork(value1))" incoming="_y56YU5KyEeSxfoZP3kXR8Q" outgoing="_y56_W5KyEeSxfoZP3kXR8Q _y56_XJKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_f5KyEeSxfoZP3kXR8Q" name="Call(NotEmpty)">
          <argument xmi:id="_y56_gJKyEeSxfoZP3kXR8Q" name="Call(NotEmpty).argument(seq)" incoming="_y56_XJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_gZKyEeSxfoZP3kXR8Q"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_gpKyEeSxfoZP3kXR8Q" value="*"/>
          </argument>
          <result xmi:id="_y56_g5KyEeSxfoZP3kXR8Q" name="Call(NotEmpty).result()" outgoing="_y56_X5KyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_hJKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_hZKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_y56_hpKyEeSxfoZP3kXR8Q" name="Fork(Fork(value2))" incoming="_y56YVJKyEeSxfoZP3kXR8Q" outgoing="_y56_XZKyEeSxfoZP3kXR8Q _y56_XpKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_h5KyEeSxfoZP3kXR8Q" name="Call(NotEmpty)">
          <argument xmi:id="_y56_iJKyEeSxfoZP3kXR8Q" name="Call(NotEmpty).argument(seq)" incoming="_y56_XpKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_iZKyEeSxfoZP3kXR8Q"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_ipKyEeSxfoZP3kXR8Q" value="*"/>
          </argument>
          <result xmi:id="_y56_i5KyEeSxfoZP3kXR8Q" name="Call(NotEmpty).result()" outgoing="_y56_YJKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_jJKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_jZKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_y56_jpKyEeSxfoZP3kXR8Q" name="Initial(Test(==))" outgoing="_y56_aJKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:ForkNode" xmi:id="_y56_j5KyEeSxfoZP3kXR8Q" name="Fork(Call(NotEmpty).result())" incoming="_y56_X5KyEeSxfoZP3kXR8Q" outgoing="_y56_YZKyEeSxfoZP3kXR8Q _y56_aZKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:ForkNode" xmi:id="_y56_kJKyEeSxfoZP3kXR8Q" name="Fork(Call(NotEmpty).result())" incoming="_y56_YJKyEeSxfoZP3kXR8Q" outgoing="_y56_YpKyEeSxfoZP3kXR8Q _y56_Y5KyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_kZKyEeSxfoZP3kXR8Q" name="Call(Not)" incoming="_y56_ZpKyEeSxfoZP3kXR8Q">
          <argument xmi:id="_y56_kpKyEeSxfoZP3kXR8Q" name="Call(Not).argument(x)" incoming="_y56_YZKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_k5KyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_lJKyEeSxfoZP3kXR8Q" value="1"/>
          </argument>
          <result xmi:id="_y56_lZKyEeSxfoZP3kXR8Q" name="Call(Not).result(result)" outgoing="_y56_b5KyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_lpKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_l5KyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_mJKyEeSxfoZP3kXR8Q" name="Call(Not)" incoming="_y56_bJKyEeSxfoZP3kXR8Q">
          <argument xmi:id="_y56_mZKyEeSxfoZP3kXR8Q" name="Call(Not).argument(x)" incoming="_y56_YpKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_mpKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_m5KyEeSxfoZP3kXR8Q" value="1"/>
          </argument>
          <result xmi:id="_y56_nJKyEeSxfoZP3kXR8Q" name="Call(Not).result(result)" outgoing="_y56_cJKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_nZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_npKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_y56_n5KyEeSxfoZP3kXR8Q" name="Decision(Call(NotEmpty).result())" incoming="_y56_Y5KyEeSxfoZP3kXR8Q _y56_apKyEeSxfoZP3kXR8Q" outgoing="_y56_ZJKyEeSxfoZP3kXR8Q _y56_ZpKyEeSxfoZP3kXR8Q" decisionInputFlow="_y56_Y5KyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_y56_oJKyEeSxfoZP3kXR8Q" name="Decision(Call(NotEmpty).result())" incoming="_y56_aJKyEeSxfoZP3kXR8Q _y56_aZKyEeSxfoZP3kXR8Q" outgoing="_y56_apKyEeSxfoZP3kXR8Q _y56_bJKyEeSxfoZP3kXR8Q" decisionInputFlow="_y56_aZKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:MergeNode" xmi:id="_y56_oZKyEeSxfoZP3kXR8Q" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_y56_bpKyEeSxfoZP3kXR8Q _y56_b5KyEeSxfoZP3kXR8Q _y56_cJKyEeSxfoZP3kXR8Q" outgoing="_y56_cZKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_opKyEeSxfoZP3kXR8Q" name="Call(Not)">
          <argument xmi:id="_y56_o5KyEeSxfoZP3kXR8Q" name="Call(Not).argument(x)" incoming="_y56_cZKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_pJKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_pZKyEeSxfoZP3kXR8Q" value="1"/>
          </argument>
          <result xmi:id="_y56_ppKyEeSxfoZP3kXR8Q" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_p5KyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_qJKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_y56_qZKyEeSxfoZP3kXR8Q" name="ExpressionStatement@6519f72b" outgoing="_y56_cpKyEeSxfoZP3kXR8Q">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_qpKyEeSxfoZP3kXR8Q" target="_y56_rZKyEeSxfoZP3kXR8Q" source="_y57maJKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_y56_q5KyEeSxfoZP3kXR8Q" target="_y56_rJKyEeSxfoZP3kXR8Q" source="_y56_sJKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_rJKyEeSxfoZP3kXR8Q" name="Call(Write)" incoming="_y56_q5KyEeSxfoZP3kXR8Q" behavior="_y58NmJKyEeSxfoZP3kXR8Q">
            <argument xmi:id="_y56_rZKyEeSxfoZP3kXR8Q" name="Call(Write).argument(value)" incoming="_y56_qpKyEeSxfoZP3kXR8Q">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_rpKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_r5KyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_y56_sJKyEeSxfoZP3kXR8Q" name="Tuple@2cc3ce65" outgoing="_y56_q5KyEeSxfoZP3kXR8Q">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_sZKyEeSxfoZP3kXR8Q" target="_y56_upKyEeSxfoZP3kXR8Q" source="_y56_tZKyEeSxfoZP3kXR8Q"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_spKyEeSxfoZP3kXR8Q" target="_y57mYpKyEeSxfoZP3kXR8Q" source="_y56_wJKyEeSxfoZP3kXR8Q"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y56_s5KyEeSxfoZP3kXR8Q" target="_y57mZZKyEeSxfoZP3kXR8Q" source="_y56_xJKyEeSxfoZP3kXR8Q"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y56_tJKyEeSxfoZP3kXR8Q" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_y56_tZKyEeSxfoZP3kXR8Q" name="Value(&quot;FAILED: &quot;).result" outgoing="_y56_sZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_tpKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_t5KyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_y56_uJKyEeSxfoZP3kXR8Q" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_y56_uZKyEeSxfoZP3kXR8Q" name="Call(Concat)">
              <argument xmi:id="_y56_upKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(x)" incoming="_y56_sZKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_u5KyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_vJKyEeSxfoZP3kXR8Q" value="1"/>
              </argument>
              <argument xmi:id="_y56_vZKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(y)" incoming="_y56YVZKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_vpKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_v5KyEeSxfoZP3kXR8Q" value="1"/>
              </argument>
              <result xmi:id="_y56_wJKyEeSxfoZP3kXR8Q" name="Call(Concat).result(result)" outgoing="_y56_spKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_wZKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_wpKyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y56_w5KyEeSxfoZP3kXR8Q" name="Value(&quot;==&quot;)">
              <result xmi:id="_y56_xJKyEeSxfoZP3kXR8Q" name="Value(&quot;==&quot;).result" outgoing="_y56_s5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y56_xZKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y56_xpKyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_y57mYJKyEeSxfoZP3kXR8Q" value="==">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_y57mYZKyEeSxfoZP3kXR8Q" name="Call(Concat)">
              <argument xmi:id="_y57mYpKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(x)" incoming="_y56_spKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mY5KyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mZJKyEeSxfoZP3kXR8Q" value="1"/>
              </argument>
              <argument xmi:id="_y57mZZKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(y)" incoming="_y56_s5KyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mZpKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mZ5KyEeSxfoZP3kXR8Q" value="1"/>
              </argument>
              <result xmi:id="_y57maJKyEeSxfoZP3kXR8Q" name="Call(Concat).result(result)" outgoing="_y56_qpKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57maZKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mapKyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_y57ma5KyEeSxfoZP3kXR8Q" name="ExpressionStatement@493d33f9" incoming="_y56_cpKyEeSxfoZP3kXR8Q" outgoing="_y56_c5KyEeSxfoZP3kXR8Q">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mbJKyEeSxfoZP3kXR8Q" target="_y57mb5KyEeSxfoZP3kXR8Q" source="_y58NgJKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_y57mbZKyEeSxfoZP3kXR8Q" target="_y57mbpKyEeSxfoZP3kXR8Q" source="_y57mcpKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y57mbpKyEeSxfoZP3kXR8Q" name="Call(Write)" incoming="_y57mbZKyEeSxfoZP3kXR8Q" behavior="_y58NmJKyEeSxfoZP3kXR8Q">
            <argument xmi:id="_y57mb5KyEeSxfoZP3kXR8Q" name="Call(Write).argument(value)" incoming="_y57mbJKyEeSxfoZP3kXR8Q">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mcJKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mcZKyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_y57mcpKyEeSxfoZP3kXR8Q" name="Tuple@67a62278" outgoing="_y57mbZKyEeSxfoZP3kXR8Q">
            <edge xmi:type="uml:ControlFlow" xmi:id="_y57mc5KyEeSxfoZP3kXR8Q" target="_y58Nf5KyEeSxfoZP3kXR8Q" source="_y58NfpKyEeSxfoZP3kXR8Q"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mdJKyEeSxfoZP3kXR8Q" target="_y58Nf5KyEeSxfoZP3kXR8Q" source="_y57mf5KyEeSxfoZP3kXR8Q"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_y57mdZKyEeSxfoZP3kXR8Q" target="_y57mgpKyEeSxfoZP3kXR8Q" source="_y58Nf5KyEeSxfoZP3kXR8Q">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_y57mdpKyEeSxfoZP3kXR8Q" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_y57md5KyEeSxfoZP3kXR8Q" target="_y57mjJKyEeSxfoZP3kXR8Q" source="_y58Nf5KyEeSxfoZP3kXR8Q">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_y57meJKyEeSxfoZP3kXR8Q" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y57meZKyEeSxfoZP3kXR8Q" target="_y58NgJKyEeSxfoZP3kXR8Q" source="_y57mhJKyEeSxfoZP3kXR8Q"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mepKyEeSxfoZP3kXR8Q" target="_y58NgJKyEeSxfoZP3kXR8Q" source="_y57mlpKyEeSxfoZP3kXR8Q"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_y57me5KyEeSxfoZP3kXR8Q" name="Call(IsEmpty)">
              <argument xmi:id="_y57mfJKyEeSxfoZP3kXR8Q" name="Call(IsEmpty).argument(seq)" incoming="_y56YVpKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mfZKyEeSxfoZP3kXR8Q"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mfpKyEeSxfoZP3kXR8Q" value="*"/>
              </argument>
              <result xmi:id="_y57mf5KyEeSxfoZP3kXR8Q" name="Call(IsEmpty).result()" outgoing="_y57mdJKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mgJKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mgZKyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_y57mgpKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@331ed8f7.operand2" incoming="_y57mdZKyEeSxfoZP3kXR8Q">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mg5KyEeSxfoZP3kXR8Q" target="_y57mhJKyEeSxfoZP3kXR8Q" source="_y57miJKyEeSxfoZP3kXR8Q"/>
              <structuredNodeOutput xmi:id="_y57mhJKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@331ed8f7.operand2.result" incoming="_y57mg5KyEeSxfoZP3kXR8Q" outgoing="_y57meZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mhZKyEeSxfoZP3kXR8Q"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mhpKyEeSxfoZP3kXR8Q" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y57mh5KyEeSxfoZP3kXR8Q" name="Value(&quot;null&quot;)">
                <result xmi:id="_y57miJKyEeSxfoZP3kXR8Q" name="Value(&quot;null&quot;).result" outgoing="_y57mg5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57miZKyEeSxfoZP3kXR8Q" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mipKyEeSxfoZP3kXR8Q" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_y57mi5KyEeSxfoZP3kXR8Q" value="null">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_y57mjJKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@331ed8f7.operand3" incoming="_y57md5KyEeSxfoZP3kXR8Q">
              <edge xmi:type="uml:ControlFlow" xmi:id="_y57mjZKyEeSxfoZP3kXR8Q" target="_y58NfJKyEeSxfoZP3kXR8Q" source="_y58Ne5KyEeSxfoZP3kXR8Q"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mjpKyEeSxfoZP3kXR8Q" target="_y58NfJKyEeSxfoZP3kXR8Q" source="_y57mnZKyEeSxfoZP3kXR8Q"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_y57mj5KyEeSxfoZP3kXR8Q" target="_y57moJKyEeSxfoZP3kXR8Q" source="_y58NfJKyEeSxfoZP3kXR8Q">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_y57mkJKyEeSxfoZP3kXR8Q" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_y57mkZKyEeSxfoZP3kXR8Q" target="_y58NdZKyEeSxfoZP3kXR8Q" source="_y58NfJKyEeSxfoZP3kXR8Q">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_y57mkpKyEeSxfoZP3kXR8Q" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mk5KyEeSxfoZP3kXR8Q" target="_y58NfZKyEeSxfoZP3kXR8Q" source="_y57mppKyEeSxfoZP3kXR8Q"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mlJKyEeSxfoZP3kXR8Q" target="_y58NfZKyEeSxfoZP3kXR8Q" source="_y58Nd5KyEeSxfoZP3kXR8Q"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mlZKyEeSxfoZP3kXR8Q" target="_y57mlpKyEeSxfoZP3kXR8Q" source="_y58NfZKyEeSxfoZP3kXR8Q"/>
              <structuredNodeOutput xmi:id="_y57mlpKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@331ed8f7.operand3.result" incoming="_y57mlZKyEeSxfoZP3kXR8Q" outgoing="_y57mepKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57ml5KyEeSxfoZP3kXR8Q"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mmJKyEeSxfoZP3kXR8Q" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_y57mmZKyEeSxfoZP3kXR8Q" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_y57mmpKyEeSxfoZP3kXR8Q" name="ReadIsClassifiedObject(String).object" incoming="_y56_UJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mm5KyEeSxfoZP3kXR8Q" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mnJKyEeSxfoZP3kXR8Q" value="1"/>
                </object>
                <result xmi:id="_y57mnZKyEeSxfoZP3kXR8Q" name="ReadIsClassifiedObject(String).result" outgoing="_y57mjpKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mnpKyEeSxfoZP3kXR8Q" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mn5KyEeSxfoZP3kXR8Q" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_y57moJKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@1f6e6125.operand2" incoming="_y57mj5KyEeSxfoZP3kXR8Q">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_y57moZKyEeSxfoZP3kXR8Q" target="_y57mw5KyEeSxfoZP3kXR8Q" source="_y57mqpKyEeSxfoZP3kXR8Q"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mopKyEeSxfoZP3kXR8Q" target="_y57mxpKyEeSxfoZP3kXR8Q" source="_y57mwZKyEeSxfoZP3kXR8Q"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mo5KyEeSxfoZP3kXR8Q" target="_y57m0pKyEeSxfoZP3kXR8Q" source="_y57myZKyEeSxfoZP3kXR8Q"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mpJKyEeSxfoZP3kXR8Q" target="_y57m1ZKyEeSxfoZP3kXR8Q" source="_y57mzZKyEeSxfoZP3kXR8Q"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mpZKyEeSxfoZP3kXR8Q" target="_y57mppKyEeSxfoZP3kXR8Q" source="_y58NcpKyEeSxfoZP3kXR8Q"/>
                <structuredNodeOutput xmi:id="_y57mppKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@1f6e6125.operand2.result" incoming="_y57mpZKyEeSxfoZP3kXR8Q" outgoing="_y57mk5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mp5KyEeSxfoZP3kXR8Q"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mqJKyEeSxfoZP3kXR8Q" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y57mqZKyEeSxfoZP3kXR8Q" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_y57mqpKyEeSxfoZP3kXR8Q" name="Value(&quot;&quot;&quot;).result" outgoing="_y57moZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mq5KyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mrJKyEeSxfoZP3kXR8Q" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_y57mrZKyEeSxfoZP3kXR8Q" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_y57mrpKyEeSxfoZP3kXR8Q" name="CastExpression@68860339" mode="parallel" outputElement="_y57mwZKyEeSxfoZP3kXR8Q" inputElement="_y57mwJKyEeSxfoZP3kXR8Q">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mr5KyEeSxfoZP3kXR8Q" target="_y57muJKyEeSxfoZP3kXR8Q" source="_y57mvpKyEeSxfoZP3kXR8Q"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_y57msJKyEeSxfoZP3kXR8Q" target="_y57mv5KyEeSxfoZP3kXR8Q" source="_y57mvpKyEeSxfoZP3kXR8Q"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_y57msZKyEeSxfoZP3kXR8Q" target="_y57mv5KyEeSxfoZP3kXR8Q" source="_y57mu5KyEeSxfoZP3kXR8Q"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mspKyEeSxfoZP3kXR8Q" target="_y57mtpKyEeSxfoZP3kXR8Q" source="_y57mv5KyEeSxfoZP3kXR8Q">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_y57ms5KyEeSxfoZP3kXR8Q" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mtJKyEeSxfoZP3kXR8Q" target="_y57mvpKyEeSxfoZP3kXR8Q" source="_y57mwJKyEeSxfoZP3kXR8Q"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_y57mtZKyEeSxfoZP3kXR8Q" target="_y57mwZKyEeSxfoZP3kXR8Q" source="_y57mtpKyEeSxfoZP3kXR8Q"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_y57mtpKyEeSxfoZP3kXR8Q" name="Merge(CastExpression@68860339.operand)" incoming="_y57mspKyEeSxfoZP3kXR8Q" outgoing="_y57mtZKyEeSxfoZP3kXR8Q"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_y57mt5KyEeSxfoZP3kXR8Q" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_y57muJKyEeSxfoZP3kXR8Q" name="ReadIsClassifiedObject(String).object" incoming="_y57mr5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57muZKyEeSxfoZP3kXR8Q" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mupKyEeSxfoZP3kXR8Q" value="1"/>
                    </object>
                    <result xmi:id="_y57mu5KyEeSxfoZP3kXR8Q" name="ReadIsClassifiedObject(String).result" outgoing="_y57msZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mvJKyEeSxfoZP3kXR8Q" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mvZKyEeSxfoZP3kXR8Q" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_y57mvpKyEeSxfoZP3kXR8Q" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_y57mtJKyEeSxfoZP3kXR8Q" outgoing="_y57mr5KyEeSxfoZP3kXR8Q _y57msJKyEeSxfoZP3kXR8Q"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_y57mv5KyEeSxfoZP3kXR8Q" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_y57msJKyEeSxfoZP3kXR8Q _y57msZKyEeSxfoZP3kXR8Q" outgoing="_y57mspKyEeSxfoZP3kXR8Q" decisionInputFlow="_y57msZKyEeSxfoZP3kXR8Q"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_y57mwJKyEeSxfoZP3kXR8Q" name="CastExpression@68860339.inputElement" incoming="_y56_UZKyEeSxfoZP3kXR8Q" outgoing="_y57mtJKyEeSxfoZP3kXR8Q" regionAsInput="_y57mrpKyEeSxfoZP3kXR8Q"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_y57mwZKyEeSxfoZP3kXR8Q" name="CastExpression@68860339.outputElement" incoming="_y57mtZKyEeSxfoZP3kXR8Q" outgoing="_y57mopKyEeSxfoZP3kXR8Q" regionAsOutput="_y57mrpKyEeSxfoZP3kXR8Q">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_y57mwpKyEeSxfoZP3kXR8Q" name="Call(Concat)">
                  <argument xmi:id="_y57mw5KyEeSxfoZP3kXR8Q" name="Call(Concat).argument(x)" incoming="_y57moZKyEeSxfoZP3kXR8Q">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mxJKyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mxZKyEeSxfoZP3kXR8Q" value="1"/>
                  </argument>
                  <argument xmi:id="_y57mxpKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(y)" incoming="_y57mopKyEeSxfoZP3kXR8Q">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mx5KyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57myJKyEeSxfoZP3kXR8Q" value="1"/>
                  </argument>
                  <result xmi:id="_y57myZKyEeSxfoZP3kXR8Q" name="Call(Concat).result(result)" outgoing="_y57mo5KyEeSxfoZP3kXR8Q">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mypKyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57my5KyEeSxfoZP3kXR8Q" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y57mzJKyEeSxfoZP3kXR8Q" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_y57mzZKyEeSxfoZP3kXR8Q" name="Value(&quot;&quot;&quot;).result" outgoing="_y57mpJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57mzpKyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57mz5KyEeSxfoZP3kXR8Q" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_y57m0JKyEeSxfoZP3kXR8Q" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_y57m0ZKyEeSxfoZP3kXR8Q" name="Call(Concat)">
                  <argument xmi:id="_y57m0pKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(x)" incoming="_y57mo5KyEeSxfoZP3kXR8Q">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y57m05KyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y57m1JKyEeSxfoZP3kXR8Q" value="1"/>
                  </argument>
                  <argument xmi:id="_y57m1ZKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(y)" incoming="_y57mpJKyEeSxfoZP3kXR8Q">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NcJKyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NcZKyEeSxfoZP3kXR8Q" value="1"/>
                  </argument>
                  <result xmi:id="_y58NcpKyEeSxfoZP3kXR8Q" name="Call(Concat).result(result)" outgoing="_y57mpZKyEeSxfoZP3kXR8Q">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58Nc5KyEeSxfoZP3kXR8Q" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NdJKyEeSxfoZP3kXR8Q" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_y58NdZKyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@1f6e6125.operand3" incoming="_y57mkZKyEeSxfoZP3kXR8Q">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NdpKyEeSxfoZP3kXR8Q" target="_y58Nd5KyEeSxfoZP3kXR8Q" source="_y58NepKyEeSxfoZP3kXR8Q"/>
                <structuredNodeOutput xmi:id="_y58Nd5KyEeSxfoZP3kXR8Q" name="ConditionalTestExpression@1f6e6125.operand3.result" incoming="_y58NdpKyEeSxfoZP3kXR8Q" outgoing="_y57mlJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NeJKyEeSxfoZP3kXR8Q"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NeZKyEeSxfoZP3kXR8Q" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_y58NepKyEeSxfoZP3kXR8Q" name="Merge(Fork(value2))" incoming="_y56_UpKyEeSxfoZP3kXR8Q" outgoing="_y58NdpKyEeSxfoZP3kXR8Q"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_y58Ne5KyEeSxfoZP3kXR8Q" name="Initial(ConditionalTestExpression@1f6e6125)" outgoing="_y57mjZKyEeSxfoZP3kXR8Q"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_y58NfJKyEeSxfoZP3kXR8Q" name="Decision(ConditionalTestExpression@1f6e6125)" incoming="_y57mjZKyEeSxfoZP3kXR8Q _y57mjpKyEeSxfoZP3kXR8Q" outgoing="_y57mj5KyEeSxfoZP3kXR8Q _y57mkZKyEeSxfoZP3kXR8Q" decisionInputFlow="_y57mjpKyEeSxfoZP3kXR8Q"/>
              <node xmi:type="uml:MergeNode" xmi:id="_y58NfZKyEeSxfoZP3kXR8Q" name="Merge(ConditionalTestExpression@1f6e6125.result)" incoming="_y57mk5KyEeSxfoZP3kXR8Q _y57mlJKyEeSxfoZP3kXR8Q" outgoing="_y57mlZKyEeSxfoZP3kXR8Q"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_y58NfpKyEeSxfoZP3kXR8Q" name="Initial(ConditionalTestExpression@331ed8f7)" outgoing="_y57mc5KyEeSxfoZP3kXR8Q"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_y58Nf5KyEeSxfoZP3kXR8Q" name="Decision(ConditionalTestExpression@331ed8f7)" incoming="_y57mc5KyEeSxfoZP3kXR8Q _y57mdJKyEeSxfoZP3kXR8Q" outgoing="_y57mdZKyEeSxfoZP3kXR8Q _y57md5KyEeSxfoZP3kXR8Q" decisionInputFlow="_y57mdJKyEeSxfoZP3kXR8Q"/>
            <node xmi:type="uml:MergeNode" xmi:id="_y58NgJKyEeSxfoZP3kXR8Q" name="Merge(ConditionalTestExpression@331ed8f7.result)" incoming="_y57meZKyEeSxfoZP3kXR8Q _y57mepKyEeSxfoZP3kXR8Q" outgoing="_y57mbJKyEeSxfoZP3kXR8Q"/>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_y58NgZKyEeSxfoZP3kXR8Q" name="ExpressionStatement@297a7a29" incoming="_y56_c5KyEeSxfoZP3kXR8Q">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NgpKyEeSxfoZP3kXR8Q" target="_y58NhZKyEeSxfoZP3kXR8Q" source="_y58NjZKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_y58Ng5KyEeSxfoZP3kXR8Q" target="_y58NhJKyEeSxfoZP3kXR8Q" source="_y58Ni5KyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y58NhJKyEeSxfoZP3kXR8Q" name="Call(WriteLine)" incoming="_y58Ng5KyEeSxfoZP3kXR8Q">
            <argument xmi:id="_y58NhZKyEeSxfoZP3kXR8Q" name="Call(WriteLine).argument(value)" incoming="_y58NgpKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NhpKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58Nh5KyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
            <result xmi:id="_y58NiJKyEeSxfoZP3kXR8Q" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NiZKyEeSxfoZP3kXR8Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NipKyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_y58Ni5KyEeSxfoZP3kXR8Q" name="Tuple@41af159b" outgoing="_y58Ng5KyEeSxfoZP3kXR8Q">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y58NjJKyEeSxfoZP3kXR8Q" name="Value(&quot;&quot;)">
              <result xmi:id="_y58NjZKyEeSxfoZP3kXR8Q" name="Value(&quot;&quot;).result" outgoing="_y58NgpKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NjpKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58Nj5KyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_y58NkJKyEeSxfoZP3kXR8Q" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y58NkZKyEeSxfoZP3kXR8Q" name="Value(true)">
          <result xmi:id="_y58NkpKyEeSxfoZP3kXR8Q" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58Nk5KyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NlJKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_y58NlZKyEeSxfoZP3kXR8Q" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_y58NlpKyEeSxfoZP3kXR8Q" body="_y56_qZKyEeSxfoZP3kXR8Q _y57ma5KyEeSxfoZP3kXR8Q _y58NgZKyEeSxfoZP3kXR8Q" decider="_y56_ppKyEeSxfoZP3kXR8Q" successorClause="_y58Nl5KyEeSxfoZP3kXR8Q" test="_y56_dJKyEeSxfoZP3kXR8Q _y56_f5KyEeSxfoZP3kXR8Q _y56_h5KyEeSxfoZP3kXR8Q _y56_kZKyEeSxfoZP3kXR8Q _y56_mJKyEeSxfoZP3kXR8Q _y56_opKyEeSxfoZP3kXR8Q"/>
        <clause xmi:id="_y58Nl5KyEeSxfoZP3kXR8Q" decider="_y58NkpKyEeSxfoZP3kXR8Q" predecessorClause="_y58NlpKyEeSxfoZP3kXR8Q" test="_y58NkZKyEeSxfoZP3kXR8Q"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y56_U5KyEeSxfoZP3kXR8Q" name="Input(label)" outgoing="_y56YUJKyEeSxfoZP3kXR8Q" parameter="_y56YR5KyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y56_VJKyEeSxfoZP3kXR8Q" name="Fork(label)" incoming="_y56YUJKyEeSxfoZP3kXR8Q" outgoing="_y56YVZKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y56_VZKyEeSxfoZP3kXR8Q" name="Input(value1)" outgoing="_y56YUZKyEeSxfoZP3kXR8Q" parameter="_y56YSpKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y56_VpKyEeSxfoZP3kXR8Q" name="Fork(value1)" incoming="_y56YUZKyEeSxfoZP3kXR8Q" outgoing="_y56YU5KyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y56_V5KyEeSxfoZP3kXR8Q" name="Input(value2)" outgoing="_y56YUpKyEeSxfoZP3kXR8Q" parameter="_y56YTZKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y56_WJKyEeSxfoZP3kXR8Q" name="Fork(value2)" incoming="_y56YUpKyEeSxfoZP3kXR8Q" outgoing="_y56YVJKyEeSxfoZP3kXR8Q _y56YVpKyEeSxfoZP3kXR8Q _y56_UJKyEeSxfoZP3kXR8Q _y56_UZKyEeSxfoZP3kXR8Q _y56_UpKyEeSxfoZP3kXR8Q"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_y58NmJKyEeSxfoZP3kXR8Q" name="Write" node="_y58No5KyEeSxfoZP3kXR8Q _y58NpJKyEeSxfoZP3kXR8Q _y58NpZKyEeSxfoZP3kXR8Q" group="_y58NpZKyEeSxfoZP3kXR8Q">
    <packageImport xmi:id="_y58NmZKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_y58NmpKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_y58Nm5KyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_y58NnJKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_y58NnZKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_y58NnpKyEeSxfoZP3kXR8Q" name="value" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58Nn5KyEeSxfoZP3kXR8Q" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NoJKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NoZKyEeSxfoZP3kXR8Q" target="_y58NpJKyEeSxfoZP3kXR8Q" source="_y58No5KyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NopKyEeSxfoZP3kXR8Q" target="_y58NrJKyEeSxfoZP3kXR8Q" source="_y58NpJKyEeSxfoZP3kXR8Q"/>
    <structuredNode xmi:id="_y58NpZKyEeSxfoZP3kXR8Q" name="Body(Write)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_y58NppKyEeSxfoZP3kXR8Q" name="ExpressionStatement@12346a3c">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y58Np5KyEeSxfoZP3kXR8Q" target="_y58NuZKyEeSxfoZP3kXR8Q" source="_y58NxpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y58NqJKyEeSxfoZP3kXR8Q" target="_y58NqZKyEeSxfoZP3kXR8Q" source="_y58NupKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:ExpansionRegion" xmi:id="_y58NqZKyEeSxfoZP3kXR8Q" name="Collect(Call(write))" incoming="_y58NqJKyEeSxfoZP3kXR8Q" mode="parallel" inputElement="_y58NuZKyEeSxfoZP3kXR8Q">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NqpKyEeSxfoZP3kXR8Q" target="_y58NsJKyEeSxfoZP3kXR8Q" source="_y58NrJKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y58Nq5KyEeSxfoZP3kXR8Q" target="_y58NtpKyEeSxfoZP3kXR8Q" source="_y58NuZKyEeSxfoZP3kXR8Q"/>
          <structuredNodeInput xmi:id="_y58NrJKyEeSxfoZP3kXR8Q" name="Collect(Call(write)).input(Fork(value))" incoming="_y58NopKyEeSxfoZP3kXR8Q" outgoing="_y58NqpKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NrZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NrpKyEeSxfoZP3kXR8Q" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:CallOperationAction" xmi:id="_y58Nr5KyEeSxfoZP3kXR8Q" name="Call(write)">
            <argument xmi:id="_y58NsJKyEeSxfoZP3kXR8Q" name="Call(write).argument(value)" incoming="_y58NqpKyEeSxfoZP3kXR8Q">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NsZKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NspKyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
            <result xmi:id="_y58Ns5KyEeSxfoZP3kXR8Q" name="Call(write).result(errorStatus)">
              <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NtJKyEeSxfoZP3kXR8Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NtZKyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
            <target xmi:id="_y58NtpKyEeSxfoZP3kXR8Q" name="Call(write).target" incoming="_y58Nq5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58Nt5KyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NuJKyEeSxfoZP3kXR8Q" value="1"/>
            </target>
          </node>
        </node>
        <node xmi:type="uml:ExpansionNode" xmi:id="_y58NuZKyEeSxfoZP3kXR8Q" name="Collect(Call(write)).inputElement" incoming="_y58Np5KyEeSxfoZP3kXR8Q" outgoing="_y58Nq5KyEeSxfoZP3kXR8Q" regionAsInput="_y58NqZKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_y58NupKyEeSxfoZP3kXR8Q" name="Feature(Call(At).result())" outgoing="_y58NqJKyEeSxfoZP3kXR8Q">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y58Nu5KyEeSxfoZP3kXR8Q" target="_y58NwJKyEeSxfoZP3kXR8Q" source="_y58Ny5KyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NvJKyEeSxfoZP3kXR8Q" target="_y580gJKyEeSxfoZP3kXR8Q" source="_y58Nz5KyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_y58NvZKyEeSxfoZP3kXR8Q" target="_y58Nv5KyEeSxfoZP3kXR8Q" source="_y58NyZKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y58NvpKyEeSxfoZP3kXR8Q" target="_y58Nw5KyEeSxfoZP3kXR8Q" source="_y580gJKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y58Nv5KyEeSxfoZP3kXR8Q" name="Call(At)" incoming="_y58NvZKyEeSxfoZP3kXR8Q">
            <argument xmi:id="_y58NwJKyEeSxfoZP3kXR8Q" name="Call(At).argument(seq)" incoming="_y58Nu5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NwZKyEeSxfoZP3kXR8Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NwpKyEeSxfoZP3kXR8Q" value="*"/>
            </argument>
            <argument xmi:id="_y58Nw5KyEeSxfoZP3kXR8Q" name="Call(At).argument(index)" incoming="_y58NvpKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NxJKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NxZKyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
            <result xmi:id="_y58NxpKyEeSxfoZP3kXR8Q" name="Call(At).result()" outgoing="_y58Np5KyEeSxfoZP3kXR8Q">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58Nx5KyEeSxfoZP3kXR8Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NyJKyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_y58NyZKyEeSxfoZP3kXR8Q" name="Tuple@3697db9a" outgoing="_y58NvZKyEeSxfoZP3kXR8Q">
            <node xmi:type="uml:ReadExtentAction" xmi:id="_y58NypKyEeSxfoZP3kXR8Q" name="ReadExtent(StandardOutputChannel)">
              <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
              <result xmi:id="_y58Ny5KyEeSxfoZP3kXR8Q" name="ReadExtent(StandardOutputChannel).result" outgoing="_y58Nu5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58NzJKyEeSxfoZP3kXR8Q"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58NzZKyEeSxfoZP3kXR8Q" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y58NzpKyEeSxfoZP3kXR8Q" name="Value(1)">
              <result xmi:id="_y58Nz5KyEeSxfoZP3kXR8Q" name="Value(1).result" outgoing="_y58NvJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y58N0JKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y58N0ZKyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_y58N0pKyEeSxfoZP3kXR8Q" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_y580gJKyEeSxfoZP3kXR8Q" name="Fork(Call(At).argument(index))" incoming="_y58NvJKyEeSxfoZP3kXR8Q" outgoing="_y58NvpKyEeSxfoZP3kXR8Q"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y58No5KyEeSxfoZP3kXR8Q" name="Input(value)" outgoing="_y58NoZKyEeSxfoZP3kXR8Q" parameter="_y58NnpKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y58NpJKyEeSxfoZP3kXR8Q" name="Fork(value)" incoming="_y58NoZKyEeSxfoZP3kXR8Q" outgoing="_y58NopKyEeSxfoZP3kXR8Q"/>
  </packagedElement>
  <profileApplication xmi:id="_y580gZKyEeSxfoZP3kXR8Q">
    <eAnnotations xmi:id="_y580gpKyEeSxfoZP3kXR8Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_RCaN8CcoEeSLVrU2ifxtpw" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_RCaN8ScoEeSLVrU2ifxtpw" name="AssertEqual" node="_RCa1CScoEeSLVrU2ifxtpw _RCa1CicoEeSLVrU2ifxtpw _RCa1CycoEeSLVrU2ifxtpw _RCa1DCcoEeSLVrU2ifxtpw _RCa1DScoEeSLVrU2ifxtpw _RCa1DicoEeSLVrU2ifxtpw _RCa1DycoEeSLVrU2ifxtpw" group="_RCa1DycoEeSLVrU2ifxtpw">
    <packageImport xmi:id="_RCaN8icoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_RCaN8ycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_RCaN9CcoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_RCaN9ScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_RCaN9icoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_RCaN9ycoEeSLVrU2ifxtpw" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCaN-CcoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCaN-ScoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RCaN-icoEeSLVrU2ifxtpw" name="value1" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCaN-ycoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCaN_CcoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RCaN_ScoEeSLVrU2ifxtpw" name="value2" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCaN_icoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCaN_ycoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCaOACcoEeSLVrU2ifxtpw" target="_RCa1CicoEeSLVrU2ifxtpw" source="_RCa1CScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1ACcoEeSLVrU2ifxtpw" target="_RCa1DCcoEeSLVrU2ifxtpw" source="_RCa1CycoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1AScoEeSLVrU2ifxtpw" target="_RCa1DicoEeSLVrU2ifxtpw" source="_RCa1DScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1AicoEeSLVrU2ifxtpw" target="_RCa1NCcoEeSLVrU2ifxtpw" source="_RCa1DCcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1AycoEeSLVrU2ifxtpw" target="_RCa1PCcoEeSLVrU2ifxtpw" source="_RCa1DicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1BCcoEeSLVrU2ifxtpw" target="_RCbcQCcoEeSLVrU2ifxtpw" source="_RCa1CicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1BScoEeSLVrU2ifxtpw" target="_RCcDLScoEeSLVrU2ifxtpw" source="_RCa1DicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1BicoEeSLVrU2ifxtpw" target="_RCcDSycoEeSLVrU2ifxtpw" source="_RCa1DicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1BycoEeSLVrU2ifxtpw" target="_RCcqOycoEeSLVrU2ifxtpw" source="_RCa1DicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1CCcoEeSLVrU2ifxtpw" target="_RCcqWycoEeSLVrU2ifxtpw" source="_RCa1DicoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RCa1DycoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_RCa1ECcoEeSLVrU2ifxtpw" name="IfStatement@27a82c58">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1EScoEeSLVrU2ifxtpw" target="_RCa1KycoEeSLVrU2ifxtpw" source="_RCa1NCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1EicoEeSLVrU2ifxtpw" target="_RCa1NicoEeSLVrU2ifxtpw" source="_RCa1NCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1EycoEeSLVrU2ifxtpw" target="_RCa1MScoEeSLVrU2ifxtpw" source="_RCa1PCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1FCcoEeSLVrU2ifxtpw" target="_RCa1PicoEeSLVrU2ifxtpw" source="_RCa1PCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1FScoEeSLVrU2ifxtpw" target="_RCbcEicoEeSLVrU2ifxtpw" source="_RCa1OScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1FicoEeSLVrU2ifxtpw" target="_RCbcEycoEeSLVrU2ifxtpw" source="_RCa1QScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1FycoEeSLVrU2ifxtpw" target="_RCbcFScoEeSLVrU2ifxtpw" source="_RCbcEicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1GCcoEeSLVrU2ifxtpw" target="_RCbcHCcoEeSLVrU2ifxtpw" source="_RCbcEycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1GScoEeSLVrU2ifxtpw" target="_RCbcIicoEeSLVrU2ifxtpw" source="_RCbcEycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1GicoEeSLVrU2ifxtpw" target="_RCa1KicoEeSLVrU2ifxtpw" source="_RCbcIicoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCa1GycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1HCcoEeSLVrU2ifxtpw" target="_RCbcFCcoEeSLVrU2ifxtpw" source="_RCbcIicoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCa1HScoEeSLVrU2ifxtpw" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1HicoEeSLVrU2ifxtpw" target="_RCbcIycoEeSLVrU2ifxtpw" source="_RCbcEScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1HycoEeSLVrU2ifxtpw" target="_RCbcIycoEeSLVrU2ifxtpw" source="_RCbcEicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1ICcoEeSLVrU2ifxtpw" target="_RCbcIicoEeSLVrU2ifxtpw" source="_RCbcIycoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCa1IScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1IicoEeSLVrU2ifxtpw" target="_RCbcGycoEeSLVrU2ifxtpw" source="_RCbcIycoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCa1IycoEeSLVrU2ifxtpw" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1JCcoEeSLVrU2ifxtpw" target="_RCbcJCcoEeSLVrU2ifxtpw" source="_RCa1LicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1JScoEeSLVrU2ifxtpw" target="_RCbcJCcoEeSLVrU2ifxtpw" source="_RCbcGCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1JicoEeSLVrU2ifxtpw" target="_RCbcJCcoEeSLVrU2ifxtpw" source="_RCbcHycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCa1JycoEeSLVrU2ifxtpw" target="_RCbcJicoEeSLVrU2ifxtpw" source="_RCbcJCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1KCcoEeSLVrU2ifxtpw" target="_RCbcVScoEeSLVrU2ifxtpw" source="_RCbcLCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCa1KScoEeSLVrU2ifxtpw" target="_RCcqYicoEeSLVrU2ifxtpw" source="_RCbcVScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_RCa1KicoEeSLVrU2ifxtpw" name="Test(==)" incoming="_RCa1GicoEeSLVrU2ifxtpw">
          <first xmi:id="_RCa1KycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RCa1EScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1LCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCa1LScoEeSLVrU2ifxtpw" value="1"/>
          </first>
          <result xmi:id="_RCa1LicoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RCa1JCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1LycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCa1MCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <second xmi:id="_RCa1MScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RCa1EycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1MicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCa1MycoEeSLVrU2ifxtpw" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_RCa1NCcoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_RCa1AicoEeSLVrU2ifxtpw" outgoing="_RCa1EScoEeSLVrU2ifxtpw _RCa1EicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCa1NScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
          <argument xmi:id="_RCa1NicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RCa1EicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1NycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCa1OCcoEeSLVrU2ifxtpw" value="*"/>
          </argument>
          <result xmi:id="_RCa1OScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RCa1FScoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1OicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCa1OycoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_RCa1PCcoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_RCa1AycoEeSLVrU2ifxtpw" outgoing="_RCa1EycoEeSLVrU2ifxtpw _RCa1FCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCa1PScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
          <argument xmi:id="_RCa1PicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RCa1FCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1PycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCa1QCcoEeSLVrU2ifxtpw" value="*"/>
          </argument>
          <result xmi:id="_RCa1QScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RCa1FicoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCa1QicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcECcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_RCbcEScoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_RCa1HicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_RCbcEicoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RCa1FScoEeSLVrU2ifxtpw" outgoing="_RCa1FycoEeSLVrU2ifxtpw _RCa1HycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_RCbcEycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RCa1FicoEeSLVrU2ifxtpw" outgoing="_RCa1GCcoEeSLVrU2ifxtpw _RCa1GScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcFCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RCa1HCcoEeSLVrU2ifxtpw">
          <argument xmi:id="_RCbcFScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RCa1FycoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcFicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcFycoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RCbcGCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RCa1JScoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcGScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcGicoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcGycoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RCa1IicoEeSLVrU2ifxtpw">
          <argument xmi:id="_RCbcHCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RCa1GCcoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcHScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcHicoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RCbcHycoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RCa1JicoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcICcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcIScoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_RCbcIicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RCa1GScoEeSLVrU2ifxtpw _RCa1ICcoEeSLVrU2ifxtpw" outgoing="_RCa1GicoEeSLVrU2ifxtpw _RCa1HCcoEeSLVrU2ifxtpw" decisionInputFlow="_RCa1GScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_RCbcIycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RCa1HicoEeSLVrU2ifxtpw _RCa1HycoEeSLVrU2ifxtpw" outgoing="_RCa1ICcoEeSLVrU2ifxtpw _RCa1IicoEeSLVrU2ifxtpw" decisionInputFlow="_RCa1HycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:MergeNode" xmi:id="_RCbcJCcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RCa1JCcoEeSLVrU2ifxtpw _RCa1JScoEeSLVrU2ifxtpw _RCa1JicoEeSLVrU2ifxtpw" outgoing="_RCa1JycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcJScoEeSLVrU2ifxtpw" name="Call(Not)">
          <argument xmi:id="_RCbcJicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RCa1JycoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcJycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcKCcoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RCbcKScoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcKicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcKycoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCbcLCcoEeSLVrU2ifxtpw" name="ExpressionStatement@f0514d7" outgoing="_RCa1KCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCbcLScoEeSLVrU2ifxtpw" target="_RCbcMCcoEeSLVrU2ifxtpw" source="_RCbcUicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RCbcLicoEeSLVrU2ifxtpw" target="_RCbcLycoEeSLVrU2ifxtpw" source="_RCbcMycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcLycoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RCbcLicoEeSLVrU2ifxtpw" behavior="_RCdRQCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_RCbcMCcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RCbcLScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcMScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcMicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCbcMycoEeSLVrU2ifxtpw" name="Tuple@6e33766f" outgoing="_RCbcLicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RCbcNCcoEeSLVrU2ifxtpw" target="_RCbcPScoEeSLVrU2ifxtpw" source="_RCbcOCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RCbcNScoEeSLVrU2ifxtpw" target="_RCbcTCcoEeSLVrU2ifxtpw" source="_RCbcQycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RCbcNicoEeSLVrU2ifxtpw" target="_RCbcTycoEeSLVrU2ifxtpw" source="_RCbcRycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCbcNycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_RCbcOCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RCbcNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcOScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcOicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RCbcOycoEeSLVrU2ifxtpw" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcPCcoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RCbcPScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RCbcNCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcPycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RCbcQCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RCa1BCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcQScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcQicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RCbcQycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RCbcNScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcRCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcRScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCbcRicoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
              <result xmi:id="_RCbcRycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_RCbcNicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcSCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcSScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RCbcSicoEeSLVrU2ifxtpw" value="==">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcSycoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RCbcTCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RCbcNScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcTicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RCbcTycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RCbcNicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcUScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RCbcUicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RCbcLScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCbcUycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCbcVCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCbcVScoEeSLVrU2ifxtpw" name="ExpressionStatement@3cfa4fca" incoming="_RCa1KCcoEeSLVrU2ifxtpw" outgoing="_RCa1KScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCbcVicoEeSLVrU2ifxtpw" target="_RCcDICcoEeSLVrU2ifxtpw" source="_RCcqYScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RCbcVycoEeSLVrU2ifxtpw" target="_RCbcWCcoEeSLVrU2ifxtpw" source="_RCcDIycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCbcWCcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RCbcVycoEeSLVrU2ifxtpw" behavior="_RCdRQCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_RCcDICcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RCbcVicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDIScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDIicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcDIycoEeSLVrU2ifxtpw" name="Tuple@79a75fff" outgoing="_RCbcVycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RCcDJCcoEeSLVrU2ifxtpw" target="_RCcqYCcoEeSLVrU2ifxtpw" source="_RCcqXycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDJScoEeSLVrU2ifxtpw" target="_RCcqYCcoEeSLVrU2ifxtpw" source="_RCcDMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RCcDJicoEeSLVrU2ifxtpw" target="_RCcDMycoEeSLVrU2ifxtpw" source="_RCcqYCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCcDJycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RCcDKCcoEeSLVrU2ifxtpw" target="_RCcDPScoEeSLVrU2ifxtpw" source="_RCcqYCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCcDKScoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDKicoEeSLVrU2ifxtpw" target="_RCcqYScoEeSLVrU2ifxtpw" source="_RCcDNScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDKycoEeSLVrU2ifxtpw" target="_RCcqYScoEeSLVrU2ifxtpw" source="_RCcDRycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCcDLCcoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
              <argument xmi:id="_RCcDLScoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_RCa1BScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDLicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDLycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RCcDMCcoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_RCcDJScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDMScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDMicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcDMycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@144d91c5.operand2" incoming="_RCcDJicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDNCcoEeSLVrU2ifxtpw" target="_RCcDNScoEeSLVrU2ifxtpw" source="_RCcDOScoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_RCcDNScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@144d91c5.operand2.result" incoming="_RCcDNCcoEeSLVrU2ifxtpw" outgoing="_RCcDKicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDNicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDNycoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCcDOCcoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                <result xmi:id="_RCcDOScoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_RCcDNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDOicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDOycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RCcDPCcoEeSLVrU2ifxtpw" value="null">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcDPScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@144d91c5.operand3" incoming="_RCcDKCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RCcDPicoEeSLVrU2ifxtpw" target="_RCcqXScoEeSLVrU2ifxtpw" source="_RCcqXCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDPycoEeSLVrU2ifxtpw" target="_RCcqXScoEeSLVrU2ifxtpw" source="_RCcDTicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RCcDQCcoEeSLVrU2ifxtpw" target="_RCcDUScoEeSLVrU2ifxtpw" source="_RCcqXScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCcDQScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RCcDQicoEeSLVrU2ifxtpw" target="_RCcqVicoEeSLVrU2ifxtpw" source="_RCcqXScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCcDQycoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDRCcoEeSLVrU2ifxtpw" target="_RCcqXicoEeSLVrU2ifxtpw" source="_RCcDVycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDRScoEeSLVrU2ifxtpw" target="_RCcqXicoEeSLVrU2ifxtpw" source="_RCcqWCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDRicoEeSLVrU2ifxtpw" target="_RCcDRycoEeSLVrU2ifxtpw" source="_RCcqXicoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_RCcDRycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@144d91c5.operand3.result" incoming="_RCcDRicoEeSLVrU2ifxtpw" outgoing="_RCcDKycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDSCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDSScoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RCcDSicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_RCcDSycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RCa1BicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDTCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDTScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RCcDTicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RCcDPycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDTycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDUCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcDUScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@446d0fff.operand2" incoming="_RCcDQCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDUicoEeSLVrU2ifxtpw" target="_RCcqPicoEeSLVrU2ifxtpw" source="_RCcDWycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDUycoEeSLVrU2ifxtpw" target="_RCcqQScoEeSLVrU2ifxtpw" source="_RCcqPCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDVCcoEeSLVrU2ifxtpw" target="_RCcqTScoEeSLVrU2ifxtpw" source="_RCcqRCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDVScoEeSLVrU2ifxtpw" target="_RCcqUCcoEeSLVrU2ifxtpw" source="_RCcqSCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDVicoEeSLVrU2ifxtpw" target="_RCcDVycoEeSLVrU2ifxtpw" source="_RCcqUycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RCcDVycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@446d0fff.operand2.result" incoming="_RCcDVicoEeSLVrU2ifxtpw" outgoing="_RCcDRCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDWCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDWScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCcDWicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_RCcDWycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RCcDUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcDXCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcDXScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RCcDXicoEeSLVrU2ifxtpw" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_RCcDXycoEeSLVrU2ifxtpw" name="CastExpression@702b0ad6" mode="parallel" outputElement="_RCcqPCcoEeSLVrU2ifxtpw" inputElement="_RCcqOycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDYCcoEeSLVrU2ifxtpw" target="_RCcqMycoEeSLVrU2ifxtpw" source="_RCcqOScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDYScoEeSLVrU2ifxtpw" target="_RCcqOicoEeSLVrU2ifxtpw" source="_RCcqOScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDYicoEeSLVrU2ifxtpw" target="_RCcqOicoEeSLVrU2ifxtpw" source="_RCcqNicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDYycoEeSLVrU2ifxtpw" target="_RCcqMScoEeSLVrU2ifxtpw" source="_RCcqOicoEeSLVrU2ifxtpw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_RCcDZCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcDZScoEeSLVrU2ifxtpw" target="_RCcqOScoEeSLVrU2ifxtpw" source="_RCcqOycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcqMCcoEeSLVrU2ifxtpw" target="_RCcqPCcoEeSLVrU2ifxtpw" source="_RCcqMScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_RCcqMScoEeSLVrU2ifxtpw" name="Merge(CastExpression@702b0ad6.operand)" incoming="_RCcDYycoEeSLVrU2ifxtpw" outgoing="_RCcqMCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RCcqMicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_RCcqMycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RCcDYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqNCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqNScoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_RCcqNicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RCcDYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqNycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqOCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RCcqOScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RCcDZScoEeSLVrU2ifxtpw" outgoing="_RCcDYCcoEeSLVrU2ifxtpw _RCcDYScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_RCcqOicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RCcDYScoEeSLVrU2ifxtpw _RCcDYicoEeSLVrU2ifxtpw" outgoing="_RCcDYycoEeSLVrU2ifxtpw" decisionInputFlow="_RCcDYicoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RCcqOycoEeSLVrU2ifxtpw" name="CastExpression@702b0ad6.inputElement" incoming="_RCa1BycoEeSLVrU2ifxtpw" outgoing="_RCcDZScoEeSLVrU2ifxtpw" regionAsInput="_RCcDXycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RCcqPCcoEeSLVrU2ifxtpw" name="CastExpression@702b0ad6.outputElement" incoming="_RCcqMCcoEeSLVrU2ifxtpw" outgoing="_RCcDUycoEeSLVrU2ifxtpw" regionAsOutput="_RCcDXycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCcqPScoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RCcqPicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RCcDUicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqPycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqQCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RCcqQScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RCcDUycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqQicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqQycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RCcqRCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RCcDVCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqRScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqRicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCcqRycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_RCcqSCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RCcDVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqSScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqSicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RCcqSycoEeSLVrU2ifxtpw" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCcqTCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RCcqTScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RCcDVCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqTicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqTycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RCcqUCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RCcDVScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqUScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqUicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RCcqUycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RCcDVicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqVCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqVScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcqVicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@446d0fff.operand3" incoming="_RCcDQicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcqVycoEeSLVrU2ifxtpw" target="_RCcqWCcoEeSLVrU2ifxtpw" source="_RCcqWycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RCcqWCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@446d0fff.operand3.result" incoming="_RCcqVycoEeSLVrU2ifxtpw" outgoing="_RCcDRScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqWScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqWicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_RCcqWycoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_RCa1CCcoEeSLVrU2ifxtpw" outgoing="_RCcqVycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RCcqXCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@446d0fff)" outgoing="_RCcDPicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RCcqXScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@446d0fff)" incoming="_RCcDPicoEeSLVrU2ifxtpw _RCcDPycoEeSLVrU2ifxtpw" outgoing="_RCcDQCcoEeSLVrU2ifxtpw _RCcDQicoEeSLVrU2ifxtpw" decisionInputFlow="_RCcDPycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RCcqXicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@446d0fff.result)" incoming="_RCcDRCcoEeSLVrU2ifxtpw _RCcDRScoEeSLVrU2ifxtpw" outgoing="_RCcDRicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RCcqXycoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@144d91c5)" outgoing="_RCcDJCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RCcqYCcoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@144d91c5)" incoming="_RCcDJCcoEeSLVrU2ifxtpw _RCcDJScoEeSLVrU2ifxtpw" outgoing="_RCcDJicoEeSLVrU2ifxtpw _RCcDKCcoEeSLVrU2ifxtpw" decisionInputFlow="_RCcDJScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RCcqYScoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@144d91c5.result)" incoming="_RCcDKicoEeSLVrU2ifxtpw _RCcDKycoEeSLVrU2ifxtpw" outgoing="_RCbcVicoEeSLVrU2ifxtpw"/>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcqYicoEeSLVrU2ifxtpw" name="ExpressionStatement@faf0f92" incoming="_RCa1KScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCcqYycoEeSLVrU2ifxtpw" target="_RCcqZicoEeSLVrU2ifxtpw" source="_RCcqbicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RCcqZCcoEeSLVrU2ifxtpw" target="_RCcqZScoEeSLVrU2ifxtpw" source="_RCcqbCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCcqZScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RCcqZCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_RCcqZicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RCcqYycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqZycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqaCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RCcqaScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqaicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqaycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCcqbCcoEeSLVrU2ifxtpw" name="Tuple@fbfb76f" outgoing="_RCcqZCcoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCcqbScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
              <result xmi:id="_RCcqbicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_RCcqYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqbycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqcCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RCcqcScoEeSLVrU2ifxtpw" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCcqcicoEeSLVrU2ifxtpw" name="Value(true)">
          <result xmi:id="_RCcqcycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCcqdCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCcqdScoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_RCcqdicoEeSLVrU2ifxtpw" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_RCcqdycoEeSLVrU2ifxtpw" body="_RCbcLCcoEeSLVrU2ifxtpw _RCbcVScoEeSLVrU2ifxtpw _RCcqYicoEeSLVrU2ifxtpw" decider="_RCbcKScoEeSLVrU2ifxtpw" successorClause="_RCcqeCcoEeSLVrU2ifxtpw" test="_RCa1KicoEeSLVrU2ifxtpw _RCa1NScoEeSLVrU2ifxtpw _RCa1PScoEeSLVrU2ifxtpw _RCbcFCcoEeSLVrU2ifxtpw _RCbcGycoEeSLVrU2ifxtpw _RCbcJScoEeSLVrU2ifxtpw"/>
        <clause xmi:id="_RCcqeCcoEeSLVrU2ifxtpw" decider="_RCcqcycoEeSLVrU2ifxtpw" predecessorClause="_RCcqdycoEeSLVrU2ifxtpw" test="_RCcqcicoEeSLVrU2ifxtpw"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RCa1CScoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RCaOACcoEeSLVrU2ifxtpw" parameter="_RCaN9ycoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RCa1CicoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RCaOACcoEeSLVrU2ifxtpw" outgoing="_RCa1BCcoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RCa1CycoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_RCa1ACcoEeSLVrU2ifxtpw" parameter="_RCaN-icoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RCa1DCcoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_RCa1ACcoEeSLVrU2ifxtpw" outgoing="_RCa1AicoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RCa1DScoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_RCa1AScoEeSLVrU2ifxtpw" parameter="_RCaN_ScoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RCa1DicoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_RCa1AScoEeSLVrU2ifxtpw" outgoing="_RCa1AycoEeSLVrU2ifxtpw _RCa1BScoEeSLVrU2ifxtpw _RCa1BicoEeSLVrU2ifxtpw _RCa1BycoEeSLVrU2ifxtpw _RCa1CCcoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_RCdRQCcoEeSLVrU2ifxtpw" name="Write" node="_RCdRSycoEeSLVrU2ifxtpw _RCdRTCcoEeSLVrU2ifxtpw _RCdRTScoEeSLVrU2ifxtpw" group="_RCdRTScoEeSLVrU2ifxtpw">
    <packageImport xmi:id="_RCdRQScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_RCdRQicoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_RCdRQycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_RCdRRCcoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_RCdRRScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_RCdRRicoEeSLVrU2ifxtpw" name="value" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRRycoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRSCcoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRSScoEeSLVrU2ifxtpw" target="_RCdRTCcoEeSLVrU2ifxtpw" source="_RCdRSycoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRSicoEeSLVrU2ifxtpw" target="_RCdRVCcoEeSLVrU2ifxtpw" source="_RCdRTCcoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RCdRTScoEeSLVrU2ifxtpw" name="Body(Write)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCdRTicoEeSLVrU2ifxtpw" name="ExpressionStatement@60fe23b7">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRTycoEeSLVrU2ifxtpw" target="_RCdRYScoEeSLVrU2ifxtpw" source="_RCdRbicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RCdRUCcoEeSLVrU2ifxtpw" target="_RCdRUScoEeSLVrU2ifxtpw" source="_RCdRYicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ExpansionRegion" xmi:id="_RCdRUScoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_RCdRUCcoEeSLVrU2ifxtpw" mode="parallel" inputElement="_RCdRYScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRUicoEeSLVrU2ifxtpw" target="_RCdRWCcoEeSLVrU2ifxtpw" source="_RCdRVCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRUycoEeSLVrU2ifxtpw" target="_RCdRXicoEeSLVrU2ifxtpw" source="_RCdRYScoEeSLVrU2ifxtpw"/>
          <structuredNodeInput xmi:id="_RCdRVCcoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_RCdRSicoEeSLVrU2ifxtpw" outgoing="_RCdRUicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRVScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRVicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RCdRVycoEeSLVrU2ifxtpw" name="Call(write)">
            <argument xmi:id="_RCdRWCcoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_RCdRUicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRWScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRWicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RCdRWycoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
              <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRXCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRXScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
            <target xmi:id="_RCdRXicoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_RCdRUycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRXycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRYCcoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
        </node>
        <node xmi:type="uml:ExpansionNode" xmi:id="_RCdRYScoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_RCdRTycoEeSLVrU2ifxtpw" outgoing="_RCdRUycoEeSLVrU2ifxtpw" regionAsInput="_RCdRUScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCdRYicoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_RCdRUCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRYycoEeSLVrU2ifxtpw" target="_RCdRaCcoEeSLVrU2ifxtpw" source="_RCdRcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRZCcoEeSLVrU2ifxtpw" target="_RCdReycoEeSLVrU2ifxtpw" source="_RCdRdycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RCdRZScoEeSLVrU2ifxtpw" target="_RCdRZycoEeSLVrU2ifxtpw" source="_RCdRcScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RCdRZicoEeSLVrU2ifxtpw" target="_RCdRaycoEeSLVrU2ifxtpw" source="_RCdReycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RCdRZycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RCdRZScoEeSLVrU2ifxtpw">
            <argument xmi:id="_RCdRaCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RCdRYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRaScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRaicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_RCdRaycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RCdRZicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRbCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRbScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RCdRbicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RCdRTycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRbycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRcCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RCdRcScoEeSLVrU2ifxtpw" name="Tuple@3c7ec4e2" outgoing="_RCdRZScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ReadExtentAction" xmi:id="_RCdRcicoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
              <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
              <result xmi:id="_RCdRcycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RCdRYycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdRdCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdRdScoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RCdRdicoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RCdRdycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RCdRZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RCdReCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RCdReScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RCdReicoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RCdReycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RCdRZCcoEeSLVrU2ifxtpw" outgoing="_RCdRZicoEeSLVrU2ifxtpw"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RCdRSycoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_RCdRSScoEeSLVrU2ifxtpw" parameter="_RCdRRicoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RCdRTCcoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RCdRSScoEeSLVrU2ifxtpw" outgoing="_RCdRSicoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <profileApplication xmi:id="_RCdRfCcoEeSLVrU2ifxtpw">
    <eAnnotations xmi:id="_RCdRfScoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SozUcK1MEeOdBunZhTRw1w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SozUca1MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction" classifierBehavior="_SozUeq1MEeOdBunZhTRw1w" isActive="true">
      <packageImport xmi:id="_SozUcq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SozUc61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SozUdK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SozUda1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SozUdq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SozUd61MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUeK1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUea1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SozUeq1MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction$classifierBehavior$1" visibility="private" isActive="true" group="_SozUe61MEeOdBunZhTRw1w" node="_SozUe61MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SozUe61MEeOdBunZhTRw1w" name="Body(Expressions_Sequence_Construction$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SozUfK1MEeOdBunZhTRw1w" name="ExpressionStatement@317ff3f8" outgoing="_Soz_Bq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SozUfa1MEeOdBunZhTRw1w" name="Call(test)" operation="_So0lkq1MEeOdBunZhTRw1w">
              <result xmi:id="_SozUfq1MEeOdBunZhTRw1w" name="Call(test).result(seq1)" outgoing="_Soz7o61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUf61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUgK1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SozUga1MEeOdBunZhTRw1w" name="Call(test).result(seq2)" outgoing="_Soz7pK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUgq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUg61MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SozUhK1MEeOdBunZhTRw1w" name="Call(test).result(seq3)" outgoing="_Soz7pa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUha1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUhq1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SozUh61MEeOdBunZhTRw1w" name="Call(test).result(seq4)" outgoing="_Soz7pq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUiK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUia1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SozUiq1MEeOdBunZhTRw1w" name="Call(test).result(seq5)" outgoing="_Soz7p61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUi61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUjK1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SozUja1MEeOdBunZhTRw1w" name="Call(test).result(seq6)" outgoing="_Soz7qK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUjq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SozUj61MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SozUkK1MEeOdBunZhTRw1w" name="Call(test).result(seq7)" outgoing="_Soz7qa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozUka1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7gK1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_Soz7ga1MEeOdBunZhTRw1w" name="Call(test).result(x)" outgoing="_Soz7qq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7gq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7g61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_Soz7hK1MEeOdBunZhTRw1w" name="Call(test).result(customers)" outgoing="_Soz7q61MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7ha1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7hq1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_Soz7h61MEeOdBunZhTRw1w" name="Call(test).result(set1)" outgoing="_Soz7rK1MEeOdBunZhTRw1w" type="_So0mdK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7iK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7ia1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_Soz7iq1MEeOdBunZhTRw1w" name="Call(test).result(set2)" outgoing="_Soz7ra1MEeOdBunZhTRw1w" type="_So0mdK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7i61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7jK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_Soz7ja1MEeOdBunZhTRw1w" name="Call(test).result(list)" outgoing="_Soz7rq1MEeOdBunZhTRw1w" type="_So1LKq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7jq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7j61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <target xmi:id="_Soz7kK1MEeOdBunZhTRw1w" name="Call(test).target" incoming="_Soz7r61MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7ka1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7kq1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Soz7k61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_Soz7lK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_Soz7r61MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7la1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7lq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7l61MEeOdBunZhTRw1w" name="Fork(seq1)@3a777ac9" outgoing="_Soz_Ba1MEeOdBunZhTRw1w" incoming="_Soz7o61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7mK1MEeOdBunZhTRw1w" name="Fork(seq2)@5802eb3f" outgoing="_Soz_B61MEeOdBunZhTRw1w" incoming="_Soz7pK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7ma1MEeOdBunZhTRw1w" name="Fork(seq3)@27a2a23d" outgoing="_Soz_Ca1MEeOdBunZhTRw1w" incoming="_Soz7pa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7mq1MEeOdBunZhTRw1w" name="Fork(seq4)@2649671f" outgoing="_Soz_C61MEeOdBunZhTRw1w" incoming="_Soz7pq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7m61MEeOdBunZhTRw1w" name="Fork(seq5)@1d1137dc" outgoing="_Soz_Da1MEeOdBunZhTRw1w" incoming="_Soz7p61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7nK1MEeOdBunZhTRw1w" name="Fork(seq6)@556a5b6c" outgoing="_Soz_D61MEeOdBunZhTRw1w" incoming="_Soz7qK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7na1MEeOdBunZhTRw1w" name="Fork(seq7)@39983b43" outgoing="_Soz_Ea1MEeOdBunZhTRw1w" incoming="_Soz7qa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7nq1MEeOdBunZhTRw1w" name="Fork(x)@395ac93f" outgoing="_Soz_E61MEeOdBunZhTRw1w" incoming="_Soz7qq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7n61MEeOdBunZhTRw1w" name="Fork(customers)@77526483" outgoing="_Soz_Fa1MEeOdBunZhTRw1w" incoming="_Soz7q61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7oK1MEeOdBunZhTRw1w" name="Fork(set1)@424511a8" outgoing="_Soz_F61MEeOdBunZhTRw1w _Soz_Ga1MEeOdBunZhTRw1w _Soz_G61MEeOdBunZhTRw1w" incoming="_Soz7rK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7oa1MEeOdBunZhTRw1w" name="Fork(set2)@448a4e95" outgoing="_Soz_Ha1MEeOdBunZhTRw1w _Soz_H61MEeOdBunZhTRw1w _Soz_Ia1MEeOdBunZhTRw1w" incoming="_Soz7ra1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Soz7oq1MEeOdBunZhTRw1w" name="Fork(list)@542d3b5a" outgoing="_Soz_I61MEeOdBunZhTRw1w _Soz_Ja1MEeOdBunZhTRw1w _Soz_J61MEeOdBunZhTRw1w" incoming="_Soz7rq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7o61MEeOdBunZhTRw1w" source="_SozUfq1MEeOdBunZhTRw1w" target="_Soz7l61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7pK1MEeOdBunZhTRw1w" source="_SozUga1MEeOdBunZhTRw1w" target="_Soz7mK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7pa1MEeOdBunZhTRw1w" source="_SozUhK1MEeOdBunZhTRw1w" target="_Soz7ma1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7pq1MEeOdBunZhTRw1w" source="_SozUh61MEeOdBunZhTRw1w" target="_Soz7mq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7p61MEeOdBunZhTRw1w" source="_SozUiq1MEeOdBunZhTRw1w" target="_Soz7m61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7qK1MEeOdBunZhTRw1w" source="_SozUja1MEeOdBunZhTRw1w" target="_Soz7nK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7qa1MEeOdBunZhTRw1w" source="_SozUkK1MEeOdBunZhTRw1w" target="_Soz7na1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7qq1MEeOdBunZhTRw1w" source="_Soz7ga1MEeOdBunZhTRw1w" target="_Soz7nq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7q61MEeOdBunZhTRw1w" source="_Soz7hK1MEeOdBunZhTRw1w" target="_Soz7n61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7rK1MEeOdBunZhTRw1w" source="_Soz7h61MEeOdBunZhTRw1w" target="_Soz7oK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7ra1MEeOdBunZhTRw1w" source="_Soz7iq1MEeOdBunZhTRw1w" target="_Soz7oa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7rq1MEeOdBunZhTRw1w" source="_Soz7ja1MEeOdBunZhTRw1w" target="_Soz7oq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7r61MEeOdBunZhTRw1w" source="_Soz7lK1MEeOdBunZhTRw1w" target="_Soz7kK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7sK1MEeOdBunZhTRw1w" name="ExpressionStatement@1328efd8" outgoing="_Soz_CK1MEeOdBunZhTRw1w" incoming="_Soz_Bq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz7sa1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz73q1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz7sq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz73K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7s61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7tK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz7ta1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz_Ba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7tq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7t61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz7uK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz73a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7ua1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7uq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7u61MEeOdBunZhTRw1w" name="Tuple@5cce7de1" outgoing="_Soz73q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7vK1MEeOdBunZhTRw1w" name="Value(&quot;seq1&quot;)">
                <result xmi:id="_Soz7va1MEeOdBunZhTRw1w" name="Value(&quot;seq1&quot;).result" outgoing="_Soz73K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7vq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7v61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz7wK1MEeOdBunZhTRw1w" value="seq1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7wa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@eeb0ba9">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7wq1MEeOdBunZhTRw1w" name="SequenceExpressionList@3d88095e#1" outgoing="_Soz7161MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7w61MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_Soz7xK1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;).result" outgoing="_Soz72a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7xa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7xq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz7x61MEeOdBunZhTRw1w" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7yK1MEeOdBunZhTRw1w" name="SequenceExpressionList@3d88095e#2" outgoing="_Soz72K1MEeOdBunZhTRw1w" incoming="_Soz7161MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7ya1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_Soz7yq1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;).result" outgoing="_Soz72q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7y61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7zK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz7za1MEeOdBunZhTRw1w" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7zq1MEeOdBunZhTRw1w" name="SequenceExpressionList@3d88095e#3" incoming="_Soz72K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7z61MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_Soz70K1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;).result" outgoing="_Soz7261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz70a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz70q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz7061MEeOdBunZhTRw1w" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz71K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@eeb0ba9.output" outgoing="_Soz73a1MEeOdBunZhTRw1w" incoming="_Soz72a1MEeOdBunZhTRw1w _Soz72q1MEeOdBunZhTRw1w _Soz7261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz71a1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz71q1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz7161MEeOdBunZhTRw1w" source="_Soz7wq1MEeOdBunZhTRw1w" target="_Soz7yK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz72K1MEeOdBunZhTRw1w" source="_Soz7yK1MEeOdBunZhTRw1w" target="_Soz7zq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz72a1MEeOdBunZhTRw1w" source="_Soz7xK1MEeOdBunZhTRw1w" target="_Soz71K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz72q1MEeOdBunZhTRw1w" source="_Soz7yq1MEeOdBunZhTRw1w" target="_Soz71K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz7261MEeOdBunZhTRw1w" source="_Soz70K1MEeOdBunZhTRw1w" target="_Soz71K1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz73K1MEeOdBunZhTRw1w" source="_Soz7va1MEeOdBunZhTRw1w" target="_Soz7sq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz73a1MEeOdBunZhTRw1w" source="_Soz71K1MEeOdBunZhTRw1w" target="_Soz7uK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz73q1MEeOdBunZhTRw1w" source="_Soz7u61MEeOdBunZhTRw1w" target="_Soz7sa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7361MEeOdBunZhTRw1w" name="ExpressionStatement@17cfb961" outgoing="_Soz_Cq1MEeOdBunZhTRw1w" incoming="_Soz_CK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz74K1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz8Da1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz74a1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz8C61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz74q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7461MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz75K1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz_B61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz75a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz75q1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz7561MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz8DK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz76K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz76a1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz76q1MEeOdBunZhTRw1w" name="Tuple@5afd3231" outgoing="_Soz8Da1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7661MEeOdBunZhTRw1w" name="Value(&quot;seq2&quot;)">
                <result xmi:id="_Soz77K1MEeOdBunZhTRw1w" name="Value(&quot;seq2&quot;).result" outgoing="_Soz8C61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz77a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz77q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz7761MEeOdBunZhTRw1w" value="seq2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz78K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@52271f2f">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz78a1MEeOdBunZhTRw1w" name="SequenceExpressionList@4e87dd80#1" outgoing="_Soz8Bq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz78q1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_Soz7861MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;).result" outgoing="_Soz8CK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz79K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz79a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz79q1MEeOdBunZhTRw1w" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7961MEeOdBunZhTRw1w" name="SequenceExpressionList@4e87dd80#2" outgoing="_Soz8B61MEeOdBunZhTRw1w" incoming="_Soz8Bq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7-K1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_Soz7-a1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;).result" outgoing="_Soz8Ca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz7-q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz7-61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz7_K1MEeOdBunZhTRw1w" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz7_a1MEeOdBunZhTRw1w" name="SequenceExpressionList@4e87dd80#3" incoming="_Soz8B61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz7_q1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_Soz7_61MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;).result" outgoing="_Soz8Cq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8AK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Aa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz8Aq1MEeOdBunZhTRw1w" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz8A61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@52271f2f.output" outgoing="_Soz8DK1MEeOdBunZhTRw1w" incoming="_Soz8CK1MEeOdBunZhTRw1w _Soz8Ca1MEeOdBunZhTRw1w _Soz8Cq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8BK1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Ba1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8Bq1MEeOdBunZhTRw1w" source="_Soz78a1MEeOdBunZhTRw1w" target="_Soz7961MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8B61MEeOdBunZhTRw1w" source="_Soz7961MEeOdBunZhTRw1w" target="_Soz7_a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8CK1MEeOdBunZhTRw1w" source="_Soz7861MEeOdBunZhTRw1w" target="_Soz8A61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8Ca1MEeOdBunZhTRw1w" source="_Soz7-a1MEeOdBunZhTRw1w" target="_Soz8A61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8Cq1MEeOdBunZhTRw1w" source="_Soz7_61MEeOdBunZhTRw1w" target="_Soz8A61MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8C61MEeOdBunZhTRw1w" source="_Soz77K1MEeOdBunZhTRw1w" target="_Soz74a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8DK1MEeOdBunZhTRw1w" source="_Soz8A61MEeOdBunZhTRw1w" target="_Soz7561MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8Da1MEeOdBunZhTRw1w" source="_Soz76q1MEeOdBunZhTRw1w" target="_Soz74K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8Dq1MEeOdBunZhTRw1w" name="ExpressionStatement@5cb65920" outgoing="_Soz_DK1MEeOdBunZhTRw1w" incoming="_Soz_Cq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8D61MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz8PK1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz8EK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz8Oq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Ea1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Eq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz8E61MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz_Ca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8FK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Fa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz8Fq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz8O61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8F61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8GK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8Ga1MEeOdBunZhTRw1w" name="Tuple@5a3c86c8" outgoing="_Soz8PK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8Gq1MEeOdBunZhTRw1w" name="Value(&quot;seq3&quot;)">
                <result xmi:id="_Soz8G61MEeOdBunZhTRw1w" name="Value(&quot;seq3&quot;).result" outgoing="_Soz8Oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8HK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Ha1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz8Hq1MEeOdBunZhTRw1w" value="seq3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8H61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@14c93d19">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8IK1MEeOdBunZhTRw1w" name="SequenceExpressionList@30f3c140#1" outgoing="_Soz8Na1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8Ia1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Soz8Iq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz8N61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8I61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8JK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8Ja1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8Jq1MEeOdBunZhTRw1w" name="SequenceExpressionList@30f3c140#2" outgoing="_Soz8Nq1MEeOdBunZhTRw1w" incoming="_Soz8Na1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8J61MEeOdBunZhTRw1w" name="Value(true)">
                    <result xmi:id="_Soz8KK1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_Soz8OK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Ka1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Kq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_Soz8K61MEeOdBunZhTRw1w" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8LK1MEeOdBunZhTRw1w" name="SequenceExpressionList@30f3c140#3" incoming="_Soz8Nq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8La1MEeOdBunZhTRw1w" name="Value(&quot;blah&quot;)">
                    <result xmi:id="_Soz8Lq1MEeOdBunZhTRw1w" name="Value(&quot;blah&quot;).result" outgoing="_Soz8Oa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8L61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8MK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz8Ma1MEeOdBunZhTRw1w" value="blah">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz8Mq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@14c93d19.output" outgoing="_Soz8O61MEeOdBunZhTRw1w" incoming="_Soz8N61MEeOdBunZhTRw1w _Soz8OK1MEeOdBunZhTRw1w _Soz8Oa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8M61MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8NK1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8Na1MEeOdBunZhTRw1w" source="_Soz8IK1MEeOdBunZhTRw1w" target="_Soz8Jq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8Nq1MEeOdBunZhTRw1w" source="_Soz8Jq1MEeOdBunZhTRw1w" target="_Soz8LK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8N61MEeOdBunZhTRw1w" source="_Soz8Iq1MEeOdBunZhTRw1w" target="_Soz8Mq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8OK1MEeOdBunZhTRw1w" source="_Soz8KK1MEeOdBunZhTRw1w" target="_Soz8Mq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8Oa1MEeOdBunZhTRw1w" source="_Soz8Lq1MEeOdBunZhTRw1w" target="_Soz8Mq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8Oq1MEeOdBunZhTRw1w" source="_Soz8G61MEeOdBunZhTRw1w" target="_Soz8EK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8O61MEeOdBunZhTRw1w" source="_Soz8Mq1MEeOdBunZhTRw1w" target="_Soz8Fq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8PK1MEeOdBunZhTRw1w" source="_Soz8Ga1MEeOdBunZhTRw1w" target="_Soz8D61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8Pa1MEeOdBunZhTRw1w" name="ExpressionStatement@bfb6a22" outgoing="_Soz_Dq1MEeOdBunZhTRw1w" incoming="_Soz_DK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8Pq1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz8a61MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz8P61MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz8aa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8QK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Qa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz8Qq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz_C61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Q61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8RK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz8Ra1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz8aq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Rq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8R61MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8SK1MEeOdBunZhTRw1w" name="Tuple@7e02dcb6" outgoing="_Soz8a61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8Sa1MEeOdBunZhTRw1w" name="Value(&quot;seq4&quot;)">
                <result xmi:id="_Soz8Sq1MEeOdBunZhTRw1w" name="Value(&quot;seq4&quot;).result" outgoing="_Soz8aa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8S61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8TK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz8Ta1MEeOdBunZhTRw1w" value="seq4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8Tq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@703557ca">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8T61MEeOdBunZhTRw1w" name="SequenceExpressionList@63d0272#1" outgoing="_Soz8ZK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8UK1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Soz8Ua1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz8Zq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Uq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8U61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8VK1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8Va1MEeOdBunZhTRw1w" name="SequenceExpressionList@63d0272#2" outgoing="_Soz8Za1MEeOdBunZhTRw1w" incoming="_Soz8ZK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8Vq1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_Soz8V61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Soz8Z61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8WK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Wa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8Wq1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8W61MEeOdBunZhTRw1w" name="SequenceExpressionList@63d0272#3" incoming="_Soz8Za1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8XK1MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_Soz8Xa1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_Soz8aK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Xq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8X61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8YK1MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz8Ya1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@703557ca.output" outgoing="_Soz8aq1MEeOdBunZhTRw1w" incoming="_Soz8Zq1MEeOdBunZhTRw1w _Soz8Z61MEeOdBunZhTRw1w _Soz8aK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8Yq1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8Y61MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8ZK1MEeOdBunZhTRw1w" source="_Soz8T61MEeOdBunZhTRw1w" target="_Soz8Va1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8Za1MEeOdBunZhTRw1w" source="_Soz8Va1MEeOdBunZhTRw1w" target="_Soz8W61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8Zq1MEeOdBunZhTRw1w" source="_Soz8Ua1MEeOdBunZhTRw1w" target="_Soz8Ya1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8Z61MEeOdBunZhTRw1w" source="_Soz8V61MEeOdBunZhTRw1w" target="_Soz8Ya1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8aK1MEeOdBunZhTRw1w" source="_Soz8Xa1MEeOdBunZhTRw1w" target="_Soz8Ya1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8aa1MEeOdBunZhTRw1w" source="_Soz8Sq1MEeOdBunZhTRw1w" target="_Soz8P61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8aq1MEeOdBunZhTRw1w" source="_Soz8Ya1MEeOdBunZhTRw1w" target="_Soz8Ra1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8a61MEeOdBunZhTRw1w" source="_Soz8SK1MEeOdBunZhTRw1w" target="_Soz8Pq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8bK1MEeOdBunZhTRw1w" name="ExpressionStatement@252c8a5" outgoing="_Soz_EK1MEeOdBunZhTRw1w" incoming="_Soz_Dq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8ba1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz8mq1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz8bq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz8mK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8b61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8cK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz8ca1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz_Da1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8cq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8c61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz8dK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz8ma1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8da1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8dq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8d61MEeOdBunZhTRw1w" name="Tuple@44ac2f9b" outgoing="_Soz8mq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8eK1MEeOdBunZhTRw1w" name="Value(&quot;seq5&quot;)">
                <result xmi:id="_Soz8ea1MEeOdBunZhTRw1w" name="Value(&quot;seq5&quot;).result" outgoing="_Soz8mK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8eq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8e61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz8fK1MEeOdBunZhTRw1w" value="seq5">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8fa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@4a6227db">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8fq1MEeOdBunZhTRw1w" name="SequenceExpressionList@2ee1cc1e#1" outgoing="_Soz8k61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8f61MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Soz8gK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz8la1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8ga1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8gq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8g61MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8hK1MEeOdBunZhTRw1w" name="SequenceExpressionList@2ee1cc1e#2" outgoing="_Soz8lK1MEeOdBunZhTRw1w" incoming="_Soz8k61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8ha1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_Soz8hq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Soz8lq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8h61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8iK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8ia1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8iq1MEeOdBunZhTRw1w" name="SequenceExpressionList@2ee1cc1e#3" incoming="_Soz8lK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8i61MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_Soz8jK1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_Soz8l61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8ja1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8jq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8j61MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz8kK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@4a6227db.output" outgoing="_Soz8ma1MEeOdBunZhTRw1w" incoming="_Soz8la1MEeOdBunZhTRw1w _Soz8lq1MEeOdBunZhTRw1w _Soz8l61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8ka1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8kq1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8k61MEeOdBunZhTRw1w" source="_Soz8fq1MEeOdBunZhTRw1w" target="_Soz8hK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8lK1MEeOdBunZhTRw1w" source="_Soz8hK1MEeOdBunZhTRw1w" target="_Soz8iq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8la1MEeOdBunZhTRw1w" source="_Soz8gK1MEeOdBunZhTRw1w" target="_Soz8kK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8lq1MEeOdBunZhTRw1w" source="_Soz8hq1MEeOdBunZhTRw1w" target="_Soz8kK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8l61MEeOdBunZhTRw1w" source="_Soz8jK1MEeOdBunZhTRw1w" target="_Soz8kK1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8mK1MEeOdBunZhTRw1w" source="_Soz8ea1MEeOdBunZhTRw1w" target="_Soz8bq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8ma1MEeOdBunZhTRw1w" source="_Soz8kK1MEeOdBunZhTRw1w" target="_Soz8dK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8mq1MEeOdBunZhTRw1w" source="_Soz8d61MEeOdBunZhTRw1w" target="_Soz8ba1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8m61MEeOdBunZhTRw1w" name="ExpressionStatement@6f23260" outgoing="_Soz_Eq1MEeOdBunZhTRw1w" incoming="_Soz_EK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8nK1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz8ya1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz8na1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz8x61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8nq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8n61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz8oK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz_D61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8oa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8oq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz8o61MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz8yK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8pK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8pa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8pq1MEeOdBunZhTRw1w" name="Tuple@6a2a7cf1" outgoing="_Soz8ya1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8p61MEeOdBunZhTRw1w" name="Value(&quot;seq6&quot;)">
                <result xmi:id="_Soz8qK1MEeOdBunZhTRw1w" name="Value(&quot;seq6&quot;).result" outgoing="_Soz8x61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8qa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8qq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz8q61MEeOdBunZhTRw1w" value="seq6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8rK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@55bc474e">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8ra1MEeOdBunZhTRw1w" name="SequenceExpressionList@b6d68bb#1" outgoing="_Soz8wq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8rq1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Soz8r61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz8xK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8sK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8sa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8sq1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8s61MEeOdBunZhTRw1w" name="SequenceExpressionList@b6d68bb#2" outgoing="_Soz8w61MEeOdBunZhTRw1w" incoming="_Soz8wq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8tK1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_Soz8ta1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Soz8xa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8tq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8t61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8uK1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8ua1MEeOdBunZhTRw1w" name="SequenceExpressionList@b6d68bb#3" incoming="_Soz8w61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8uq1MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_Soz8u61MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_Soz8xq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8vK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8va1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8vq1MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz8v61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@55bc474e.output" outgoing="_Soz8yK1MEeOdBunZhTRw1w" incoming="_Soz8xK1MEeOdBunZhTRw1w _Soz8xa1MEeOdBunZhTRw1w _Soz8xq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8wK1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8wa1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8wq1MEeOdBunZhTRw1w" source="_Soz8ra1MEeOdBunZhTRw1w" target="_Soz8s61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8w61MEeOdBunZhTRw1w" source="_Soz8s61MEeOdBunZhTRw1w" target="_Soz8ua1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8xK1MEeOdBunZhTRw1w" source="_Soz8r61MEeOdBunZhTRw1w" target="_Soz8v61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8xa1MEeOdBunZhTRw1w" source="_Soz8ta1MEeOdBunZhTRw1w" target="_Soz8v61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8xq1MEeOdBunZhTRw1w" source="_Soz8u61MEeOdBunZhTRw1w" target="_Soz8v61MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8x61MEeOdBunZhTRw1w" source="_Soz8qK1MEeOdBunZhTRw1w" target="_Soz8na1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8yK1MEeOdBunZhTRw1w" source="_Soz8v61MEeOdBunZhTRw1w" target="_Soz8o61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8ya1MEeOdBunZhTRw1w" source="_Soz8pq1MEeOdBunZhTRw1w" target="_Soz8nK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8yq1MEeOdBunZhTRw1w" name="ExpressionStatement@40dab356" outgoing="_Soz_FK1MEeOdBunZhTRw1w" incoming="_Soz_Eq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8y61MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz84a1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz8zK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz8361MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8za1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8zq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz8z61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz84K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz80K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz80a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz80q1MEeOdBunZhTRw1w" name="Tuple@3280d3ec" outgoing="_Soz84a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8061MEeOdBunZhTRw1w" name="Value(&quot;seq7->isEmpty()&quot;)">
                <result xmi:id="_Soz81K1MEeOdBunZhTRw1w" name="Value(&quot;seq7->isEmpty()&quot;).result" outgoing="_Soz8361MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz81a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz81q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz8161MEeOdBunZhTRw1w" value="seq7->isEmpty()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz82K1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__)" behavior="_So3oI61MEeOdBunZhTRw1w">
                <argument xmi:id="_Soz82a1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__).argument(seq)" incoming="_Soz_Ea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz82q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8261MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_Soz83K1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__).result()" outgoing="_Soz84K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz83a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz83q1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8361MEeOdBunZhTRw1w" source="_Soz81K1MEeOdBunZhTRw1w" target="_Soz8zK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz84K1MEeOdBunZhTRw1w" source="_Soz83K1MEeOdBunZhTRw1w" target="_Soz8z61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz84a1MEeOdBunZhTRw1w" source="_Soz80q1MEeOdBunZhTRw1w" target="_Soz8y61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz84q1MEeOdBunZhTRw1w" name="ExpressionStatement@403bf273" outgoing="_Soz_Fq1MEeOdBunZhTRw1w" incoming="_Soz_FK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8461MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Soz8-q1MEeOdBunZhTRw1w" behavior="_So3oQ61MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz85K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Soz8-K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz85a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz85q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz8561MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Soz_E61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz86K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz86a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz86q1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Soz8-a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8661MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz87K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz87a1MEeOdBunZhTRw1w" name="Tuple@7a9845d0" outgoing="_Soz8-q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz87q1MEeOdBunZhTRw1w" name="Value(&quot;x5&quot;)">
                <result xmi:id="_Soz8761MEeOdBunZhTRw1w" name="Value(&quot;x5&quot;).result" outgoing="_Soz8-K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz88K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz88a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz88q1MEeOdBunZhTRw1w" value="x5">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz8861MEeOdBunZhTRw1w" name="Value(5)">
                <result xmi:id="_Soz89K1MEeOdBunZhTRw1w" name="Value(5).result" outgoing="_Soz8-a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz89a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz89q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Soz8961MEeOdBunZhTRw1w" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8-K1MEeOdBunZhTRw1w" source="_Soz8761MEeOdBunZhTRw1w" target="_Soz85K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz8-a1MEeOdBunZhTRw1w" source="_Soz89K1MEeOdBunZhTRw1w" target="_Soz86q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz8-q1MEeOdBunZhTRw1w" source="_Soz87a1MEeOdBunZhTRw1w" target="_Soz8461MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz8-61MEeOdBunZhTRw1w" name="ExpressionStatement@23d34147" outgoing="_Soz_GK1MEeOdBunZhTRw1w" incoming="_Soz_Fq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz8_K1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz9MK1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz8_a1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz9La1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz8_q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz8_61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz9AK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz9Lq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Aa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Aq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz9A61MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz9L61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9BK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Ba1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Bq1MEeOdBunZhTRw1w" name="Tuple@f876ce2" outgoing="_Soz9MK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9B61MEeOdBunZhTRw1w" name="Value(&quot;customers.name&quot;)">
                <result xmi:id="_Soz9CK1MEeOdBunZhTRw1w" name="Value(&quot;customers.name&quot;).result" outgoing="_Soz9La1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Ca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Cq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz9C61MEeOdBunZhTRw1w" value="customers.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Soz9DK1MEeOdBunZhTRw1w" name="Fork(Fork(customers)@77526483)" outgoing="_Soz9LK1MEeOdBunZhTRw1w" incoming="_Soz_Fa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz9Da1MEeOdBunZhTRw1w" name="Collect(Read(name))" mode="parallel" outputElement="_Soz9GK1MEeOdBunZhTRw1w" inputElement="_Soz9F61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Soz9Dq1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_So0lwK1MEeOdBunZhTRw1w">
                  <object xmi:id="_Soz9D61MEeOdBunZhTRw1w" name="Read(name).object" incoming="_Soz9Fa1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9EK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Ea1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Soz9Eq1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_Soz9Fq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9E61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9FK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9Fa1MEeOdBunZhTRw1w" source="_Soz9F61MEeOdBunZhTRw1w" target="_Soz9D61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9Fq1MEeOdBunZhTRw1w" source="_Soz9Eq1MEeOdBunZhTRw1w" target="_Soz9GK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9F61MEeOdBunZhTRw1w" name="Collect(Read(name)).inputElement" outgoing="_Soz9Fa1MEeOdBunZhTRw1w" incoming="_Soz9LK1MEeOdBunZhTRw1w" regionAsInput="_Soz9Da1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9GK1MEeOdBunZhTRw1w" name="Collect(Read(name)).outputElement" outgoing="_Soz9Lq1MEeOdBunZhTRw1w" incoming="_Soz9Fq1MEeOdBunZhTRw1w" regionAsOutput="_Soz9Da1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Ga1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@6d23b987">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Gq1MEeOdBunZhTRw1w" name="SequenceExpressionList@391f7ea4#1" outgoing="_Soz9Ka1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9G61MEeOdBunZhTRw1w" name="Value(&quot;A&quot;)">
                    <result xmi:id="_Soz9HK1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;).result" outgoing="_Soz9Kq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Ha1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Hq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz9H61MEeOdBunZhTRw1w" value="A">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9IK1MEeOdBunZhTRw1w" name="SequenceExpressionList@391f7ea4#2" incoming="_Soz9Ka1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9Ia1MEeOdBunZhTRw1w" name="Value(&quot;C&quot;)">
                    <result xmi:id="_Soz9Iq1MEeOdBunZhTRw1w" name="Value(&quot;C&quot;).result" outgoing="_Soz9K61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9I61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9JK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz9Ja1MEeOdBunZhTRw1w" value="C">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz9Jq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@6d23b987.output" outgoing="_Soz9L61MEeOdBunZhTRw1w" incoming="_Soz9Kq1MEeOdBunZhTRw1w _Soz9K61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9J61MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9KK1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9Ka1MEeOdBunZhTRw1w" source="_Soz9Gq1MEeOdBunZhTRw1w" target="_Soz9IK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9Kq1MEeOdBunZhTRw1w" source="_Soz9HK1MEeOdBunZhTRw1w" target="_Soz9Jq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9K61MEeOdBunZhTRw1w" source="_Soz9Iq1MEeOdBunZhTRw1w" target="_Soz9Jq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9LK1MEeOdBunZhTRw1w" source="_Soz9DK1MEeOdBunZhTRw1w" target="_Soz9F61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9La1MEeOdBunZhTRw1w" source="_Soz9CK1MEeOdBunZhTRw1w" target="_Soz8_a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9Lq1MEeOdBunZhTRw1w" source="_Soz9GK1MEeOdBunZhTRw1w" target="_Soz9AK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9L61MEeOdBunZhTRw1w" source="_Soz9Jq1MEeOdBunZhTRw1w" target="_Soz9A61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9MK1MEeOdBunZhTRw1w" source="_Soz9Bq1MEeOdBunZhTRw1w" target="_Soz8_K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Ma1MEeOdBunZhTRw1w" name="ExpressionStatement@32b8e068" outgoing="_Soz_Gq1MEeOdBunZhTRw1w" incoming="_Soz_GK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz9Mq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz9Wq1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz9M61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz9WK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9NK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Na1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz9Nq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz9Wa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9N61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9OK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Oa1MEeOdBunZhTRw1w" name="Tuple@53fa2777" outgoing="_Soz9Wq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9Oq1MEeOdBunZhTRw1w" name="Value(&quot;set1.includes(1)&quot;)">
                <result xmi:id="_Soz9O61MEeOdBunZhTRw1w" name="Value(&quot;set1.includes(1)&quot;).result" outgoing="_Soz9WK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9PK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Pa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz9Pq1MEeOdBunZhTRw1w" value="set1.includes(1)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz9P61MEeOdBunZhTRw1w" name="Collect(Call(includes))" incoming="_Soz9V61MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz9Va1MEeOdBunZhTRw1w" inputElement="_Soz9VK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz9QK1MEeOdBunZhTRw1w" name="Call(includes)" incoming="_Soz9Ua1MEeOdBunZhTRw1w" operation="_So1J0a1MEeOdBunZhTRw1w">
                  <argument xmi:id="_Soz9Qa1MEeOdBunZhTRw1w" name="Call(includes).argument(element)" incoming="_Soz9UK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Qq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Q61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Soz9RK1MEeOdBunZhTRw1w" name="Call(includes).result(null)" outgoing="_Soz9U61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Ra1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Rq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz9R61MEeOdBunZhTRw1w" name="Call(includes).target" incoming="_Soz9Uq1MEeOdBunZhTRw1w" type="_So1Jpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9SK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Sa1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Sq1MEeOdBunZhTRw1w" name="Tuple@5664d325" outgoing="_Soz9Ua1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9S61MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Soz9TK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz9UK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Ta1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Tq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz9T61MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9UK1MEeOdBunZhTRw1w" source="_Soz9TK1MEeOdBunZhTRw1w" target="_Soz9Qa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9Ua1MEeOdBunZhTRw1w" source="_Soz9Sq1MEeOdBunZhTRw1w" target="_Soz9QK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9Uq1MEeOdBunZhTRw1w" source="_Soz9VK1MEeOdBunZhTRw1w" target="_Soz9R61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9U61MEeOdBunZhTRw1w" source="_Soz9RK1MEeOdBunZhTRw1w" target="_Soz9Va1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9VK1MEeOdBunZhTRw1w" name="Collect(Call(includes)).inputElement" outgoing="_Soz9Uq1MEeOdBunZhTRw1w" incoming="_Soz_F61MEeOdBunZhTRw1w" regionAsInput="_Soz9P61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9Va1MEeOdBunZhTRw1w" name="Collect(Call(includes)).outputElement" outgoing="_Soz9Wa1MEeOdBunZhTRw1w" incoming="_Soz9U61MEeOdBunZhTRw1w" regionAsOutput="_Soz9P61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Vq1MEeOdBunZhTRw1w" name="Feature(Fork(set1)@424511a8)" outgoing="_Soz9V61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9V61MEeOdBunZhTRw1w" source="_Soz9Vq1MEeOdBunZhTRw1w" target="_Soz9P61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9WK1MEeOdBunZhTRw1w" source="_Soz9O61MEeOdBunZhTRw1w" target="_Soz9M61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9Wa1MEeOdBunZhTRw1w" source="_Soz9Va1MEeOdBunZhTRw1w" target="_Soz9Nq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9Wq1MEeOdBunZhTRw1w" source="_Soz9Oa1MEeOdBunZhTRw1w" target="_Soz9Mq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9W61MEeOdBunZhTRw1w" name="ExpressionStatement@7a917cc7" outgoing="_Soz_HK1MEeOdBunZhTRw1w" incoming="_Soz_Gq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz9XK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz9hK1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz9Xa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz9gq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Xq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9X61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz9YK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz9g61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Ya1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Yq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9Y61MEeOdBunZhTRw1w" name="Tuple@2a49f17f" outgoing="_Soz9hK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9ZK1MEeOdBunZhTRw1w" name="Value(&quot;set1.includes(3)&quot;)">
                <result xmi:id="_Soz9Za1MEeOdBunZhTRw1w" name="Value(&quot;set1.includes(3)&quot;).result" outgoing="_Soz9gq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9Zq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9Z61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz9aK1MEeOdBunZhTRw1w" value="set1.includes(3)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz9aa1MEeOdBunZhTRw1w" name="Collect(Call(includes))" incoming="_Soz9ga1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz9f61MEeOdBunZhTRw1w" inputElement="_Soz9fq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz9aq1MEeOdBunZhTRw1w" name="Call(includes)" incoming="_Soz9e61MEeOdBunZhTRw1w" operation="_So1J0a1MEeOdBunZhTRw1w">
                  <argument xmi:id="_Soz9a61MEeOdBunZhTRw1w" name="Call(includes).argument(element)" incoming="_Soz9eq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9bK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9ba1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Soz9bq1MEeOdBunZhTRw1w" name="Call(includes).result(null)" outgoing="_Soz9fa1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9b61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9cK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz9ca1MEeOdBunZhTRw1w" name="Call(includes).target" incoming="_Soz9fK1MEeOdBunZhTRw1w" type="_So1Jpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9cq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9c61MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9dK1MEeOdBunZhTRw1w" name="Tuple@698159b0" outgoing="_Soz9e61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9da1MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_Soz9dq1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_Soz9eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9d61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9eK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz9ea1MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9eq1MEeOdBunZhTRw1w" source="_Soz9dq1MEeOdBunZhTRw1w" target="_Soz9a61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9e61MEeOdBunZhTRw1w" source="_Soz9dK1MEeOdBunZhTRw1w" target="_Soz9aq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9fK1MEeOdBunZhTRw1w" source="_Soz9fq1MEeOdBunZhTRw1w" target="_Soz9ca1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9fa1MEeOdBunZhTRw1w" source="_Soz9bq1MEeOdBunZhTRw1w" target="_Soz9f61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9fq1MEeOdBunZhTRw1w" name="Collect(Call(includes)).inputElement" outgoing="_Soz9fK1MEeOdBunZhTRw1w" incoming="_Soz_Ga1MEeOdBunZhTRw1w" regionAsInput="_Soz9aa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9f61MEeOdBunZhTRw1w" name="Collect(Call(includes)).outputElement" outgoing="_Soz9g61MEeOdBunZhTRw1w" incoming="_Soz9fa1MEeOdBunZhTRw1w" regionAsOutput="_Soz9aa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9gK1MEeOdBunZhTRw1w" name="Feature(Fork(set1)@424511a8)" outgoing="_Soz9ga1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9ga1MEeOdBunZhTRw1w" source="_Soz9gK1MEeOdBunZhTRw1w" target="_Soz9aa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9gq1MEeOdBunZhTRw1w" source="_Soz9Za1MEeOdBunZhTRw1w" target="_Soz9Xa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9g61MEeOdBunZhTRw1w" source="_Soz9f61MEeOdBunZhTRw1w" target="_Soz9YK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9hK1MEeOdBunZhTRw1w" source="_Soz9Y61MEeOdBunZhTRw1w" target="_Soz9XK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9ha1MEeOdBunZhTRw1w" name="ExpressionStatement@2ca21f41" outgoing="_Soz_Hq1MEeOdBunZhTRw1w" incoming="_Soz_HK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz9hq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz9rq1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz9h61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz9rK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9iK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9ia1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz9iq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz9ra1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9i61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9jK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9ja1MEeOdBunZhTRw1w" name="Tuple@2ac37ed7" outgoing="_Soz9rq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9jq1MEeOdBunZhTRw1w" name="Value(&quot;set1.includes(45)&quot;)">
                <result xmi:id="_Soz9j61MEeOdBunZhTRw1w" name="Value(&quot;set1.includes(45)&quot;).result" outgoing="_Soz9rK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9kK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9ka1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz9kq1MEeOdBunZhTRw1w" value="set1.includes(45)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz9k61MEeOdBunZhTRw1w" name="Collect(Call(includes))" incoming="_Soz9q61MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz9qa1MEeOdBunZhTRw1w" inputElement="_Soz9qK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz9lK1MEeOdBunZhTRw1w" name="Call(includes)" incoming="_Soz9pa1MEeOdBunZhTRw1w" operation="_So1J0a1MEeOdBunZhTRw1w">
                  <argument xmi:id="_Soz9la1MEeOdBunZhTRw1w" name="Call(includes).argument(element)" incoming="_Soz9pK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9lq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9l61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Soz9mK1MEeOdBunZhTRw1w" name="Call(includes).result(null)" outgoing="_Soz9p61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9ma1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9mq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz9m61MEeOdBunZhTRw1w" name="Call(includes).target" incoming="_Soz9pq1MEeOdBunZhTRw1w" type="_So1Jpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9nK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9na1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9nq1MEeOdBunZhTRw1w" name="Tuple@38a8d854" outgoing="_Soz9pa1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9n61MEeOdBunZhTRw1w" name="Value(45)">
                    <result xmi:id="_Soz9oK1MEeOdBunZhTRw1w" name="Value(45).result" outgoing="_Soz9pK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9oa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9oq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz9o61MEeOdBunZhTRw1w" value="45">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9pK1MEeOdBunZhTRw1w" source="_Soz9oK1MEeOdBunZhTRw1w" target="_Soz9la1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9pa1MEeOdBunZhTRw1w" source="_Soz9nq1MEeOdBunZhTRw1w" target="_Soz9lK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9pq1MEeOdBunZhTRw1w" source="_Soz9qK1MEeOdBunZhTRw1w" target="_Soz9m61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9p61MEeOdBunZhTRw1w" source="_Soz9mK1MEeOdBunZhTRw1w" target="_Soz9qa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9qK1MEeOdBunZhTRw1w" name="Collect(Call(includes)).inputElement" outgoing="_Soz9pq1MEeOdBunZhTRw1w" incoming="_Soz_G61MEeOdBunZhTRw1w" regionAsInput="_Soz9k61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9qa1MEeOdBunZhTRw1w" name="Collect(Call(includes)).outputElement" outgoing="_Soz9ra1MEeOdBunZhTRw1w" incoming="_Soz9p61MEeOdBunZhTRw1w" regionAsOutput="_Soz9k61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9qq1MEeOdBunZhTRw1w" name="Feature(Fork(set1)@424511a8)" outgoing="_Soz9q61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9q61MEeOdBunZhTRw1w" source="_Soz9qq1MEeOdBunZhTRw1w" target="_Soz9k61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9rK1MEeOdBunZhTRw1w" source="_Soz9j61MEeOdBunZhTRw1w" target="_Soz9h61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9ra1MEeOdBunZhTRw1w" source="_Soz9qa1MEeOdBunZhTRw1w" target="_Soz9iq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9rq1MEeOdBunZhTRw1w" source="_Soz9ja1MEeOdBunZhTRw1w" target="_Soz9hq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9r61MEeOdBunZhTRw1w" name="ExpressionStatement@78fdd054" outgoing="_Soz_IK1MEeOdBunZhTRw1w" incoming="_Soz_Hq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz9sK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz92K1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz9sa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz91q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9sq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9s61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz9tK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz9161MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9ta1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9tq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9t61MEeOdBunZhTRw1w" name="Tuple@6600e06" outgoing="_Soz92K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9uK1MEeOdBunZhTRw1w" name="Value(&quot;set2.includes(1)&quot;)">
                <result xmi:id="_Soz9ua1MEeOdBunZhTRw1w" name="Value(&quot;set2.includes(1)&quot;).result" outgoing="_Soz91q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9uq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9u61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz9vK1MEeOdBunZhTRw1w" value="set2.includes(1)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz9va1MEeOdBunZhTRw1w" name="Collect(Call(includes))" incoming="_Soz91a1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz9061MEeOdBunZhTRw1w" inputElement="_Soz90q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz9vq1MEeOdBunZhTRw1w" name="Call(includes)" incoming="_Soz9z61MEeOdBunZhTRw1w" operation="_So1J0a1MEeOdBunZhTRw1w">
                  <argument xmi:id="_Soz9v61MEeOdBunZhTRw1w" name="Call(includes).argument(element)" incoming="_Soz9zq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9wK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9wa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Soz9wq1MEeOdBunZhTRw1w" name="Call(includes).result(null)" outgoing="_Soz90a1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9w61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9xK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz9xa1MEeOdBunZhTRw1w" name="Call(includes).target" incoming="_Soz90K1MEeOdBunZhTRw1w" type="_So1Jpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9xq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9x61MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9yK1MEeOdBunZhTRw1w" name="Tuple@4a3d08e4" outgoing="_Soz9z61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9ya1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Soz9yq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz9zq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9y61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9zK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz9za1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9zq1MEeOdBunZhTRw1w" source="_Soz9yq1MEeOdBunZhTRw1w" target="_Soz9v61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9z61MEeOdBunZhTRw1w" source="_Soz9yK1MEeOdBunZhTRw1w" target="_Soz9vq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz90K1MEeOdBunZhTRw1w" source="_Soz90q1MEeOdBunZhTRw1w" target="_Soz9xa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz90a1MEeOdBunZhTRw1w" source="_Soz9wq1MEeOdBunZhTRw1w" target="_Soz9061MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz90q1MEeOdBunZhTRw1w" name="Collect(Call(includes)).inputElement" outgoing="_Soz90K1MEeOdBunZhTRw1w" incoming="_Soz_Ha1MEeOdBunZhTRw1w" regionAsInput="_Soz9va1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9061MEeOdBunZhTRw1w" name="Collect(Call(includes)).outputElement" outgoing="_Soz9161MEeOdBunZhTRw1w" incoming="_Soz90a1MEeOdBunZhTRw1w" regionAsOutput="_Soz9va1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz91K1MEeOdBunZhTRw1w" name="Feature(Fork(set2)@448a4e95)" outgoing="_Soz91a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz91a1MEeOdBunZhTRw1w" source="_Soz91K1MEeOdBunZhTRw1w" target="_Soz9va1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz91q1MEeOdBunZhTRw1w" source="_Soz9ua1MEeOdBunZhTRw1w" target="_Soz9sa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9161MEeOdBunZhTRw1w" source="_Soz9061MEeOdBunZhTRw1w" target="_Soz9tK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz92K1MEeOdBunZhTRw1w" source="_Soz9t61MEeOdBunZhTRw1w" target="_Soz9sK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz92a1MEeOdBunZhTRw1w" name="ExpressionStatement@7b65c747" outgoing="_Soz_Iq1MEeOdBunZhTRw1w" incoming="_Soz_IK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz92q1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz-Aq1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz9261MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz-AK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz93K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz93a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz93q1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz-Aa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz9361MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz94K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz94a1MEeOdBunZhTRw1w" name="Tuple@5e03d4b" outgoing="_Soz-Aq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz94q1MEeOdBunZhTRw1w" name="Value(&quot;set2.includes(3)&quot;)">
                <result xmi:id="_Soz9461MEeOdBunZhTRw1w" name="Value(&quot;set2.includes(3)&quot;).result" outgoing="_Soz-AK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz95K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz95a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz95q1MEeOdBunZhTRw1w" value="set2.includes(3)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz9561MEeOdBunZhTRw1w" name="Collect(Call(includes))" incoming="_Soz9_61MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz9_a1MEeOdBunZhTRw1w" inputElement="_Soz9_K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz96K1MEeOdBunZhTRw1w" name="Call(includes)" incoming="_Soz9-a1MEeOdBunZhTRw1w" operation="_So1J0a1MEeOdBunZhTRw1w">
                  <argument xmi:id="_Soz96a1MEeOdBunZhTRw1w" name="Call(includes).argument(element)" incoming="_Soz9-K1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz96q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz9661MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Soz97K1MEeOdBunZhTRw1w" name="Call(includes).result(null)" outgoing="_Soz9-61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz97a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz97q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz9761MEeOdBunZhTRw1w" name="Call(includes).target" incoming="_Soz9-q1MEeOdBunZhTRw1w" type="_So1Jpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz98K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz98a1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz98q1MEeOdBunZhTRw1w" name="Tuple@273b97e6" outgoing="_Soz9-a1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz9861MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_Soz99K1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_Soz9-K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz99a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz99q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz9961MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9-K1MEeOdBunZhTRw1w" source="_Soz99K1MEeOdBunZhTRw1w" target="_Soz96a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9-a1MEeOdBunZhTRw1w" source="_Soz98q1MEeOdBunZhTRw1w" target="_Soz96K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9-q1MEeOdBunZhTRw1w" source="_Soz9_K1MEeOdBunZhTRw1w" target="_Soz9761MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz9-61MEeOdBunZhTRw1w" source="_Soz97K1MEeOdBunZhTRw1w" target="_Soz9_a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9_K1MEeOdBunZhTRw1w" name="Collect(Call(includes)).inputElement" outgoing="_Soz9-q1MEeOdBunZhTRw1w" incoming="_Soz_H61MEeOdBunZhTRw1w" regionAsInput="_Soz9561MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz9_a1MEeOdBunZhTRw1w" name="Collect(Call(includes)).outputElement" outgoing="_Soz-Aa1MEeOdBunZhTRw1w" incoming="_Soz9-61MEeOdBunZhTRw1w" regionAsOutput="_Soz9561MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz9_q1MEeOdBunZhTRw1w" name="Feature(Fork(set2)@448a4e95)" outgoing="_Soz9_61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz9_61MEeOdBunZhTRw1w" source="_Soz9_q1MEeOdBunZhTRw1w" target="_Soz9561MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-AK1MEeOdBunZhTRw1w" source="_Soz9461MEeOdBunZhTRw1w" target="_Soz9261MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Aa1MEeOdBunZhTRw1w" source="_Soz9_a1MEeOdBunZhTRw1w" target="_Soz93q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-Aq1MEeOdBunZhTRw1w" source="_Soz94a1MEeOdBunZhTRw1w" target="_Soz92q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-A61MEeOdBunZhTRw1w" name="ExpressionStatement@b334182" outgoing="_Soz_JK1MEeOdBunZhTRw1w" incoming="_Soz_Iq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz-BK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Soz-LK1MEeOdBunZhTRw1w" behavior="_So3nwK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz-Ba1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Soz-Kq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Bq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-B61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz-CK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Soz-K61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Ca1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Cq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-C61MEeOdBunZhTRw1w" name="Tuple@4f722ed8" outgoing="_Soz-LK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-DK1MEeOdBunZhTRw1w" name="Value(&quot;set2.includes(45)&quot;)">
                <result xmi:id="_Soz-Da1MEeOdBunZhTRw1w" name="Value(&quot;set2.includes(45)&quot;).result" outgoing="_Soz-Kq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Dq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-D61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz-EK1MEeOdBunZhTRw1w" value="set2.includes(45)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz-Ea1MEeOdBunZhTRw1w" name="Collect(Call(includes))" incoming="_Soz-Ka1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz-J61MEeOdBunZhTRw1w" inputElement="_Soz-Jq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz-Eq1MEeOdBunZhTRw1w" name="Call(includes)" incoming="_Soz-I61MEeOdBunZhTRw1w" operation="_So1J0a1MEeOdBunZhTRw1w">
                  <argument xmi:id="_Soz-E61MEeOdBunZhTRw1w" name="Call(includes).argument(element)" incoming="_Soz-Iq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-FK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Fa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Soz-Fq1MEeOdBunZhTRw1w" name="Call(includes).result(null)" outgoing="_Soz-Ja1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-F61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-GK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz-Ga1MEeOdBunZhTRw1w" name="Call(includes).target" incoming="_Soz-JK1MEeOdBunZhTRw1w" type="_So1Jpq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Gq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-G61MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-HK1MEeOdBunZhTRw1w" name="Tuple@750215ff" outgoing="_Soz-I61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-Ha1MEeOdBunZhTRw1w" name="Value(45)">
                    <result xmi:id="_Soz-Hq1MEeOdBunZhTRw1w" name="Value(45).result" outgoing="_Soz-Iq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-H61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-IK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Soz-Ia1MEeOdBunZhTRw1w" value="45">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Iq1MEeOdBunZhTRw1w" source="_Soz-Hq1MEeOdBunZhTRw1w" target="_Soz-E61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-I61MEeOdBunZhTRw1w" source="_Soz-HK1MEeOdBunZhTRw1w" target="_Soz-Eq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-JK1MEeOdBunZhTRw1w" source="_Soz-Jq1MEeOdBunZhTRw1w" target="_Soz-Ga1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Ja1MEeOdBunZhTRw1w" source="_Soz-Fq1MEeOdBunZhTRw1w" target="_Soz-J61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-Jq1MEeOdBunZhTRw1w" name="Collect(Call(includes)).inputElement" outgoing="_Soz-JK1MEeOdBunZhTRw1w" incoming="_Soz_Ia1MEeOdBunZhTRw1w" regionAsInput="_Soz-Ea1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-J61MEeOdBunZhTRw1w" name="Collect(Call(includes)).outputElement" outgoing="_Soz-K61MEeOdBunZhTRw1w" incoming="_Soz-Ja1MEeOdBunZhTRw1w" regionAsOutput="_Soz-Ea1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-KK1MEeOdBunZhTRw1w" name="Feature(Fork(set2)@448a4e95)" outgoing="_Soz-Ka1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-Ka1MEeOdBunZhTRw1w" source="_Soz-KK1MEeOdBunZhTRw1w" target="_Soz-Ea1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Kq1MEeOdBunZhTRw1w" source="_Soz-Da1MEeOdBunZhTRw1w" target="_Soz-Ba1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-K61MEeOdBunZhTRw1w" source="_Soz-J61MEeOdBunZhTRw1w" target="_Soz-CK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-LK1MEeOdBunZhTRw1w" source="_Soz-C61MEeOdBunZhTRw1w" target="_Soz-BK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-La1MEeOdBunZhTRw1w" name="ExpressionStatement@2dc829ef" outgoing="_Soz_Jq1MEeOdBunZhTRw1w" incoming="_Soz_JK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz-Lq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Soz-VK1MEeOdBunZhTRw1w" behavior="_So3oQ61MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz-L61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Soz-Ua1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-MK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Ma1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz-Mq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Soz-Uq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-M61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-NK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz-Na1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Soz-U61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Nq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-N61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-OK1MEeOdBunZhTRw1w" name="Tuple@debcdda" outgoing="_Soz-VK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-Oa1MEeOdBunZhTRw1w" name="Value(&quot;list.size()&quot;)">
                <result xmi:id="_Soz-Oq1MEeOdBunZhTRw1w" name="Value(&quot;list.size()&quot;).result" outgoing="_Soz-Ua1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-O61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-PK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz-Pa1MEeOdBunZhTRw1w" value="list.size()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz-Pq1MEeOdBunZhTRw1w" name="Collect(Call(size))" incoming="_Soz-UK1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz-Sa1MEeOdBunZhTRw1w" inputElement="_Soz-SK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz-P61MEeOdBunZhTRw1w" name="Call(size)" operation="_So1MIq1MEeOdBunZhTRw1w">
                  <result xmi:id="_Soz-QK1MEeOdBunZhTRw1w" name="Call(size).result(null)" outgoing="_Soz-R61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Qa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Qq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Soz-Q61MEeOdBunZhTRw1w" name="Call(size).target" incoming="_Soz-Rq1MEeOdBunZhTRw1w" type="_So1Lvq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-RK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Ra1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Rq1MEeOdBunZhTRw1w" source="_Soz-SK1MEeOdBunZhTRw1w" target="_Soz-Q61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-R61MEeOdBunZhTRw1w" source="_Soz-QK1MEeOdBunZhTRw1w" target="_Soz-Sa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-SK1MEeOdBunZhTRw1w" name="Collect(Call(size)).inputElement" outgoing="_Soz-Rq1MEeOdBunZhTRw1w" incoming="_Soz_I61MEeOdBunZhTRw1w" regionAsInput="_Soz-Pq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-Sa1MEeOdBunZhTRw1w" name="Collect(Call(size)).outputElement" outgoing="_Soz-Uq1MEeOdBunZhTRw1w" incoming="_Soz-R61MEeOdBunZhTRw1w" regionAsOutput="_Soz-Pq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-Sq1MEeOdBunZhTRw1w" name="Feature(Fork(list)@542d3b5a)" outgoing="_Soz-UK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-S61MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Soz-TK1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Soz-U61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Ta1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Tq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Soz-T61MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-UK1MEeOdBunZhTRw1w" source="_Soz-Sq1MEeOdBunZhTRw1w" target="_Soz-Pq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Ua1MEeOdBunZhTRw1w" source="_Soz-Oq1MEeOdBunZhTRw1w" target="_Soz-L61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-Uq1MEeOdBunZhTRw1w" source="_Soz-Sa1MEeOdBunZhTRw1w" target="_Soz-Mq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-U61MEeOdBunZhTRw1w" source="_Soz-TK1MEeOdBunZhTRw1w" target="_Soz-Na1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-VK1MEeOdBunZhTRw1w" source="_Soz-OK1MEeOdBunZhTRw1w" target="_Soz-Lq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-Va1MEeOdBunZhTRw1w" name="ExpressionStatement@43b86dc2" outgoing="_Soz_KK1MEeOdBunZhTRw1w" incoming="_Soz_Jq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz-Vq1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz-pK1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz-V61MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz-oa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-WK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-Wa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz-Wq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz-oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-W61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-XK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz-Xa1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz-o61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Xq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-X61MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-YK1MEeOdBunZhTRw1w" name="Tuple@ce20d76" outgoing="_Soz-pK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-Ya1MEeOdBunZhTRw1w" name="Value(&quot;list.at(1)&quot;)">
                <result xmi:id="_Soz-Yq1MEeOdBunZhTRw1w" name="Value(&quot;list.at(1)&quot;).result" outgoing="_Soz-oa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-Y61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-ZK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz-Za1MEeOdBunZhTRw1w" value="list.at(1)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz-Zq1MEeOdBunZhTRw1w" name="Collect(Call(toSequence))" incoming="_Soz-oK1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz-ca1MEeOdBunZhTRw1w" inputElement="_Soz-cK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz-Z61MEeOdBunZhTRw1w" name="Call(toSequence)" operation="_So1LGK1MEeOdBunZhTRw1w">
                  <result xmi:id="_Soz-aK1MEeOdBunZhTRw1w" name="Call(toSequence).result(null)" outgoing="_Soz-b61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-aa1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-aq1MEeOdBunZhTRw1w" value="*"/>
                  </result>
                  <target xmi:id="_Soz-a61MEeOdBunZhTRw1w" name="Call(toSequence).target" incoming="_Soz-bq1MEeOdBunZhTRw1w" type="_So1KsK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-bK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-ba1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-bq1MEeOdBunZhTRw1w" source="_Soz-cK1MEeOdBunZhTRw1w" target="_Soz-a61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-b61MEeOdBunZhTRw1w" source="_Soz-aK1MEeOdBunZhTRw1w" target="_Soz-ca1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-cK1MEeOdBunZhTRw1w" name="Collect(Call(toSequence)).inputElement" outgoing="_Soz-bq1MEeOdBunZhTRw1w" incoming="_Soz-n61MEeOdBunZhTRw1w" regionAsInput="_Soz-Zq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-ca1MEeOdBunZhTRw1w" name="Collect(Call(toSequence)).outputElement" outgoing="_Soz-oq1MEeOdBunZhTRw1w" incoming="_Soz-b61MEeOdBunZhTRw1w" regionAsOutput="_Soz-Zq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-cq1MEeOdBunZhTRw1w" name="Feature(Collect(Call(at)).outputElement)" outgoing="_Soz-oK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz-c61MEeOdBunZhTRw1w" name="Collect(Call(at))" incoming="_Soz-i61MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz-ia1MEeOdBunZhTRw1w" inputElement="_Soz-iK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_Soz-dK1MEeOdBunZhTRw1w" name="Call(at)" incoming="_Soz-ha1MEeOdBunZhTRw1w" operation="_So1LSq1MEeOdBunZhTRw1w">
                    <argument xmi:id="_Soz-da1MEeOdBunZhTRw1w" name="Call(at).argument(index)" incoming="_Soz-hK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-dq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-d61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_Soz-eK1MEeOdBunZhTRw1w" name="Call(at).result(null)" outgoing="_Soz-h61MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-ea1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-eq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <target xmi:id="_Soz-e61MEeOdBunZhTRw1w" name="Call(at).target" incoming="_Soz-hq1MEeOdBunZhTRw1w" type="_So1LKq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-fK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-fa1MEeOdBunZhTRw1w" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-fq1MEeOdBunZhTRw1w" name="Tuple@652b683c" outgoing="_Soz-ha1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-f61MEeOdBunZhTRw1w" name="Value(1)">
                      <result xmi:id="_Soz-gK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Soz-hK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-ga1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-gq1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Soz-g61MEeOdBunZhTRw1w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-hK1MEeOdBunZhTRw1w" source="_Soz-gK1MEeOdBunZhTRw1w" target="_Soz-da1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-ha1MEeOdBunZhTRw1w" source="_Soz-fq1MEeOdBunZhTRw1w" target="_Soz-dK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-hq1MEeOdBunZhTRw1w" source="_Soz-iK1MEeOdBunZhTRw1w" target="_Soz-e61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-h61MEeOdBunZhTRw1w" source="_Soz-eK1MEeOdBunZhTRw1w" target="_Soz-ia1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-iK1MEeOdBunZhTRw1w" name="Collect(Call(at)).inputElement" outgoing="_Soz-hq1MEeOdBunZhTRw1w" incoming="_Soz_Ja1MEeOdBunZhTRw1w" regionAsInput="_Soz-c61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-ia1MEeOdBunZhTRw1w" name="Collect(Call(at)).outputElement" outgoing="_Soz-n61MEeOdBunZhTRw1w" incoming="_Soz-h61MEeOdBunZhTRw1w" regionAsOutput="_Soz-c61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-iq1MEeOdBunZhTRw1w" name="Feature(Fork(list)@542d3b5a)" outgoing="_Soz-i61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-i61MEeOdBunZhTRw1w" source="_Soz-iq1MEeOdBunZhTRw1w" target="_Soz-c61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-jK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@12a3105b">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-ja1MEeOdBunZhTRw1w" name="SequenceExpressionList@593088de#1" outgoing="_Soz-nK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-jq1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_Soz-j61MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;).result" outgoing="_Soz-na1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-kK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-ka1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz-kq1MEeOdBunZhTRw1w" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-k61MEeOdBunZhTRw1w" name="SequenceExpressionList@593088de#2" incoming="_Soz-nK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-lK1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_Soz-la1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;).result" outgoing="_Soz-nq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-lq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-l61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz-mK1MEeOdBunZhTRw1w" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz-ma1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@12a3105b.output" outgoing="_Soz-o61MEeOdBunZhTRw1w" incoming="_Soz-na1MEeOdBunZhTRw1w _Soz-nq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-mq1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-m61MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-nK1MEeOdBunZhTRw1w" source="_Soz-ja1MEeOdBunZhTRw1w" target="_Soz-k61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-na1MEeOdBunZhTRw1w" source="_Soz-j61MEeOdBunZhTRw1w" target="_Soz-ma1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-nq1MEeOdBunZhTRw1w" source="_Soz-la1MEeOdBunZhTRw1w" target="_Soz-ma1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-n61MEeOdBunZhTRw1w" source="_Soz-ia1MEeOdBunZhTRw1w" target="_Soz-cK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-oK1MEeOdBunZhTRw1w" source="_Soz-cq1MEeOdBunZhTRw1w" target="_Soz-Zq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-oa1MEeOdBunZhTRw1w" source="_Soz-Yq1MEeOdBunZhTRw1w" target="_Soz-V61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-oq1MEeOdBunZhTRw1w" source="_Soz-ca1MEeOdBunZhTRw1w" target="_Soz-Wq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-o61MEeOdBunZhTRw1w" source="_Soz-ma1MEeOdBunZhTRw1w" target="_Soz-Xa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-pK1MEeOdBunZhTRw1w" source="_Soz-YK1MEeOdBunZhTRw1w" target="_Soz-Vq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-pa1MEeOdBunZhTRw1w" name="ExpressionStatement@474dd974" outgoing="_Soz_Ka1MEeOdBunZhTRw1w" incoming="_Soz_KK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz-pq1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Soz-9K1MEeOdBunZhTRw1w" behavior="_So3mHa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz-p61MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Soz-8a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-qK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-qa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Soz-qq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Soz-8q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-q61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-rK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Soz-ra1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Soz-861MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-rq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-r61MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-sK1MEeOdBunZhTRw1w" name="Tuple@4a7bcd5d" outgoing="_Soz-9K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-sa1MEeOdBunZhTRw1w" name="Value(&quot;list.at(2)&quot;)">
                <result xmi:id="_Soz-sq1MEeOdBunZhTRw1w" name="Value(&quot;list.at(2)&quot;).result" outgoing="_Soz-8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-s61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-tK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz-ta1MEeOdBunZhTRw1w" value="list.at(2)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz-tq1MEeOdBunZhTRw1w" name="Collect(Call(toSequence))" incoming="_Soz-8K1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz-wa1MEeOdBunZhTRw1w" inputElement="_Soz-wK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_Soz-t61MEeOdBunZhTRw1w" name="Call(toSequence)" operation="_So1LGK1MEeOdBunZhTRw1w">
                  <result xmi:id="_Soz-uK1MEeOdBunZhTRw1w" name="Call(toSequence).result(null)" outgoing="_Soz-v61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-ua1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-uq1MEeOdBunZhTRw1w" value="*"/>
                  </result>
                  <target xmi:id="_Soz-u61MEeOdBunZhTRw1w" name="Call(toSequence).target" incoming="_Soz-vq1MEeOdBunZhTRw1w" type="_So1KsK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-vK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-va1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-vq1MEeOdBunZhTRw1w" source="_Soz-wK1MEeOdBunZhTRw1w" target="_Soz-u61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-v61MEeOdBunZhTRw1w" source="_Soz-uK1MEeOdBunZhTRw1w" target="_Soz-wa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-wK1MEeOdBunZhTRw1w" name="Collect(Call(toSequence)).inputElement" outgoing="_Soz-vq1MEeOdBunZhTRw1w" incoming="_Soz-761MEeOdBunZhTRw1w" regionAsInput="_Soz-tq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-wa1MEeOdBunZhTRw1w" name="Collect(Call(toSequence)).outputElement" outgoing="_Soz-8q1MEeOdBunZhTRw1w" incoming="_Soz-v61MEeOdBunZhTRw1w" regionAsOutput="_Soz-tq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-wq1MEeOdBunZhTRw1w" name="Feature(Collect(Call(at)).outputElement)" outgoing="_Soz-8K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ExpansionRegion" xmi:id="_Soz-w61MEeOdBunZhTRw1w" name="Collect(Call(at))" incoming="_Soz-261MEeOdBunZhTRw1w" mode="parallel" outputElement="_Soz-2a1MEeOdBunZhTRw1w" inputElement="_Soz-2K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_Soz-xK1MEeOdBunZhTRw1w" name="Call(at)" incoming="_Soz-1a1MEeOdBunZhTRw1w" operation="_So1LSq1MEeOdBunZhTRw1w">
                    <argument xmi:id="_Soz-xa1MEeOdBunZhTRw1w" name="Call(at).argument(index)" incoming="_Soz-1K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-xq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-x61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_Soz-yK1MEeOdBunZhTRw1w" name="Call(at).result(null)" outgoing="_Soz-161MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-ya1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-yq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <target xmi:id="_Soz-y61MEeOdBunZhTRw1w" name="Call(at).target" incoming="_Soz-1q1MEeOdBunZhTRw1w" type="_So1LKq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-zK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-za1MEeOdBunZhTRw1w" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-zq1MEeOdBunZhTRw1w" name="Tuple@305f6a58" outgoing="_Soz-1a1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-z61MEeOdBunZhTRw1w" name="Value(2)">
                      <result xmi:id="_Soz-0K1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Soz-1K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-0a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-0q1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Soz-061MEeOdBunZhTRw1w" value="2">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-1K1MEeOdBunZhTRw1w" source="_Soz-0K1MEeOdBunZhTRw1w" target="_Soz-xa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-1a1MEeOdBunZhTRw1w" source="_Soz-zq1MEeOdBunZhTRw1w" target="_Soz-xK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-1q1MEeOdBunZhTRw1w" source="_Soz-2K1MEeOdBunZhTRw1w" target="_Soz-y61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-161MEeOdBunZhTRw1w" source="_Soz-yK1MEeOdBunZhTRw1w" target="_Soz-2a1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-2K1MEeOdBunZhTRw1w" name="Collect(Call(at)).inputElement" outgoing="_Soz-1q1MEeOdBunZhTRw1w" incoming="_Soz_J61MEeOdBunZhTRw1w" regionAsInput="_Soz-w61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Soz-2a1MEeOdBunZhTRw1w" name="Collect(Call(at)).outputElement" outgoing="_Soz-761MEeOdBunZhTRw1w" incoming="_Soz-161MEeOdBunZhTRw1w" regionAsOutput="_Soz-w61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-2q1MEeOdBunZhTRw1w" name="Feature(Fork(list)@542d3b5a)" outgoing="_Soz-261MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-261MEeOdBunZhTRw1w" source="_Soz-2q1MEeOdBunZhTRw1w" target="_Soz-w61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-3K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@6a6832b1">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-3a1MEeOdBunZhTRw1w" name="SequenceExpressionList@1f55bc48#1" outgoing="_Soz-7K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-3q1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_Soz-361MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;).result" outgoing="_Soz-7a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-4K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-4a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz-4q1MEeOdBunZhTRw1w" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-461MEeOdBunZhTRw1w" name="SequenceExpressionList@1f55bc48#2" incoming="_Soz-7K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-5K1MEeOdBunZhTRw1w" name="Value(&quot;raspberry&quot;)">
                    <result xmi:id="_Soz-5a1MEeOdBunZhTRw1w" name="Value(&quot;raspberry&quot;).result" outgoing="_Soz-7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-5q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-561MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz-6K1MEeOdBunZhTRw1w" value="raspberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz-6a1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@6a6832b1.output" outgoing="_Soz-861MEeOdBunZhTRw1w" incoming="_Soz-7a1MEeOdBunZhTRw1w _Soz-7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz-6q1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-661MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-7K1MEeOdBunZhTRw1w" source="_Soz-3a1MEeOdBunZhTRw1w" target="_Soz-461MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-7a1MEeOdBunZhTRw1w" source="_Soz-361MEeOdBunZhTRw1w" target="_Soz-6a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-7q1MEeOdBunZhTRw1w" source="_Soz-5a1MEeOdBunZhTRw1w" target="_Soz-6a1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-761MEeOdBunZhTRw1w" source="_Soz-2a1MEeOdBunZhTRw1w" target="_Soz-wK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-8K1MEeOdBunZhTRw1w" source="_Soz-wq1MEeOdBunZhTRw1w" target="_Soz-tq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-8a1MEeOdBunZhTRw1w" source="_Soz-sq1MEeOdBunZhTRw1w" target="_Soz-p61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-8q1MEeOdBunZhTRw1w" source="_Soz-wa1MEeOdBunZhTRw1w" target="_Soz-qq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz-861MEeOdBunZhTRw1w" source="_Soz-6a1MEeOdBunZhTRw1w" target="_Soz-ra1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz-9K1MEeOdBunZhTRw1w" source="_Soz-sK1MEeOdBunZhTRw1w" target="_Soz-pq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-9a1MEeOdBunZhTRw1w" name="ExpressionStatement@43c911ed" incoming="_Soz_Ka1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Soz-9q1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_Soz_BK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Soz-961MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_Soz_A61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz--K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz--a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Soz--q1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz--61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz-_K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz-_a1MEeOdBunZhTRw1w" name="Tuple@23644cf3" outgoing="_Soz_BK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz-_q1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;)">
                <result xmi:id="_Soz-_61MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;).result" outgoing="_Soz_A61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_AK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Aa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Soz_Aq1MEeOdBunZhTRw1w" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_A61MEeOdBunZhTRw1w" source="_Soz-_61MEeOdBunZhTRw1w" target="_Soz-961MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_BK1MEeOdBunZhTRw1w" source="_Soz-_a1MEeOdBunZhTRw1w" target="_Soz-9q1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ba1MEeOdBunZhTRw1w" source="_Soz7l61MEeOdBunZhTRw1w" target="_Soz7ta1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Bq1MEeOdBunZhTRw1w" source="_SozUfK1MEeOdBunZhTRw1w" target="_Soz7sK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_B61MEeOdBunZhTRw1w" source="_Soz7mK1MEeOdBunZhTRw1w" target="_Soz75K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_CK1MEeOdBunZhTRw1w" source="_Soz7sK1MEeOdBunZhTRw1w" target="_Soz7361MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ca1MEeOdBunZhTRw1w" source="_Soz7ma1MEeOdBunZhTRw1w" target="_Soz8E61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Cq1MEeOdBunZhTRw1w" source="_Soz7361MEeOdBunZhTRw1w" target="_Soz8Dq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_C61MEeOdBunZhTRw1w" source="_Soz7mq1MEeOdBunZhTRw1w" target="_Soz8Qq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_DK1MEeOdBunZhTRw1w" source="_Soz8Dq1MEeOdBunZhTRw1w" target="_Soz8Pa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Da1MEeOdBunZhTRw1w" source="_Soz7m61MEeOdBunZhTRw1w" target="_Soz8ca1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Dq1MEeOdBunZhTRw1w" source="_Soz8Pa1MEeOdBunZhTRw1w" target="_Soz8bK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_D61MEeOdBunZhTRw1w" source="_Soz7nK1MEeOdBunZhTRw1w" target="_Soz8oK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_EK1MEeOdBunZhTRw1w" source="_Soz8bK1MEeOdBunZhTRw1w" target="_Soz8m61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ea1MEeOdBunZhTRw1w" source="_Soz7na1MEeOdBunZhTRw1w" target="_Soz82a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Eq1MEeOdBunZhTRw1w" source="_Soz8m61MEeOdBunZhTRw1w" target="_Soz8yq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_E61MEeOdBunZhTRw1w" source="_Soz7nq1MEeOdBunZhTRw1w" target="_Soz8561MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_FK1MEeOdBunZhTRw1w" source="_Soz8yq1MEeOdBunZhTRw1w" target="_Soz84q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Fa1MEeOdBunZhTRw1w" source="_Soz7n61MEeOdBunZhTRw1w" target="_Soz9DK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Fq1MEeOdBunZhTRw1w" source="_Soz84q1MEeOdBunZhTRw1w" target="_Soz8-61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_F61MEeOdBunZhTRw1w" source="_Soz7oK1MEeOdBunZhTRw1w" target="_Soz9VK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_GK1MEeOdBunZhTRw1w" source="_Soz8-61MEeOdBunZhTRw1w" target="_Soz9Ma1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ga1MEeOdBunZhTRw1w" source="_Soz7oK1MEeOdBunZhTRw1w" target="_Soz9fq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Gq1MEeOdBunZhTRw1w" source="_Soz9Ma1MEeOdBunZhTRw1w" target="_Soz9W61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_G61MEeOdBunZhTRw1w" source="_Soz7oK1MEeOdBunZhTRw1w" target="_Soz9qK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_HK1MEeOdBunZhTRw1w" source="_Soz9W61MEeOdBunZhTRw1w" target="_Soz9ha1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ha1MEeOdBunZhTRw1w" source="_Soz7oa1MEeOdBunZhTRw1w" target="_Soz90q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Hq1MEeOdBunZhTRw1w" source="_Soz9ha1MEeOdBunZhTRw1w" target="_Soz9r61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_H61MEeOdBunZhTRw1w" source="_Soz7oa1MEeOdBunZhTRw1w" target="_Soz9_K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_IK1MEeOdBunZhTRw1w" source="_Soz9r61MEeOdBunZhTRw1w" target="_Soz92a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ia1MEeOdBunZhTRw1w" source="_Soz7oa1MEeOdBunZhTRw1w" target="_Soz-Jq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Iq1MEeOdBunZhTRw1w" source="_Soz92a1MEeOdBunZhTRw1w" target="_Soz-A61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_I61MEeOdBunZhTRw1w" source="_Soz7oq1MEeOdBunZhTRw1w" target="_Soz-SK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_JK1MEeOdBunZhTRw1w" source="_Soz-A61MEeOdBunZhTRw1w" target="_Soz-La1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ja1MEeOdBunZhTRw1w" source="_Soz7oq1MEeOdBunZhTRw1w" target="_Soz-iK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Jq1MEeOdBunZhTRw1w" source="_Soz-La1MEeOdBunZhTRw1w" target="_Soz-Va1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_J61MEeOdBunZhTRw1w" source="_Soz7oq1MEeOdBunZhTRw1w" target="_Soz-2K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_KK1MEeOdBunZhTRw1w" source="_Soz-Va1MEeOdBunZhTRw1w" target="_Soz-pa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Ka1MEeOdBunZhTRw1w" source="_Soz-pa1MEeOdBunZhTRw1w" target="_Soz-9a1MEeOdBunZhTRw1w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Soz_Kq1MEeOdBunZhTRw1w" name="getList$method$1" specification="_So0ljq1MEeOdBunZhTRw1w" group="_Soz_Mq1MEeOdBunZhTRw1w" node="_Soz_MK1MEeOdBunZhTRw1w _Soz_Ma1MEeOdBunZhTRw1w _Soz_Mq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_Soz_K61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_LK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_La1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Lq1MEeOdBunZhTRw1w" source="_Soz_M61MEeOdBunZhTRw1w" target="_Soz_Ma1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_L61MEeOdBunZhTRw1w" source="_Soz_T61MEeOdBunZhTRw1w" target="_Soz_MK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_Soz_Mq1MEeOdBunZhTRw1w" name="Body(getList$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_M61MEeOdBunZhTRw1w" name="ReturnStatement@73ae8f8b" outgoing="_Soz_Lq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_NK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@31440ee9">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_Na1MEeOdBunZhTRw1w" name="SequenceExpressionList@4106bed#1" outgoing="_Soz_Sq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_Nq1MEeOdBunZhTRw1w" name="Value(4)">
                  <result xmi:id="_Soz_N61MEeOdBunZhTRw1w" name="Value(4).result" outgoing="_Soz_TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_OK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Oa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Soz_Oq1MEeOdBunZhTRw1w" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_O61MEeOdBunZhTRw1w" name="SequenceExpressionList@4106bed#2" outgoing="_Soz_S61MEeOdBunZhTRw1w" incoming="_Soz_Sq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_PK1MEeOdBunZhTRw1w" name="Value(5)">
                  <result xmi:id="_Soz_Pa1MEeOdBunZhTRw1w" name="Value(5).result" outgoing="_Soz_Ta1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_Pq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_P61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Soz_QK1MEeOdBunZhTRw1w" value="5">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_Qa1MEeOdBunZhTRw1w" name="SequenceExpressionList@4106bed#3" incoming="_Soz_S61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_Qq1MEeOdBunZhTRw1w" name="Value(6)">
                  <result xmi:id="_Soz_Q61MEeOdBunZhTRw1w" name="Value(6).result" outgoing="_Soz_Tq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_RK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Ra1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Soz_Rq1MEeOdBunZhTRw1w" value="6">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <structuredNodeOutput xmi:id="_Soz_R61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@31440ee9.output" outgoing="_Soz_Uq1MEeOdBunZhTRw1w" incoming="_Soz_TK1MEeOdBunZhTRw1w _Soz_Ta1MEeOdBunZhTRw1w _Soz_Tq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_SK1MEeOdBunZhTRw1w" value="3"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Sa1MEeOdBunZhTRw1w" value="3"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_Sq1MEeOdBunZhTRw1w" source="_Soz_Na1MEeOdBunZhTRw1w" target="_Soz_O61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_S61MEeOdBunZhTRw1w" source="_Soz_O61MEeOdBunZhTRw1w" target="_Soz_Qa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_TK1MEeOdBunZhTRw1w" source="_Soz_N61MEeOdBunZhTRw1w" target="_Soz_R61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Ta1MEeOdBunZhTRw1w" source="_Soz_Pa1MEeOdBunZhTRw1w" target="_Soz_R61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Tq1MEeOdBunZhTRw1w" source="_Soz_Q61MEeOdBunZhTRw1w" target="_Soz_R61MEeOdBunZhTRw1w"/>
            </node>
            <structuredNodeOutput xmi:id="_Soz_T61MEeOdBunZhTRw1w" name="ReturnStatement@73ae8f8b.output" outgoing="_Soz_L61MEeOdBunZhTRw1w" incoming="_Soz_Uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_UK1MEeOdBunZhTRw1w" value="3"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Ua1MEeOdBunZhTRw1w" value="3"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_Uq1MEeOdBunZhTRw1w" source="_Soz_R61MEeOdBunZhTRw1w" target="_Soz_T61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_MK1MEeOdBunZhTRw1w" name="Return" incoming="_Soz_L61MEeOdBunZhTRw1w" parameter="_Soz_K61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_Soz_Ma1MEeOdBunZhTRw1w" name="Final" incoming="_Soz_Lq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Soz_U61MEeOdBunZhTRw1w" name="test$method$1" specification="_So0lkq1MEeOdBunZhTRw1w" group="_Soz_kK1MEeOdBunZhTRw1w" node="_Soz_hK1MEeOdBunZhTRw1w _Soz_ha1MEeOdBunZhTRw1w _Soz_hq1MEeOdBunZhTRw1w _Soz_h61MEeOdBunZhTRw1w _Soz_iK1MEeOdBunZhTRw1w _Soz_ia1MEeOdBunZhTRw1w _Soz_iq1MEeOdBunZhTRw1w _Soz_i61MEeOdBunZhTRw1w _Soz_jK1MEeOdBunZhTRw1w _Soz_ja1MEeOdBunZhTRw1w _Soz_jq1MEeOdBunZhTRw1w _Soz_j61MEeOdBunZhTRw1w _Soz_kK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_Soz_VK1MEeOdBunZhTRw1w" name="seq1" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_Va1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Vq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_V61MEeOdBunZhTRw1w" name="seq2" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_WK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Wa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_Wq1MEeOdBunZhTRw1w" name="seq3" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_W61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_XK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_Xa1MEeOdBunZhTRw1w" name="seq4" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_Xq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_X61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_YK1MEeOdBunZhTRw1w" name="seq5" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_Ya1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Yq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_Y61MEeOdBunZhTRw1w" name="seq6" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_ZK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_Za1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_Zq1MEeOdBunZhTRw1w" name="seq7" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_Z61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_aK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_aa1MEeOdBunZhTRw1w" name="x" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_aq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_a61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_bK1MEeOdBunZhTRw1w" name="customers" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_ba1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_bq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_b61MEeOdBunZhTRw1w" name="set1" type="_So0mdK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_cK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_ca1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_cq1MEeOdBunZhTRw1w" name="set2" type="_So0mdK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_c61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_dK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Soz_da1MEeOdBunZhTRw1w" name="list" type="_So1LKq1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_dq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_d61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_eK1MEeOdBunZhTRw1w" source="_So0kz61MEeOdBunZhTRw1w" target="_Soz_hK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_ea1MEeOdBunZhTRw1w" source="_So0k0q1MEeOdBunZhTRw1w" target="_Soz_ha1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_eq1MEeOdBunZhTRw1w" source="_So0k1a1MEeOdBunZhTRw1w" target="_Soz_hq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_e61MEeOdBunZhTRw1w" source="_So0k2K1MEeOdBunZhTRw1w" target="_Soz_h61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_fK1MEeOdBunZhTRw1w" source="_So0k261MEeOdBunZhTRw1w" target="_Soz_iK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_fa1MEeOdBunZhTRw1w" source="_So0k3q1MEeOdBunZhTRw1w" target="_Soz_ia1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_fq1MEeOdBunZhTRw1w" source="_So0k4a1MEeOdBunZhTRw1w" target="_Soz_iq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_f61MEeOdBunZhTRw1w" source="_So0k5K1MEeOdBunZhTRw1w" target="_Soz_i61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_gK1MEeOdBunZhTRw1w" source="_So0k561MEeOdBunZhTRw1w" target="_Soz_jK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_ga1MEeOdBunZhTRw1w" source="_So0k6q1MEeOdBunZhTRw1w" target="_Soz_ja1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_gq1MEeOdBunZhTRw1w" source="_So0k7a1MEeOdBunZhTRw1w" target="_Soz_jq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_g61MEeOdBunZhTRw1w" source="_So0k8K1MEeOdBunZhTRw1w" target="_Soz_j61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_Soz_kK1MEeOdBunZhTRw1w" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_ka1MEeOdBunZhTRw1w" name="ExpressionStatement@76bc3307" outgoing="_So0k861MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Soz_kq1MEeOdBunZhTRw1w" name="Fork(seq1)@31f237a2" outgoing="_So0lAq1MEeOdBunZhTRw1w" incoming="_Soz_r61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_k61MEeOdBunZhTRw1w" name="RightHandSide@3dba4d77">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_lK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@3dba4d77">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_la1MEeOdBunZhTRw1w" name="SequenceExpressionList@16a55a66#1" outgoing="_Soz_qq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_lq1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_Soz_l61MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;).result" outgoing="_Soz_rK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_mK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_ma1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz_mq1MEeOdBunZhTRw1w" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_m61MEeOdBunZhTRw1w" name="SequenceExpressionList@16a55a66#2" outgoing="_Soz_q61MEeOdBunZhTRw1w" incoming="_Soz_qq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_nK1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_Soz_na1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;).result" outgoing="_Soz_ra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_nq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_n61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz_oK1MEeOdBunZhTRw1w" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_oa1MEeOdBunZhTRw1w" name="SequenceExpressionList@16a55a66#3" incoming="_Soz_q61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_oq1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_Soz_o61MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;).result" outgoing="_Soz_rq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_pK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_pa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz_pq1MEeOdBunZhTRw1w" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Soz_p61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@3dba4d77.output" outgoing="_Soz_r61MEeOdBunZhTRw1w" incoming="_Soz_rK1MEeOdBunZhTRw1w _Soz_ra1MEeOdBunZhTRw1w _Soz_rq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_qK1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_qa1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_qq1MEeOdBunZhTRw1w" source="_Soz_la1MEeOdBunZhTRw1w" target="_Soz_m61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Soz_q61MEeOdBunZhTRw1w" source="_Soz_m61MEeOdBunZhTRw1w" target="_Soz_oa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_rK1MEeOdBunZhTRw1w" source="_Soz_l61MEeOdBunZhTRw1w" target="_Soz_p61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_ra1MEeOdBunZhTRw1w" source="_Soz_na1MEeOdBunZhTRw1w" target="_Soz_p61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_rq1MEeOdBunZhTRw1w" source="_Soz_o61MEeOdBunZhTRw1w" target="_Soz_p61MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Soz_r61MEeOdBunZhTRw1w" source="_Soz_p61MEeOdBunZhTRw1w" target="_Soz_kq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_sK1MEeOdBunZhTRw1w" name="ExpressionStatement@2ccb1f0b" outgoing="_So0k9K1MEeOdBunZhTRw1w" incoming="_So0k861MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Soz_sa1MEeOdBunZhTRw1w" name="Fork(seq2)@6403b85" outgoing="_So0lA61MEeOdBunZhTRw1w" incoming="_So0inq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_sq1MEeOdBunZhTRw1w" name="RightHandSide@4b632226">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_s61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@4b632226">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_tK1MEeOdBunZhTRw1w" name="SequenceExpressionList@6f307377#1" outgoing="_So0ima1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_ta1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;)">
                    <result xmi:id="_Soz_tq1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;).result" outgoing="_So0im61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_t61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_uK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz_ua1MEeOdBunZhTRw1w" value="apple">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Soz_uq1MEeOdBunZhTRw1w" name="SequenceExpressionList@6f307377#2" outgoing="_So0imq1MEeOdBunZhTRw1w" incoming="_So0ima1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Soz_u61MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;)">
                    <result xmi:id="_Soz_vK1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;).result" outgoing="_So0inK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Soz_va1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Soz_vq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_Soz_v61MEeOdBunZhTRw1w" value="orange">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ikK1MEeOdBunZhTRw1w" name="SequenceExpressionList@6f307377#3" incoming="_So0imq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0ika1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;)">
                    <result xmi:id="_So0ikq1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;).result" outgoing="_So0ina1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ik61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ilK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_So0ila1MEeOdBunZhTRw1w" value="strawberry">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_So0ilq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@4b632226.output" outgoing="_So0inq1MEeOdBunZhTRw1w" incoming="_So0im61MEeOdBunZhTRw1w _So0inK1MEeOdBunZhTRw1w _So0ina1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0il61MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0imK1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0ima1MEeOdBunZhTRw1w" source="_Soz_tK1MEeOdBunZhTRw1w" target="_Soz_uq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0imq1MEeOdBunZhTRw1w" source="_Soz_uq1MEeOdBunZhTRw1w" target="_So0ikK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0im61MEeOdBunZhTRw1w" source="_Soz_tq1MEeOdBunZhTRw1w" target="_So0ilq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0inK1MEeOdBunZhTRw1w" source="_Soz_vK1MEeOdBunZhTRw1w" target="_So0ilq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0ina1MEeOdBunZhTRw1w" source="_So0ikq1MEeOdBunZhTRw1w" target="_So0ilq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0inq1MEeOdBunZhTRw1w" source="_So0ilq1MEeOdBunZhTRw1w" target="_Soz_sa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0in61MEeOdBunZhTRw1w" name="ExpressionStatement@433af236" outgoing="_So0k9a1MEeOdBunZhTRw1w" incoming="_So0k9K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0ioK1MEeOdBunZhTRw1w" name="Fork(seq3)@1acbe4c9" outgoing="_So0lBK1MEeOdBunZhTRw1w" incoming="_So0iva1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ioa1MEeOdBunZhTRw1w" name="RightHandSide@52f3d9b5">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ioq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@52f3d9b5">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0io61MEeOdBunZhTRw1w" name="SequenceExpressionList@5c4bb4d8#1" outgoing="_So0iuK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0ipK1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_So0ipa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0iuq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ipq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ip61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0iqK1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0iqa1MEeOdBunZhTRw1w" name="SequenceExpressionList@5c4bb4d8#2" outgoing="_So0iua1MEeOdBunZhTRw1w" incoming="_So0iuK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0iqq1MEeOdBunZhTRw1w" name="Value(true)">
                    <result xmi:id="_So0iq61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So0iu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0irK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ira1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_So0irq1MEeOdBunZhTRw1w" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ir61MEeOdBunZhTRw1w" name="SequenceExpressionList@5c4bb4d8#3" incoming="_So0iua1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0isK1MEeOdBunZhTRw1w" name="Value(&quot;blah&quot;)">
                    <result xmi:id="_So0isa1MEeOdBunZhTRw1w" name="Value(&quot;blah&quot;).result" outgoing="_So0ivK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0isq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0is61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_So0itK1MEeOdBunZhTRw1w" value="blah">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_So0ita1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@52f3d9b5.output" outgoing="_So0iva1MEeOdBunZhTRw1w" incoming="_So0iuq1MEeOdBunZhTRw1w _So0iu61MEeOdBunZhTRw1w _So0ivK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0itq1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0it61MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0iuK1MEeOdBunZhTRw1w" source="_So0io61MEeOdBunZhTRw1w" target="_So0iqa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0iua1MEeOdBunZhTRw1w" source="_So0iqa1MEeOdBunZhTRw1w" target="_So0ir61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0iuq1MEeOdBunZhTRw1w" source="_So0ipa1MEeOdBunZhTRw1w" target="_So0ita1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0iu61MEeOdBunZhTRw1w" source="_So0iq61MEeOdBunZhTRw1w" target="_So0ita1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0ivK1MEeOdBunZhTRw1w" source="_So0isa1MEeOdBunZhTRw1w" target="_So0ita1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0iva1MEeOdBunZhTRw1w" source="_So0ita1MEeOdBunZhTRw1w" target="_So0ioK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ivq1MEeOdBunZhTRw1w" name="ExpressionStatement@4c943f82" outgoing="_So0k9q1MEeOdBunZhTRw1w" incoming="_So0k9a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0iv61MEeOdBunZhTRw1w" name="Fork(seq4)@c32c708" outgoing="_So0lBa1MEeOdBunZhTRw1w" incoming="_So0i3K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0iwK1MEeOdBunZhTRw1w" name="RightHandSide@18d59715">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0iwa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@18d59715">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0iwq1MEeOdBunZhTRw1w" name="SequenceExpressionList@57b6d94b#1" outgoing="_So0i161MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0iw61MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_So0ixK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0i2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ixa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ixq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0ix61MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0iyK1MEeOdBunZhTRw1w" name="SequenceExpressionList@57b6d94b#2" outgoing="_So0i2K1MEeOdBunZhTRw1w" incoming="_So0i161MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0iya1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_So0iyq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_So0i2q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0iy61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0izK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0iza1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0izq1MEeOdBunZhTRw1w" name="SequenceExpressionList@57b6d94b#3" incoming="_So0i2K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0iz61MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_So0i0K1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_So0i261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0i0a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0i0q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0i061MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_So0i1K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@18d59715.output" outgoing="_So0i3K1MEeOdBunZhTRw1w" incoming="_So0i2a1MEeOdBunZhTRw1w _So0i2q1MEeOdBunZhTRw1w _So0i261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0i1a1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0i1q1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0i161MEeOdBunZhTRw1w" source="_So0iwq1MEeOdBunZhTRw1w" target="_So0iyK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0i2K1MEeOdBunZhTRw1w" source="_So0iyK1MEeOdBunZhTRw1w" target="_So0izq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i2a1MEeOdBunZhTRw1w" source="_So0ixK1MEeOdBunZhTRw1w" target="_So0i1K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i2q1MEeOdBunZhTRw1w" source="_So0iyq1MEeOdBunZhTRw1w" target="_So0i1K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i261MEeOdBunZhTRw1w" source="_So0i0K1MEeOdBunZhTRw1w" target="_So0i1K1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i3K1MEeOdBunZhTRw1w" source="_So0i1K1MEeOdBunZhTRw1w" target="_So0iv61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i3a1MEeOdBunZhTRw1w" name="ExpressionStatement@6fe94a75" outgoing="_So0k961MEeOdBunZhTRw1w" incoming="_So0k9q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0i3q1MEeOdBunZhTRw1w" name="Fork(seq5)@75436732" outgoing="_So0lBq1MEeOdBunZhTRw1w" incoming="_So0i-61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i361MEeOdBunZhTRw1w" name="RightHandSide@3d1780b9">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i4K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@3d1780b9">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i4a1MEeOdBunZhTRw1w" name="SequenceExpressionList@3ae8d3e9#1" outgoing="_So0i9q1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0i4q1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_So0i461MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0i-K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0i5K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0i5a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0i5q1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i561MEeOdBunZhTRw1w" name="SequenceExpressionList@3ae8d3e9#2" outgoing="_So0i961MEeOdBunZhTRw1w" incoming="_So0i9q1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0i6K1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_So0i6a1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_So0i-a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0i6q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0i661MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0i7K1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i7a1MEeOdBunZhTRw1w" name="SequenceExpressionList@3ae8d3e9#3" incoming="_So0i961MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0i7q1MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_So0i761MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_So0i-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0i8K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0i8a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0i8q1MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_So0i861MEeOdBunZhTRw1w" name="SequenceConstructionExpression@3d1780b9.output" outgoing="_So0i-61MEeOdBunZhTRw1w" incoming="_So0i-K1MEeOdBunZhTRw1w _So0i-a1MEeOdBunZhTRw1w _So0i-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0i9K1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0i9a1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0i9q1MEeOdBunZhTRw1w" source="_So0i4a1MEeOdBunZhTRw1w" target="_So0i561MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0i961MEeOdBunZhTRw1w" source="_So0i561MEeOdBunZhTRw1w" target="_So0i7a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i-K1MEeOdBunZhTRw1w" source="_So0i461MEeOdBunZhTRw1w" target="_So0i861MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i-a1MEeOdBunZhTRw1w" source="_So0i6a1MEeOdBunZhTRw1w" target="_So0i861MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i-q1MEeOdBunZhTRw1w" source="_So0i761MEeOdBunZhTRw1w" target="_So0i861MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0i-61MEeOdBunZhTRw1w" source="_So0i861MEeOdBunZhTRw1w" target="_So0i3q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i_K1MEeOdBunZhTRw1w" name="ExpressionStatement@6607ad6b" outgoing="_So0k-K1MEeOdBunZhTRw1w" incoming="_So0k961MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0i_a1MEeOdBunZhTRw1w" name="Fork(seq6)@507e516e" outgoing="_So0lB61MEeOdBunZhTRw1w" incoming="_So0jZK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i_q1MEeOdBunZhTRw1w" name="RightHandSide@20a8022">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0i_61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@20a8022">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jAK1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_So0jAa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0jYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jAq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jA61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_So0jBK1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jBa1MEeOdBunZhTRw1w" name="Value(3)">
                  <result xmi:id="_So0jBq1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_So0jYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jB61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jCK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_So0jCa1MEeOdBunZhTRw1w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:LoopNode" xmi:id="_So0jCq1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad" bodyOutput="_So0jJK1MEeOdBunZhTRw1w _So0jK61MEeOdBunZhTRw1w _So0jNq1MEeOdBunZhTRw1w" bodyPart="_So0jGK1MEeOdBunZhTRw1w _So0jHa1MEeOdBunZhTRw1w _So0jJ61MEeOdBunZhTRw1w _So0jL61MEeOdBunZhTRw1w" decider="_So0jFa1MEeOdBunZhTRw1w" isTestedFirst="true" test="_So0jDq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_So0jC61MEeOdBunZhTRw1w" name="Fork(SequenceRange@3eeb5ad.loopVariable()(rangeLower))" outgoing="_So0jPK1MEeOdBunZhTRw1w _So0jPq1MEeOdBunZhTRw1w _So0jQq1MEeOdBunZhTRw1w" incoming="_So0jOa1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_So0jDK1MEeOdBunZhTRw1w" name="Fork(SequenceRange@3eeb5ad.loopVariable()(rangeUpper))" outgoing="_So0jPa1MEeOdBunZhTRw1w _So0jQK1MEeOdBunZhTRw1w" incoming="_So0jOq1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_So0jDa1MEeOdBunZhTRw1w" name="Fork(SequenceRange@3eeb5ad.loopVariable()(range))" incoming="_So0jO61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0jDq1MEeOdBunZhTRw1w" name="Call(&lt;=)">
                    <argument xmi:id="_So0jD61MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_So0jPK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jEK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jEa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So0jEq1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_So0jPa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jE61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jFK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So0jFa1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jFq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jF61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jGK1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_So0jGa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0jP61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jGq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jG61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_So0jHK1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0jHa1MEeOdBunZhTRw1w" name="Call(+)">
                    <argument xmi:id="_So0jHq1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_So0jPq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jH61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jIK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So0jIa1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_So0jP61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jIq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jI61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So0jJK1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jJa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jJq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jJ61MEeOdBunZhTRw1w" name="Node(SequenceRange@3eeb5ad.loopVariable()(rangeUpper)">
                    <structuredNodeInput xmi:id="_So0jKK1MEeOdBunZhTRw1w" name="Node(SequenceRange@3eeb5ad.loopVariable()(rangeUpper).input" outgoing="_So0jLq1MEeOdBunZhTRw1w" incoming="_So0jQK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jKa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jKq1MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_So0jK61MEeOdBunZhTRw1w" name="Node(SequenceRange@3eeb5ad.loopVariable()(rangeUpper).output" incoming="_So0jLq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jLK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jLa1MEeOdBunZhTRw1w" value="1"/>
                    </structuredNodeOutput>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jLq1MEeOdBunZhTRw1w" source="_So0jKK1MEeOdBunZhTRw1w" target="_So0jK61MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0jL61MEeOdBunZhTRw1w" name="Call(Including)">
                    <argument xmi:id="_So0jMK1MEeOdBunZhTRw1w" name="Call(Including).argument(seq)" incoming="_So0jQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jMa1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jMq1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_So0jM61MEeOdBunZhTRw1w" name="Call(Including).argument(element)" incoming="_So0jQq1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jNK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jNa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So0jNq1MEeOdBunZhTRw1w" name="Call(Including).result()" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jN61MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jOK1MEeOdBunZhTRw1w" value="*"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jOa1MEeOdBunZhTRw1w" source="_So0jQ61MEeOdBunZhTRw1w" target="_So0jC61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jOq1MEeOdBunZhTRw1w" source="_So0jRq1MEeOdBunZhTRw1w" target="_So0jDK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jO61MEeOdBunZhTRw1w" source="_So0jSa1MEeOdBunZhTRw1w" target="_So0jDa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jPK1MEeOdBunZhTRw1w" source="_So0jC61MEeOdBunZhTRw1w" target="_So0jD61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jPa1MEeOdBunZhTRw1w" source="_So0jDK1MEeOdBunZhTRw1w" target="_So0jEq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jPq1MEeOdBunZhTRw1w" source="_So0jC61MEeOdBunZhTRw1w" target="_So0jHq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jP61MEeOdBunZhTRw1w" source="_So0jGa1MEeOdBunZhTRw1w" target="_So0jIa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jQK1MEeOdBunZhTRw1w" source="_So0jDK1MEeOdBunZhTRw1w" target="_So0jKK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jQa1MEeOdBunZhTRw1w" source="_So0jSa1MEeOdBunZhTRw1w" target="_So0jMK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jQq1MEeOdBunZhTRw1w" source="_So0jC61MEeOdBunZhTRw1w" target="_So0jM61MEeOdBunZhTRw1w"/>
                  <loopVariable xmi:id="_So0jQ61MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.loopVariable()(rangeLower)" outgoing="_So0jOa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jRK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jRa1MEeOdBunZhTRw1w" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_So0jRq1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.loopVariable()(rangeUpper)" outgoing="_So0jOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jR61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jSK1MEeOdBunZhTRw1w" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_So0jSa1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.loopVariable()(range)" outgoing="_So0jO61MEeOdBunZhTRw1w _So0jQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jSq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jS61MEeOdBunZhTRw1w" value="*"/>
                  </loopVariable>
                  <loopVariableInput xmi:id="_So0jTK1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.loopVariableInput(rangeLower)" incoming="_So0jYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jTa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jTq1MEeOdBunZhTRw1w" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_So0jT61MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.loopVariableInput(rangeUpper)" incoming="_So0jYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jUK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jUa1MEeOdBunZhTRw1w" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_So0jUq1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.loopVariableInput(range)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jU61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jVK1MEeOdBunZhTRw1w" value="*"/>
                  </loopVariableInput>
                  <result xmi:id="_So0jVa1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.result(rangeLower)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jVq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jV61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <result xmi:id="_So0jWK1MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.result(rangeUpper)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jWa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jWq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <result xmi:id="_So0jW61MEeOdBunZhTRw1w" name="SequenceRange@3eeb5ad.result(range)" outgoing="_So0jY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jXK1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jXa1MEeOdBunZhTRw1w" value="*"/>
                  </result>
                </node>
                <structuredNodeOutput xmi:id="_So0jXq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@20a8022.output" outgoing="_So0jZK1MEeOdBunZhTRw1w" incoming="_So0jY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jX61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jYK1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jYa1MEeOdBunZhTRw1w" source="_So0jAa1MEeOdBunZhTRw1w" target="_So0jTK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jYq1MEeOdBunZhTRw1w" source="_So0jBq1MEeOdBunZhTRw1w" target="_So0jT61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jY61MEeOdBunZhTRw1w" source="_So0jW61MEeOdBunZhTRw1w" target="_So0jXq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jZK1MEeOdBunZhTRw1w" source="_So0jXq1MEeOdBunZhTRw1w" target="_So0i_a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jZa1MEeOdBunZhTRw1w" name="ExpressionStatement@443b9b37" outgoing="_So0k-a1MEeOdBunZhTRw1w" incoming="_So0k-K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0jZq1MEeOdBunZhTRw1w" name="Fork(seq7)@381a4e07" outgoing="_So0lCK1MEeOdBunZhTRw1w" incoming="_So0jba1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jZ61MEeOdBunZhTRw1w" name="RightHandSide@46f8ca57">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jaK1MEeOdBunZhTRw1w" name="Value(null)">
                <result xmi:id="_So0jaa1MEeOdBunZhTRw1w" name="Value(null).result" outgoing="_So0jba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jaq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ja61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_So0jbK1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jba1MEeOdBunZhTRw1w" source="_So0jaa1MEeOdBunZhTRw1w" target="_So0jZq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jbq1MEeOdBunZhTRw1w" name="ExpressionStatement@5f71ada9" outgoing="_So0k-q1MEeOdBunZhTRw1w" incoming="_So0k-a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0jb61MEeOdBunZhTRw1w" name="Fork(x)@6d6935c4" outgoing="_So0lCa1MEeOdBunZhTRw1w" incoming="_So0jkq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jcK1MEeOdBunZhTRw1w" name="RightHandSide@16490efa">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0jca1MEeOdBunZhTRw1w" name="Call(At)" incoming="_So0jkK1MEeOdBunZhTRw1w">
                <argument xmi:id="_So0jcq1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_So0jjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jc61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jdK1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <argument xmi:id="_So0jda1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_So0jka1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jdq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jd61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So0jeK1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_So0jkq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jea1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jeq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0je61MEeOdBunZhTRw1w" name="Tuple@36e8ac52" outgoing="_So0jkK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_So0jfK1MEeOdBunZhTRw1w" name="Call(getList)" operation="_So0ljq1MEeOdBunZhTRw1w">
                  <result xmi:id="_So0jfa1MEeOdBunZhTRw1w" name="Call(getList).result()" outgoing="_So0jjq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jfq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jf61MEeOdBunZhTRw1w" value="*"/>
                  </result>
                  <target xmi:id="_So0jgK1MEeOdBunZhTRw1w" name="Call(getList).target" incoming="_So0jjK1MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jga1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jgq1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ReadSelfAction" xmi:id="_So0jg61MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_So0jhK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So0jjK1MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jha1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jhq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jh61MEeOdBunZhTRw1w" name="Value(2)">
                  <result xmi:id="_So0jiK1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_So0jj61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jia1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jiq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_So0ji61MEeOdBunZhTRw1w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jjK1MEeOdBunZhTRw1w" source="_So0jhK1MEeOdBunZhTRw1w" target="_So0jgK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So0jja1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_So0jka1MEeOdBunZhTRw1w" incoming="_So0jj61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jjq1MEeOdBunZhTRw1w" source="_So0jfa1MEeOdBunZhTRw1w" target="_So0jcq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jj61MEeOdBunZhTRw1w" source="_So0jiK1MEeOdBunZhTRw1w" target="_So0jja1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So0jkK1MEeOdBunZhTRw1w" source="_So0je61MEeOdBunZhTRw1w" target="_So0jca1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jka1MEeOdBunZhTRw1w" source="_So0jja1MEeOdBunZhTRw1w" target="_So0jda1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jkq1MEeOdBunZhTRw1w" source="_So0jeK1MEeOdBunZhTRw1w" target="_So0jb61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jk61MEeOdBunZhTRw1w" name="ExpressionStatement@3b31e379" outgoing="_So0k-61MEeOdBunZhTRw1w" incoming="_So0k-q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0jlK1MEeOdBunZhTRw1w" name="Fork(i)@6a38141" outgoing="_So0k_a1MEeOdBunZhTRw1w" incoming="_So0jm61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jla1MEeOdBunZhTRw1w" name="RightHandSide@587ad5ce">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jlq1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_So0jl61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_So0jm61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jmK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jma1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_So0jmq1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jm61MEeOdBunZhTRw1w" source="_So0jl61MEeOdBunZhTRw1w" target="_So0jlK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jnK1MEeOdBunZhTRw1w" name="ExpressionStatement@10c87411" outgoing="_So0k_q1MEeOdBunZhTRw1w" incoming="_So0k-61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0jna1MEeOdBunZhTRw1w" name="Fork(customers)@179c9b10" outgoing="_So0k_K1MEeOdBunZhTRw1w" incoming="_So0j1q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jnq1MEeOdBunZhTRw1w" name="RightHandSide@583c10b2">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jn61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@583c10b2">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0joK1MEeOdBunZhTRw1w" name="SequenceExpressionList@6d1a12a1#1" outgoing="_So0j061MEeOdBunZhTRw1w">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_So0joa1MEeOdBunZhTRw1w" name="Call(Customer)" incoming="_So0jt61MEeOdBunZhTRw1w" operation="_So0mbK1MEeOdBunZhTRw1w">
                    <argument xmi:id="_So0joq1MEeOdBunZhTRw1w" name="Call(Customer).argument(name)" incoming="_So0jtq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jo61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jpK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So0jpa1MEeOdBunZhTRw1w" name="Call(Customer).result()" outgoing="_So0j1K1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jpq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jp61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <target xmi:id="_So0jqK1MEeOdBunZhTRw1w" name="Call(Customer).target" incoming="_So0jta1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jqa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jqq1MEeOdBunZhTRw1w" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_So0jq61MEeOdBunZhTRw1w" name="Create(Customer)" classifier="_So0lvK1MEeOdBunZhTRw1w">
                    <result xmi:id="_So0jrK1MEeOdBunZhTRw1w" name="Create(Customer).result" outgoing="_So0jta1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jra1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jrq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jr61MEeOdBunZhTRw1w" name="Tuple@c2030ed" outgoing="_So0jt61MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jsK1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;)">
                      <result xmi:id="_So0jsa1MEeOdBunZhTRw1w" name="Value(&quot;A&quot;).result" outgoing="_So0jtq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jsq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0js61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_So0jtK1MEeOdBunZhTRw1w" value="A">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jta1MEeOdBunZhTRw1w" source="_So0jrK1MEeOdBunZhTRw1w" target="_So0jqK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jtq1MEeOdBunZhTRw1w" source="_So0jsa1MEeOdBunZhTRw1w" target="_So0joq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0jt61MEeOdBunZhTRw1w" source="_So0jr61MEeOdBunZhTRw1w" target="_So0joa1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0juK1MEeOdBunZhTRw1w" name="SequenceExpressionList@6d1a12a1#2" incoming="_So0j061MEeOdBunZhTRw1w">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_So0jua1MEeOdBunZhTRw1w" name="Call(Customer)" incoming="_So0jz61MEeOdBunZhTRw1w" operation="_So0mbK1MEeOdBunZhTRw1w">
                    <argument xmi:id="_So0juq1MEeOdBunZhTRw1w" name="Call(Customer).argument(name)" incoming="_So0jzq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ju61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jvK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So0jva1MEeOdBunZhTRw1w" name="Call(Customer).result()" outgoing="_So0j1a1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jvq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jv61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <target xmi:id="_So0jwK1MEeOdBunZhTRw1w" name="Call(Customer).target" incoming="_So0jza1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jwa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jwq1MEeOdBunZhTRw1w" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_So0jw61MEeOdBunZhTRw1w" name="Create(Customer)" classifier="_So0lvK1MEeOdBunZhTRw1w">
                    <result xmi:id="_So0jxK1MEeOdBunZhTRw1w" name="Create(Customer).result" outgoing="_So0jza1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jxa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jxq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0jx61MEeOdBunZhTRw1w" name="Tuple@1404c563" outgoing="_So0jz61MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0jyK1MEeOdBunZhTRw1w" name="Value(&quot;B&quot;)">
                      <result xmi:id="_So0jya1MEeOdBunZhTRw1w" name="Value(&quot;B&quot;).result" outgoing="_So0jzq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0jyq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0jy61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_So0jzK1MEeOdBunZhTRw1w" value="B">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jza1MEeOdBunZhTRw1w" source="_So0jxK1MEeOdBunZhTRw1w" target="_So0jwK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0jzq1MEeOdBunZhTRw1w" source="_So0jya1MEeOdBunZhTRw1w" target="_So0juq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0jz61MEeOdBunZhTRw1w" source="_So0jx61MEeOdBunZhTRw1w" target="_So0jua1MEeOdBunZhTRw1w"/>
                </node>
                <structuredNodeOutput xmi:id="_So0j0K1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@583c10b2.output" outgoing="_So0j1q1MEeOdBunZhTRw1w" incoming="_So0j1K1MEeOdBunZhTRw1w _So0j1a1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j0a1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j0q1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0j061MEeOdBunZhTRw1w" source="_So0joK1MEeOdBunZhTRw1w" target="_So0juK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0j1K1MEeOdBunZhTRw1w" source="_So0jpa1MEeOdBunZhTRw1w" target="_So0j0K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0j1a1MEeOdBunZhTRw1w" source="_So0jva1MEeOdBunZhTRw1w" target="_So0j0K1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0j1q1MEeOdBunZhTRw1w" source="_So0j0K1MEeOdBunZhTRw1w" target="_So0jna1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0j161MEeOdBunZhTRw1w" name="ExpressionStatement@41a8c95" outgoing="_So0k_61MEeOdBunZhTRw1w" incoming="_So0k_q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0j2K1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@db8d67b)" outgoing="_So0kAK1MEeOdBunZhTRw1w" incoming="_So0kAq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0j2a1MEeOdBunZhTRw1w" name="Index(LeftHandSide@db8d67b)" incoming="_So0kA61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0j2q1MEeOdBunZhTRw1w" name="Call(ReplacingAt)">
              <argument xmi:id="_So0j261MEeOdBunZhTRw1w" name="Call(ReplacingAt).argument(seq)" incoming="_So0k_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j3K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j3a1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_So0j3q1MEeOdBunZhTRw1w" name="Call(ReplacingAt).argument(index)" incoming="_So0k_a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j361MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j4K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So0j4a1MEeOdBunZhTRw1w" name="Call(ReplacingAt).argument(element)" incoming="_So0kAK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j4q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j461MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So0j5K1MEeOdBunZhTRw1w" name="Call(ReplacingAt).result()" outgoing="_So0kAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j5a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j5q1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_So0j561MEeOdBunZhTRw1w" name="Fork(customers)" outgoing="_So0lCq1MEeOdBunZhTRw1w" incoming="_So0kAa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0j6K1MEeOdBunZhTRw1w" name="RightHandSide@643ffd2a" outgoing="_So0kA61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_So0j6a1MEeOdBunZhTRw1w" name="Call(Customer)" incoming="_So0j_61MEeOdBunZhTRw1w" operation="_So0mbK1MEeOdBunZhTRw1w">
                <argument xmi:id="_So0j6q1MEeOdBunZhTRw1w" name="Call(Customer).argument(name)" incoming="_So0j_q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j661MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j7K1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So0j7a1MEeOdBunZhTRw1w" name="Call(Customer).result()" outgoing="_So0kAq1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j7q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j761MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_So0j8K1MEeOdBunZhTRw1w" name="Call(Customer).target" incoming="_So0j_a1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j8a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j8q1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_So0j861MEeOdBunZhTRw1w" name="Create(Customer)" classifier="_So0lvK1MEeOdBunZhTRw1w">
                <result xmi:id="_So0j9K1MEeOdBunZhTRw1w" name="Create(Customer).result" outgoing="_So0j_a1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j9a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j9q1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0j961MEeOdBunZhTRw1w" name="Tuple@6629413f" outgoing="_So0j_61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0j-K1MEeOdBunZhTRw1w" name="Value(&quot;C&quot;)">
                  <result xmi:id="_So0j-a1MEeOdBunZhTRw1w" name="Value(&quot;C&quot;).result" outgoing="_So0j_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0j-q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0j-61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_So0j_K1MEeOdBunZhTRw1w" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0j_a1MEeOdBunZhTRw1w" source="_So0j9K1MEeOdBunZhTRw1w" target="_So0j8K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0j_q1MEeOdBunZhTRw1w" source="_So0j-a1MEeOdBunZhTRw1w" target="_So0j6q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So0j_61MEeOdBunZhTRw1w" source="_So0j961MEeOdBunZhTRw1w" target="_So0j6a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kAK1MEeOdBunZhTRw1w" source="_So0j2K1MEeOdBunZhTRw1w" target="_So0j4a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kAa1MEeOdBunZhTRw1w" source="_So0j5K1MEeOdBunZhTRw1w" target="_So0j561MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kAq1MEeOdBunZhTRw1w" source="_So0j7a1MEeOdBunZhTRw1w" target="_So0j2K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So0kA61MEeOdBunZhTRw1w" source="_So0j6K1MEeOdBunZhTRw1w" target="_So0j2a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kBK1MEeOdBunZhTRw1w" name="ExpressionStatement@3606d64d" outgoing="_So0lAK1MEeOdBunZhTRw1w" incoming="_So0k_61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0kBa1MEeOdBunZhTRw1w" name="Fork(set1)@7d962e6c" outgoing="_So0lC61MEeOdBunZhTRw1w" incoming="_So0kNK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kBq1MEeOdBunZhTRw1w" name="RightHandSide@ec1f4de">
              <node xmi:type="uml:CallOperationAction" xmi:id="_So0kB61MEeOdBunZhTRw1w" name="Call(Set)" incoming="_So0kM61MEeOdBunZhTRw1w" operation="_So1yUq1MEeOdBunZhTRw1w">
                <argument xmi:id="_So0kCK1MEeOdBunZhTRw1w" name="Call(Set).argument(seq)" incoming="_So0kMq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kCa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kCq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So0kC61MEeOdBunZhTRw1w" name="Call(Set).result()" outgoing="_So0kNK1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kDK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kDa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_So0kDq1MEeOdBunZhTRw1w" name="Call(Set).target" incoming="_So0kMa1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kD61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kEK1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_So0kEa1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__)" classifier="_So1MOK1MEeOdBunZhTRw1w">
                <result xmi:id="_So0kEq1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__).result" outgoing="_So0kMa1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kE61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kFK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kFa1MEeOdBunZhTRw1w" name="Tuple@6caf9da2" outgoing="_So0kM61MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kFq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@32fbc784">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kF61MEeOdBunZhTRw1w" name="SequenceExpressionList@47144109#1" outgoing="_So0kLK1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kGK1MEeOdBunZhTRw1w" name="Value(1)">
                      <result xmi:id="_So0kGa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0kLq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kGq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kG61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_So0kHK1MEeOdBunZhTRw1w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kHa1MEeOdBunZhTRw1w" name="SequenceExpressionList@47144109#2" outgoing="_So0kLa1MEeOdBunZhTRw1w" incoming="_So0kLK1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kHq1MEeOdBunZhTRw1w" name="Value(3)">
                      <result xmi:id="_So0kH61MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_So0kL61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kIK1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kIa1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_So0kIq1MEeOdBunZhTRw1w" value="3">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kI61MEeOdBunZhTRw1w" name="SequenceExpressionList@47144109#3" incoming="_So0kLa1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kJK1MEeOdBunZhTRw1w" name="Value(45)">
                      <result xmi:id="_So0kJa1MEeOdBunZhTRw1w" name="Value(45).result" outgoing="_So0kMK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kJq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kJ61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_So0kKK1MEeOdBunZhTRw1w" value="45">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <structuredNodeOutput xmi:id="_So0kKa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@32fbc784.output" outgoing="_So0kMq1MEeOdBunZhTRw1w" incoming="_So0kLq1MEeOdBunZhTRw1w _So0kL61MEeOdBunZhTRw1w _So0kMK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kKq1MEeOdBunZhTRw1w" value="3"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kK61MEeOdBunZhTRw1w" value="3"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0kLK1MEeOdBunZhTRw1w" source="_So0kF61MEeOdBunZhTRw1w" target="_So0kHa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0kLa1MEeOdBunZhTRw1w" source="_So0kHa1MEeOdBunZhTRw1w" target="_So0kI61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kLq1MEeOdBunZhTRw1w" source="_So0kGa1MEeOdBunZhTRw1w" target="_So0kKa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kL61MEeOdBunZhTRw1w" source="_So0kH61MEeOdBunZhTRw1w" target="_So0kKa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kMK1MEeOdBunZhTRw1w" source="_So0kJa1MEeOdBunZhTRw1w" target="_So0kKa1MEeOdBunZhTRw1w"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kMa1MEeOdBunZhTRw1w" source="_So0kEq1MEeOdBunZhTRw1w" target="_So0kDq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kMq1MEeOdBunZhTRw1w" source="_So0kKa1MEeOdBunZhTRw1w" target="_So0kCK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So0kM61MEeOdBunZhTRw1w" source="_So0kFa1MEeOdBunZhTRw1w" target="_So0kB61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kNK1MEeOdBunZhTRw1w" source="_So0kC61MEeOdBunZhTRw1w" target="_So0kBa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kNa1MEeOdBunZhTRw1w" name="ExpressionStatement@5783249" outgoing="_So0lAa1MEeOdBunZhTRw1w" incoming="_So0lAK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0kNq1MEeOdBunZhTRw1w" name="Fork(set2)@52429d6c" outgoing="_So0lDK1MEeOdBunZhTRw1w" incoming="_So0kZa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kN61MEeOdBunZhTRw1w" name="RightHandSide@136d47a5">
              <node xmi:type="uml:CallOperationAction" xmi:id="_So0kOK1MEeOdBunZhTRw1w" name="Call(Set)" incoming="_So0kZK1MEeOdBunZhTRw1w" operation="_So1yUq1MEeOdBunZhTRw1w">
                <argument xmi:id="_So0kOa1MEeOdBunZhTRw1w" name="Call(Set).argument(seq)" incoming="_So0kY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kOq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kO61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So0kPK1MEeOdBunZhTRw1w" name="Call(Set).result()" outgoing="_So0kZa1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kPa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kPq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_So0kP61MEeOdBunZhTRw1w" name="Call(Set).target" incoming="_So0kYq1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kQK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kQa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_So0kQq1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__)" classifier="_So1MOK1MEeOdBunZhTRw1w">
                <result xmi:id="_So0kQ61MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__).result" outgoing="_So0kYq1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kRK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kRa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kRq1MEeOdBunZhTRw1w" name="Tuple@13364e1e" outgoing="_So0kZK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kR61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@2fe7c542">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kSK1MEeOdBunZhTRw1w" name="SequenceExpressionList@61a6a743#1" outgoing="_So0kXa1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kSa1MEeOdBunZhTRw1w" name="Value(1)">
                      <result xmi:id="_So0kSq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So0kX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kS61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kTK1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_So0kTa1MEeOdBunZhTRw1w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kTq1MEeOdBunZhTRw1w" name="SequenceExpressionList@61a6a743#2" outgoing="_So0kXq1MEeOdBunZhTRw1w" incoming="_So0kXa1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kT61MEeOdBunZhTRw1w" name="Value(3)">
                      <result xmi:id="_So0kUK1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_So0kYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kUa1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kUq1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_So0kU61MEeOdBunZhTRw1w" value="3">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kVK1MEeOdBunZhTRw1w" name="SequenceExpressionList@61a6a743#3" incoming="_So0kXq1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kVa1MEeOdBunZhTRw1w" name="Value(45)">
                      <result xmi:id="_So0kVq1MEeOdBunZhTRw1w" name="Value(45).result" outgoing="_So0kYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kV61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kWK1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_So0kWa1MEeOdBunZhTRw1w" value="45">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <structuredNodeOutput xmi:id="_So0kWq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@2fe7c542.output" outgoing="_So0kY61MEeOdBunZhTRw1w" incoming="_So0kX61MEeOdBunZhTRw1w _So0kYK1MEeOdBunZhTRw1w _So0kYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kW61MEeOdBunZhTRw1w" value="3"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kXK1MEeOdBunZhTRw1w" value="3"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0kXa1MEeOdBunZhTRw1w" source="_So0kSK1MEeOdBunZhTRw1w" target="_So0kTq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0kXq1MEeOdBunZhTRw1w" source="_So0kTq1MEeOdBunZhTRw1w" target="_So0kVK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kX61MEeOdBunZhTRw1w" source="_So0kSq1MEeOdBunZhTRw1w" target="_So0kWq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kYK1MEeOdBunZhTRw1w" source="_So0kUK1MEeOdBunZhTRw1w" target="_So0kWq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kYa1MEeOdBunZhTRw1w" source="_So0kVq1MEeOdBunZhTRw1w" target="_So0kWq1MEeOdBunZhTRw1w"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kYq1MEeOdBunZhTRw1w" source="_So0kQ61MEeOdBunZhTRw1w" target="_So0kP61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kY61MEeOdBunZhTRw1w" source="_So0kWq1MEeOdBunZhTRw1w" target="_So0kOa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So0kZK1MEeOdBunZhTRw1w" source="_So0kRq1MEeOdBunZhTRw1w" target="_So0kOK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kZa1MEeOdBunZhTRw1w" source="_So0kPK1MEeOdBunZhTRw1w" target="_So0kNq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kZq1MEeOdBunZhTRw1w" name="ExpressionStatement@22925ff4" incoming="_So0lAa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So0kZ61MEeOdBunZhTRw1w" name="Fork(list)@32330ff4" outgoing="_So0lDa1MEeOdBunZhTRw1w" incoming="_So0kzq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kaK1MEeOdBunZhTRw1w" name="RightHandSide@365c75eb">
              <node xmi:type="uml:CallOperationAction" xmi:id="_So0kaa1MEeOdBunZhTRw1w" name="Call(List)" incoming="_So0kza1MEeOdBunZhTRw1w" operation="_So3CKa1MEeOdBunZhTRw1w">
                <argument xmi:id="_So0kaq1MEeOdBunZhTRw1w" name="Call(List).argument(seq)" incoming="_So0kzK1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ka61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kbK1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So0kba1MEeOdBunZhTRw1w" name="Call(List).result()" outgoing="_So0kzq1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kbq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kb61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_So0kcK1MEeOdBunZhTRw1w" name="Call(List).target" incoming="_So0ky61MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kcq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_So0kc61MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____)" classifier="_So2bC61MEeOdBunZhTRw1w">
                <result xmi:id="_So0kdK1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____).result" outgoing="_So0ky61MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kda1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kdq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kd61MEeOdBunZhTRw1w" name="Tuple@7d8b05f0" outgoing="_So0kza1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0keK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@2f691df3">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kea1MEeOdBunZhTRw1w" name="SequenceExpressionList@326f1dd8#1" outgoing="_So0kyK1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:CallOperationAction" xmi:id="_So0keq1MEeOdBunZhTRw1w" name="Call(List)" incoming="_So0knq1MEeOdBunZhTRw1w" operation="_So2aQa1MEeOdBunZhTRw1w">
                      <argument xmi:id="_So0ke61MEeOdBunZhTRw1w" name="Call(List).argument(seq)" incoming="_So0kna1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kfK1MEeOdBunZhTRw1w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kfa1MEeOdBunZhTRw1w" value="*"/>
                      </argument>
                      <result xmi:id="_So0kfq1MEeOdBunZhTRw1w" name="Call(List).result()" outgoing="_So0kya1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kf61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kgK1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <target xmi:id="_So0kga1MEeOdBunZhTRw1w" name="Call(List).target" incoming="_So0knK1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kgq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kg61MEeOdBunZhTRw1w" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:CreateObjectAction" xmi:id="_So0khK1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__)" classifier="_So1y161MEeOdBunZhTRw1w">
                      <result xmi:id="_So0kha1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__).result" outgoing="_So0knK1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0khq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kh61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kiK1MEeOdBunZhTRw1w" name="Tuple@4181d3a9" outgoing="_So0knq1MEeOdBunZhTRw1w">
                      <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kia1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@18e55c11">
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kiq1MEeOdBunZhTRw1w" name="SequenceExpressionList@6033570c#1" outgoing="_So0kma1MEeOdBunZhTRw1w">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0ki61MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;)">
                            <result xmi:id="_So0kjK1MEeOdBunZhTRw1w" name="Value(&quot;apple&quot;).result" outgoing="_So0kmq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kja1MEeOdBunZhTRw1w" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kjq1MEeOdBunZhTRw1w" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_So0kj61MEeOdBunZhTRw1w" value="apple">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kkK1MEeOdBunZhTRw1w" name="SequenceExpressionList@6033570c#2" incoming="_So0kma1MEeOdBunZhTRw1w">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kka1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;)">
                            <result xmi:id="_So0kkq1MEeOdBunZhTRw1w" name="Value(&quot;orange&quot;).result" outgoing="_So0km61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kk61MEeOdBunZhTRw1w" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0klK1MEeOdBunZhTRw1w" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_So0kla1MEeOdBunZhTRw1w" value="orange">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                        <structuredNodeOutput xmi:id="_So0klq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@18e55c11.output" outgoing="_So0kna1MEeOdBunZhTRw1w" incoming="_So0kmq1MEeOdBunZhTRw1w _So0km61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kl61MEeOdBunZhTRw1w" value="2"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kmK1MEeOdBunZhTRw1w" value="2"/>
                        </structuredNodeOutput>
                        <edge xmi:type="uml:ControlFlow" xmi:id="_So0kma1MEeOdBunZhTRw1w" source="_So0kiq1MEeOdBunZhTRw1w" target="_So0kkK1MEeOdBunZhTRw1w"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kmq1MEeOdBunZhTRw1w" source="_So0kjK1MEeOdBunZhTRw1w" target="_So0klq1MEeOdBunZhTRw1w"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_So0km61MEeOdBunZhTRw1w" source="_So0kkq1MEeOdBunZhTRw1w" target="_So0klq1MEeOdBunZhTRw1w"/>
                      </node>
                    </node>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So0knK1MEeOdBunZhTRw1w" source="_So0kha1MEeOdBunZhTRw1w" target="_So0kga1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kna1MEeOdBunZhTRw1w" source="_So0klq1MEeOdBunZhTRw1w" target="_So0ke61MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_So0knq1MEeOdBunZhTRw1w" source="_So0kiK1MEeOdBunZhTRw1w" target="_So0keq1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kn61MEeOdBunZhTRw1w" name="SequenceExpressionList@326f1dd8#2" incoming="_So0kyK1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:CallOperationAction" xmi:id="_So0koK1MEeOdBunZhTRw1w" name="Call(List)" incoming="_So0kxK1MEeOdBunZhTRw1w" operation="_So2aQa1MEeOdBunZhTRw1w">
                      <argument xmi:id="_So0koa1MEeOdBunZhTRw1w" name="Call(List).argument(seq)" incoming="_So0kw61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0koq1MEeOdBunZhTRw1w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ko61MEeOdBunZhTRw1w" value="*"/>
                      </argument>
                      <result xmi:id="_So0kpK1MEeOdBunZhTRw1w" name="Call(List).result()" outgoing="_So0kyq1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kpa1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kpq1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <target xmi:id="_So0kp61MEeOdBunZhTRw1w" name="Call(List).target" incoming="_So0kwq1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kqK1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kqa1MEeOdBunZhTRw1w" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:CreateObjectAction" xmi:id="_So0kqq1MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__)" classifier="_So1y161MEeOdBunZhTRw1w">
                      <result xmi:id="_So0kq61MEeOdBunZhTRw1w" name="Create($$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__).result" outgoing="_So0kwq1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0krK1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kra1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0krq1MEeOdBunZhTRw1w" name="Tuple@a6ffabb" outgoing="_So0kxK1MEeOdBunZhTRw1w">
                      <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0kr61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@79ff6cdb">
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ksK1MEeOdBunZhTRw1w" name="SequenceExpressionList@69412791#1" outgoing="_So0kv61MEeOdBunZhTRw1w">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0ksa1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;)">
                            <result xmi:id="_So0ksq1MEeOdBunZhTRw1w" name="Value(&quot;strawberry&quot;).result" outgoing="_So0kwK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ks61MEeOdBunZhTRw1w" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ktK1MEeOdBunZhTRw1w" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_So0kta1MEeOdBunZhTRw1w" value="strawberry">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0ktq1MEeOdBunZhTRw1w" name="SequenceExpressionList@69412791#2" incoming="_So0kv61MEeOdBunZhTRw1w">
                          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0kt61MEeOdBunZhTRw1w" name="Value(&quot;raspberry&quot;)">
                            <result xmi:id="_So0kuK1MEeOdBunZhTRw1w" name="Value(&quot;raspberry&quot;).result" outgoing="_So0kwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kua1MEeOdBunZhTRw1w" value="1"/>
                              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kuq1MEeOdBunZhTRw1w" value="1"/>
                            </result>
                            <value xmi:type="uml:LiteralString" xmi:id="_So0ku61MEeOdBunZhTRw1w" value="raspberry">
                              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                            </value>
                          </node>
                        </node>
                        <structuredNodeOutput xmi:id="_So0kvK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@79ff6cdb.output" outgoing="_So0kw61MEeOdBunZhTRw1w" incoming="_So0kwK1MEeOdBunZhTRw1w _So0kwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kva1MEeOdBunZhTRw1w" value="2"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kvq1MEeOdBunZhTRw1w" value="2"/>
                        </structuredNodeOutput>
                        <edge xmi:type="uml:ControlFlow" xmi:id="_So0kv61MEeOdBunZhTRw1w" source="_So0ksK1MEeOdBunZhTRw1w" target="_So0ktq1MEeOdBunZhTRw1w"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kwK1MEeOdBunZhTRw1w" source="_So0ksq1MEeOdBunZhTRw1w" target="_So0kvK1MEeOdBunZhTRw1w"/>
                        <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kwa1MEeOdBunZhTRw1w" source="_So0kuK1MEeOdBunZhTRw1w" target="_So0kvK1MEeOdBunZhTRw1w"/>
                      </node>
                    </node>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kwq1MEeOdBunZhTRw1w" source="_So0kq61MEeOdBunZhTRw1w" target="_So0kp61MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kw61MEeOdBunZhTRw1w" source="_So0kvK1MEeOdBunZhTRw1w" target="_So0koa1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_So0kxK1MEeOdBunZhTRw1w" source="_So0krq1MEeOdBunZhTRw1w" target="_So0koK1MEeOdBunZhTRw1w"/>
                  </node>
                  <structuredNodeOutput xmi:id="_So0kxa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@2f691df3.output" outgoing="_So0kzK1MEeOdBunZhTRw1w" incoming="_So0kya1MEeOdBunZhTRw1w _So0kyq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0kxq1MEeOdBunZhTRw1w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0kx61MEeOdBunZhTRw1w" value="2"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_So0kyK1MEeOdBunZhTRw1w" source="_So0kea1MEeOdBunZhTRw1w" target="_So0kn61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kya1MEeOdBunZhTRw1w" source="_So0kfq1MEeOdBunZhTRw1w" target="_So0kxa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kyq1MEeOdBunZhTRw1w" source="_So0kpK1MEeOdBunZhTRw1w" target="_So0kxa1MEeOdBunZhTRw1w"/>
                </node>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0ky61MEeOdBunZhTRw1w" source="_So0kdK1MEeOdBunZhTRw1w" target="_So0kcK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kzK1MEeOdBunZhTRw1w" source="_So0kxa1MEeOdBunZhTRw1w" target="_So0kaq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So0kza1MEeOdBunZhTRw1w" source="_So0kd61MEeOdBunZhTRw1w" target="_So0kaa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0kzq1MEeOdBunZhTRw1w" source="_So0kba1MEeOdBunZhTRw1w" target="_So0kZ61MEeOdBunZhTRw1w"/>
          </node>
          <structuredNodeOutput xmi:id="_So0kz61MEeOdBunZhTRw1w" name="Output(seq1)" outgoing="_Soz_eK1MEeOdBunZhTRw1w" incoming="_So0lAq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k0K1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k0a1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k0q1MEeOdBunZhTRw1w" name="Output(seq2)" outgoing="_Soz_ea1MEeOdBunZhTRw1w" incoming="_So0lA61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k061MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k1K1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k1a1MEeOdBunZhTRw1w" name="Output(seq3)" outgoing="_Soz_eq1MEeOdBunZhTRw1w" incoming="_So0lBK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k1q1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k161MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k2K1MEeOdBunZhTRw1w" name="Output(seq4)" outgoing="_Soz_e61MEeOdBunZhTRw1w" incoming="_So0lBa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k2a1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k2q1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k261MEeOdBunZhTRw1w" name="Output(seq5)" outgoing="_Soz_fK1MEeOdBunZhTRw1w" incoming="_So0lBq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k3K1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k3a1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k3q1MEeOdBunZhTRw1w" name="Output(seq6)" outgoing="_Soz_fa1MEeOdBunZhTRw1w" incoming="_So0lB61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k361MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k4K1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k4a1MEeOdBunZhTRw1w" name="Output(seq7)" outgoing="_Soz_fq1MEeOdBunZhTRw1w" incoming="_So0lCK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k4q1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k461MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k5K1MEeOdBunZhTRw1w" name="Output(x)" outgoing="_Soz_f61MEeOdBunZhTRw1w" incoming="_So0lCa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k5a1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k5q1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k561MEeOdBunZhTRw1w" name="Output(customers)" outgoing="_Soz_gK1MEeOdBunZhTRw1w" incoming="_So0lCq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k6K1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k6a1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k6q1MEeOdBunZhTRw1w" name="Output(set1)" outgoing="_Soz_ga1MEeOdBunZhTRw1w" incoming="_So0lC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k661MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k7K1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k7a1MEeOdBunZhTRw1w" name="Output(set2)" outgoing="_Soz_gq1MEeOdBunZhTRw1w" incoming="_So0lDK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k7q1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k761MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_So0k8K1MEeOdBunZhTRw1w" name="Output(list)" outgoing="_Soz_g61MEeOdBunZhTRw1w" incoming="_So0lDa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0k8a1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0k8q1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k861MEeOdBunZhTRw1w" source="_Soz_ka1MEeOdBunZhTRw1w" target="_Soz_sK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k9K1MEeOdBunZhTRw1w" source="_Soz_sK1MEeOdBunZhTRw1w" target="_So0in61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k9a1MEeOdBunZhTRw1w" source="_So0in61MEeOdBunZhTRw1w" target="_So0ivq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k9q1MEeOdBunZhTRw1w" source="_So0ivq1MEeOdBunZhTRw1w" target="_So0i3a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k961MEeOdBunZhTRw1w" source="_So0i3a1MEeOdBunZhTRw1w" target="_So0i_K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k-K1MEeOdBunZhTRw1w" source="_So0i_K1MEeOdBunZhTRw1w" target="_So0jZa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k-a1MEeOdBunZhTRw1w" source="_So0jZa1MEeOdBunZhTRw1w" target="_So0jbq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k-q1MEeOdBunZhTRw1w" source="_So0jbq1MEeOdBunZhTRw1w" target="_So0jk61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k-61MEeOdBunZhTRw1w" source="_So0jk61MEeOdBunZhTRw1w" target="_So0jnK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0k_K1MEeOdBunZhTRw1w" source="_So0jna1MEeOdBunZhTRw1w" target="_So0j261MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0k_a1MEeOdBunZhTRw1w" source="_So0jlK1MEeOdBunZhTRw1w" target="_So0j3q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k_q1MEeOdBunZhTRw1w" source="_So0jnK1MEeOdBunZhTRw1w" target="_So0j161MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0k_61MEeOdBunZhTRw1w" source="_So0j161MEeOdBunZhTRw1w" target="_So0kBK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0lAK1MEeOdBunZhTRw1w" source="_So0kBK1MEeOdBunZhTRw1w" target="_So0kNa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0lAa1MEeOdBunZhTRw1w" source="_So0kNa1MEeOdBunZhTRw1w" target="_So0kZq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lAq1MEeOdBunZhTRw1w" source="_Soz_kq1MEeOdBunZhTRw1w" target="_So0kz61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lA61MEeOdBunZhTRw1w" source="_Soz_sa1MEeOdBunZhTRw1w" target="_So0k0q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lBK1MEeOdBunZhTRw1w" source="_So0ioK1MEeOdBunZhTRw1w" target="_So0k1a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lBa1MEeOdBunZhTRw1w" source="_So0iv61MEeOdBunZhTRw1w" target="_So0k2K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lBq1MEeOdBunZhTRw1w" source="_So0i3q1MEeOdBunZhTRw1w" target="_So0k261MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lB61MEeOdBunZhTRw1w" source="_So0i_a1MEeOdBunZhTRw1w" target="_So0k3q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lCK1MEeOdBunZhTRw1w" source="_So0jZq1MEeOdBunZhTRw1w" target="_So0k4a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lCa1MEeOdBunZhTRw1w" source="_So0jb61MEeOdBunZhTRw1w" target="_So0k5K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lCq1MEeOdBunZhTRw1w" source="_So0j561MEeOdBunZhTRw1w" target="_So0k561MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lC61MEeOdBunZhTRw1w" source="_So0kBa1MEeOdBunZhTRw1w" target="_So0k6q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lDK1MEeOdBunZhTRw1w" source="_So0kNq1MEeOdBunZhTRw1w" target="_So0k7a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lDa1MEeOdBunZhTRw1w" source="_So0kZ61MEeOdBunZhTRw1w" target="_So0k8K1MEeOdBunZhTRw1w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_hK1MEeOdBunZhTRw1w" name="Output(seq1)" incoming="_Soz_eK1MEeOdBunZhTRw1w" parameter="_Soz_VK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_ha1MEeOdBunZhTRw1w" name="Output(seq2)" incoming="_Soz_ea1MEeOdBunZhTRw1w" parameter="_Soz_V61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_hq1MEeOdBunZhTRw1w" name="Output(seq3)" incoming="_Soz_eq1MEeOdBunZhTRw1w" parameter="_Soz_Wq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_h61MEeOdBunZhTRw1w" name="Output(seq4)" incoming="_Soz_e61MEeOdBunZhTRw1w" parameter="_Soz_Xa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_iK1MEeOdBunZhTRw1w" name="Output(seq5)" incoming="_Soz_fK1MEeOdBunZhTRw1w" parameter="_Soz_YK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_ia1MEeOdBunZhTRw1w" name="Output(seq6)" incoming="_Soz_fa1MEeOdBunZhTRw1w" parameter="_Soz_Y61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_iq1MEeOdBunZhTRw1w" name="Output(seq7)" incoming="_Soz_fq1MEeOdBunZhTRw1w" parameter="_Soz_Zq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_i61MEeOdBunZhTRw1w" name="Output(x)" incoming="_Soz_f61MEeOdBunZhTRw1w" parameter="_Soz_aa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_jK1MEeOdBunZhTRw1w" name="Output(customers)" incoming="_Soz_gK1MEeOdBunZhTRw1w" parameter="_Soz_bK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_ja1MEeOdBunZhTRw1w" name="Output(set1)" incoming="_Soz_ga1MEeOdBunZhTRw1w" parameter="_Soz_b61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_jq1MEeOdBunZhTRw1w" name="Output(set2)" incoming="_Soz_gq1MEeOdBunZhTRw1w" parameter="_Soz_cq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Soz_j61MEeOdBunZhTRw1w" name="Output(list)" incoming="_Soz_g61MEeOdBunZhTRw1w" parameter="_Soz_da1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So0lDq1MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction$method$1" specification="_So0lt61MEeOdBunZhTRw1w" group="_So0lFK1MEeOdBunZhTRw1w" node="_So0lE61MEeOdBunZhTRw1w _So0lFK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So0lD61MEeOdBunZhTRw1w" name="" type="_SozUca1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lEK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lEa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lEq1MEeOdBunZhTRw1w" source="_So0lGq1MEeOdBunZhTRw1w" target="_So0lE61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So0lFK1MEeOdBunZhTRw1w" name="Body(Expressions_Sequence_Construction$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0lFa1MEeOdBunZhTRw1w" name="Body" incoming="_So0lQK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So0lFq1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So0lF61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So0lPq1MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lGK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lGa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So0lGq1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So0lEq1MEeOdBunZhTRw1w _So0lP61MEeOdBunZhTRw1w _So0lQa1MEeOdBunZhTRw1w" incoming="_So0lPq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_So0lG61MEeOdBunZhTRw1w" name="Call(Expressions_Sequence_Construction$initialization$1)" outgoing="_So0lQK1MEeOdBunZhTRw1w" incoming="_So0lR61MEeOdBunZhTRw1w" operation="_So0lja1MEeOdBunZhTRw1w">
            <target xmi:id="_So0lHK1MEeOdBunZhTRw1w" name="Call(Expressions_Sequence_Construction$initialization$1).target" incoming="_So0lP61MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lHa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lHq1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So0lH61MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Construction$initializationFlag$1)" structuralFeature="_SozUd61MEeOdBunZhTRw1w">
            <object xmi:id="_So0lIK1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Construction$initializationFlag$1).object" incoming="_So0lQa1MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lIa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lIq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So0lI61MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Construction$initializationFlag$1).result" outgoing="_So0lQq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lJK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lJa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0lJq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So0lJ61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So0lQq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lKK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lKa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So0lKq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So0lQ61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lK61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lLK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0lLa1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So0lLq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So0lRK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lL61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lMK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So0lMa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So0lMq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So0lM61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So0lQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lNK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lNa1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So0lNq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So0lRq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lN61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lOK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So0lOa1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So0lRK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lOq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lO61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So0lPK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So0lRa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So0lPa1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Sequence_Construction$initializationFlag$1))" outgoing="_So0lR61MEeOdBunZhTRw1w" incoming="_So0lRa1MEeOdBunZhTRw1w _So0lRq1MEeOdBunZhTRw1w" decisionInputFlow="_So0lRq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lPq1MEeOdBunZhTRw1w" source="_So0lF61MEeOdBunZhTRw1w" target="_So0lGq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lP61MEeOdBunZhTRw1w" source="_So0lGq1MEeOdBunZhTRw1w" target="_So0lHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0lQK1MEeOdBunZhTRw1w" source="_So0lG61MEeOdBunZhTRw1w" target="_So0lFa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lQa1MEeOdBunZhTRw1w" source="_So0lGq1MEeOdBunZhTRw1w" target="_So0lIK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lQq1MEeOdBunZhTRw1w" source="_So0lI61MEeOdBunZhTRw1w" target="_So0lJ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lQ61MEeOdBunZhTRw1w" source="_So0lKq1MEeOdBunZhTRw1w" target="_So0lM61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lRK1MEeOdBunZhTRw1w" source="_So0lLq1MEeOdBunZhTRw1w" target="_So0lOa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0lRa1MEeOdBunZhTRw1w" source="_So0lPK1MEeOdBunZhTRw1w" target="_So0lPa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lRq1MEeOdBunZhTRw1w" source="_So0lNq1MEeOdBunZhTRw1w" target="_So0lPa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0lR61MEeOdBunZhTRw1w" source="_So0lPa1MEeOdBunZhTRw1w" target="_So0lG61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So0lSK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So0lE61MEeOdBunZhTRw1w" name="Return" incoming="_So0lEq1MEeOdBunZhTRw1w" parameter="_So0lD61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So0lSa1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_So0lu61MEeOdBunZhTRw1w" group="_So0lSq1MEeOdBunZhTRw1w" node="_So0lSq1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So0lSq1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So0lS61MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction$initialization$1" specification="_So0lja1MEeOdBunZhTRw1w" group="_So0lTK1MEeOdBunZhTRw1w" node="_So0lTK1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So0lTK1MEeOdBunZhTRw1w" name="Body(Expressions_Sequence_Construction$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So0lTa1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So0lTq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So0lg61MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lT61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lUK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So0lUa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So0lhK1MEeOdBunZhTRw1w _So0lha1MEeOdBunZhTRw1w" incoming="_So0lg61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0lUq1MEeOdBunZhTRw1w" name="Initialization" incoming="_So0li61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0lU61MEeOdBunZhTRw1w" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0lVK1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_So0lVa1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So0lY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lVq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lV61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_So0lWK1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_So0lWa1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Construction$initializationFlag$1)" structuralFeature="_SozUd61MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_So0lWq1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Construction$initializationFlag$1).object" incoming="_So0lhK1MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lW61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lXK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So0lXa1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Construction$initializationFlag$1).result" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lXq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lX61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_So0lYK1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Construction$initializationFlag$1).value" incoming="_So0lY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lYa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lYq1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lY61MEeOdBunZhTRw1w" source="_So0lVa1MEeOdBunZhTRw1w" target="_So0lYK1MEeOdBunZhTRw1w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So0lZK1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Construction$initializationFlag$1)" structuralFeature="_SozUd61MEeOdBunZhTRw1w">
            <object xmi:id="_So0lZa1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Construction$initializationFlag$1).object" incoming="_So0lha1MEeOdBunZhTRw1w" type="_SozUca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lZq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lZ61MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So0laK1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Construction$initializationFlag$1).result" outgoing="_So0lhq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0laa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0laq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0la61MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So0lbK1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So0lhq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lba1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lbq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So0lb61MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So0lh61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lcK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lca1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0lcq1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So0lc61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So0liK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ldK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lda1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So0ldq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So0ld61MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So0leK1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So0lh61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lea1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0leq1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So0le61MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So0liq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lfK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lfa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So0lfq1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So0liK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lf61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lgK1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So0lga1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So0lia1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So0lgq1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Sequence_Construction$initializationFlag$1))" outgoing="_So0li61MEeOdBunZhTRw1w" incoming="_So0lia1MEeOdBunZhTRw1w _So0liq1MEeOdBunZhTRw1w" decisionInputFlow="_So0liq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lg61MEeOdBunZhTRw1w" source="_So0lTq1MEeOdBunZhTRw1w" target="_So0lUa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lhK1MEeOdBunZhTRw1w" source="_So0lUa1MEeOdBunZhTRw1w" target="_So0lWq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lha1MEeOdBunZhTRw1w" source="_So0lUa1MEeOdBunZhTRw1w" target="_So0lZa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lhq1MEeOdBunZhTRw1w" source="_So0laK1MEeOdBunZhTRw1w" target="_So0lbK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lh61MEeOdBunZhTRw1w" source="_So0lb61MEeOdBunZhTRw1w" target="_So0leK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0liK1MEeOdBunZhTRw1w" source="_So0lc61MEeOdBunZhTRw1w" target="_So0lfq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0lia1MEeOdBunZhTRw1w" source="_So0lga1MEeOdBunZhTRw1w" target="_So0lgq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0liq1MEeOdBunZhTRw1w" source="_So0le61MEeOdBunZhTRw1w" target="_So0lgq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So0li61MEeOdBunZhTRw1w" source="_So0lgq1MEeOdBunZhTRw1w" target="_So0lUq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So0ljK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_So0lja1MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction$initialization$1" visibility="protected" method="_So0lS61MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So0ljq1MEeOdBunZhTRw1w" name="getList" visibility="package" method="_Soz_Kq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So0lj61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lkK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lka1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So0lkq1MEeOdBunZhTRw1w" name="test" visibility="package" method="_Soz_U61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So0lk61MEeOdBunZhTRw1w" name="seq1" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0llK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lla1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0llq1MEeOdBunZhTRw1w" name="seq2" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0ll61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lmK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lma1MEeOdBunZhTRw1w" name="seq3" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lmq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lm61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lnK1MEeOdBunZhTRw1w" name="seq4" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lna1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lnq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0ln61MEeOdBunZhTRw1w" name="seq5" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0loK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0loa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0loq1MEeOdBunZhTRw1w" name="seq6" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lo61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lpK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lpa1MEeOdBunZhTRw1w" name="seq7" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lpq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lp61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lqK1MEeOdBunZhTRw1w" name="x" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lqa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lqq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lq61MEeOdBunZhTRw1w" name="customers" visibility="package" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lrK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lra1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lrq1MEeOdBunZhTRw1w" name="set1" visibility="package" type="_So0mdK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lr61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lsK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0lsa1MEeOdBunZhTRw1w" name="set2" visibility="package" type="_So0mdK1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lsq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ls61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0ltK1MEeOdBunZhTRw1w" name="list" visibility="package" type="_So1LKq1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lta1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0ltq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So0lt61MEeOdBunZhTRw1w" name="Expressions_Sequence_Construction" visibility="package" method="_So0lDq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So0luK1MEeOdBunZhTRw1w" name="" visibility="package" type="_SozUca1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lua1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0luq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So0lu61MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_So0lSa1MEeOdBunZhTRw1w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_So0lvK1MEeOdBunZhTRw1w" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_So0lva1MEeOdBunZhTRw1w" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lvq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lv61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_So0lwK1MEeOdBunZhTRw1w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lwa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lwq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_So0lw61MEeOdBunZhTRw1w" name="Customer$method$1" specification="_So0mbK1MEeOdBunZhTRw1w" group="_So0l0K1MEeOdBunZhTRw1w" node="_So0lza1MEeOdBunZhTRw1w _So0lzq1MEeOdBunZhTRw1w _So0lz61MEeOdBunZhTRw1w _So0l0K1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_So0lxK1MEeOdBunZhTRw1w" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lxa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lxq1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_So0lx61MEeOdBunZhTRw1w" name="" type="_So0lvK1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0lyK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0lya1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lyq1MEeOdBunZhTRw1w" source="_So0lza1MEeOdBunZhTRw1w" target="_So0lzq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0ly61MEeOdBunZhTRw1w" source="_So0lzq1MEeOdBunZhTRw1w" target="_So0l361MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So0lzK1MEeOdBunZhTRw1w" source="_So0l-K1MEeOdBunZhTRw1w" target="_So0lz61MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_So0l0K1MEeOdBunZhTRw1w" name="Body(Customer$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0l0a1MEeOdBunZhTRw1w" name="Body" incoming="_So0mHq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0l0q1MEeOdBunZhTRw1w" name="ExpressionStatement@59974806">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0l061MEeOdBunZhTRw1w" name="Expression(LeftHandSide@5af9afdd)" incoming="_So0l861MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_So0l1K1MEeOdBunZhTRw1w" name="ReadSelf">
                    <result xmi:id="_So0l1a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So0l8K1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l1q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l161MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_So0l2K1MEeOdBunZhTRw1w" name="Clear(name)" structuralFeature="_So0lwK1MEeOdBunZhTRw1w">
                  <object xmi:id="_So0l2a1MEeOdBunZhTRw1w" name="Clear(name).object" incoming="_So0l8K1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l2q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l261MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_So0l3K1MEeOdBunZhTRw1w" name="Clear(name).result" outgoing="_So0l8q1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l3a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l3q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_So0l361MEeOdBunZhTRw1w" name="Fork(LeftHandSide@5af9afdd)" outgoing="_So0l8a1MEeOdBunZhTRw1w" incoming="_So0ly61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0l4K1MEeOdBunZhTRw1w" name="WriteAll(Customer::name)">
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_So0l4a1MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_So0lwK1MEeOdBunZhTRw1w" isReplaceAll="true">
                    <object xmi:id="_So0l4q1MEeOdBunZhTRw1w" name="Write(name).object" incoming="_So0l8q1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l461MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l5K1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_So0l5a1MEeOdBunZhTRw1w" name="Write(name).result" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l5q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l561MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:id="_So0l6K1MEeOdBunZhTRw1w" name="Write(name).value" incoming="_So0l7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l6a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l6q1MEeOdBunZhTRw1w" value="1"/>
                    </value>
                  </node>
                  <structuredNodeInput xmi:id="_So0l661MEeOdBunZhTRw1w" name="WriteAll(Customer::name).input(Customer::name)" outgoing="_So0l7q1MEeOdBunZhTRw1w" incoming="_So0l8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l7K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l7a1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So0l7q1MEeOdBunZhTRw1w" source="_So0l661MEeOdBunZhTRw1w" target="_So0l6K1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0l761MEeOdBunZhTRw1w" name="RightHandSide@64615e1c" outgoing="_So0l861MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0l8K1MEeOdBunZhTRw1w" source="_So0l1a1MEeOdBunZhTRw1w" target="_So0l2a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0l8a1MEeOdBunZhTRw1w" source="_So0l361MEeOdBunZhTRw1w" target="_So0l661MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0l8q1MEeOdBunZhTRw1w" source="_So0l3K1MEeOdBunZhTRw1w" target="_So0l4q1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So0l861MEeOdBunZhTRw1w" source="_So0l761MEeOdBunZhTRw1w" target="_So0l061MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_So0l9K1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_So0l9a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So0mHK1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l9q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l961MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_So0l-K1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So0lzK1MEeOdBunZhTRw1w _So0mHa1MEeOdBunZhTRw1w _So0mH61MEeOdBunZhTRw1w" incoming="_So0mHK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_So0l-a1MEeOdBunZhTRw1w" name="Call(Customer$initialization$1)" outgoing="_So0mHq1MEeOdBunZhTRw1w" incoming="_So0mJa1MEeOdBunZhTRw1w" operation="_So0ma61MEeOdBunZhTRw1w">
              <target xmi:id="_So0l-q1MEeOdBunZhTRw1w" name="Call(Customer$initialization$1).target" incoming="_So0mHa1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l-61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0l_K1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So0l_a1MEeOdBunZhTRw1w" name="Read(Customer$initializationFlag$1)" structuralFeature="_So0lva1MEeOdBunZhTRw1w">
              <object xmi:id="_So0l_q1MEeOdBunZhTRw1w" name="Read(Customer$initializationFlag$1).object" incoming="_So0mH61MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0l_61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mAK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_So0mAa1MEeOdBunZhTRw1w" name="Read(Customer$initializationFlag$1).result" outgoing="_So0mIK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mAq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mA61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0mBK1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_So0mBa1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So0mIK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mBq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mB61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So0mCK1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So0mIa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mCa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mCq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0mC61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_So0mDK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So0mIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mDa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mDq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So0mD61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_So0mEK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_So0mEa1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So0mIa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mEq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mE61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_So0mFK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So0mJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mFa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mFq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_So0mF61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So0mIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mGK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mGa1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_So0mGq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So0mI61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_So0mG61MEeOdBunZhTRw1w" name="Decision(Test(Customer$initializationFlag$1))" outgoing="_So0mJa1MEeOdBunZhTRw1w" incoming="_So0mI61MEeOdBunZhTRw1w _So0mJK1MEeOdBunZhTRw1w" decisionInputFlow="_So0mJK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mHK1MEeOdBunZhTRw1w" source="_So0l9a1MEeOdBunZhTRw1w" target="_So0l-K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mHa1MEeOdBunZhTRw1w" source="_So0l-K1MEeOdBunZhTRw1w" target="_So0l-q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So0mHq1MEeOdBunZhTRw1w" source="_So0l-a1MEeOdBunZhTRw1w" target="_So0l0a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mH61MEeOdBunZhTRw1w" source="_So0l-K1MEeOdBunZhTRw1w" target="_So0l_q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mIK1MEeOdBunZhTRw1w" source="_So0mAa1MEeOdBunZhTRw1w" target="_So0mBa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mIa1MEeOdBunZhTRw1w" source="_So0mCK1MEeOdBunZhTRw1w" target="_So0mEa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mIq1MEeOdBunZhTRw1w" source="_So0mDK1MEeOdBunZhTRw1w" target="_So0mF61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So0mI61MEeOdBunZhTRw1w" source="_So0mGq1MEeOdBunZhTRw1w" target="_So0mG61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mJK1MEeOdBunZhTRw1w" source="_So0mFK1MEeOdBunZhTRw1w" target="_So0mG61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So0mJa1MEeOdBunZhTRw1w" source="_So0mG61MEeOdBunZhTRw1w" target="_So0l-a1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_So0mJq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_So0lza1MEeOdBunZhTRw1w" name="Input(name)" outgoing="_So0lyq1MEeOdBunZhTRw1w" parameter="_So0lxK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_So0lzq1MEeOdBunZhTRw1w" name="Fork(name)" outgoing="_So0ly61MEeOdBunZhTRw1w" incoming="_So0lyq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_So0lz61MEeOdBunZhTRw1w" name="Return" incoming="_So0lzK1MEeOdBunZhTRw1w" parameter="_So0lx61MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_So0mJ61MEeOdBunZhTRw1w" name="destroy$method$1" specification="_So0mc61MEeOdBunZhTRw1w" group="_So0mKK1MEeOdBunZhTRw1w" node="_So0mKK1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_So0mKK1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_So0mKa1MEeOdBunZhTRw1w" name="Customer$initialization$1" specification="_So0ma61MEeOdBunZhTRw1w" group="_So0mKq1MEeOdBunZhTRw1w" node="_So0mKq1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_So0mKq1MEeOdBunZhTRw1w" name="Body(Customer$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_So0mK61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_So0mLK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So0mYa1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mLa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mLq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_So0mL61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So0mYq1MEeOdBunZhTRw1w _So0mY61MEeOdBunZhTRw1w" incoming="_So0mYa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0mMK1MEeOdBunZhTRw1w" name="Initialization" incoming="_So0maa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So0mMa1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0mMq1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_So0mM61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So0mQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mNK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mNa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_So0mNq1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_So0mN61MEeOdBunZhTRw1w" name="Write(Customer$initializationFlag$1)" structuralFeature="_So0lva1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_So0mOK1MEeOdBunZhTRw1w" name="Write(Customer$initializationFlag$1).object" incoming="_So0mYq1MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mOa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mOq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_So0mO61MEeOdBunZhTRw1w" name="Write(Customer$initializationFlag$1).result" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mPK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mPa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_So0mPq1MEeOdBunZhTRw1w" name="Write(Customer$initializationFlag$1).value" incoming="_So0mQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mP61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mQK1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mQa1MEeOdBunZhTRw1w" source="_So0mM61MEeOdBunZhTRw1w" target="_So0mPq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So0mQq1MEeOdBunZhTRw1w" name="Read(Customer$initializationFlag$1)" structuralFeature="_So0lva1MEeOdBunZhTRw1w">
              <object xmi:id="_So0mQ61MEeOdBunZhTRw1w" name="Read(Customer$initializationFlag$1).object" incoming="_So0mY61MEeOdBunZhTRw1w" type="_So0lvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mRK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mRa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_So0mRq1MEeOdBunZhTRw1w" name="Read(Customer$initializationFlag$1).result" outgoing="_So0mZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mR61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mSK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So0mSa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_So0mSq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So0mZK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mS61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mTK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So0mTa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So0mZa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mTq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mT61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So0mUK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_So0mUa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So0mZq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mUq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mU61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So0mVK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_So0mVa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_So0mVq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So0mZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mV61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mWK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_So0mWa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So0maK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mWq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mW61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_So0mXK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So0mZq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mXa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mXq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_So0mX61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So0mZ61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_So0mYK1MEeOdBunZhTRw1w" name="Decision(Test(Customer$initializationFlag$1))" outgoing="_So0maa1MEeOdBunZhTRw1w" incoming="_So0mZ61MEeOdBunZhTRw1w _So0maK1MEeOdBunZhTRw1w" decisionInputFlow="_So0maK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mYa1MEeOdBunZhTRw1w" source="_So0mLK1MEeOdBunZhTRw1w" target="_So0mL61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mYq1MEeOdBunZhTRw1w" source="_So0mL61MEeOdBunZhTRw1w" target="_So0mOK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mY61MEeOdBunZhTRw1w" source="_So0mL61MEeOdBunZhTRw1w" target="_So0mQ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mZK1MEeOdBunZhTRw1w" source="_So0mRq1MEeOdBunZhTRw1w" target="_So0mSq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mZa1MEeOdBunZhTRw1w" source="_So0mTa1MEeOdBunZhTRw1w" target="_So0mVq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0mZq1MEeOdBunZhTRw1w" source="_So0mUa1MEeOdBunZhTRw1w" target="_So0mXK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So0mZ61MEeOdBunZhTRw1w" source="_So0mX61MEeOdBunZhTRw1w" target="_So0mYK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So0maK1MEeOdBunZhTRw1w" source="_So0mWa1MEeOdBunZhTRw1w" target="_So0mYK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So0maa1MEeOdBunZhTRw1w" source="_So0mYK1MEeOdBunZhTRw1w" target="_So0mMK1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_So0maq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_So0ma61MEeOdBunZhTRw1w" name="Customer$initialization$1" visibility="protected" method="_So0mKa1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_So0mbK1MEeOdBunZhTRw1w" name="Customer" visibility="package" method="_So0lw61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_So0mba1MEeOdBunZhTRw1w" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mbq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mb61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_So0mcK1MEeOdBunZhTRw1w" name="" visibility="package" type="_So0lvK1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0mca1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mcq1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_So0mc61MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_So0mJ61MEeOdBunZhTRw1w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So0mdK1MEeOdBunZhTRw1w" clientDependency="_So1KG61MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Set__PrimitiveTypes$Integer__" isAbstract="true">
      <ownedComment xmi:id="_So0mda1MEeOdBunZhTRw1w" annotatedElement="_So0mdK1MEeOdBunZhTRw1w">
        <body>A concrete unordered, unique collection. Does not support duplicate entries.
            </body>
      </ownedComment>
      <generalization xmi:id="_So0mdq1MEeOdBunZhTRw1w" general="_So1Jpq1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So0md61MEeOdBunZhTRw1w" name="Set" isAbstract="true">
        <ownedComment xmi:id="_So0meK1MEeOdBunZhTRw1w" annotatedElement="_So0md61MEeOdBunZhTRw1w">
          <body>Construct a set and add all elements in the given sequence. post:
                result.toSequence()->asSet() = seq->asSet() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So0mea1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false" effect="create">
          <ownedComment xmi:id="_So0meq1MEeOdBunZhTRw1w" annotatedElement="_So0mea1MEeOdBunZhTRw1w">
            <body>A sequence of elements of type &lt;T> to be added to the set</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0me61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mfK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0mfa1MEeOdBunZhTRw1w" type="_So1Jo61MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So0mfq1MEeOdBunZhTRw1w" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_So0mf61MEeOdBunZhTRw1w" annotatedElement="_So0mfq1MEeOdBunZhTRw1w">
          <body>Destroy this set. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_So0mgK1MEeOdBunZhTRw1w" name="add" isAbstract="true" redefinedOperation="_So1JqK1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So0mga1MEeOdBunZhTRw1w" annotatedElement="_So0mgK1MEeOdBunZhTRw1w">
          <body>Insert the given element into this set. Return true if a new element is actually
                inserted. post: self.toSequence()->asSet()
                = self@pre.toSequence()->asSet()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So0mgq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So0mg61MEeOdBunZhTRw1w" annotatedElement="_So0mgq1MEeOdBunZhTRw1w">
            <body>Element to be appended to this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0mhK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So0mha1MEeOdBunZhTRw1w" name="addAll" isAbstract="true" precondition="_So0mh61MEeOdBunZhTRw1w" redefinedOperation="_So1Jrq1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So0mhq1MEeOdBunZhTRw1w" annotatedElement="_So0mha1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this set. Returns true if this
                collection increased in size. post: self.toSequence()->asSet() =
                self@pre.toSequence()->asSet()->union(seq->asSet()) </body>
        </ownedComment>
        <ownedRule xmi:id="_So0mh61MEeOdBunZhTRw1w" constrainedElement="_So0mha1MEeOdBunZhTRw1w">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_So0miK1MEeOdBunZhTRw1w">
            <language>OCL</language>
            <body>self.toSequence()->size()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_So0mia1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So0miq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So0mi61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0mjK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So0mja1MEeOdBunZhTRw1w" name="count" isAbstract="true" isQuery="true" redefinedOperation="_So1Jt61MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So0mjq1MEeOdBunZhTRw1w" annotatedElement="_So0mja1MEeOdBunZhTRw1w">
          <body>The number of elements in this set that match a specified element. post: result
                = if self@pre.includes(element) then 1 else 0 endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_So0mj61MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So0mkK1MEeOdBunZhTRw1w" annotatedElement="_So0mj61MEeOdBunZhTRw1w">
            <body>The element to be counted</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So0mka1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So0mkq1MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_So1Jva1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So0mk61MEeOdBunZhTRw1w" annotatedElement="_So0mkq1MEeOdBunZhTRw1w">
          <body>Return true if the content of this set is equal to the given sequence considered
                as a set. post: result = (self@pre.toSequence()->asSet() =
                seq->asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So0mlK1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1JoK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Joa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Joq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_So1Jo61MEeOdBunZhTRw1w" name="Set&lt;T>">
        <templateBinding xmi:id="_So1JpK1MEeOdBunZhTRw1w">
          <parameterSubstitution xmi:id="_So1Jpa1MEeOdBunZhTRw1w">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1Jpq1MEeOdBunZhTRw1w" clientDependency="_So1KF61MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Collection__PrimitiveTypes$Integer__" isAbstract="true">
      <ownedComment xmi:id="_So1Jp61MEeOdBunZhTRw1w" annotatedElement="_So1Jpq1MEeOdBunZhTRw1w">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_So1JqK1MEeOdBunZhTRw1w" name="add" isAbstract="true">
        <ownedComment xmi:id="_So1Jqa1MEeOdBunZhTRw1w" annotatedElement="_So1JqK1MEeOdBunZhTRw1w">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Jqq1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1Jq61MEeOdBunZhTRw1w" annotatedElement="_So1Jqq1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1JrK1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Jra1MEeOdBunZhTRw1w" annotatedElement="_So1JrK1MEeOdBunZhTRw1w">
            <body>Element to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Jrq1MEeOdBunZhTRw1w" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_So1Jr61MEeOdBunZhTRw1w" annotatedElement="_So1Jrq1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1JsK1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1Jsa1MEeOdBunZhTRw1w" annotatedElement="_So1JsK1MEeOdBunZhTRw1w">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Jsq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Js61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1JtK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Jta1MEeOdBunZhTRw1w" name="clear" isAbstract="true">
        <ownedComment xmi:id="_So1Jtq1MEeOdBunZhTRw1w" annotatedElement="_So1Jta1MEeOdBunZhTRw1w">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Jt61MEeOdBunZhTRw1w" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1JuK1MEeOdBunZhTRw1w" annotatedElement="_So1Jt61MEeOdBunZhTRw1w">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Jua1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Juq1MEeOdBunZhTRw1w" annotatedElement="_So1Jua1MEeOdBunZhTRw1w">
            <body>Element to be counted.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Ju61MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1JvK1MEeOdBunZhTRw1w" annotatedElement="_So1Ju61MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Jva1MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Jvq1MEeOdBunZhTRw1w" annotatedElement="_So1Jva1MEeOdBunZhTRw1w">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Jv61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1JwK1MEeOdBunZhTRw1w" annotatedElement="_So1Jv61MEeOdBunZhTRw1w">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Jwa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Jwq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Jw61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1JxK1MEeOdBunZhTRw1w" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Jxa1MEeOdBunZhTRw1w" annotatedElement="_So1JxK1MEeOdBunZhTRw1w">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Jxq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Jx61MEeOdBunZhTRw1w" annotatedElement="_So1Jxq1MEeOdBunZhTRw1w">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1JyK1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1Jya1MEeOdBunZhTRw1w" annotatedElement="_So1JyK1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Jyq1MEeOdBunZhTRw1w" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Jy61MEeOdBunZhTRw1w" annotatedElement="_So1Jyq1MEeOdBunZhTRw1w">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1JzK1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1Jza1MEeOdBunZhTRw1w" annotatedElement="_So1JzK1MEeOdBunZhTRw1w">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Jzq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Jz61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J0K1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J0a1MEeOdBunZhTRw1w" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1J0q1MEeOdBunZhTRw1w" annotatedElement="_So1J0a1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J061MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1J1K1MEeOdBunZhTRw1w" annotatedElement="_So1J061MEeOdBunZhTRw1w">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J1a1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1J1q1MEeOdBunZhTRw1w" annotatedElement="_So1J1a1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J161MEeOdBunZhTRw1w" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1J2K1MEeOdBunZhTRw1w" annotatedElement="_So1J161MEeOdBunZhTRw1w">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J2a1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1J2q1MEeOdBunZhTRw1w" annotatedElement="_So1J2a1MEeOdBunZhTRw1w">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1J261MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1J3K1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J3a1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J3q1MEeOdBunZhTRw1w" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1J361MEeOdBunZhTRw1w" annotatedElement="_So1J3q1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J4K1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1J4a1MEeOdBunZhTRw1w" annotatedElement="_So1J4K1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J4q1MEeOdBunZhTRw1w" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1J461MEeOdBunZhTRw1w" annotatedElement="_So1J4q1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J5K1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J5a1MEeOdBunZhTRw1w" name="remove" isAbstract="true">
        <ownedComment xmi:id="_So1J5q1MEeOdBunZhTRw1w" annotatedElement="_So1J5a1MEeOdBunZhTRw1w">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J561MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J6K1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J6a1MEeOdBunZhTRw1w" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_So1J6q1MEeOdBunZhTRw1w" annotatedElement="_So1J6a1MEeOdBunZhTRw1w">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J661MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1J7K1MEeOdBunZhTRw1w" annotatedElement="_So1J661MEeOdBunZhTRw1w">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1J7a1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1J7q1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J761MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J8K1MEeOdBunZhTRw1w" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_So1J8a1MEeOdBunZhTRw1w" annotatedElement="_So1J8K1MEeOdBunZhTRw1w">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J8q1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1J861MEeOdBunZhTRw1w" annotatedElement="_So1J8q1MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J9K1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J9a1MEeOdBunZhTRw1w" name="replace" isAbstract="true">
        <ownedComment xmi:id="_So1J9q1MEeOdBunZhTRw1w" annotatedElement="_So1J9a1MEeOdBunZhTRw1w">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J961MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1J-K1MEeOdBunZhTRw1w" annotatedElement="_So1J961MEeOdBunZhTRw1w">
            <body>Element to be replaced.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J-a1MEeOdBunZhTRw1w" name="newElement" effect="create">
          <ownedComment xmi:id="_So1J-q1MEeOdBunZhTRw1w" annotatedElement="_So1J-a1MEeOdBunZhTRw1w">
            <body>Element to replace original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1J-61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1J_K1MEeOdBunZhTRw1w" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_So1J_a1MEeOdBunZhTRw1w" annotatedElement="_So1J_K1MEeOdBunZhTRw1w">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1J_q1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1J_61MEeOdBunZhTRw1w" annotatedElement="_So1J_q1MEeOdBunZhTRw1w">
            <body>Element to be replaced. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KAK1MEeOdBunZhTRw1w" name="newElement" effect="create">
          <ownedComment xmi:id="_So1KAa1MEeOdBunZhTRw1w" annotatedElement="_So1KAK1MEeOdBunZhTRw1w">
            <body>Element to replace the original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KAq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KA61MEeOdBunZhTRw1w" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_So1KBK1MEeOdBunZhTRw1w" annotatedElement="_So1KA61MEeOdBunZhTRw1w">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KBa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1KBq1MEeOdBunZhTRw1w" annotatedElement="_So1KBa1MEeOdBunZhTRw1w">
            <body>Elements to retain. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KB61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KCK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KCa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KCq1MEeOdBunZhTRw1w" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KC61MEeOdBunZhTRw1w" annotatedElement="_So1KCq1MEeOdBunZhTRw1w">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KDK1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1KDa1MEeOdBunZhTRw1w" annotatedElement="_So1KDK1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KDq1MEeOdBunZhTRw1w" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KD61MEeOdBunZhTRw1w" annotatedElement="_So1KDq1MEeOdBunZhTRw1w">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KEK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_So1KEa1MEeOdBunZhTRw1w" annotatedElement="_So1KEK1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KEq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KE61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1KFK1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1KFa1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1KFq1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1KF61MEeOdBunZhTRw1w" client="_So1Jpq1MEeOdBunZhTRw1w" supplier="_So1KFK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1KGK1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1KGa1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1KGq1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Set-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1KG61MEeOdBunZhTRw1w" client="_So0mdK1MEeOdBunZhTRw1w" supplier="_So1KGK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1KHK1MEeOdBunZhTRw1w" clientDependency="_So1LKa1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String__" isAbstract="true">
      <ownedComment xmi:id="_So1KHa1MEeOdBunZhTRw1w" annotatedElement="_So1KHK1MEeOdBunZhTRw1w">
        <body>Concrete ordered, nonunique collection. Supports duplicate entries. Ordered by
              position in list. </body>
      </ownedComment>
      <generalization xmi:id="_So1KHq1MEeOdBunZhTRw1w" general="_So1KkK1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So1KH61MEeOdBunZhTRw1w" name="List" isAbstract="true">
        <ownedComment xmi:id="_So1KIK1MEeOdBunZhTRw1w" annotatedElement="_So1KH61MEeOdBunZhTRw1w">
          <body>Construct a list and add all elements in the given sequence post:
                result.toSequence() = seq </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KIa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KIq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KI61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KJK1MEeOdBunZhTRw1w" type="_So1Kja1MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KJa1MEeOdBunZhTRw1w" name="add" isAbstract="true" redefinedOperation="_So1KnK1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KJq1MEeOdBunZhTRw1w" annotatedElement="_So1KJa1MEeOdBunZhTRw1w">
          <body>Append the given element into this list at the end. Always returns true. post:
                self.toSequence() = self@pre.toSequence()->append(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KJ61MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1KKK1MEeOdBunZhTRw1w" annotatedElement="_So1KJ61MEeOdBunZhTRw1w">
            <body>Element to be appended to this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KKa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KKq1MEeOdBunZhTRw1w" name="addAll" isAbstract="true" redefinedOperation="_So1Koa1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KK61MEeOdBunZhTRw1w" annotatedElement="_So1KKq1MEeOdBunZhTRw1w">
          <body>Append all elements in the given sequence onto the end of this list. Return true
                if the given collection is not empty. post: self.toSequence() =
                self@pre.toSequence()->union(seq) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KLK1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KLa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KLq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KL61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KMK1MEeOdBunZhTRw1w" name="addAllAt" isAbstract="true">
        <ownedComment xmi:id="_So1KMa1MEeOdBunZhTRw1w" annotatedElement="_So1KMK1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this list at the given position
                index. Return true if the given collection is not empty. pre: index >= 1 and
                index &lt;= self.size()+1 post:  result = self.size() > self@pre.size()
                and self.toSequence() = Sequence{1..seq->size()}->iterate(i; s =
                self@pre.toSequence() | s->insertAt(index+i-1, sequence->at(i))
                e->at(i)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KMq1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KM61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KNK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KNa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KNq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KN61MEeOdBunZhTRw1w" name="addAt" isAbstract="true">
        <ownedComment xmi:id="_So1KOK1MEeOdBunZhTRw1w" annotatedElement="_So1KN61MEeOdBunZhTRw1w">
          <body>Insert an element into this list at the given position index. Always return
                true. pre: index > 1 and index &lt;= self.size()+1 post: result = true
                and         self.toSequence() =
                self@pre.toSequence()->insertAt(index,element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KOa1MEeOdBunZhTRw1w" name="index" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KOq1MEeOdBunZhTRw1w" name="element" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KO61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KPK1MEeOdBunZhTRw1w" name="at" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KPa1MEeOdBunZhTRw1w" annotatedElement="_So1KPK1MEeOdBunZhTRw1w">
          <body>Return the element at the given position index or nothing if there is no element
                at the given position. pre: index > 0 and index &lt;= self.size()
                post: result = self@pre.toSequence()->at(index) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KPq1MEeOdBunZhTRw1w" name="index" effect="create">
          <ownedComment xmi:id="_So1KP61MEeOdBunZhTRw1w" annotatedElement="_So1KPq1MEeOdBunZhTRw1w">
            <body>The position of the element to be returned</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KQK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KQa1MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KQq1MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_So1Kp61MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KQ61MEeOdBunZhTRw1w" annotatedElement="_So1KQq1MEeOdBunZhTRw1w">
          <body>Return true if the content of this list is equal to the given sequence. post:
                result = (self@pre.toSequence() = seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KRK1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KRa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KRq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KR61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KSK1MEeOdBunZhTRw1w" name="first" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KSa1MEeOdBunZhTRw1w" annotatedElement="_So1KSK1MEeOdBunZhTRw1w">
          <body>Returns the first element in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KSq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KS61MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KTK1MEeOdBunZhTRw1w" name="indexOf" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KTa1MEeOdBunZhTRw1w" annotatedElement="_So1KTK1MEeOdBunZhTRw1w">
          <body>Return the position of the first occurrence of the given element in this list or
                nothing if the element is not included in this collection. pre:
                self.includes(element) post: result = self@pre.toSequence() ->
                indexOf(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KTq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1KT61MEeOdBunZhTRw1w" annotatedElement="_So1KTq1MEeOdBunZhTRw1w">
            <body>Element for which to retrieve the position post: result
                  = self.toSequence()->indexOf(element)</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KUK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KUa1MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KUq1MEeOdBunZhTRw1w" name="last" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KU61MEeOdBunZhTRw1w" annotatedElement="_So1KUq1MEeOdBunZhTRw1w">
          <body>Returns the last element  in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KVK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KVa1MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KVq1MEeOdBunZhTRw1w" name="remove" isAbstract="true" redefinedOperation="_So1K761MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KV61MEeOdBunZhTRw1w" annotatedElement="_So1KVq1MEeOdBunZhTRw1w">
          <body>Remove all occurrences of the given element from this list and return the count
                of elements removed. post: self.toSequence() =
                self@pre.toSequence()->excluding(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KWK1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1KWa1MEeOdBunZhTRw1w" annotatedElement="_So1KWK1MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KWq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KW61MEeOdBunZhTRw1w" name="removeAll" isAbstract="true" redefinedOperation="_So1K861MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KXK1MEeOdBunZhTRw1w" annotatedElement="_So1KW61MEeOdBunZhTRw1w">
          <body>Remove all elements in the given sequence from this list. Return true if the
                size of this list changes. post: self.toSequence() = seq->iterate(element; s
                = self@pre.toSequence() | s->excluding(element)) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KXa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KXq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KX61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KYK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KYa1MEeOdBunZhTRw1w" name="removeOne" isAbstract="true" redefinedOperation="_So1K-q1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KYq1MEeOdBunZhTRw1w" annotatedElement="_So1KYa1MEeOdBunZhTRw1w">
          <body>Remove first occurrence of the given element from this list and return true if
                an occurrence of element was removed. post: self.toSequence() = let preSeq =
                self@pre.toSequence() in if result then let index = self@pre.indexOf(element) in
                        self.toSequence() = preSeq->subSequence(1, index-1)->
                union(preSeq->subSequence(index+1, self@pre.size())) else preSeq endif
                (index+1, self@pre.size())) else preSeq endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KY61MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1KZK1MEeOdBunZhTRw1w" annotatedElement="_So1KY61MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KZa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KZq1MEeOdBunZhTRw1w" name="removeAt" isAbstract="true">
        <ownedComment xmi:id="_So1KZ61MEeOdBunZhTRw1w" annotatedElement="_So1KZq1MEeOdBunZhTRw1w">
          <body>Remove the element at the given position index and shift all trailing elements
                left by one position. Return the removed element, or nothing if the index is out of
                bounds. pre: index > 0 and index &lt;= self.size() post: result =
                self@pre.at(index) and let preSeq = self@pre.toSequence() in        
                self.toSequence() = preSeq->subSequence(1,
                index-1)->union(preSeq->subSequence(index+1, self@pre.size()))
                re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KaK1MEeOdBunZhTRw1w" name="index" effect="create">
          <ownedComment xmi:id="_So1Kaa1MEeOdBunZhTRw1w" annotatedElement="_So1KaK1MEeOdBunZhTRw1w">
            <body>The position of the element to remove</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kaq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Ka61MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KbK1MEeOdBunZhTRw1w" name="replace" isAbstract="true" redefinedOperation="_So1K_61MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Kba1MEeOdBunZhTRw1w" annotatedElement="_So1KbK1MEeOdBunZhTRw1w">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: Sequence{1..self.size()}->forAll(i |
                self.at(i) = if self@pre.at(i) = element then newElement else self@pre.at(i) endif)
                else self@pre.at(i) endif) i) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kbq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Kb61MEeOdBunZhTRw1w" annotatedElement="_So1Kbq1MEeOdBunZhTRw1w">
            <body>Element to be replaced</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KcK1MEeOdBunZhTRw1w" name="newElement" effect="create">
          <ownedComment xmi:id="_So1Kca1MEeOdBunZhTRw1w" annotatedElement="_So1KcK1MEeOdBunZhTRw1w">
            <body>Element to replace element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kcq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kc61MEeOdBunZhTRw1w" name="replaceOne" isAbstract="true" redefinedOperation="_So1LBq1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KdK1MEeOdBunZhTRw1w" annotatedElement="_So1Kc61MEeOdBunZhTRw1w">
          <body>Replace one occurrence of the given element with
                newElement and return true if an element was replaced. post:
                Sequence{1..self.size()}->forAll(i | self.at(i) = if result and i =
                self@pre.indexOf(element) then newElement else self@pre.at(i) endif) else
                self@pre.at(i) endif) ) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kda1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Kdq1MEeOdBunZhTRw1w" annotatedElement="_So1Kda1MEeOdBunZhTRw1w">
            <body>element to replace (first occurrence)</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kd61MEeOdBunZhTRw1w" name="newElement" effect="create">
          <ownedComment xmi:id="_So1KeK1MEeOdBunZhTRw1w" annotatedElement="_So1Kd61MEeOdBunZhTRw1w">
            <body>new element to replace first occurrence of element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kea1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Keq1MEeOdBunZhTRw1w" name="replaceAt" isAbstract="true">
        <ownedComment xmi:id="_So1Ke61MEeOdBunZhTRw1w" annotatedElement="_So1Keq1MEeOdBunZhTRw1w">
          <body>Replace the element at the given position index with the given new element.
                Return the replaced element, or nothing if the index is out of bounds pre: index
                > 0 and index &lt;= self.size() post: result = self@pre.at(index) and let
                preSeq = self@pre.toSequence() in         self.toSequence() =
                preSeq->subSequence(1,
                index-1)->append(newElement)->union(preSeq->subSequence(index+1,
                self@pre.size())) re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KfK1MEeOdBunZhTRw1w" name="index" effect="create">
          <ownedComment xmi:id="_So1Kfa1MEeOdBunZhTRw1w" annotatedElement="_So1KfK1MEeOdBunZhTRw1w">
            <body>The position of the element to be replaced by element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kfq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Kf61MEeOdBunZhTRw1w" annotatedElement="_So1Kfq1MEeOdBunZhTRw1w">
            <body>Element to replace the element at position index</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KgK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Kga1MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kgq1MEeOdBunZhTRw1w" name="retainAll" isAbstract="true" redefinedOperation="_So1LDa1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Kg61MEeOdBunZhTRw1w" annotatedElement="_So1Kgq1MEeOdBunZhTRw1w">
          <body>Remove all instances of all elements in this list that are NOT in the given
                collection. Return true if the size of this collection changes.
                post: self.toSequence() = (self@pre.toSequence()->asSet() -
                seq->asSet())->iterate(element; a = self@pre.toSequence() |
                seq->excluding(element)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KhK1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Kha1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Khq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kh61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KiK1MEeOdBunZhTRw1w" name="subList" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Kia1MEeOdBunZhTRw1w" annotatedElement="_So1KiK1MEeOdBunZhTRw1w">
          <body>Return a new list containing all elements of this list from the lower position
                index up to and including the upper position index. post: if lower &lt; 1 or
                upper > self.size() then result.toSequence()->empty() else
                result.toSequence() = self.toSequence()->subSequence(lower,upper) endif
                e()->subSequence(lower,upper) endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kiq1MEeOdBunZhTRw1w" name="fromIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Ki61MEeOdBunZhTRw1w" name="toIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KjK1MEeOdBunZhTRw1w" type="_So1Kja1MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_So1Kja1MEeOdBunZhTRw1w" name="List&lt;T>">
        <templateBinding xmi:id="_So1Kjq1MEeOdBunZhTRw1w">
          <parameterSubstitution xmi:id="_So1Kj61MEeOdBunZhTRw1w">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1KkK1MEeOdBunZhTRw1w" clientDependency="_So1LJa1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Bag__PrimitiveTypes$String__" isAbstract="true">
      <ownedComment xmi:id="_So1Kka1MEeOdBunZhTRw1w" annotatedElement="_So1KkK1MEeOdBunZhTRw1w">
        <body>Concrete unordered, non-unique collection. Supports duplicate entries. </body>
      </ownedComment>
      <generalization xmi:id="_So1Kkq1MEeOdBunZhTRw1w" general="_So1KsK1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So1Kk61MEeOdBunZhTRw1w" name="Bag" isAbstract="true">
        <ownedComment xmi:id="_So1KlK1MEeOdBunZhTRw1w" annotatedElement="_So1Kk61MEeOdBunZhTRw1w">
          <body>Construct a bag and add all elements in the given sequence. post:
                result.toSequence()->asBag() = seq->asBag() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kla1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1Klq1MEeOdBunZhTRw1w" annotatedElement="_So1Kla1MEeOdBunZhTRw1w">
            <body>Elements to be added to the new bag. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Kl61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KmK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kma1MEeOdBunZhTRw1w" type="_So1Kra1MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kmq1MEeOdBunZhTRw1w" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_So1Km61MEeOdBunZhTRw1w" annotatedElement="_So1Kmq1MEeOdBunZhTRw1w">
          <body>Destroy this bag. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KnK1MEeOdBunZhTRw1w" name="add" isAbstract="true" redefinedOperation="_So1Ksq1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Kna1MEeOdBunZhTRw1w" annotatedElement="_So1KnK1MEeOdBunZhTRw1w">
          <body>Insert the given element into this bag. Always returns true. post:
                self.toSequence()->asBag()
                = self@pre.toSequence()->asBag()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Knq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Kn61MEeOdBunZhTRw1w" annotatedElement="_So1Knq1MEeOdBunZhTRw1w">
            <body>Element to be appended to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KoK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Koa1MEeOdBunZhTRw1w" name="addAll" isAbstract="true" redefinedOperation="_So1KuK1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Koq1MEeOdBunZhTRw1w" annotatedElement="_So1Koa1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this bag. Return true if the
                given sequence is not empty. post: self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->union(seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Ko61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KpK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Kpa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kpq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kp61MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_So1Kx61MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1KqK1MEeOdBunZhTRw1w" annotatedElement="_So1Kp61MEeOdBunZhTRw1w">
          <body>Return true if the content of this bag is equal to the given sequence considered
                as a bag. post: result = (self@pre.toSequence()->asBag() =
                seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kqa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Kqq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Kq61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1KrK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_So1Kra1MEeOdBunZhTRw1w" name="Bag&lt;T>">
        <templateBinding xmi:id="_So1Krq1MEeOdBunZhTRw1w">
          <parameterSubstitution xmi:id="_So1Kr61MEeOdBunZhTRw1w">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1KsK1MEeOdBunZhTRw1w" clientDependency="_So1LIa1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Collection__PrimitiveTypes$String__" isAbstract="true">
      <ownedComment xmi:id="_So1Ksa1MEeOdBunZhTRw1w" annotatedElement="_So1KsK1MEeOdBunZhTRw1w">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_So1Ksq1MEeOdBunZhTRw1w" name="add" isAbstract="true">
        <ownedComment xmi:id="_So1Ks61MEeOdBunZhTRw1w" annotatedElement="_So1Ksq1MEeOdBunZhTRw1w">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1KtK1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1Kta1MEeOdBunZhTRw1w" annotatedElement="_So1KtK1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Ktq1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1Kt61MEeOdBunZhTRw1w" annotatedElement="_So1Ktq1MEeOdBunZhTRw1w">
            <body>Element to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1KuK1MEeOdBunZhTRw1w" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_So1Kua1MEeOdBunZhTRw1w" annotatedElement="_So1KuK1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kuq1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1Ku61MEeOdBunZhTRw1w" annotatedElement="_So1Kuq1MEeOdBunZhTRw1w">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1KvK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Kva1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kvq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kv61MEeOdBunZhTRw1w" name="clear" isAbstract="true">
        <ownedComment xmi:id="_So1KwK1MEeOdBunZhTRw1w" annotatedElement="_So1Kv61MEeOdBunZhTRw1w">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kwa1MEeOdBunZhTRw1w" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Kwq1MEeOdBunZhTRw1w" annotatedElement="_So1Kwa1MEeOdBunZhTRw1w">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kw61MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1KxK1MEeOdBunZhTRw1w" annotatedElement="_So1Kw61MEeOdBunZhTRw1w">
            <body>Element to be counted.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kxa1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1Kxq1MEeOdBunZhTRw1w" annotatedElement="_So1Kxa1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kx61MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1KyK1MEeOdBunZhTRw1w" annotatedElement="_So1Kx61MEeOdBunZhTRw1w">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Kya1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1Kyq1MEeOdBunZhTRw1w" annotatedElement="_So1Kya1MEeOdBunZhTRw1w">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Ky61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1KzK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Kza1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Kzq1MEeOdBunZhTRw1w" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Kz61MEeOdBunZhTRw1w" annotatedElement="_So1Kzq1MEeOdBunZhTRw1w">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K0K1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1K0a1MEeOdBunZhTRw1w" annotatedElement="_So1K0K1MEeOdBunZhTRw1w">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K0q1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1K061MEeOdBunZhTRw1w" annotatedElement="_So1K0q1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K1K1MEeOdBunZhTRw1w" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1K1a1MEeOdBunZhTRw1w" annotatedElement="_So1K1K1MEeOdBunZhTRw1w">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K1q1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1K161MEeOdBunZhTRw1w" annotatedElement="_So1K1q1MEeOdBunZhTRw1w">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1K2K1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1K2a1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K2q1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K261MEeOdBunZhTRw1w" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1K3K1MEeOdBunZhTRw1w" annotatedElement="_So1K261MEeOdBunZhTRw1w">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K3a1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1K3q1MEeOdBunZhTRw1w" annotatedElement="_So1K3a1MEeOdBunZhTRw1w">
            <body>Element to be tested for containment.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K361MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1K4K1MEeOdBunZhTRw1w" annotatedElement="_So1K361MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K4a1MEeOdBunZhTRw1w" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1K4q1MEeOdBunZhTRw1w" annotatedElement="_So1K4a1MEeOdBunZhTRw1w">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K461MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1K5K1MEeOdBunZhTRw1w" annotatedElement="_So1K461MEeOdBunZhTRw1w">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1K5a1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1K5q1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K561MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K6K1MEeOdBunZhTRw1w" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1K6a1MEeOdBunZhTRw1w" annotatedElement="_So1K6K1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K6q1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1K661MEeOdBunZhTRw1w" annotatedElement="_So1K6q1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K7K1MEeOdBunZhTRw1w" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1K7a1MEeOdBunZhTRw1w" annotatedElement="_So1K7K1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K7q1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K761MEeOdBunZhTRw1w" name="remove" isAbstract="true">
        <ownedComment xmi:id="_So1K8K1MEeOdBunZhTRw1w" annotatedElement="_So1K761MEeOdBunZhTRw1w">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K8a1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K8q1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K861MEeOdBunZhTRw1w" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_So1K9K1MEeOdBunZhTRw1w" annotatedElement="_So1K861MEeOdBunZhTRw1w">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K9a1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1K9q1MEeOdBunZhTRw1w" annotatedElement="_So1K9a1MEeOdBunZhTRw1w">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1K961MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1K-K1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K-a1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K-q1MEeOdBunZhTRw1w" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_So1K-61MEeOdBunZhTRw1w" annotatedElement="_So1K-q1MEeOdBunZhTRw1w">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1K_K1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1K_a1MEeOdBunZhTRw1w" annotatedElement="_So1K_K1MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1K_q1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1K_61MEeOdBunZhTRw1w" name="replace" isAbstract="true">
        <ownedComment xmi:id="_So1LAK1MEeOdBunZhTRw1w" annotatedElement="_So1K_61MEeOdBunZhTRw1w">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LAa1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1LAq1MEeOdBunZhTRw1w" annotatedElement="_So1LAa1MEeOdBunZhTRw1w">
            <body>Element to be replaced.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LA61MEeOdBunZhTRw1w" name="newElement" effect="create">
          <ownedComment xmi:id="_So1LBK1MEeOdBunZhTRw1w" annotatedElement="_So1LA61MEeOdBunZhTRw1w">
            <body>Element to replace original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LBa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LBq1MEeOdBunZhTRw1w" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_So1LB61MEeOdBunZhTRw1w" annotatedElement="_So1LBq1MEeOdBunZhTRw1w">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LCK1MEeOdBunZhTRw1w" name="element" effect="create">
          <ownedComment xmi:id="_So1LCa1MEeOdBunZhTRw1w" annotatedElement="_So1LCK1MEeOdBunZhTRw1w">
            <body>Element to be replaced. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LCq1MEeOdBunZhTRw1w" name="newElement" effect="create">
          <ownedComment xmi:id="_So1LC61MEeOdBunZhTRw1w" annotatedElement="_So1LCq1MEeOdBunZhTRw1w">
            <body>Element to replace the original element. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LDK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LDa1MEeOdBunZhTRw1w" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_So1LDq1MEeOdBunZhTRw1w" annotatedElement="_So1LDa1MEeOdBunZhTRw1w">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LD61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1LEK1MEeOdBunZhTRw1w" annotatedElement="_So1LD61MEeOdBunZhTRw1w">
            <body>Elements to retain. </body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LEa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LEq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LE61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LFK1MEeOdBunZhTRw1w" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1LFa1MEeOdBunZhTRw1w" annotatedElement="_So1LFK1MEeOdBunZhTRw1w">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LFq1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1LF61MEeOdBunZhTRw1w" annotatedElement="_So1LFq1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LGK1MEeOdBunZhTRw1w" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1LGa1MEeOdBunZhTRw1w" annotatedElement="_So1LGK1MEeOdBunZhTRw1w">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_So1LG61MEeOdBunZhTRw1w" annotatedElement="_So1LGq1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LHK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LHa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1LHq1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1LH61MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1LIK1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1LIa1MEeOdBunZhTRw1w" client="_So1KsK1MEeOdBunZhTRw1w" supplier="_So1LHq1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1LIq1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1LI61MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1LJK1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1LJa1MEeOdBunZhTRw1w" client="_So1KkK1MEeOdBunZhTRw1w" supplier="_So1LIq1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1LJq1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1LJ61MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1LKK1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1LKa1MEeOdBunZhTRw1w" client="_So1KHK1MEeOdBunZhTRw1w" supplier="_So1LJq1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1LKq1MEeOdBunZhTRw1w" clientDependency="_So1MN61MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____" isAbstract="true">
      <ownedComment xmi:id="_So1LK61MEeOdBunZhTRw1w" annotatedElement="_So1LKq1MEeOdBunZhTRw1w">
        <body>Concrete ordered, nonunique collection. Supports duplicate entries. Ordered by
              position in list. </body>
      </ownedComment>
      <generalization xmi:id="_So1LLK1MEeOdBunZhTRw1w" general="_So1Lnq1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So1LLa1MEeOdBunZhTRw1w" name="List" isAbstract="true">
        <ownedComment xmi:id="_So1LLq1MEeOdBunZhTRw1w" annotatedElement="_So1LLa1MEeOdBunZhTRw1w">
          <body>Construct a list and add all elements in the given sequence post:
                result.toSequence() = seq </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LL61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" effect="create">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LMK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LMa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LMq1MEeOdBunZhTRw1w" type="_So1Lm61MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LM61MEeOdBunZhTRw1w" name="add" isAbstract="true" redefinedOperation="_So1Lqq1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1LNK1MEeOdBunZhTRw1w" annotatedElement="_So1LM61MEeOdBunZhTRw1w">
          <body>Append the given element into this list at the end. Always returns true. post:
                self.toSequence() = self@pre.toSequence()->append(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LNa1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1LNq1MEeOdBunZhTRw1w" annotatedElement="_So1LNa1MEeOdBunZhTRw1w">
            <body>Element to be appended to this collection</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LN61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LOK1MEeOdBunZhTRw1w" name="addAll" isAbstract="true" redefinedOperation="_So1Lr61MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1LOa1MEeOdBunZhTRw1w" annotatedElement="_So1LOK1MEeOdBunZhTRw1w">
          <body>Append all elements in the given sequence onto the end of this list. Return true
                if the given collection is not empty. post: self.toSequence() =
                self@pre.toSequence()->union(seq) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LOq1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LO61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LPK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LPa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LPq1MEeOdBunZhTRw1w" name="addAllAt" isAbstract="true">
        <ownedComment xmi:id="_So1LP61MEeOdBunZhTRw1w" annotatedElement="_So1LPq1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this list at the given position
                index. Return true if the given collection is not empty. pre: index >= 1 and
                index &lt;= self.size()+1 post:  result = self.size() > self@pre.size()
                and self.toSequence() = Sequence{1..seq->size()}->iterate(i; s =
                self@pre.toSequence() | s->insertAt(index+i-1, sequence->at(i))
                e->at(i)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LQK1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LQa1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LQq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LQ61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LRK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LRa1MEeOdBunZhTRw1w" name="addAt" isAbstract="true">
        <ownedComment xmi:id="_So1LRq1MEeOdBunZhTRw1w" annotatedElement="_So1LRa1MEeOdBunZhTRw1w">
          <body>Insert an element into this list at the given position index. Always return
                true. pre: index > 1 and index &lt;= self.size()+1 post: result = true
                and         self.toSequence() =
                self@pre.toSequence()->insertAt(index,element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LR61MEeOdBunZhTRw1w" name="index" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LSK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create"/>
        <ownedParameter xmi:id="_So1LSa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LSq1MEeOdBunZhTRw1w" name="at" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1LS61MEeOdBunZhTRw1w" annotatedElement="_So1LSq1MEeOdBunZhTRw1w">
          <body>Return the element at the given position index or nothing if there is no element
                at the given position. pre: index > 0 and index &lt;= self.size()
                post: result = self@pre.toSequence()->at(index) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LTK1MEeOdBunZhTRw1w" name="index" effect="create">
          <ownedComment xmi:id="_So1LTa1MEeOdBunZhTRw1w" annotatedElement="_So1LTK1MEeOdBunZhTRw1w">
            <body>The position of the element to be returned</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LTq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LT61MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LUK1MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_So1Lta1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1LUa1MEeOdBunZhTRw1w" annotatedElement="_So1LUK1MEeOdBunZhTRw1w">
          <body>Return true if the content of this list is equal to the given sequence. post:
                result = (self@pre.toSequence() = seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LUq1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LU61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LVK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LVa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LVq1MEeOdBunZhTRw1w" name="first" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1LV61MEeOdBunZhTRw1w" annotatedElement="_So1LVq1MEeOdBunZhTRw1w">
          <body>Returns the first element in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LWK1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LWa1MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LWq1MEeOdBunZhTRw1w" name="indexOf" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1LW61MEeOdBunZhTRw1w" annotatedElement="_So1LWq1MEeOdBunZhTRw1w">
          <body>Return the position of the first occurrence of the given element in this list or
                nothing if the element is not included in this collection. pre:
                self.includes(element) post: result = self@pre.toSequence() ->
                indexOf(element) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LXK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1LXa1MEeOdBunZhTRw1w" annotatedElement="_So1LXK1MEeOdBunZhTRw1w">
            <body>Element for which to retrieve the position post: result
                  = self.toSequence()->indexOf(element)</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LXq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LX61MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LYK1MEeOdBunZhTRw1w" name="last" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1LYa1MEeOdBunZhTRw1w" annotatedElement="_So1LYK1MEeOdBunZhTRw1w">
          <body>Returns the last element  in this list, if one exists pre: self.notEmpty() post:
                result = self@pre.toSequence()->first() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LYq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LY61MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LZK1MEeOdBunZhTRw1w" name="remove" isAbstract="true" redefinedOperation="_So1L_a1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1LZa1MEeOdBunZhTRw1w" annotatedElement="_So1LZK1MEeOdBunZhTRw1w">
          <body>Remove all occurrences of the given element from this list and return the count
                of elements removed. post: self.toSequence() =
                self@pre.toSequence()->excluding(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LZq1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1LZ61MEeOdBunZhTRw1w" annotatedElement="_So1LZq1MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LaK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Laa1MEeOdBunZhTRw1w" name="removeAll" isAbstract="true" redefinedOperation="_So1MAa1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Laq1MEeOdBunZhTRw1w" annotatedElement="_So1Laa1MEeOdBunZhTRw1w">
          <body>Remove all elements in the given sequence from this list. Return true if the
                size of this list changes. post: self.toSequence() = seq->iterate(element; s
                = self@pre.toSequence() | s->excluding(element)) ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1La61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LbK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Lba1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lbq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lb61MEeOdBunZhTRw1w" name="removeOne" isAbstract="true" redefinedOperation="_So1MCK1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1LcK1MEeOdBunZhTRw1w" annotatedElement="_So1Lb61MEeOdBunZhTRw1w">
          <body>Remove first occurrence of the given element from this list and return true if
                an occurrence of element was removed. post: self.toSequence() = let preSeq =
                self@pre.toSequence() in if result then let index = self@pre.indexOf(element) in
                        self.toSequence() = preSeq->subSequence(1, index-1)->
                union(preSeq->subSequence(index+1, self@pre.size())) else preSeq endif
                (index+1, self@pre.size())) else preSeq endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lca1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lcq1MEeOdBunZhTRw1w" annotatedElement="_So1Lca1MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lc61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LdK1MEeOdBunZhTRw1w" name="removeAt" isAbstract="true">
        <ownedComment xmi:id="_So1Lda1MEeOdBunZhTRw1w" annotatedElement="_So1LdK1MEeOdBunZhTRw1w">
          <body>Remove the element at the given position index and shift all trailing elements
                left by one position. Return the removed element, or nothing if the index is out of
                bounds. pre: index > 0 and index &lt;= self.size() post: result =
                self@pre.at(index) and let preSeq = self@pre.toSequence() in        
                self.toSequence() = preSeq->subSequence(1,
                index-1)->union(preSeq->subSequence(index+1, self@pre.size()))
                re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Ldq1MEeOdBunZhTRw1w" name="index" effect="create">
          <ownedComment xmi:id="_So1Ld61MEeOdBunZhTRw1w" annotatedElement="_So1Ldq1MEeOdBunZhTRw1w">
            <body>The position of the element to remove</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LeK1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Lea1MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Leq1MEeOdBunZhTRw1w" name="replace" isAbstract="true" redefinedOperation="_So1MDa1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Le61MEeOdBunZhTRw1w" annotatedElement="_So1Leq1MEeOdBunZhTRw1w">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: Sequence{1..self.size()}->forAll(i |
                self.at(i) = if self@pre.at(i) = element then newElement else self@pre.at(i) endif)
                else self@pre.at(i) endif) i) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LfK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lfa1MEeOdBunZhTRw1w" annotatedElement="_So1LfK1MEeOdBunZhTRw1w">
            <body>Element to be replaced</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lfq1MEeOdBunZhTRw1w" name="newElement" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lf61MEeOdBunZhTRw1w" annotatedElement="_So1Lfq1MEeOdBunZhTRw1w">
            <body>Element to replace element</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LgK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lga1MEeOdBunZhTRw1w" name="replaceOne" isAbstract="true" redefinedOperation="_So1MFK1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Lgq1MEeOdBunZhTRw1w" annotatedElement="_So1Lga1MEeOdBunZhTRw1w">
          <body>Replace one occurrence of the given element with
                newElement and return true if an element was replaced. post:
                Sequence{1..self.size()}->forAll(i | self.at(i) = if result and i =
                self@pre.indexOf(element) then newElement else self@pre.at(i) endif) else
                self@pre.at(i) endif) ) endif) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lg61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1LhK1MEeOdBunZhTRw1w" annotatedElement="_So1Lg61MEeOdBunZhTRw1w">
            <body>element to replace (first occurrence)</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lha1MEeOdBunZhTRw1w" name="newElement" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lhq1MEeOdBunZhTRw1w" annotatedElement="_So1Lha1MEeOdBunZhTRw1w">
            <body>new element to replace first occurrence of element</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lh61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LiK1MEeOdBunZhTRw1w" name="replaceAt" isAbstract="true">
        <ownedComment xmi:id="_So1Lia1MEeOdBunZhTRw1w" annotatedElement="_So1LiK1MEeOdBunZhTRw1w">
          <body>Replace the element at the given position index with the given new element.
                Return the replaced element, or nothing if the index is out of bounds pre: index
                > 0 and index &lt;= self.size() post: result = self@pre.at(index) and let
                preSeq = self@pre.toSequence() in         self.toSequence() =
                preSeq->subSequence(1,
                index-1)->append(newElement)->union(preSeq->subSequence(index+1,
                self@pre.size())) re.size())) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Liq1MEeOdBunZhTRw1w" name="index" effect="create">
          <ownedComment xmi:id="_So1Li61MEeOdBunZhTRw1w" annotatedElement="_So1Liq1MEeOdBunZhTRw1w">
            <body>The position of the element to be replaced by element</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LjK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lja1MEeOdBunZhTRw1w" annotatedElement="_So1LjK1MEeOdBunZhTRw1w">
            <body>Element to replace the element at position index</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Ljq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Lj61MEeOdBunZhTRw1w"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LkK1MEeOdBunZhTRw1w" name="retainAll" isAbstract="true" redefinedOperation="_So1MG61MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Lka1MEeOdBunZhTRw1w" annotatedElement="_So1LkK1MEeOdBunZhTRw1w">
          <body>Remove all instances of all elements in this list that are NOT in the given
                collection. Return true if the size of this collection changes.
                post: self.toSequence() = (self@pre.toSequence()->asSet() -
                seq->asSet())->iterate(element; a = self@pre.toSequence() |
                seq->excluding(element)) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lkq1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Lk61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1LlK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lla1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Llq1MEeOdBunZhTRw1w" name="subList" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1Ll61MEeOdBunZhTRw1w" annotatedElement="_So1Llq1MEeOdBunZhTRw1w">
          <body>Return a new list containing all elements of this list from the lower position
                index up to and including the upper position index. post: if lower &lt; 1 or
                upper > self.size() then result.toSequence()->empty() else
                result.toSequence() = self.toSequence()->subSequence(lower,upper) endif
                e()->subSequence(lower,upper) endif </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LmK1MEeOdBunZhTRw1w" name="fromIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lma1MEeOdBunZhTRw1w" name="toIndex" effect="create">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lmq1MEeOdBunZhTRw1w" type="_So1Lm61MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_So1Lm61MEeOdBunZhTRw1w" name="List&lt;T>">
        <templateBinding xmi:id="_So1LnK1MEeOdBunZhTRw1w">
          <parameterSubstitution xmi:id="_So1Lna1MEeOdBunZhTRw1w" actual="_So1KHK1MEeOdBunZhTRw1w">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1Lnq1MEeOdBunZhTRw1w" clientDependency="_So1MM61MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Bag__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____" isAbstract="true">
      <ownedComment xmi:id="_So1Ln61MEeOdBunZhTRw1w" annotatedElement="_So1Lnq1MEeOdBunZhTRw1w">
        <body>Concrete unordered, non-unique collection. Supports duplicate entries. </body>
      </ownedComment>
      <generalization xmi:id="_So1LoK1MEeOdBunZhTRw1w" general="_So1Lvq1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So1Loa1MEeOdBunZhTRw1w" name="Bag" isAbstract="true">
        <ownedComment xmi:id="_So1Loq1MEeOdBunZhTRw1w" annotatedElement="_So1Loa1MEeOdBunZhTRw1w">
          <body>Construct a bag and add all elements in the given sequence. post:
                result.toSequence()->asBag() = seq->asBag() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lo61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1LpK1MEeOdBunZhTRw1w" annotatedElement="_So1Lo61MEeOdBunZhTRw1w">
            <body>Elements to be added to the new bag. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Lpa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Lpq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lp61MEeOdBunZhTRw1w" type="_So1Lu61MEeOdBunZhTRw1w" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So1LqK1MEeOdBunZhTRw1w" name="destroy" isAbstract="true">
        <ownedComment xmi:id="_So1Lqa1MEeOdBunZhTRw1w" annotatedElement="_So1LqK1MEeOdBunZhTRw1w">
          <body>Destroy this bag. </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lqq1MEeOdBunZhTRw1w" name="add" isAbstract="true" redefinedOperation="_So1LwK1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Lq61MEeOdBunZhTRw1w" annotatedElement="_So1Lqq1MEeOdBunZhTRw1w">
          <body>Insert the given element into this bag. Always returns true. post:
                self.toSequence()->asBag()
                = self@pre.toSequence()->asBag()->including(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LrK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lra1MEeOdBunZhTRw1w" annotatedElement="_So1LrK1MEeOdBunZhTRw1w">
            <body>Element to be appended to this collection.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Lrq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lr61MEeOdBunZhTRw1w" name="addAll" isAbstract="true" redefinedOperation="_So1Lxq1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1LsK1MEeOdBunZhTRw1w" annotatedElement="_So1Lr61MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this bag. Return true if the
                given sequence is not empty. post: self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->union(seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lsa1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Lsq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Ls61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LtK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lta1MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true" redefinedOperation="_So1L1a1MEeOdBunZhTRw1w">
        <ownedComment xmi:id="_So1Ltq1MEeOdBunZhTRw1w" annotatedElement="_So1Lta1MEeOdBunZhTRw1w">
          <body>Return true if the content of this bag is equal to the given sequence considered
                as a bag. post: result = (self@pre.toSequence()->asBag() =
                seq->asBag()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lt61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1LuK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Lua1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1Luq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_So1Lu61MEeOdBunZhTRw1w" name="Bag&lt;T>">
        <templateBinding xmi:id="_So1LvK1MEeOdBunZhTRw1w">
          <parameterSubstitution xmi:id="_So1Lva1MEeOdBunZhTRw1w" actual="_So1KHK1MEeOdBunZhTRw1w">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1Lvq1MEeOdBunZhTRw1w" clientDependency="_So1ML61MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Collection__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____" isAbstract="true">
      <ownedComment xmi:id="_So1Lv61MEeOdBunZhTRw1w" annotatedElement="_So1Lvq1MEeOdBunZhTRw1w">
        <body>An abstract collection of elements of a specified type &lt;T>. Various
              concrete subclasses support ordered and unordered collections, with and without
              duplicates allowed. </body>
      </ownedComment>
      <ownedOperation xmi:id="_So1LwK1MEeOdBunZhTRw1w" name="add" isAbstract="true">
        <ownedComment xmi:id="_So1Lwa1MEeOdBunZhTRw1w" annotatedElement="_So1LwK1MEeOdBunZhTRw1w">
          <body>Insert the given element into this collection. Return true if a new element is
                actually inserted. post: result = self.size() > self@pre.size() and result
                implies self.count(element) = self@pre.count(element)+1 lement)+1 </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1Lwq1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1Lw61MEeOdBunZhTRw1w" annotatedElement="_So1Lwq1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LxK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1Lxa1MEeOdBunZhTRw1w" annotatedElement="_So1LxK1MEeOdBunZhTRw1w">
            <body>Element to be added to this collection.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lxq1MEeOdBunZhTRw1w" name="addAll" isAbstract="true">
        <ownedComment xmi:id="_So1Lx61MEeOdBunZhTRw1w" annotatedElement="_So1Lxq1MEeOdBunZhTRw1w">
          <body>Insert all elements in the given sequence into this collection. Returns true if
                this collection increased in size. post: result = self.size() >
                self@pre.size() and self.includesAll(seq) sAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1LyK1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1Lya1MEeOdBunZhTRw1w" annotatedElement="_So1LyK1MEeOdBunZhTRw1w">
            <body>Elements to be added to this collection.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Lyq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Ly61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1LzK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lza1MEeOdBunZhTRw1w" name="clear" isAbstract="true">
        <ownedComment xmi:id="_So1Lzq1MEeOdBunZhTRw1w" annotatedElement="_So1Lza1MEeOdBunZhTRw1w">
          <body>Remove all elements from this collection. post: result = self.isEmpty() </body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_So1Lz61MEeOdBunZhTRw1w" name="count" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L0K1MEeOdBunZhTRw1w" annotatedElement="_So1Lz61MEeOdBunZhTRw1w">
          <body>Return the number of elements in this collection that match a specified element.
                post: result = self.toSequence()->count(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L0a1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1L0q1MEeOdBunZhTRw1w" annotatedElement="_So1L0a1MEeOdBunZhTRw1w">
            <body>Element to be counted.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1L061MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1L1K1MEeOdBunZhTRw1w" annotatedElement="_So1L061MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L1a1MEeOdBunZhTRw1w" name="equals" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L1q1MEeOdBunZhTRw1w" annotatedElement="_So1L1a1MEeOdBunZhTRw1w">
          <body>Return true if the content of this collection is equal to the given sequence.
                post: result implies self.includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L161MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1L2K1MEeOdBunZhTRw1w" annotatedElement="_So1L161MEeOdBunZhTRw1w">
            <body>The elements to which the content of this collection is to be compared.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1L2a1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1L2q1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1L261MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L3K1MEeOdBunZhTRw1w" name="excludes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L3a1MEeOdBunZhTRw1w" annotatedElement="_So1L3K1MEeOdBunZhTRw1w">
          <body>Return true if this collection does not contain the given element. post:
                result = self.toSequence()->excludes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L3q1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1L361MEeOdBunZhTRw1w" annotatedElement="_So1L3q1MEeOdBunZhTRw1w">
            <body>Element to be tested for containment.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1L4K1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1L4a1MEeOdBunZhTRw1w" annotatedElement="_So1L4K1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L4q1MEeOdBunZhTRw1w" name="excludesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L461MEeOdBunZhTRw1w" annotatedElement="_So1L4q1MEeOdBunZhTRw1w">
          <body>Return true if all elements in the given sequence are not in this collection.
                post: result = self.toSequence()->excludesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L5K1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1L5a1MEeOdBunZhTRw1w" annotatedElement="_So1L5K1MEeOdBunZhTRw1w">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1L5q1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1L561MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1L6K1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L6a1MEeOdBunZhTRw1w" name="includes" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L6q1MEeOdBunZhTRw1w" annotatedElement="_So1L6a1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains the given element. post: result =
                self.toSequence()->includes(element) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L661MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1L7K1MEeOdBunZhTRw1w" annotatedElement="_So1L661MEeOdBunZhTRw1w">
            <body>Element to be tested for containment.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1L7a1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1L7q1MEeOdBunZhTRw1w" annotatedElement="_So1L7a1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L761MEeOdBunZhTRw1w" name="includesAll" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L8K1MEeOdBunZhTRw1w" annotatedElement="_So1L761MEeOdBunZhTRw1w">
          <body>Return true if all elements in the given sequence are also in this collection.
                post: result = self.toSequence()->includesAll(seq) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L8a1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1L8q1MEeOdBunZhTRw1w" annotatedElement="_So1L8a1MEeOdBunZhTRw1w">
            <body>Elements to be tested for containment. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1L861MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1L9K1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1L9a1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L9q1MEeOdBunZhTRw1w" name="isEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L961MEeOdBunZhTRw1w" annotatedElement="_So1L9q1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains no elements. post: result =
                self.toSequence()->isEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L-K1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1L-a1MEeOdBunZhTRw1w" annotatedElement="_So1L-K1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L-q1MEeOdBunZhTRw1w" name="notEmpty" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1L-61MEeOdBunZhTRw1w" annotatedElement="_So1L-q1MEeOdBunZhTRw1w">
          <body>Return true if this collection contains at least one element. post: result =
                self.toSequence()->notEmpty() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L_K1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1L_a1MEeOdBunZhTRw1w" name="remove" isAbstract="true">
        <ownedComment xmi:id="_So1L_q1MEeOdBunZhTRw1w" annotatedElement="_So1L_a1MEeOdBunZhTRw1w">
          <body>Remove all occurrences of the given element from this collection and return the
                count of elements removed removed. post: result = self@pre.count(element) and
                self.size() = self@pre.size() - result and self@pre.toSequence()->forAll(e |
                self.count(e) = if e = element then 0 else self@pre.count(e) endif ) hen 0 else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1L_61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w"/>
        <ownedParameter xmi:id="_So1MAK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MAa1MEeOdBunZhTRw1w" name="removeAll" isAbstract="true">
        <ownedComment xmi:id="_So1MAq1MEeOdBunZhTRw1w" annotatedElement="_So1MAa1MEeOdBunZhTRw1w">
          <body>Remove all occurrences of all elements in the given sequence from this
                collection. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and          self.toSequence()->asSet()
                = self@pre.toSequence()->asSet() - seq->asSet() and
                self.toSequence()->forAll(e | self.count(e) = self@pre.count(e)) count(e))
              </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MA61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1MBK1MEeOdBunZhTRw1w" annotatedElement="_So1MA61MEeOdBunZhTRw1w">
            <body>Elements to be removed from the collection. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MBa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MBq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MB61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MCK1MEeOdBunZhTRw1w" name="removeOne" isAbstract="true">
        <ownedComment xmi:id="_So1MCa1MEeOdBunZhTRw1w" annotatedElement="_So1MCK1MEeOdBunZhTRw1w">
          <body>Remove one occurrence of the given element from this collection and return true
                if an occurrence of element was removed. If the collection is ordered, the first
                element will be removed. post: result = self@pre.includes(element) and self.size() =
                self@pre.size() - (if result then 1 else 0) endif and
                self@pre.toSequence()->forAll(e | self.count(e) = if result and e = element
                then self@pre.count(e)-1 else self@pre.count(e) endif ) (e)-1 else self@pre.count(e)
                endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MCq1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1MC61MEeOdBunZhTRw1w" annotatedElement="_So1MCq1MEeOdBunZhTRw1w">
            <body>Element to be removed from this collection.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MDK1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MDa1MEeOdBunZhTRw1w" name="replace" isAbstract="true">
        <ownedComment xmi:id="_So1MDq1MEeOdBunZhTRw1w" annotatedElement="_So1MDa1MEeOdBunZhTRw1w">
          <body>Replace all occurrences of the given element with a new element and return
                the count of replaced elements. post: result = if element&lt;>newElement
                then self@pre.count(element) else 0 endif and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if e = newElement then
                self@pre.count(e)+result else self@pre.count(e) endif ) result else
                self@pre.count(e) endif ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MD61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1MEK1MEeOdBunZhTRw1w" annotatedElement="_So1MD61MEeOdBunZhTRw1w">
            <body>Element to be replaced.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MEa1MEeOdBunZhTRw1w" name="newElement" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1MEq1MEeOdBunZhTRw1w" annotatedElement="_So1MEa1MEeOdBunZhTRw1w">
            <body>Element to replace original element. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ME61MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MFK1MEeOdBunZhTRw1w" name="replaceOne" isAbstract="true">
        <ownedComment xmi:id="_So1MFa1MEeOdBunZhTRw1w" annotatedElement="_So1MFK1MEeOdBunZhTRw1w">
          <body>Replace one occurrence of the given element  with newElement and return true
                if an element was replaced. If the collection is ordered, this will be the first
                occurrence. post: result = (self@pre.includes(element) and
                element&lt;>newElement) and self.size() = self@pre.size() and
                self.toSequence()->forAll(e | self.count(e) = if result and e = element then
                self@pre.count(e)-1 else if result and e = newElement then self@pre.count(e)+1 else
                self@pre.count(e) endif endif ) f@pre.count(e)+1 else self@pre.count(e) endif endif
                ) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MFq1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1MF61MEeOdBunZhTRw1w" annotatedElement="_So1MFq1MEeOdBunZhTRw1w">
            <body>Element to be replaced. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MGK1MEeOdBunZhTRw1w" name="newElement" type="_So1KHK1MEeOdBunZhTRw1w" effect="create">
          <ownedComment xmi:id="_So1MGa1MEeOdBunZhTRw1w" annotatedElement="_So1MGK1MEeOdBunZhTRw1w">
            <body>Element to replace the original element. </body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MGq1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MG61MEeOdBunZhTRw1w" name="retainAll" isAbstract="true">
        <ownedComment xmi:id="_So1MHK1MEeOdBunZhTRw1w" annotatedElement="_So1MG61MEeOdBunZhTRw1w">
          <body>Remove all instances of all elements in this collection that are NOT in the
                given sequence. Return true if the size of this collection changes. post: result =
                self.size() &lt; self@pre.size() and  self.toSequence()->asBag() =
                self@pre.toSequence()->asBag()->intersection(seq->asSet())
                asSet()) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MHa1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <ownedComment xmi:id="_So1MHq1MEeOdBunZhTRw1w" annotatedElement="_So1MHa1MEeOdBunZhTRw1w">
            <body>Elements to retain. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MH61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MIK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MIa1MEeOdBunZhTRw1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MIq1MEeOdBunZhTRw1w" name="size" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1MI61MEeOdBunZhTRw1w" annotatedElement="_So1MIq1MEeOdBunZhTRw1w">
          <body>Return the number of elements contained in this collection. post: result =
                self@pre.toSequence()->size() </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MJK1MEeOdBunZhTRw1w" direction="return" effect="create">
          <ownedComment xmi:id="_So1MJa1MEeOdBunZhTRw1w" annotatedElement="_So1MJK1MEeOdBunZhTRw1w"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1MJq1MEeOdBunZhTRw1w" name="toSequence" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="_So1MJ61MEeOdBunZhTRw1w" annotatedElement="_So1MJq1MEeOdBunZhTRw1w">
          <body>Return a sequence (UML ordered, non-unique collection) containing the elements
                of this collection. If the specific kind of collection orders its elements, then the
                returned sequence will have this order. Otherwise the order of the elements in the
                returned sequence is arbitrary. (The requirements on the returned sequence from this
                operation are specified implicitly by the required behavior of the mutating
                operations on the various Collection subclasses.) </body>
        </ownedComment>
        <ownedParameter xmi:id="_So1MKK1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="return" effect="create">
          <ownedComment xmi:id="_So1MKa1MEeOdBunZhTRw1w" annotatedElement="_So1MKK1MEeOdBunZhTRw1w"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MKq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MK61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1MLK1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1MLa1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1MLq1MEeOdBunZhTRw1w" actual="_So1KHK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Collection-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1ML61MEeOdBunZhTRw1w" client="_So1Lvq1MEeOdBunZhTRw1w" supplier="_So1MLK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1MMK1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1MMa1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1MMq1MEeOdBunZhTRw1w" actual="_So1KHK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-Bag-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1MM61MEeOdBunZhTRw1w" client="_So1Lnq1MEeOdBunZhTRw1w" supplier="_So1MMK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1MNK1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1MNa1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1MNq1MEeOdBunZhTRw1w" actual="_So1KHK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature-ownedParameter"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses-List-ownedTemplateSignature"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1MN61MEeOdBunZhTRw1w" client="_So1LKq1MEeOdBunZhTRw1w" supplier="_So1MNK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1MOK1MEeOdBunZhTRw1w" clientDependency="_So1y1q1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Impl$Set__PrimitiveTypes$Integer__">
      <generalization xmi:id="_So1MOa1MEeOdBunZhTRw1w">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
      </generalization>
      <generalization xmi:id="_So1MOq1MEeOdBunZhTRw1w" general="_So0mdK1MEeOdBunZhTRw1w"/>
      <ownedAttribute xmi:id="_So1MO61MEeOdBunZhTRw1w" name="Set$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MPK1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MPa1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1MPq1MEeOdBunZhTRw1w" name="Set$method$1" specification="_So1yUq1MEeOdBunZhTRw1w" group="_So1MS61MEeOdBunZhTRw1w" node="_So1MSK1MEeOdBunZhTRw1w _So1MSa1MEeOdBunZhTRw1w _So1MSq1MEeOdBunZhTRw1w _So1MS61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1MP61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MQK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MQa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MQq1MEeOdBunZhTRw1w" name="" type="_So1MOK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MQ61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MRK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1MRa1MEeOdBunZhTRw1w" source="_So1MSK1MEeOdBunZhTRw1w" target="_So1MSa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1MRq1MEeOdBunZhTRw1w" source="_So1MUa1MEeOdBunZhTRw1w" target="_So1MSq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1MR61MEeOdBunZhTRw1w" source="_So1MSa1MEeOdBunZhTRw1w" target="_So1MVa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1MS61MEeOdBunZhTRw1w" name="Body(Set$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1MTK1MEeOdBunZhTRw1w" name="Body" incoming="_So1MgK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So1MTa1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So1MTq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So1Mfq1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MT61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MUK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So1MUa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So1MRq1MEeOdBunZhTRw1w _So1Mf61MEeOdBunZhTRw1w _So1Mgq1MEeOdBunZhTRw1w" incoming="_So1Mfq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1MUq1MEeOdBunZhTRw1w" name="Super" outgoing="_So1Mga1MEeOdBunZhTRw1w" incoming="_So1MiK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1MU61MEeOdBunZhTRw1w" name="ExpressionStatement@35a93ff1">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1MVK1MEeOdBunZhTRw1w" name="Call(SetImpl$method$1)">
                <argument xmi:id="_So1MVa1MEeOdBunZhTRw1w" name="Call(SetImpl$method$1).argument(seq)" incoming="_So1MR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MVq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MV61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So1MWK1MEeOdBunZhTRw1w" name="Call(SetImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MWa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MWq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_So1MW61MEeOdBunZhTRw1w" name="Call(Set$initialization$1)" outgoing="_So1MgK1MEeOdBunZhTRw1w" incoming="_So1Mga1MEeOdBunZhTRw1w" operation="_So1yUa1MEeOdBunZhTRw1w">
            <target xmi:id="_So1MXK1MEeOdBunZhTRw1w" name="Call(Set$initialization$1).target" incoming="_So1Mf61MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MXa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MXq1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So1MX61MEeOdBunZhTRw1w" name="Read(Set$initializationFlag$1)" structuralFeature="_So1MO61MEeOdBunZhTRw1w">
            <object xmi:id="_So1MYK1MEeOdBunZhTRw1w" name="Read(Set$initializationFlag$1).object" incoming="_So1Mgq1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MYa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MYq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So1MY61MEeOdBunZhTRw1w" name="Read(Set$initializationFlag$1).result" outgoing="_So1Mg61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MZK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MZa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1MZq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So1MZ61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So1Mg61MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MaK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Maa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So1Maq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So1MhK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Ma61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MbK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So1Mba1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So1Mbq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So1Mha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mb61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1McK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So1Mca1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So1Mcq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So1Mc61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So1MhK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1MdK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mda1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So1Mdq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So1Mh61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Md61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MeK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So1Mea1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So1Mha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Meq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Me61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So1MfK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So1Mhq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So1Mfa1MEeOdBunZhTRw1w" name="Decision(Test(Set$initializationFlag$1))" outgoing="_So1MiK1MEeOdBunZhTRw1w" incoming="_So1Mhq1MEeOdBunZhTRw1w _So1Mh61MEeOdBunZhTRw1w" decisionInputFlow="_So1Mh61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mfq1MEeOdBunZhTRw1w" source="_So1MTq1MEeOdBunZhTRw1w" target="_So1MUa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mf61MEeOdBunZhTRw1w" source="_So1MUa1MEeOdBunZhTRw1w" target="_So1MXK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1MgK1MEeOdBunZhTRw1w" source="_So1MW61MEeOdBunZhTRw1w" target="_So1MTK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1Mga1MEeOdBunZhTRw1w" source="_So1MUq1MEeOdBunZhTRw1w" target="_So1MW61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mgq1MEeOdBunZhTRw1w" source="_So1MUa1MEeOdBunZhTRw1w" target="_So1MYK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mg61MEeOdBunZhTRw1w" source="_So1MY61MEeOdBunZhTRw1w" target="_So1MZ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1MhK1MEeOdBunZhTRw1w" source="_So1Maq1MEeOdBunZhTRw1w" target="_So1Mc61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mha1MEeOdBunZhTRw1w" source="_So1Mbq1MEeOdBunZhTRw1w" target="_So1Mea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1Mhq1MEeOdBunZhTRw1w" source="_So1MfK1MEeOdBunZhTRw1w" target="_So1Mfa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mh61MEeOdBunZhTRw1w" source="_So1Mdq1MEeOdBunZhTRw1w" target="_So1Mfa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1MiK1MEeOdBunZhTRw1w" source="_So1Mfa1MEeOdBunZhTRw1w" target="_So1MUq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So1Mia1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1MSK1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1MRa1MEeOdBunZhTRw1w" parameter="_So1MP61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1MSa1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1MR61MEeOdBunZhTRw1w" incoming="_So1MRa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1MSq1MEeOdBunZhTRw1w" name="Return" incoming="_So1MRq1MEeOdBunZhTRw1w" parameter="_So1MQq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1Miq1MEeOdBunZhTRw1w" name="destroy$method$2" specification="_So1yWa1MEeOdBunZhTRw1w" group="_So1Mi61MEeOdBunZhTRw1w" node="_So1Mi61MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So1Mi61MEeOdBunZhTRw1w" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1MjK1MEeOdBunZhTRw1w" name="add$method$1" specification="_So1yWq1MEeOdBunZhTRw1w" group="_So1Mm61MEeOdBunZhTRw1w" node="_So1Ml61MEeOdBunZhTRw1w _So1MmK1MEeOdBunZhTRw1w _So1Mma1MEeOdBunZhTRw1w _So1Mmq1MEeOdBunZhTRw1w _So1Mm61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1Mja1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mjq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mj61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MkK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mka1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mkq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mk61MEeOdBunZhTRw1w" source="_So1Ml61MEeOdBunZhTRw1w" target="_So1MmK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1MlK1MEeOdBunZhTRw1w" source="_So1MnK1MEeOdBunZhTRw1w" target="_So1Mmq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mla1MEeOdBunZhTRw1w" source="_So1MmK1MEeOdBunZhTRw1w" target="_So1Mnq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mlq1MEeOdBunZhTRw1w" source="_So1MpK1MEeOdBunZhTRw1w" target="_So1Mma1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1Mm61MEeOdBunZhTRw1w" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1MnK1MEeOdBunZhTRw1w" name="ReturnStatement@42845bde" outgoing="_So1MlK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1Mna1MEeOdBunZhTRw1w" name="Call(addImpl$method$1)">
              <argument xmi:id="_So1Mnq1MEeOdBunZhTRw1w" name="Call(addImpl$method$1).argument(element)" incoming="_So1Mla1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mn61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MoK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1Moa1MEeOdBunZhTRw1w" name="Call(addImpl$method$1).result()" outgoing="_So1Mp61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Moq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mo61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1MpK1MEeOdBunZhTRw1w" name="ReturnStatement@42845bde.output" outgoing="_So1Mlq1MEeOdBunZhTRw1w" incoming="_So1Mp61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mpa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mpq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mp61MEeOdBunZhTRw1w" source="_So1Moa1MEeOdBunZhTRw1w" target="_So1MpK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1Ml61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1Mk61MEeOdBunZhTRw1w" parameter="_So1Mja1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1MmK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1Mla1MEeOdBunZhTRw1w" incoming="_So1Mk61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1Mma1MEeOdBunZhTRw1w" name="Return" incoming="_So1Mlq1MEeOdBunZhTRw1w" parameter="_So1MkK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1Mmq1MEeOdBunZhTRw1w" name="Final" incoming="_So1MlK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1MqK1MEeOdBunZhTRw1w" name="addAll$method$1" specification="_So1yYa1MEeOdBunZhTRw1w" group="_So1Mt61MEeOdBunZhTRw1w" node="_So1Ms61MEeOdBunZhTRw1w _So1MtK1MEeOdBunZhTRw1w _So1Mta1MEeOdBunZhTRw1w _So1Mtq1MEeOdBunZhTRw1w _So1Mt61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1Mqa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mqq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mq61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MrK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mra1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mrq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mr61MEeOdBunZhTRw1w" source="_So1Ms61MEeOdBunZhTRw1w" target="_So1MtK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1MsK1MEeOdBunZhTRw1w" source="_So1MuK1MEeOdBunZhTRw1w" target="_So1Mtq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Msa1MEeOdBunZhTRw1w" source="_So1MtK1MEeOdBunZhTRw1w" target="_So1Muq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Msq1MEeOdBunZhTRw1w" source="_So1MwK1MEeOdBunZhTRw1w" target="_So1Mta1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1Mt61MEeOdBunZhTRw1w" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1MuK1MEeOdBunZhTRw1w" name="ReturnStatement@7170077" outgoing="_So1MsK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1Mua1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_So1Muq1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1).argument(seq)" incoming="_So1Msa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mu61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1MvK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1Mva1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1).result()" outgoing="_So1Mw61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mvq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mv61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1MwK1MEeOdBunZhTRw1w" name="ReturnStatement@7170077.output" outgoing="_So1Msq1MEeOdBunZhTRw1w" incoming="_So1Mw61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mwa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mwq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mw61MEeOdBunZhTRw1w" source="_So1Mva1MEeOdBunZhTRw1w" target="_So1MwK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1Ms61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1Mr61MEeOdBunZhTRw1w" parameter="_So1Mqa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1MtK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1Msa1MEeOdBunZhTRw1w" incoming="_So1Mr61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1Mta1MEeOdBunZhTRw1w" name="Return" incoming="_So1Msq1MEeOdBunZhTRw1w" parameter="_So1MrK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1Mtq1MEeOdBunZhTRw1w" name="Final" incoming="_So1MsK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1MxK1MEeOdBunZhTRw1w" name="clear$method$1" specification="_So1yaK1MEeOdBunZhTRw1w" group="_So1Mxa1MEeOdBunZhTRw1w" node="_So1Mxa1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So1Mxa1MEeOdBunZhTRw1w" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1Mxq1MEeOdBunZhTRw1w" name="ExpressionStatement@44d737ca">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1Mx61MEeOdBunZhTRw1w" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1MyK1MEeOdBunZhTRw1w" name="count$method$1" specification="_So1yaa1MEeOdBunZhTRw1w" group="_So1M161MEeOdBunZhTRw1w" node="_So1M061MEeOdBunZhTRw1w _So1M1K1MEeOdBunZhTRw1w _So1M1a1MEeOdBunZhTRw1w _So1M1q1MEeOdBunZhTRw1w _So1M161MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1Mya1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Myq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1My61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1MzK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1Mza1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1Mzq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1Mz61MEeOdBunZhTRw1w" source="_So1M061MEeOdBunZhTRw1w" target="_So1M1K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1M0K1MEeOdBunZhTRw1w" source="_So1M2K1MEeOdBunZhTRw1w" target="_So1M1q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M0a1MEeOdBunZhTRw1w" source="_So1M1K1MEeOdBunZhTRw1w" target="_So1M2q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M0q1MEeOdBunZhTRw1w" source="_So1M4K1MEeOdBunZhTRw1w" target="_So1M1a1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1M161MEeOdBunZhTRw1w" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1M2K1MEeOdBunZhTRw1w" name="ReturnStatement@3751834b" outgoing="_So1M0K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1M2a1MEeOdBunZhTRw1w" name="Call(countImpl$method$1)">
              <argument xmi:id="_So1M2q1MEeOdBunZhTRw1w" name="Call(countImpl$method$1).argument(element)" incoming="_So1M0a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M261MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M3K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1M3a1MEeOdBunZhTRw1w" name="Call(countImpl$method$1).result()" outgoing="_So1M461MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M3q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M361MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1M4K1MEeOdBunZhTRw1w" name="ReturnStatement@3751834b.output" outgoing="_So1M0q1MEeOdBunZhTRw1w" incoming="_So1M461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M4a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M4q1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M461MEeOdBunZhTRw1w" source="_So1M3a1MEeOdBunZhTRw1w" target="_So1M4K1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1M061MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1Mz61MEeOdBunZhTRw1w" parameter="_So1Mya1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1M1K1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1M0a1MEeOdBunZhTRw1w" incoming="_So1Mz61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1M1a1MEeOdBunZhTRw1w" name="Return" incoming="_So1M0q1MEeOdBunZhTRw1w" parameter="_So1MzK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1M1q1MEeOdBunZhTRw1w" name="Final" incoming="_So1M0K1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1M5K1MEeOdBunZhTRw1w" name="equals$method$1" specification="_So1ycK1MEeOdBunZhTRw1w" group="_So1M861MEeOdBunZhTRw1w" node="_So1M761MEeOdBunZhTRw1w _So1M8K1MEeOdBunZhTRw1w _So1M8a1MEeOdBunZhTRw1w _So1M8q1MEeOdBunZhTRw1w _So1M861MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1M5a1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M5q1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M561MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1M6K1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M6a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M6q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M661MEeOdBunZhTRw1w" source="_So1M761MEeOdBunZhTRw1w" target="_So1M8K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1M7K1MEeOdBunZhTRw1w" source="_So1M9K1MEeOdBunZhTRw1w" target="_So1M8q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M7a1MEeOdBunZhTRw1w" source="_So1M8K1MEeOdBunZhTRw1w" target="_So1M9q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M7q1MEeOdBunZhTRw1w" source="_So1M_K1MEeOdBunZhTRw1w" target="_So1M8a1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1M861MEeOdBunZhTRw1w" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1M9K1MEeOdBunZhTRw1w" name="ReturnStatement@1d00c794" outgoing="_So1M7K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1M9a1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_So1M9q1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1).argument(seq)" incoming="_So1M7a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M961MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M-K1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1M-a1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1).result()" outgoing="_So1M_61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M-q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M-61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1M_K1MEeOdBunZhTRw1w" name="ReturnStatement@1d00c794.output" outgoing="_So1M7q1MEeOdBunZhTRw1w" incoming="_So1M_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1M_a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1M_q1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1M_61MEeOdBunZhTRw1w" source="_So1M-a1MEeOdBunZhTRw1w" target="_So1M_K1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1M761MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1M661MEeOdBunZhTRw1w" parameter="_So1M5a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1M8K1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1M7a1MEeOdBunZhTRw1w" incoming="_So1M661MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1M8a1MEeOdBunZhTRw1w" name="Return" incoming="_So1M7q1MEeOdBunZhTRw1w" parameter="_So1M6K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1M8q1MEeOdBunZhTRw1w" name="Final" incoming="_So1M7K1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1NAK1MEeOdBunZhTRw1w" name="excludes$method$1" specification="_So1yd61MEeOdBunZhTRw1w" group="_So1ND61MEeOdBunZhTRw1w" node="_So1NC61MEeOdBunZhTRw1w _So1NDK1MEeOdBunZhTRw1w _So1NDa1MEeOdBunZhTRw1w _So1NDq1MEeOdBunZhTRw1w _So1ND61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1NAa1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NAq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NA61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1NBK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NBa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NBq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NB61MEeOdBunZhTRw1w" source="_So1NC61MEeOdBunZhTRw1w" target="_So1NDK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1NCK1MEeOdBunZhTRw1w" source="_So1NEK1MEeOdBunZhTRw1w" target="_So1NDq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NCa1MEeOdBunZhTRw1w" source="_So1NDK1MEeOdBunZhTRw1w" target="_So1NEq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NCq1MEeOdBunZhTRw1w" source="_So1NGK1MEeOdBunZhTRw1w" target="_So1NDa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1ND61MEeOdBunZhTRw1w" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1NEK1MEeOdBunZhTRw1w" name="ReturnStatement@1332fa84" outgoing="_So1NCK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1NEa1MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_So1NEq1MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1).argument(element)" incoming="_So1NCa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NE61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NFK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1NFa1MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1).result()" outgoing="_So1NG61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NFq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NF61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1NGK1MEeOdBunZhTRw1w" name="ReturnStatement@1332fa84.output" outgoing="_So1NCq1MEeOdBunZhTRw1w" incoming="_So1NG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NGa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NGq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NG61MEeOdBunZhTRw1w" source="_So1NFa1MEeOdBunZhTRw1w" target="_So1NGK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1NC61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1NB61MEeOdBunZhTRw1w" parameter="_So1NAa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1NDK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1NCa1MEeOdBunZhTRw1w" incoming="_So1NB61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1NDa1MEeOdBunZhTRw1w" name="Return" incoming="_So1NCq1MEeOdBunZhTRw1w" parameter="_So1NBK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1NDq1MEeOdBunZhTRw1w" name="Final" incoming="_So1NCK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1NHK1MEeOdBunZhTRw1w" name="excludesAll$method$1" specification="_So1yfq1MEeOdBunZhTRw1w" group="_So1NK61MEeOdBunZhTRw1w" node="_So1NJ61MEeOdBunZhTRw1w _So1NKK1MEeOdBunZhTRw1w _So1NKa1MEeOdBunZhTRw1w _So1NKq1MEeOdBunZhTRw1w _So1NK61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1NHa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NHq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NH61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1NIK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NIa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NIq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NI61MEeOdBunZhTRw1w" source="_So1NJ61MEeOdBunZhTRw1w" target="_So1NKK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1NJK1MEeOdBunZhTRw1w" source="_So1NLK1MEeOdBunZhTRw1w" target="_So1NKq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NJa1MEeOdBunZhTRw1w" source="_So1NKK1MEeOdBunZhTRw1w" target="_So1NLq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NJq1MEeOdBunZhTRw1w" source="_So1NNK1MEeOdBunZhTRw1w" target="_So1NKa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1NK61MEeOdBunZhTRw1w" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1NLK1MEeOdBunZhTRw1w" name="ReturnStatement@5213fce3" outgoing="_So1NJK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1NLa1MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_So1NLq1MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_So1NJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NL61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NMK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1NMa1MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1).result()" outgoing="_So1NN61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NMq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NM61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1NNK1MEeOdBunZhTRw1w" name="ReturnStatement@5213fce3.output" outgoing="_So1NJq1MEeOdBunZhTRw1w" incoming="_So1NN61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1NNa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1NNq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1NN61MEeOdBunZhTRw1w" source="_So1NMa1MEeOdBunZhTRw1w" target="_So1NNK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1NJ61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1NI61MEeOdBunZhTRw1w" parameter="_So1NHa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1NKK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1NJa1MEeOdBunZhTRw1w" incoming="_So1NI61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1NKa1MEeOdBunZhTRw1w" name="Return" incoming="_So1NJq1MEeOdBunZhTRw1w" parameter="_So1NIK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1NKq1MEeOdBunZhTRw1w" name="Final" incoming="_So1NJK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1wsK1MEeOdBunZhTRw1w" name="includes$method$1" specification="_So1yha1MEeOdBunZhTRw1w" group="_So1wv61MEeOdBunZhTRw1w" node="_So1wu61MEeOdBunZhTRw1w _So1wvK1MEeOdBunZhTRw1w _So1wva1MEeOdBunZhTRw1w _So1wvq1MEeOdBunZhTRw1w _So1wv61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1wsa1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1wsq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ws61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1wtK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1wta1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1wtq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1wt61MEeOdBunZhTRw1w" source="_So1wu61MEeOdBunZhTRw1w" target="_So1wvK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1wuK1MEeOdBunZhTRw1w" source="_So1wwK1MEeOdBunZhTRw1w" target="_So1wvq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1wua1MEeOdBunZhTRw1w" source="_So1wvK1MEeOdBunZhTRw1w" target="_So1wwq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1wuq1MEeOdBunZhTRw1w" source="_So1wyK1MEeOdBunZhTRw1w" target="_So1wva1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1wv61MEeOdBunZhTRw1w" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1wwK1MEeOdBunZhTRw1w" name="ReturnStatement@512327c" outgoing="_So1wuK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1wwa1MEeOdBunZhTRw1w" name="Call(includesImpl$method$1)">
              <argument xmi:id="_So1wwq1MEeOdBunZhTRw1w" name="Call(includesImpl$method$1).argument(element)" incoming="_So1wua1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ww61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1wxK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1wxa1MEeOdBunZhTRw1w" name="Call(includesImpl$method$1).result()" outgoing="_So1wy61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1wxq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1wx61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1wyK1MEeOdBunZhTRw1w" name="ReturnStatement@512327c.output" outgoing="_So1wuq1MEeOdBunZhTRw1w" incoming="_So1wy61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1wya1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1wyq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1wy61MEeOdBunZhTRw1w" source="_So1wxa1MEeOdBunZhTRw1w" target="_So1wyK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1wu61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1wt61MEeOdBunZhTRw1w" parameter="_So1wsa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1wvK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1wua1MEeOdBunZhTRw1w" incoming="_So1wt61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1wva1MEeOdBunZhTRw1w" name="Return" incoming="_So1wuq1MEeOdBunZhTRw1w" parameter="_So1wtK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1wvq1MEeOdBunZhTRw1w" name="Final" incoming="_So1wuK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1wzK1MEeOdBunZhTRw1w" name="includesAll$method$1" specification="_So1yjK1MEeOdBunZhTRw1w" group="_So1w261MEeOdBunZhTRw1w" node="_So1w161MEeOdBunZhTRw1w _So1w2K1MEeOdBunZhTRw1w _So1w2a1MEeOdBunZhTRw1w _So1w2q1MEeOdBunZhTRw1w _So1w261MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1wza1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1wzq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1wz61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1w0K1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w0a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w0q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w061MEeOdBunZhTRw1w" source="_So1w161MEeOdBunZhTRw1w" target="_So1w2K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1w1K1MEeOdBunZhTRw1w" source="_So1w3K1MEeOdBunZhTRw1w" target="_So1w2q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w1a1MEeOdBunZhTRw1w" source="_So1w2K1MEeOdBunZhTRw1w" target="_So1w3q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w1q1MEeOdBunZhTRw1w" source="_So1w5K1MEeOdBunZhTRw1w" target="_So1w2a1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1w261MEeOdBunZhTRw1w" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1w3K1MEeOdBunZhTRw1w" name="ReturnStatement@2720d4a3" outgoing="_So1w1K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1w3a1MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_So1w3q1MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_So1w1a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w361MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w4K1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1w4a1MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1).result()" outgoing="_So1w561MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w4q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w461MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1w5K1MEeOdBunZhTRw1w" name="ReturnStatement@2720d4a3.output" outgoing="_So1w1q1MEeOdBunZhTRw1w" incoming="_So1w561MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w5a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w5q1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w561MEeOdBunZhTRw1w" source="_So1w4a1MEeOdBunZhTRw1w" target="_So1w5K1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1w161MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1w061MEeOdBunZhTRw1w" parameter="_So1wza1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1w2K1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1w1a1MEeOdBunZhTRw1w" incoming="_So1w061MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1w2a1MEeOdBunZhTRw1w" name="Return" incoming="_So1w1q1MEeOdBunZhTRw1w" parameter="_So1w0K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1w2q1MEeOdBunZhTRw1w" name="Final" incoming="_So1w1K1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1w6K1MEeOdBunZhTRw1w" name="isEmpty$method$1" specification="_So1yk61MEeOdBunZhTRw1w" group="_So1w8K1MEeOdBunZhTRw1w" node="_So1w7q1MEeOdBunZhTRw1w _So1w761MEeOdBunZhTRw1w _So1w8K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1w6a1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w6q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w661MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1w7K1MEeOdBunZhTRw1w" source="_So1w8a1MEeOdBunZhTRw1w" target="_So1w761MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w7a1MEeOdBunZhTRw1w" source="_So1w9q1MEeOdBunZhTRw1w" target="_So1w7q1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1w8K1MEeOdBunZhTRw1w" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1w8a1MEeOdBunZhTRw1w" name="ReturnStatement@3fec9e59" outgoing="_So1w7K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1w8q1MEeOdBunZhTRw1w" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_So1w861MEeOdBunZhTRw1w" name="Call(isEmptyImpl$method$1).result()" outgoing="_So1w-a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w9K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w9a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1w9q1MEeOdBunZhTRw1w" name="ReturnStatement@3fec9e59.output" outgoing="_So1w7a1MEeOdBunZhTRw1w" incoming="_So1w-a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w961MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w-K1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w-a1MEeOdBunZhTRw1w" source="_So1w861MEeOdBunZhTRw1w" target="_So1w9q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1w7q1MEeOdBunZhTRw1w" name="Return" incoming="_So1w7a1MEeOdBunZhTRw1w" parameter="_So1w6a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1w761MEeOdBunZhTRw1w" name="Final" incoming="_So1w7K1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1w-q1MEeOdBunZhTRw1w" name="notEmpty$method$1" specification="_So1yl61MEeOdBunZhTRw1w" group="_So1xAq1MEeOdBunZhTRw1w" node="_So1xAK1MEeOdBunZhTRw1w _So1xAa1MEeOdBunZhTRw1w _So1xAq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1w-61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1w_K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1w_a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1w_q1MEeOdBunZhTRw1w" source="_So1xA61MEeOdBunZhTRw1w" target="_So1xAa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1w_61MEeOdBunZhTRw1w" source="_So1xCK1MEeOdBunZhTRw1w" target="_So1xAK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xAq1MEeOdBunZhTRw1w" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xA61MEeOdBunZhTRw1w" name="ReturnStatement@e1baffa" outgoing="_So1w_q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xBK1MEeOdBunZhTRw1w" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_So1xBa1MEeOdBunZhTRw1w" name="Call(notEmptyImpl$method$1).result()" outgoing="_So1xC61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xBq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xB61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xCK1MEeOdBunZhTRw1w" name="ReturnStatement@e1baffa.output" outgoing="_So1w_61MEeOdBunZhTRw1w" incoming="_So1xC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xCa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xCq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xC61MEeOdBunZhTRw1w" source="_So1xBa1MEeOdBunZhTRw1w" target="_So1xCK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xAK1MEeOdBunZhTRw1w" name="Return" incoming="_So1w_61MEeOdBunZhTRw1w" parameter="_So1w-61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xAa1MEeOdBunZhTRw1w" name="Final" incoming="_So1w_q1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xDK1MEeOdBunZhTRw1w" name="remove$method$1" specification="_So1ym61MEeOdBunZhTRw1w" group="_So1xG61MEeOdBunZhTRw1w" node="_So1xF61MEeOdBunZhTRw1w _So1xGK1MEeOdBunZhTRw1w _So1xGa1MEeOdBunZhTRw1w _So1xGq1MEeOdBunZhTRw1w _So1xG61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xDa1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xDq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xD61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xEK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xEa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xEq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xE61MEeOdBunZhTRw1w" source="_So1xF61MEeOdBunZhTRw1w" target="_So1xGK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xFK1MEeOdBunZhTRw1w" source="_So1xHK1MEeOdBunZhTRw1w" target="_So1xGq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xFa1MEeOdBunZhTRw1w" source="_So1xGK1MEeOdBunZhTRw1w" target="_So1xHq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xFq1MEeOdBunZhTRw1w" source="_So1xJK1MEeOdBunZhTRw1w" target="_So1xGa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xG61MEeOdBunZhTRw1w" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xHK1MEeOdBunZhTRw1w" name="ReturnStatement@49f115cc" outgoing="_So1xFK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xHa1MEeOdBunZhTRw1w" name="Call(removeImpl$method$1)">
              <argument xmi:id="_So1xHq1MEeOdBunZhTRw1w" name="Call(removeImpl$method$1).argument(element)" incoming="_So1xFa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xH61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xIK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1xIa1MEeOdBunZhTRw1w" name="Call(removeImpl$method$1).result()" outgoing="_So1xJ61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xIq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xI61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xJK1MEeOdBunZhTRw1w" name="ReturnStatement@49f115cc.output" outgoing="_So1xFq1MEeOdBunZhTRw1w" incoming="_So1xJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xJa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xJq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xJ61MEeOdBunZhTRw1w" source="_So1xIa1MEeOdBunZhTRw1w" target="_So1xJK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xF61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1xE61MEeOdBunZhTRw1w" parameter="_So1xDa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xGK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1xFa1MEeOdBunZhTRw1w" incoming="_So1xE61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xGa1MEeOdBunZhTRw1w" name="Return" incoming="_So1xFq1MEeOdBunZhTRw1w" parameter="_So1xEK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xGq1MEeOdBunZhTRw1w" name="Final" incoming="_So1xFK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xKK1MEeOdBunZhTRw1w" name="removeAll$method$1" specification="_So1yoq1MEeOdBunZhTRw1w" group="_So1xN61MEeOdBunZhTRw1w" node="_So1xM61MEeOdBunZhTRw1w _So1xNK1MEeOdBunZhTRw1w _So1xNa1MEeOdBunZhTRw1w _So1xNq1MEeOdBunZhTRw1w _So1xN61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xKa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xKq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xK61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xLK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xLa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xLq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xL61MEeOdBunZhTRw1w" source="_So1xM61MEeOdBunZhTRw1w" target="_So1xNK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xMK1MEeOdBunZhTRw1w" source="_So1xOK1MEeOdBunZhTRw1w" target="_So1xNq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xMa1MEeOdBunZhTRw1w" source="_So1xNK1MEeOdBunZhTRw1w" target="_So1xOq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xMq1MEeOdBunZhTRw1w" source="_So1xQK1MEeOdBunZhTRw1w" target="_So1xNa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xN61MEeOdBunZhTRw1w" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xOK1MEeOdBunZhTRw1w" name="ReturnStatement@7e6b961c" outgoing="_So1xMK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xOa1MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_So1xOq1MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_So1xMa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xO61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xPK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1xPa1MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1).result()" outgoing="_So1xQ61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xPq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xP61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xQK1MEeOdBunZhTRw1w" name="ReturnStatement@7e6b961c.output" outgoing="_So1xMq1MEeOdBunZhTRw1w" incoming="_So1xQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xQa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xQq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xQ61MEeOdBunZhTRw1w" source="_So1xPa1MEeOdBunZhTRw1w" target="_So1xQK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xM61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1xL61MEeOdBunZhTRw1w" parameter="_So1xKa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xNK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1xMa1MEeOdBunZhTRw1w" incoming="_So1xL61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xNa1MEeOdBunZhTRw1w" name="Return" incoming="_So1xMq1MEeOdBunZhTRw1w" parameter="_So1xLK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xNq1MEeOdBunZhTRw1w" name="Final" incoming="_So1xMK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xRK1MEeOdBunZhTRw1w" name="removeOne$method$1" specification="_So1yqa1MEeOdBunZhTRw1w" group="_So1xU61MEeOdBunZhTRw1w" node="_So1xT61MEeOdBunZhTRw1w _So1xUK1MEeOdBunZhTRw1w _So1xUa1MEeOdBunZhTRw1w _So1xUq1MEeOdBunZhTRw1w _So1xU61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xRa1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xRq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xR61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xSK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xSa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xSq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xS61MEeOdBunZhTRw1w" source="_So1xT61MEeOdBunZhTRw1w" target="_So1xUK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xTK1MEeOdBunZhTRw1w" source="_So1xVK1MEeOdBunZhTRw1w" target="_So1xUq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xTa1MEeOdBunZhTRw1w" source="_So1xUK1MEeOdBunZhTRw1w" target="_So1xVq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xTq1MEeOdBunZhTRw1w" source="_So1xXK1MEeOdBunZhTRw1w" target="_So1xUa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xU61MEeOdBunZhTRw1w" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xVK1MEeOdBunZhTRw1w" name="ReturnStatement@55167e58" outgoing="_So1xTK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xVa1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_So1xVq1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1).argument(element)" incoming="_So1xTa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xV61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xWK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1xWa1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1).result()" outgoing="_So1xX61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xWq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xW61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xXK1MEeOdBunZhTRw1w" name="ReturnStatement@55167e58.output" outgoing="_So1xTq1MEeOdBunZhTRw1w" incoming="_So1xX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xXa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xXq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xX61MEeOdBunZhTRw1w" source="_So1xWa1MEeOdBunZhTRw1w" target="_So1xXK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xT61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1xS61MEeOdBunZhTRw1w" parameter="_So1xRa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xUK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1xTa1MEeOdBunZhTRw1w" incoming="_So1xS61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xUa1MEeOdBunZhTRw1w" name="Return" incoming="_So1xTq1MEeOdBunZhTRw1w" parameter="_So1xSK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xUq1MEeOdBunZhTRw1w" name="Final" incoming="_So1xTK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xYK1MEeOdBunZhTRw1w" name="replace$method$1" specification="_So1ysK1MEeOdBunZhTRw1w" group="_So1xdq1MEeOdBunZhTRw1w" node="_So1xcK1MEeOdBunZhTRw1w _So1xca1MEeOdBunZhTRw1w _So1xcq1MEeOdBunZhTRw1w _So1xc61MEeOdBunZhTRw1w _So1xdK1MEeOdBunZhTRw1w _So1xda1MEeOdBunZhTRw1w _So1xdq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xYa1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xYq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xY61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xZK1MEeOdBunZhTRw1w" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xZa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xZq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xZ61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xaK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xaa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xaq1MEeOdBunZhTRw1w" source="_So1xcK1MEeOdBunZhTRw1w" target="_So1xca1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xa61MEeOdBunZhTRw1w" source="_So1xcq1MEeOdBunZhTRw1w" target="_So1xc61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xbK1MEeOdBunZhTRw1w" source="_So1xd61MEeOdBunZhTRw1w" target="_So1xda1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xba1MEeOdBunZhTRw1w" source="_So1xca1MEeOdBunZhTRw1w" target="_So1xea1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xbq1MEeOdBunZhTRw1w" source="_So1xc61MEeOdBunZhTRw1w" target="_So1xfK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xb61MEeOdBunZhTRw1w" source="_So1xgq1MEeOdBunZhTRw1w" target="_So1xdK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xdq1MEeOdBunZhTRw1w" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xd61MEeOdBunZhTRw1w" name="ReturnStatement@3bda6b61" outgoing="_So1xbK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xeK1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_So1xea1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).argument(element)" incoming="_So1xba1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xeq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xe61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So1xfK1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_So1xbq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xfa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xfq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1xf61MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).result()" outgoing="_So1xha1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xgK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xga1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xgq1MEeOdBunZhTRw1w" name="ReturnStatement@3bda6b61.output" outgoing="_So1xb61MEeOdBunZhTRw1w" incoming="_So1xha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xg61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xhK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xha1MEeOdBunZhTRw1w" source="_So1xf61MEeOdBunZhTRw1w" target="_So1xgq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xcK1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1xaq1MEeOdBunZhTRw1w" parameter="_So1xYa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xca1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1xba1MEeOdBunZhTRw1w" incoming="_So1xaq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xcq1MEeOdBunZhTRw1w" name="Input(newElement)" outgoing="_So1xa61MEeOdBunZhTRw1w" parameter="_So1xZK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xc61MEeOdBunZhTRw1w" name="Fork(newElement)" outgoing="_So1xbq1MEeOdBunZhTRw1w" incoming="_So1xa61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xdK1MEeOdBunZhTRw1w" name="Return" incoming="_So1xb61MEeOdBunZhTRw1w" parameter="_So1xZ61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xda1MEeOdBunZhTRw1w" name="Final" incoming="_So1xbK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xhq1MEeOdBunZhTRw1w" name="replaceOne$method$1" specification="_So1yuq1MEeOdBunZhTRw1w" group="_So1xnK1MEeOdBunZhTRw1w" node="_So1xlq1MEeOdBunZhTRw1w _So1xl61MEeOdBunZhTRw1w _So1xmK1MEeOdBunZhTRw1w _So1xma1MEeOdBunZhTRw1w _So1xmq1MEeOdBunZhTRw1w _So1xm61MEeOdBunZhTRw1w _So1xnK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xh61MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xiK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xia1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xiq1MEeOdBunZhTRw1w" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xi61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xjK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xja1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xjq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xj61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xkK1MEeOdBunZhTRw1w" source="_So1xlq1MEeOdBunZhTRw1w" target="_So1xl61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xka1MEeOdBunZhTRw1w" source="_So1xmK1MEeOdBunZhTRw1w" target="_So1xma1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xkq1MEeOdBunZhTRw1w" source="_So1xna1MEeOdBunZhTRw1w" target="_So1xm61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xk61MEeOdBunZhTRw1w" source="_So1xl61MEeOdBunZhTRw1w" target="_So1xn61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xlK1MEeOdBunZhTRw1w" source="_So1xma1MEeOdBunZhTRw1w" target="_So1xoq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xla1MEeOdBunZhTRw1w" source="_So1xqK1MEeOdBunZhTRw1w" target="_So1xmq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xnK1MEeOdBunZhTRw1w" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xna1MEeOdBunZhTRw1w" name="ReturnStatement@228d3cb6" outgoing="_So1xkq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xnq1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_So1xn61MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_So1xk61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xoK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xoa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So1xoq1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_So1xlK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xo61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xpK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1xpa1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).result()" outgoing="_So1xq61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xpq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xp61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xqK1MEeOdBunZhTRw1w" name="ReturnStatement@228d3cb6.output" outgoing="_So1xla1MEeOdBunZhTRw1w" incoming="_So1xq61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xqa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xqq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xq61MEeOdBunZhTRw1w" source="_So1xpa1MEeOdBunZhTRw1w" target="_So1xqK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xlq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1xkK1MEeOdBunZhTRw1w" parameter="_So1xh61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xl61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1xk61MEeOdBunZhTRw1w" incoming="_So1xkK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xmK1MEeOdBunZhTRw1w" name="Input(newElement)" outgoing="_So1xka1MEeOdBunZhTRw1w" parameter="_So1xiq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xma1MEeOdBunZhTRw1w" name="Fork(newElement)" outgoing="_So1xlK1MEeOdBunZhTRw1w" incoming="_So1xka1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xmq1MEeOdBunZhTRw1w" name="Return" incoming="_So1xla1MEeOdBunZhTRw1w" parameter="_So1xja1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xm61MEeOdBunZhTRw1w" name="Final" incoming="_So1xkq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xrK1MEeOdBunZhTRw1w" name="retainAll$method$1" specification="_So1yxK1MEeOdBunZhTRw1w" group="_So1xu61MEeOdBunZhTRw1w" node="_So1xt61MEeOdBunZhTRw1w _So1xuK1MEeOdBunZhTRw1w _So1xua1MEeOdBunZhTRw1w _So1xuq1MEeOdBunZhTRw1w _So1xu61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xra1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xrq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xr61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1xsK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xsa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xsq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xs61MEeOdBunZhTRw1w" source="_So1xt61MEeOdBunZhTRw1w" target="_So1xuK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xtK1MEeOdBunZhTRw1w" source="_So1xvK1MEeOdBunZhTRw1w" target="_So1xuq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xta1MEeOdBunZhTRw1w" source="_So1xuK1MEeOdBunZhTRw1w" target="_So1xvq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xtq1MEeOdBunZhTRw1w" source="_So1xxK1MEeOdBunZhTRw1w" target="_So1xua1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1xu61MEeOdBunZhTRw1w" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1xvK1MEeOdBunZhTRw1w" name="ReturnStatement@c266fa0" outgoing="_So1xtK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1xva1MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_So1xvq1MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_So1xta1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xv61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xwK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1xwa1MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1).result()" outgoing="_So1xx61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xwq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xw61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1xxK1MEeOdBunZhTRw1w" name="ReturnStatement@c266fa0.output" outgoing="_So1xtq1MEeOdBunZhTRw1w" incoming="_So1xx61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xxa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xxq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xx61MEeOdBunZhTRw1w" source="_So1xwa1MEeOdBunZhTRw1w" target="_So1xxK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xt61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1xs61MEeOdBunZhTRw1w" parameter="_So1xra1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1xuK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1xta1MEeOdBunZhTRw1w" incoming="_So1xs61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xua1MEeOdBunZhTRw1w" name="Return" incoming="_So1xtq1MEeOdBunZhTRw1w" parameter="_So1xsK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xuq1MEeOdBunZhTRw1w" name="Final" incoming="_So1xtK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1xyK1MEeOdBunZhTRw1w" name="size$method$1" specification="_So1yy61MEeOdBunZhTRw1w" group="_So1x0K1MEeOdBunZhTRw1w" node="_So1xzq1MEeOdBunZhTRw1w _So1xz61MEeOdBunZhTRw1w _So1x0K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1xya1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1xyq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1xy61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1xzK1MEeOdBunZhTRw1w" source="_So1x0a1MEeOdBunZhTRw1w" target="_So1xz61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1xza1MEeOdBunZhTRw1w" source="_So1x1q1MEeOdBunZhTRw1w" target="_So1xzq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1x0K1MEeOdBunZhTRw1w" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1x0a1MEeOdBunZhTRw1w" name="ReturnStatement@727cfb78" outgoing="_So1xzK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1x0q1MEeOdBunZhTRw1w" name="Call(sizeImpl$method$1)">
              <result xmi:id="_So1x061MEeOdBunZhTRw1w" name="Call(sizeImpl$method$1).result()" outgoing="_So1x2a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x1K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x1a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1x1q1MEeOdBunZhTRw1w" name="ReturnStatement@727cfb78.output" outgoing="_So1xza1MEeOdBunZhTRw1w" incoming="_So1x2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x161MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x2K1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x2a1MEeOdBunZhTRw1w" source="_So1x061MEeOdBunZhTRw1w" target="_So1x1q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1xzq1MEeOdBunZhTRw1w" name="Return" incoming="_So1xza1MEeOdBunZhTRw1w" parameter="_So1xya1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1xz61MEeOdBunZhTRw1w" name="Final" incoming="_So1xzK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1x2q1MEeOdBunZhTRw1w" name="toSequence$method$1" specification="_So1yz61MEeOdBunZhTRw1w" group="_So1x4q1MEeOdBunZhTRw1w" node="_So1x4K1MEeOdBunZhTRw1w _So1x4a1MEeOdBunZhTRw1w _So1x4q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1x261MEeOdBunZhTRw1w" name="" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x3K1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x3a1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1x3q1MEeOdBunZhTRw1w" source="_So1x461MEeOdBunZhTRw1w" target="_So1x4a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x361MEeOdBunZhTRw1w" source="_So1yA61MEeOdBunZhTRw1w" target="_So1x4K1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1x4q1MEeOdBunZhTRw1w" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1x461MEeOdBunZhTRw1w" name="ReturnStatement@6ad042d7" outgoing="_So1x3q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So1x5K1MEeOdBunZhTRw1w" name="Call(getContent)">
              <result xmi:id="_So1x5a1MEeOdBunZhTRw1w" name="Call(getContent).result()" outgoing="_So1yB61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x5q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x561MEeOdBunZhTRw1w" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-getContent"/>
              <target xmi:id="_So1x6K1MEeOdBunZhTRw1w" name="Call(getContent).target" incoming="_So1yBq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x6a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x6q1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_So1x661MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_So1x7K1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So1yBq1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x7a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x7q1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So1x761MEeOdBunZhTRw1w" name="CastExpression@593fa6c5" mode="parallel" outputElement="_So1yAq1MEeOdBunZhTRw1w" inputElement="_So1yAa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So1x8K1MEeOdBunZhTRw1w" name="Merge(CastExpression@593fa6c5.operand)" outgoing="_So1yAK1MEeOdBunZhTRw1w" incoming="_So1x_a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So1x8a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <object xmi:id="_So1x8q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So1x-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x861MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x9K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So1x9a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So1x_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1x9q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1x961MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So1x-K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So1x-q1MEeOdBunZhTRw1w _So1x-61MEeOdBunZhTRw1w" incoming="_So1x_61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So1x-a1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So1x_a1MEeOdBunZhTRw1w" incoming="_So1x-61MEeOdBunZhTRw1w _So1x_K1MEeOdBunZhTRw1w" decisionInputFlow="_So1x_K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x-q1MEeOdBunZhTRw1w" source="_So1x-K1MEeOdBunZhTRw1w" target="_So1x8q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x-61MEeOdBunZhTRw1w" source="_So1x-K1MEeOdBunZhTRw1w" target="_So1x-a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x_K1MEeOdBunZhTRw1w" source="_So1x9a1MEeOdBunZhTRw1w" target="_So1x-a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x_a1MEeOdBunZhTRw1w" source="_So1x-a1MEeOdBunZhTRw1w" target="_So1x8K1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So1x_q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1x_61MEeOdBunZhTRw1w" source="_So1yAa1MEeOdBunZhTRw1w" target="_So1x-K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yAK1MEeOdBunZhTRw1w" source="_So1x8K1MEeOdBunZhTRw1w" target="_So1yAq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So1yAa1MEeOdBunZhTRw1w" name="CastExpression@593fa6c5.inputElement" outgoing="_So1x_61MEeOdBunZhTRw1w" incoming="_So1yB61MEeOdBunZhTRw1w" regionAsInput="_So1x761MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So1yAq1MEeOdBunZhTRw1w" name="CastExpression@593fa6c5.outputElement" outgoing="_So1yCK1MEeOdBunZhTRw1w" incoming="_So1yAK1MEeOdBunZhTRw1w" regionAsOutput="_So1x761MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </node>
            <structuredNodeOutput xmi:id="_So1yA61MEeOdBunZhTRw1w" name="ReturnStatement@6ad042d7.output" outgoing="_So1x361MEeOdBunZhTRw1w" incoming="_So1yCK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yBK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yBa1MEeOdBunZhTRw1w" value="*"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yBq1MEeOdBunZhTRw1w" source="_So1x7K1MEeOdBunZhTRw1w" target="_So1x6K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yB61MEeOdBunZhTRw1w" source="_So1x5a1MEeOdBunZhTRw1w" target="_So1yAa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yCK1MEeOdBunZhTRw1w" source="_So1yAq1MEeOdBunZhTRw1w" target="_So1yA61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1x4K1MEeOdBunZhTRw1w" name="Return" incoming="_So1x361MEeOdBunZhTRw1w" parameter="_So1x261MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1x4a1MEeOdBunZhTRw1w" name="Final" incoming="_So1x3q1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1yCa1MEeOdBunZhTRw1w" name="Set$initialization$1" specification="_So1yUa1MEeOdBunZhTRw1w" group="_So1yCq1MEeOdBunZhTRw1w" node="_So1yCq1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So1yCq1MEeOdBunZhTRw1w" name="Body(Set$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So1yC61MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So1yDK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So1yRq1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yDa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yDq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So1yD61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So1yR61MEeOdBunZhTRw1w _So1ySK1MEeOdBunZhTRw1w _So1ySa1MEeOdBunZhTRw1w" incoming="_So1yRq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1yEK1MEeOdBunZhTRw1w" name="Initialization" incoming="_So1yT61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So1yEa1MEeOdBunZhTRw1w" name="Call(SetImpl$initialization$1)" outgoing="_So1yJq1MEeOdBunZhTRw1w">
              <operation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-SetImplinitialization1.1"/>
              <target xmi:id="_So1yEq1MEeOdBunZhTRw1w" name="Call(SetImpl$initialization$1).target" incoming="_So1yR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#SetImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yE61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yFK1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1yFa1MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_So1yJq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So1yFq1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_So1yF61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So1yJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yGK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yGa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_So1yGq1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_So1yG61MEeOdBunZhTRw1w" name="Write(Set$initializationFlag$1)" structuralFeature="_So1MO61MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_So1yHK1MEeOdBunZhTRw1w" name="Write(Set$initializationFlag$1).object" incoming="_So1ySK1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yHa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yHq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So1yH61MEeOdBunZhTRw1w" name="Write(Set$initializationFlag$1).result" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yIK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yIa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_So1yIq1MEeOdBunZhTRw1w" name="Write(Set$initializationFlag$1).value" incoming="_So1yJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yI61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yJK1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yJa1MEeOdBunZhTRw1w" source="_So1yF61MEeOdBunZhTRw1w" target="_So1yIq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So1yJq1MEeOdBunZhTRw1w" source="_So1yEa1MEeOdBunZhTRw1w" target="_So1yFa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So1yJ61MEeOdBunZhTRw1w" name="Read(Set$initializationFlag$1)" structuralFeature="_So1MO61MEeOdBunZhTRw1w">
            <object xmi:id="_So1yKK1MEeOdBunZhTRw1w" name="Read(Set$initializationFlag$1).object" incoming="_So1ySa1MEeOdBunZhTRw1w" type="_So1MOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yKa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yKq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So1yK61MEeOdBunZhTRw1w" name="Read(Set$initializationFlag$1).result" outgoing="_So1ySq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yLK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yLa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1yLq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So1yL61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So1ySq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yMK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yMa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So1yMq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So1yS61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yM61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yNK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So1yNa1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So1yNq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So1yTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yN61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yOK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So1yOa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So1yOq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So1yO61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So1yS61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yPK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yPa1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So1yPq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So1yTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yP61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yQK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So1yQa1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So1yTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yQq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yQ61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So1yRK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So1yTa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So1yRa1MEeOdBunZhTRw1w" name="Decision(Test(Set$initializationFlag$1))" outgoing="_So1yT61MEeOdBunZhTRw1w" incoming="_So1yTa1MEeOdBunZhTRw1w _So1yTq1MEeOdBunZhTRw1w" decisionInputFlow="_So1yTq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yRq1MEeOdBunZhTRw1w" source="_So1yDK1MEeOdBunZhTRw1w" target="_So1yD61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yR61MEeOdBunZhTRw1w" source="_So1yD61MEeOdBunZhTRw1w" target="_So1yEq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1ySK1MEeOdBunZhTRw1w" source="_So1yD61MEeOdBunZhTRw1w" target="_So1yHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1ySa1MEeOdBunZhTRw1w" source="_So1yD61MEeOdBunZhTRw1w" target="_So1yKK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1ySq1MEeOdBunZhTRw1w" source="_So1yK61MEeOdBunZhTRw1w" target="_So1yL61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yS61MEeOdBunZhTRw1w" source="_So1yMq1MEeOdBunZhTRw1w" target="_So1yO61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yTK1MEeOdBunZhTRw1w" source="_So1yNq1MEeOdBunZhTRw1w" target="_So1yQa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1yTa1MEeOdBunZhTRw1w" source="_So1yRK1MEeOdBunZhTRw1w" target="_So1yRa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1yTq1MEeOdBunZhTRw1w" source="_So1yPq1MEeOdBunZhTRw1w" target="_So1yRa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1yT61MEeOdBunZhTRw1w" source="_So1yRa1MEeOdBunZhTRw1w" target="_So1yEK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So1yUK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_So1yUa1MEeOdBunZhTRw1w" name="Set$initialization$1" visibility="protected" method="_So1yCa1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So1yUq1MEeOdBunZhTRw1w" name="Set" visibility="public" method="_So1MPq1MEeOdBunZhTRw1w" redefinedOperation="_So0md61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yU61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yVK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yVa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yVq1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1MOK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yV61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yWK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yWa1MEeOdBunZhTRw1w" name="destroy" visibility="public" method="_So1Miq1MEeOdBunZhTRw1w">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#SetImpl-destroy"/>
        <redefinedOperation href="#_So0mfq1MEeOdBunZhTRw1w"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yWq1MEeOdBunZhTRw1w" name="add" visibility="public" method="_So1MjK1MEeOdBunZhTRw1w" redefinedOperation="_So0mgK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yW61MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yXK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yXa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yXq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yX61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yYK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yYa1MEeOdBunZhTRw1w" name="addAll" visibility="public" method="_So1MqK1MEeOdBunZhTRw1w" redefinedOperation="_So0mha1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yYq1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yY61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yZK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yZa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yZq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yZ61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yaK1MEeOdBunZhTRw1w" name="clear" visibility="public" method="_So1MxK1MEeOdBunZhTRw1w" redefinedOperation="_So1Jta1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So1yaa1MEeOdBunZhTRw1w" name="count" visibility="public" method="_So1MyK1MEeOdBunZhTRw1w" redefinedOperation="_So0mja1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yaq1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ya61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ybK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yba1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ybq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yb61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1ycK1MEeOdBunZhTRw1w" name="equals" visibility="public" method="_So1M5K1MEeOdBunZhTRw1w" redefinedOperation="_So0mkq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yca1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ycq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yc61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ydK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yda1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ydq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yd61MEeOdBunZhTRw1w" name="excludes" visibility="public" method="_So1NAK1MEeOdBunZhTRw1w" redefinedOperation="_So1JxK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yeK1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yea1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yeq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ye61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yfK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yfa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yfq1MEeOdBunZhTRw1w" name="excludesAll" visibility="public" method="_So1NHK1MEeOdBunZhTRw1w" redefinedOperation="_So1Jyq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yf61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ygK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yga1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ygq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yg61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yhK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yha1MEeOdBunZhTRw1w" name="includes" visibility="public" method="_So1wsK1MEeOdBunZhTRw1w" redefinedOperation="_So1J0a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yhq1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yh61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yiK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yia1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yiq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yi61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yjK1MEeOdBunZhTRw1w" name="includesAll" visibility="public" method="_So1wzK1MEeOdBunZhTRw1w" redefinedOperation="_So1J161MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yja1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yjq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yj61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ykK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yka1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ykq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yk61MEeOdBunZhTRw1w" name="isEmpty" visibility="public" method="_So1w6K1MEeOdBunZhTRw1w" redefinedOperation="_So1J3q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1ylK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yla1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ylq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yl61MEeOdBunZhTRw1w" name="notEmpty" visibility="public" method="_So1w-q1MEeOdBunZhTRw1w" redefinedOperation="_So1J4q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1ymK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yma1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ymq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1ym61MEeOdBunZhTRw1w" name="remove" visibility="public" method="_So1xDK1MEeOdBunZhTRw1w" redefinedOperation="_So1J5a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1ynK1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yna1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ynq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yn61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yoK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yoa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yoq1MEeOdBunZhTRw1w" name="removeAll" visibility="public" method="_So1xKK1MEeOdBunZhTRw1w" redefinedOperation="_So1J6a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yo61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ypK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ypa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ypq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yp61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yqK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yqa1MEeOdBunZhTRw1w" name="removeOne" visibility="public" method="_So1xRK1MEeOdBunZhTRw1w" redefinedOperation="_So1J8K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yqq1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yq61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yrK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yra1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yrq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yr61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1ysK1MEeOdBunZhTRw1w" name="replace" visibility="public" method="_So1xYK1MEeOdBunZhTRw1w" redefinedOperation="_So1J9a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1ysa1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ysq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ys61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ytK1MEeOdBunZhTRw1w" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yta1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ytq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yt61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yuK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yua1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yuq1MEeOdBunZhTRw1w" name="replaceOne" visibility="public" method="_So1xhq1MEeOdBunZhTRw1w" redefinedOperation="_So1J_K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yu61MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yvK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yva1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yvq1MEeOdBunZhTRw1w" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yv61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1ywK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1ywa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ywq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yw61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yxK1MEeOdBunZhTRw1w" name="retainAll" visibility="public" method="_So1xrK1MEeOdBunZhTRw1w" redefinedOperation="_So1KA61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yxa1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yxq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yx61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1yyK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yya1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yyq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yy61MEeOdBunZhTRw1w" name="size" visibility="public" method="_So1xyK1MEeOdBunZhTRw1w" redefinedOperation="_So1KCq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1yzK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1yza1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1yzq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So1yz61MEeOdBunZhTRw1w" name="toSequence" visibility="public" method="_So1x2q1MEeOdBunZhTRw1w" redefinedOperation="_So1KDq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1y0K1MEeOdBunZhTRw1w" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y0a1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y0q1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1y061MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So1y1K1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So1y1a1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b3EdYXREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b3EdIXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So1y1q1MEeOdBunZhTRw1w" client="_So1MOK1MEeOdBunZhTRw1w" supplier="_So1y061MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So1y161MEeOdBunZhTRw1w" clientDependency="_So2bCq1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Impl$List__PrimitiveTypes$String__">
      <generalization xmi:id="_So1y2K1MEeOdBunZhTRw1w">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
      </generalization>
      <generalization xmi:id="_So1y2a1MEeOdBunZhTRw1w" general="_So1KHK1MEeOdBunZhTRw1w"/>
      <ownedAttribute xmi:id="_So1y2q1MEeOdBunZhTRw1w" name="List$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y261MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y3K1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1y3a1MEeOdBunZhTRw1w" name="List$method$1" specification="_So2aQa1MEeOdBunZhTRw1w" group="_So1y6q1MEeOdBunZhTRw1w" node="_So1y561MEeOdBunZhTRw1w _So1y6K1MEeOdBunZhTRw1w _So1y6a1MEeOdBunZhTRw1w _So1y6q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1y3q1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y361MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y4K1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1y4a1MEeOdBunZhTRw1w" name="" type="_So1y161MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y4q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y461MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1y5K1MEeOdBunZhTRw1w" source="_So1y561MEeOdBunZhTRw1w" target="_So1y6K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1y5a1MEeOdBunZhTRw1w" source="_So1y8K1MEeOdBunZhTRw1w" target="_So1y6a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1y5q1MEeOdBunZhTRw1w" source="_So1y6K1MEeOdBunZhTRw1w" target="_So1y9K1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1y6q1MEeOdBunZhTRw1w" name="Body(List$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1y661MEeOdBunZhTRw1w" name="Body" incoming="_So1zH61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So1y7K1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So1y7a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So1zHa1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y7q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y761MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So1y8K1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So1y5a1MEeOdBunZhTRw1w _So1zHq1MEeOdBunZhTRw1w _So1zIa1MEeOdBunZhTRw1w" incoming="_So1zHa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1y8a1MEeOdBunZhTRw1w" name="Super" outgoing="_So1zIK1MEeOdBunZhTRw1w" incoming="_So1zJ61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1y8q1MEeOdBunZhTRw1w" name="ExpressionStatement@4120ad65">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1y861MEeOdBunZhTRw1w" name="Call(ListImpl$method$1)">
                <argument xmi:id="_So1y9K1MEeOdBunZhTRw1w" name="Call(ListImpl$method$1).argument(seq)" incoming="_So1y5q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y9a1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y9q1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So1y961MEeOdBunZhTRw1w" name="Call(ListImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y-K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y-a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_So1y-q1MEeOdBunZhTRw1w" name="Call(List$initialization$1)" outgoing="_So1zH61MEeOdBunZhTRw1w" incoming="_So1zIK1MEeOdBunZhTRw1w" operation="_So2aQK1MEeOdBunZhTRw1w">
            <target xmi:id="_So1y-61MEeOdBunZhTRw1w" name="Call(List$initialization$1).target" incoming="_So1zHq1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1y_K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1y_a1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So1y_q1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1)" structuralFeature="_So1y2q1MEeOdBunZhTRw1w">
            <object xmi:id="_So1y_61MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).object" incoming="_So1zIa1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zAK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zAa1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So1zAq1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).result" outgoing="_So1zIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zA61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zBK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1zBa1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So1zBq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So1zIq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zB61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zCK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So1zCa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So1zI61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zCq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zC61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So1zDK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So1zDa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So1zJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zDq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zD61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So1zEK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So1zEa1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So1zEq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So1zI61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zE61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zFK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So1zFa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So1zJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zFq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zF61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So1zGK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So1zJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zGa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zGq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So1zG61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So1zJa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So1zHK1MEeOdBunZhTRw1w" name="Decision(Test(List$initializationFlag$1))" outgoing="_So1zJ61MEeOdBunZhTRw1w" incoming="_So1zJa1MEeOdBunZhTRw1w _So1zJq1MEeOdBunZhTRw1w" decisionInputFlow="_So1zJq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zHa1MEeOdBunZhTRw1w" source="_So1y7a1MEeOdBunZhTRw1w" target="_So1y8K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zHq1MEeOdBunZhTRw1w" source="_So1y8K1MEeOdBunZhTRw1w" target="_So1y-61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1zH61MEeOdBunZhTRw1w" source="_So1y-q1MEeOdBunZhTRw1w" target="_So1y661MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1zIK1MEeOdBunZhTRw1w" source="_So1y8a1MEeOdBunZhTRw1w" target="_So1y-q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zIa1MEeOdBunZhTRw1w" source="_So1y8K1MEeOdBunZhTRw1w" target="_So1y_61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zIq1MEeOdBunZhTRw1w" source="_So1zAq1MEeOdBunZhTRw1w" target="_So1zBq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zI61MEeOdBunZhTRw1w" source="_So1zCa1MEeOdBunZhTRw1w" target="_So1zEq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zJK1MEeOdBunZhTRw1w" source="_So1zDa1MEeOdBunZhTRw1w" target="_So1zGK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1zJa1MEeOdBunZhTRw1w" source="_So1zG61MEeOdBunZhTRw1w" target="_So1zHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zJq1MEeOdBunZhTRw1w" source="_So1zFa1MEeOdBunZhTRw1w" target="_So1zHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So1zJ61MEeOdBunZhTRw1w" source="_So1zHK1MEeOdBunZhTRw1w" target="_So1y8a1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So1zKK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1y561MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1y5K1MEeOdBunZhTRw1w" parameter="_So1y3q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1y6K1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1y5q1MEeOdBunZhTRw1w" incoming="_So1y5K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1y6a1MEeOdBunZhTRw1w" name="Return" incoming="_So1y5a1MEeOdBunZhTRw1w" parameter="_So1y4a1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1zKa1MEeOdBunZhTRw1w" name="destroy$method$2" specification="_So2aSK1MEeOdBunZhTRw1w" group="_So1zKq1MEeOdBunZhTRw1w" node="_So1zKq1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So1zKq1MEeOdBunZhTRw1w" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1zK61MEeOdBunZhTRw1w" name="add$method$1" specification="_So2aSa1MEeOdBunZhTRw1w" group="_So1zOq1MEeOdBunZhTRw1w" node="_So1zNq1MEeOdBunZhTRw1w _So1zN61MEeOdBunZhTRw1w _So1zOK1MEeOdBunZhTRw1w _So1zOa1MEeOdBunZhTRw1w _So1zOq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1zLK1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zLa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zLq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zL61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zMK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zMa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zMq1MEeOdBunZhTRw1w" source="_So1zNq1MEeOdBunZhTRw1w" target="_So1zN61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1zM61MEeOdBunZhTRw1w" source="_So1zO61MEeOdBunZhTRw1w" target="_So1zOa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zNK1MEeOdBunZhTRw1w" source="_So1zN61MEeOdBunZhTRw1w" target="_So1zPa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zNa1MEeOdBunZhTRw1w" source="_So1zQ61MEeOdBunZhTRw1w" target="_So1zOK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1zOq1MEeOdBunZhTRw1w" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1zO61MEeOdBunZhTRw1w" name="ReturnStatement@6c970086" outgoing="_So1zM61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1zPK1MEeOdBunZhTRw1w" name="Call(addImpl$method$1)">
              <argument xmi:id="_So1zPa1MEeOdBunZhTRw1w" name="Call(addImpl$method$1).argument(element)" incoming="_So1zNK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zPq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zP61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1zQK1MEeOdBunZhTRw1w" name="Call(addImpl$method$1).result()" outgoing="_So1zRq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zQa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zQq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1zQ61MEeOdBunZhTRw1w" name="ReturnStatement@6c970086.output" outgoing="_So1zNa1MEeOdBunZhTRw1w" incoming="_So1zRq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zRK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zRa1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zRq1MEeOdBunZhTRw1w" source="_So1zQK1MEeOdBunZhTRw1w" target="_So1zQ61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zNq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1zMq1MEeOdBunZhTRw1w" parameter="_So1zLK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1zN61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1zNK1MEeOdBunZhTRw1w" incoming="_So1zMq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zOK1MEeOdBunZhTRw1w" name="Return" incoming="_So1zNa1MEeOdBunZhTRw1w" parameter="_So1zL61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1zOa1MEeOdBunZhTRw1w" name="Final" incoming="_So1zM61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1zR61MEeOdBunZhTRw1w" name="addAt$method$1" specification="_So2aUK1MEeOdBunZhTRw1w" group="_So1zXa1MEeOdBunZhTRw1w" node="_So1zV61MEeOdBunZhTRw1w _So1zWK1MEeOdBunZhTRw1w _So1zWa1MEeOdBunZhTRw1w _So1zWq1MEeOdBunZhTRw1w _So1zW61MEeOdBunZhTRw1w _So1zXK1MEeOdBunZhTRw1w _So1zXa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1zSK1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zSa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zSq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zS61MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zTK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zTa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zTq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zT61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zUK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zUa1MEeOdBunZhTRw1w" source="_So1zV61MEeOdBunZhTRw1w" target="_So1zWK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zUq1MEeOdBunZhTRw1w" source="_So1zWa1MEeOdBunZhTRw1w" target="_So1zWq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1zU61MEeOdBunZhTRw1w" source="_So1zXq1MEeOdBunZhTRw1w" target="_So1zXK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zVK1MEeOdBunZhTRw1w" source="_So1zWK1MEeOdBunZhTRw1w" target="_So1zYK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zVa1MEeOdBunZhTRw1w" source="_So1zWq1MEeOdBunZhTRw1w" target="_So1zY61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zVq1MEeOdBunZhTRw1w" source="_So1zaa1MEeOdBunZhTRw1w" target="_So1zW61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1zXa1MEeOdBunZhTRw1w" name="Body(addAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1zXq1MEeOdBunZhTRw1w" name="ReturnStatement@11e70f62" outgoing="_So1zU61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1zX61MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1)">
              <argument xmi:id="_So1zYK1MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1).argument(index)" incoming="_So1zVK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zYa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zYq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So1zY61MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1).argument(element)" incoming="_So1zVa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zZK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zZa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1zZq1MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1).result()" outgoing="_So1zbK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zZ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zaK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAtImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1zaa1MEeOdBunZhTRw1w" name="ReturnStatement@11e70f62.output" outgoing="_So1zVq1MEeOdBunZhTRw1w" incoming="_So1zbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zaq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1za61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zbK1MEeOdBunZhTRw1w" source="_So1zZq1MEeOdBunZhTRw1w" target="_So1zaa1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zV61MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So1zUa1MEeOdBunZhTRw1w" parameter="_So1zSK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1zWK1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So1zVK1MEeOdBunZhTRw1w" incoming="_So1zUa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zWa1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1zUq1MEeOdBunZhTRw1w" parameter="_So1zS61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1zWq1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1zVa1MEeOdBunZhTRw1w" incoming="_So1zUq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zW61MEeOdBunZhTRw1w" name="Return" incoming="_So1zVq1MEeOdBunZhTRw1w" parameter="_So1zTq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1zXK1MEeOdBunZhTRw1w" name="Final" incoming="_So1zU61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1zba1MEeOdBunZhTRw1w" name="addAll$method$1" specification="_So2aWq1MEeOdBunZhTRw1w" group="_So1zfK1MEeOdBunZhTRw1w" node="_So1zeK1MEeOdBunZhTRw1w _So1zea1MEeOdBunZhTRw1w _So1zeq1MEeOdBunZhTRw1w _So1ze61MEeOdBunZhTRw1w _So1zfK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1zbq1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zb61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zcK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zca1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zcq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zc61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zdK1MEeOdBunZhTRw1w" source="_So1zeK1MEeOdBunZhTRw1w" target="_So1zea1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1zda1MEeOdBunZhTRw1w" source="_So1zfa1MEeOdBunZhTRw1w" target="_So1ze61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zdq1MEeOdBunZhTRw1w" source="_So1zea1MEeOdBunZhTRw1w" target="_So1zf61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zd61MEeOdBunZhTRw1w" source="_So1zha1MEeOdBunZhTRw1w" target="_So1zeq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1zfK1MEeOdBunZhTRw1w" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1zfa1MEeOdBunZhTRw1w" name="ReturnStatement@4b0900c8" outgoing="_So1zda1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1zfq1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_So1zf61MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1).argument(seq)" incoming="_So1zdq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zgK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zga1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1zgq1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1).result()" outgoing="_So1ziK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zg61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zhK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1zha1MEeOdBunZhTRw1w" name="ReturnStatement@4b0900c8.output" outgoing="_So1zd61MEeOdBunZhTRw1w" incoming="_So1ziK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zhq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zh61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1ziK1MEeOdBunZhTRw1w" source="_So1zgq1MEeOdBunZhTRw1w" target="_So1zha1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zeK1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1zdK1MEeOdBunZhTRw1w" parameter="_So1zbq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1zea1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1zdq1MEeOdBunZhTRw1w" incoming="_So1zdK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zeq1MEeOdBunZhTRw1w" name="Return" incoming="_So1zd61MEeOdBunZhTRw1w" parameter="_So1zca1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1ze61MEeOdBunZhTRw1w" name="Final" incoming="_So1zda1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1zia1MEeOdBunZhTRw1w" name="addAllAt$method$1" specification="_So2aYa1MEeOdBunZhTRw1w" group="_So1zn61MEeOdBunZhTRw1w" node="_So1zma1MEeOdBunZhTRw1w _So1zmq1MEeOdBunZhTRw1w _So1zm61MEeOdBunZhTRw1w _So1znK1MEeOdBunZhTRw1w _So1zna1MEeOdBunZhTRw1w _So1znq1MEeOdBunZhTRw1w _So1zn61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1ziq1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zi61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zjK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zja1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zjq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zj61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zkK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zka1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zkq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zk61MEeOdBunZhTRw1w" source="_So1zma1MEeOdBunZhTRw1w" target="_So1zmq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zlK1MEeOdBunZhTRw1w" source="_So1zm61MEeOdBunZhTRw1w" target="_So1znK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1zla1MEeOdBunZhTRw1w" source="_So1zoK1MEeOdBunZhTRw1w" target="_So1znq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zlq1MEeOdBunZhTRw1w" source="_So1zmq1MEeOdBunZhTRw1w" target="_So1zoq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zl61MEeOdBunZhTRw1w" source="_So1znK1MEeOdBunZhTRw1w" target="_So1zpa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zmK1MEeOdBunZhTRw1w" source="_So1zq61MEeOdBunZhTRw1w" target="_So1zna1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1zn61MEeOdBunZhTRw1w" name="Body(addAllAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1zoK1MEeOdBunZhTRw1w" name="ReturnStatement@a3fb526" outgoing="_So1zla1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1zoa1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1)">
              <argument xmi:id="_So1zoq1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1).argument(index)" incoming="_So1zlq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zo61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zpK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So1zpa1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1).argument(seq)" incoming="_So1zl61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zpq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zp61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So1zqK1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1).result()" outgoing="_So1zrq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zqa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zqq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAllAtImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1zq61MEeOdBunZhTRw1w" name="ReturnStatement@a3fb526.output" outgoing="_So1zmK1MEeOdBunZhTRw1w" incoming="_So1zrq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zrK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zra1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zrq1MEeOdBunZhTRw1w" source="_So1zqK1MEeOdBunZhTRw1w" target="_So1zq61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zma1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So1zk61MEeOdBunZhTRw1w" parameter="_So1ziq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1zmq1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So1zlq1MEeOdBunZhTRw1w" incoming="_So1zk61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zm61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So1zlK1MEeOdBunZhTRw1w" parameter="_So1zja1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1znK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So1zl61MEeOdBunZhTRw1w" incoming="_So1zlK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zna1MEeOdBunZhTRw1w" name="Return" incoming="_So1zmK1MEeOdBunZhTRw1w" parameter="_So1zkK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1znq1MEeOdBunZhTRw1w" name="Final" incoming="_So1zla1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1zr61MEeOdBunZhTRw1w" name="at$method$1" specification="_So2aa61MEeOdBunZhTRw1w" group="_So1zvq1MEeOdBunZhTRw1w" node="_So1zuq1MEeOdBunZhTRw1w _So1zu61MEeOdBunZhTRw1w _So1zvK1MEeOdBunZhTRw1w _So1zva1MEeOdBunZhTRw1w _So1zvq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1zsK1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zsa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zsq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1zs61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1ztK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zta1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1ztq1MEeOdBunZhTRw1w" source="_So1zuq1MEeOdBunZhTRw1w" target="_So1zu61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1zt61MEeOdBunZhTRw1w" source="_So1zv61MEeOdBunZhTRw1w" target="_So1zva1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zuK1MEeOdBunZhTRw1w" source="_So1zu61MEeOdBunZhTRw1w" target="_So1zwa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1zua1MEeOdBunZhTRw1w" source="_So1z261MEeOdBunZhTRw1w" target="_So1zvK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1zvq1MEeOdBunZhTRw1w" name="Body(at$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1zv61MEeOdBunZhTRw1w" name="ReturnStatement@7d224d90" outgoing="_So1zt61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1zwK1MEeOdBunZhTRw1w" name="Call(atImpl$method$1)">
              <argument xmi:id="_So1zwa1MEeOdBunZhTRw1w" name="Call(atImpl$method$1).argument(index)" incoming="_So1zuK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zwq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zw61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1zxK1MEeOdBunZhTRw1w" name="Call(atImpl$method$1).result()" outgoing="_So1z3q1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zxa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zxq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-atImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So1zx61MEeOdBunZhTRw1w" name="CastExpression@60e88620" mode="parallel" outputElement="_So1z2q1MEeOdBunZhTRw1w" inputElement="_So1z2a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So1zyK1MEeOdBunZhTRw1w" name="Merge(CastExpression@60e88620.operand)" outgoing="_So1z2K1MEeOdBunZhTRw1w" incoming="_So1z1a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So1zya1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_So1zyq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So1z0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zy61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zzK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So1zza1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So1z1K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1zzq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1zz61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So1z0K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So1z0q1MEeOdBunZhTRw1w _So1z061MEeOdBunZhTRw1w" incoming="_So1z161MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So1z0a1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So1z1a1MEeOdBunZhTRw1w" incoming="_So1z061MEeOdBunZhTRw1w _So1z1K1MEeOdBunZhTRw1w" decisionInputFlow="_So1z1K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z0q1MEeOdBunZhTRw1w" source="_So1z0K1MEeOdBunZhTRw1w" target="_So1zyq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z061MEeOdBunZhTRw1w" source="_So1z0K1MEeOdBunZhTRw1w" target="_So1z0a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z1K1MEeOdBunZhTRw1w" source="_So1zza1MEeOdBunZhTRw1w" target="_So1z0a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z1a1MEeOdBunZhTRw1w" source="_So1z0a1MEeOdBunZhTRw1w" target="_So1zyK1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So1z1q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z161MEeOdBunZhTRw1w" source="_So1z2a1MEeOdBunZhTRw1w" target="_So1z0K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z2K1MEeOdBunZhTRw1w" source="_So1zyK1MEeOdBunZhTRw1w" target="_So1z2q1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So1z2a1MEeOdBunZhTRw1w" name="CastExpression@60e88620.inputElement" outgoing="_So1z161MEeOdBunZhTRw1w" incoming="_So1z3q1MEeOdBunZhTRw1w" regionAsInput="_So1zx61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So1z2q1MEeOdBunZhTRw1w" name="CastExpression@60e88620.outputElement" outgoing="_So1z361MEeOdBunZhTRw1w" incoming="_So1z2K1MEeOdBunZhTRw1w" regionAsOutput="_So1zx61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
            <structuredNodeOutput xmi:id="_So1z261MEeOdBunZhTRw1w" name="ReturnStatement@7d224d90.output" outgoing="_So1zua1MEeOdBunZhTRw1w" incoming="_So1z361MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1z3K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1z3a1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z3q1MEeOdBunZhTRw1w" source="_So1zxK1MEeOdBunZhTRw1w" target="_So1z2a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z361MEeOdBunZhTRw1w" source="_So1z2q1MEeOdBunZhTRw1w" target="_So1z261MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zuq1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So1ztq1MEeOdBunZhTRw1w" parameter="_So1zsK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1zu61MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So1zuK1MEeOdBunZhTRw1w" incoming="_So1ztq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1zvK1MEeOdBunZhTRw1w" name="Return" incoming="_So1zua1MEeOdBunZhTRw1w" parameter="_So1zs61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1zva1MEeOdBunZhTRw1w" name="Final" incoming="_So1zt61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1z4K1MEeOdBunZhTRw1w" name="clear$method$1" specification="_So2acq1MEeOdBunZhTRw1w" group="_So1z4a1MEeOdBunZhTRw1w" node="_So1z4a1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So1z4a1MEeOdBunZhTRw1w" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1z4q1MEeOdBunZhTRw1w" name="ExpressionStatement@46346072">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1z461MEeOdBunZhTRw1w" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So1z5K1MEeOdBunZhTRw1w" name="count$method$1" specification="_So2ac61MEeOdBunZhTRw1w" group="_So1z861MEeOdBunZhTRw1w" node="_So1z761MEeOdBunZhTRw1w _So1z8K1MEeOdBunZhTRw1w _So1z8a1MEeOdBunZhTRw1w _So1z8q1MEeOdBunZhTRw1w _So1z861MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So1z5a1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1z5q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1z561MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So1z6K1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1z6a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1z6q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z661MEeOdBunZhTRw1w" source="_So1z761MEeOdBunZhTRw1w" target="_So1z8K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So1z7K1MEeOdBunZhTRw1w" source="_So1z9K1MEeOdBunZhTRw1w" target="_So1z8q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z7a1MEeOdBunZhTRw1w" source="_So1z8K1MEeOdBunZhTRw1w" target="_So1z9q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z7q1MEeOdBunZhTRw1w" source="_So1z_K1MEeOdBunZhTRw1w" target="_So1z8a1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So1z861MEeOdBunZhTRw1w" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So1z9K1MEeOdBunZhTRw1w" name="ReturnStatement@1dea3324" outgoing="_So1z7K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So1z9a1MEeOdBunZhTRw1w" name="Call(countImpl$method$1)">
              <argument xmi:id="_So1z9q1MEeOdBunZhTRw1w" name="Call(countImpl$method$1).argument(element)" incoming="_So1z7a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1z961MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1z-K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So1z-a1MEeOdBunZhTRw1w" name="Call(countImpl$method$1).result()" outgoing="_So1z_61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1z-q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1z-61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So1z_K1MEeOdBunZhTRw1w" name="ReturnStatement@1dea3324.output" outgoing="_So1z7q1MEeOdBunZhTRw1w" incoming="_So1z_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So1z_a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So1z_q1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So1z_61MEeOdBunZhTRw1w" source="_So1z-a1MEeOdBunZhTRw1w" target="_So1z_K1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1z761MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So1z661MEeOdBunZhTRw1w" parameter="_So1z5a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So1z8K1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So1z7a1MEeOdBunZhTRw1w" incoming="_So1z661MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So1z8a1MEeOdBunZhTRw1w" name="Return" incoming="_So1z7q1MEeOdBunZhTRw1w" parameter="_So1z6K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So1z8q1MEeOdBunZhTRw1w" name="Final" incoming="_So1z7K1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So10AK1MEeOdBunZhTRw1w" name="equals$method$1" specification="_So2aeq1MEeOdBunZhTRw1w" group="_So10D61MEeOdBunZhTRw1w" node="_So10C61MEeOdBunZhTRw1w _So10DK1MEeOdBunZhTRw1w _So10Da1MEeOdBunZhTRw1w _So10Dq1MEeOdBunZhTRw1w _So10D61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So10Aa1MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Aq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10A61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So10BK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Ba1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Bq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10B61MEeOdBunZhTRw1w" source="_So10C61MEeOdBunZhTRw1w" target="_So10DK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So10CK1MEeOdBunZhTRw1w" source="_So10EK1MEeOdBunZhTRw1w" target="_So10Dq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Ca1MEeOdBunZhTRw1w" source="_So10DK1MEeOdBunZhTRw1w" target="_So10Eq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Cq1MEeOdBunZhTRw1w" source="_So10GK1MEeOdBunZhTRw1w" target="_So10Da1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So10D61MEeOdBunZhTRw1w" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So10EK1MEeOdBunZhTRw1w" name="ReturnStatement@4b347dad" outgoing="_So10CK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So10Ea1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_So10Eq1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1).argument(seq)" incoming="_So10Ca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10E61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10FK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So10Fa1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1).result()" outgoing="_So10G61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Fq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10F61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So10GK1MEeOdBunZhTRw1w" name="ReturnStatement@4b347dad.output" outgoing="_So10Cq1MEeOdBunZhTRw1w" incoming="_So10G61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Ga1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Gq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So10G61MEeOdBunZhTRw1w" source="_So10Fa1MEeOdBunZhTRw1w" target="_So10GK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10C61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So10B61MEeOdBunZhTRw1w" parameter="_So10Aa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So10DK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So10Ca1MEeOdBunZhTRw1w" incoming="_So10B61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10Da1MEeOdBunZhTRw1w" name="Return" incoming="_So10Cq1MEeOdBunZhTRw1w" parameter="_So10BK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So10Dq1MEeOdBunZhTRw1w" name="Final" incoming="_So10CK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So10HK1MEeOdBunZhTRw1w" name="first$method$1" specification="_So2aga1MEeOdBunZhTRw1w" group="_So10JK1MEeOdBunZhTRw1w" node="_So10Iq1MEeOdBunZhTRw1w _So10I61MEeOdBunZhTRw1w _So10JK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So10Ha1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Hq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10H61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So10IK1MEeOdBunZhTRw1w" source="_So10Ja1MEeOdBunZhTRw1w" target="_So10I61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Ia1MEeOdBunZhTRw1w" source="_So10Pq1MEeOdBunZhTRw1w" target="_So10Iq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So10JK1MEeOdBunZhTRw1w" name="Body(first$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So10Ja1MEeOdBunZhTRw1w" name="ReturnStatement@9457b0f" outgoing="_So10IK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So10Jq1MEeOdBunZhTRw1w" name="Call(firstImpl$method$1)">
              <result xmi:id="_So10J61MEeOdBunZhTRw1w" name="Call(firstImpl$method$1).result()" outgoing="_So10Qa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10KK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Ka1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-firstImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So10Kq1MEeOdBunZhTRw1w" name="CastExpression@71749bbd" mode="parallel" outputElement="_So10Pa1MEeOdBunZhTRw1w" inputElement="_So10PK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So10K61MEeOdBunZhTRw1w" name="Merge(CastExpression@71749bbd.operand)" outgoing="_So10O61MEeOdBunZhTRw1w" incoming="_So10OK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So10LK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_So10La1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So10Na1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Lq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10L61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So10MK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So10N61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Ma1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Mq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So10M61MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So10Na1MEeOdBunZhTRw1w _So10Nq1MEeOdBunZhTRw1w" incoming="_So10Oq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So10NK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So10OK1MEeOdBunZhTRw1w" incoming="_So10Nq1MEeOdBunZhTRw1w _So10N61MEeOdBunZhTRw1w" decisionInputFlow="_So10N61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Na1MEeOdBunZhTRw1w" source="_So10M61MEeOdBunZhTRw1w" target="_So10La1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Nq1MEeOdBunZhTRw1w" source="_So10M61MEeOdBunZhTRw1w" target="_So10NK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10N61MEeOdBunZhTRw1w" source="_So10MK1MEeOdBunZhTRw1w" target="_So10NK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10OK1MEeOdBunZhTRw1w" source="_So10NK1MEeOdBunZhTRw1w" target="_So10K61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So10Oa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Oq1MEeOdBunZhTRw1w" source="_So10PK1MEeOdBunZhTRw1w" target="_So10M61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10O61MEeOdBunZhTRw1w" source="_So10K61MEeOdBunZhTRw1w" target="_So10Pa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So10PK1MEeOdBunZhTRw1w" name="CastExpression@71749bbd.inputElement" outgoing="_So10Oq1MEeOdBunZhTRw1w" incoming="_So10Qa1MEeOdBunZhTRw1w" regionAsInput="_So10Kq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So10Pa1MEeOdBunZhTRw1w" name="CastExpression@71749bbd.outputElement" outgoing="_So10Qq1MEeOdBunZhTRw1w" incoming="_So10O61MEeOdBunZhTRw1w" regionAsOutput="_So10Kq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
            <structuredNodeOutput xmi:id="_So10Pq1MEeOdBunZhTRw1w" name="ReturnStatement@9457b0f.output" outgoing="_So10Ia1MEeOdBunZhTRw1w" incoming="_So10Qq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10P61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10QK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Qa1MEeOdBunZhTRw1w" source="_So10J61MEeOdBunZhTRw1w" target="_So10PK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Qq1MEeOdBunZhTRw1w" source="_So10Pa1MEeOdBunZhTRw1w" target="_So10Pq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10Iq1MEeOdBunZhTRw1w" name="Return" incoming="_So10Ia1MEeOdBunZhTRw1w" parameter="_So10Ha1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So10I61MEeOdBunZhTRw1w" name="Final" incoming="_So10IK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So10Q61MEeOdBunZhTRw1w" name="indexOf$method$1" specification="_So2aha1MEeOdBunZhTRw1w" group="_So10Uq1MEeOdBunZhTRw1w" node="_So10Tq1MEeOdBunZhTRw1w _So10T61MEeOdBunZhTRw1w _So10UK1MEeOdBunZhTRw1w _So10Ua1MEeOdBunZhTRw1w _So10Uq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So10RK1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Ra1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Rq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So10R61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10SK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Sa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Sq1MEeOdBunZhTRw1w" source="_So10Tq1MEeOdBunZhTRw1w" target="_So10T61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So10S61MEeOdBunZhTRw1w" source="_So10U61MEeOdBunZhTRw1w" target="_So10Ua1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10TK1MEeOdBunZhTRw1w" source="_So10T61MEeOdBunZhTRw1w" target="_So10Va1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Ta1MEeOdBunZhTRw1w" source="_So10W61MEeOdBunZhTRw1w" target="_So10UK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So10Uq1MEeOdBunZhTRw1w" name="Body(indexOf$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So10U61MEeOdBunZhTRw1w" name="ReturnStatement@7000f98d" outgoing="_So10S61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So10VK1MEeOdBunZhTRw1w" name="Call(indexOfImpl$method$1)">
              <argument xmi:id="_So10Va1MEeOdBunZhTRw1w" name="Call(indexOfImpl$method$1).argument(element)" incoming="_So10TK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Vq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10V61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So10WK1MEeOdBunZhTRw1w" name="Call(indexOfImpl$method$1).result()" outgoing="_So10Xq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Wa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Wq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-indexOfImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So10W61MEeOdBunZhTRw1w" name="ReturnStatement@7000f98d.output" outgoing="_So10Ta1MEeOdBunZhTRw1w" incoming="_So10Xq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10XK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Xa1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So10Xq1MEeOdBunZhTRw1w" source="_So10WK1MEeOdBunZhTRw1w" target="_So10W61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10Tq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So10Sq1MEeOdBunZhTRw1w" parameter="_So10RK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So10T61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So10TK1MEeOdBunZhTRw1w" incoming="_So10Sq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10UK1MEeOdBunZhTRw1w" name="Return" incoming="_So10Ta1MEeOdBunZhTRw1w" parameter="_So10R61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So10Ua1MEeOdBunZhTRw1w" name="Final" incoming="_So10S61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So10X61MEeOdBunZhTRw1w" name="last$method$1" specification="_So2ajK1MEeOdBunZhTRw1w" group="_So10Z61MEeOdBunZhTRw1w" node="_So10Za1MEeOdBunZhTRw1w _So10Zq1MEeOdBunZhTRw1w _So10Z61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So10YK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10Ya1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10Yq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So10Y61MEeOdBunZhTRw1w" source="_So10aK1MEeOdBunZhTRw1w" target="_So10Zq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10ZK1MEeOdBunZhTRw1w" source="_So10ga1MEeOdBunZhTRw1w" target="_So10Za1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So10Z61MEeOdBunZhTRw1w" name="Body(last$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So10aK1MEeOdBunZhTRw1w" name="ReturnStatement@57161a37" outgoing="_So10Y61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So10aa1MEeOdBunZhTRw1w" name="Call(lastImpl$method$1)">
              <result xmi:id="_So10aq1MEeOdBunZhTRw1w" name="Call(lastImpl$method$1).result()" outgoing="_So10hK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10a61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10bK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-lastImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So10ba1MEeOdBunZhTRw1w" name="CastExpression@ff2d097" mode="parallel" outputElement="_So10gK1MEeOdBunZhTRw1w" inputElement="_So10f61MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So10bq1MEeOdBunZhTRw1w" name="Merge(CastExpression@ff2d097.operand)" outgoing="_So10fq1MEeOdBunZhTRw1w" incoming="_So10e61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So10b61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_So10cK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So10eK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10ca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10cq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So10c61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So10eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10dK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10da1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So10dq1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So10eK1MEeOdBunZhTRw1w _So10ea1MEeOdBunZhTRw1w" incoming="_So10fa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So10d61MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So10e61MEeOdBunZhTRw1w" incoming="_So10ea1MEeOdBunZhTRw1w _So10eq1MEeOdBunZhTRw1w" decisionInputFlow="_So10eq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10eK1MEeOdBunZhTRw1w" source="_So10dq1MEeOdBunZhTRw1w" target="_So10cK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10ea1MEeOdBunZhTRw1w" source="_So10dq1MEeOdBunZhTRw1w" target="_So10d61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10eq1MEeOdBunZhTRw1w" source="_So10c61MEeOdBunZhTRw1w" target="_So10d61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10e61MEeOdBunZhTRw1w" source="_So10d61MEeOdBunZhTRw1w" target="_So10bq1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So10fK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10fa1MEeOdBunZhTRw1w" source="_So10f61MEeOdBunZhTRw1w" target="_So10dq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So10fq1MEeOdBunZhTRw1w" source="_So10bq1MEeOdBunZhTRw1w" target="_So10gK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So10f61MEeOdBunZhTRw1w" name="CastExpression@ff2d097.inputElement" outgoing="_So10fa1MEeOdBunZhTRw1w" incoming="_So10hK1MEeOdBunZhTRw1w" regionAsInput="_So10ba1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So10gK1MEeOdBunZhTRw1w" name="CastExpression@ff2d097.outputElement" outgoing="_So10ha1MEeOdBunZhTRw1w" incoming="_So10fq1MEeOdBunZhTRw1w" regionAsOutput="_So10ba1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
            <structuredNodeOutput xmi:id="_So10ga1MEeOdBunZhTRw1w" name="ReturnStatement@57161a37.output" outgoing="_So10ZK1MEeOdBunZhTRw1w" incoming="_So10ha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10gq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10g61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So10hK1MEeOdBunZhTRw1w" source="_So10aq1MEeOdBunZhTRw1w" target="_So10f61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So10ha1MEeOdBunZhTRw1w" source="_So10gK1MEeOdBunZhTRw1w" target="_So10ga1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10Za1MEeOdBunZhTRw1w" name="Return" incoming="_So10ZK1MEeOdBunZhTRw1w" parameter="_So10YK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So10Zq1MEeOdBunZhTRw1w" name="Final" incoming="_So10Y61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So10hq1MEeOdBunZhTRw1w" name="excludes$method$1" specification="_So2akK1MEeOdBunZhTRw1w" group="_So10la1MEeOdBunZhTRw1w" node="_So10ka1MEeOdBunZhTRw1w _So10kq1MEeOdBunZhTRw1w _So10k61MEeOdBunZhTRw1w _So10lK1MEeOdBunZhTRw1w _So10la1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So10h61MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10iK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10ia1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So10iq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So10i61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So10jK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10ja1MEeOdBunZhTRw1w" source="_So10ka1MEeOdBunZhTRw1w" target="_So10kq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So10jq1MEeOdBunZhTRw1w" source="_So10lq1MEeOdBunZhTRw1w" target="_So10lK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10j61MEeOdBunZhTRw1w" source="_So10kq1MEeOdBunZhTRw1w" target="_So2XwK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So10kK1MEeOdBunZhTRw1w" source="_So2Xxq1MEeOdBunZhTRw1w" target="_So10k61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So10la1MEeOdBunZhTRw1w" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So10lq1MEeOdBunZhTRw1w" name="ReturnStatement@54ff23f3" outgoing="_So10jq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So10l61MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_So2XwK1MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1).argument(element)" incoming="_So10j61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Xwa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Xwq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2Xw61MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1).result()" outgoing="_So2Xya1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2XxK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Xxa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Xxq1MEeOdBunZhTRw1w" name="ReturnStatement@54ff23f3.output" outgoing="_So10kK1MEeOdBunZhTRw1w" incoming="_So2Xya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Xx61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2XyK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Xya1MEeOdBunZhTRw1w" source="_So2Xw61MEeOdBunZhTRw1w" target="_So2Xxq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10ka1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So10ja1MEeOdBunZhTRw1w" parameter="_So10h61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So10kq1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So10j61MEeOdBunZhTRw1w" incoming="_So10ja1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So10k61MEeOdBunZhTRw1w" name="Return" incoming="_So10kK1MEeOdBunZhTRw1w" parameter="_So10iq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So10lK1MEeOdBunZhTRw1w" name="Final" incoming="_So10jq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Xyq1MEeOdBunZhTRw1w" name="excludesAll$method$1" specification="_So2al61MEeOdBunZhTRw1w" group="_So2X2a1MEeOdBunZhTRw1w" node="_So2X1a1MEeOdBunZhTRw1w _So2X1q1MEeOdBunZhTRw1w _So2X161MEeOdBunZhTRw1w _So2X2K1MEeOdBunZhTRw1w _So2X2a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2Xy61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2XzK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Xza1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Xzq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Xz61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X0K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X0a1MEeOdBunZhTRw1w" source="_So2X1a1MEeOdBunZhTRw1w" target="_So2X1q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2X0q1MEeOdBunZhTRw1w" source="_So2X2q1MEeOdBunZhTRw1w" target="_So2X2K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X061MEeOdBunZhTRw1w" source="_So2X1q1MEeOdBunZhTRw1w" target="_So2X3K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X1K1MEeOdBunZhTRw1w" source="_So2X4q1MEeOdBunZhTRw1w" target="_So2X161MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2X2a1MEeOdBunZhTRw1w" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2X2q1MEeOdBunZhTRw1w" name="ReturnStatement@50ed97a6" outgoing="_So2X0q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2X261MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_So2X3K1MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_So2X061MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X3a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X3q1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2X361MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1).result()" outgoing="_So2X5a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X4K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X4a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2X4q1MEeOdBunZhTRw1w" name="ReturnStatement@50ed97a6.output" outgoing="_So2X1K1MEeOdBunZhTRw1w" incoming="_So2X5a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X461MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X5K1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X5a1MEeOdBunZhTRw1w" source="_So2X361MEeOdBunZhTRw1w" target="_So2X4q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2X1a1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2X0a1MEeOdBunZhTRw1w" parameter="_So2Xy61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2X1q1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2X061MEeOdBunZhTRw1w" incoming="_So2X0a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2X161MEeOdBunZhTRw1w" name="Return" incoming="_So2X1K1MEeOdBunZhTRw1w" parameter="_So2Xzq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2X2K1MEeOdBunZhTRw1w" name="Final" incoming="_So2X0q1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2X5q1MEeOdBunZhTRw1w" name="includes$method$1" specification="_So2anq1MEeOdBunZhTRw1w" group="_So2X9a1MEeOdBunZhTRw1w" node="_So2X8a1MEeOdBunZhTRw1w _So2X8q1MEeOdBunZhTRw1w _So2X861MEeOdBunZhTRw1w _So2X9K1MEeOdBunZhTRw1w _So2X9a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2X561MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X6K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X6a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2X6q1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X661MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X7K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X7a1MEeOdBunZhTRw1w" source="_So2X8a1MEeOdBunZhTRw1w" target="_So2X8q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2X7q1MEeOdBunZhTRw1w" source="_So2X9q1MEeOdBunZhTRw1w" target="_So2X9K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X761MEeOdBunZhTRw1w" source="_So2X8q1MEeOdBunZhTRw1w" target="_So2X-K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2X8K1MEeOdBunZhTRw1w" source="_So2X_q1MEeOdBunZhTRw1w" target="_So2X861MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2X9a1MEeOdBunZhTRw1w" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2X9q1MEeOdBunZhTRw1w" name="ReturnStatement@7b4fb4eb" outgoing="_So2X7q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2X961MEeOdBunZhTRw1w" name="Call(includesImpl$method$1)">
              <argument xmi:id="_So2X-K1MEeOdBunZhTRw1w" name="Call(includesImpl$method$1).argument(element)" incoming="_So2X761MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X-a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X-q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2X-61MEeOdBunZhTRw1w" name="Call(includesImpl$method$1).result()" outgoing="_So2YAa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X_K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2X_a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2X_q1MEeOdBunZhTRw1w" name="ReturnStatement@7b4fb4eb.output" outgoing="_So2X8K1MEeOdBunZhTRw1w" incoming="_So2YAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2X_61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YAK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YAa1MEeOdBunZhTRw1w" source="_So2X-61MEeOdBunZhTRw1w" target="_So2X_q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2X8a1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2X7a1MEeOdBunZhTRw1w" parameter="_So2X561MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2X8q1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2X761MEeOdBunZhTRw1w" incoming="_So2X7a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2X861MEeOdBunZhTRw1w" name="Return" incoming="_So2X8K1MEeOdBunZhTRw1w" parameter="_So2X6q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2X9K1MEeOdBunZhTRw1w" name="Final" incoming="_So2X7q1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2YAq1MEeOdBunZhTRw1w" name="includesAll$method$1" specification="_So2apa1MEeOdBunZhTRw1w" group="_So2YEa1MEeOdBunZhTRw1w" node="_So2YDa1MEeOdBunZhTRw1w _So2YDq1MEeOdBunZhTRw1w _So2YD61MEeOdBunZhTRw1w _So2YEK1MEeOdBunZhTRw1w _So2YEa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YA61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YBK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YBa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2YBq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YB61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YCK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YCa1MEeOdBunZhTRw1w" source="_So2YDa1MEeOdBunZhTRw1w" target="_So2YDq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2YCq1MEeOdBunZhTRw1w" source="_So2YEq1MEeOdBunZhTRw1w" target="_So2YEK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YC61MEeOdBunZhTRw1w" source="_So2YDq1MEeOdBunZhTRw1w" target="_So2YFK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YDK1MEeOdBunZhTRw1w" source="_So2YGq1MEeOdBunZhTRw1w" target="_So2YD61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2YEa1MEeOdBunZhTRw1w" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2YEq1MEeOdBunZhTRw1w" name="ReturnStatement@581b236" outgoing="_So2YCq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2YE61MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_So2YFK1MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_So2YC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YFa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YFq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2YF61MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1).result()" outgoing="_So2YHa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YGK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YGa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2YGq1MEeOdBunZhTRw1w" name="ReturnStatement@581b236.output" outgoing="_So2YDK1MEeOdBunZhTRw1w" incoming="_So2YHa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YG61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YHK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YHa1MEeOdBunZhTRw1w" source="_So2YF61MEeOdBunZhTRw1w" target="_So2YGq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YDa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2YCa1MEeOdBunZhTRw1w" parameter="_So2YA61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2YDq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2YC61MEeOdBunZhTRw1w" incoming="_So2YCa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YD61MEeOdBunZhTRw1w" name="Return" incoming="_So2YDK1MEeOdBunZhTRw1w" parameter="_So2YBq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2YEK1MEeOdBunZhTRw1w" name="Final" incoming="_So2YCq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2YHq1MEeOdBunZhTRw1w" name="isEmpty$method$1" specification="_So2arK1MEeOdBunZhTRw1w" group="_So2YJq1MEeOdBunZhTRw1w" node="_So2YJK1MEeOdBunZhTRw1w _So2YJa1MEeOdBunZhTRw1w _So2YJq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YH61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YIK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YIa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2YIq1MEeOdBunZhTRw1w" source="_So2YJ61MEeOdBunZhTRw1w" target="_So2YJa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YI61MEeOdBunZhTRw1w" source="_So2YLK1MEeOdBunZhTRw1w" target="_So2YJK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2YJq1MEeOdBunZhTRw1w" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2YJ61MEeOdBunZhTRw1w" name="ReturnStatement@21df71f3" outgoing="_So2YIq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2YKK1MEeOdBunZhTRw1w" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_So2YKa1MEeOdBunZhTRw1w" name="Call(isEmptyImpl$method$1).result()" outgoing="_So2YL61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YKq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YK61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2YLK1MEeOdBunZhTRw1w" name="ReturnStatement@21df71f3.output" outgoing="_So2YI61MEeOdBunZhTRw1w" incoming="_So2YL61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YLa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YLq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YL61MEeOdBunZhTRw1w" source="_So2YKa1MEeOdBunZhTRw1w" target="_So2YLK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YJK1MEeOdBunZhTRw1w" name="Return" incoming="_So2YI61MEeOdBunZhTRw1w" parameter="_So2YH61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2YJa1MEeOdBunZhTRw1w" name="Final" incoming="_So2YIq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2YMK1MEeOdBunZhTRw1w" name="notEmpty$method$1" specification="_So2asK1MEeOdBunZhTRw1w" group="_So2YOK1MEeOdBunZhTRw1w" node="_So2YNq1MEeOdBunZhTRw1w _So2YN61MEeOdBunZhTRw1w _So2YOK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YMa1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YMq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YM61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2YNK1MEeOdBunZhTRw1w" source="_So2YOa1MEeOdBunZhTRw1w" target="_So2YN61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YNa1MEeOdBunZhTRw1w" source="_So2YPq1MEeOdBunZhTRw1w" target="_So2YNq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2YOK1MEeOdBunZhTRw1w" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2YOa1MEeOdBunZhTRw1w" name="ReturnStatement@50fc1387" outgoing="_So2YNK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2YOq1MEeOdBunZhTRw1w" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_So2YO61MEeOdBunZhTRw1w" name="Call(notEmptyImpl$method$1).result()" outgoing="_So2YQa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YPK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YPa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2YPq1MEeOdBunZhTRw1w" name="ReturnStatement@50fc1387.output" outgoing="_So2YNa1MEeOdBunZhTRw1w" incoming="_So2YQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YP61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YQK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YQa1MEeOdBunZhTRw1w" source="_So2YO61MEeOdBunZhTRw1w" target="_So2YPq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YNq1MEeOdBunZhTRw1w" name="Return" incoming="_So2YNa1MEeOdBunZhTRw1w" parameter="_So2YMa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2YN61MEeOdBunZhTRw1w" name="Final" incoming="_So2YNK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2YQq1MEeOdBunZhTRw1w" name="remove$method$1" specification="_So2atK1MEeOdBunZhTRw1w" group="_So2YUa1MEeOdBunZhTRw1w" node="_So2YTa1MEeOdBunZhTRw1w _So2YTq1MEeOdBunZhTRw1w _So2YT61MEeOdBunZhTRw1w _So2YUK1MEeOdBunZhTRw1w _So2YUa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YQ61MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YRK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YRa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2YRq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YR61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YSK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YSa1MEeOdBunZhTRw1w" source="_So2YTa1MEeOdBunZhTRw1w" target="_So2YTq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2YSq1MEeOdBunZhTRw1w" source="_So2YUq1MEeOdBunZhTRw1w" target="_So2YUK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YS61MEeOdBunZhTRw1w" source="_So2YTq1MEeOdBunZhTRw1w" target="_So2YVK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YTK1MEeOdBunZhTRw1w" source="_So2YWq1MEeOdBunZhTRw1w" target="_So2YT61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2YUa1MEeOdBunZhTRw1w" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2YUq1MEeOdBunZhTRw1w" name="ReturnStatement@7efe7a98" outgoing="_So2YSq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2YU61MEeOdBunZhTRw1w" name="Call(removeImpl$method$1)">
              <argument xmi:id="_So2YVK1MEeOdBunZhTRw1w" name="Call(removeImpl$method$1).argument(element)" incoming="_So2YS61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YVa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YVq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2YV61MEeOdBunZhTRw1w" name="Call(removeImpl$method$1).result()" outgoing="_So2YXa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YWK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YWa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2YWq1MEeOdBunZhTRw1w" name="ReturnStatement@7efe7a98.output" outgoing="_So2YTK1MEeOdBunZhTRw1w" incoming="_So2YXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YW61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YXK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YXa1MEeOdBunZhTRw1w" source="_So2YV61MEeOdBunZhTRw1w" target="_So2YWq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YTa1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2YSa1MEeOdBunZhTRw1w" parameter="_So2YQ61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2YTq1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2YS61MEeOdBunZhTRw1w" incoming="_So2YSa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YT61MEeOdBunZhTRw1w" name="Return" incoming="_So2YTK1MEeOdBunZhTRw1w" parameter="_So2YRq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2YUK1MEeOdBunZhTRw1w" name="Final" incoming="_So2YSq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2YXq1MEeOdBunZhTRw1w" name="removeAll$method$1" specification="_So2au61MEeOdBunZhTRw1w" group="_So2Yba1MEeOdBunZhTRw1w" node="_So2Yaa1MEeOdBunZhTRw1w _So2Yaq1MEeOdBunZhTRw1w _So2Ya61MEeOdBunZhTRw1w _So2YbK1MEeOdBunZhTRw1w _So2Yba1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YX61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YYK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YYa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2YYq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YY61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YZK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YZa1MEeOdBunZhTRw1w" source="_So2Yaa1MEeOdBunZhTRw1w" target="_So2Yaq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2YZq1MEeOdBunZhTRw1w" source="_So2Ybq1MEeOdBunZhTRw1w" target="_So2YbK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YZ61MEeOdBunZhTRw1w" source="_So2Yaq1MEeOdBunZhTRw1w" target="_So2YcK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YaK1MEeOdBunZhTRw1w" source="_So2Ydq1MEeOdBunZhTRw1w" target="_So2Ya61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Yba1MEeOdBunZhTRw1w" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Ybq1MEeOdBunZhTRw1w" name="ReturnStatement@3aa101a7" outgoing="_So2YZq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2Yb61MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_So2YcK1MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_So2YZ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yca1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Ycq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2Yc61MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1).result()" outgoing="_So2Yea1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YdK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yda1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Ydq1MEeOdBunZhTRw1w" name="ReturnStatement@3aa101a7.output" outgoing="_So2YaK1MEeOdBunZhTRw1w" incoming="_So2Yea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yd61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YeK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yea1MEeOdBunZhTRw1w" source="_So2Yc61MEeOdBunZhTRw1w" target="_So2Ydq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Yaa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2YZa1MEeOdBunZhTRw1w" parameter="_So2YX61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Yaq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2YZ61MEeOdBunZhTRw1w" incoming="_So2YZa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Ya61MEeOdBunZhTRw1w" name="Return" incoming="_So2YaK1MEeOdBunZhTRw1w" parameter="_So2YYq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2YbK1MEeOdBunZhTRw1w" name="Final" incoming="_So2YZq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Yeq1MEeOdBunZhTRw1w" name="removeAt$method$1" specification="_So2awq1MEeOdBunZhTRw1w" group="_So2Yia1MEeOdBunZhTRw1w" node="_So2Yha1MEeOdBunZhTRw1w _So2Yhq1MEeOdBunZhTRw1w _So2Yh61MEeOdBunZhTRw1w _So2YiK1MEeOdBunZhTRw1w _So2Yia1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2Ye61MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YfK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yfa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Yfq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yf61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YgK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yga1MEeOdBunZhTRw1w" source="_So2Yha1MEeOdBunZhTRw1w" target="_So2Yhq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2Ygq1MEeOdBunZhTRw1w" source="_So2Yiq1MEeOdBunZhTRw1w" target="_So2YiK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yg61MEeOdBunZhTRw1w" source="_So2Yhq1MEeOdBunZhTRw1w" target="_So2YjK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YhK1MEeOdBunZhTRw1w" source="_So2Ypq1MEeOdBunZhTRw1w" target="_So2Yh61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Yia1MEeOdBunZhTRw1w" name="Body(removeAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Yiq1MEeOdBunZhTRw1w" name="ReturnStatement@66f40ddf" outgoing="_So2Ygq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2Yi61MEeOdBunZhTRw1w" name="Call(removeAtImpl$method$1)">
              <argument xmi:id="_So2YjK1MEeOdBunZhTRw1w" name="Call(removeAtImpl$method$1).argument(index)" incoming="_So2Yg61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yja1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yjq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2Yj61MEeOdBunZhTRw1w" name="Call(removeAtImpl$method$1).result()" outgoing="_So2Yqa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YkK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yka1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-removeAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So2Ykq1MEeOdBunZhTRw1w" name="CastExpression@1b082505" mode="parallel" outputElement="_So2Ypa1MEeOdBunZhTRw1w" inputElement="_So2YpK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So2Yk61MEeOdBunZhTRw1w" name="Merge(CastExpression@1b082505.operand)" outgoing="_So2Yo61MEeOdBunZhTRw1w" incoming="_So2YoK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2YlK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_So2Yla1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2Yna1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Ylq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yl61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2YmK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2Yn61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yma1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Ymq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So2Ym61MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2Yna1MEeOdBunZhTRw1w _So2Ynq1MEeOdBunZhTRw1w" incoming="_So2Yoq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So2YnK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2YoK1MEeOdBunZhTRw1w" incoming="_So2Ynq1MEeOdBunZhTRw1w _So2Yn61MEeOdBunZhTRw1w" decisionInputFlow="_So2Yn61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yna1MEeOdBunZhTRw1w" source="_So2Ym61MEeOdBunZhTRw1w" target="_So2Yla1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Ynq1MEeOdBunZhTRw1w" source="_So2Ym61MEeOdBunZhTRw1w" target="_So2YnK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yn61MEeOdBunZhTRw1w" source="_So2YmK1MEeOdBunZhTRw1w" target="_So2YnK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YoK1MEeOdBunZhTRw1w" source="_So2YnK1MEeOdBunZhTRw1w" target="_So2Yk61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2Yoa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yoq1MEeOdBunZhTRw1w" source="_So2YpK1MEeOdBunZhTRw1w" target="_So2Ym61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yo61MEeOdBunZhTRw1w" source="_So2Yk61MEeOdBunZhTRw1w" target="_So2Ypa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2YpK1MEeOdBunZhTRw1w" name="CastExpression@1b082505.inputElement" outgoing="_So2Yoq1MEeOdBunZhTRw1w" incoming="_So2Yqa1MEeOdBunZhTRw1w" regionAsInput="_So2Ykq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2Ypa1MEeOdBunZhTRw1w" name="CastExpression@1b082505.outputElement" outgoing="_So2Yqq1MEeOdBunZhTRw1w" incoming="_So2Yo61MEeOdBunZhTRw1w" regionAsOutput="_So2Ykq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Ypq1MEeOdBunZhTRw1w" name="ReturnStatement@66f40ddf.output" outgoing="_So2YhK1MEeOdBunZhTRw1w" incoming="_So2Yqq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yp61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2YqK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yqa1MEeOdBunZhTRw1w" source="_So2Yj61MEeOdBunZhTRw1w" target="_So2YpK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yqq1MEeOdBunZhTRw1w" source="_So2Ypa1MEeOdBunZhTRw1w" target="_So2Ypq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Yha1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So2Yga1MEeOdBunZhTRw1w" parameter="_So2Ye61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Yhq1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So2Yg61MEeOdBunZhTRw1w" incoming="_So2Yga1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Yh61MEeOdBunZhTRw1w" name="Return" incoming="_So2YhK1MEeOdBunZhTRw1w" parameter="_So2Yfq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2YiK1MEeOdBunZhTRw1w" name="Final" incoming="_So2Ygq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Yq61MEeOdBunZhTRw1w" name="removeOne$method$1" specification="_So2aya1MEeOdBunZhTRw1w" group="_So2Yuq1MEeOdBunZhTRw1w" node="_So2Ytq1MEeOdBunZhTRw1w _So2Yt61MEeOdBunZhTRw1w _So2YuK1MEeOdBunZhTRw1w _So2Yua1MEeOdBunZhTRw1w _So2Yuq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YrK1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yra1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yrq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Yr61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YsK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Ysa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Ysq1MEeOdBunZhTRw1w" source="_So2Ytq1MEeOdBunZhTRw1w" target="_So2Yt61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2Ys61MEeOdBunZhTRw1w" source="_So2Yu61MEeOdBunZhTRw1w" target="_So2Yua1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2YtK1MEeOdBunZhTRw1w" source="_So2Yt61MEeOdBunZhTRw1w" target="_So2Yva1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yta1MEeOdBunZhTRw1w" source="_So2Yw61MEeOdBunZhTRw1w" target="_So2YuK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Yuq1MEeOdBunZhTRw1w" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Yu61MEeOdBunZhTRw1w" name="ReturnStatement@6e88a13e" outgoing="_So2Ys61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2YvK1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_So2Yva1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1).argument(element)" incoming="_So2YtK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yvq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yv61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2YwK1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1).result()" outgoing="_So2Yxq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Ywa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Ywq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Yw61MEeOdBunZhTRw1w" name="ReturnStatement@6e88a13e.output" outgoing="_So2Yta1MEeOdBunZhTRw1w" incoming="_So2Yxq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YxK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yxa1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Yxq1MEeOdBunZhTRw1w" source="_So2YwK1MEeOdBunZhTRw1w" target="_So2Yw61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Ytq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2Ysq1MEeOdBunZhTRw1w" parameter="_So2YrK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Yt61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2YtK1MEeOdBunZhTRw1w" incoming="_So2Ysq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2YuK1MEeOdBunZhTRw1w" name="Return" incoming="_So2Yta1MEeOdBunZhTRw1w" parameter="_So2Yr61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2Yua1MEeOdBunZhTRw1w" name="Final" incoming="_So2Ys61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Yx61MEeOdBunZhTRw1w" name="replace$method$1" specification="_So2a0K1MEeOdBunZhTRw1w" group="_So2Y3a1MEeOdBunZhTRw1w" node="_So2Y161MEeOdBunZhTRw1w _So2Y2K1MEeOdBunZhTRw1w _So2Y2a1MEeOdBunZhTRw1w _So2Y2q1MEeOdBunZhTRw1w _So2Y261MEeOdBunZhTRw1w _So2Y3K1MEeOdBunZhTRw1w _So2Y3a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2YyK1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yya1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yyq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Yy61MEeOdBunZhTRw1w" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2YzK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Yza1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Yzq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Yz61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y0K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y0a1MEeOdBunZhTRw1w" source="_So2Y161MEeOdBunZhTRw1w" target="_So2Y2K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y0q1MEeOdBunZhTRw1w" source="_So2Y2a1MEeOdBunZhTRw1w" target="_So2Y2q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2Y061MEeOdBunZhTRw1w" source="_So2Y3q1MEeOdBunZhTRw1w" target="_So2Y3K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y1K1MEeOdBunZhTRw1w" source="_So2Y2K1MEeOdBunZhTRw1w" target="_So2Y4K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y1a1MEeOdBunZhTRw1w" source="_So2Y2q1MEeOdBunZhTRw1w" target="_So2Y461MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y1q1MEeOdBunZhTRw1w" source="_So2Y6a1MEeOdBunZhTRw1w" target="_So2Y261MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Y3a1MEeOdBunZhTRw1w" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Y3q1MEeOdBunZhTRw1w" name="ReturnStatement@41e5484b" outgoing="_So2Y061MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2Y361MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_So2Y4K1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).argument(element)" incoming="_So2Y1K1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y4a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y4q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So2Y461MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_So2Y1a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y5K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y5a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2Y5q1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).result()" outgoing="_So2Y7K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y561MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y6K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Y6a1MEeOdBunZhTRw1w" name="ReturnStatement@41e5484b.output" outgoing="_So2Y1q1MEeOdBunZhTRw1w" incoming="_So2Y7K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y6q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y661MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y7K1MEeOdBunZhTRw1w" source="_So2Y5q1MEeOdBunZhTRw1w" target="_So2Y6a1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Y161MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2Y0a1MEeOdBunZhTRw1w" parameter="_So2YyK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Y2K1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2Y1K1MEeOdBunZhTRw1w" incoming="_So2Y0a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Y2a1MEeOdBunZhTRw1w" name="Input(newElement)" outgoing="_So2Y0q1MEeOdBunZhTRw1w" parameter="_So2Yy61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Y2q1MEeOdBunZhTRw1w" name="Fork(newElement)" outgoing="_So2Y1a1MEeOdBunZhTRw1w" incoming="_So2Y0q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Y261MEeOdBunZhTRw1w" name="Return" incoming="_So2Y1q1MEeOdBunZhTRw1w" parameter="_So2Yzq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2Y3K1MEeOdBunZhTRw1w" name="Final" incoming="_So2Y061MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Y7a1MEeOdBunZhTRw1w" name="replaceAt$method$1" specification="_So2a2q1MEeOdBunZhTRw1w" group="_So2ZA61MEeOdBunZhTRw1w" node="_So2Y_a1MEeOdBunZhTRw1w _So2Y_q1MEeOdBunZhTRw1w _So2Y_61MEeOdBunZhTRw1w _So2ZAK1MEeOdBunZhTRw1w _So2ZAa1MEeOdBunZhTRw1w _So2ZAq1MEeOdBunZhTRw1w _So2ZA61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2Y7q1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y761MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y8K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Y8a1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y8q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y861MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Y9K1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Y9a1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Y9q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y961MEeOdBunZhTRw1w" source="_So2Y_a1MEeOdBunZhTRw1w" target="_So2Y_q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y-K1MEeOdBunZhTRw1w" source="_So2Y_61MEeOdBunZhTRw1w" target="_So2ZAK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2Y-a1MEeOdBunZhTRw1w" source="_So2ZBK1MEeOdBunZhTRw1w" target="_So2ZAq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y-q1MEeOdBunZhTRw1w" source="_So2Y_q1MEeOdBunZhTRw1w" target="_So2ZBq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y-61MEeOdBunZhTRw1w" source="_So2ZAK1MEeOdBunZhTRw1w" target="_So2ZCa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Y_K1MEeOdBunZhTRw1w" source="_So2ZI61MEeOdBunZhTRw1w" target="_So2ZAa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2ZA61MEeOdBunZhTRw1w" name="Body(replaceAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2ZBK1MEeOdBunZhTRw1w" name="ReturnStatement@1197c2dd" outgoing="_So2Y-a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2ZBa1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1)">
              <argument xmi:id="_So2ZBq1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1).argument(index)" incoming="_So2Y-q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZB61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZCK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So2ZCa1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1).argument(element)" incoming="_So2Y-61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZCq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZC61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2ZDK1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1).result()" outgoing="_So2ZJq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZDa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZDq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-replaceAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So2ZD61MEeOdBunZhTRw1w" name="CastExpression@4f3ed32a" mode="parallel" outputElement="_So2ZIq1MEeOdBunZhTRw1w" inputElement="_So2ZIa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So2ZEK1MEeOdBunZhTRw1w" name="Merge(CastExpression@4f3ed32a.operand)" outgoing="_So2ZIK1MEeOdBunZhTRw1w" incoming="_So2ZHa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2ZEa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_So2ZEq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2ZGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZE61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZFK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2ZFa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2ZHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZFq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZF61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So2ZGK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2ZGq1MEeOdBunZhTRw1w _So2ZG61MEeOdBunZhTRw1w" incoming="_So2ZH61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So2ZGa1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2ZHa1MEeOdBunZhTRw1w" incoming="_So2ZG61MEeOdBunZhTRw1w _So2ZHK1MEeOdBunZhTRw1w" decisionInputFlow="_So2ZHK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZGq1MEeOdBunZhTRw1w" source="_So2ZGK1MEeOdBunZhTRw1w" target="_So2ZEq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZG61MEeOdBunZhTRw1w" source="_So2ZGK1MEeOdBunZhTRw1w" target="_So2ZGa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZHK1MEeOdBunZhTRw1w" source="_So2ZFa1MEeOdBunZhTRw1w" target="_So2ZGa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZHa1MEeOdBunZhTRw1w" source="_So2ZGa1MEeOdBunZhTRw1w" target="_So2ZEK1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2ZHq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZH61MEeOdBunZhTRw1w" source="_So2ZIa1MEeOdBunZhTRw1w" target="_So2ZGK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZIK1MEeOdBunZhTRw1w" source="_So2ZEK1MEeOdBunZhTRw1w" target="_So2ZIq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2ZIa1MEeOdBunZhTRw1w" name="CastExpression@4f3ed32a.inputElement" outgoing="_So2ZH61MEeOdBunZhTRw1w" incoming="_So2ZJq1MEeOdBunZhTRw1w" regionAsInput="_So2ZD61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2ZIq1MEeOdBunZhTRw1w" name="CastExpression@4f3ed32a.outputElement" outgoing="_So2ZJ61MEeOdBunZhTRw1w" incoming="_So2ZIK1MEeOdBunZhTRw1w" regionAsOutput="_So2ZD61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
            <structuredNodeOutput xmi:id="_So2ZI61MEeOdBunZhTRw1w" name="ReturnStatement@1197c2dd.output" outgoing="_So2Y_K1MEeOdBunZhTRw1w" incoming="_So2ZJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZJK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZJa1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZJq1MEeOdBunZhTRw1w" source="_So2ZDK1MEeOdBunZhTRw1w" target="_So2ZIa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZJ61MEeOdBunZhTRw1w" source="_So2ZIq1MEeOdBunZhTRw1w" target="_So2ZI61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Y_a1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So2Y961MEeOdBunZhTRw1w" parameter="_So2Y7q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Y_q1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So2Y-q1MEeOdBunZhTRw1w" incoming="_So2Y961MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Y_61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2Y-K1MEeOdBunZhTRw1w" parameter="_So2Y8a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2ZAK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2Y-61MEeOdBunZhTRw1w" incoming="_So2Y-K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZAa1MEeOdBunZhTRw1w" name="Return" incoming="_So2Y_K1MEeOdBunZhTRw1w" parameter="_So2Y9K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2ZAq1MEeOdBunZhTRw1w" name="Final" incoming="_So2Y-a1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2ZKK1MEeOdBunZhTRw1w" name="replaceOne$method$1" specification="_So2a5K1MEeOdBunZhTRw1w" group="_So2ZPq1MEeOdBunZhTRw1w" node="_So2ZOK1MEeOdBunZhTRw1w _So2ZOa1MEeOdBunZhTRw1w _So2ZOq1MEeOdBunZhTRw1w _So2ZO61MEeOdBunZhTRw1w _So2ZPK1MEeOdBunZhTRw1w _So2ZPa1MEeOdBunZhTRw1w _So2ZPq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ZKa1MEeOdBunZhTRw1w" name="element">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZKq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZK61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2ZLK1MEeOdBunZhTRw1w" name="newElement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZLa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZLq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2ZL61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZMK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZMa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZMq1MEeOdBunZhTRw1w" source="_So2ZOK1MEeOdBunZhTRw1w" target="_So2ZOa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZM61MEeOdBunZhTRw1w" source="_So2ZOq1MEeOdBunZhTRw1w" target="_So2ZO61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2ZNK1MEeOdBunZhTRw1w" source="_So2ZP61MEeOdBunZhTRw1w" target="_So2ZPa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZNa1MEeOdBunZhTRw1w" source="_So2ZOa1MEeOdBunZhTRw1w" target="_So2ZQa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZNq1MEeOdBunZhTRw1w" source="_So2ZO61MEeOdBunZhTRw1w" target="_So2ZRK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZN61MEeOdBunZhTRw1w" source="_So2ZSq1MEeOdBunZhTRw1w" target="_So2ZPK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2ZPq1MEeOdBunZhTRw1w" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2ZP61MEeOdBunZhTRw1w" name="ReturnStatement@792a89f4" outgoing="_So2ZNK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2ZQK1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_So2ZQa1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_So2ZNa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZQq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZQ61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So2ZRK1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_So2ZNq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZRa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZRq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2ZR61MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).result()" outgoing="_So2ZTa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZSK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZSa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2ZSq1MEeOdBunZhTRw1w" name="ReturnStatement@792a89f4.output" outgoing="_So2ZN61MEeOdBunZhTRw1w" incoming="_So2ZTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZS61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZTK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZTa1MEeOdBunZhTRw1w" source="_So2ZR61MEeOdBunZhTRw1w" target="_So2ZSq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZOK1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2ZMq1MEeOdBunZhTRw1w" parameter="_So2ZKa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2ZOa1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2ZNa1MEeOdBunZhTRw1w" incoming="_So2ZMq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZOq1MEeOdBunZhTRw1w" name="Input(newElement)" outgoing="_So2ZM61MEeOdBunZhTRw1w" parameter="_So2ZLK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2ZO61MEeOdBunZhTRw1w" name="Fork(newElement)" outgoing="_So2ZNq1MEeOdBunZhTRw1w" incoming="_So2ZM61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZPK1MEeOdBunZhTRw1w" name="Return" incoming="_So2ZN61MEeOdBunZhTRw1w" parameter="_So2ZL61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2ZPa1MEeOdBunZhTRw1w" name="Final" incoming="_So2ZNK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2ZTq1MEeOdBunZhTRw1w" name="retainAll$method$1" specification="_So2a7q1MEeOdBunZhTRw1w" group="_So2ZXa1MEeOdBunZhTRw1w" node="_So2ZWa1MEeOdBunZhTRw1w _So2ZWq1MEeOdBunZhTRw1w _So2ZW61MEeOdBunZhTRw1w _So2ZXK1MEeOdBunZhTRw1w _So2ZXa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ZT61MEeOdBunZhTRw1w" name="seq" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZUK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZUa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2ZUq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZU61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZVK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZVa1MEeOdBunZhTRw1w" source="_So2ZWa1MEeOdBunZhTRw1w" target="_So2ZWq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2ZVq1MEeOdBunZhTRw1w" source="_So2ZXq1MEeOdBunZhTRw1w" target="_So2ZXK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZV61MEeOdBunZhTRw1w" source="_So2ZWq1MEeOdBunZhTRw1w" target="_So2ZYK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZWK1MEeOdBunZhTRw1w" source="_So2ZZq1MEeOdBunZhTRw1w" target="_So2ZW61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2ZXa1MEeOdBunZhTRw1w" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2ZXq1MEeOdBunZhTRw1w" name="ReturnStatement@7555d4d6" outgoing="_So2ZVq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2ZX61MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_So2ZYK1MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_So2ZV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZYa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZYq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2ZY61MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1).result()" outgoing="_So2Zaa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZZK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZZa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2ZZq1MEeOdBunZhTRw1w" name="ReturnStatement@7555d4d6.output" outgoing="_So2ZWK1MEeOdBunZhTRw1w" incoming="_So2Zaa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZZ61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZaK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zaa1MEeOdBunZhTRw1w" source="_So2ZY61MEeOdBunZhTRw1w" target="_So2ZZq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZWa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2ZVa1MEeOdBunZhTRw1w" parameter="_So2ZT61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2ZWq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2ZV61MEeOdBunZhTRw1w" incoming="_So2ZVa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZW61MEeOdBunZhTRw1w" name="Return" incoming="_So2ZWK1MEeOdBunZhTRw1w" parameter="_So2ZUq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2ZXK1MEeOdBunZhTRw1w" name="Final" incoming="_So2ZVq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Zaq1MEeOdBunZhTRw1w" name="size$method$1" specification="_So2a9a1MEeOdBunZhTRw1w" group="_So2Zcq1MEeOdBunZhTRw1w" node="_So2ZcK1MEeOdBunZhTRw1w _So2Zca1MEeOdBunZhTRw1w _So2Zcq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2Za61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZbK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zba1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2Zbq1MEeOdBunZhTRw1w" source="_So2Zc61MEeOdBunZhTRw1w" target="_So2Zca1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zb61MEeOdBunZhTRw1w" source="_So2ZeK1MEeOdBunZhTRw1w" target="_So2ZcK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Zcq1MEeOdBunZhTRw1w" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Zc61MEeOdBunZhTRw1w" name="ReturnStatement@194cb4d6" outgoing="_So2Zbq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2ZdK1MEeOdBunZhTRw1w" name="Call(sizeImpl$method$1)">
              <result xmi:id="_So2Zda1MEeOdBunZhTRw1w" name="Call(sizeImpl$method$1).result()" outgoing="_So2Ze61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zdq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zd61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2ZeK1MEeOdBunZhTRw1w" name="ReturnStatement@194cb4d6.output" outgoing="_So2Zb61MEeOdBunZhTRw1w" incoming="_So2Ze61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zea1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zeq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Ze61MEeOdBunZhTRw1w" source="_So2Zda1MEeOdBunZhTRw1w" target="_So2ZeK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZcK1MEeOdBunZhTRw1w" name="Return" incoming="_So2Zb61MEeOdBunZhTRw1w" parameter="_So2Za61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2Zca1MEeOdBunZhTRw1w" name="Final" incoming="_So2Zbq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2ZfK1MEeOdBunZhTRw1w" name="subList$method$1" specification="_So2a-a1MEeOdBunZhTRw1w" group="_So2Zkq1MEeOdBunZhTRw1w" node="_So2ZjK1MEeOdBunZhTRw1w _So2Zja1MEeOdBunZhTRw1w _So2Zjq1MEeOdBunZhTRw1w _So2Zj61MEeOdBunZhTRw1w _So2ZkK1MEeOdBunZhTRw1w _So2Zka1MEeOdBunZhTRw1w _So2Zkq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2Zfa1MEeOdBunZhTRw1w" name="lower">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zfq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zf61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2ZgK1MEeOdBunZhTRw1w" name="upper">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zga1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zgq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2Zg61MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZhK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zha1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zhq1MEeOdBunZhTRw1w" source="_So2ZjK1MEeOdBunZhTRw1w" target="_So2Zja1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zh61MEeOdBunZhTRw1w" source="_So2Zjq1MEeOdBunZhTRw1w" target="_So2Zj61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2ZiK1MEeOdBunZhTRw1w" source="_So2Zk61MEeOdBunZhTRw1w" target="_So2Zka1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zia1MEeOdBunZhTRw1w" source="_So2Zja1MEeOdBunZhTRw1w" target="_So2ZpK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Ziq1MEeOdBunZhTRw1w" source="_So2Zj61MEeOdBunZhTRw1w" target="_So2Zp61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zi61MEeOdBunZhTRw1w" source="_So2Zwq1MEeOdBunZhTRw1w" target="_So2ZkK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Zkq1MEeOdBunZhTRw1w" name="Body(subList$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Zk61MEeOdBunZhTRw1w" name="ReturnStatement@1792a0c1" outgoing="_So2ZiK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So2ZlK1MEeOdBunZhTRw1w" name="Call(List)" incoming="_So2Zx61MEeOdBunZhTRw1w" operation="_So2aQa1MEeOdBunZhTRw1w">
              <argument xmi:id="_So2Zla1MEeOdBunZhTRw1w" name="Call(List).argument(seq)" incoming="_So2Zxq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zlq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zl61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2ZmK1MEeOdBunZhTRw1w" name="Call(List).result()" outgoing="_So2ZyK1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zma1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zmq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <target xmi:id="_So2Zm61MEeOdBunZhTRw1w" name="Call(List).target" incoming="_So2Zxa1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZnK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zna1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_So2Znq1MEeOdBunZhTRw1w" name="Create($$Impl$List__Impl$List$T__)" classifier="_So1y161MEeOdBunZhTRw1w">
              <result xmi:id="_So2Zn61MEeOdBunZhTRw1w" name="Create($$List__Impl$List$T__).result" outgoing="_So2Zxa1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZoK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zoa1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Zoq1MEeOdBunZhTRw1w" name="Tuple@51575d48" outgoing="_So2Zx61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2Zo61MEeOdBunZhTRw1w" name="Call(subListImpl$method$1)">
                <argument xmi:id="_So2ZpK1MEeOdBunZhTRw1w" name="Call(subListImpl$method$1).argument(lower)" incoming="_So2Zia1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zpa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zpq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_So2Zp61MEeOdBunZhTRw1w" name="Call(subListImpl$method$1).argument(upper)" incoming="_So2Ziq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zqa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So2Zqq1MEeOdBunZhTRw1w" name="Call(subListImpl$method$1).result()" outgoing="_So2Zwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zq61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZrK1MEeOdBunZhTRw1w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-subListImplmethod1"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_So2Zra1MEeOdBunZhTRw1w" name="CastExpression@18fde079" mode="parallel" outputElement="_So2ZwK1MEeOdBunZhTRw1w" inputElement="_So2Zv61MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_So2Zrq1MEeOdBunZhTRw1w" name="Merge(CastExpression@18fde079.operand)" outgoing="_So2Zvq1MEeOdBunZhTRw1w" incoming="_So2Zu61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2Zr61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_So2ZsK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2ZuK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zsa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zsq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_So2Zs61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2Zuq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ZtK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Zta1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_So2Ztq1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2ZuK1MEeOdBunZhTRw1w _So2Zua1MEeOdBunZhTRw1w" incoming="_So2Zva1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_So2Zt61MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2Zu61MEeOdBunZhTRw1w" incoming="_So2Zua1MEeOdBunZhTRw1w _So2Zuq1MEeOdBunZhTRw1w" decisionInputFlow="_So2Zuq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZuK1MEeOdBunZhTRw1w" source="_So2Ztq1MEeOdBunZhTRw1w" target="_So2ZsK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zua1MEeOdBunZhTRw1w" source="_So2Ztq1MEeOdBunZhTRw1w" target="_So2Zt61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zuq1MEeOdBunZhTRw1w" source="_So2Zs61MEeOdBunZhTRw1w" target="_So2Zt61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zu61MEeOdBunZhTRw1w" source="_So2Zt61MEeOdBunZhTRw1w" target="_So2Zrq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2ZvK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zva1MEeOdBunZhTRw1w" source="_So2Zv61MEeOdBunZhTRw1w" target="_So2Ztq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zvq1MEeOdBunZhTRw1w" source="_So2Zrq1MEeOdBunZhTRw1w" target="_So2ZwK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_So2Zv61MEeOdBunZhTRw1w" name="CastExpression@18fde079.inputElement" outgoing="_So2Zva1MEeOdBunZhTRw1w" incoming="_So2Zwa1MEeOdBunZhTRw1w" regionAsInput="_So2Zra1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_So2ZwK1MEeOdBunZhTRw1w" name="CastExpression@18fde079.outputElement" outgoing="_So2Zxq1MEeOdBunZhTRw1w" incoming="_So2Zvq1MEeOdBunZhTRw1w" regionAsOutput="_So2Zra1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zwa1MEeOdBunZhTRw1w" source="_So2Zqq1MEeOdBunZhTRw1w" target="_So2Zv61MEeOdBunZhTRw1w"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Zwq1MEeOdBunZhTRw1w" name="ReturnStatement@1792a0c1.output" outgoing="_So2Zi61MEeOdBunZhTRw1w" incoming="_So2ZyK1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zw61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZxK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zxa1MEeOdBunZhTRw1w" source="_So2Zn61MEeOdBunZhTRw1w" target="_So2Zm61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zxq1MEeOdBunZhTRw1w" source="_So2ZwK1MEeOdBunZhTRw1w" target="_So2Zla1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So2Zx61MEeOdBunZhTRw1w" source="_So2Zoq1MEeOdBunZhTRw1w" target="_So2ZlK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2ZyK1MEeOdBunZhTRw1w" source="_So2ZmK1MEeOdBunZhTRw1w" target="_So2Zwq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZjK1MEeOdBunZhTRw1w" name="Input(lower)" outgoing="_So2Zhq1MEeOdBunZhTRw1w" parameter="_So2Zfa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Zja1MEeOdBunZhTRw1w" name="Fork(lower)" outgoing="_So2Zia1MEeOdBunZhTRw1w" incoming="_So2Zhq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Zjq1MEeOdBunZhTRw1w" name="Input(upper)" outgoing="_So2Zh61MEeOdBunZhTRw1w" parameter="_So2ZgK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2Zj61MEeOdBunZhTRw1w" name="Fork(upper)" outgoing="_So2Ziq1MEeOdBunZhTRw1w" incoming="_So2Zh61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2ZkK1MEeOdBunZhTRw1w" name="Return" incoming="_So2Zi61MEeOdBunZhTRw1w" parameter="_So2Zg61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2Zka1MEeOdBunZhTRw1w" name="Final" incoming="_So2ZiK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Zya1MEeOdBunZhTRw1w" name="toSequence$method$1" specification="_So2bA61MEeOdBunZhTRw1w" group="_So2Z0a1MEeOdBunZhTRw1w" node="_So2Zz61MEeOdBunZhTRw1w _So2Z0K1MEeOdBunZhTRw1w _So2Z0a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2Zyq1MEeOdBunZhTRw1w" name="" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Zy61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ZzK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2Zza1MEeOdBunZhTRw1w" source="_So2Z0q1MEeOdBunZhTRw1w" target="_So2Z0K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Zzq1MEeOdBunZhTRw1w" source="_So2Z8q1MEeOdBunZhTRw1w" target="_So2Zz61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2Z0a1MEeOdBunZhTRw1w" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Z0q1MEeOdBunZhTRw1w" name="ReturnStatement@56b2d6bd" outgoing="_So2Zza1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So2Z061MEeOdBunZhTRw1w" name="Call(getContent)">
              <result xmi:id="_So2Z1K1MEeOdBunZhTRw1w" name="Call(getContent).result()" outgoing="_So2Z9q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z1a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z1q1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-getContent"/>
              <target xmi:id="_So2Z161MEeOdBunZhTRw1w" name="Call(getContent).target" incoming="_So2Z9a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z2K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z2a1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_So2Z2q1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_So2Z261MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So2Z9a1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z3K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z3a1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So2Z3q1MEeOdBunZhTRw1w" name="CastExpression@1e49f598" mode="parallel" outputElement="_So2Z8a1MEeOdBunZhTRw1w" inputElement="_So2Z8K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So2Z361MEeOdBunZhTRw1w" name="Merge(CastExpression@1e49f598.operand)" outgoing="_So2Z761MEeOdBunZhTRw1w" incoming="_So2Z7K1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2Z4K1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_So2Z4a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2Z6a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z4q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z461MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2Z5K1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2Z661MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z5a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z5q1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So2Z561MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2Z6a1MEeOdBunZhTRw1w _So2Z6q1MEeOdBunZhTRw1w" incoming="_So2Z7q1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So2Z6K1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2Z7K1MEeOdBunZhTRw1w" incoming="_So2Z6q1MEeOdBunZhTRw1w _So2Z661MEeOdBunZhTRw1w" decisionInputFlow="_So2Z661MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z6a1MEeOdBunZhTRw1w" source="_So2Z561MEeOdBunZhTRw1w" target="_So2Z4a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z6q1MEeOdBunZhTRw1w" source="_So2Z561MEeOdBunZhTRw1w" target="_So2Z6K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z661MEeOdBunZhTRw1w" source="_So2Z5K1MEeOdBunZhTRw1w" target="_So2Z6K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z7K1MEeOdBunZhTRw1w" source="_So2Z6K1MEeOdBunZhTRw1w" target="_So2Z361MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2Z7a1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z7q1MEeOdBunZhTRw1w" source="_So2Z8K1MEeOdBunZhTRw1w" target="_So2Z561MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z761MEeOdBunZhTRw1w" source="_So2Z361MEeOdBunZhTRw1w" target="_So2Z8a1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2Z8K1MEeOdBunZhTRw1w" name="CastExpression@1e49f598.inputElement" outgoing="_So2Z7q1MEeOdBunZhTRw1w" incoming="_So2Z9q1MEeOdBunZhTRw1w" regionAsInput="_So2Z3q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2Z8a1MEeOdBunZhTRw1w" name="CastExpression@1e49f598.outputElement" outgoing="_So2Z961MEeOdBunZhTRw1w" incoming="_So2Z761MEeOdBunZhTRw1w" regionAsOutput="_So2Z3q1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </node>
            <structuredNodeOutput xmi:id="_So2Z8q1MEeOdBunZhTRw1w" name="ReturnStatement@56b2d6bd.output" outgoing="_So2Zzq1MEeOdBunZhTRw1w" incoming="_So2Z961MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z861MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z9K1MEeOdBunZhTRw1w" value="*"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z9a1MEeOdBunZhTRw1w" source="_So2Z261MEeOdBunZhTRw1w" target="_So2Z161MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z9q1MEeOdBunZhTRw1w" source="_So2Z1K1MEeOdBunZhTRw1w" target="_So2Z8K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2Z961MEeOdBunZhTRw1w" source="_So2Z8a1MEeOdBunZhTRw1w" target="_So2Z8q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2Zz61MEeOdBunZhTRw1w" name="Return" incoming="_So2Zzq1MEeOdBunZhTRw1w" parameter="_So2Zyq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2Z0K1MEeOdBunZhTRw1w" name="Final" incoming="_So2Zza1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2Z-K1MEeOdBunZhTRw1w" name="List$initialization$1" specification="_So2aQK1MEeOdBunZhTRw1w" group="_So2Z-a1MEeOdBunZhTRw1w" node="_So2Z-a1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So2Z-a1MEeOdBunZhTRw1w" name="Body(List$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So2Z-q1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So2Z-61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So2aNa1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2Z_K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2Z_a1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So2Z_q1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So2aNq1MEeOdBunZhTRw1w _So2aN61MEeOdBunZhTRw1w _So2aOK1MEeOdBunZhTRw1w" incoming="_So2aNa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2Z_61MEeOdBunZhTRw1w" name="Initialization" incoming="_So2aPq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So2aAK1MEeOdBunZhTRw1w" name="Call(ListImpl$initialization$1)" outgoing="_So2aFa1MEeOdBunZhTRw1w">
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplinitialization1.1"/>
              <target xmi:id="_So2aAa1MEeOdBunZhTRw1w" name="Call(ListImpl$initialization$1).target" incoming="_So2aNq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aAq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aA61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2aBK1MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_So2aFa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So2aBa1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_So2aBq1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So2aFK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aB61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aCK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_So2aCa1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_So2aCq1MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1)" structuralFeature="_So1y2q1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_So2aC61MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1).object" incoming="_So2aN61MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aDK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aDa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2aDq1MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1).result" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aD61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aEK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_So2aEa1MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1).value" incoming="_So2aFK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aEq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aE61MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aFK1MEeOdBunZhTRw1w" source="_So2aBq1MEeOdBunZhTRw1w" target="_So2aEa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So2aFa1MEeOdBunZhTRw1w" source="_So2aAK1MEeOdBunZhTRw1w" target="_So2aBK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So2aFq1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1)" structuralFeature="_So1y2q1MEeOdBunZhTRw1w">
            <object xmi:id="_So2aF61MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).object" incoming="_So2aOK1MEeOdBunZhTRw1w" type="_So1y161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aGK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aGa1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So2aGq1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).result" outgoing="_So2aOa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aG61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aHK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2aHa1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So2aHq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So2aOa1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aH61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aIK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So2aIa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So2aOq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aIq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aI61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So2aJK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So2aJa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So2aO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aJq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aJ61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So2aKK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So2aKa1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So2aKq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So2aOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aK61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aLK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So2aLa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So2aPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aLq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aL61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So2aMK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So2aO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aMa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aMq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So2aM61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So2aPK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So2aNK1MEeOdBunZhTRw1w" name="Decision(Test(List$initializationFlag$1))" outgoing="_So2aPq1MEeOdBunZhTRw1w" incoming="_So2aPK1MEeOdBunZhTRw1w _So2aPa1MEeOdBunZhTRw1w" decisionInputFlow="_So2aPa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aNa1MEeOdBunZhTRw1w" source="_So2Z-61MEeOdBunZhTRw1w" target="_So2Z_q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aNq1MEeOdBunZhTRw1w" source="_So2Z_q1MEeOdBunZhTRw1w" target="_So2aAa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aN61MEeOdBunZhTRw1w" source="_So2Z_q1MEeOdBunZhTRw1w" target="_So2aC61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aOK1MEeOdBunZhTRw1w" source="_So2Z_q1MEeOdBunZhTRw1w" target="_So2aF61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aOa1MEeOdBunZhTRw1w" source="_So2aGq1MEeOdBunZhTRw1w" target="_So2aHq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aOq1MEeOdBunZhTRw1w" source="_So2aIa1MEeOdBunZhTRw1w" target="_So2aKq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aO61MEeOdBunZhTRw1w" source="_So2aJa1MEeOdBunZhTRw1w" target="_So2aMK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So2aPK1MEeOdBunZhTRw1w" source="_So2aM61MEeOdBunZhTRw1w" target="_So2aNK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2aPa1MEeOdBunZhTRw1w" source="_So2aLa1MEeOdBunZhTRw1w" target="_So2aNK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So2aPq1MEeOdBunZhTRw1w" source="_So2aNK1MEeOdBunZhTRw1w" target="_So2Z_61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2aP61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_So2aQK1MEeOdBunZhTRw1w" name="List$initialization$1" visibility="protected" method="_So2Z-K1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So2aQa1MEeOdBunZhTRw1w" name="List" visibility="public" method="_So1y3a1MEeOdBunZhTRw1w" redefinedOperation="_So1KH61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aQq1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aQ61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aRK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aRa1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1y161MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aRq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aR61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aSK1MEeOdBunZhTRw1w" name="destroy" visibility="public" method="_So1zKa1MEeOdBunZhTRw1w">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-destroy"/>
        <redefinedOperation href="#_So1Kmq1MEeOdBunZhTRw1w"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aSa1MEeOdBunZhTRw1w" name="add" visibility="public" method="_So1zK61MEeOdBunZhTRw1w" redefinedOperation="_So1KJa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aSq1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aS61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aTK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aTa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aTq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aT61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aUK1MEeOdBunZhTRw1w" name="addAt" visibility="public" method="_So1zR61MEeOdBunZhTRw1w" redefinedOperation="_So1KN61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aUa1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aUq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aU61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aVK1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aVa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aVq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aV61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aWK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aWa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aWq1MEeOdBunZhTRw1w" name="addAll" visibility="public" method="_So1zba1MEeOdBunZhTRw1w" redefinedOperation="_So1KKq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aW61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aXK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aXa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aXq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aX61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aYK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aYa1MEeOdBunZhTRw1w" name="addAllAt" visibility="public" method="_So1zia1MEeOdBunZhTRw1w" redefinedOperation="_So1KMK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aYq1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aY61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aZK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aZa1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aZq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aZ61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aaK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aaa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aaq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aa61MEeOdBunZhTRw1w" name="at" visibility="public" method="_So1zr61MEeOdBunZhTRw1w" redefinedOperation="_So1KPK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2abK1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aba1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2abq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2ab61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2acK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aca1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2acq1MEeOdBunZhTRw1w" name="clear" visibility="public" method="_So1z4K1MEeOdBunZhTRw1w" redefinedOperation="_So1Kv61MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So2ac61MEeOdBunZhTRw1w" name="count" visibility="public" method="_So1z5K1MEeOdBunZhTRw1w" redefinedOperation="_So1Kwa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2adK1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ada1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2adq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2ad61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aeK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aea1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aeq1MEeOdBunZhTRw1w" name="equals" visibility="public" method="_So10AK1MEeOdBunZhTRw1w" redefinedOperation="_So1KQq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ae61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2afK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2afa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2afq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2af61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2agK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aga1MEeOdBunZhTRw1w" name="first" visibility="public" method="_So10HK1MEeOdBunZhTRw1w" redefinedOperation="_So1KSK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2agq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ag61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ahK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aha1MEeOdBunZhTRw1w" name="indexOf" visibility="public" method="_So10Q61MEeOdBunZhTRw1w" redefinedOperation="_So1KTK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ahq1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ah61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aiK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aia1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aiq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ai61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2ajK1MEeOdBunZhTRw1w" name="last" visibility="public" method="_So10X61MEeOdBunZhTRw1w" redefinedOperation="_So1KUq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aja1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ajq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aj61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2akK1MEeOdBunZhTRw1w" name="excludes" visibility="public" method="_So10hq1MEeOdBunZhTRw1w" redefinedOperation="_So1Kzq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aka1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2akq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ak61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2alK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ala1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2alq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2al61MEeOdBunZhTRw1w" name="excludesAll" visibility="public" method="_So2Xyq1MEeOdBunZhTRw1w" redefinedOperation="_So1K1K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2amK1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ama1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2amq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2am61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2anK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ana1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2anq1MEeOdBunZhTRw1w" name="includes" visibility="public" method="_So2X5q1MEeOdBunZhTRw1w" redefinedOperation="_So1K261MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2an61MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aoK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aoa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aoq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ao61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2apK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2apa1MEeOdBunZhTRw1w" name="includesAll" visibility="public" method="_So2YAq1MEeOdBunZhTRw1w" redefinedOperation="_So1K4a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2apq1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ap61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aqK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aqa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aqq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2aq61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2arK1MEeOdBunZhTRw1w" name="isEmpty" visibility="public" method="_So2YHq1MEeOdBunZhTRw1w" redefinedOperation="_So1K6K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ara1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2arq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ar61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2asK1MEeOdBunZhTRw1w" name="notEmpty" visibility="public" method="_So2YMK1MEeOdBunZhTRw1w" redefinedOperation="_So1K7K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2asa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2asq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2as61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2atK1MEeOdBunZhTRw1w" name="remove" visibility="public" method="_So2YQq1MEeOdBunZhTRw1w" redefinedOperation="_So1KVq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ata1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2atq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2at61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2auK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2aua1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2auq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2au61MEeOdBunZhTRw1w" name="removeAll" visibility="public" method="_So2YXq1MEeOdBunZhTRw1w" redefinedOperation="_So1KW61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2avK1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ava1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2avq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2av61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2awK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2awa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2awq1MEeOdBunZhTRw1w" name="removeAt" visibility="public" method="_So2Yeq1MEeOdBunZhTRw1w" redefinedOperation="_So1KZq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2aw61MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2axK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2axa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2axq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ax61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2ayK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2aya1MEeOdBunZhTRw1w" name="removeOne" visibility="public" method="_So2Yq61MEeOdBunZhTRw1w" redefinedOperation="_So1KYa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2ayq1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2ay61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2azK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2aza1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2azq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2az61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2a0K1MEeOdBunZhTRw1w" name="replace" visibility="public" method="_So2Yx61MEeOdBunZhTRw1w" redefinedOperation="_So1KbK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2a0a1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a0q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a061MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a1K1MEeOdBunZhTRw1w" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a1a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a1q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a161MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a2K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a2a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2a2q1MEeOdBunZhTRw1w" name="replaceAt" visibility="public" method="_So2Y7a1MEeOdBunZhTRw1w" redefinedOperation="_So1Keq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2a261MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a3K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a3a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a3q1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a361MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a4K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a4a1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a4q1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a461MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2a5K1MEeOdBunZhTRw1w" name="replaceOne" visibility="public" method="_So2ZKK1MEeOdBunZhTRw1w" redefinedOperation="_So1Kc61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2a5a1MEeOdBunZhTRw1w" name="element" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a5q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a561MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a6K1MEeOdBunZhTRw1w" name="newElement" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a6a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a6q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a661MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a7K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a7a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2a7q1MEeOdBunZhTRw1w" name="retainAll" visibility="public" method="_So2ZTq1MEeOdBunZhTRw1w" redefinedOperation="_So1Kgq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2a761MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a8K1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a8a1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a8q1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a861MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a9K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2a9a1MEeOdBunZhTRw1w" name="size" visibility="public" method="_So2Zaq1MEeOdBunZhTRw1w" redefinedOperation="_So1LFK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2a9q1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a961MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a-K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2a-a1MEeOdBunZhTRw1w" name="subList" visibility="public" method="_So2ZfK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2a-q1MEeOdBunZhTRw1w" name="lower" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a-61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a_K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2a_a1MEeOdBunZhTRw1w" name="upper" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2a_q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2a_61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bAK1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bAa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bAq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So2bA61MEeOdBunZhTRw1w" name="toSequence" visibility="public" method="_So2Zya1MEeOdBunZhTRw1w" redefinedOperation="_So1LGK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2bBK1MEeOdBunZhTRw1w" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bBa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bBq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So2bB61MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So2bCK1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So2bCa1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b8k34XREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b8k3oXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So2bCq1MEeOdBunZhTRw1w" client="_So1y161MEeOdBunZhTRw1w" supplier="_So2bB61MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_So2bC61MEeOdBunZhTRw1w" clientDependency="_So3mHK1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionClasses$Impl$List__$$Alf$Library$CollectionClasses$List__PrimitiveTypes$String____">
      <generalization xmi:id="_So2bDK1MEeOdBunZhTRw1w">
        <general xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
      </generalization>
      <generalization xmi:id="_So2bDa1MEeOdBunZhTRw1w" general="_So1LKq1MEeOdBunZhTRw1w"/>
      <ownedAttribute xmi:id="_So2bDq1MEeOdBunZhTRw1w" name="List$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bD61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bEK1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2bEa1MEeOdBunZhTRw1w" name="List$method$1" specification="_So3CKa1MEeOdBunZhTRw1w" group="_So2bHq1MEeOdBunZhTRw1w" node="_So2bG61MEeOdBunZhTRw1w _So2bHK1MEeOdBunZhTRw1w _So2bHa1MEeOdBunZhTRw1w _So2bHq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2bEq1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bE61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bFK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bFa1MEeOdBunZhTRw1w" name="" type="_So2bC61MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bFq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bF61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bGK1MEeOdBunZhTRw1w" source="_So2bG61MEeOdBunZhTRw1w" target="_So2bHK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bGa1MEeOdBunZhTRw1w" source="_So2bJK1MEeOdBunZhTRw1w" target="_So2bHa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bGq1MEeOdBunZhTRw1w" source="_So2bHK1MEeOdBunZhTRw1w" target="_So2bKK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2bHq1MEeOdBunZhTRw1w" name="Body(List$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2bH61MEeOdBunZhTRw1w" name="Body" incoming="_So2bU61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So2bIK1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So2bIa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So2bUa1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bIq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bI61MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So2bJK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So2bGa1MEeOdBunZhTRw1w _So2bUq1MEeOdBunZhTRw1w _So2bVa1MEeOdBunZhTRw1w" incoming="_So2bUa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2bJa1MEeOdBunZhTRw1w" name="Super" outgoing="_So2bVK1MEeOdBunZhTRw1w" incoming="_So2bW61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2bJq1MEeOdBunZhTRw1w" name="ExpressionStatement@4120ad65">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2bJ61MEeOdBunZhTRw1w" name="Call(ListImpl$method$1)">
                <argument xmi:id="_So2bKK1MEeOdBunZhTRw1w" name="Call(ListImpl$method$1).argument(seq)" incoming="_So2bGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bKa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bKq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So2bK61MEeOdBunZhTRw1w" name="Call(ListImpl$method$1).result()">
                  <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bLK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bLa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplmethod1"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_So2bLq1MEeOdBunZhTRw1w" name="Call(List$initialization$1)" outgoing="_So2bU61MEeOdBunZhTRw1w" incoming="_So2bVK1MEeOdBunZhTRw1w" operation="_So3CKK1MEeOdBunZhTRw1w">
            <target xmi:id="_So2bL61MEeOdBunZhTRw1w" name="Call(List$initialization$1).target" incoming="_So2bUq1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bMK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bMa1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So2bMq1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1)" structuralFeature="_So2bDq1MEeOdBunZhTRw1w">
            <object xmi:id="_So2bM61MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).object" incoming="_So2bVa1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bNK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bNa1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So2bNq1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).result" outgoing="_So2bVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bN61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bOK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2bOa1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So2bOq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So2bVq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bO61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bPK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So2bPa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So2bV61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bPq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bP61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So2bQK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So2bQa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So2bWK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bQq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bQ61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So2bRK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So2bRa1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So2bRq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So2bV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bR61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bSK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So2bSa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So2bWq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bSq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bS61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So2bTK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So2bWK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bTa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bTq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So2bT61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So2bWa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So2bUK1MEeOdBunZhTRw1w" name="Decision(Test(List$initializationFlag$1))" outgoing="_So2bW61MEeOdBunZhTRw1w" incoming="_So2bWa1MEeOdBunZhTRw1w _So2bWq1MEeOdBunZhTRw1w" decisionInputFlow="_So2bWq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bUa1MEeOdBunZhTRw1w" source="_So2bIa1MEeOdBunZhTRw1w" target="_So2bJK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bUq1MEeOdBunZhTRw1w" source="_So2bJK1MEeOdBunZhTRw1w" target="_So2bL61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So2bU61MEeOdBunZhTRw1w" source="_So2bLq1MEeOdBunZhTRw1w" target="_So2bH61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So2bVK1MEeOdBunZhTRw1w" source="_So2bJa1MEeOdBunZhTRw1w" target="_So2bLq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bVa1MEeOdBunZhTRw1w" source="_So2bJK1MEeOdBunZhTRw1w" target="_So2bM61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bVq1MEeOdBunZhTRw1w" source="_So2bNq1MEeOdBunZhTRw1w" target="_So2bOq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bV61MEeOdBunZhTRw1w" source="_So2bPa1MEeOdBunZhTRw1w" target="_So2bRq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bWK1MEeOdBunZhTRw1w" source="_So2bQa1MEeOdBunZhTRw1w" target="_So2bTK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So2bWa1MEeOdBunZhTRw1w" source="_So2bT61MEeOdBunZhTRw1w" target="_So2bUK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bWq1MEeOdBunZhTRw1w" source="_So2bSa1MEeOdBunZhTRw1w" target="_So2bUK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So2bW61MEeOdBunZhTRw1w" source="_So2bUK1MEeOdBunZhTRw1w" target="_So2bJa1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2bXK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bG61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2bGK1MEeOdBunZhTRw1w" parameter="_So2bEq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2bHK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2bGq1MEeOdBunZhTRw1w" incoming="_So2bGK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bHa1MEeOdBunZhTRw1w" name="Return" incoming="_So2bGa1MEeOdBunZhTRw1w" parameter="_So2bFa1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2bXa1MEeOdBunZhTRw1w" name="destroy$method$2" specification="_So3CMK1MEeOdBunZhTRw1w" group="_So2bXq1MEeOdBunZhTRw1w" node="_So2bXq1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So2bXq1MEeOdBunZhTRw1w" name="Body(destroy$method$2)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2bX61MEeOdBunZhTRw1w" name="add$method$1" specification="_So3CMa1MEeOdBunZhTRw1w" group="_So2bbq1MEeOdBunZhTRw1w" node="_So2baq1MEeOdBunZhTRw1w _So2ba61MEeOdBunZhTRw1w _So2bbK1MEeOdBunZhTRw1w _So2bba1MEeOdBunZhTRw1w _So2bbq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2bYK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bYa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bYq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bY61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bZK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bZa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bZq1MEeOdBunZhTRw1w" source="_So2baq1MEeOdBunZhTRw1w" target="_So2ba61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2bZ61MEeOdBunZhTRw1w" source="_So2bb61MEeOdBunZhTRw1w" target="_So2bba1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2baK1MEeOdBunZhTRw1w" source="_So2ba61MEeOdBunZhTRw1w" target="_So2bca1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2baa1MEeOdBunZhTRw1w" source="_So2bd61MEeOdBunZhTRw1w" target="_So2bbK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2bbq1MEeOdBunZhTRw1w" name="Body(add$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2bb61MEeOdBunZhTRw1w" name="ReturnStatement@6c970086" outgoing="_So2bZ61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2bcK1MEeOdBunZhTRw1w" name="Call(addImpl$method$1)">
              <argument xmi:id="_So2bca1MEeOdBunZhTRw1w" name="Call(addImpl$method$1).argument(element)" incoming="_So2baK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bcq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bc61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2bdK1MEeOdBunZhTRw1w" name="Call(addImpl$method$1).result()" outgoing="_So2beq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bda1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bdq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2bd61MEeOdBunZhTRw1w" name="ReturnStatement@6c970086.output" outgoing="_So2baa1MEeOdBunZhTRw1w" incoming="_So2beq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2beK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bea1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2beq1MEeOdBunZhTRw1w" source="_So2bdK1MEeOdBunZhTRw1w" target="_So2bd61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2baq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2bZq1MEeOdBunZhTRw1w" parameter="_So2bYK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2ba61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2baK1MEeOdBunZhTRw1w" incoming="_So2bZq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bbK1MEeOdBunZhTRw1w" name="Return" incoming="_So2baa1MEeOdBunZhTRw1w" parameter="_So2bY61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2bba1MEeOdBunZhTRw1w" name="Final" incoming="_So2bZ61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2be61MEeOdBunZhTRw1w" name="addAt$method$1" specification="_So3COK1MEeOdBunZhTRw1w" group="_So2bka1MEeOdBunZhTRw1w" node="_So2bi61MEeOdBunZhTRw1w _So2bjK1MEeOdBunZhTRw1w _So2bja1MEeOdBunZhTRw1w _So2bjq1MEeOdBunZhTRw1w _So2bj61MEeOdBunZhTRw1w _So2bkK1MEeOdBunZhTRw1w _So2bka1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2bfK1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bfa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bfq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bf61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bgK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bga1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bgq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bg61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bhK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bha1MEeOdBunZhTRw1w" source="_So2bi61MEeOdBunZhTRw1w" target="_So2bjK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bhq1MEeOdBunZhTRw1w" source="_So2bja1MEeOdBunZhTRw1w" target="_So2bjq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2bh61MEeOdBunZhTRw1w" source="_So2bkq1MEeOdBunZhTRw1w" target="_So2bkK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2biK1MEeOdBunZhTRw1w" source="_So2bjK1MEeOdBunZhTRw1w" target="_So2blK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bia1MEeOdBunZhTRw1w" source="_So2bjq1MEeOdBunZhTRw1w" target="_So2bl61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2biq1MEeOdBunZhTRw1w" source="_So2bna1MEeOdBunZhTRw1w" target="_So2bj61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2bka1MEeOdBunZhTRw1w" name="Body(addAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2bkq1MEeOdBunZhTRw1w" name="ReturnStatement@11e70f62" outgoing="_So2bh61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2bk61MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1)">
              <argument xmi:id="_So2blK1MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1).argument(index)" incoming="_So2biK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bla1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2blq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So2bl61MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1).argument(element)" incoming="_So2bia1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bmK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bma1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2bmq1MEeOdBunZhTRw1w" name="Call(addAtImpl$method$1).result()" outgoing="_So2boK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bm61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bnK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAtImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2bna1MEeOdBunZhTRw1w" name="ReturnStatement@11e70f62.output" outgoing="_So2biq1MEeOdBunZhTRw1w" incoming="_So2boK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bnq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bn61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2boK1MEeOdBunZhTRw1w" source="_So2bmq1MEeOdBunZhTRw1w" target="_So2bna1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bi61MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So2bha1MEeOdBunZhTRw1w" parameter="_So2bfK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2bjK1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So2biK1MEeOdBunZhTRw1w" incoming="_So2bha1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bja1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2bhq1MEeOdBunZhTRw1w" parameter="_So2bf61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2bjq1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2bia1MEeOdBunZhTRw1w" incoming="_So2bhq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bj61MEeOdBunZhTRw1w" name="Return" incoming="_So2biq1MEeOdBunZhTRw1w" parameter="_So2bgq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2bkK1MEeOdBunZhTRw1w" name="Final" incoming="_So2bh61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2boa1MEeOdBunZhTRw1w" name="addAll$method$1" specification="_So3CQq1MEeOdBunZhTRw1w" group="_So2bsK1MEeOdBunZhTRw1w" node="_So2brK1MEeOdBunZhTRw1w _So2bra1MEeOdBunZhTRw1w _So2brq1MEeOdBunZhTRw1w _So2br61MEeOdBunZhTRw1w _So2bsK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2boq1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bo61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bpK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bpa1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bpq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bp61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bqK1MEeOdBunZhTRw1w" source="_So2brK1MEeOdBunZhTRw1w" target="_So2bra1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2bqa1MEeOdBunZhTRw1w" source="_So2bsa1MEeOdBunZhTRw1w" target="_So2br61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bqq1MEeOdBunZhTRw1w" source="_So2bra1MEeOdBunZhTRw1w" target="_So2bs61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bq61MEeOdBunZhTRw1w" source="_So2bua1MEeOdBunZhTRw1w" target="_So2brq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2bsK1MEeOdBunZhTRw1w" name="Body(addAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2bsa1MEeOdBunZhTRw1w" name="ReturnStatement@4b0900c8" outgoing="_So2bqa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2bsq1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1)">
              <argument xmi:id="_So2bs61MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1).argument(seq)" incoming="_So2bqq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2btK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bta1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2btq1MEeOdBunZhTRw1w" name="Call(addAllImpl$method$1).result()" outgoing="_So2bvK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bt61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2buK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-addAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2bua1MEeOdBunZhTRw1w" name="ReturnStatement@4b0900c8.output" outgoing="_So2bq61MEeOdBunZhTRw1w" incoming="_So2bvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2buq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bu61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bvK1MEeOdBunZhTRw1w" source="_So2btq1MEeOdBunZhTRw1w" target="_So2bua1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2brK1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2bqK1MEeOdBunZhTRw1w" parameter="_So2boq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2bra1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2bqq1MEeOdBunZhTRw1w" incoming="_So2bqK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2brq1MEeOdBunZhTRw1w" name="Return" incoming="_So2bq61MEeOdBunZhTRw1w" parameter="_So2bpa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2br61MEeOdBunZhTRw1w" name="Final" incoming="_So2bqa1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2bva1MEeOdBunZhTRw1w" name="addAllAt$method$1" specification="_So3CSa1MEeOdBunZhTRw1w" group="_So2b061MEeOdBunZhTRw1w" node="_So2bza1MEeOdBunZhTRw1w _So2bzq1MEeOdBunZhTRw1w _So2bz61MEeOdBunZhTRw1w _So2b0K1MEeOdBunZhTRw1w _So2b0a1MEeOdBunZhTRw1w _So2b0q1MEeOdBunZhTRw1w _So2b061MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2bvq1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bv61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bwK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bwa1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bwq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bw61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2bxK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2bxa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2bxq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bx61MEeOdBunZhTRw1w" source="_So2bza1MEeOdBunZhTRw1w" target="_So2bzq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2byK1MEeOdBunZhTRw1w" source="_So2bz61MEeOdBunZhTRw1w" target="_So2b0K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2bya1MEeOdBunZhTRw1w" source="_So2b1K1MEeOdBunZhTRw1w" target="_So2b0q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2byq1MEeOdBunZhTRw1w" source="_So2bzq1MEeOdBunZhTRw1w" target="_So2b1q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2by61MEeOdBunZhTRw1w" source="_So2b0K1MEeOdBunZhTRw1w" target="_So2b2a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2bzK1MEeOdBunZhTRw1w" source="_So2b361MEeOdBunZhTRw1w" target="_So2b0a1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2b061MEeOdBunZhTRw1w" name="Body(addAllAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2b1K1MEeOdBunZhTRw1w" name="ReturnStatement@a3fb526" outgoing="_So2bya1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2b1a1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1)">
              <argument xmi:id="_So2b1q1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1).argument(index)" incoming="_So2byq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2b161MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2b2K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So2b2a1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1).argument(seq)" incoming="_So2by61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2b2q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2b261MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2b3K1MEeOdBunZhTRw1w" name="Call(addAllAtImpl$method$1).result()" outgoing="_So2b4q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2b3a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2b3q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-addAllAtImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2b361MEeOdBunZhTRw1w" name="ReturnStatement@a3fb526.output" outgoing="_So2bzK1MEeOdBunZhTRw1w" incoming="_So2b4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2b4K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2b4a1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2b4q1MEeOdBunZhTRw1w" source="_So2b3K1MEeOdBunZhTRw1w" target="_So2b361MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bza1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So2bx61MEeOdBunZhTRw1w" parameter="_So2bvq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2bzq1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So2byq1MEeOdBunZhTRw1w" incoming="_So2bx61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2bz61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2byK1MEeOdBunZhTRw1w" parameter="_So2bwa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2b0K1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2by61MEeOdBunZhTRw1w" incoming="_So2byK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2b0a1MEeOdBunZhTRw1w" name="Return" incoming="_So2bzK1MEeOdBunZhTRw1w" parameter="_So2bxK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2b0q1MEeOdBunZhTRw1w" name="Final" incoming="_So2bya1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2b461MEeOdBunZhTRw1w" name="at$method$1" specification="_So3CU61MEeOdBunZhTRw1w" group="_So2b8q1MEeOdBunZhTRw1w" node="_So2b7q1MEeOdBunZhTRw1w _So2b761MEeOdBunZhTRw1w _So2b8K1MEeOdBunZhTRw1w _So2b8a1MEeOdBunZhTRw1w _So2b8q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2b5K1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2b5a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2b5q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2b561MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2b6K1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2b6a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2b6q1MEeOdBunZhTRw1w" source="_So2b7q1MEeOdBunZhTRw1w" target="_So2b761MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2b661MEeOdBunZhTRw1w" source="_So2b861MEeOdBunZhTRw1w" target="_So2b8a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2b7K1MEeOdBunZhTRw1w" source="_So2b761MEeOdBunZhTRw1w" target="_So2-0a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2b7a1MEeOdBunZhTRw1w" source="_So2-661MEeOdBunZhTRw1w" target="_So2b8K1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2b8q1MEeOdBunZhTRw1w" name="Body(at$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2b861MEeOdBunZhTRw1w" name="ReturnStatement@7d224d90" outgoing="_So2b661MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2-0K1MEeOdBunZhTRw1w" name="Call(atImpl$method$1)">
              <argument xmi:id="_So2-0a1MEeOdBunZhTRw1w" name="Call(atImpl$method$1).argument(index)" incoming="_So2b7K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2-0q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2-061MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2-1K1MEeOdBunZhTRw1w" name="Call(atImpl$method$1).result()" outgoing="_So2-7q1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2-1a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2-1q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-atImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So2-161MEeOdBunZhTRw1w" name="CastExpression@60e88620" mode="parallel" outputElement="_So2-6q1MEeOdBunZhTRw1w" inputElement="_So2-6a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So2-2K1MEeOdBunZhTRw1w" name="Merge(CastExpression@60e88620.operand)" outgoing="_So2-6K1MEeOdBunZhTRw1w" incoming="_So2-5a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2-2a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                <object xmi:id="_So2-2q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2-4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2-261MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2-3K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2-3a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2-5K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2-3q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2-361MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So2-4K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2-4q1MEeOdBunZhTRw1w _So2-461MEeOdBunZhTRw1w" incoming="_So2-561MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So2-4a1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2-5a1MEeOdBunZhTRw1w" incoming="_So2-461MEeOdBunZhTRw1w _So2-5K1MEeOdBunZhTRw1w" decisionInputFlow="_So2-5K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-4q1MEeOdBunZhTRw1w" source="_So2-4K1MEeOdBunZhTRw1w" target="_So2-2q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-461MEeOdBunZhTRw1w" source="_So2-4K1MEeOdBunZhTRw1w" target="_So2-4a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-5K1MEeOdBunZhTRw1w" source="_So2-3a1MEeOdBunZhTRw1w" target="_So2-4a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-5a1MEeOdBunZhTRw1w" source="_So2-4a1MEeOdBunZhTRw1w" target="_So2-2K1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2-5q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-561MEeOdBunZhTRw1w" source="_So2-6a1MEeOdBunZhTRw1w" target="_So2-4K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-6K1MEeOdBunZhTRw1w" source="_So2-2K1MEeOdBunZhTRw1w" target="_So2-6q1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2-6a1MEeOdBunZhTRw1w" name="CastExpression@60e88620.inputElement" outgoing="_So2-561MEeOdBunZhTRw1w" incoming="_So2-7q1MEeOdBunZhTRw1w" regionAsInput="_So2-161MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2-6q1MEeOdBunZhTRw1w" name="CastExpression@60e88620.outputElement" outgoing="_So2-761MEeOdBunZhTRw1w" incoming="_So2-6K1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So2-161MEeOdBunZhTRw1w"/>
            <structuredNodeOutput xmi:id="_So2-661MEeOdBunZhTRw1w" name="ReturnStatement@7d224d90.output" outgoing="_So2b7a1MEeOdBunZhTRw1w" incoming="_So2-761MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2-7K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2-7a1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-7q1MEeOdBunZhTRw1w" source="_So2-1K1MEeOdBunZhTRw1w" target="_So2-6a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-761MEeOdBunZhTRw1w" source="_So2-6q1MEeOdBunZhTRw1w" target="_So2-661MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2b7q1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So2b6q1MEeOdBunZhTRw1w" parameter="_So2b5K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2b761MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So2b7K1MEeOdBunZhTRw1w" incoming="_So2b6q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2b8K1MEeOdBunZhTRw1w" name="Return" incoming="_So2b7a1MEeOdBunZhTRw1w" parameter="_So2b561MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2b8a1MEeOdBunZhTRw1w" name="Final" incoming="_So2b661MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2-8K1MEeOdBunZhTRw1w" name="clear$method$1" specification="_So3CWq1MEeOdBunZhTRw1w" group="_So2-8a1MEeOdBunZhTRw1w" node="_So2-8a1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So2-8a1MEeOdBunZhTRw1w" name="Body(clear$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2-8q1MEeOdBunZhTRw1w" name="ExpressionStatement@46346072">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2-861MEeOdBunZhTRw1w" name="Call(clearImpl$method$1)">
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-clearImplmethod1"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2-9K1MEeOdBunZhTRw1w" name="count$method$1" specification="_So3CW61MEeOdBunZhTRw1w" group="_So2_A61MEeOdBunZhTRw1w" node="_So2-_61MEeOdBunZhTRw1w _So2_AK1MEeOdBunZhTRw1w _So2_Aa1MEeOdBunZhTRw1w _So2_Aq1MEeOdBunZhTRw1w _So2_A61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2-9a1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2-9q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2-961MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2--K1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2--a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2--q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2--61MEeOdBunZhTRw1w" source="_So2-_61MEeOdBunZhTRw1w" target="_So2_AK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2-_K1MEeOdBunZhTRw1w" source="_So2_BK1MEeOdBunZhTRw1w" target="_So2_Aq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-_a1MEeOdBunZhTRw1w" source="_So2_AK1MEeOdBunZhTRw1w" target="_So2_Bq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2-_q1MEeOdBunZhTRw1w" source="_So2_DK1MEeOdBunZhTRw1w" target="_So2_Aa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_A61MEeOdBunZhTRw1w" name="Body(count$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_BK1MEeOdBunZhTRw1w" name="ReturnStatement@1dea3324" outgoing="_So2-_K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_Ba1MEeOdBunZhTRw1w" name="Call(countImpl$method$1)">
              <argument xmi:id="_So2_Bq1MEeOdBunZhTRw1w" name="Call(countImpl$method$1).argument(element)" incoming="_So2-_a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_B61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_CK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2_Ca1MEeOdBunZhTRw1w" name="Call(countImpl$method$1).result()" outgoing="_So2_D61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Cq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_C61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-countImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2_DK1MEeOdBunZhTRw1w" name="ReturnStatement@1dea3324.output" outgoing="_So2-_q1MEeOdBunZhTRw1w" incoming="_So2_D61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Da1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Dq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_D61MEeOdBunZhTRw1w" source="_So2_Ca1MEeOdBunZhTRw1w" target="_So2_DK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2-_61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2--61MEeOdBunZhTRw1w" parameter="_So2-9a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_AK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2-_a1MEeOdBunZhTRw1w" incoming="_So2--61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_Aa1MEeOdBunZhTRw1w" name="Return" incoming="_So2-_q1MEeOdBunZhTRw1w" parameter="_So2--K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_Aq1MEeOdBunZhTRw1w" name="Final" incoming="_So2-_K1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_EK1MEeOdBunZhTRw1w" name="equals$method$1" specification="_So3CYq1MEeOdBunZhTRw1w" group="_So2_H61MEeOdBunZhTRw1w" node="_So2_G61MEeOdBunZhTRw1w _So2_HK1MEeOdBunZhTRw1w _So2_Ha1MEeOdBunZhTRw1w _So2_Hq1MEeOdBunZhTRw1w _So2_H61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_Ea1MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Eq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_E61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2_FK1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Fa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Fq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_F61MEeOdBunZhTRw1w" source="_So2_G61MEeOdBunZhTRw1w" target="_So2_HK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_GK1MEeOdBunZhTRw1w" source="_So2_IK1MEeOdBunZhTRw1w" target="_So2_Hq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Ga1MEeOdBunZhTRw1w" source="_So2_HK1MEeOdBunZhTRw1w" target="_So2_Iq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Gq1MEeOdBunZhTRw1w" source="_So2_KK1MEeOdBunZhTRw1w" target="_So2_Ha1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_H61MEeOdBunZhTRw1w" name="Body(equals$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_IK1MEeOdBunZhTRw1w" name="ReturnStatement@4b347dad" outgoing="_So2_GK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_Ia1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1)">
              <argument xmi:id="_So2_Iq1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1).argument(seq)" incoming="_So2_Ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_I61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_JK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2_Ja1MEeOdBunZhTRw1w" name="Call(equalsImpl$method$1).result()" outgoing="_So2_K61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Jq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_J61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-equalsImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2_KK1MEeOdBunZhTRw1w" name="ReturnStatement@4b347dad.output" outgoing="_So2_Gq1MEeOdBunZhTRw1w" incoming="_So2_K61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Ka1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Kq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_K61MEeOdBunZhTRw1w" source="_So2_Ja1MEeOdBunZhTRw1w" target="_So2_KK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_G61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2_F61MEeOdBunZhTRw1w" parameter="_So2_Ea1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_HK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2_Ga1MEeOdBunZhTRw1w" incoming="_So2_F61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_Ha1MEeOdBunZhTRw1w" name="Return" incoming="_So2_Gq1MEeOdBunZhTRw1w" parameter="_So2_FK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_Hq1MEeOdBunZhTRw1w" name="Final" incoming="_So2_GK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_LK1MEeOdBunZhTRw1w" name="first$method$1" specification="_So3Caa1MEeOdBunZhTRw1w" group="_So2_NK1MEeOdBunZhTRw1w" node="_So2_Mq1MEeOdBunZhTRw1w _So2_M61MEeOdBunZhTRw1w _So2_NK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_La1MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Lq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_L61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_MK1MEeOdBunZhTRw1w" source="_So2_Na1MEeOdBunZhTRw1w" target="_So2_M61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Ma1MEeOdBunZhTRw1w" source="_So2_Tq1MEeOdBunZhTRw1w" target="_So2_Mq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_NK1MEeOdBunZhTRw1w" name="Body(first$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_Na1MEeOdBunZhTRw1w" name="ReturnStatement@9457b0f" outgoing="_So2_MK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_Nq1MEeOdBunZhTRw1w" name="Call(firstImpl$method$1)">
              <result xmi:id="_So2_N61MEeOdBunZhTRw1w" name="Call(firstImpl$method$1).result()" outgoing="_So2_Ua1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_OK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Oa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-firstImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So2_Oq1MEeOdBunZhTRw1w" name="CastExpression@71749bbd" mode="parallel" outputElement="_So2_Ta1MEeOdBunZhTRw1w" inputElement="_So2_TK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So2_O61MEeOdBunZhTRw1w" name="Merge(CastExpression@71749bbd.operand)" outgoing="_So2_S61MEeOdBunZhTRw1w" incoming="_So2_SK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2_PK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                <object xmi:id="_So2_Pa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2_Ra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Pq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_P61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2_QK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2_R61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Qa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Qq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So2_Q61MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2_Ra1MEeOdBunZhTRw1w _So2_Rq1MEeOdBunZhTRw1w" incoming="_So2_Sq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So2_RK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2_SK1MEeOdBunZhTRw1w" incoming="_So2_Rq1MEeOdBunZhTRw1w _So2_R61MEeOdBunZhTRw1w" decisionInputFlow="_So2_R61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Ra1MEeOdBunZhTRw1w" source="_So2_Q61MEeOdBunZhTRw1w" target="_So2_Pa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Rq1MEeOdBunZhTRw1w" source="_So2_Q61MEeOdBunZhTRw1w" target="_So2_RK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_R61MEeOdBunZhTRw1w" source="_So2_QK1MEeOdBunZhTRw1w" target="_So2_RK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_SK1MEeOdBunZhTRw1w" source="_So2_RK1MEeOdBunZhTRw1w" target="_So2_O61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2_Sa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Sq1MEeOdBunZhTRw1w" source="_So2_TK1MEeOdBunZhTRw1w" target="_So2_Q61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_S61MEeOdBunZhTRw1w" source="_So2_O61MEeOdBunZhTRw1w" target="_So2_Ta1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2_TK1MEeOdBunZhTRw1w" name="CastExpression@71749bbd.inputElement" outgoing="_So2_Sq1MEeOdBunZhTRw1w" incoming="_So2_Ua1MEeOdBunZhTRw1w" regionAsInput="_So2_Oq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2_Ta1MEeOdBunZhTRw1w" name="CastExpression@71749bbd.outputElement" outgoing="_So2_Uq1MEeOdBunZhTRw1w" incoming="_So2_S61MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So2_Oq1MEeOdBunZhTRw1w"/>
            <structuredNodeOutput xmi:id="_So2_Tq1MEeOdBunZhTRw1w" name="ReturnStatement@9457b0f.output" outgoing="_So2_Ma1MEeOdBunZhTRw1w" incoming="_So2_Uq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_T61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_UK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Ua1MEeOdBunZhTRw1w" source="_So2_N61MEeOdBunZhTRw1w" target="_So2_TK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Uq1MEeOdBunZhTRw1w" source="_So2_Ta1MEeOdBunZhTRw1w" target="_So2_Tq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_Mq1MEeOdBunZhTRw1w" name="Return" incoming="_So2_Ma1MEeOdBunZhTRw1w" parameter="_So2_La1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_M61MEeOdBunZhTRw1w" name="Final" incoming="_So2_MK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_U61MEeOdBunZhTRw1w" name="indexOf$method$1" specification="_So3Cba1MEeOdBunZhTRw1w" group="_So2_Yq1MEeOdBunZhTRw1w" node="_So2_Xq1MEeOdBunZhTRw1w _So2_X61MEeOdBunZhTRw1w _So2_YK1MEeOdBunZhTRw1w _So2_Ya1MEeOdBunZhTRw1w _So2_Yq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_VK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Va1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Vq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2_V61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_WK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Wa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Wq1MEeOdBunZhTRw1w" source="_So2_Xq1MEeOdBunZhTRw1w" target="_So2_X61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_W61MEeOdBunZhTRw1w" source="_So2_Y61MEeOdBunZhTRw1w" target="_So2_Ya1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_XK1MEeOdBunZhTRw1w" source="_So2_X61MEeOdBunZhTRw1w" target="_So2_Za1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_Xa1MEeOdBunZhTRw1w" source="_So2_a61MEeOdBunZhTRw1w" target="_So2_YK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_Yq1MEeOdBunZhTRw1w" name="Body(indexOf$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_Y61MEeOdBunZhTRw1w" name="ReturnStatement@7000f98d" outgoing="_So2_W61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_ZK1MEeOdBunZhTRw1w" name="Call(indexOfImpl$method$1)">
              <argument xmi:id="_So2_Za1MEeOdBunZhTRw1w" name="Call(indexOfImpl$method$1).argument(element)" incoming="_So2_XK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_Zq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_Z61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2_aK1MEeOdBunZhTRw1w" name="Call(indexOfImpl$method$1).result()" outgoing="_So2_bq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_aa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_aq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-indexOfImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2_a61MEeOdBunZhTRw1w" name="ReturnStatement@7000f98d.output" outgoing="_So2_Xa1MEeOdBunZhTRw1w" incoming="_So2_bq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_bK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_ba1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_bq1MEeOdBunZhTRw1w" source="_So2_aK1MEeOdBunZhTRw1w" target="_So2_a61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_Xq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2_Wq1MEeOdBunZhTRw1w" parameter="_So2_VK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_X61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2_XK1MEeOdBunZhTRw1w" incoming="_So2_Wq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_YK1MEeOdBunZhTRw1w" name="Return" incoming="_So2_Xa1MEeOdBunZhTRw1w" parameter="_So2_V61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_Ya1MEeOdBunZhTRw1w" name="Final" incoming="_So2_W61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_b61MEeOdBunZhTRw1w" name="last$method$1" specification="_So3CdK1MEeOdBunZhTRw1w" group="_So2_d61MEeOdBunZhTRw1w" node="_So2_da1MEeOdBunZhTRw1w _So2_dq1MEeOdBunZhTRw1w _So2_d61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_cK1MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_ca1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_cq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_c61MEeOdBunZhTRw1w" source="_So2_eK1MEeOdBunZhTRw1w" target="_So2_dq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_dK1MEeOdBunZhTRw1w" source="_So2_ka1MEeOdBunZhTRw1w" target="_So2_da1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_d61MEeOdBunZhTRw1w" name="Body(last$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_eK1MEeOdBunZhTRw1w" name="ReturnStatement@57161a37" outgoing="_So2_c61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_ea1MEeOdBunZhTRw1w" name="Call(lastImpl$method$1)">
              <result xmi:id="_So2_eq1MEeOdBunZhTRw1w" name="Call(lastImpl$method$1).result()" outgoing="_So2_lK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_e61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_fK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-lastImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So2_fa1MEeOdBunZhTRw1w" name="CastExpression@ff2d097" mode="parallel" outputElement="_So2_kK1MEeOdBunZhTRw1w" inputElement="_So2_j61MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So2_fq1MEeOdBunZhTRw1w" name="Merge(CastExpression@ff2d097.operand)" outgoing="_So2_jq1MEeOdBunZhTRw1w" incoming="_So2_i61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So2_f61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                <object xmi:id="_So2_gK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So2_iK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_ga1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_gq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So2_g61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So2_iq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_hK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_ha1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So2_hq1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So2_iK1MEeOdBunZhTRw1w _So2_ia1MEeOdBunZhTRw1w" incoming="_So2_ja1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So2_h61MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So2_i61MEeOdBunZhTRw1w" incoming="_So2_ia1MEeOdBunZhTRw1w _So2_iq1MEeOdBunZhTRw1w" decisionInputFlow="_So2_iq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_iK1MEeOdBunZhTRw1w" source="_So2_hq1MEeOdBunZhTRw1w" target="_So2_gK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_ia1MEeOdBunZhTRw1w" source="_So2_hq1MEeOdBunZhTRw1w" target="_So2_h61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_iq1MEeOdBunZhTRw1w" source="_So2_g61MEeOdBunZhTRw1w" target="_So2_h61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_i61MEeOdBunZhTRw1w" source="_So2_h61MEeOdBunZhTRw1w" target="_So2_fq1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So2_jK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_ja1MEeOdBunZhTRw1w" source="_So2_j61MEeOdBunZhTRw1w" target="_So2_hq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_jq1MEeOdBunZhTRw1w" source="_So2_fq1MEeOdBunZhTRw1w" target="_So2_kK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2_j61MEeOdBunZhTRw1w" name="CastExpression@ff2d097.inputElement" outgoing="_So2_ja1MEeOdBunZhTRw1w" incoming="_So2_lK1MEeOdBunZhTRw1w" regionAsInput="_So2_fa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So2_kK1MEeOdBunZhTRw1w" name="CastExpression@ff2d097.outputElement" outgoing="_So2_la1MEeOdBunZhTRw1w" incoming="_So2_jq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So2_fa1MEeOdBunZhTRw1w"/>
            <structuredNodeOutput xmi:id="_So2_ka1MEeOdBunZhTRw1w" name="ReturnStatement@57161a37.output" outgoing="_So2_dK1MEeOdBunZhTRw1w" incoming="_So2_la1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_kq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_k61MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_lK1MEeOdBunZhTRw1w" source="_So2_eq1MEeOdBunZhTRw1w" target="_So2_j61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_la1MEeOdBunZhTRw1w" source="_So2_kK1MEeOdBunZhTRw1w" target="_So2_ka1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_da1MEeOdBunZhTRw1w" name="Return" incoming="_So2_dK1MEeOdBunZhTRw1w" parameter="_So2_cK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_dq1MEeOdBunZhTRw1w" name="Final" incoming="_So2_c61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_lq1MEeOdBunZhTRw1w" name="excludes$method$1" specification="_So3CeK1MEeOdBunZhTRw1w" group="_So2_pa1MEeOdBunZhTRw1w" node="_So2_oa1MEeOdBunZhTRw1w _So2_oq1MEeOdBunZhTRw1w _So2_o61MEeOdBunZhTRw1w _So2_pK1MEeOdBunZhTRw1w _So2_pa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_l61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_mK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_ma1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2_mq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_m61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_nK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_na1MEeOdBunZhTRw1w" source="_So2_oa1MEeOdBunZhTRw1w" target="_So2_oq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_nq1MEeOdBunZhTRw1w" source="_So2_pq1MEeOdBunZhTRw1w" target="_So2_pK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_n61MEeOdBunZhTRw1w" source="_So2_oq1MEeOdBunZhTRw1w" target="_So2_qK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_oK1MEeOdBunZhTRw1w" source="_So2_rq1MEeOdBunZhTRw1w" target="_So2_o61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_pa1MEeOdBunZhTRw1w" name="Body(excludes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_pq1MEeOdBunZhTRw1w" name="ReturnStatement@54ff23f3" outgoing="_So2_nq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_p61MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1)">
              <argument xmi:id="_So2_qK1MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1).argument(element)" incoming="_So2_n61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_qa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_qq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2_q61MEeOdBunZhTRw1w" name="Call(excludesImpl$method$1).result()" outgoing="_So2_sa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_rK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_ra1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2_rq1MEeOdBunZhTRw1w" name="ReturnStatement@54ff23f3.output" outgoing="_So2_oK1MEeOdBunZhTRw1w" incoming="_So2_sa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_r61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_sK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_sa1MEeOdBunZhTRw1w" source="_So2_q61MEeOdBunZhTRw1w" target="_So2_rq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_oa1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2_na1MEeOdBunZhTRw1w" parameter="_So2_l61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_oq1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2_n61MEeOdBunZhTRw1w" incoming="_So2_na1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_o61MEeOdBunZhTRw1w" name="Return" incoming="_So2_oK1MEeOdBunZhTRw1w" parameter="_So2_mq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_pK1MEeOdBunZhTRw1w" name="Final" incoming="_So2_nq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_sq1MEeOdBunZhTRw1w" name="excludesAll$method$1" specification="_So3Cf61MEeOdBunZhTRw1w" group="_So2_wa1MEeOdBunZhTRw1w" node="_So2_va1MEeOdBunZhTRw1w _So2_vq1MEeOdBunZhTRw1w _So2_v61MEeOdBunZhTRw1w _So2_wK1MEeOdBunZhTRw1w _So2_wa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_s61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_tK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_ta1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2_tq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_t61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_uK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_ua1MEeOdBunZhTRw1w" source="_So2_va1MEeOdBunZhTRw1w" target="_So2_vq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_uq1MEeOdBunZhTRw1w" source="_So2_wq1MEeOdBunZhTRw1w" target="_So2_wK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_u61MEeOdBunZhTRw1w" source="_So2_vq1MEeOdBunZhTRw1w" target="_So2_xK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_vK1MEeOdBunZhTRw1w" source="_So2_yq1MEeOdBunZhTRw1w" target="_So2_v61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_wa1MEeOdBunZhTRw1w" name="Body(excludesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_wq1MEeOdBunZhTRw1w" name="ReturnStatement@50ed97a6" outgoing="_So2_uq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_w61MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1)">
              <argument xmi:id="_So2_xK1MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1).argument(seq)" incoming="_So2_u61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_xa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_xq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2_x61MEeOdBunZhTRw1w" name="Call(excludesAllImpl$method$1).result()" outgoing="_So2_za1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_yK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_ya1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-excludesAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2_yq1MEeOdBunZhTRw1w" name="ReturnStatement@50ed97a6.output" outgoing="_So2_vK1MEeOdBunZhTRw1w" incoming="_So2_za1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_y61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_zK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_za1MEeOdBunZhTRw1w" source="_So2_x61MEeOdBunZhTRw1w" target="_So2_yq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_va1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2_ua1MEeOdBunZhTRw1w" parameter="_So2_s61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_vq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2_u61MEeOdBunZhTRw1w" incoming="_So2_ua1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_v61MEeOdBunZhTRw1w" name="Return" incoming="_So2_vK1MEeOdBunZhTRw1w" parameter="_So2_tq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_wK1MEeOdBunZhTRw1w" name="Final" incoming="_So2_uq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_zq1MEeOdBunZhTRw1w" name="includes$method$1" specification="_So3Chq1MEeOdBunZhTRw1w" group="_So2_3a1MEeOdBunZhTRw1w" node="_So2_2a1MEeOdBunZhTRw1w _So2_2q1MEeOdBunZhTRw1w _So2_261MEeOdBunZhTRw1w _So2_3K1MEeOdBunZhTRw1w _So2_3a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_z61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_0K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_0a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2_0q1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_061MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_1K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_1a1MEeOdBunZhTRw1w" source="_So2_2a1MEeOdBunZhTRw1w" target="_So2_2q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_1q1MEeOdBunZhTRw1w" source="_So2_3q1MEeOdBunZhTRw1w" target="_So2_3K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_161MEeOdBunZhTRw1w" source="_So2_2q1MEeOdBunZhTRw1w" target="_So2_4K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_2K1MEeOdBunZhTRw1w" source="_So2_5q1MEeOdBunZhTRw1w" target="_So2_261MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_3a1MEeOdBunZhTRw1w" name="Body(includes$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_3q1MEeOdBunZhTRw1w" name="ReturnStatement@7b4fb4eb" outgoing="_So2_1q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_361MEeOdBunZhTRw1w" name="Call(includesImpl$method$1)">
              <argument xmi:id="_So2_4K1MEeOdBunZhTRw1w" name="Call(includesImpl$method$1).argument(element)" incoming="_So2_161MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_4a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_4q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So2_461MEeOdBunZhTRw1w" name="Call(includesImpl$method$1).result()" outgoing="_So2_6a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_5K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_5a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So2_5q1MEeOdBunZhTRw1w" name="ReturnStatement@7b4fb4eb.output" outgoing="_So2_2K1MEeOdBunZhTRw1w" incoming="_So2_6a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_561MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_6K1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_6a1MEeOdBunZhTRw1w" source="_So2_461MEeOdBunZhTRw1w" target="_So2_5q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_2a1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So2_1a1MEeOdBunZhTRw1w" parameter="_So2_z61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_2q1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So2_161MEeOdBunZhTRw1w" incoming="_So2_1a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_261MEeOdBunZhTRw1w" name="Return" incoming="_So2_2K1MEeOdBunZhTRw1w" parameter="_So2_0q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_3K1MEeOdBunZhTRw1w" name="Final" incoming="_So2_1q1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So2_6q1MEeOdBunZhTRw1w" name="includesAll$method$1" specification="_So3Cja1MEeOdBunZhTRw1w" group="_So2_-a1MEeOdBunZhTRw1w" node="_So2_9a1MEeOdBunZhTRw1w _So2_9q1MEeOdBunZhTRw1w _So2_961MEeOdBunZhTRw1w _So2_-K1MEeOdBunZhTRw1w _So2_-a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So2_661MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_7K1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_7a1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So2_7q1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2_761MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2_8K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_8a1MEeOdBunZhTRw1w" source="_So2_9a1MEeOdBunZhTRw1w" target="_So2_9q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So2_8q1MEeOdBunZhTRw1w" source="_So2_-q1MEeOdBunZhTRw1w" target="_So2_-K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_861MEeOdBunZhTRw1w" source="_So2_9q1MEeOdBunZhTRw1w" target="_So2__K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So2_9K1MEeOdBunZhTRw1w" source="_So3AAq1MEeOdBunZhTRw1w" target="_So2_961MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So2_-a1MEeOdBunZhTRw1w" name="Body(includesAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So2_-q1MEeOdBunZhTRw1w" name="ReturnStatement@581b236" outgoing="_So2_8q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So2_-61MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1)">
              <argument xmi:id="_So2__K1MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1).argument(seq)" incoming="_So2_861MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So2__a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So2__q1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So2__61MEeOdBunZhTRw1w" name="Call(includesAllImpl$method$1).result()" outgoing="_So3ABa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AAK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AAa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-includesAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3AAq1MEeOdBunZhTRw1w" name="ReturnStatement@581b236.output" outgoing="_So2_9K1MEeOdBunZhTRw1w" incoming="_So3ABa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AA61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ABK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ABa1MEeOdBunZhTRw1w" source="_So2__61MEeOdBunZhTRw1w" target="_So3AAq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_9a1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So2_8a1MEeOdBunZhTRw1w" parameter="_So2_661MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So2_9q1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So2_861MEeOdBunZhTRw1w" incoming="_So2_8a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So2_961MEeOdBunZhTRw1w" name="Return" incoming="_So2_9K1MEeOdBunZhTRw1w" parameter="_So2_7q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So2_-K1MEeOdBunZhTRw1w" name="Final" incoming="_So2_8q1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3ABq1MEeOdBunZhTRw1w" name="isEmpty$method$1" specification="_So3ClK1MEeOdBunZhTRw1w" group="_So3ADq1MEeOdBunZhTRw1w" node="_So3ADK1MEeOdBunZhTRw1w _So3ADa1MEeOdBunZhTRw1w _So3ADq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AB61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ACK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ACa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3ACq1MEeOdBunZhTRw1w" source="_So3AD61MEeOdBunZhTRw1w" target="_So3ADa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AC61MEeOdBunZhTRw1w" source="_So3AFK1MEeOdBunZhTRw1w" target="_So3ADK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3ADq1MEeOdBunZhTRw1w" name="Body(isEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3AD61MEeOdBunZhTRw1w" name="ReturnStatement@21df71f3" outgoing="_So3ACq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3AEK1MEeOdBunZhTRw1w" name="Call(isEmptyImpl$method$1)">
              <result xmi:id="_So3AEa1MEeOdBunZhTRw1w" name="Call(isEmptyImpl$method$1).result()" outgoing="_So3AF61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AEq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AE61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-isEmptyImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3AFK1MEeOdBunZhTRw1w" name="ReturnStatement@21df71f3.output" outgoing="_So3AC61MEeOdBunZhTRw1w" incoming="_So3AF61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AFa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AFq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AF61MEeOdBunZhTRw1w" source="_So3AEa1MEeOdBunZhTRw1w" target="_So3AFK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3ADK1MEeOdBunZhTRw1w" name="Return" incoming="_So3AC61MEeOdBunZhTRw1w" parameter="_So3AB61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3ADa1MEeOdBunZhTRw1w" name="Final" incoming="_So3ACq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3AGK1MEeOdBunZhTRw1w" name="notEmpty$method$1" specification="_So3CmK1MEeOdBunZhTRw1w" group="_So3AIK1MEeOdBunZhTRw1w" node="_So3AHq1MEeOdBunZhTRw1w _So3AH61MEeOdBunZhTRw1w _So3AIK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AGa1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AGq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AG61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3AHK1MEeOdBunZhTRw1w" source="_So3AIa1MEeOdBunZhTRw1w" target="_So3AH61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AHa1MEeOdBunZhTRw1w" source="_So3AJq1MEeOdBunZhTRw1w" target="_So3AHq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3AIK1MEeOdBunZhTRw1w" name="Body(notEmpty$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3AIa1MEeOdBunZhTRw1w" name="ReturnStatement@50fc1387" outgoing="_So3AHK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3AIq1MEeOdBunZhTRw1w" name="Call(notEmptyImpl$method$1)">
              <result xmi:id="_So3AI61MEeOdBunZhTRw1w" name="Call(notEmptyImpl$method$1).result()" outgoing="_So3AKa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AJK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AJa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-notEmptyImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3AJq1MEeOdBunZhTRw1w" name="ReturnStatement@50fc1387.output" outgoing="_So3AHa1MEeOdBunZhTRw1w" incoming="_So3AKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AJ61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AKK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AKa1MEeOdBunZhTRw1w" source="_So3AI61MEeOdBunZhTRw1w" target="_So3AJq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3AHq1MEeOdBunZhTRw1w" name="Return" incoming="_So3AHa1MEeOdBunZhTRw1w" parameter="_So3AGa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3AH61MEeOdBunZhTRw1w" name="Final" incoming="_So3AHK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3AKq1MEeOdBunZhTRw1w" name="remove$method$1" specification="_So3CnK1MEeOdBunZhTRw1w" group="_So3AOa1MEeOdBunZhTRw1w" node="_So3ANa1MEeOdBunZhTRw1w _So3ANq1MEeOdBunZhTRw1w _So3AN61MEeOdBunZhTRw1w _So3AOK1MEeOdBunZhTRw1w _So3AOa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AK61MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ALK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ALa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3ALq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AL61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AMK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AMa1MEeOdBunZhTRw1w" source="_So3ANa1MEeOdBunZhTRw1w" target="_So3ANq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3AMq1MEeOdBunZhTRw1w" source="_So3AOq1MEeOdBunZhTRw1w" target="_So3AOK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AM61MEeOdBunZhTRw1w" source="_So3ANq1MEeOdBunZhTRw1w" target="_So3APK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ANK1MEeOdBunZhTRw1w" source="_So3AQq1MEeOdBunZhTRw1w" target="_So3AN61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3AOa1MEeOdBunZhTRw1w" name="Body(remove$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3AOq1MEeOdBunZhTRw1w" name="ReturnStatement@7efe7a98" outgoing="_So3AMq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3AO61MEeOdBunZhTRw1w" name="Call(removeImpl$method$1)">
              <argument xmi:id="_So3APK1MEeOdBunZhTRw1w" name="Call(removeImpl$method$1).argument(element)" incoming="_So3AM61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3APa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3APq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3AP61MEeOdBunZhTRw1w" name="Call(removeImpl$method$1).result()" outgoing="_So3ARa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AQK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AQa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3AQq1MEeOdBunZhTRw1w" name="ReturnStatement@7efe7a98.output" outgoing="_So3ANK1MEeOdBunZhTRw1w" incoming="_So3ARa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AQ61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ARK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ARa1MEeOdBunZhTRw1w" source="_So3AP61MEeOdBunZhTRw1w" target="_So3AQq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3ANa1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So3AMa1MEeOdBunZhTRw1w" parameter="_So3AK61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3ANq1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So3AM61MEeOdBunZhTRw1w" incoming="_So3AMa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3AN61MEeOdBunZhTRw1w" name="Return" incoming="_So3ANK1MEeOdBunZhTRw1w" parameter="_So3ALq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3AOK1MEeOdBunZhTRw1w" name="Final" incoming="_So3AMq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3ARq1MEeOdBunZhTRw1w" name="removeAll$method$1" specification="_So3Co61MEeOdBunZhTRw1w" group="_So3AVa1MEeOdBunZhTRw1w" node="_So3AUa1MEeOdBunZhTRw1w _So3AUq1MEeOdBunZhTRw1w _So3AU61MEeOdBunZhTRw1w _So3AVK1MEeOdBunZhTRw1w _So3AVa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AR61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ASK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ASa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3ASq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AS61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ATK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ATa1MEeOdBunZhTRw1w" source="_So3AUa1MEeOdBunZhTRw1w" target="_So3AUq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3ATq1MEeOdBunZhTRw1w" source="_So3AVq1MEeOdBunZhTRw1w" target="_So3AVK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AT61MEeOdBunZhTRw1w" source="_So3AUq1MEeOdBunZhTRw1w" target="_So3AWK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AUK1MEeOdBunZhTRw1w" source="_So3AXq1MEeOdBunZhTRw1w" target="_So3AU61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3AVa1MEeOdBunZhTRw1w" name="Body(removeAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3AVq1MEeOdBunZhTRw1w" name="ReturnStatement@3aa101a7" outgoing="_So3ATq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3AV61MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1)">
              <argument xmi:id="_So3AWK1MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1).argument(seq)" incoming="_So3AT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AWa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AWq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So3AW61MEeOdBunZhTRw1w" name="Call(removeAllImpl$method$1).result()" outgoing="_So3AYa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AXK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AXa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3AXq1MEeOdBunZhTRw1w" name="ReturnStatement@3aa101a7.output" outgoing="_So3AUK1MEeOdBunZhTRw1w" incoming="_So3AYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AX61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AYK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AYa1MEeOdBunZhTRw1w" source="_So3AW61MEeOdBunZhTRw1w" target="_So3AXq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3AUa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So3ATa1MEeOdBunZhTRw1w" parameter="_So3AR61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3AUq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So3AT61MEeOdBunZhTRw1w" incoming="_So3ATa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3AU61MEeOdBunZhTRw1w" name="Return" incoming="_So3AUK1MEeOdBunZhTRw1w" parameter="_So3ASq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3AVK1MEeOdBunZhTRw1w" name="Final" incoming="_So3ATq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3AYq1MEeOdBunZhTRw1w" name="removeAt$method$1" specification="_So3Cqq1MEeOdBunZhTRw1w" group="_So3Aca1MEeOdBunZhTRw1w" node="_So3Aba1MEeOdBunZhTRw1w _So3Abq1MEeOdBunZhTRw1w _So3Ab61MEeOdBunZhTRw1w _So3AcK1MEeOdBunZhTRw1w _So3Aca1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AY61MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AZK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AZa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3AZq1MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AZ61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AaK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Aaa1MEeOdBunZhTRw1w" source="_So3Aba1MEeOdBunZhTRw1w" target="_So3Abq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3Aaq1MEeOdBunZhTRw1w" source="_So3Acq1MEeOdBunZhTRw1w" target="_So3AcK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Aa61MEeOdBunZhTRw1w" source="_So3Abq1MEeOdBunZhTRw1w" target="_So3AdK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AbK1MEeOdBunZhTRw1w" source="_So3Ajq1MEeOdBunZhTRw1w" target="_So3Ab61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3Aca1MEeOdBunZhTRw1w" name="Body(removeAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3Acq1MEeOdBunZhTRw1w" name="ReturnStatement@66f40ddf" outgoing="_So3Aaq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3Ac61MEeOdBunZhTRw1w" name="Call(removeAtImpl$method$1)">
              <argument xmi:id="_So3AdK1MEeOdBunZhTRw1w" name="Call(removeAtImpl$method$1).argument(index)" incoming="_So3Aa61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ada1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Adq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3Ad61MEeOdBunZhTRw1w" name="Call(removeAtImpl$method$1).result()" outgoing="_So3Aka1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AeK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Aea1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-removeAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So3Aeq1MEeOdBunZhTRw1w" name="CastExpression@1b082505" mode="parallel" outputElement="_So3Aja1MEeOdBunZhTRw1w" inputElement="_So3AjK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So3Ae61MEeOdBunZhTRw1w" name="Merge(CastExpression@1b082505.operand)" outgoing="_So3Ai61MEeOdBunZhTRw1w" incoming="_So3AiK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So3AfK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                <object xmi:id="_So3Afa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So3Aha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Afq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Af61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So3AgK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So3Ah61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Aga1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Agq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So3Ag61MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So3Aha1MEeOdBunZhTRw1w _So3Ahq1MEeOdBunZhTRw1w" incoming="_So3Aiq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So3AhK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So3AiK1MEeOdBunZhTRw1w" incoming="_So3Ahq1MEeOdBunZhTRw1w _So3Ah61MEeOdBunZhTRw1w" decisionInputFlow="_So3Ah61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Aha1MEeOdBunZhTRw1w" source="_So3Ag61MEeOdBunZhTRw1w" target="_So3Afa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Ahq1MEeOdBunZhTRw1w" source="_So3Ag61MEeOdBunZhTRw1w" target="_So3AhK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Ah61MEeOdBunZhTRw1w" source="_So3AgK1MEeOdBunZhTRw1w" target="_So3AhK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AiK1MEeOdBunZhTRw1w" source="_So3AhK1MEeOdBunZhTRw1w" target="_So3Ae61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3Aia1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Aiq1MEeOdBunZhTRw1w" source="_So3AjK1MEeOdBunZhTRw1w" target="_So3Ag61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Ai61MEeOdBunZhTRw1w" source="_So3Ae61MEeOdBunZhTRw1w" target="_So3Aja1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So3AjK1MEeOdBunZhTRw1w" name="CastExpression@1b082505.inputElement" outgoing="_So3Aiq1MEeOdBunZhTRw1w" incoming="_So3Aka1MEeOdBunZhTRw1w" regionAsInput="_So3Aeq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So3Aja1MEeOdBunZhTRw1w" name="CastExpression@1b082505.outputElement" outgoing="_So3Akq1MEeOdBunZhTRw1w" incoming="_So3Ai61MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So3Aeq1MEeOdBunZhTRw1w"/>
            <structuredNodeOutput xmi:id="_So3Ajq1MEeOdBunZhTRw1w" name="ReturnStatement@66f40ddf.output" outgoing="_So3AbK1MEeOdBunZhTRw1w" incoming="_So3Akq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Aj61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AkK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Aka1MEeOdBunZhTRw1w" source="_So3Ad61MEeOdBunZhTRw1w" target="_So3AjK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Akq1MEeOdBunZhTRw1w" source="_So3Aja1MEeOdBunZhTRw1w" target="_So3Ajq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Aba1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So3Aaa1MEeOdBunZhTRw1w" parameter="_So3AY61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3Abq1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So3Aa61MEeOdBunZhTRw1w" incoming="_So3Aaa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Ab61MEeOdBunZhTRw1w" name="Return" incoming="_So3AbK1MEeOdBunZhTRw1w" parameter="_So3AZq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3AcK1MEeOdBunZhTRw1w" name="Final" incoming="_So3Aaq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3Ak61MEeOdBunZhTRw1w" name="removeOne$method$1" specification="_So3Csa1MEeOdBunZhTRw1w" group="_So3Aoq1MEeOdBunZhTRw1w" node="_So3Anq1MEeOdBunZhTRw1w _So3An61MEeOdBunZhTRw1w _So3AoK1MEeOdBunZhTRw1w _So3Aoa1MEeOdBunZhTRw1w _So3Aoq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AlK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ala1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Alq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Al61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AmK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ama1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Amq1MEeOdBunZhTRw1w" source="_So3Anq1MEeOdBunZhTRw1w" target="_So3An61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3Am61MEeOdBunZhTRw1w" source="_So3Ao61MEeOdBunZhTRw1w" target="_So3Aoa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AnK1MEeOdBunZhTRw1w" source="_So3An61MEeOdBunZhTRw1w" target="_So3Apa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Ana1MEeOdBunZhTRw1w" source="_So3Aq61MEeOdBunZhTRw1w" target="_So3AoK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3Aoq1MEeOdBunZhTRw1w" name="Body(removeOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3Ao61MEeOdBunZhTRw1w" name="ReturnStatement@6e88a13e" outgoing="_So3Am61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3ApK1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1)">
              <argument xmi:id="_So3Apa1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1).argument(element)" incoming="_So3AnK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Apq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ap61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3AqK1MEeOdBunZhTRw1w" name="Call(removeOneImpl$method$1).result()" outgoing="_So3Arq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Aqa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Aqq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-removeOneImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3Aq61MEeOdBunZhTRw1w" name="ReturnStatement@6e88a13e.output" outgoing="_So3Ana1MEeOdBunZhTRw1w" incoming="_So3Arq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ArK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ara1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Arq1MEeOdBunZhTRw1w" source="_So3AqK1MEeOdBunZhTRw1w" target="_So3Aq61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Anq1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So3Amq1MEeOdBunZhTRw1w" parameter="_So3AlK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3An61MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So3AnK1MEeOdBunZhTRw1w" incoming="_So3Amq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3AoK1MEeOdBunZhTRw1w" name="Return" incoming="_So3Ana1MEeOdBunZhTRw1w" parameter="_So3Al61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3Aoa1MEeOdBunZhTRw1w" name="Final" incoming="_So3Am61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3Ar61MEeOdBunZhTRw1w" name="replace$method$1" specification="_So3l4q1MEeOdBunZhTRw1w" group="_So3Axa1MEeOdBunZhTRw1w" node="_So3Av61MEeOdBunZhTRw1w _So3AwK1MEeOdBunZhTRw1w _So3Awa1MEeOdBunZhTRw1w _So3Awq1MEeOdBunZhTRw1w _So3Aw61MEeOdBunZhTRw1w _So3AxK1MEeOdBunZhTRw1w _So3Axa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3AsK1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Asa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Asq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3As61MEeOdBunZhTRw1w" name="newElement" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AtK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ata1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Atq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3At61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3AuK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Aua1MEeOdBunZhTRw1w" source="_So3Av61MEeOdBunZhTRw1w" target="_So3AwK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Auq1MEeOdBunZhTRw1w" source="_So3Awa1MEeOdBunZhTRw1w" target="_So3Awq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3Au61MEeOdBunZhTRw1w" source="_So3Axq1MEeOdBunZhTRw1w" target="_So3AxK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3AvK1MEeOdBunZhTRw1w" source="_So3AwK1MEeOdBunZhTRw1w" target="_So3AyK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Ava1MEeOdBunZhTRw1w" source="_So3Awq1MEeOdBunZhTRw1w" target="_So3Ay61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Avq1MEeOdBunZhTRw1w" source="_So3A0a1MEeOdBunZhTRw1w" target="_So3Aw61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3Axa1MEeOdBunZhTRw1w" name="Body(replace$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3Axq1MEeOdBunZhTRw1w" name="ReturnStatement@41e5484b" outgoing="_So3Au61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3Ax61MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1)">
              <argument xmi:id="_So3AyK1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).argument(element)" incoming="_So3AvK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Aya1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ayq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3Ay61MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).argument(newElement)" incoming="_So3Ava1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3AzK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Aza1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3Azq1MEeOdBunZhTRw1w" name="Call(replaceImpl$method$1).result()" outgoing="_So3A1K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Az61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A0K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3A0a1MEeOdBunZhTRw1w" name="ReturnStatement@41e5484b.output" outgoing="_So3Avq1MEeOdBunZhTRw1w" incoming="_So3A1K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A0q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A061MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3A1K1MEeOdBunZhTRw1w" source="_So3Azq1MEeOdBunZhTRw1w" target="_So3A0a1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Av61MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So3Aua1MEeOdBunZhTRw1w" parameter="_So3AsK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3AwK1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So3AvK1MEeOdBunZhTRw1w" incoming="_So3Aua1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Awa1MEeOdBunZhTRw1w" name="Input(newElement)" outgoing="_So3Auq1MEeOdBunZhTRw1w" parameter="_So3As61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3Awq1MEeOdBunZhTRw1w" name="Fork(newElement)" outgoing="_So3Ava1MEeOdBunZhTRw1w" incoming="_So3Auq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Aw61MEeOdBunZhTRw1w" name="Return" incoming="_So3Avq1MEeOdBunZhTRw1w" parameter="_So3Atq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3AxK1MEeOdBunZhTRw1w" name="Final" incoming="_So3Au61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3A1a1MEeOdBunZhTRw1w" name="replaceAt$method$1" specification="_So3l7K1MEeOdBunZhTRw1w" group="_So3A661MEeOdBunZhTRw1w" node="_So3A5a1MEeOdBunZhTRw1w _So3A5q1MEeOdBunZhTRw1w _So3A561MEeOdBunZhTRw1w _So3A6K1MEeOdBunZhTRw1w _So3A6a1MEeOdBunZhTRw1w _So3A6q1MEeOdBunZhTRw1w _So3A661MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3A1q1MEeOdBunZhTRw1w" name="index">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A161MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A2K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3A2a1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A2q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A261MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3A3K1MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A3a1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A3q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3A361MEeOdBunZhTRw1w" source="_So3A5a1MEeOdBunZhTRw1w" target="_So3A5q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3A4K1MEeOdBunZhTRw1w" source="_So3A561MEeOdBunZhTRw1w" target="_So3A6K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3A4a1MEeOdBunZhTRw1w" source="_So3A7K1MEeOdBunZhTRw1w" target="_So3A6q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3A4q1MEeOdBunZhTRw1w" source="_So3A5q1MEeOdBunZhTRw1w" target="_So3A7q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3A461MEeOdBunZhTRw1w" source="_So3A6K1MEeOdBunZhTRw1w" target="_So3A8a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3A5K1MEeOdBunZhTRw1w" source="_So3BC61MEeOdBunZhTRw1w" target="_So3A6a1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3A661MEeOdBunZhTRw1w" name="Body(replaceAt$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3A7K1MEeOdBunZhTRw1w" name="ReturnStatement@1197c2dd" outgoing="_So3A4a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3A7a1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1)">
              <argument xmi:id="_So3A7q1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1).argument(index)" incoming="_So3A4q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A761MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A8K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3A8a1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1).argument(element)" incoming="_So3A461MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A8q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A861MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3A9K1MEeOdBunZhTRw1w" name="Call(replaceAtImpl$method$1).result()" outgoing="_So3BDq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A9a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A9q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#OrderedCollectionImpl-replaceAtImplmethod1"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So3A961MEeOdBunZhTRw1w" name="CastExpression@4f3ed32a" mode="parallel" outputElement="_So3BCq1MEeOdBunZhTRw1w" inputElement="_So3BCa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So3A-K1MEeOdBunZhTRw1w" name="Merge(CastExpression@4f3ed32a.operand)" outgoing="_So3BCK1MEeOdBunZhTRw1w" incoming="_So3BBa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So3A-a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                <object xmi:id="_So3A-q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So3BAq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A-61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A_K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So3A_a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So3BBK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3A_q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3A_61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So3BAK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So3BAq1MEeOdBunZhTRw1w _So3BA61MEeOdBunZhTRw1w" incoming="_So3BB61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So3BAa1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So3BBa1MEeOdBunZhTRw1w" incoming="_So3BA61MEeOdBunZhTRw1w _So3BBK1MEeOdBunZhTRw1w" decisionInputFlow="_So3BBK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BAq1MEeOdBunZhTRw1w" source="_So3BAK1MEeOdBunZhTRw1w" target="_So3A-q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BA61MEeOdBunZhTRw1w" source="_So3BAK1MEeOdBunZhTRw1w" target="_So3BAa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BBK1MEeOdBunZhTRw1w" source="_So3A_a1MEeOdBunZhTRw1w" target="_So3BAa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BBa1MEeOdBunZhTRw1w" source="_So3BAa1MEeOdBunZhTRw1w" target="_So3A-K1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3BBq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BB61MEeOdBunZhTRw1w" source="_So3BCa1MEeOdBunZhTRw1w" target="_So3BAK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BCK1MEeOdBunZhTRw1w" source="_So3A-K1MEeOdBunZhTRw1w" target="_So3BCq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So3BCa1MEeOdBunZhTRw1w" name="CastExpression@4f3ed32a.inputElement" outgoing="_So3BB61MEeOdBunZhTRw1w" incoming="_So3BDq1MEeOdBunZhTRw1w" regionAsInput="_So3A961MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So3BCq1MEeOdBunZhTRw1w" name="CastExpression@4f3ed32a.outputElement" outgoing="_So3BD61MEeOdBunZhTRw1w" incoming="_So3BCK1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So3A961MEeOdBunZhTRw1w"/>
            <structuredNodeOutput xmi:id="_So3BC61MEeOdBunZhTRw1w" name="ReturnStatement@1197c2dd.output" outgoing="_So3A5K1MEeOdBunZhTRw1w" incoming="_So3BD61MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BDK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BDa1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BDq1MEeOdBunZhTRw1w" source="_So3A9K1MEeOdBunZhTRw1w" target="_So3BCa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BD61MEeOdBunZhTRw1w" source="_So3BCq1MEeOdBunZhTRw1w" target="_So3BC61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3A5a1MEeOdBunZhTRw1w" name="Input(index)" outgoing="_So3A361MEeOdBunZhTRw1w" parameter="_So3A1q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3A5q1MEeOdBunZhTRw1w" name="Fork(index)" outgoing="_So3A4q1MEeOdBunZhTRw1w" incoming="_So3A361MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3A561MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So3A4K1MEeOdBunZhTRw1w" parameter="_So3A2a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3A6K1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So3A461MEeOdBunZhTRw1w" incoming="_So3A4K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3A6a1MEeOdBunZhTRw1w" name="Return" incoming="_So3A5K1MEeOdBunZhTRw1w" parameter="_So3A3K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3A6q1MEeOdBunZhTRw1w" name="Final" incoming="_So3A4a1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3BEK1MEeOdBunZhTRw1w" name="replaceOne$method$1" specification="_So3l9q1MEeOdBunZhTRw1w" group="_So3BJq1MEeOdBunZhTRw1w" node="_So3BIK1MEeOdBunZhTRw1w _So3BIa1MEeOdBunZhTRw1w _So3BIq1MEeOdBunZhTRw1w _So3BI61MEeOdBunZhTRw1w _So3BJK1MEeOdBunZhTRw1w _So3BJa1MEeOdBunZhTRw1w _So3BJq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3BEa1MEeOdBunZhTRw1w" name="element" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BEq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BE61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3BFK1MEeOdBunZhTRw1w" name="newElement" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BFa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BFq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3BF61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BGK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BGa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BGq1MEeOdBunZhTRw1w" source="_So3BIK1MEeOdBunZhTRw1w" target="_So3BIa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BG61MEeOdBunZhTRw1w" source="_So3BIq1MEeOdBunZhTRw1w" target="_So3BI61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3BHK1MEeOdBunZhTRw1w" source="_So3BJ61MEeOdBunZhTRw1w" target="_So3BJa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BHa1MEeOdBunZhTRw1w" source="_So3BIa1MEeOdBunZhTRw1w" target="_So3BKa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BHq1MEeOdBunZhTRw1w" source="_So3BI61MEeOdBunZhTRw1w" target="_So3BLK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BH61MEeOdBunZhTRw1w" source="_So3BMq1MEeOdBunZhTRw1w" target="_So3BJK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3BJq1MEeOdBunZhTRw1w" name="Body(replaceOne$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3BJ61MEeOdBunZhTRw1w" name="ReturnStatement@792a89f4" outgoing="_So3BHK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3BKK1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1)">
              <argument xmi:id="_So3BKa1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).argument(element)" incoming="_So3BHa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BKq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BK61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3BLK1MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).argument(newElement)" incoming="_So3BHq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BLa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BLq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3BL61MEeOdBunZhTRw1w" name="Call(replaceOneImpl$method$1).result()" outgoing="_So3BNa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BMK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BMa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-replaceOneImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3BMq1MEeOdBunZhTRw1w" name="ReturnStatement@792a89f4.output" outgoing="_So3BH61MEeOdBunZhTRw1w" incoming="_So3BNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BM61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BNK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BNa1MEeOdBunZhTRw1w" source="_So3BL61MEeOdBunZhTRw1w" target="_So3BMq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BIK1MEeOdBunZhTRw1w" name="Input(element)" outgoing="_So3BGq1MEeOdBunZhTRw1w" parameter="_So3BEa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3BIa1MEeOdBunZhTRw1w" name="Fork(element)" outgoing="_So3BHa1MEeOdBunZhTRw1w" incoming="_So3BGq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BIq1MEeOdBunZhTRw1w" name="Input(newElement)" outgoing="_So3BG61MEeOdBunZhTRw1w" parameter="_So3BFK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3BI61MEeOdBunZhTRw1w" name="Fork(newElement)" outgoing="_So3BHq1MEeOdBunZhTRw1w" incoming="_So3BG61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BJK1MEeOdBunZhTRw1w" name="Return" incoming="_So3BH61MEeOdBunZhTRw1w" parameter="_So3BF61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3BJa1MEeOdBunZhTRw1w" name="Final" incoming="_So3BHK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3BNq1MEeOdBunZhTRw1w" name="retainAll$method$1" specification="_So3mAK1MEeOdBunZhTRw1w" group="_So3BRa1MEeOdBunZhTRw1w" node="_So3BQa1MEeOdBunZhTRw1w _So3BQq1MEeOdBunZhTRw1w _So3BQ61MEeOdBunZhTRw1w _So3BRK1MEeOdBunZhTRw1w _So3BRa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3BN61MEeOdBunZhTRw1w" name="seq" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BOK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BOa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3BOq1MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BO61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BPK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BPa1MEeOdBunZhTRw1w" source="_So3BQa1MEeOdBunZhTRw1w" target="_So3BQq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3BPq1MEeOdBunZhTRw1w" source="_So3BRq1MEeOdBunZhTRw1w" target="_So3BRK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BP61MEeOdBunZhTRw1w" source="_So3BQq1MEeOdBunZhTRw1w" target="_So3BSK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BQK1MEeOdBunZhTRw1w" source="_So3BTq1MEeOdBunZhTRw1w" target="_So3BQ61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3BRa1MEeOdBunZhTRw1w" name="Body(retainAll$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3BRq1MEeOdBunZhTRw1w" name="ReturnStatement@7555d4d6" outgoing="_So3BPq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3BR61MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1)">
              <argument xmi:id="_So3BSK1MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1).argument(seq)" incoming="_So3BP61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BSa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BSq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So3BS61MEeOdBunZhTRw1w" name="Call(retainAllImpl$method$1).result()" outgoing="_So3BUa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BTK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BTa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-retainAllImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3BTq1MEeOdBunZhTRw1w" name="ReturnStatement@7555d4d6.output" outgoing="_So3BQK1MEeOdBunZhTRw1w" incoming="_So3BUa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BT61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BUK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BUa1MEeOdBunZhTRw1w" source="_So3BS61MEeOdBunZhTRw1w" target="_So3BTq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BQa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So3BPa1MEeOdBunZhTRw1w" parameter="_So3BN61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3BQq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So3BP61MEeOdBunZhTRw1w" incoming="_So3BPa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BQ61MEeOdBunZhTRw1w" name="Return" incoming="_So3BQK1MEeOdBunZhTRw1w" parameter="_So3BOq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3BRK1MEeOdBunZhTRw1w" name="Final" incoming="_So3BPq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3BUq1MEeOdBunZhTRw1w" name="size$method$1" specification="_So3mB61MEeOdBunZhTRw1w" group="_So3BWq1MEeOdBunZhTRw1w" node="_So3BWK1MEeOdBunZhTRw1w _So3BWa1MEeOdBunZhTRw1w _So3BWq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3BU61MEeOdBunZhTRw1w" name="" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BVK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BVa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3BVq1MEeOdBunZhTRw1w" source="_So3BW61MEeOdBunZhTRw1w" target="_So3BWa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BV61MEeOdBunZhTRw1w" source="_So3BYK1MEeOdBunZhTRw1w" target="_So3BWK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3BWq1MEeOdBunZhTRw1w" name="Body(size$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3BW61MEeOdBunZhTRw1w" name="ReturnStatement@194cb4d6" outgoing="_So3BVq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3BXK1MEeOdBunZhTRw1w" name="Call(sizeImpl$method$1)">
              <result xmi:id="_So3BXa1MEeOdBunZhTRw1w" name="Call(sizeImpl$method$1).result()" outgoing="_So3BY61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BXq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BX61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#CollectionImpl-sizeImplmethod1"/>
            </node>
            <structuredNodeOutput xmi:id="_So3BYK1MEeOdBunZhTRw1w" name="ReturnStatement@194cb4d6.output" outgoing="_So3BV61MEeOdBunZhTRw1w" incoming="_So3BY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BYa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BYq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BY61MEeOdBunZhTRw1w" source="_So3BXa1MEeOdBunZhTRw1w" target="_So3BYK1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BWK1MEeOdBunZhTRw1w" name="Return" incoming="_So3BV61MEeOdBunZhTRw1w" parameter="_So3BU61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3BWa1MEeOdBunZhTRw1w" name="Final" incoming="_So3BVq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3BZK1MEeOdBunZhTRw1w" name="subList$method$1" specification="_So3mC61MEeOdBunZhTRw1w" group="_So3Beq1MEeOdBunZhTRw1w" node="_So3BdK1MEeOdBunZhTRw1w _So3Bda1MEeOdBunZhTRw1w _So3Bdq1MEeOdBunZhTRw1w _So3Bd61MEeOdBunZhTRw1w _So3BeK1MEeOdBunZhTRw1w _So3Bea1MEeOdBunZhTRw1w _So3Beq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3BZa1MEeOdBunZhTRw1w" name="lower">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BZq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BZ61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3BaK1MEeOdBunZhTRw1w" name="upper">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Baa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Baq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Ba61MEeOdBunZhTRw1w" name="" type="_So1LKq1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BbK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bba1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bbq1MEeOdBunZhTRw1w" source="_So3BdK1MEeOdBunZhTRw1w" target="_So3Bda1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bb61MEeOdBunZhTRw1w" source="_So3Bdq1MEeOdBunZhTRw1w" target="_So3Bd61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3BcK1MEeOdBunZhTRw1w" source="_So3Be61MEeOdBunZhTRw1w" target="_So3Bea1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bca1MEeOdBunZhTRw1w" source="_So3Bda1MEeOdBunZhTRw1w" target="_So3BjK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bcq1MEeOdBunZhTRw1w" source="_So3Bd61MEeOdBunZhTRw1w" target="_So3Bj61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bc61MEeOdBunZhTRw1w" source="_So3Bqq1MEeOdBunZhTRw1w" target="_So3BeK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3Beq1MEeOdBunZhTRw1w" name="Body(subList$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3Be61MEeOdBunZhTRw1w" name="ReturnStatement@1792a0c1" outgoing="_So3BcK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So3BfK1MEeOdBunZhTRw1w" name="Call(List)" incoming="_So3Br61MEeOdBunZhTRw1w" operation="_So3CKa1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3Bfa1MEeOdBunZhTRw1w" name="Call(List).argument(seq)" incoming="_So3Brq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bfq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bf61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So3BgK1MEeOdBunZhTRw1w" name="Call(List).result()" outgoing="_So3BsK1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bga1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bgq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <target xmi:id="_So3Bg61MEeOdBunZhTRw1w" name="Call(List).target" incoming="_So3Bra1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BhK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bha1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:CreateObjectAction" xmi:id="_So3Bhq1MEeOdBunZhTRw1w" name="Create($$Impl$List__Impl$List$T__)" classifier="_So2bC61MEeOdBunZhTRw1w">
              <result xmi:id="_So3Bh61MEeOdBunZhTRw1w" name="Create($$List__Impl$List$T__).result" outgoing="_So3Bra1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BiK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bia1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3Biq1MEeOdBunZhTRw1w" name="Tuple@51575d48" outgoing="_So3Br61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3Bi61MEeOdBunZhTRw1w" name="Call(subListImpl$method$1)">
                <argument xmi:id="_So3BjK1MEeOdBunZhTRw1w" name="Call(subListImpl$method$1).argument(lower)" incoming="_So3Bca1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bja1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bjq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_So3Bj61MEeOdBunZhTRw1w" name="Call(subListImpl$method$1).argument(upper)" incoming="_So3Bcq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BkK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bka1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So3Bkq1MEeOdBunZhTRw1w" name="Call(subListImpl$method$1).result()" outgoing="_So3Bqa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bk61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BlK1MEeOdBunZhTRw1w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/CollectionClassesImpl.library.uml#ListImpl-subListImplmethod1"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_So3Bla1MEeOdBunZhTRw1w" name="CastExpression@18fde079" mode="parallel" outputElement="_So3BqK1MEeOdBunZhTRw1w" inputElement="_So3Bp61MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_So3Blq1MEeOdBunZhTRw1w" name="Merge(CastExpression@18fde079.operand)" outgoing="_So3Bpq1MEeOdBunZhTRw1w" incoming="_So3Bo61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So3Bl61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                  <object xmi:id="_So3BmK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So3BoK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bma1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bmq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_So3Bm61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So3Boq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BnK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bna1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_So3Bnq1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So3BoK1MEeOdBunZhTRw1w _So3Boa1MEeOdBunZhTRw1w" incoming="_So3Bpa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_So3Bn61MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So3Bo61MEeOdBunZhTRw1w" incoming="_So3Boa1MEeOdBunZhTRw1w _So3Boq1MEeOdBunZhTRw1w" decisionInputFlow="_So3Boq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BoK1MEeOdBunZhTRw1w" source="_So3Bnq1MEeOdBunZhTRw1w" target="_So3BmK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Boa1MEeOdBunZhTRw1w" source="_So3Bnq1MEeOdBunZhTRw1w" target="_So3Bn61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Boq1MEeOdBunZhTRw1w" source="_So3Bm61MEeOdBunZhTRw1w" target="_So3Bn61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bo61MEeOdBunZhTRw1w" source="_So3Bn61MEeOdBunZhTRw1w" target="_So3Blq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3BpK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bpa1MEeOdBunZhTRw1w" source="_So3Bp61MEeOdBunZhTRw1w" target="_So3Bnq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bpq1MEeOdBunZhTRw1w" source="_So3Blq1MEeOdBunZhTRw1w" target="_So3BqK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_So3Bp61MEeOdBunZhTRw1w" name="CastExpression@18fde079.inputElement" outgoing="_So3Bpa1MEeOdBunZhTRw1w" incoming="_So3Bqa1MEeOdBunZhTRw1w" regionAsInput="_So3Bla1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_So3BqK1MEeOdBunZhTRw1w" name="CastExpression@18fde079.outputElement" outgoing="_So3Brq1MEeOdBunZhTRw1w" incoming="_So3Bpq1MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So3Bla1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bqa1MEeOdBunZhTRw1w" source="_So3Bkq1MEeOdBunZhTRw1w" target="_So3Bp61MEeOdBunZhTRw1w"/>
            </node>
            <structuredNodeOutput xmi:id="_So3Bqq1MEeOdBunZhTRw1w" name="ReturnStatement@1792a0c1.output" outgoing="_So3Bc61MEeOdBunZhTRw1w" incoming="_So3BsK1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bq61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BrK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Bra1MEeOdBunZhTRw1w" source="_So3Bh61MEeOdBunZhTRw1w" target="_So3Bg61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Brq1MEeOdBunZhTRw1w" source="_So3BqK1MEeOdBunZhTRw1w" target="_So3Bfa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So3Br61MEeOdBunZhTRw1w" source="_So3Biq1MEeOdBunZhTRw1w" target="_So3BfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3BsK1MEeOdBunZhTRw1w" source="_So3BgK1MEeOdBunZhTRw1w" target="_So3Bqq1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BdK1MEeOdBunZhTRw1w" name="Input(lower)" outgoing="_So3Bbq1MEeOdBunZhTRw1w" parameter="_So3BZa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3Bda1MEeOdBunZhTRw1w" name="Fork(lower)" outgoing="_So3Bca1MEeOdBunZhTRw1w" incoming="_So3Bbq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Bdq1MEeOdBunZhTRw1w" name="Input(upper)" outgoing="_So3Bb61MEeOdBunZhTRw1w" parameter="_So3BaK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_So3Bd61MEeOdBunZhTRw1w" name="Fork(upper)" outgoing="_So3Bcq1MEeOdBunZhTRw1w" incoming="_So3Bb61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3BeK1MEeOdBunZhTRw1w" name="Return" incoming="_So3Bc61MEeOdBunZhTRw1w" parameter="_So3Ba61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3Bea1MEeOdBunZhTRw1w" name="Final" incoming="_So3BcK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3Bsa1MEeOdBunZhTRw1w" name="toSequence$method$1" specification="_So3mFa1MEeOdBunZhTRw1w" group="_So3Bua1MEeOdBunZhTRw1w" node="_So3Bt61MEeOdBunZhTRw1w _So3BuK1MEeOdBunZhTRw1w _So3Bua1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Bsq1MEeOdBunZhTRw1w" name="" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bs61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3BtK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3Bta1MEeOdBunZhTRw1w" source="_So3Buq1MEeOdBunZhTRw1w" target="_So3BuK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_So3Btq1MEeOdBunZhTRw1w" source="_So3B2q1MEeOdBunZhTRw1w" target="_So3Bt61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_So3Bua1MEeOdBunZhTRw1w" name="Body(toSequence$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3Buq1MEeOdBunZhTRw1w" name="ReturnStatement@56b2d6bd" outgoing="_So3Bta1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So3Bu61MEeOdBunZhTRw1w" name="Call(getContent)">
              <result xmi:id="_So3BvK1MEeOdBunZhTRw1w" name="Call(getContent).result()" outgoing="_So3B3q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bva1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bvq1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-getContent"/>
              <target xmi:id="_So3Bv61MEeOdBunZhTRw1w" name="Call(getContent).target" incoming="_So3B3a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BwK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bwa1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_So3Bwq1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_So3Bw61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So3B3a1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3BxK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bxa1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_So3Bxq1MEeOdBunZhTRw1w" name="CastExpression@1e49f598" mode="parallel" outputElement="_So3B2a1MEeOdBunZhTRw1w" inputElement="_So3B2K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:MergeNode" xmi:id="_So3Bx61MEeOdBunZhTRw1w" name="Merge(CastExpression@1e49f598.operand)" outgoing="_So3B161MEeOdBunZhTRw1w" incoming="_So3B1K1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So3ByK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T)" classifier="_So1KHK1MEeOdBunZhTRw1w">
                <object xmi:id="_So3Bya1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).object" incoming="_So3B0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Byq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3By61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So3BzK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(T).result" outgoing="_So3B061MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Bza1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Bzq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_So3Bz61MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(T).object)" outgoing="_So3B0a1MEeOdBunZhTRw1w _So3B0q1MEeOdBunZhTRw1w" incoming="_So3B1q1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So3B0K1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(T).result)" outgoing="_So3B1K1MEeOdBunZhTRw1w" incoming="_So3B0q1MEeOdBunZhTRw1w _So3B061MEeOdBunZhTRw1w" decisionInputFlow="_So3B061MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B0a1MEeOdBunZhTRw1w" source="_So3Bz61MEeOdBunZhTRw1w" target="_So3Bya1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B0q1MEeOdBunZhTRw1w" source="_So3Bz61MEeOdBunZhTRw1w" target="_So3B0K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B061MEeOdBunZhTRw1w" source="_So3BzK1MEeOdBunZhTRw1w" target="_So3B0K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B1K1MEeOdBunZhTRw1w" source="_So3B0K1MEeOdBunZhTRw1w" target="_So3Bx61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3B1a1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B1q1MEeOdBunZhTRw1w" source="_So3B2K1MEeOdBunZhTRw1w" target="_So3Bz61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B161MEeOdBunZhTRw1w" source="_So3Bx61MEeOdBunZhTRw1w" target="_So3B2a1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So3B2K1MEeOdBunZhTRw1w" name="CastExpression@1e49f598.inputElement" outgoing="_So3B1q1MEeOdBunZhTRw1w" incoming="_So3B3q1MEeOdBunZhTRw1w" regionAsInput="_So3Bxq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_So3B2a1MEeOdBunZhTRw1w" name="CastExpression@1e49f598.outputElement" outgoing="_So3B361MEeOdBunZhTRw1w" incoming="_So3B161MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" regionAsOutput="_So3Bxq1MEeOdBunZhTRw1w"/>
            <structuredNodeOutput xmi:id="_So3B2q1MEeOdBunZhTRw1w" name="ReturnStatement@56b2d6bd.output" outgoing="_So3Btq1MEeOdBunZhTRw1w" incoming="_So3B361MEeOdBunZhTRw1w" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B261MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B3K1MEeOdBunZhTRw1w" value="*"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B3a1MEeOdBunZhTRw1w" source="_So3Bw61MEeOdBunZhTRw1w" target="_So3Bv61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B3q1MEeOdBunZhTRw1w" source="_So3BvK1MEeOdBunZhTRw1w" target="_So3B2K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B361MEeOdBunZhTRw1w" source="_So3B2a1MEeOdBunZhTRw1w" target="_So3B2q1MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3Bt61MEeOdBunZhTRw1w" name="Return" incoming="_So3Btq1MEeOdBunZhTRw1w" parameter="_So3Bsq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3BuK1MEeOdBunZhTRw1w" name="Final" incoming="_So3Bta1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_So3B4K1MEeOdBunZhTRw1w" name="List$initialization$1" specification="_So3CKK1MEeOdBunZhTRw1w" group="_So3B4a1MEeOdBunZhTRw1w" node="_So3B4a1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_So3B4a1MEeOdBunZhTRw1w" name="Body(List$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_So3B4q1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_So3B461MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_So3CHa1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B5K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B5a1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So3B5q1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_So3CHq1MEeOdBunZhTRw1w _So3CH61MEeOdBunZhTRw1w _So3CIK1MEeOdBunZhTRw1w" incoming="_So3CHa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3B561MEeOdBunZhTRw1w" name="Initialization" incoming="_So3CJq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So3B6K1MEeOdBunZhTRw1w" name="Call(ListImpl$initialization$1)" outgoing="_So3B_a1MEeOdBunZhTRw1w">
              <operation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-ListImplinitialization1.1"/>
              <target xmi:id="_So3B6a1MEeOdBunZhTRw1w" name="Call(ListImpl$initialization$1).target" incoming="_So3CHq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/CollectionClassesImpl.library.uml#ListImpl"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B6q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B661MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3B7K1MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_So3B_a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3B7a1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_So3B7q1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So3B_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B761MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B8K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_So3B8a1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_So3B8q1MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1)" structuralFeature="_So2bDq1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_So3B861MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1).object" incoming="_So3CH61MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B9K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B9a1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_So3B9q1MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1).result" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B961MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B-K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_So3B-a1MEeOdBunZhTRw1w" name="Write(List$initializationFlag$1).value" incoming="_So3B_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3B-q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3B-61MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3B_K1MEeOdBunZhTRw1w" source="_So3B7q1MEeOdBunZhTRw1w" target="_So3B-a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So3B_a1MEeOdBunZhTRw1w" source="_So3B6K1MEeOdBunZhTRw1w" target="_So3B7K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_So3B_q1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1)" structuralFeature="_So2bDq1MEeOdBunZhTRw1w">
            <object xmi:id="_So3B_61MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).object" incoming="_So3CIK1MEeOdBunZhTRw1w" type="_So2bC61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CAK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CAa1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_So3CAq1MEeOdBunZhTRw1w" name="Read(List$initializationFlag$1).result" outgoing="_So3CIa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CA61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CBK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3CBa1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_So3CBq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_So3CIa1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CB61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CCK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So3CCa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_So3CIq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CCq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CC61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3CDK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_So3CDa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_So3CI61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CDq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CD61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_So3CEK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So3CEa1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_So3CEq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_So3CIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CE61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CFK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So3CFa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_So3CJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CFq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CF61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So3CGK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_So3CI61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CGa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CGq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So3CG61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_So3CJK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So3CHK1MEeOdBunZhTRw1w" name="Decision(Test(List$initializationFlag$1))" outgoing="_So3CJq1MEeOdBunZhTRw1w" incoming="_So3CJK1MEeOdBunZhTRw1w _So3CJa1MEeOdBunZhTRw1w" decisionInputFlow="_So3CJa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CHa1MEeOdBunZhTRw1w" source="_So3B461MEeOdBunZhTRw1w" target="_So3B5q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CHq1MEeOdBunZhTRw1w" source="_So3B5q1MEeOdBunZhTRw1w" target="_So3B6a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CH61MEeOdBunZhTRw1w" source="_So3B5q1MEeOdBunZhTRw1w" target="_So3B861MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CIK1MEeOdBunZhTRw1w" source="_So3B5q1MEeOdBunZhTRw1w" target="_So3B_61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CIa1MEeOdBunZhTRw1w" source="_So3CAq1MEeOdBunZhTRw1w" target="_So3CBq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CIq1MEeOdBunZhTRw1w" source="_So3CCa1MEeOdBunZhTRw1w" target="_So3CEq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CI61MEeOdBunZhTRw1w" source="_So3CDa1MEeOdBunZhTRw1w" target="_So3CGK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So3CJK1MEeOdBunZhTRw1w" source="_So3CG61MEeOdBunZhTRw1w" target="_So3CHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3CJa1MEeOdBunZhTRw1w" source="_So3CFa1MEeOdBunZhTRw1w" target="_So3CHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So3CJq1MEeOdBunZhTRw1w" source="_So3CHK1MEeOdBunZhTRw1w" target="_So3B561MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3CJ61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_So3CKK1MEeOdBunZhTRw1w" name="List$initialization$1" visibility="protected" method="_So3B4K1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So3CKa1MEeOdBunZhTRw1w" name="List" visibility="public" method="_So2bEa1MEeOdBunZhTRw1w" redefinedOperation="_So1LLa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CKq1MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CK61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CLK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CLa1MEeOdBunZhTRw1w" name="" visibility="package" type="_So2bC61MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CLq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CL61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CMK1MEeOdBunZhTRw1w" name="destroy" visibility="public" method="_So2bXa1MEeOdBunZhTRw1w">
        <redefinedOperation href="Libraries/CollectionClassesImpl.library.uml#ListImpl-destroy"/>
        <redefinedOperation href="#_So1LqK1MEeOdBunZhTRw1w"/>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CMa1MEeOdBunZhTRw1w" name="add" visibility="public" method="_So2bX61MEeOdBunZhTRw1w" redefinedOperation="_So1LM61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CMq1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CM61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CNK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CNa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CNq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CN61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3COK1MEeOdBunZhTRw1w" name="addAt" visibility="public" method="_So2be61MEeOdBunZhTRw1w" redefinedOperation="_So1LRa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3COa1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3COq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CO61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CPK1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CPa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CPq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CP61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CQK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CQa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CQq1MEeOdBunZhTRw1w" name="addAll" visibility="public" method="_So2boa1MEeOdBunZhTRw1w" redefinedOperation="_So1LOK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CQ61MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CRK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CRa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CRq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CR61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CSK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CSa1MEeOdBunZhTRw1w" name="addAllAt" visibility="public" method="_So2bva1MEeOdBunZhTRw1w" redefinedOperation="_So1LPq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CSq1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CS61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CTK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CTa1MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CTq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CT61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CUK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CUa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CUq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CU61MEeOdBunZhTRw1w" name="at" visibility="public" method="_So2b461MEeOdBunZhTRw1w" redefinedOperation="_So1LSq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CVK1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CVa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CVq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CV61MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CWK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CWa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CWq1MEeOdBunZhTRw1w" name="clear" visibility="public" method="_So2-8K1MEeOdBunZhTRw1w" redefinedOperation="_So1Lza1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_So3CW61MEeOdBunZhTRw1w" name="count" visibility="public" method="_So2-9K1MEeOdBunZhTRw1w" redefinedOperation="_So1Lz61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CXK1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CXa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CXq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CX61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CYK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CYa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CYq1MEeOdBunZhTRw1w" name="equals" visibility="public" method="_So2_EK1MEeOdBunZhTRw1w" redefinedOperation="_So1LUK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CY61MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CZK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CZa1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CZq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CZ61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CaK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Caa1MEeOdBunZhTRw1w" name="first" visibility="public" method="_So2_LK1MEeOdBunZhTRw1w" redefinedOperation="_So1LVq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Caq1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ca61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CbK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Cba1MEeOdBunZhTRw1w" name="indexOf" visibility="public" method="_So2_U61MEeOdBunZhTRw1w" redefinedOperation="_So1LWq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cbq1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cb61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CcK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Cca1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ccq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cc61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CdK1MEeOdBunZhTRw1w" name="last" visibility="public" method="_So2_b61MEeOdBunZhTRw1w" redefinedOperation="_So1LYK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cda1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cdq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cd61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CeK1MEeOdBunZhTRw1w" name="excludes" visibility="public" method="_So2_lq1MEeOdBunZhTRw1w" redefinedOperation="_So1L3K1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cea1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ceq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ce61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CfK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cfa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cfq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Cf61MEeOdBunZhTRw1w" name="excludesAll" visibility="public" method="_So2_sq1MEeOdBunZhTRw1w" redefinedOperation="_So1L4q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CgK1MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cga1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cgq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Cg61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ChK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cha1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Chq1MEeOdBunZhTRw1w" name="includes" visibility="public" method="_So2_zq1MEeOdBunZhTRw1w" redefinedOperation="_So1L6a1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Ch61MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CiK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cia1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Ciq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ci61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CjK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Cja1MEeOdBunZhTRw1w" name="includesAll" visibility="public" method="_So2_6q1MEeOdBunZhTRw1w" redefinedOperation="_So1L761MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cjq1MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cj61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CkK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Cka1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Ckq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Ck61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3ClK1MEeOdBunZhTRw1w" name="isEmpty" visibility="public" method="_So3ABq1MEeOdBunZhTRw1w" redefinedOperation="_So1L9q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cla1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Clq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cl61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CmK1MEeOdBunZhTRw1w" name="notEmpty" visibility="public" method="_So3AGK1MEeOdBunZhTRw1w" redefinedOperation="_So1L-q1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cma1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cmq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cm61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3CnK1MEeOdBunZhTRw1w" name="remove" visibility="public" method="_So3AKq1MEeOdBunZhTRw1w" redefinedOperation="_So1LZK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cna1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cnq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cn61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3CoK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Coa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Coq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Co61MEeOdBunZhTRw1w" name="removeAll" visibility="public" method="_So3ARq1MEeOdBunZhTRw1w" redefinedOperation="_So1Laa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3CpK1MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cpa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cpq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Cp61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CqK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cqa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Cqq1MEeOdBunZhTRw1w" name="removeAt" visibility="public" method="_So3AYq1MEeOdBunZhTRw1w" redefinedOperation="_So1LdK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Cq61MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3CrK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3Cra1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Crq1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cr61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CsK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3Csa1MEeOdBunZhTRw1w" name="removeOne" visibility="public" method="_So3Ak61MEeOdBunZhTRw1w" redefinedOperation="_So1Lb61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3Csq1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3Cs61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3CtK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3Cta1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l4K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l4a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3l4q1MEeOdBunZhTRw1w" name="replace" visibility="public" method="_So3Ar61MEeOdBunZhTRw1w" redefinedOperation="_So1Leq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3l461MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l5K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l5a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3l5q1MEeOdBunZhTRw1w" name="newElement" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l561MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l6K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3l6a1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l6q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l661MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3l7K1MEeOdBunZhTRw1w" name="replaceAt" visibility="public" method="_So3A1a1MEeOdBunZhTRw1w" redefinedOperation="_So1LiK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3l7a1MEeOdBunZhTRw1w" name="index" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l7q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l761MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3l8K1MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l8a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l8q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3l861MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l9K1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l9a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3l9q1MEeOdBunZhTRw1w" name="replaceOne" visibility="public" method="_So3BEK1MEeOdBunZhTRw1w" redefinedOperation="_So1Lga1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3l961MEeOdBunZhTRw1w" name="element" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l-K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l-a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3l-q1MEeOdBunZhTRw1w" name="newElement" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l-61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l_K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3l_a1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3l_q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3l_61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3mAK1MEeOdBunZhTRw1w" name="retainAll" visibility="public" method="_So3BNq1MEeOdBunZhTRw1w" redefinedOperation="_So1LkK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3mAa1MEeOdBunZhTRw1w" name="seq" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mAq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mA61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3mBK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mBa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mBq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3mB61MEeOdBunZhTRw1w" name="size" visibility="public" method="_So3BUq1MEeOdBunZhTRw1w" redefinedOperation="_So1MIq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3mCK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mCa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mCq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3mC61MEeOdBunZhTRw1w" name="subList" visibility="public" method="_So3BZK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3mDK1MEeOdBunZhTRw1w" name="lower" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mDa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mDq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3mD61MEeOdBunZhTRw1w" name="upper" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mEK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mEa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_So3mEq1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1LKq1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mE61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mFK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_So3mFa1MEeOdBunZhTRw1w" name="toSequence" visibility="public" method="_So3Bsa1MEeOdBunZhTRw1w" redefinedOperation="_So1MJq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_So3mFq1MEeOdBunZhTRw1w" name="" visibility="package" type="_So1KHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mF61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mGK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_So3mGa1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So3mGq1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So3mG61MEeOdBunZhTRw1w" actual="_So1KHK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_0b8k34XREeK2vJIz2pvpWw"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_0b8k3oXREeK2vJIz2pvpWw"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So3mHK1MEeOdBunZhTRw1w" client="_So2bC61MEeOdBunZhTRw1w" supplier="_So3mGa1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So3mHa1MEeOdBunZhTRw1w" name="AssertList" group="_So3mPa1MEeOdBunZhTRw1w" node="_So3mN61MEeOdBunZhTRw1w _So3mOK1MEeOdBunZhTRw1w _So3mOa1MEeOdBunZhTRw1w _So3mOq1MEeOdBunZhTRw1w _So3mO61MEeOdBunZhTRw1w _So3mPK1MEeOdBunZhTRw1w _So3mPa1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_So3mHq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_So3mH61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_So3mIK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_So3mIa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_So3mIq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_So3mI61MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mJK1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mJa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So3mJq1MEeOdBunZhTRw1w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mJ61MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mKK1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So3mKa1MEeOdBunZhTRw1w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mKq1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mK61MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mLK1MEeOdBunZhTRw1w" source="_So3mN61MEeOdBunZhTRw1w" target="_So3mOK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mLa1MEeOdBunZhTRw1w" source="_So3mOa1MEeOdBunZhTRw1w" target="_So3mOq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mLq1MEeOdBunZhTRw1w" source="_So3mO61MEeOdBunZhTRw1w" target="_So3mPK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mL61MEeOdBunZhTRw1w" source="_So3mOK1MEeOdBunZhTRw1w" target="_So3mUK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mMK1MEeOdBunZhTRw1w" source="_So3mOq1MEeOdBunZhTRw1w" target="_So3mWq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mMa1MEeOdBunZhTRw1w" source="_So3mPK1MEeOdBunZhTRw1w" target="_So3mYa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mMq1MEeOdBunZhTRw1w" source="_So3mPK1MEeOdBunZhTRw1w" target="_So3nUa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mM61MEeOdBunZhTRw1w" source="_So3mOq1MEeOdBunZhTRw1w" target="_So3nVK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mNK1MEeOdBunZhTRw1w" source="_So3mOK1MEeOdBunZhTRw1w" target="_So3nV61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mNa1MEeOdBunZhTRw1w" source="_So3mOq1MEeOdBunZhTRw1w" target="_So3nh61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mNq1MEeOdBunZhTRw1w" source="_So3mPK1MEeOdBunZhTRw1w" target="_So3njq1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_So3mPa1MEeOdBunZhTRw1w" name="Body(AssertList)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mPq1MEeOdBunZhTRw1w" name="ExpressionStatement@c1aec96" outgoing="_So3nv61MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mP61MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_So3ma61MEeOdBunZhTRw1w" behavior="_So3oQ61MEeOdBunZhTRw1w">
            <argument xmi:id="_So3mQK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_So3maK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mQa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mQq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_So3mQ61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_So3maa1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mRK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mRa1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_So3mRq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_So3maq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mR61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mSK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mSa1MEeOdBunZhTRw1w" name="Tuple@6def9a1c" outgoing="_So3ma61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3mSq1MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_So3mS61MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;).result" outgoing="_So3mZ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mTK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mTa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_So3mTq1MEeOdBunZhTRw1w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mT61MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_So3mUK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3mL61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mUa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mUq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3mU61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3mZ61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mVK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mVa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3mVq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3maK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mV61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mWK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mWa1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_So4NLK1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3mWq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_So3mMK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mW61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mXK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So3mXa1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_So3maa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mXq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mX61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mYK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_So4NLK1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3mYa1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_So3mMa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mYq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mY61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_So3mZK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_So3maq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mZa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mZq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3mZ61MEeOdBunZhTRw1w" source="_So3mS61MEeOdBunZhTRw1w" target="_So3mU61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3maK1MEeOdBunZhTRw1w" source="_So3mVq1MEeOdBunZhTRw1w" target="_So3mQK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3maa1MEeOdBunZhTRw1w" source="_So3mXa1MEeOdBunZhTRw1w" target="_So3mQ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3maq1MEeOdBunZhTRw1w" source="_So3mZK1MEeOdBunZhTRw1w" target="_So3mRq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So3ma61MEeOdBunZhTRw1w" source="_So3mSa1MEeOdBunZhTRw1w" target="_So3mP61MEeOdBunZhTRw1w"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mbK1MEeOdBunZhTRw1w" name="ForStatement@742b6a61" incoming="_So3nv61MEeOdBunZhTRw1w">
          <node xmi:type="uml:LoopNode" xmi:id="_So3mba1MEeOdBunZhTRw1w" name="Loop(ForStatement@742b6a61)" incoming="_So3nvq1MEeOdBunZhTRw1w" bodyOutput="_So3m9a1MEeOdBunZhTRw1w _So3m-K1MEeOdBunZhTRw1w _So3m-61MEeOdBunZhTRw1w _So3nCK1MEeOdBunZhTRw1w _So3nF61MEeOdBunZhTRw1w _So3nI61MEeOdBunZhTRw1w" bodyPart="_So3mfq1MEeOdBunZhTRw1w _So3mgK1MEeOdBunZhTRw1w _So3nAa1MEeOdBunZhTRw1w _So3nC61MEeOdBunZhTRw1w _So3nEK1MEeOdBunZhTRw1w _So3nGq1MEeOdBunZhTRw1w _So3nH61MEeOdBunZhTRw1w" decider="_So3me61MEeOdBunZhTRw1w" isTestedFirst="true" test="_So3mdK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_So3mbq1MEeOdBunZhTRw1w" name="Fork(ForStatement@742b6a61.loopVariable(expected))" outgoing="_So3nO61MEeOdBunZhTRw1w _So3nPK1MEeOdBunZhTRw1w" incoming="_So3nJ61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_So3mb61MEeOdBunZhTRw1w" name="Fork(ForStatement@742b6a61.loopVariable(list))" outgoing="_So3nOq1MEeOdBunZhTRw1w _So3nPa1MEeOdBunZhTRw1w" incoming="_So3nKK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_So3mcK1MEeOdBunZhTRw1w" name="Fork(ForStatement@742b6a61.loopVariable(label))" outgoing="_So3nOa1MEeOdBunZhTRw1w _So3nPq1MEeOdBunZhTRw1w" incoming="_So3nKa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_So3mca1MEeOdBunZhTRw1w" name="Fork(ForStatement@742b6a61.loopVariable(i))" outgoing="_So3nNK1MEeOdBunZhTRw1w" incoming="_So3nKq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_So3mcq1MEeOdBunZhTRw1w" name="Fork(ForStatement@742b6a61.loopVariable(counter))" outgoing="_So3nLa1MEeOdBunZhTRw1w _So3nNq1MEeOdBunZhTRw1w" incoming="_So3nK61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_So3mc61MEeOdBunZhTRw1w" name="Fork(ForStatement@742b6a61.loopVariable(upper))" outgoing="_So3nLq1MEeOdBunZhTRw1w _So3nOK1MEeOdBunZhTRw1w" incoming="_So3nLK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mdK1MEeOdBunZhTRw1w" name="Call(&lt;=)">
              <argument xmi:id="_So3mda1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_So3nLa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mdq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3md61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3meK1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_So3nLq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mea1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3meq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3me61MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mfK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mfa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mfq1MEeOdBunZhTRw1w" name="Values(ForStatement@742b6a61)" outgoing="_So3nMK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_So3mf61MEeOdBunZhTRw1w" name="Fork(i)" outgoing="_So3nMa1MEeOdBunZhTRw1w _So3nMq1MEeOdBunZhTRw1w _So3nM61MEeOdBunZhTRw1w" incoming="_So3nL61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mgK1MEeOdBunZhTRw1w" name="Body(ForStatement@742b6a61)" incoming="_So3nMK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mga1MEeOdBunZhTRw1w" name="ExpressionStatement@15169457">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mgq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_So3m3K1MEeOdBunZhTRw1w" behavior="_So3oQ61MEeOdBunZhTRw1w">
                  <argument xmi:id="_So3mg61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_So3m2a1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mhK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mha1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_So3mhq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_So3m2q1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mh61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3miK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_So3mia1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_So3m261MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3miq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mi61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3mjK1MEeOdBunZhTRw1w" name="Tuple@40eecb3b" outgoing="_So3m3K1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3mja1MEeOdBunZhTRw1w" name="Value(&quot;[&quot;)">
                    <result xmi:id="_So3mjq1MEeOdBunZhTRw1w" name="Value(&quot;[&quot;).result" outgoing="_So3m0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mj61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mkK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_So3mka1MEeOdBunZhTRw1w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mkq1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_So3mk61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3nOa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mlK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mla1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So3mlq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3m0q1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ml61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mmK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3mma1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3m061MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mmq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mm61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mnK1MEeOdBunZhTRw1w" name="Call(ToString)">
                    <argument xmi:id="_So3mna1MEeOdBunZhTRw1w" name="Call(ToString).argument(x)" incoming="_So3nMa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mnq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mn61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3moK1MEeOdBunZhTRw1w" name="Call(ToString).result(result)" outgoing="_So3m1K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3moa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3moq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mo61MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_So3mpK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3m061MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mpa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mpq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So3mp61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3m1K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mqK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mqa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3mqq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3m1a1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mq61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mrK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3mra1MEeOdBunZhTRw1w" name="Value(&quot;]&quot;)">
                    <result xmi:id="_So3mrq1MEeOdBunZhTRw1w" name="Value(&quot;]&quot;).result" outgoing="_So3m1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mr61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3msK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_So3msa1MEeOdBunZhTRw1w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3msq1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_So3ms61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3m1a1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mtK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mta1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So3mtq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3m1q1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mt61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3muK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3mua1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3m2a1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3muq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mu61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mvK1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_So3mva1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_So3nOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mvq1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mv61MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_So3mwK1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_So3m161MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mwa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mwq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3mw61MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_So3m2q1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mxK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mxa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_So3mxq1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_So3m161MEeOdBunZhTRw1w" incoming="_So3nMq1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3mx61MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_So3myK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_So3nO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mya1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3myq1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_So3my61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_So3m2K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mzK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3mza1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3mzq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_So3m261MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3mz61MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m0K1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_So3m0a1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_So3m2K1MEeOdBunZhTRw1w" incoming="_So3nM61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m0q1MEeOdBunZhTRw1w" source="_So3mjq1MEeOdBunZhTRw1w" target="_So3mlq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m061MEeOdBunZhTRw1w" source="_So3mma1MEeOdBunZhTRw1w" target="_So3mpK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m1K1MEeOdBunZhTRw1w" source="_So3moK1MEeOdBunZhTRw1w" target="_So3mp61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m1a1MEeOdBunZhTRw1w" source="_So3mqq1MEeOdBunZhTRw1w" target="_So3ms61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m1q1MEeOdBunZhTRw1w" source="_So3mrq1MEeOdBunZhTRw1w" target="_So3mtq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m161MEeOdBunZhTRw1w" source="_So3mxq1MEeOdBunZhTRw1w" target="_So3mwK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m2K1MEeOdBunZhTRw1w" source="_So3m0a1MEeOdBunZhTRw1w" target="_So3my61MEeOdBunZhTRw1w"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m2a1MEeOdBunZhTRw1w" source="_So3mua1MEeOdBunZhTRw1w" target="_So3mg61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m2q1MEeOdBunZhTRw1w" source="_So3mw61MEeOdBunZhTRw1w" target="_So3mhq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m261MEeOdBunZhTRw1w" source="_So3mzq1MEeOdBunZhTRw1w" target="_So3mia1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So3m3K1MEeOdBunZhTRw1w" source="_So3mjK1MEeOdBunZhTRw1w" target="_So3mgq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3m3a1MEeOdBunZhTRw1w" name="Passthru(Fork(expected))">
                <structuredNodeInput xmi:id="_So3m3q1MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).input" outgoing="_So3m5K1MEeOdBunZhTRw1w" incoming="_So3nPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m361MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m4K1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_So3m4a1MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).output" outgoing="_So3m_q1MEeOdBunZhTRw1w" incoming="_So3m5K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m4q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m461MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m5K1MEeOdBunZhTRw1w" source="_So3m3q1MEeOdBunZhTRw1w" target="_So3m4a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3m5a1MEeOdBunZhTRw1w" name="Passthru(Fork(list))">
                <structuredNodeInput xmi:id="_So3m5q1MEeOdBunZhTRw1w" name="Passthru(Fork(list)).input" outgoing="_So3m7K1MEeOdBunZhTRw1w" incoming="_So3nPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m561MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m6K1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_So3m6a1MEeOdBunZhTRw1w" name="Passthru(Fork(list)).output" outgoing="_So3m_61MEeOdBunZhTRw1w" incoming="_So3m7K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m6q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m661MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m7K1MEeOdBunZhTRw1w" source="_So3m5q1MEeOdBunZhTRw1w" target="_So3m6a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3m7a1MEeOdBunZhTRw1w" name="Passthru(Fork(label))">
                <structuredNodeInput xmi:id="_So3m7q1MEeOdBunZhTRw1w" name="Passthru(Fork(label)).input" outgoing="_So3m9K1MEeOdBunZhTRw1w" incoming="_So3nPq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m761MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m8K1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_So3m8a1MEeOdBunZhTRw1w" name="Passthru(Fork(label)).output" outgoing="_So3nAK1MEeOdBunZhTRw1w" incoming="_So3m9K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m8q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m861MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m9K1MEeOdBunZhTRw1w" source="_So3m7q1MEeOdBunZhTRw1w" target="_So3m8a1MEeOdBunZhTRw1w"/>
              </node>
              <structuredNodeOutput xmi:id="_So3m9a1MEeOdBunZhTRw1w" name="expected" incoming="_So3m_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m9q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m961MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_So3m-K1MEeOdBunZhTRw1w" name="list" incoming="_So3m_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m-a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m-q1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_So3m-61MEeOdBunZhTRw1w" name="label" incoming="_So3nAK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3m_K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3m_a1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m_q1MEeOdBunZhTRw1w" source="_So3m4a1MEeOdBunZhTRw1w" target="_So3m9a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3m_61MEeOdBunZhTRw1w" source="_So3m6a1MEeOdBunZhTRw1w" target="_So3m-K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nAK1MEeOdBunZhTRw1w" source="_So3m8a1MEeOdBunZhTRw1w" target="_So3m-61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3nAa1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_So3nAq1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_So3nNK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nA61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nBK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3nBa1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_So3nNa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nBq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nB61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3nCK1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nCa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nCq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3nC61MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_So3nDK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So3nNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nDa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nDq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So3nD61MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3nEK1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_So3nEa1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_So3nNq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nEq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nE61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3nFK1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_So3nN61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nFa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nFq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3nF61MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nGK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nGa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3nGq1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_So3nG61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So3nN61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nHK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nHa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So3nHq1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3nH61MEeOdBunZhTRw1w" name="Passthru(Passthru(upper))">
              <structuredNodeInput xmi:id="_So3nIK1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).input" outgoing="_So3nJq1MEeOdBunZhTRw1w" incoming="_So3nOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nIa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nIq1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_So3nI61MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).output" incoming="_So3nJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nJK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nJa1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nJq1MEeOdBunZhTRw1w" source="_So3nIK1MEeOdBunZhTRw1w" target="_So3nI61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nJ61MEeOdBunZhTRw1w" source="_So3nP61MEeOdBunZhTRw1w" target="_So3mbq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nKK1MEeOdBunZhTRw1w" source="_So3nQq1MEeOdBunZhTRw1w" target="_So3mb61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nKa1MEeOdBunZhTRw1w" source="_So3nRa1MEeOdBunZhTRw1w" target="_So3mcK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nKq1MEeOdBunZhTRw1w" source="_So3nSK1MEeOdBunZhTRw1w" target="_So3mca1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nK61MEeOdBunZhTRw1w" source="_So3nS61MEeOdBunZhTRw1w" target="_So3mcq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nLK1MEeOdBunZhTRw1w" source="_So3nTq1MEeOdBunZhTRw1w" target="_So3mc61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nLa1MEeOdBunZhTRw1w" source="_So3mcq1MEeOdBunZhTRw1w" target="_So3mda1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nLq1MEeOdBunZhTRw1w" source="_So3mc61MEeOdBunZhTRw1w" target="_So3meK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nL61MEeOdBunZhTRw1w" source="_So3nSK1MEeOdBunZhTRw1w" target="_So3mf61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So3nMK1MEeOdBunZhTRw1w" source="_So3mfq1MEeOdBunZhTRw1w" target="_So3mgK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nMa1MEeOdBunZhTRw1w" source="_So3mf61MEeOdBunZhTRw1w" target="_So3mna1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nMq1MEeOdBunZhTRw1w" source="_So3mf61MEeOdBunZhTRw1w" target="_So3mxq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nM61MEeOdBunZhTRw1w" source="_So3mf61MEeOdBunZhTRw1w" target="_So3m0a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nNK1MEeOdBunZhTRw1w" source="_So3mca1MEeOdBunZhTRw1w" target="_So3nAq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nNa1MEeOdBunZhTRw1w" source="_So3nDK1MEeOdBunZhTRw1w" target="_So3nBa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nNq1MEeOdBunZhTRw1w" source="_So3mcq1MEeOdBunZhTRw1w" target="_So3nEa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nN61MEeOdBunZhTRw1w" source="_So3nG61MEeOdBunZhTRw1w" target="_So3nFK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nOK1MEeOdBunZhTRw1w" source="_So3mc61MEeOdBunZhTRw1w" target="_So3nIK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nOa1MEeOdBunZhTRw1w" source="_So3mcK1MEeOdBunZhTRw1w" target="_So3mk61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nOq1MEeOdBunZhTRw1w" source="_So3mb61MEeOdBunZhTRw1w" target="_So3mva1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nO61MEeOdBunZhTRw1w" source="_So3mbq1MEeOdBunZhTRw1w" target="_So3myK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nPK1MEeOdBunZhTRw1w" source="_So3mbq1MEeOdBunZhTRw1w" target="_So3m3q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nPa1MEeOdBunZhTRw1w" source="_So3mb61MEeOdBunZhTRw1w" target="_So3m5q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nPq1MEeOdBunZhTRw1w" source="_So3mcK1MEeOdBunZhTRw1w" target="_So3m7q1MEeOdBunZhTRw1w"/>
            <loopVariable xmi:id="_So3nP61MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariable(expected)" outgoing="_So3nJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nQK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nQa1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_So3nQq1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariable(list)" outgoing="_So3nKK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nQ61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nRK1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_So3nRa1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariable(label)" outgoing="_So3nKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nRq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nR61MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_So3nSK1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariable(i)" outgoing="_So3nKq1MEeOdBunZhTRw1w _So3nL61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nSa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nSq1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_So3nS61MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariable(counter)" outgoing="_So3nK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nTK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nTa1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_So3nTq1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariable(upper)" outgoing="_So3nLK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nT61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nUK1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_So3nUa1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariableInput(expected)" incoming="_So3mMq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nUq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nU61MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_So3nVK1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariableInput(list)" incoming="_So3mM61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nVa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nVq1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_So3nV61MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariableInput(label)" incoming="_So3mNK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nWK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nWa1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_So3nWq1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariableInput(i)" incoming="_So3nva1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nW61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nXK1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_So3nXa1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariableInput(counter)" incoming="_So3nu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nXq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nX61MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_So3nYK1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.loopVariableInput(upper)" incoming="_So3nvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nYa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nYq1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_So3nY61MEeOdBunZhTRw1w" name="ForStatement@742b6a61.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nZK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nZa1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_So3nZq1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nZ61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3naK1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_So3naa1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3naq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3na61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_So3nbK1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nba1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nbq1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_So3nb61MEeOdBunZhTRw1w" name="ForStatement@742b6a61.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ncK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nca1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_So3ncq1MEeOdBunZhTRw1w" name="ForStatement@742b6a61.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nc61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ndK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3nda1MEeOdBunZhTRw1w" name="LoopVariables(ForStatement@742b6a61)" outgoing="_So3nvq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3ndq1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_So3nd61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So3nuq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3neK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nea1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So3neq1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3ne61MEeOdBunZhTRw1w" name="Call(Min)" incoming="_So3nta1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3nfK1MEeOdBunZhTRw1w" name="Call(Min).argument(x)" incoming="_So3ns61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nfa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nfq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3nf61MEeOdBunZhTRw1w" name="Call(Min).argument(y)" incoming="_So3ntK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ngK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nga1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3ngq1MEeOdBunZhTRw1w" name="Call(Min).result(result)" outgoing="_So3ntq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ng61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nhK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3nha1MEeOdBunZhTRw1w" name="Tuple@58b62e6e" outgoing="_So3nta1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3nhq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_So4NLK1MEeOdBunZhTRw1w">
                <argument xmi:id="_So3nh61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_So3mNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3niK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nia1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So3niq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_So3ns61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ni61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3njK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3nja1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_So4NLK1MEeOdBunZhTRw1w">
                <argument xmi:id="_So3njq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_So3mNq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nj61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nkK1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So3nka1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_So3ntK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nkq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nk61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_So3nlK1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_So3nva1MEeOdBunZhTRw1w _So3nt61MEeOdBunZhTRw1w" incoming="_So3nuq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3nla1MEeOdBunZhTRw1w" name="Call(-)">
              <argument xmi:id="_So3nlq1MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_So3ntq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nl61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nmK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3nma1MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_So3nt61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nmq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nm61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3nnK1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_So3nuK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nna1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nnq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3nn61MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_So3noK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So3nua1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3noa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3noq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So3no61MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3npK1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_So3npa1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_So3nuK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3npq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3np61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_So3nqK1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_So3nua1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nqa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nqq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3nq61MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_So3nvK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nrK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nra1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3nrq1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_So3nr61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So3nu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nsK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nsa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_So3nsq1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ns61MEeOdBunZhTRw1w" source="_So3niq1MEeOdBunZhTRw1w" target="_So3nfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ntK1MEeOdBunZhTRw1w" source="_So3nka1MEeOdBunZhTRw1w" target="_So3nf61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So3nta1MEeOdBunZhTRw1w" source="_So3nha1MEeOdBunZhTRw1w" target="_So3ne61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ntq1MEeOdBunZhTRw1w" source="_So3ngq1MEeOdBunZhTRw1w" target="_So3nlq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nt61MEeOdBunZhTRw1w" source="_So3nlK1MEeOdBunZhTRw1w" target="_So3nma1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nuK1MEeOdBunZhTRw1w" source="_So3nnK1MEeOdBunZhTRw1w" target="_So3npa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nua1MEeOdBunZhTRw1w" source="_So3noK1MEeOdBunZhTRw1w" target="_So3nqK1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nuq1MEeOdBunZhTRw1w" source="_So3nd61MEeOdBunZhTRw1w" target="_So3nlK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nu61MEeOdBunZhTRw1w" source="_So3nr61MEeOdBunZhTRw1w" target="_So3nXa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nvK1MEeOdBunZhTRw1w" source="_So3nq61MEeOdBunZhTRw1w" target="_So3nYK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nva1MEeOdBunZhTRw1w" source="_So3nlK1MEeOdBunZhTRw1w" target="_So3nWq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So3nvq1MEeOdBunZhTRw1w" source="_So3nda1MEeOdBunZhTRw1w" target="_So3mba1MEeOdBunZhTRw1w"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_So3nv61MEeOdBunZhTRw1w" source="_So3mPq1MEeOdBunZhTRw1w" target="_So3mbK1MEeOdBunZhTRw1w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3mN61MEeOdBunZhTRw1w" name="Input(label)" outgoing="_So3mLK1MEeOdBunZhTRw1w" parameter="_So3mI61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3mOK1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_So3mL61MEeOdBunZhTRw1w _So3mNK1MEeOdBunZhTRw1w" incoming="_So3mLK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3mOa1MEeOdBunZhTRw1w" name="Input(list)" outgoing="_So3mLa1MEeOdBunZhTRw1w" parameter="_So3mJq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3mOq1MEeOdBunZhTRw1w" name="Fork(list)" outgoing="_So3mMK1MEeOdBunZhTRw1w _So3mNa1MEeOdBunZhTRw1w _So3mM61MEeOdBunZhTRw1w" incoming="_So3mLa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3mO61MEeOdBunZhTRw1w" name="Input(expected)" outgoing="_So3mLq1MEeOdBunZhTRw1w" parameter="_So3mKa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3mPK1MEeOdBunZhTRw1w" name="Fork(expected)" outgoing="_So3mMa1MEeOdBunZhTRw1w _So3mNq1MEeOdBunZhTRw1w _So3mMq1MEeOdBunZhTRw1w" incoming="_So3mLq1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So3nwK1MEeOdBunZhTRw1w" name="AssertTrue" group="_So3n1K1MEeOdBunZhTRw1w" node="_So3n0K1MEeOdBunZhTRw1w _So3n0a1MEeOdBunZhTRw1w _So3n0q1MEeOdBunZhTRw1w _So3n061MEeOdBunZhTRw1w _So3n1K1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_So3nwa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_So3nwq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_So3nw61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_So3nxK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_So3nxa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_So3nxq1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nx61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3nyK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So3nya1MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3nyq1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ny61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nzK1MEeOdBunZhTRw1w" source="_So3n0K1MEeOdBunZhTRw1w" target="_So3n0a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nza1MEeOdBunZhTRw1w" source="_So3n0q1MEeOdBunZhTRw1w" target="_So3n061MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nzq1MEeOdBunZhTRw1w" source="_So3n061MEeOdBunZhTRw1w" target="_So3n5a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3nz61MEeOdBunZhTRw1w" source="_So3n0a1MEeOdBunZhTRw1w" target="_So3oCa1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_So3n1K1MEeOdBunZhTRw1w" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_So3n1a1MEeOdBunZhTRw1w" name="IfStatement@18755efe">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3n1q1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_So3n161MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_So3oH61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n2K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n2a1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_So3n2q1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So3n261MEeOdBunZhTRw1w" name="Test(==)">
            <first xmi:id="_So3n3K1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_So3oF61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n3a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n3q1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So3n361MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_So3oGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n4K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n4a1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So3n4q1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_So3oH61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n461MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n5K1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So3n5a1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_So3oF61MEeOdBunZhTRw1w _So3oGK1MEeOdBunZhTRw1w" incoming="_So3nzq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3n5q1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_So3n561MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_So3oGK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n6K1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n6a1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So3n6q1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_So3oGa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n661MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n7K1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So3n7a1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_So3oG61MEeOdBunZhTRw1w _So3oHK1MEeOdBunZhTRw1w" incoming="_So3oGa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_So3n7q1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_So3oIK1MEeOdBunZhTRw1w" incoming="_So3oGq1MEeOdBunZhTRw1w _So3oHa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So3n761MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_So3oHa1MEeOdBunZhTRw1w" incoming="_So3oG61MEeOdBunZhTRw1w _So3oHK1MEeOdBunZhTRw1w" decisionInputFlow="_So3oHK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3n8K1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_So3n8a1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_So3oIK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n8q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n861MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_So3n9K1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n9a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n9q1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3n961MEeOdBunZhTRw1w" name="ExpressionStatement@42f79c38">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3n-K1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_So3oEa1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3n-a1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_So3oEK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n-q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n-61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So3n_K1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3n_a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3n_q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3n_61MEeOdBunZhTRw1w" name="Tuple@552532" outgoing="_So3oEa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3oAK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_So3oAa1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_So3oD61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oAq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oA61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_So3oBK1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3oBa1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_So3oBq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3oD61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oB61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oCK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_So3oCa1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3nz61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oCq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oC61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So3oDK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3oEK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oDa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oDq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oD61MEeOdBunZhTRw1w" source="_So3oAa1MEeOdBunZhTRw1w" target="_So3oBq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oEK1MEeOdBunZhTRw1w" source="_So3oDK1MEeOdBunZhTRw1w" target="_So3n-a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So3oEa1MEeOdBunZhTRw1w" source="_So3n_61MEeOdBunZhTRw1w" target="_So3n-K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3oEq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_So3oE61MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oFK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oFa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_So3oFq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oF61MEeOdBunZhTRw1w" source="_So3n5a1MEeOdBunZhTRw1w" target="_So3n3K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oGK1MEeOdBunZhTRw1w" source="_So3n5a1MEeOdBunZhTRw1w" target="_So3n561MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oGa1MEeOdBunZhTRw1w" source="_So3n6q1MEeOdBunZhTRw1w" target="_So3n7a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oGq1MEeOdBunZhTRw1w" source="_So3n361MEeOdBunZhTRw1w" target="_So3n7q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oG61MEeOdBunZhTRw1w" source="_So3n7a1MEeOdBunZhTRw1w" target="_So3n761MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oHK1MEeOdBunZhTRw1w" source="_So3n7a1MEeOdBunZhTRw1w" target="_So3n761MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oHa1MEeOdBunZhTRw1w" source="_So3n761MEeOdBunZhTRw1w" target="_So3n7q1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3oHq1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oH61MEeOdBunZhTRw1w" source="_So3n161MEeOdBunZhTRw1w" target="_So3n4q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oIK1MEeOdBunZhTRw1w" source="_So3n7q1MEeOdBunZhTRw1w" target="_So3n8a1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_So3oIa1MEeOdBunZhTRw1w" body="_So3n961MEeOdBunZhTRw1w" decider="_So3n9K1MEeOdBunZhTRw1w" successorClause="_So3oIq1MEeOdBunZhTRw1w" test="_So3n1q1MEeOdBunZhTRw1w _So3n261MEeOdBunZhTRw1w _So3n5q1MEeOdBunZhTRw1w _So3n8K1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_So3oIq1MEeOdBunZhTRw1w" decider="_So3oE61MEeOdBunZhTRw1w" predecessorClause="_So3oIa1MEeOdBunZhTRw1w" test="_So3oEq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3n0K1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_So3nzK1MEeOdBunZhTRw1w" parameter="_So3nxq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3n0a1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_So3nz61MEeOdBunZhTRw1w" incoming="_So3nzK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3n0q1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_So3nza1MEeOdBunZhTRw1w" parameter="_So3nya1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3n061MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_So3nzq1MEeOdBunZhTRw1w" incoming="_So3nza1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So3oI61MEeOdBunZhTRw1w" clientDependency="_So3oQq1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionFunctions$isEmpty__PrimitiveTypes$Integer__" group="_So3oMq1MEeOdBunZhTRw1w" node="_So3oLq1MEeOdBunZhTRw1w _So3oL61MEeOdBunZhTRw1w _So3oMK1MEeOdBunZhTRw1w _So3oMa1MEeOdBunZhTRw1w _So3oMq1MEeOdBunZhTRw1w">
      <ownedParameter xmi:id="_So3oJK1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oJa1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oJq1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So3oJ61MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oKK1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oKa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oKq1MEeOdBunZhTRw1w" source="_So3oLq1MEeOdBunZhTRw1w" target="_So3oL61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_So3oK61MEeOdBunZhTRw1w" source="_So3oM61MEeOdBunZhTRw1w" target="_So3oMa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oLK1MEeOdBunZhTRw1w" source="_So3oL61MEeOdBunZhTRw1w" target="_So3oNa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oLa1MEeOdBunZhTRw1w" source="_So3oO61MEeOdBunZhTRw1w" target="_So3oMK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_So3oMq1MEeOdBunZhTRw1w" name="Body(isEmpty)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3oM61MEeOdBunZhTRw1w" name="ReturnStatement@7bd45656" outgoing="_So3oK61MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3oNK1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
            <argument xmi:id="_So3oNa1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_So3oLK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oNq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oN61MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So3oOK1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_So3oPq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oOa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oOq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
          </node>
          <structuredNodeOutput xmi:id="_So3oO61MEeOdBunZhTRw1w" name="ReturnStatement@7bd45656.output" outgoing="_So3oLa1MEeOdBunZhTRw1w" incoming="_So3oPq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oPK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oPa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oPq1MEeOdBunZhTRw1w" source="_So3oOK1MEeOdBunZhTRw1w" target="_So3oO61MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3oLq1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So3oKq1MEeOdBunZhTRw1w" parameter="_So3oJK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3oL61MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So3oLK1MEeOdBunZhTRw1w" incoming="_So3oKq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3oMK1MEeOdBunZhTRw1w" name="Return" incoming="_So3oLa1MEeOdBunZhTRw1w" parameter="_So3oJ61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_So3oMa1MEeOdBunZhTRw1w" name="Final" incoming="_So3oK61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So3oP61MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So3oQK1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So3oQa1MEeOdBunZhTRw1w">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jmrpz4VoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmrpzoVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So3oQq1MEeOdBunZhTRw1w" client="_So3oI61MEeOdBunZhTRw1w" supplier="_So3oP61MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So3oQ61MEeOdBunZhTRw1w" name="AssertEqual" group="_So3oYq1MEeOdBunZhTRw1w" node="_So3oXK1MEeOdBunZhTRw1w _So3oXa1MEeOdBunZhTRw1w _So3oXq1MEeOdBunZhTRw1w _So3oX61MEeOdBunZhTRw1w _So3oYK1MEeOdBunZhTRw1w _So3oYa1MEeOdBunZhTRw1w _So3oYq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_So3oRK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_So3oRa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_So3oRq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_So3oR61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_So3oSK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_So3oSa1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oSq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oS61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So3oTK1MEeOdBunZhTRw1w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oTa1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oTq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So3oT61MEeOdBunZhTRw1w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oUK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oUa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oUq1MEeOdBunZhTRw1w" source="_So3oXK1MEeOdBunZhTRw1w" target="_So3oXa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oU61MEeOdBunZhTRw1w" source="_So3oXq1MEeOdBunZhTRw1w" target="_So3oX61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oVK1MEeOdBunZhTRw1w" source="_So3oYK1MEeOdBunZhTRw1w" target="_So3oYa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oVa1MEeOdBunZhTRw1w" source="_So3oX61MEeOdBunZhTRw1w" target="_So3obq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oVq1MEeOdBunZhTRw1w" source="_So3oYa1MEeOdBunZhTRw1w" target="_So3odq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oV61MEeOdBunZhTRw1w" source="_So3oXa1MEeOdBunZhTRw1w" target="_So3oqK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oWK1MEeOdBunZhTRw1w" source="_So3oYa1MEeOdBunZhTRw1w" target="_So3oya1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oWa1MEeOdBunZhTRw1w" source="_So3oYa1MEeOdBunZhTRw1w" target="_So3o261MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oWq1MEeOdBunZhTRw1w" source="_So3oYa1MEeOdBunZhTRw1w" target="_So3o-a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So3oW61MEeOdBunZhTRw1w" source="_So3oYa1MEeOdBunZhTRw1w" target="_So3pHa1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_So3oYq1MEeOdBunZhTRw1w" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_So3oY61MEeOdBunZhTRw1w" name="IfStatement@72d14c47">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_So3oZK1MEeOdBunZhTRw1w" name="Test(==)" incoming="_So4NGq1MEeOdBunZhTRw1w">
            <first xmi:id="_So3oZa1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_So4NEa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oZq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oZ61MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_So3oaK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_So4NJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oaa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oaq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_So3oa61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_So4NE61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3obK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oba1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So3obq1MEeOdBunZhTRw1w" name="Fork(Fork(value1))" outgoing="_So4NEa1MEeOdBunZhTRw1w _So4NEq1MEeOdBunZhTRw1w" incoming="_So3oVa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3ob61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_So3ocK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_So4NEq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oca1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ocq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So3oc61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_So4NFa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3odK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oda1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_So3odq1MEeOdBunZhTRw1w" name="Fork(Fork(value2))" outgoing="_So4NE61MEeOdBunZhTRw1w _So4NFK1MEeOdBunZhTRw1w" incoming="_So3oVq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3od61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_So3oeK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_So4NFK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oea1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oeq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So3oe61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_So4NFq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ofK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ofa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_So3ofq1MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_So4NHq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_So3of61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_So4NF61MEeOdBunZhTRw1w _So4NH61MEeOdBunZhTRw1w" incoming="_So4NFa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_So3ogK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_So4NGK1MEeOdBunZhTRw1w _So4NGa1MEeOdBunZhTRw1w" incoming="_So4NFq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3oga1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_So4NHK1MEeOdBunZhTRw1w">
            <argument xmi:id="_So3ogq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_So4NF61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3og61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ohK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_So3oha1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_So4NJa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ohq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oh61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3oiK1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_So4NIq1MEeOdBunZhTRw1w">
            <argument xmi:id="_So3oia1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_So4NGK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oiq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oi61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_So3ojK1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_So4NJq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oja1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ojq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_So3oj61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_So4NGq1MEeOdBunZhTRw1w _So4NHK1MEeOdBunZhTRw1w" incoming="_So4NGa1MEeOdBunZhTRw1w _So4NIK1MEeOdBunZhTRw1w" decisionInputFlow="_So4NGa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_So3okK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_So4NIK1MEeOdBunZhTRw1w _So4NIq1MEeOdBunZhTRw1w" incoming="_So4NHq1MEeOdBunZhTRw1w _So4NH61MEeOdBunZhTRw1w" decisionInputFlow="_So4NH61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_So3oka1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_So4NJ61MEeOdBunZhTRw1w" incoming="_So4NJK1MEeOdBunZhTRw1w _So4NJa1MEeOdBunZhTRw1w _So4NJq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3okq1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_So3ok61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_So4NJ61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3olK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ola1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_So3olq1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ol61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3omK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3oma1MEeOdBunZhTRw1w" name="ExpressionStatement@9b40439" outgoing="_So4NKK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3omq1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_So3owa1MEeOdBunZhTRw1w" behavior="_So4NTK1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3om61MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_So3owK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3onK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ona1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3onq1MEeOdBunZhTRw1w" name="Tuple@2d10d76c" outgoing="_So3owa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3on61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_So3ooK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_So3ova1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ooa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ooq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_So3oo61MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3opK1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_So3opa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3ova1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3opq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3op61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_So3oqK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3oV61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oqa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oqq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So3oq61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3ovq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3orK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ora1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3orq1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;)">
                <result xmi:id="_So3or61MEeOdBunZhTRw1w" name="Value(&quot;==&quot;).result" outgoing="_So3ov61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3osK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3osa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_So3osq1MEeOdBunZhTRw1w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3os61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_So3otK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3ovq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ota1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3otq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_So3ot61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3ov61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ouK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oua1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_So3ouq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3owK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3ou61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ovK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ova1MEeOdBunZhTRw1w" source="_So3ooK1MEeOdBunZhTRw1w" target="_So3opa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ovq1MEeOdBunZhTRw1w" source="_So3oq61MEeOdBunZhTRw1w" target="_So3otK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So3ov61MEeOdBunZhTRw1w" source="_So3or61MEeOdBunZhTRw1w" target="_So3ot61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So3owK1MEeOdBunZhTRw1w" source="_So3ouq1MEeOdBunZhTRw1w" target="_So3om61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So3owa1MEeOdBunZhTRw1w" source="_So3onq1MEeOdBunZhTRw1w" target="_So3omq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3owq1MEeOdBunZhTRw1w" name="ExpressionStatement@30cd437e" outgoing="_So4NKa1MEeOdBunZhTRw1w" incoming="_So4NKK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3ow61MEeOdBunZhTRw1w" name="Call(Write)" incoming="_So4M-61MEeOdBunZhTRw1w" behavior="_So4NTK1MEeOdBunZhTRw1w">
              <argument xmi:id="_So3oxK1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_So4M-q1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oxa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oxq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3ox61MEeOdBunZhTRw1w" name="Tuple@11215e6c" outgoing="_So4M-61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3oyK1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_So3oya1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_So3oWK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oyq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3oy61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_So3ozK1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_So4M861MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3oza1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3ozq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3oz61MEeOdBunZhTRw1w" name="ConditionalTestExpression@5ba88882.operand2" incoming="_So4M9K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3o0K1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_So3o0a1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;).result" outgoing="_So3o2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o0q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o061MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_So3o1K1MEeOdBunZhTRw1w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_So3o1a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@5ba88882.operand2.result" outgoing="_So4M-K1MEeOdBunZhTRw1w" incoming="_So3o2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o1q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o161MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o2K1MEeOdBunZhTRw1w" source="_So3o0a1MEeOdBunZhTRw1w" target="_So3o1a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3o2a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@5ba88882.operand3" incoming="_So4M9q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So3o2q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_So3o261MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_So3oWa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o3K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o3a1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_So3o3q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_So3pKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o361MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o4K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3o4a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@6ec0273b.operand2" incoming="_So3pKq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3o4q1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_So3o461MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_So3pF61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o5K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o5a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_So3o5q1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_So3o561MEeOdBunZhTRw1w" name="CastExpression@2ded6f1b" mode="parallel" outputElement="_So3o-q1MEeOdBunZhTRw1w" inputElement="_So3o-a1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:MergeNode" xmi:id="_So3o6K1MEeOdBunZhTRw1w" name="Merge(CastExpression@2ded6f1b.operand)" outgoing="_So3o-K1MEeOdBunZhTRw1w" incoming="_So3o9a1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_So3o6a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_So3o6q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_So3o8q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o661MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o7K1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_So3o7a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_So3o9K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o7q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o761MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_So3o8K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_So3o8q1MEeOdBunZhTRw1w _So3o861MEeOdBunZhTRw1w" incoming="_So3o961MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_So3o8a1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_So3o9a1MEeOdBunZhTRw1w" incoming="_So3o861MEeOdBunZhTRw1w _So3o9K1MEeOdBunZhTRw1w" decisionInputFlow="_So3o9K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o8q1MEeOdBunZhTRw1w" source="_So3o8K1MEeOdBunZhTRw1w" target="_So3o6q1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o861MEeOdBunZhTRw1w" source="_So3o8K1MEeOdBunZhTRw1w" target="_So3o8a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o9K1MEeOdBunZhTRw1w" source="_So3o7a1MEeOdBunZhTRw1w" target="_So3o8a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o9a1MEeOdBunZhTRw1w" source="_So3o8a1MEeOdBunZhTRw1w" target="_So3o6K1MEeOdBunZhTRw1w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3o9q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o961MEeOdBunZhTRw1w" source="_So3o-a1MEeOdBunZhTRw1w" target="_So3o8K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_So3o-K1MEeOdBunZhTRw1w" source="_So3o6K1MEeOdBunZhTRw1w" target="_So3o-q1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_So3o-a1MEeOdBunZhTRw1w" name="CastExpression@2ded6f1b.inputElement" outgoing="_So3o961MEeOdBunZhTRw1w" incoming="_So3oWq1MEeOdBunZhTRw1w" regionAsInput="_So3o561MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_So3o-q1MEeOdBunZhTRw1w" name="CastExpression@2ded6f1b.outputElement" outgoing="_So3pGK1MEeOdBunZhTRw1w" incoming="_So3o-K1MEeOdBunZhTRw1w" regionAsOutput="_So3o561MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3o-61MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_So3o_K1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3pF61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3o_a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3o_q1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So3o_61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3pGK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pAK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pAa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3pAq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3pGa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pA61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pBK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So3pBa1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_So3pBq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_So3pGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pB61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pCK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_So3pCa1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_So3pCq1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_So3pC61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_So3pGa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pDK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pDa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_So3pDq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_So3pGq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pD61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pEK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_So3pEa1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_So3pG61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pEq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pE61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <structuredNodeOutput xmi:id="_So3pFK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@6ec0273b.operand2.result" outgoing="_So3pLq1MEeOdBunZhTRw1w" incoming="_So3pG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pFa1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pFq1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pF61MEeOdBunZhTRw1w" source="_So3o461MEeOdBunZhTRw1w" target="_So3o_K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pGK1MEeOdBunZhTRw1w" source="_So3o-q1MEeOdBunZhTRw1w" target="_So3o_61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pGa1MEeOdBunZhTRw1w" source="_So3pAq1MEeOdBunZhTRw1w" target="_So3pC61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pGq1MEeOdBunZhTRw1w" source="_So3pBq1MEeOdBunZhTRw1w" target="_So3pDq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pG61MEeOdBunZhTRw1w" source="_So3pEa1MEeOdBunZhTRw1w" target="_So3pFK1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_So3pHK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@6ec0273b.operand3" incoming="_So3pLK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_So3pHa1MEeOdBunZhTRw1w" name="Merge(Fork(value2))" outgoing="_So3pIa1MEeOdBunZhTRw1w" incoming="_So3oW61MEeOdBunZhTRw1w"/>
                  <structuredNodeOutput xmi:id="_So3pHq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@6ec0273b.operand3.result" outgoing="_So3pL61MEeOdBunZhTRw1w" incoming="_So3pIa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pH61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pIK1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pIa1MEeOdBunZhTRw1w" source="_So3pHa1MEeOdBunZhTRw1w" target="_So3pHq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_So3pIq1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@6ec0273b)" outgoing="_So3pKK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_So3pI61MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@6ec0273b)" outgoing="_So3pKq1MEeOdBunZhTRw1w _So3pLK1MEeOdBunZhTRw1w" incoming="_So3pKK1MEeOdBunZhTRw1w _So3pKa1MEeOdBunZhTRw1w" decisionInputFlow="_So3pKa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_So3pJK1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@6ec0273b.result)" outgoing="_So3pMK1MEeOdBunZhTRw1w" incoming="_So3pLq1MEeOdBunZhTRw1w _So3pL61MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_So3pJa1MEeOdBunZhTRw1w" name="ConditionalTestExpression@5ba88882.operand3.result" outgoing="_So4M-a1MEeOdBunZhTRw1w" incoming="_So3pMK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So3pJq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So3pJ61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So3pKK1MEeOdBunZhTRw1w" source="_So3pIq1MEeOdBunZhTRw1w" target="_So3pI61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pKa1MEeOdBunZhTRw1w" source="_So3o3q1MEeOdBunZhTRw1w" target="_So3pI61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So3pKq1MEeOdBunZhTRw1w" source="_So3pI61MEeOdBunZhTRw1w" target="_So3o4a1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3pK61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_So3pLK1MEeOdBunZhTRw1w" source="_So3pI61MEeOdBunZhTRw1w" target="_So3pHK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_So3pLa1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pLq1MEeOdBunZhTRw1w" source="_So3pFK1MEeOdBunZhTRw1w" target="_So3pJK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pL61MEeOdBunZhTRw1w" source="_So3pHq1MEeOdBunZhTRw1w" target="_So3pJK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_So3pMK1MEeOdBunZhTRw1w" source="_So3pJK1MEeOdBunZhTRw1w" target="_So3pJa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_So3pMa1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@5ba88882)" outgoing="_So4M8q1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_So4M8K1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@5ba88882)" outgoing="_So4M9K1MEeOdBunZhTRw1w _So4M9q1MEeOdBunZhTRw1w" incoming="_So4M8q1MEeOdBunZhTRw1w _So4M861MEeOdBunZhTRw1w" decisionInputFlow="_So4M861MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_So4M8a1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@5ba88882.result)" outgoing="_So4M-q1MEeOdBunZhTRw1w" incoming="_So4M-K1MEeOdBunZhTRw1w _So4M-a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So4M8q1MEeOdBunZhTRw1w" source="_So3pMa1MEeOdBunZhTRw1w" target="_So4M8K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So4M861MEeOdBunZhTRw1w" source="_So3ozK1MEeOdBunZhTRw1w" target="_So4M8K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So4M9K1MEeOdBunZhTRw1w" source="_So4M8K1MEeOdBunZhTRw1w" target="_So3oz61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So4M9a1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_So4M9q1MEeOdBunZhTRw1w" source="_So4M8K1MEeOdBunZhTRw1w" target="_So3o2a1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_So4M961MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So4M-K1MEeOdBunZhTRw1w" source="_So3o1a1MEeOdBunZhTRw1w" target="_So4M8a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_So4M-a1MEeOdBunZhTRw1w" source="_So3pJa1MEeOdBunZhTRw1w" target="_So4M8a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4M-q1MEeOdBunZhTRw1w" source="_So4M8a1MEeOdBunZhTRw1w" target="_So3oxK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So4M-61MEeOdBunZhTRw1w" source="_So3ox61MEeOdBunZhTRw1w" target="_So3ow61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So4M_K1MEeOdBunZhTRw1w" name="ExpressionStatement@31635be0" incoming="_So4NKa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So4M_a1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_So4NC61MEeOdBunZhTRw1w">
              <argument xmi:id="_So4M_q1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_So4NCq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4M_61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NAK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So4NAa1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NAq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NA61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So4NBK1MEeOdBunZhTRw1w" name="Tuple@29bc4e20" outgoing="_So4NC61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So4NBa1MEeOdBunZhTRw1w" name="Value(&quot;&quot;)">
                <result xmi:id="_So4NBq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;).result" outgoing="_So4NCq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NB61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NCK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_So4NCa1MEeOdBunZhTRw1w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NCq1MEeOdBunZhTRw1w" source="_So4NBq1MEeOdBunZhTRw1w" target="_So4M_q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So4NC61MEeOdBunZhTRw1w" source="_So4NBK1MEeOdBunZhTRw1w" target="_So4M_a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So4NDK1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_So4NDa1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NDq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4ND61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_So4NEK1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NEa1MEeOdBunZhTRw1w" source="_So3obq1MEeOdBunZhTRw1w" target="_So3oZa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NEq1MEeOdBunZhTRw1w" source="_So3obq1MEeOdBunZhTRw1w" target="_So3ocK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NE61MEeOdBunZhTRw1w" source="_So3odq1MEeOdBunZhTRw1w" target="_So3oa61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NFK1MEeOdBunZhTRw1w" source="_So3odq1MEeOdBunZhTRw1w" target="_So3oeK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NFa1MEeOdBunZhTRw1w" source="_So3oc61MEeOdBunZhTRw1w" target="_So3of61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NFq1MEeOdBunZhTRw1w" source="_So3oe61MEeOdBunZhTRw1w" target="_So3ogK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NF61MEeOdBunZhTRw1w" source="_So3of61MEeOdBunZhTRw1w" target="_So3ogq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NGK1MEeOdBunZhTRw1w" source="_So3ogK1MEeOdBunZhTRw1w" target="_So3oia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NGa1MEeOdBunZhTRw1w" source="_So3ogK1MEeOdBunZhTRw1w" target="_So3oj61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NGq1MEeOdBunZhTRw1w" source="_So3oj61MEeOdBunZhTRw1w" target="_So3oZK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So4NG61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NHK1MEeOdBunZhTRw1w" source="_So3oj61MEeOdBunZhTRw1w" target="_So3oga1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So4NHa1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NHq1MEeOdBunZhTRw1w" source="_So3ofq1MEeOdBunZhTRw1w" target="_So3okK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NH61MEeOdBunZhTRw1w" source="_So3of61MEeOdBunZhTRw1w" target="_So3okK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NIK1MEeOdBunZhTRw1w" source="_So3okK1MEeOdBunZhTRw1w" target="_So3oj61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So4NIa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NIq1MEeOdBunZhTRw1w" source="_So3okK1MEeOdBunZhTRw1w" target="_So3oiK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_So4NI61MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NJK1MEeOdBunZhTRw1w" source="_So3oaK1MEeOdBunZhTRw1w" target="_So3oka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NJa1MEeOdBunZhTRw1w" source="_So3oha1MEeOdBunZhTRw1w" target="_So3oka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NJq1MEeOdBunZhTRw1w" source="_So3ojK1MEeOdBunZhTRw1w" target="_So3oka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NJ61MEeOdBunZhTRw1w" source="_So3oka1MEeOdBunZhTRw1w" target="_So3ok61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NKK1MEeOdBunZhTRw1w" source="_So3oma1MEeOdBunZhTRw1w" target="_So3owq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4NKa1MEeOdBunZhTRw1w" source="_So3owq1MEeOdBunZhTRw1w" target="_So4M_K1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_So4NKq1MEeOdBunZhTRw1w" body="_So3oma1MEeOdBunZhTRw1w _So3owq1MEeOdBunZhTRw1w _So4M_K1MEeOdBunZhTRw1w" decider="_So3olq1MEeOdBunZhTRw1w" successorClause="_So4NK61MEeOdBunZhTRw1w" test="_So3oZK1MEeOdBunZhTRw1w _So3ob61MEeOdBunZhTRw1w _So3od61MEeOdBunZhTRw1w _So3oga1MEeOdBunZhTRw1w _So3oiK1MEeOdBunZhTRw1w _So3okq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_So4NK61MEeOdBunZhTRw1w" decider="_So4NDa1MEeOdBunZhTRw1w" predecessorClause="_So4NKq1MEeOdBunZhTRw1w" test="_So4NDK1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3oXK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_So3oUq1MEeOdBunZhTRw1w" parameter="_So3oSa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3oXa1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_So3oV61MEeOdBunZhTRw1w" incoming="_So3oUq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3oXq1MEeOdBunZhTRw1w" name="Input(value1)" outgoing="_So3oU61MEeOdBunZhTRw1w" parameter="_So3oTK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3oX61MEeOdBunZhTRw1w" name="Fork(value1)" outgoing="_So3oVa1MEeOdBunZhTRw1w" incoming="_So3oU61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So3oYK1MEeOdBunZhTRw1w" name="Input(value2)" outgoing="_So3oVK1MEeOdBunZhTRw1w" parameter="_So3oT61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So3oYa1MEeOdBunZhTRw1w" name="Fork(value2)" outgoing="_So3oVq1MEeOdBunZhTRw1w _So3oWK1MEeOdBunZhTRw1w _So3oWa1MEeOdBunZhTRw1w _So3oWq1MEeOdBunZhTRw1w _So3oW61MEeOdBunZhTRw1w" incoming="_So3oVK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So4NLK1MEeOdBunZhTRw1w" clientDependency="_So4NS61MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionFunctions$size__any__" group="_So4NO61MEeOdBunZhTRw1w" node="_So4NN61MEeOdBunZhTRw1w _So4NOK1MEeOdBunZhTRw1w _So4NOa1MEeOdBunZhTRw1w _So4NOq1MEeOdBunZhTRw1w _So4NO61MEeOdBunZhTRw1w">
      <ownedParameter xmi:id="_So4NLa1MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NLq1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NL61MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_So4NMK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NMa1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NMq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NM61MEeOdBunZhTRw1w" source="_So4NN61MEeOdBunZhTRw1w" target="_So4NOK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_So4NNK1MEeOdBunZhTRw1w" source="_So4NPK1MEeOdBunZhTRw1w" target="_So4NOq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NNa1MEeOdBunZhTRw1w" source="_So4NOK1MEeOdBunZhTRw1w" target="_So4NPq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NNq1MEeOdBunZhTRw1w" source="_So4NRK1MEeOdBunZhTRw1w" target="_So4NOa1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_So4NO61MEeOdBunZhTRw1w" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So4NPK1MEeOdBunZhTRw1w" name="ReturnStatement@22536490" outgoing="_So4NNK1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_So4NPa1MEeOdBunZhTRw1w" name="Call(Size)">
            <argument xmi:id="_So4NPq1MEeOdBunZhTRw1w" name="Call(Size).argument(seq)" incoming="_So4NNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NP61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NQK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_So4NQa1MEeOdBunZhTRw1w" name="Call(Size).result()" outgoing="_So4NR61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NQq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NQ61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
          <structuredNodeOutput xmi:id="_So4NRK1MEeOdBunZhTRw1w" name="ReturnStatement@22536490.output" outgoing="_So4NNq1MEeOdBunZhTRw1w" incoming="_So4NR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NRa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NRq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NR61MEeOdBunZhTRw1w" source="_So4NQa1MEeOdBunZhTRw1w" target="_So4NRK1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So4NN61MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_So4NM61MEeOdBunZhTRw1w" parameter="_So4NLa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So4NOK1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_So4NNa1MEeOdBunZhTRw1w" incoming="_So4NM61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So4NOa1MEeOdBunZhTRw1w" name="Return" incoming="_So4NNq1MEeOdBunZhTRw1w" parameter="_So4NMK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_So4NOq1MEeOdBunZhTRw1w" name="Final" incoming="_So4NNK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So4NSK1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_So4NSa1MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_So4NSq1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_So4NS61MEeOdBunZhTRw1w" client="_So4NLK1MEeOdBunZhTRw1w" supplier="_So4NSK1MEeOdBunZhTRw1w"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_So4NTK1MEeOdBunZhTRw1w" name="Write" group="_So4NWa1MEeOdBunZhTRw1w" node="_So4NV61MEeOdBunZhTRw1w _So4NWK1MEeOdBunZhTRw1w _So4NWa1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_So4NTa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_So4NTq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_So4NT61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_So4NUK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_So4NUa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_So4NUq1MEeOdBunZhTRw1w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NU61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NVK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NVa1MEeOdBunZhTRw1w" source="_So4NV61MEeOdBunZhTRw1w" target="_So4NWK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_So4NVq1MEeOdBunZhTRw1w" source="_So4NWK1MEeOdBunZhTRw1w" target="_So4NZq1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_So4NWa1MEeOdBunZhTRw1w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_So4NWq1MEeOdBunZhTRw1w" name="ExpressionStatement@75be83ed">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_So4NW61MEeOdBunZhTRw1w" name="Collect(Call(write))" incoming="_So4Nh61MEeOdBunZhTRw1w" mode="parallel" inputElement="_So4Na61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_So4NXK1MEeOdBunZhTRw1w" name="Call(write)">
              <argument xmi:id="_So4NXa1MEeOdBunZhTRw1w" name="Call(write).argument(value)" incoming="_So4Naa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NXq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NX61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So4NYK1MEeOdBunZhTRw1w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NYa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NYq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_So4NY61MEeOdBunZhTRw1w" name="Call(write).target" incoming="_So4Naq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NZK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NZa1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_So4NZq1MEeOdBunZhTRw1w" name="Collect(Call(write)).input(Fork(value))" outgoing="_So4Naa1MEeOdBunZhTRw1w" incoming="_So4NVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4NZ61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NaK1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4Naa1MEeOdBunZhTRw1w" source="_So4NZq1MEeOdBunZhTRw1w" target="_So4NXa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4Naq1MEeOdBunZhTRw1w" source="_So4Na61MEeOdBunZhTRw1w" target="_So4NY61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_So4Na61MEeOdBunZhTRw1w" name="Collect(Call(write)).inputElement" outgoing="_So4Naq1MEeOdBunZhTRw1w" incoming="_So4Nhq1MEeOdBunZhTRw1w" regionAsInput="_So4NW61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_So4NbK1MEeOdBunZhTRw1w" name="Feature(Call(At).result())" outgoing="_So4Nh61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_So4Nba1MEeOdBunZhTRw1w" name="Call(At)" incoming="_So4NhK1MEeOdBunZhTRw1w">
              <argument xmi:id="_So4Nbq1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_So4Ngq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4Nb61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4NcK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_So4Nca1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_So4Nha1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4Ncq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4Nc61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_So4NdK1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_So4Nhq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4Nda1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4Ndq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_So4Nd61MEeOdBunZhTRw1w" name="Tuple@76509ea8" outgoing="_So4NhK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_So4NeK1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_So4Nea1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel).result" outgoing="_So4Ngq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4Neq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4Ne61MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_So4NfK1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_So4Nfa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_So4Ng61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_So4Nfq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4Nf61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_So4NgK1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_So4Nga1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_So4Nha1MEeOdBunZhTRw1w" incoming="_So4Ng61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4Ngq1MEeOdBunZhTRw1w" source="_So4Nea1MEeOdBunZhTRw1w" target="_So4Nbq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4Ng61MEeOdBunZhTRw1w" source="_So4Nfa1MEeOdBunZhTRw1w" target="_So4Nga1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_So4NhK1MEeOdBunZhTRw1w" source="_So4Nd61MEeOdBunZhTRw1w" target="_So4Nba1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_So4Nha1MEeOdBunZhTRw1w" source="_So4Nga1MEeOdBunZhTRw1w" target="_So4Nca1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_So4Nhq1MEeOdBunZhTRw1w" source="_So4NdK1MEeOdBunZhTRw1w" target="_So4Na61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_So4Nh61MEeOdBunZhTRw1w" source="_So4NbK1MEeOdBunZhTRw1w" target="_So4NW61MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_So4NV61MEeOdBunZhTRw1w" name="Input(value)" outgoing="_So4NVa1MEeOdBunZhTRw1w" parameter="_So4NUq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_So4NWK1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_So4NVq1MEeOdBunZhTRw1w" incoming="_So4NVa1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <profileApplication xmi:id="_So4NiK1MEeOdBunZhTRw1w">
      <eAnnotations xmi:id="_So4Nia1MEeOdBunZhTRw1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_So4Niq1MEeOdBunZhTRw1w" base_BehavioralFeature="_So0mc61MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So4Ni61MEeOdBunZhTRw1w" base_BehavioralFeature="_So3CMK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So4NjK1MEeOdBunZhTRw1w" base_BehavioralFeature="_So0mbK1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So4Nja1MEeOdBunZhTRw1w" base_BehavioralFeature="_So0lu61MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So4Njq1MEeOdBunZhTRw1w" base_BehavioralFeature="_So1Kmq1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So4Nj61MEeOdBunZhTRw1w" base_BehavioralFeature="_So1LLa1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So4NkK1MEeOdBunZhTRw1w" base_BehavioralFeature="_So1yWa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40AK1MEeOdBunZhTRw1w" base_BehavioralFeature="_So0lt61MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So40Aa1MEeOdBunZhTRw1w" base_BehavioralFeature="_So2aSK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40Aq1MEeOdBunZhTRw1w" base_BehavioralFeature="_So1yUq1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So40A61MEeOdBunZhTRw1w" base_BehavioralFeature="_So1LqK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40BK1MEeOdBunZhTRw1w" base_BehavioralFeature="_So0md61MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40Ba1MEeOdBunZhTRw1w" base_BehavioralFeature="_So2aQa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40Bq1MEeOdBunZhTRw1w" base_BehavioralFeature="_So1Kk61MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_So40B61MEeOdBunZhTRw1w" base_BehavioralFeature="_So0mfq1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40CK1MEeOdBunZhTRw1w" base_BehavioralFeature="_So3CKa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40Ca1MEeOdBunZhTRw1w" base_BehavioralFeature="_So1Loa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_So40Cq1MEeOdBunZhTRw1w" base_BehavioralFeature="_So1KH61MEeOdBunZhTRw1w"/>
</xmi:XMI>

<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_etAH0M2iEeiCta8rX3fxAA" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_etAH0c2iEeiCta8rX3fxAA" name="Expressions_Sequence_Operation" visibility="public">
      <packageImport xmi:id="_etAH0s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etAH082iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etAH1M2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etAH1c2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etAH1s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_etAH182iEeiCta8rX3fxAA" general="_etAxTs2iEeiCta8rX3fxAA"/>
      <ownedAttribute xmi:id="_etAH2M2iEeiCta8rX3fxAA" name="Expressions_Sequence_Operation$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH2c2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH2s2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAH282iEeiCta8rX3fxAA" name="Expressions_Sequence_Operation$method$1" visibility="private" specification="_etAwcM2iEeiCta8rX3fxAA" node="_etAH4M2iEeiCta8rX3fxAA _etAH4c2iEeiCta8rX3fxAA" group="_etAH4c2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAH3M2iEeiCta8rX3fxAA" name="" type="_etAH0c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH3c2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH3s2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAH382iEeiCta8rX3fxAA" target="_etAH4M2iEeiCta8rX3fxAA" source="_etAICs2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_etAH4c2iEeiCta8rX3fxAA" name="Body(Expressions_Sequence_Operation$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAH4s2iEeiCta8rX3fxAA" target="_etAICs2iEeiCta8rX3fxAA" source="_etAIB82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAH482iEeiCta8rX3fxAA" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAH5M2iEeiCta8rX3fxAA" name="ExpressionStatement@1773cdb8">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAH5c2iEeiCta8rX3fxAA" target="_etAH_c2iEeiCta8rX3fxAA" source="_etAH682iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAH5s2iEeiCta8rX3fxAA" target="_etAH_M2iEeiCta8rX3fxAA" source="_etAH6c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAH582iEeiCta8rX3fxAA" target="_etAH9s2iEeiCta8rX3fxAA" source="_etAH8M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAH6M2iEeiCta8rX3fxAA" target="_etAH882iEeiCta8rX3fxAA" source="_etAH6c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAH6c2iEeiCta8rX3fxAA" name="Tuple@2d1f56e3" outgoing="_etAH5s2iEeiCta8rX3fxAA _etAH6M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAH6s2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_etAH682iEeiCta8rX3fxAA" name="Value(null).result" outgoing="_etAH5c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH7M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH7c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_etAH7s2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_etAH782iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_etAH8M2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAH582iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH8c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH8s2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAH882iEeiCta8rX3fxAA" name="Node(Call(run))" incoming="_etAH6M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAH9M2iEeiCta8rX3fxAA" target="_etAH-c2iEeiCta8rX3fxAA" source="_etAIAM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAH9c2iEeiCta8rX3fxAA" target="_etAIA82iEeiCta8rX3fxAA" source="_etAH9s2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etAH9s2iEeiCta8rX3fxAA" name="Input(Call(run).target)" incoming="_etAH582iEeiCta8rX3fxAA" outgoing="_etAH9c2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH982iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH-M2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etAH-c2iEeiCta8rX3fxAA" name="Output(Call(run).result())" incoming="_etAH9M2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH-s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH-82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_etAH_M2iEeiCta8rX3fxAA" name="Call(run)" incoming="_etAH5s2iEeiCta8rX3fxAA" operation="_etAwdM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAH_c2iEeiCta8rX3fxAA" name="Call(run).argument(tester)" incoming="_etAH5c2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAH_s2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAH_82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAIAM2iEeiCta8rX3fxAA" name="Call(run).result()" outgoing="_etAH9M2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIAc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIAs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <target xmi:id="_etAIA82iEeiCta8rX3fxAA" name="Call(run).target" incoming="_etAH9c2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIBM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIBc2iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_etAIBs2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_etAIB82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAH4s2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAICM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAICc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etAICs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAH4s2iEeiCta8rX3fxAA" outgoing="_etAH382iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAH4M2iEeiCta8rX3fxAA" name="Return" incoming="_etAH382iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" parameter="_etAH3M2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAIC82iEeiCta8rX3fxAA" name="run$method$1" visibility="private" specification="_etAwdM2iEeiCta8rX3fxAA" node="_etAIFc2iEeiCta8rX3fxAA _etAIFs2iEeiCta8rX3fxAA _etAIF82iEeiCta8rX3fxAA _etAIGM2iEeiCta8rX3fxAA" group="_etAIGM2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAIDM2iEeiCta8rX3fxAA" name="tester" type="_etBWA82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIDc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIDs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAID82iEeiCta8rX3fxAA" name="" type="_etAH0c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIEM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIEc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIEs2iEeiCta8rX3fxAA" target="_etAIFs2iEeiCta8rX3fxAA" source="_etAIFc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIE82iEeiCta8rX3fxAA" target="_etAIF82iEeiCta8rX3fxAA" source="_etAJCs2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIFM2iEeiCta8rX3fxAA" target="_etAJE82iEeiCta8rX3fxAA" source="_etAIFs2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_etAIGM2iEeiCta8rX3fxAA" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIGc2iEeiCta8rX3fxAA" target="_etAJCs2iEeiCta8rX3fxAA" source="_etAJB82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIGs2iEeiCta8rX3fxAA" target="_etAJGs2iEeiCta8rX3fxAA" source="_etAJCs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAIG82iEeiCta8rX3fxAA" target="_etAIJc2iEeiCta8rX3fxAA" source="_etAJGc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAIHM2iEeiCta8rX3fxAA" target="_etAJGc2iEeiCta8rX3fxAA" source="_etAJC82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIHc2iEeiCta8rX3fxAA" target="_etAJHs2iEeiCta8rX3fxAA" source="_etAJCs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIHs2iEeiCta8rX3fxAA" target="_etAJJc2iEeiCta8rX3fxAA" source="_etAJIc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIH82iEeiCta8rX3fxAA" target="_etAJMc2iEeiCta8rX3fxAA" source="_etAJKM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIIM2iEeiCta8rX3fxAA" target="_etAJN82iEeiCta8rX3fxAA" source="_etAJLM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAIIc2iEeiCta8rX3fxAA" target="_etAJO82iEeiCta8rX3fxAA" source="_etAJOs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIIs2iEeiCta8rX3fxAA" target="_etAJO82iEeiCta8rX3fxAA" source="_etAJNM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAII82iEeiCta8rX3fxAA" target="_etAJC82iEeiCta8rX3fxAA" source="_etAJO82iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_etAIJM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIJc2iEeiCta8rX3fxAA" name="Body" incoming="_etAIG82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIJs2iEeiCta8rX3fxAA" target="_etAIYs2iEeiCta8rX3fxAA" source="_etAIVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAIJ82iEeiCta8rX3fxAA" target="_etAIW82iEeiCta8rX3fxAA" source="_etAIM82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIKM2iEeiCta8rX3fxAA" target="_etAIcs2iEeiCta8rX3fxAA" source="_etAIVs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAIKc2iEeiCta8rX3fxAA" target="_etAIa82iEeiCta8rX3fxAA" source="_etAIW82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIKs2iEeiCta8rX3fxAA" target="_etAIg82iEeiCta8rX3fxAA" source="_etAIV82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAIK82iEeiCta8rX3fxAA" target="_etAIe82iEeiCta8rX3fxAA" source="_etAIa82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAILM2iEeiCta8rX3fxAA" target="_etAInM2iEeiCta8rX3fxAA" source="_etAIWM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAILc2iEeiCta8rX3fxAA" target="_etAIlM2iEeiCta8rX3fxAA" source="_etAIe82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAILs2iEeiCta8rX3fxAA" target="_etAIw82iEeiCta8rX3fxAA" source="_etAIWc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAIL82iEeiCta8rX3fxAA" target="_etAIrc2iEeiCta8rX3fxAA" source="_etAIlM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIMM2iEeiCta8rX3fxAA" target="_etAI3c2iEeiCta8rX3fxAA" source="_etAIWs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAIMc2iEeiCta8rX3fxAA" target="_etAI1c2iEeiCta8rX3fxAA" source="_etAIrc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAIMs2iEeiCta8rX3fxAA" target="_etAI_M2iEeiCta8rX3fxAA" source="_etAI1c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIM82iEeiCta8rX3fxAA" name="ExpressionStatement@7083b35a" outgoing="_etAIJ82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAINM2iEeiCta8rX3fxAA" target="_etAIVc2iEeiCta8rX3fxAA" source="_etAIPM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAINc2iEeiCta8rX3fxAA" target="_etAIVs2iEeiCta8rX3fxAA" source="_etAIP82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAINs2iEeiCta8rX3fxAA" target="_etAIV82iEeiCta8rX3fxAA" source="_etAIQs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIN82iEeiCta8rX3fxAA" target="_etAIWM2iEeiCta8rX3fxAA" source="_etAIRc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIOM2iEeiCta8rX3fxAA" target="_etAIWc2iEeiCta8rX3fxAA" source="_etAISM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIOc2iEeiCta8rX3fxAA" target="_etAIWs2iEeiCta8rX3fxAA" source="_etAIS82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIOs2iEeiCta8rX3fxAA" target="_etAITs2iEeiCta8rX3fxAA" source="_etAIUs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_etAIO82iEeiCta8rX3fxAA" name="Call(test)" operation="_etAwe82iEeiCta8rX3fxAA">
                <result xmi:id="_etAIPM2iEeiCta8rX3fxAA" name="Call(test).result(notEmpty)" outgoing="_etAINM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIPc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIPs2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_etAIP82iEeiCta8rX3fxAA" name="Call(test).result(includes)" outgoing="_etAINc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIQM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIQc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_etAIQs2iEeiCta8rX3fxAA" name="Call(test).result(m)" outgoing="_etAINs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIQ82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIRM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_etAIRc2iEeiCta8rX3fxAA" name="Call(test).result(n)" outgoing="_etAIN82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIRs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIR82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_etAISM2iEeiCta8rX3fxAA" name="Call(test).result(customers)" outgoing="_etAIOM2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAISc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAISs2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <result xmi:id="_etAIS82iEeiCta8rX3fxAA" name="Call(test).result(list)" outgoing="_etAIOc2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAITM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAITc2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <target xmi:id="_etAITs2iEeiCta8rX3fxAA" name="Call(test).target" incoming="_etAIOs2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIT82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIUM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_etAIUc2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_etAIUs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAIOs2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIU82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIVM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_etAIVc2iEeiCta8rX3fxAA" name="Fork(notEmpty)@4ed31bc9" incoming="_etAINM2iEeiCta8rX3fxAA" outgoing="_etAIJs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_etAIVs2iEeiCta8rX3fxAA" name="Fork(includes)@429bd63b" incoming="_etAINc2iEeiCta8rX3fxAA" outgoing="_etAIKM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_etAIV82iEeiCta8rX3fxAA" name="Fork(m)@5150aee4" incoming="_etAINs2iEeiCta8rX3fxAA" outgoing="_etAIKs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_etAIWM2iEeiCta8rX3fxAA" name="Fork(n)@78bfa54" incoming="_etAIN82iEeiCta8rX3fxAA" outgoing="_etAILM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_etAIWc2iEeiCta8rX3fxAA" name="Fork(customers)@3fd48c8d" incoming="_etAIOM2iEeiCta8rX3fxAA" outgoing="_etAILs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_etAIWs2iEeiCta8rX3fxAA" name="Fork(list)@23e2af42" incoming="_etAIOc2iEeiCta8rX3fxAA" outgoing="_etAIMM2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIW82iEeiCta8rX3fxAA" name="ExpressionStatement@497415a2" incoming="_etAIJ82iEeiCta8rX3fxAA" outgoing="_etAIKc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIXM2iEeiCta8rX3fxAA" target="_etAIX82iEeiCta8rX3fxAA" source="_etAIZ82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAIXc2iEeiCta8rX3fxAA" target="_etAIXs2iEeiCta8rX3fxAA" source="_etAIZc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAIXs2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_etAIXc2iEeiCta8rX3fxAA" behavior="_etBWlc2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAIX82iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_etAIXM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIYM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIYc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAIYs2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_etAIJs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIY82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIZM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIZc2iEeiCta8rX3fxAA" name="Tuple@551292f6" outgoing="_etAIXc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIZs2iEeiCta8rX3fxAA" name="Value(&quot;notEmpty&quot;)">
                  <result xmi:id="_etAIZ82iEeiCta8rX3fxAA" name="Value(&quot;notEmpty&quot;).result" outgoing="_etAIXM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIaM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIac2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAIas2iEeiCta8rX3fxAA" value="notEmpty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIa82iEeiCta8rX3fxAA" name="ExpressionStatement@35d0ec5a" incoming="_etAIKc2iEeiCta8rX3fxAA" outgoing="_etAIK82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIbM2iEeiCta8rX3fxAA" target="_etAIb82iEeiCta8rX3fxAA" source="_etAId82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAIbc2iEeiCta8rX3fxAA" target="_etAIbs2iEeiCta8rX3fxAA" source="_etAIdc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAIbs2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_etAIbc2iEeiCta8rX3fxAA" behavior="_etBWlc2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAIb82iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_etAIbM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIcM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIcc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAIcs2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_etAIKM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIc82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIdM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIdc2iEeiCta8rX3fxAA" name="Tuple@695475e1" outgoing="_etAIbc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIds2iEeiCta8rX3fxAA" name="Value(&quot;includes&quot;)">
                  <result xmi:id="_etAId82iEeiCta8rX3fxAA" name="Value(&quot;includes&quot;).result" outgoing="_etAIbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIeM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIec2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAIes2iEeiCta8rX3fxAA" value="includes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIe82iEeiCta8rX3fxAA" name="ExpressionStatement@504e57dc" incoming="_etAIK82iEeiCta8rX3fxAA" outgoing="_etAILc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIfM2iEeiCta8rX3fxAA" target="_etAIgM2iEeiCta8rX3fxAA" source="_etAIi82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIfc2iEeiCta8rX3fxAA" target="_etAIhs2iEeiCta8rX3fxAA" source="_etAIkM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAIfs2iEeiCta8rX3fxAA" target="_etAIf82iEeiCta8rX3fxAA" source="_etAIic2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAIf82iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_etAIfs2iEeiCta8rX3fxAA" behavior="_etBW-s2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAIgM2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_etAIfM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIgc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIgs2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAIg82iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_etAIKs2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIhM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIhc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAIhs2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_etAIfc2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIh82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIiM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIic2iEeiCta8rX3fxAA" name="Tuple@601714fc" outgoing="_etAIfs2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIis2iEeiCta8rX3fxAA" name="Value(&quot;m&quot;)">
                  <result xmi:id="_etAIi82iEeiCta8rX3fxAA" name="Value(&quot;m&quot;).result" outgoing="_etAIfM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIjM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIjc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAIjs2iEeiCta8rX3fxAA" value="m">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIj82iEeiCta8rX3fxAA" name="Value(3)">
                  <result xmi:id="_etAIkM2iEeiCta8rX3fxAA" name="Value(3).result" outgoing="_etAIfc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIkc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIks2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_etAIk82iEeiCta8rX3fxAA" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIlM2iEeiCta8rX3fxAA" name="ExpressionStatement@189722a8" incoming="_etAILc2iEeiCta8rX3fxAA" outgoing="_etAIL82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIlc2iEeiCta8rX3fxAA" target="_etAImc2iEeiCta8rX3fxAA" source="_etAIpM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIls2iEeiCta8rX3fxAA" target="_etAIn82iEeiCta8rX3fxAA" source="_etAIqc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAIl82iEeiCta8rX3fxAA" target="_etAImM2iEeiCta8rX3fxAA" source="_etAIos2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAImM2iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_etAIl82iEeiCta8rX3fxAA" behavior="_etBW-s2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAImc2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_etAIlc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIms2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIm82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAInM2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_etAILM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAInc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIns2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAIn82iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_etAIls2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIoM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIoc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIos2iEeiCta8rX3fxAA" name="Tuple@5b1c735d" outgoing="_etAIl82iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIo82iEeiCta8rX3fxAA" name="Value(&quot;n&quot;)">
                  <result xmi:id="_etAIpM2iEeiCta8rX3fxAA" name="Value(&quot;n&quot;).result" outgoing="_etAIlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIpc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIps2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAIp82iEeiCta8rX3fxAA" value="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIqM2iEeiCta8rX3fxAA" name="Value(3)">
                  <result xmi:id="_etAIqc2iEeiCta8rX3fxAA" name="Value(3).result" outgoing="_etAIls2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIqs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIq82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_etAIrM2iEeiCta8rX3fxAA" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIrc2iEeiCta8rX3fxAA" name="ExpressionStatement@77a825e" incoming="_etAIL82iEeiCta8rX3fxAA" outgoing="_etAIMc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIrs2iEeiCta8rX3fxAA" target="_etAIs82iEeiCta8rX3fxAA" source="_etAIv82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIr82iEeiCta8rX3fxAA" target="_etAIts2iEeiCta8rX3fxAA" source="_etAIz82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIsM2iEeiCta8rX3fxAA" target="_etAIuc2iEeiCta8rX3fxAA" source="_etAI0c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAIsc2iEeiCta8rX3fxAA" target="_etAIss2iEeiCta8rX3fxAA" source="_etAIvM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAIss2iEeiCta8rX3fxAA" name="Call(AssertList)" incoming="_etAIsc2iEeiCta8rX3fxAA" behavior="_etBZGs2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAIs82iEeiCta8rX3fxAA" name="Call(AssertList).argument(label)" incoming="_etAIrs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAItM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAItc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAIts2iEeiCta8rX3fxAA" name="Call(AssertList).argument(list)" incoming="_etAIr82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIt82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIuM2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAIuc2iEeiCta8rX3fxAA" name="Call(AssertList).argument(expected)" incoming="_etAIsM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIus2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIu82iEeiCta8rX3fxAA" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAIvM2iEeiCta8rX3fxAA" name="Tuple@61716e7c" outgoing="_etAIsc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIvc2iEeiCta8rX3fxAA" target="_etAIzs2iEeiCta8rX3fxAA" source="_etAIw82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAIvs2iEeiCta8rX3fxAA" name="Value(&quot;customers.name&quot;)">
                  <result xmi:id="_etAIv82iEeiCta8rX3fxAA" name="Value(&quot;customers.name&quot;).result" outgoing="_etAIrs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIwM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIwc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAIws2iEeiCta8rX3fxAA" value="customers.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_etAIw82iEeiCta8rX3fxAA" name="Fork(Fork(customers)@3fd48c8d)" incoming="_etAILs2iEeiCta8rX3fxAA" outgoing="_etAIvc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_etAIxM2iEeiCta8rX3fxAA" name="Collect(Read(name))" mode="parallel" outputElement="_etAIz82iEeiCta8rX3fxAA" inputElement="_etAIzs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIxc2iEeiCta8rX3fxAA" target="_etAIyM2iEeiCta8rX3fxAA" source="_etAIzs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAIxs2iEeiCta8rX3fxAA" target="_etAIz82iEeiCta8rX3fxAA" source="_etAIy82iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAIx82iEeiCta8rX3fxAA" name="Read(name)" structuralFeature="_etAwk82iEeiCta8rX3fxAA">
                    <object xmi:id="_etAIyM2iEeiCta8rX3fxAA" name="Read(name).object" incoming="_etAIxc2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIyc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIys2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_etAIy82iEeiCta8rX3fxAA" name="Read(name).result" outgoing="_etAIxs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAIzM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAIzc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_etAIzs2iEeiCta8rX3fxAA" name="Collect(Read(name)).inputElement" incoming="_etAIvc2iEeiCta8rX3fxAA" outgoing="_etAIxc2iEeiCta8rX3fxAA" regionAsInput="_etAIxM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_etAIz82iEeiCta8rX3fxAA" name="Collect(Read(name)).outputElement" incoming="_etAIxs2iEeiCta8rX3fxAA" outgoing="_etAIr82iEeiCta8rX3fxAA" regionAsOutput="_etAIxM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAI0M2iEeiCta8rX3fxAA" name="Value(&quot;C&quot;)">
                  <result xmi:id="_etAI0c2iEeiCta8rX3fxAA" name="Value(&quot;C&quot;).result" outgoing="_etAIsM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI0s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI082iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAI1M2iEeiCta8rX3fxAA" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAI1c2iEeiCta8rX3fxAA" name="ExpressionStatement@1873fffd" incoming="_etAIMc2iEeiCta8rX3fxAA" outgoing="_etAIMs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAI1s2iEeiCta8rX3fxAA" target="_etAI2s2iEeiCta8rX3fxAA" source="_etAI5c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAI182iEeiCta8rX3fxAA" target="_etAI4M2iEeiCta8rX3fxAA" source="_etAI7c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAI2M2iEeiCta8rX3fxAA" target="_etAI2c2iEeiCta8rX3fxAA" source="_etAI482iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAI2c2iEeiCta8rX3fxAA" name="Call(AssertList)" incoming="_etAI2M2iEeiCta8rX3fxAA" behavior="_etBZGs2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAI2s2iEeiCta8rX3fxAA" name="Call(AssertList).argument(label)" incoming="_etAI1s2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI282iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI3M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etAI3c2iEeiCta8rX3fxAA" name="Call(AssertList).argument(list)" incoming="_etAIMM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI3s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI382iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAI4M2iEeiCta8rX3fxAA" name="Call(AssertList).argument(expected)" incoming="_etAI182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI4c2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI4s2iEeiCta8rX3fxAA" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAI482iEeiCta8rX3fxAA" name="Tuple@761c06da" outgoing="_etAI2M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAI5M2iEeiCta8rX3fxAA" name="Value(&quot;list&quot;)">
                  <result xmi:id="_etAI5c2iEeiCta8rX3fxAA" name="Value(&quot;list&quot;).result" outgoing="_etAI1s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI5s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI582iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAI6M2iEeiCta8rX3fxAA" value="list">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAI6c2iEeiCta8rX3fxAA" name="SequenceConstructionExpression@3f54b2d1">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etAI6s2iEeiCta8rX3fxAA" target="_etAI9s2iEeiCta8rX3fxAA" source="_etAI8M2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAI682iEeiCta8rX3fxAA" target="_etAI7c2iEeiCta8rX3fxAA" source="_etAI8s2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAI7M2iEeiCta8rX3fxAA" target="_etAI7c2iEeiCta8rX3fxAA" source="_etAI-M2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_etAI7c2iEeiCta8rX3fxAA" name="SequenceConstructionExpression@3f54b2d1.output" incoming="_etAI682iEeiCta8rX3fxAA _etAI7M2iEeiCta8rX3fxAA" outgoing="_etAI182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI7s2iEeiCta8rX3fxAA" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI782iEeiCta8rX3fxAA" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAI8M2iEeiCta8rX3fxAA" name="SequenceExpressionList@3e05309b#1" outgoing="_etAI6s2iEeiCta8rX3fxAA">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAI8c2iEeiCta8rX3fxAA" name="Value(&quot;Blah&quot;)">
                      <result xmi:id="_etAI8s2iEeiCta8rX3fxAA" name="Value(&quot;Blah&quot;).result" outgoing="_etAI682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI882iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI9M2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_etAI9c2iEeiCta8rX3fxAA" value="Blah">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAI9s2iEeiCta8rX3fxAA" name="SequenceExpressionList@3e05309b#2" incoming="_etAI6s2iEeiCta8rX3fxAA">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAI982iEeiCta8rX3fxAA" name="Value(1)">
                      <result xmi:id="_etAI-M2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etAI7M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAI-c2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAI-s2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_etAI-82iEeiCta8rX3fxAA" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAI_M2iEeiCta8rX3fxAA" name="ExpressionStatement@6571f64a" incoming="_etAIMs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAI_c2iEeiCta8rX3fxAA" target="_etAI_82iEeiCta8rX3fxAA" source="_etAJA82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_etAI_s2iEeiCta8rX3fxAA" name="Call(done)" operation="_etBV982iEeiCta8rX3fxAA">
                <target xmi:id="_etAI_82iEeiCta8rX3fxAA" name="Call(done).target" incoming="_etAI_c2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJAM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJAc2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_etAJAs2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_etAJA82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAI_c2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJBM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJBc2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_etAJBs2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_etAJB82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAIGc2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJCM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJCc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etAJCs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAIGc2iEeiCta8rX3fxAA" outgoing="_etAIE82iEeiCta8rX3fxAA _etAIGs2iEeiCta8rX3fxAA _etAIHc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJC82iEeiCta8rX3fxAA" name="Super" incoming="_etAII82iEeiCta8rX3fxAA" outgoing="_etAIHM2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJDM2iEeiCta8rX3fxAA" name="ExpressionStatement@354571d5">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJDc2iEeiCta8rX3fxAA" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJDs2iEeiCta8rX3fxAA" target="_etAJD82iEeiCta8rX3fxAA" source="_etAJFs2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAJD82iEeiCta8rX3fxAA" name="Output(Call(Test$method$1).result())" incoming="_etAJDs2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJEM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJEc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAJEs2iEeiCta8rX3fxAA" name="Call(Test$method$1)" behavior="_etAxc82iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAJE82iEeiCta8rX3fxAA" name="Call(Test$method$1).argument(tester)" incoming="_etAIFM2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJFM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJFc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAJFs2iEeiCta8rX3fxAA" name="Call(Test$method$1).result()" outgoing="_etAJDs2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJF82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJGM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_etAJGc2iEeiCta8rX3fxAA" name="Call(Expressions_Sequence_Operation$initialization$1)" incoming="_etAIHM2iEeiCta8rX3fxAA" outgoing="_etAIG82iEeiCta8rX3fxAA" operation="_etAwb82iEeiCta8rX3fxAA">
            <target xmi:id="_etAJGs2iEeiCta8rX3fxAA" name="Call(Expressions_Sequence_Operation$initialization$1).target" incoming="_etAIGs2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJG82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJHM2iEeiCta8rX3fxAA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAJHc2iEeiCta8rX3fxAA" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_etAH2M2iEeiCta8rX3fxAA">
            <object xmi:id="_etAJHs2iEeiCta8rX3fxAA" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_etAIHc2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJH82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJIM2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_etAJIc2iEeiCta8rX3fxAA" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_etAIHs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJIs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJI82iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAJJM2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_etAJJc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etAIHs2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJJs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJJ82iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_etAJKM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etAIH82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJKc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJKs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAJK82iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_etAJLM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etAIIM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJLc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJLs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_etAJL82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_etAJMM2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_etAJMc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etAIH82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJMs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJM82iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_etAJNM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etAIIs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJNc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJNs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_etAJN82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etAIIM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJOM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJOc2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_etAJOs2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etAIIc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_etAJO82iEeiCta8rX3fxAA" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_etAIIc2iEeiCta8rX3fxAA _etAIIs2iEeiCta8rX3fxAA" outgoing="_etAII82iEeiCta8rX3fxAA" decisionInputFlow="_etAIIs2iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAIFc2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_etAIEs2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" parameter="_etAIDM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_etAIFs2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_etAIEs2iEeiCta8rX3fxAA" outgoing="_etAIFM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAIF82iEeiCta8rX3fxAA" name="Return" incoming="_etAIE82iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" parameter="_etAID82iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAJPM2iEeiCta8rX3fxAA" name="test$method$1" visibility="private" specification="_etAwe82iEeiCta8rX3fxAA" node="_etAJVc2iEeiCta8rX3fxAA _etAJVs2iEeiCta8rX3fxAA _etAJV82iEeiCta8rX3fxAA _etAJWM2iEeiCta8rX3fxAA _etAJWc2iEeiCta8rX3fxAA _etAJWs2iEeiCta8rX3fxAA _etAJW82iEeiCta8rX3fxAA" group="_etAJW82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAJPc2iEeiCta8rX3fxAA" name="notEmpty" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJPs2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJP82iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAJQM2iEeiCta8rX3fxAA" name="includes" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJQc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJQs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAJQ82iEeiCta8rX3fxAA" name="m" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJRM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJRc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAJRs2iEeiCta8rX3fxAA" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJR82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJSM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAJSc2iEeiCta8rX3fxAA" name="customers" type="_etAwj82iEeiCta8rX3fxAA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJSs2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJS82iEeiCta8rX3fxAA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAJTM2iEeiCta8rX3fxAA" name="list" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJTc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJTs2iEeiCta8rX3fxAA" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJT82iEeiCta8rX3fxAA" target="_etAJVc2iEeiCta8rX3fxAA" source="_etAJiM2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJUM2iEeiCta8rX3fxAA" target="_etAJVs2iEeiCta8rX3fxAA" source="_etAJi82iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJUc2iEeiCta8rX3fxAA" target="_etAJV82iEeiCta8rX3fxAA" source="_etAJjs2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJUs2iEeiCta8rX3fxAA" target="_etAJWM2iEeiCta8rX3fxAA" source="_etAJkc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJU82iEeiCta8rX3fxAA" target="_etAJWc2iEeiCta8rX3fxAA" source="_etAJlM2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJVM2iEeiCta8rX3fxAA" target="_etAJWs2iEeiCta8rX3fxAA" source="_etAJl82iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_etAJW82iEeiCta8rX3fxAA" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJXM2iEeiCta8rX3fxAA" target="_etAJvc2iEeiCta8rX3fxAA" source="_etAJms2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJXc2iEeiCta8rX3fxAA" target="_etAJ0M2iEeiCta8rX3fxAA" source="_etAJv82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJXs2iEeiCta8rX3fxAA" target="_etAJxs2iEeiCta8rX3fxAA" source="_etAJvc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJX82iEeiCta8rX3fxAA" target="_etAJ4M2iEeiCta8rX3fxAA" source="_etAJv82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJYM2iEeiCta8rX3fxAA" target="_etAJ482iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJYc2iEeiCta8rX3fxAA" target="_etAJ1s2iEeiCta8rX3fxAA" source="_etAJxs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJYs2iEeiCta8rX3fxAA" target="_etAJ882iEeiCta8rX3fxAA" source="_etAJv82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJY82iEeiCta8rX3fxAA" target="_etAJ9s2iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJZM2iEeiCta8rX3fxAA" target="_etAJ6c2iEeiCta8rX3fxAA" source="_etAJ1s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJZc2iEeiCta8rX3fxAA" target="_etAu7c2iEeiCta8rX3fxAA" source="_etAJ682iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJZs2iEeiCta8rX3fxAA" target="_etAJ_M2iEeiCta8rX3fxAA" source="_etAJ6c2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJZ82iEeiCta8rX3fxAA" target="_etAvIs2iEeiCta8rX3fxAA" source="_etAu9s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJaM2iEeiCta8rX3fxAA" target="_etAu982iEeiCta8rX3fxAA" source="_etAJ_M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJac2iEeiCta8rX3fxAA" target="_etAvNM2iEeiCta8rX3fxAA" source="_etAvK82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJas2iEeiCta8rX3fxAA" target="_etAvN82iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJa82iEeiCta8rX3fxAA" target="_etAvLM2iEeiCta8rX3fxAA" source="_etAu982iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJbM2iEeiCta8rX3fxAA" target="_etAvT82iEeiCta8rX3fxAA" source="_etAvPc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJbc2iEeiCta8rX3fxAA" target="_etAvPs2iEeiCta8rX3fxAA" source="_etAvLM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJbs2iEeiCta8rX3fxAA" target="_etAvYc2iEeiCta8rX3fxAA" source="_etAvWM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJb82iEeiCta8rX3fxAA" target="_etAvZM2iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJcM2iEeiCta8rX3fxAA" target="_etAvWc2iEeiCta8rX3fxAA" source="_etAvPs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJcc2iEeiCta8rX3fxAA" target="_etAva82iEeiCta8rX3fxAA" source="_etAvWc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJcs2iEeiCta8rX3fxAA" target="_etAvg82iEeiCta8rX3fxAA" source="_etAva82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJc82iEeiCta8rX3fxAA" target="_etAvm82iEeiCta8rX3fxAA" source="_etAvg82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJdM2iEeiCta8rX3fxAA" target="_etAvqc2iEeiCta8rX3fxAA" source="_etAvm82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJdc2iEeiCta8rX3fxAA" target="_etAvu82iEeiCta8rX3fxAA" source="_etAvsM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJds2iEeiCta8rX3fxAA" target="_etAvvs2iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJd82iEeiCta8rX3fxAA" target="_etAvsc2iEeiCta8rX3fxAA" source="_etAvqc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJeM2iEeiCta8rX3fxAA" target="_etAvzM2iEeiCta8rX3fxAA" source="_etAvs82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJec2iEeiCta8rX3fxAA" target="_etAvz82iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJes2iEeiCta8rX3fxAA" target="_etAvxM2iEeiCta8rX3fxAA" source="_etAvsc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJe82iEeiCta8rX3fxAA" target="_etAv582iEeiCta8rX3fxAA" source="_etAv1c2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJfM2iEeiCta8rX3fxAA" target="_etAv1s2iEeiCta8rX3fxAA" source="_etAvxM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJfc2iEeiCta8rX3fxAA" target="_etAwAs2iEeiCta8rX3fxAA" source="_etAv8M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJfs2iEeiCta8rX3fxAA" target="_etAv8c2iEeiCta8rX3fxAA" source="_etAv1s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJf82iEeiCta8rX3fxAA" target="_etAwFM2iEeiCta8rX3fxAA" source="_etAwC82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJgM2iEeiCta8rX3fxAA" target="_etAwF82iEeiCta8rX3fxAA" source="_etAJnM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAJgc2iEeiCta8rX3fxAA" target="_etAwDM2iEeiCta8rX3fxAA" source="_etAv8c2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJgs2iEeiCta8rX3fxAA" target="_etAJiM2iEeiCta8rX3fxAA" source="_etAJyM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJg82iEeiCta8rX3fxAA" target="_etAJi82iEeiCta8rX3fxAA" source="_etAJ2M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJhM2iEeiCta8rX3fxAA" target="_etAJjs2iEeiCta8rX3fxAA" source="_etAvbc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJhc2iEeiCta8rX3fxAA" target="_etAJkc2iEeiCta8rX3fxAA" source="_etAvhc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJhs2iEeiCta8rX3fxAA" target="_etAJlM2iEeiCta8rX3fxAA" source="_etAvas2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJh82iEeiCta8rX3fxAA" target="_etAJl82iEeiCta8rX3fxAA" source="_etAwHc2iEeiCta8rX3fxAA"/>
          <structuredNodeOutput xmi:id="_etAJiM2iEeiCta8rX3fxAA" name="Output(notEmpty)" incoming="_etAJgs2iEeiCta8rX3fxAA" outgoing="_etAJT82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJic2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJis2iEeiCta8rX3fxAA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_etAJi82iEeiCta8rX3fxAA" name="Output(includes)" incoming="_etAJg82iEeiCta8rX3fxAA" outgoing="_etAJUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJjM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJjc2iEeiCta8rX3fxAA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_etAJjs2iEeiCta8rX3fxAA" name="Output(m)" incoming="_etAJhM2iEeiCta8rX3fxAA" outgoing="_etAJUc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJj82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJkM2iEeiCta8rX3fxAA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_etAJkc2iEeiCta8rX3fxAA" name="Output(n)" incoming="_etAJhc2iEeiCta8rX3fxAA" outgoing="_etAJUs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJks2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJk82iEeiCta8rX3fxAA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_etAJlM2iEeiCta8rX3fxAA" name="Output(customers)" incoming="_etAJhs2iEeiCta8rX3fxAA" outgoing="_etAJU82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJlc2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJls2iEeiCta8rX3fxAA" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_etAJl82iEeiCta8rX3fxAA" name="Output(list)" incoming="_etAJh82iEeiCta8rX3fxAA" outgoing="_etAJVM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJmM2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJmc2iEeiCta8rX3fxAA" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJms2iEeiCta8rX3fxAA" name="ExpressionStatement@553b9c69" outgoing="_etAJXM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJm82iEeiCta8rX3fxAA" target="_etAJnM2iEeiCta8rX3fxAA" source="_etAJr82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAJnM2iEeiCta8rX3fxAA" name="Fork(customer)@1de0fbb2" incoming="_etAJm82iEeiCta8rX3fxAA" outgoing="_etAJYM2iEeiCta8rX3fxAA _etAJY82iEeiCta8rX3fxAA _etAJas2iEeiCta8rX3fxAA _etAJb82iEeiCta8rX3fxAA _etAJds2iEeiCta8rX3fxAA _etAJec2iEeiCta8rX3fxAA _etAJgM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJnc2iEeiCta8rX3fxAA" name="RightHandSide@192b9521">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJns2iEeiCta8rX3fxAA" target="_etAJvM2iEeiCta8rX3fxAA" source="_etAJpM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJn82iEeiCta8rX3fxAA" target="_etAJuc2iEeiCta8rX3fxAA" source="_etAJvM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJoM2iEeiCta8rX3fxAA" target="_etAJs82iEeiCta8rX3fxAA" source="_etAJqc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAJoc2iEeiCta8rX3fxAA" target="_etAJrc2iEeiCta8rX3fxAA" source="_etAJp82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAJos2iEeiCta8rX3fxAA" target="_etAJrc2iEeiCta8rX3fxAA" source="_etAJo82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_etAJo82iEeiCta8rX3fxAA" name="Create(Customer)" outgoing="_etAJos2iEeiCta8rX3fxAA" classifier="_etAwj82iEeiCta8rX3fxAA">
                <result xmi:id="_etAJpM2iEeiCta8rX3fxAA" name="Create(Customer).result" outgoing="_etAJns2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJpc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJps2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJp82iEeiCta8rX3fxAA" name="Tuple@39de5057" outgoing="_etAJoc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAJqM2iEeiCta8rX3fxAA" name="Value(&quot;A&quot;)">
                  <result xmi:id="_etAJqc2iEeiCta8rX3fxAA" name="Value(&quot;A&quot;).result" outgoing="_etAJoM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJqs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJq82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAJrM2iEeiCta8rX3fxAA" value="A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJrc2iEeiCta8rX3fxAA" name="Node(Call(Customer))" incoming="_etAJos2iEeiCta8rX3fxAA _etAJoc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJrs2iEeiCta8rX3fxAA" target="_etAJr82iEeiCta8rX3fxAA" source="_etAJvM2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAJr82iEeiCta8rX3fxAA" name="Output(Fork(Create(Customer).result))" incoming="_etAJrs2iEeiCta8rX3fxAA" outgoing="_etAJm82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJsM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJsc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_etAJss2iEeiCta8rX3fxAA" name="Call(Customer)" operation="_etAxRs2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAJs82iEeiCta8rX3fxAA" name="Call(Customer).argument(name)" incoming="_etAJoM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJtM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJtc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAJts2iEeiCta8rX3fxAA" name="Call(Customer).result()" type="_etAwj82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJt82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJuM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <target xmi:id="_etAJuc2iEeiCta8rX3fxAA" name="Call(Customer).target" incoming="_etAJn82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJus2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJu82iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_etAJvM2iEeiCta8rX3fxAA" name="Fork(Create(Customer).result)" incoming="_etAJns2iEeiCta8rX3fxAA" outgoing="_etAJn82iEeiCta8rX3fxAA _etAJrs2iEeiCta8rX3fxAA"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJvc2iEeiCta8rX3fxAA" name="ExpressionStatement@79cf3b85" incoming="_etAJXM2iEeiCta8rX3fxAA" outgoing="_etAJXs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJvs2iEeiCta8rX3fxAA" target="_etAJv82iEeiCta8rX3fxAA" source="_etAJws2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAJv82iEeiCta8rX3fxAA" name="Fork(customers)@5d95f9b0" incoming="_etAJvs2iEeiCta8rX3fxAA" outgoing="_etAJXc2iEeiCta8rX3fxAA _etAJX82iEeiCta8rX3fxAA _etAJYs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJwM2iEeiCta8rX3fxAA" name="RightHandSide@693766e8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAJwc2iEeiCta8rX3fxAA" name="Value(null)">
                <result xmi:id="_etAJws2iEeiCta8rX3fxAA" name="Value(null).result" outgoing="_etAJvs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJw82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJxM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_etAJxc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJxs2iEeiCta8rX3fxAA" name="ExpressionStatement@6203580c" incoming="_etAJXs2iEeiCta8rX3fxAA" outgoing="_etAJYc2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJx82iEeiCta8rX3fxAA" target="_etAJyM2iEeiCta8rX3fxAA" source="_etAJzM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAJyM2iEeiCta8rX3fxAA" name="Fork(notEmpty)@7ddfed34" incoming="_etAJx82iEeiCta8rX3fxAA" outgoing="_etAJgs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJyc2iEeiCta8rX3fxAA" name="RightHandSide@6d65d262">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJys2iEeiCta8rX3fxAA" name="Node(Call(NotEmpty))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJy82iEeiCta8rX3fxAA" target="_etAJzM2iEeiCta8rX3fxAA" source="_etAJ082iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAJzM2iEeiCta8rX3fxAA" name="Output(Call(NotEmpty).result())" incoming="_etAJy82iEeiCta8rX3fxAA" outgoing="_etAJx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJzc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJzs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAJz82iEeiCta8rX3fxAA" name="Call(NotEmpty)">
                  <argument xmi:id="_etAJ0M2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etAJXc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ0c2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ0s2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_etAJ082iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etAJy82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ1M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ1c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ1s2iEeiCta8rX3fxAA" name="ExpressionStatement@363b6409" incoming="_etAJYc2iEeiCta8rX3fxAA" outgoing="_etAJZM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJ182iEeiCta8rX3fxAA" target="_etAJ2M2iEeiCta8rX3fxAA" source="_etAJ3M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAJ2M2iEeiCta8rX3fxAA" name="Fork(includes)@19440b78" incoming="_etAJ182iEeiCta8rX3fxAA" outgoing="_etAJg82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ2c2iEeiCta8rX3fxAA" name="RightHandSide@29f843f4">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ2s2iEeiCta8rX3fxAA" name="Node(Call(Includes))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJ282iEeiCta8rX3fxAA" target="_etAJ3M2iEeiCta8rX3fxAA" source="_etAJ5s2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAJ3M2iEeiCta8rX3fxAA" name="Output(Call(Includes).result())" incoming="_etAJ282iEeiCta8rX3fxAA" outgoing="_etAJ182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ3c2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ3s2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAJ382iEeiCta8rX3fxAA" name="Call(Includes)">
                  <argument xmi:id="_etAJ4M2iEeiCta8rX3fxAA" name="Call(Includes).argument(seq)" incoming="_etAJX82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ4c2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ4s2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <argument xmi:id="_etAJ482iEeiCta8rX3fxAA" name="Call(Includes).argument(element)" incoming="_etAJYM2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ5M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ5c2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAJ5s2iEeiCta8rX3fxAA" name="Call(Includes).result()" outgoing="_etAJ282iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ582iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ6M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Includes"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ6c2iEeiCta8rX3fxAA" name="ExpressionStatement@1acd6104" incoming="_etAJZM2iEeiCta8rX3fxAA" outgoing="_etAJZs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJ6s2iEeiCta8rX3fxAA" target="_etAJ682iEeiCta8rX3fxAA" source="_etAJ782iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAJ682iEeiCta8rX3fxAA" name="Fork(customers)@66faccdc" incoming="_etAJ6s2iEeiCta8rX3fxAA" outgoing="_etAJZc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ7M2iEeiCta8rX3fxAA" name="RightHandSide@4660df13">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ7c2iEeiCta8rX3fxAA" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJ7s2iEeiCta8rX3fxAA" target="_etAJ782iEeiCta8rX3fxAA" source="_etAJ-c2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAJ782iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAJ7s2iEeiCta8rX3fxAA" outgoing="_etAJ6s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ8M2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ8c2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAJ8s2iEeiCta8rX3fxAA" name="Call(Including)">
                  <argument xmi:id="_etAJ882iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJYs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ9M2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ9c2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <argument xmi:id="_etAJ9s2iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAJY82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ982iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ-M2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAJ-c2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAJ7s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAJ-s2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAJ-82iEeiCta8rX3fxAA" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAJ_M2iEeiCta8rX3fxAA" name="ExpressionStatement@1036e813" incoming="_etAJZs2iEeiCta8rX3fxAA" outgoing="_etAJaM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJ_c2iEeiCta8rX3fxAA" target="_etAu8M2iEeiCta8rX3fxAA" source="_etAKE82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAJ_s2iEeiCta8rX3fxAA" target="_etAu7M2iEeiCta8rX3fxAA" source="_etAKAc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAJ_82iEeiCta8rX3fxAA" target="_etAu9s2iEeiCta8rX3fxAA" source="_etAu882iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAKAM2iEeiCta8rX3fxAA" target="_etAu582iEeiCta8rX3fxAA" source="_etAKAc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAKAc2iEeiCta8rX3fxAA" name="Tuple@61682825" outgoing="_etAJ_s2iEeiCta8rX3fxAA _etAKAM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAKAs2iEeiCta8rX3fxAA" target="_etAu5s2iEeiCta8rX3fxAA" source="_etAKCM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAKA82iEeiCta8rX3fxAA" target="_etAu482iEeiCta8rX3fxAA" source="_etAu5s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAKBM2iEeiCta8rX3fxAA" target="_etAKF82iEeiCta8rX3fxAA" source="_etAKDc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAKBc2iEeiCta8rX3fxAA" target="_etAKEc2iEeiCta8rX3fxAA" source="_etAKC82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAKBs2iEeiCta8rX3fxAA" target="_etAKEc2iEeiCta8rX3fxAA" source="_etAKB82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_etAKB82iEeiCta8rX3fxAA" name="Create(Customer)" outgoing="_etAKBs2iEeiCta8rX3fxAA" classifier="_etAwj82iEeiCta8rX3fxAA">
                <result xmi:id="_etAKCM2iEeiCta8rX3fxAA" name="Create(Customer).result" outgoing="_etAKAs2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAKCc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAKCs2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAKC82iEeiCta8rX3fxAA" name="Tuple@76f42a10" outgoing="_etAKBc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAKDM2iEeiCta8rX3fxAA" name="Value(&quot;B&quot;)">
                  <result xmi:id="_etAKDc2iEeiCta8rX3fxAA" name="Value(&quot;B&quot;).result" outgoing="_etAKBM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAKDs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAKD82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAKEM2iEeiCta8rX3fxAA" value="B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAKEc2iEeiCta8rX3fxAA" name="Node(Call(Customer))" incoming="_etAKBs2iEeiCta8rX3fxAA _etAKBc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAKEs2iEeiCta8rX3fxAA" target="_etAKE82iEeiCta8rX3fxAA" source="_etAu5s2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAKE82iEeiCta8rX3fxAA" name="Output(Fork(Create(Customer).result))" incoming="_etAKEs2iEeiCta8rX3fxAA" outgoing="_etAJ_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAKFM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAKFc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_etAKFs2iEeiCta8rX3fxAA" name="Call(Customer)" operation="_etAxRs2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAKF82iEeiCta8rX3fxAA" name="Call(Customer).argument(name)" incoming="_etAKBM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAKGM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAKGc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAu4M2iEeiCta8rX3fxAA" name="Call(Customer).result()" type="_etAwj82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAu4c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAu4s2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <target xmi:id="_etAu482iEeiCta8rX3fxAA" name="Call(Customer).target" incoming="_etAKA82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAu5M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAu5c2iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_etAu5s2iEeiCta8rX3fxAA" name="Fork(Create(Customer).result)" incoming="_etAKAs2iEeiCta8rX3fxAA" outgoing="_etAKA82iEeiCta8rX3fxAA _etAKEs2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAu582iEeiCta8rX3fxAA" name="Node(Call(Including))" incoming="_etAKAM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAu6M2iEeiCta8rX3fxAA" target="_etAu6c2iEeiCta8rX3fxAA" source="_etAu882iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAu6c2iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAu6M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAu6s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAu682iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAu7M2iEeiCta8rX3fxAA" name="Call(Including)" incoming="_etAJ_s2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAu7c2iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJZc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAu7s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAu782iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAu8M2iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAJ_c2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAu8c2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAu8s2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAu882iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAJ_82iEeiCta8rX3fxAA _etAu6M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAu9M2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAu9c2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAu9s2iEeiCta8rX3fxAA" name="Fork(customers)@629176a6" incoming="_etAJ_82iEeiCta8rX3fxAA" outgoing="_etAJZ82iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAu982iEeiCta8rX3fxAA" name="ExpressionStatement@d3dae92" incoming="_etAJaM2iEeiCta8rX3fxAA" outgoing="_etAJa82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAu-M2iEeiCta8rX3fxAA" target="_etAvJc2iEeiCta8rX3fxAA" source="_etAvDs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAu-c2iEeiCta8rX3fxAA" target="_etAvIc2iEeiCta8rX3fxAA" source="_etAu_M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAu-s2iEeiCta8rX3fxAA" target="_etAvK82iEeiCta8rX3fxAA" source="_etAvKM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAu-82iEeiCta8rX3fxAA" target="_etAvHM2iEeiCta8rX3fxAA" source="_etAu_M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAu_M2iEeiCta8rX3fxAA" name="Tuple@1ff919ab" outgoing="_etAu-c2iEeiCta8rX3fxAA _etAu-82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAu_c2iEeiCta8rX3fxAA" target="_etAvG82iEeiCta8rX3fxAA" source="_etAvA82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAu_s2iEeiCta8rX3fxAA" target="_etAvGM2iEeiCta8rX3fxAA" source="_etAvG82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAu_82iEeiCta8rX3fxAA" target="_etAvEs2iEeiCta8rX3fxAA" source="_etAvCM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAvAM2iEeiCta8rX3fxAA" target="_etAvDM2iEeiCta8rX3fxAA" source="_etAvBs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAvAc2iEeiCta8rX3fxAA" target="_etAvDM2iEeiCta8rX3fxAA" source="_etAvAs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_etAvAs2iEeiCta8rX3fxAA" name="Create(Customer)" outgoing="_etAvAc2iEeiCta8rX3fxAA" classifier="_etAwj82iEeiCta8rX3fxAA">
                <result xmi:id="_etAvA82iEeiCta8rX3fxAA" name="Create(Customer).result" outgoing="_etAu_c2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvBM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvBc2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvBs2iEeiCta8rX3fxAA" name="Tuple@66db892b" outgoing="_etAvAM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAvB82iEeiCta8rX3fxAA" name="Value(&quot;C&quot;)">
                  <result xmi:id="_etAvCM2iEeiCta8rX3fxAA" name="Value(&quot;C&quot;).result" outgoing="_etAu_82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvCc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvCs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAvC82iEeiCta8rX3fxAA" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvDM2iEeiCta8rX3fxAA" name="Node(Call(Customer))" incoming="_etAvAc2iEeiCta8rX3fxAA _etAvAM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvDc2iEeiCta8rX3fxAA" target="_etAvDs2iEeiCta8rX3fxAA" source="_etAvG82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAvDs2iEeiCta8rX3fxAA" name="Output(Fork(Create(Customer).result))" incoming="_etAvDc2iEeiCta8rX3fxAA" outgoing="_etAu-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvD82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvEM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_etAvEc2iEeiCta8rX3fxAA" name="Call(Customer)" operation="_etAxRs2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAvEs2iEeiCta8rX3fxAA" name="Call(Customer).argument(name)" incoming="_etAu_82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvE82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvFM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAvFc2iEeiCta8rX3fxAA" name="Call(Customer).result()" type="_etAwj82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvFs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvF82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <target xmi:id="_etAvGM2iEeiCta8rX3fxAA" name="Call(Customer).target" incoming="_etAu_s2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvGc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvGs2iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_etAvG82iEeiCta8rX3fxAA" name="Fork(Create(Customer).result)" incoming="_etAu_c2iEeiCta8rX3fxAA" outgoing="_etAu_s2iEeiCta8rX3fxAA _etAvDc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvHM2iEeiCta8rX3fxAA" name="Node(Call(Including))" incoming="_etAu-82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvHc2iEeiCta8rX3fxAA" target="_etAvHs2iEeiCta8rX3fxAA" source="_etAvKM2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAvHs2iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAvHc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvH82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvIM2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvIc2iEeiCta8rX3fxAA" name="Call(Including)" incoming="_etAu-c2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAvIs2iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJZ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvI82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvJM2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAvJc2iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAu-M2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvJs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvJ82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAvKM2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAu-s2iEeiCta8rX3fxAA _etAvHc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvKc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvKs2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvK82iEeiCta8rX3fxAA" name="Fork(customers)@383c4295" incoming="_etAu-s2iEeiCta8rX3fxAA" outgoing="_etAJac2iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvLM2iEeiCta8rX3fxAA" name="ExpressionStatement@55ba1357" incoming="_etAJa82iEeiCta8rX3fxAA" outgoing="_etAJbc2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvLc2iEeiCta8rX3fxAA" target="_etAvPc2iEeiCta8rX3fxAA" source="_etAvOs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvLs2iEeiCta8rX3fxAA" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvL82iEeiCta8rX3fxAA" target="_etAvMM2iEeiCta8rX3fxAA" source="_etAvOs2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAvMM2iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAvL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvMc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvMs2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvM82iEeiCta8rX3fxAA" name="Call(Including)">
                <argument xmi:id="_etAvNM2iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJac2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvNc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvNs2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAvN82iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAJas2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvOM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvOc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAvOs2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAvLc2iEeiCta8rX3fxAA _etAvL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvO82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvPM2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvPc2iEeiCta8rX3fxAA" name="Fork(customers)@42e7e5b9" incoming="_etAvLc2iEeiCta8rX3fxAA" outgoing="_etAJbM2iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvPs2iEeiCta8rX3fxAA" name="ExpressionStatement@4680c04e" incoming="_etAJbc2iEeiCta8rX3fxAA" outgoing="_etAJcM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvP82iEeiCta8rX3fxAA" target="_etAvUs2iEeiCta8rX3fxAA" source="_etAvRc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAvQM2iEeiCta8rX3fxAA" target="_etAvTs2iEeiCta8rX3fxAA" source="_etAvQ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvQc2iEeiCta8rX3fxAA" target="_etAvWM2iEeiCta8rX3fxAA" source="_etAvVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAvQs2iEeiCta8rX3fxAA" target="_etAvSc2iEeiCta8rX3fxAA" source="_etAvQ82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvQ82iEeiCta8rX3fxAA" name="Tuple@26c99698" outgoing="_etAvQM2iEeiCta8rX3fxAA _etAvQs2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAvRM2iEeiCta8rX3fxAA" name="Value(2)">
                <result xmi:id="_etAvRc2iEeiCta8rX3fxAA" name="Value(2).result" outgoing="_etAvP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvRs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvR82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_etAvSM2iEeiCta8rX3fxAA" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvSc2iEeiCta8rX3fxAA" name="Node(Call(ExcludeAt))" incoming="_etAvQs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvSs2iEeiCta8rX3fxAA" target="_etAvS82iEeiCta8rX3fxAA" source="_etAvVc2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAvS82iEeiCta8rX3fxAA" name="Output(Call(ExcludeAt).result())" incoming="_etAvSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvTM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvTc2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvTs2iEeiCta8rX3fxAA" name="Call(ExcludeAt)" incoming="_etAvQM2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAvT82iEeiCta8rX3fxAA" name="Call(ExcludeAt).argument(seq)" incoming="_etAJbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvUM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvUc2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAvUs2iEeiCta8rX3fxAA" name="Call(ExcludeAt).argument(index)" incoming="_etAvP82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvU82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvVM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAvVc2iEeiCta8rX3fxAA" name="Call(ExcludeAt).result()" outgoing="_etAvQc2iEeiCta8rX3fxAA _etAvSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvVs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvV82iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvWM2iEeiCta8rX3fxAA" name="Fork(customers)@1c231801" incoming="_etAvQc2iEeiCta8rX3fxAA" outgoing="_etAJbs2iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvWc2iEeiCta8rX3fxAA" name="ExpressionStatement@4ccc5620" incoming="_etAJcM2iEeiCta8rX3fxAA" outgoing="_etAJcc2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvWs2iEeiCta8rX3fxAA" target="_etAvas2iEeiCta8rX3fxAA" source="_etAvZ82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvW82iEeiCta8rX3fxAA" name="Node(Call(Excluding))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvXM2iEeiCta8rX3fxAA" target="_etAvXc2iEeiCta8rX3fxAA" source="_etAvZ82iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAvXc2iEeiCta8rX3fxAA" name="Output(Call(Excluding).result())" incoming="_etAvXM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvXs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvX82iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvYM2iEeiCta8rX3fxAA" name="Call(Excluding)">
                <argument xmi:id="_etAvYc2iEeiCta8rX3fxAA" name="Call(Excluding).argument(seq)" incoming="_etAJbs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvYs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvY82iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAvZM2iEeiCta8rX3fxAA" name="Call(Excluding).argument(element)" incoming="_etAJb82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvZc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvZs2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAvZ82iEeiCta8rX3fxAA" name="Call(Excluding).result()" outgoing="_etAvWs2iEeiCta8rX3fxAA _etAvXM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvaM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvac2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Excluding"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvas2iEeiCta8rX3fxAA" name="Fork(customers)@23716ad0" incoming="_etAvWs2iEeiCta8rX3fxAA" outgoing="_etAJhs2iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAva82iEeiCta8rX3fxAA" name="ExpressionStatement@5e54d2a2" incoming="_etAJcc2iEeiCta8rX3fxAA" outgoing="_etAJcs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvbM2iEeiCta8rX3fxAA" target="_etAvbc2iEeiCta8rX3fxAA" source="_etAvec2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvbc2iEeiCta8rX3fxAA" name="Fork(m)@5599be56" incoming="_etAvbM2iEeiCta8rX3fxAA" outgoing="_etAJhM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvbs2iEeiCta8rX3fxAA" name="RightHandSide@2a046ec">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvb82iEeiCta8rX3fxAA" target="_etAvfc2iEeiCta8rX3fxAA" source="_etAvdM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAvcM2iEeiCta8rX3fxAA" target="_etAvfM2iEeiCta8rX3fxAA" source="_etAvcs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAvcc2iEeiCta8rX3fxAA" target="_etAvd82iEeiCta8rX3fxAA" source="_etAvcs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvcs2iEeiCta8rX3fxAA" name="Tuple@20377db9" outgoing="_etAvcM2iEeiCta8rX3fxAA _etAvcc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_etAvc82iEeiCta8rX3fxAA" name="ReadExtent(Customer)" classifier="_etAwj82iEeiCta8rX3fxAA">
                  <result xmi:id="_etAvdM2iEeiCta8rX3fxAA" name="ReadExtent(Customer).result" outgoing="_etAvb82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvdc2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvds2iEeiCta8rX3fxAA" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvd82iEeiCta8rX3fxAA" name="Node(Call(Size))" incoming="_etAvcc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAveM2iEeiCta8rX3fxAA" target="_etAvec2iEeiCta8rX3fxAA" source="_etAvgM2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAvec2iEeiCta8rX3fxAA" name="Output(Call(Size).result())" incoming="_etAveM2iEeiCta8rX3fxAA" outgoing="_etAvbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAves2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAve82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvfM2iEeiCta8rX3fxAA" name="Call(Size)" incoming="_etAvcM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAvfc2iEeiCta8rX3fxAA" name="Call(Size).argument(seq)" incoming="_etAvb82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvfs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvf82iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_etAvgM2iEeiCta8rX3fxAA" name="Call(Size).result()" outgoing="_etAveM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvgc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvgs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvg82iEeiCta8rX3fxAA" name="ExpressionStatement@5febd9ee" incoming="_etAJcs2iEeiCta8rX3fxAA" outgoing="_etAJc82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvhM2iEeiCta8rX3fxAA" target="_etAvhc2iEeiCta8rX3fxAA" source="_etAvkc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvhc2iEeiCta8rX3fxAA" name="Fork(n)@500be6f9" incoming="_etAvhM2iEeiCta8rX3fxAA" outgoing="_etAJhc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvhs2iEeiCta8rX3fxAA" name="RightHandSide@c6ff6c7">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvh82iEeiCta8rX3fxAA" target="_etAvlc2iEeiCta8rX3fxAA" source="_etAvjM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAviM2iEeiCta8rX3fxAA" target="_etAvlM2iEeiCta8rX3fxAA" source="_etAvis2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAvic2iEeiCta8rX3fxAA" target="_etAvj82iEeiCta8rX3fxAA" source="_etAvis2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvis2iEeiCta8rX3fxAA" name="Tuple@33515fc1" outgoing="_etAviM2iEeiCta8rX3fxAA _etAvic2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_etAvi82iEeiCta8rX3fxAA" name="ReadExtent(Customer)" classifier="_etAwj82iEeiCta8rX3fxAA">
                  <result xmi:id="_etAvjM2iEeiCta8rX3fxAA" name="ReadExtent(Customer).result" outgoing="_etAvh82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvjc2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvjs2iEeiCta8rX3fxAA" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvj82iEeiCta8rX3fxAA" name="Node(Call(Size))" incoming="_etAvic2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvkM2iEeiCta8rX3fxAA" target="_etAvkc2iEeiCta8rX3fxAA" source="_etAvmM2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAvkc2iEeiCta8rX3fxAA" name="Output(Call(Size).result())" incoming="_etAvkM2iEeiCta8rX3fxAA" outgoing="_etAvhM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvks2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvk82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvlM2iEeiCta8rX3fxAA" name="Call(Size)" incoming="_etAviM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etAvlc2iEeiCta8rX3fxAA" name="Call(Size).argument(seq)" incoming="_etAvh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvls2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvl82iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_etAvmM2iEeiCta8rX3fxAA" name="Call(Size).result()" outgoing="_etAvkM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvmc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvms2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvm82iEeiCta8rX3fxAA" name="ExpressionStatement@7569e6c4" incoming="_etAJc82iEeiCta8rX3fxAA" outgoing="_etAJdM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvnM2iEeiCta8rX3fxAA" target="_etAvnc2iEeiCta8rX3fxAA" source="_etAvoc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvnc2iEeiCta8rX3fxAA" name="Fork(list)@4353832c" incoming="_etAvnM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvns2iEeiCta8rX3fxAA" name="RightHandSide@49822fac">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvn82iEeiCta8rX3fxAA" name="SequenceConstructionExpression@49822fac">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvoM2iEeiCta8rX3fxAA" target="_etAvoc2iEeiCta8rX3fxAA" source="_etAvpc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAvoc2iEeiCta8rX3fxAA" name="SequenceConstructionExpression@49822fac.output" incoming="_etAvoM2iEeiCta8rX3fxAA" outgoing="_etAvnM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvos2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvo82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAvpM2iEeiCta8rX3fxAA" name="Value(&quot;x&quot;)">
                  <result xmi:id="_etAvpc2iEeiCta8rX3fxAA" name="Value(&quot;x&quot;).result" outgoing="_etAvoM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvps2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvp82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etAvqM2iEeiCta8rX3fxAA" value="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvqc2iEeiCta8rX3fxAA" name="ExpressionStatement@23af15a8" incoming="_etAJdM2iEeiCta8rX3fxAA" outgoing="_etAJd82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvqs2iEeiCta8rX3fxAA" target="_etAvsM2iEeiCta8rX3fxAA" source="_etAvrM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAvq82iEeiCta8rX3fxAA" name="Value(null)">
              <result xmi:id="_etAvrM2iEeiCta8rX3fxAA" name="Value(null).result" outgoing="_etAvqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvrc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvrs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralNull" xmi:id="_etAvr82iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvsM2iEeiCta8rX3fxAA" name="Fork(list)@6133ea2e" incoming="_etAvqs2iEeiCta8rX3fxAA" outgoing="_etAJdc2iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvsc2iEeiCta8rX3fxAA" name="ExpressionStatement@27c832dd" incoming="_etAJd82iEeiCta8rX3fxAA" outgoing="_etAJes2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvss2iEeiCta8rX3fxAA" target="_etAvs82iEeiCta8rX3fxAA" source="_etAvt82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etAvs82iEeiCta8rX3fxAA" name="Fork(list)@76b2a4c3" incoming="_etAvss2iEeiCta8rX3fxAA" outgoing="_etAJeM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvtM2iEeiCta8rX3fxAA" name="RightHandSide@500aec06">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvtc2iEeiCta8rX3fxAA" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvts2iEeiCta8rX3fxAA" target="_etAvt82iEeiCta8rX3fxAA" source="_etAvwc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etAvt82iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAvts2iEeiCta8rX3fxAA" outgoing="_etAvss2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvuM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvuc2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvus2iEeiCta8rX3fxAA" name="Call(Including)">
                  <argument xmi:id="_etAvu82iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJdc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvvM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvvc2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <argument xmi:id="_etAvvs2iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAJds2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvv82iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvwM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etAvwc2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAvts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvws2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvw82iEeiCta8rX3fxAA" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvxM2iEeiCta8rX3fxAA" name="ExpressionStatement@27baa743" incoming="_etAJes2iEeiCta8rX3fxAA" outgoing="_etAJfM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvxc2iEeiCta8rX3fxAA" target="_etAv1c2iEeiCta8rX3fxAA" source="_etAv0s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAvxs2iEeiCta8rX3fxAA" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAvx82iEeiCta8rX3fxAA" target="_etAvyM2iEeiCta8rX3fxAA" source="_etAv0s2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAvyM2iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAvx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvyc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvys2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAvy82iEeiCta8rX3fxAA" name="Call(Including)">
                <argument xmi:id="_etAvzM2iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJeM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAvzc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAvzs2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAvz82iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAJec2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv0M2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv0c2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAv0s2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAvxc2iEeiCta8rX3fxAA _etAvx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv082iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv1M2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAv1c2iEeiCta8rX3fxAA" name="Fork(list)@607961e4" incoming="_etAvxc2iEeiCta8rX3fxAA" outgoing="_etAJe82iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAv1s2iEeiCta8rX3fxAA" name="ExpressionStatement@79ebe48c" incoming="_etAJfM2iEeiCta8rX3fxAA" outgoing="_etAJfs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAv182iEeiCta8rX3fxAA" target="_etAv6s2iEeiCta8rX3fxAA" source="_etAv3c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAv2M2iEeiCta8rX3fxAA" target="_etAv5s2iEeiCta8rX3fxAA" source="_etAv282iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAv2c2iEeiCta8rX3fxAA" target="_etAv8M2iEeiCta8rX3fxAA" source="_etAv7c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAv2s2iEeiCta8rX3fxAA" target="_etAv4c2iEeiCta8rX3fxAA" source="_etAv282iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAv282iEeiCta8rX3fxAA" name="Tuple@427befaa" outgoing="_etAv2M2iEeiCta8rX3fxAA _etAv2s2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAv3M2iEeiCta8rX3fxAA" name="Value(&quot;Blah&quot;)">
                <result xmi:id="_etAv3c2iEeiCta8rX3fxAA" name="Value(&quot;Blah&quot;).result" outgoing="_etAv182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv3s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv382iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_etAv4M2iEeiCta8rX3fxAA" value="Blah">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAv4c2iEeiCta8rX3fxAA" name="Node(Call(Including))" incoming="_etAv2s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAv4s2iEeiCta8rX3fxAA" target="_etAv482iEeiCta8rX3fxAA" source="_etAv7c2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAv482iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAv4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv5M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv5c2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAv5s2iEeiCta8rX3fxAA" name="Call(Including)" incoming="_etAv2M2iEeiCta8rX3fxAA">
                <argument xmi:id="_etAv582iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJe82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv6M2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv6c2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAv6s2iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAv182iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv682iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv7M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAv7c2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAv2c2iEeiCta8rX3fxAA _etAv4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv7s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv782iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAv8M2iEeiCta8rX3fxAA" name="Fork(list)@5cff8a87" incoming="_etAv2c2iEeiCta8rX3fxAA" outgoing="_etAJfc2iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAv8c2iEeiCta8rX3fxAA" name="ExpressionStatement@78aad31b" incoming="_etAJfs2iEeiCta8rX3fxAA" outgoing="_etAJgc2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAv8s2iEeiCta8rX3fxAA" target="_etAwBc2iEeiCta8rX3fxAA" source="_etAv-M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAv882iEeiCta8rX3fxAA" target="_etAwAc2iEeiCta8rX3fxAA" source="_etAv9s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAv9M2iEeiCta8rX3fxAA" target="_etAwC82iEeiCta8rX3fxAA" source="_etAwCM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAv9c2iEeiCta8rX3fxAA" target="_etAv_M2iEeiCta8rX3fxAA" source="_etAv9s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAv9s2iEeiCta8rX3fxAA" name="Tuple@3495d5dc" outgoing="_etAv882iEeiCta8rX3fxAA _etAv9c2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAv982iEeiCta8rX3fxAA" name="Value(1)">
                <result xmi:id="_etAv-M2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etAv8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv-c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAv-s2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_etAv-82iEeiCta8rX3fxAA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAv_M2iEeiCta8rX3fxAA" name="Node(Call(Including))" incoming="_etAv9c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAv_c2iEeiCta8rX3fxAA" target="_etAv_s2iEeiCta8rX3fxAA" source="_etAwCM2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAv_s2iEeiCta8rX3fxAA" name="Output(Call(Including).result())" incoming="_etAv_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAv_82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwAM2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAwAc2iEeiCta8rX3fxAA" name="Call(Including)" incoming="_etAv882iEeiCta8rX3fxAA">
                <argument xmi:id="_etAwAs2iEeiCta8rX3fxAA" name="Call(Including).argument(seq)" incoming="_etAJfc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwA82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwBM2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAwBc2iEeiCta8rX3fxAA" name="Call(Including).argument(element)" incoming="_etAv8s2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwBs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwB82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etAwCM2iEeiCta8rX3fxAA" name="Call(Including).result()" outgoing="_etAv9M2iEeiCta8rX3fxAA _etAv_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwCc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwCs2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAwC82iEeiCta8rX3fxAA" name="Fork(list)@4f191143" incoming="_etAv9M2iEeiCta8rX3fxAA" outgoing="_etAJf82iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwDM2iEeiCta8rX3fxAA" name="ExpressionStatement@54cdbbdc" incoming="_etAJgc2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwDc2iEeiCta8rX3fxAA" target="_etAwHc2iEeiCta8rX3fxAA" source="_etAwGs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwDs2iEeiCta8rX3fxAA" name="Node(Call(Difference))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwD82iEeiCta8rX3fxAA" target="_etAwEM2iEeiCta8rX3fxAA" source="_etAwGs2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etAwEM2iEeiCta8rX3fxAA" name="Output(Call(Difference).result())" incoming="_etAwD82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwEc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwEs2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAwE82iEeiCta8rX3fxAA" name="Call(Difference)">
                <argument xmi:id="_etAwFM2iEeiCta8rX3fxAA" name="Call(Difference).argument(seq1)" incoming="_etAJf82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwFc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwFs2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <argument xmi:id="_etAwF82iEeiCta8rX3fxAA" name="Call(Difference).argument(seq2)" incoming="_etAJgM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwGM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwGc2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_etAwGs2iEeiCta8rX3fxAA" name="Call(Difference).result()" outgoing="_etAwDc2iEeiCta8rX3fxAA _etAwD82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwG82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwHM2iEeiCta8rX3fxAA" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Difference"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAwHc2iEeiCta8rX3fxAA" name="Fork(list)@caa5e76" incoming="_etAwDc2iEeiCta8rX3fxAA" outgoing="_etAJh82iEeiCta8rX3fxAA"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAJVc2iEeiCta8rX3fxAA" name="Output(notEmpty)" incoming="_etAJT82iEeiCta8rX3fxAA" parameter="_etAJPc2iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAJVs2iEeiCta8rX3fxAA" name="Output(includes)" incoming="_etAJUM2iEeiCta8rX3fxAA" parameter="_etAJQM2iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAJV82iEeiCta8rX3fxAA" name="Output(m)" incoming="_etAJUc2iEeiCta8rX3fxAA" parameter="_etAJQ82iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAJWM2iEeiCta8rX3fxAA" name="Output(n)" incoming="_etAJUs2iEeiCta8rX3fxAA" parameter="_etAJRs2iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAJWc2iEeiCta8rX3fxAA" name="Output(customers)" incoming="_etAJU82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" parameter="_etAJSc2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAJWs2iEeiCta8rX3fxAA" name="Output(list)" incoming="_etAJVM2iEeiCta8rX3fxAA" parameter="_etAJTM2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAwHs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_etAwjs2iEeiCta8rX3fxAA" node="_etAwH82iEeiCta8rX3fxAA" group="_etAwH82iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_etAwH82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAwIM2iEeiCta8rX3fxAA" name="Expressions_Sequence_Operation$initialization$1" visibility="private" specification="_etAwb82iEeiCta8rX3fxAA" node="_etAwIc2iEeiCta8rX3fxAA" group="_etAwIc2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_etAwIc2iEeiCta8rX3fxAA" name="Body(Expressions_Sequence_Operation$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwIs2iEeiCta8rX3fxAA" target="_etAwMc2iEeiCta8rX3fxAA" source="_etAwLs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwI82iEeiCta8rX3fxAA" target="_etAwNc2iEeiCta8rX3fxAA" source="_etAwMc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwJM2iEeiCta8rX3fxAA" target="_etAwQs2iEeiCta8rX3fxAA" source="_etAwMc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwJc2iEeiCta8rX3fxAA" target="_etAwUc2iEeiCta8rX3fxAA" source="_etAwMc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwJs2iEeiCta8rX3fxAA" target="_etAwWM2iEeiCta8rX3fxAA" source="_etAwVM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwJ82iEeiCta8rX3fxAA" target="_etAwZM2iEeiCta8rX3fxAA" source="_etAwW82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwKM2iEeiCta8rX3fxAA" target="_etAwas2iEeiCta8rX3fxAA" source="_etAwX82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAwKc2iEeiCta8rX3fxAA" target="_etAwbs2iEeiCta8rX3fxAA" source="_etAwbc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwKs2iEeiCta8rX3fxAA" target="_etAwbs2iEeiCta8rX3fxAA" source="_etAwZ82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAwK82iEeiCta8rX3fxAA" target="_etAwMs2iEeiCta8rX3fxAA" source="_etAwbs2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_etAwLM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_etAwLc2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_etAwLs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAwIs2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwL82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwMM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etAwMc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAwIs2iEeiCta8rX3fxAA" outgoing="_etAwI82iEeiCta8rX3fxAA _etAwJM2iEeiCta8rX3fxAA _etAwJc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwMs2iEeiCta8rX3fxAA" name="Initialization" incoming="_etAwK82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAwM82iEeiCta8rX3fxAA" target="_etAwOM2iEeiCta8rX3fxAA" source="_etAwNM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_etAwNM2iEeiCta8rX3fxAA" name="Call(Test$initialization$1)" outgoing="_etAwM82iEeiCta8rX3fxAA" operation="_etBV9c2iEeiCta8rX3fxAA">
              <target xmi:id="_etAwNc2iEeiCta8rX3fxAA" name="Call(Test$initialization$1).target" incoming="_etAwI82iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwNs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwN82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwOM2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_etAwM82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwOc2iEeiCta8rX3fxAA" target="_etAwT82iEeiCta8rX3fxAA" source="_etAwO82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAwOs2iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_etAwO82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_etAwOc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwPM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwPc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_etAwPs2iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_etAwP82iEeiCta8rX3fxAA" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1))" inputElement="_etAwT82iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwQM2iEeiCta8rX3fxAA" target="_etAwTM2iEeiCta8rX3fxAA" source="_etAwT82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwQc2iEeiCta8rX3fxAA" target="_etAwRs2iEeiCta8rX3fxAA" source="_etAwQs2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etAwQs2iEeiCta8rX3fxAA" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_etAwJM2iEeiCta8rX3fxAA" outgoing="_etAwQc2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwQ82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwRM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_etAwRc2iEeiCta8rX3fxAA" name="Write(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_etAH2M2iEeiCta8rX3fxAA">
                  <object xmi:id="_etAwRs2iEeiCta8rX3fxAA" name="Write(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_etAwQc2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwR82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwSM2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_etAwSc2iEeiCta8rX3fxAA" name="Write(Expressions_Sequence_Operation$initializationFlag$1).result" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwSs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwS82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_etAwTM2iEeiCta8rX3fxAA" name="Write(Expressions_Sequence_Operation$initializationFlag$1).value" incoming="_etAwQM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwTc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwTs2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_etAwT82iEeiCta8rX3fxAA" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).inputElement" incoming="_etAwOc2iEeiCta8rX3fxAA" outgoing="_etAwQM2iEeiCta8rX3fxAA" regionAsInput="_etAwP82iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAwUM2iEeiCta8rX3fxAA" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_etAH2M2iEeiCta8rX3fxAA">
            <object xmi:id="_etAwUc2iEeiCta8rX3fxAA" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_etAwJc2iEeiCta8rX3fxAA" type="_etAH0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwUs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwU82iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_etAwVM2iEeiCta8rX3fxAA" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_etAwJs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwVc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwVs2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAwV82iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_etAwWM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etAwJs2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwWc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwWs2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_etAwW82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etAwJ82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwXM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwXc2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAwXs2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_etAwX82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etAwKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwYM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwYc2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_etAwYs2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_etAwY82iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_etAwZM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etAwJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwZc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwZs2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_etAwZ82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etAwKs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwaM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwac2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_etAwas2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etAwKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwa82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwbM2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_etAwbc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etAwKc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_etAwbs2iEeiCta8rX3fxAA" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_etAwKc2iEeiCta8rX3fxAA _etAwKs2iEeiCta8rX3fxAA" outgoing="_etAwK82iEeiCta8rX3fxAA" decisionInputFlow="_etAwKs2iEeiCta8rX3fxAA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_etAwb82iEeiCta8rX3fxAA" name="Expressions_Sequence_Operation$initialization$1" visibility="protected" method="_etAwIM2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_etAwcM2iEeiCta8rX3fxAA" name="Expressions_Sequence_Operation" visibility="public" method="_etAH282iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAwcc2iEeiCta8rX3fxAA" name="" visibility="package" type="_etAH0c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwcs2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwc82iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_etAwdM2iEeiCta8rX3fxAA" name="run" visibility="public" method="_etAIC82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAwdc2iEeiCta8rX3fxAA" name="tester" visibility="package" type="_etBWA82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwds2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwd82iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAweM2iEeiCta8rX3fxAA" name="" visibility="package" type="_etAH0c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwec2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwes2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_etAwe82iEeiCta8rX3fxAA" name="test" visibility="package" method="_etAJPM2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAwfM2iEeiCta8rX3fxAA" name="notEmpty" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwfc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwfs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAwf82iEeiCta8rX3fxAA" name="includes" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwgM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwgc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAwgs2iEeiCta8rX3fxAA" name="m" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwg82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwhM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAwhc2iEeiCta8rX3fxAA" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwhs2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwh82iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAwiM2iEeiCta8rX3fxAA" name="customers" visibility="package" type="_etAwj82iEeiCta8rX3fxAA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwic2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwis2iEeiCta8rX3fxAA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAwi82iEeiCta8rX3fxAA" name="list" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwjM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwjc2iEeiCta8rX3fxAA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_etAwjs2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_etAwHs2iEeiCta8rX3fxAA" redefinedOperation="_etBV9s2iEeiCta8rX3fxAA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_etAwj82iEeiCta8rX3fxAA" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_etAwkM2iEeiCta8rX3fxAA" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwkc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwks2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_etAwk82iEeiCta8rX3fxAA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwlM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwlc2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAwls2iEeiCta8rX3fxAA" name="Customer$method$1" visibility="private" specification="_etAxRs2iEeiCta8rX3fxAA" node="_etAwoM2iEeiCta8rX3fxAA _etAwoc2iEeiCta8rX3fxAA _etAwos2iEeiCta8rX3fxAA _etAwo82iEeiCta8rX3fxAA" group="_etAwo82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_etAwl82iEeiCta8rX3fxAA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwmM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwmc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_etAwms2iEeiCta8rX3fxAA" name="" type="_etAwj82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwm82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwnM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwnc2iEeiCta8rX3fxAA" target="_etAwoc2iEeiCta8rX3fxAA" source="_etAwoM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwns2iEeiCta8rX3fxAA" target="_etAwwc2iEeiCta8rX3fxAA" source="_etAwoc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwn82iEeiCta8rX3fxAA" target="_etAwos2iEeiCta8rX3fxAA" source="_etAw1s2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_etAwo82iEeiCta8rX3fxAA" name="Body(Customer$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwpM2iEeiCta8rX3fxAA" target="_etAw1s2iEeiCta8rX3fxAA" source="_etAw082iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwpc2iEeiCta8rX3fxAA" target="_etAw2M2iEeiCta8rX3fxAA" source="_etAw1s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAwps2iEeiCta8rX3fxAA" target="_etAwr82iEeiCta8rX3fxAA" source="_etAw182iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwp82iEeiCta8rX3fxAA" target="_etAw3M2iEeiCta8rX3fxAA" source="_etAw1s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwqM2iEeiCta8rX3fxAA" target="_etAw482iEeiCta8rX3fxAA" source="_etAw382iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwqc2iEeiCta8rX3fxAA" target="_etAw782iEeiCta8rX3fxAA" source="_etAw5s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwqs2iEeiCta8rX3fxAA" target="_etAw9c2iEeiCta8rX3fxAA" source="_etAw6s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAwq82iEeiCta8rX3fxAA" target="_etAw-c2iEeiCta8rX3fxAA" source="_etAw-M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwrM2iEeiCta8rX3fxAA" target="_etAw-c2iEeiCta8rX3fxAA" source="_etAw8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAwrc2iEeiCta8rX3fxAA" target="_etAw182iEeiCta8rX3fxAA" source="_etAw-c2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etAwrs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwr82iEeiCta8rX3fxAA" name="Body" incoming="_etAwps2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwsM2iEeiCta8rX3fxAA" name="ExpressionStatement@11401b23">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwsc2iEeiCta8rX3fxAA" target="_etAwu82iEeiCta8rX3fxAA" source="_etAwt82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAwss2iEeiCta8rX3fxAA" target="_etAwxM2iEeiCta8rX3fxAA" source="_etAwwc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAws82iEeiCta8rX3fxAA" target="_etAwyM2iEeiCta8rX3fxAA" source="_etAwvs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etAwtM2iEeiCta8rX3fxAA" target="_etAwtc2iEeiCta8rX3fxAA" source="_etAw0c2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwtc2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@25acbc57)" incoming="_etAwtM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_etAwts2iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_etAwt82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAwsc2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwuM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwuc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_etAwus2iEeiCta8rX3fxAA" name="Clear(name)" structuralFeature="_etAwk82iEeiCta8rX3fxAA">
                  <object xmi:id="_etAwu82iEeiCta8rX3fxAA" name="Clear(name).object" incoming="_etAwsc2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwvM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwvc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_etAwvs2iEeiCta8rX3fxAA" name="Clear(name).result" outgoing="_etAws82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwv82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwwM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_etAwwc2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@25acbc57)" incoming="_etAwns2iEeiCta8rX3fxAA" outgoing="_etAwss2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAwws2iEeiCta8rX3fxAA" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAww82iEeiCta8rX3fxAA" target="_etAwzs2iEeiCta8rX3fxAA" source="_etAwxM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_etAwxM2iEeiCta8rX3fxAA" name="WriteAll(Customer::name).input(Customer::name)" incoming="_etAwss2iEeiCta8rX3fxAA" outgoing="_etAww82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwxc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwxs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_etAwx82iEeiCta8rX3fxAA" name="Write(name)" structuralFeature="_etAwk82iEeiCta8rX3fxAA" isReplaceAll="true">
                    <object xmi:id="_etAwyM2iEeiCta8rX3fxAA" name="Write(name).object" incoming="_etAws82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwyc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwys2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_etAwy82iEeiCta8rX3fxAA" name="Write(name).result" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwzM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAwzc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_etAwzs2iEeiCta8rX3fxAA" name="Write(name).value" incoming="_etAww82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAwz82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw0M2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAw0c2iEeiCta8rX3fxAA" name="RightHandSide@7757b3a4" outgoing="_etAwtM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_etAw0s2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_etAw082iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAwpM2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw1M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw1c2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAw1s2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAwpM2iEeiCta8rX3fxAA" outgoing="_etAwn82iEeiCta8rX3fxAA _etAwpc2iEeiCta8rX3fxAA _etAwp82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_etAw182iEeiCta8rX3fxAA" name="Call(Customer$initialization$1)" incoming="_etAwrc2iEeiCta8rX3fxAA" outgoing="_etAwps2iEeiCta8rX3fxAA" operation="_etAxRc2iEeiCta8rX3fxAA">
              <target xmi:id="_etAw2M2iEeiCta8rX3fxAA" name="Call(Customer$initialization$1).target" incoming="_etAwpc2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw2c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw2s2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAw282iEeiCta8rX3fxAA" name="Read(Customer$initializationFlag$1)" structuralFeature="_etAwkM2iEeiCta8rX3fxAA">
              <object xmi:id="_etAw3M2iEeiCta8rX3fxAA" name="Read(Customer$initializationFlag$1).object" incoming="_etAwp82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw3c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw3s2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_etAw382iEeiCta8rX3fxAA" name="Read(Customer$initializationFlag$1).result" outgoing="_etAwqM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw4M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw4c2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAw4s2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_etAw482iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etAwqM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw5M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw5c2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etAw5s2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etAwqc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw582iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw6M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAw6c2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_etAw6s2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etAwqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw682iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw7M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etAw7c2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etAw7s2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_etAw782iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etAwqc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw8M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw8c2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etAw8s2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etAwrM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw882iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw9M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etAw9c2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etAwqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAw9s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAw982iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_etAw-M2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etAwq82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etAw-c2iEeiCta8rX3fxAA" name="Decision(Test(Customer$initializationFlag$1))" incoming="_etAwq82iEeiCta8rX3fxAA _etAwrM2iEeiCta8rX3fxAA" outgoing="_etAwrc2iEeiCta8rX3fxAA" decisionInputFlow="_etAwrM2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAwoM2iEeiCta8rX3fxAA" name="Input(name)" outgoing="_etAwnc2iEeiCta8rX3fxAA" parameter="_etAwl82iEeiCta8rX3fxAA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etAwoc2iEeiCta8rX3fxAA" name="Fork(name)" incoming="_etAwnc2iEeiCta8rX3fxAA" outgoing="_etAwns2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAwos2iEeiCta8rX3fxAA" name="Return" incoming="_etAwn82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" parameter="_etAwms2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAw-s2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_etAxTc2iEeiCta8rX3fxAA" node="_etAw-82iEeiCta8rX3fxAA" group="_etAw-82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_etAw-82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAw_M2iEeiCta8rX3fxAA" name="Customer$initialization$1" visibility="private" specification="_etAxRc2iEeiCta8rX3fxAA" node="_etAw_c2iEeiCta8rX3fxAA" group="_etAw_c2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_etAw_c2iEeiCta8rX3fxAA" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAw_s2iEeiCta8rX3fxAA" target="_etAxDM2iEeiCta8rX3fxAA" source="_etAxCc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAw_82iEeiCta8rX3fxAA" target="_etAxGM2iEeiCta8rX3fxAA" source="_etAxDM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxAM2iEeiCta8rX3fxAA" target="_etAxJ82iEeiCta8rX3fxAA" source="_etAxDM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxAc2iEeiCta8rX3fxAA" target="_etAxLs2iEeiCta8rX3fxAA" source="_etAxKs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxAs2iEeiCta8rX3fxAA" target="_etAxOs2iEeiCta8rX3fxAA" source="_etAxMc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxA82iEeiCta8rX3fxAA" target="_etAxQM2iEeiCta8rX3fxAA" source="_etAxNc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAxBM2iEeiCta8rX3fxAA" target="_etAxRM2iEeiCta8rX3fxAA" source="_etAxQ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxBc2iEeiCta8rX3fxAA" target="_etAxRM2iEeiCta8rX3fxAA" source="_etAxPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAxBs2iEeiCta8rX3fxAA" target="_etAxDc2iEeiCta8rX3fxAA" source="_etAxRM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etAxB82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_etAxCM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_etAxCc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAw_s2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxCs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxC82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etAxDM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAw_s2iEeiCta8rX3fxAA" outgoing="_etAw_82iEeiCta8rX3fxAA _etAxAM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxDc2iEeiCta8rX3fxAA" name="Initialization" incoming="_etAxBs2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxDs2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxD82iEeiCta8rX3fxAA" target="_etAxJc2iEeiCta8rX3fxAA" source="_etAxEc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAxEM2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_etAxEc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_etAxD82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxEs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxE82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_etAxFM2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_etAxFc2iEeiCta8rX3fxAA" name="Iterate(Write(Customer$initializationFlag$1))" inputElement="_etAxJc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxFs2iEeiCta8rX3fxAA" target="_etAxIs2iEeiCta8rX3fxAA" source="_etAxJc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxF82iEeiCta8rX3fxAA" target="_etAxHM2iEeiCta8rX3fxAA" source="_etAxGM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_etAxGM2iEeiCta8rX3fxAA" name="Iterate(Write(Customer$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_etAw_82iEeiCta8rX3fxAA" outgoing="_etAxF82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxGc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxGs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_etAxG82iEeiCta8rX3fxAA" name="Write(Customer$initializationFlag$1)" structuralFeature="_etAwkM2iEeiCta8rX3fxAA">
                    <object xmi:id="_etAxHM2iEeiCta8rX3fxAA" name="Write(Customer$initializationFlag$1).object" incoming="_etAxF82iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxHc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxHs2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_etAxH82iEeiCta8rX3fxAA" name="Write(Customer$initializationFlag$1).result" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxIM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxIc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_etAxIs2iEeiCta8rX3fxAA" name="Write(Customer$initializationFlag$1).value" incoming="_etAxFs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxI82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxJM2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_etAxJc2iEeiCta8rX3fxAA" name="Iterate(Write(Customer$initializationFlag$1)).inputElement" incoming="_etAxD82iEeiCta8rX3fxAA" outgoing="_etAxFs2iEeiCta8rX3fxAA" regionAsInput="_etAxFc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAxJs2iEeiCta8rX3fxAA" name="Read(Customer$initializationFlag$1)" structuralFeature="_etAwkM2iEeiCta8rX3fxAA">
              <object xmi:id="_etAxJ82iEeiCta8rX3fxAA" name="Read(Customer$initializationFlag$1).object" incoming="_etAxAM2iEeiCta8rX3fxAA" type="_etAwj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxKM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxKc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_etAxKs2iEeiCta8rX3fxAA" name="Read(Customer$initializationFlag$1).result" outgoing="_etAxAc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxK82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxLM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAxLc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_etAxLs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etAxAc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxL82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxMM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etAxMc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etAxAs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxMs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxM82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAxNM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_etAxNc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etAxA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxNs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxN82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etAxOM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etAxOc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_etAxOs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etAxAs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxO82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxPM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etAxPc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etAxBc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxPs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxP82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etAxQM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etAxA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxQc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxQs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_etAxQ82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etAxBM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etAxRM2iEeiCta8rX3fxAA" name="Decision(Test(Customer$initializationFlag$1))" incoming="_etAxBM2iEeiCta8rX3fxAA _etAxBc2iEeiCta8rX3fxAA" outgoing="_etAxBs2iEeiCta8rX3fxAA" decisionInputFlow="_etAxBc2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_etAxRc2iEeiCta8rX3fxAA" name="Customer$initialization$1" visibility="protected" method="_etAw_M2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_etAxRs2iEeiCta8rX3fxAA" name="Customer" visibility="public" method="_etAwls2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_etAxR82iEeiCta8rX3fxAA" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxSM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxSc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_etAxSs2iEeiCta8rX3fxAA" name="" visibility="package" type="_etAwj82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxS82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxTM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_etAxTc2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_etAw-s2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_etAxTs2iEeiCta8rX3fxAA" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_etAxT82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etAxUM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etAxUc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etAxUs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etAxU82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_etAxVM2iEeiCta8rX3fxAA" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxVc2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxVs2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_etAxV82iEeiCta8rX3fxAA" name="tester" visibility="private" type="_etBWA82iEeiCta8rX3fxAA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxWM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxWc2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAxWs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_etBV9s2iEeiCta8rX3fxAA" node="_etAxW82iEeiCta8rX3fxAA" group="_etAxW82iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_etAxW82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAxXM2iEeiCta8rX3fxAA" name="done$method$1" visibility="private" specification="_etBV982iEeiCta8rX3fxAA" node="_etAxXc2iEeiCta8rX3fxAA" group="_etAxXc2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_etAxXc2iEeiCta8rX3fxAA" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxXs2iEeiCta8rX3fxAA" name="ExpressionStatement@7a7b79a6">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxX82iEeiCta8rX3fxAA" target="_etAxY82iEeiCta8rX3fxAA" source="_etAxa82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAxYM2iEeiCta8rX3fxAA" target="_etAxYs2iEeiCta8rX3fxAA" source="_etAxac2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxYc2iEeiCta8rX3fxAA" target="_etAxZs2iEeiCta8rX3fxAA" source="_etAxcM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_etAxYs2iEeiCta8rX3fxAA" name="Call(done)" incoming="_etAxYM2iEeiCta8rX3fxAA" operation="_etBV_82iEeiCta8rX3fxAA">
              <argument xmi:id="_etAxY82iEeiCta8rX3fxAA" name="Call(done).argument(message)" incoming="_etAxX82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxZM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxZc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <target xmi:id="_etAxZs2iEeiCta8rX3fxAA" name="Call(done).target" incoming="_etAxYc2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxZ82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxaM2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxac2iEeiCta8rX3fxAA" name="Tuple@513fef41" outgoing="_etAxYM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAxas2iEeiCta8rX3fxAA" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_etAxa82iEeiCta8rX3fxAA" name="Value(&quot;Done.&quot;).result" outgoing="_etAxX82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxbM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxbc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_etAxbs2iEeiCta8rX3fxAA" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_etAxb82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_etAxcM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAxYc2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxcc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxcs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAxc82iEeiCta8rX3fxAA" name="Test$method$1" visibility="private" specification="_etBV-M2iEeiCta8rX3fxAA" node="_etAxfc2iEeiCta8rX3fxAA _etAxfs2iEeiCta8rX3fxAA _etAxf82iEeiCta8rX3fxAA _etAxgM2iEeiCta8rX3fxAA" group="_etAxgM2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAxdM2iEeiCta8rX3fxAA" name="tester" type="_etBWA82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxdc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxds2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etAxd82iEeiCta8rX3fxAA" name="" type="_etAxTs2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxeM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxec2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxes2iEeiCta8rX3fxAA" target="_etAxfs2iEeiCta8rX3fxAA" source="_etAxfc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxe82iEeiCta8rX3fxAA" target="_etAxns2iEeiCta8rX3fxAA" source="_etAxfs2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxfM2iEeiCta8rX3fxAA" target="_etAxf82iEeiCta8rX3fxAA" source="_etAxus2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_etAxgM2iEeiCta8rX3fxAA" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxgc2iEeiCta8rX3fxAA" target="_etAxus2iEeiCta8rX3fxAA" source="_etAxt82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxgs2iEeiCta8rX3fxAA" target="_etAxvM2iEeiCta8rX3fxAA" source="_etAxus2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAxg82iEeiCta8rX3fxAA" target="_etAxjM2iEeiCta8rX3fxAA" source="_etAxu82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxhM2iEeiCta8rX3fxAA" target="_etAxwM2iEeiCta8rX3fxAA" source="_etAxus2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxhc2iEeiCta8rX3fxAA" target="_etAxx82iEeiCta8rX3fxAA" source="_etAxw82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxhs2iEeiCta8rX3fxAA" target="_etAx082iEeiCta8rX3fxAA" source="_etAxys2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxh82iEeiCta8rX3fxAA" target="_etAx2c2iEeiCta8rX3fxAA" source="_etAxzs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAxiM2iEeiCta8rX3fxAA" target="_etAx3c2iEeiCta8rX3fxAA" source="_etAx3M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxic2iEeiCta8rX3fxAA" target="_etAx3c2iEeiCta8rX3fxAA" source="_etAx1s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAxis2iEeiCta8rX3fxAA" target="_etAxu82iEeiCta8rX3fxAA" source="_etAx3c2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_etAxi82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxjM2iEeiCta8rX3fxAA" name="Body" incoming="_etAxg82iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxjc2iEeiCta8rX3fxAA" name="ExpressionStatement@7ae049a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxjs2iEeiCta8rX3fxAA" target="_etAxmM2iEeiCta8rX3fxAA" source="_etAxlM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxj82iEeiCta8rX3fxAA" target="_etAxoc2iEeiCta8rX3fxAA" source="_etAxns2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxkM2iEeiCta8rX3fxAA" target="_etAxp82iEeiCta8rX3fxAA" source="_etAxm82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etAxkc2iEeiCta8rX3fxAA" target="_etAxks2iEeiCta8rX3fxAA" source="_etAxtc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxks2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@698df12d)" incoming="_etAxkc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_etAxk82iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_etAxlM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAxjs2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxlc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxls2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_etAxl82iEeiCta8rX3fxAA" name="Clear(tester)" structuralFeature="_etAxV82iEeiCta8rX3fxAA">
                <object xmi:id="_etAxmM2iEeiCta8rX3fxAA" name="Clear(tester).object" incoming="_etAxjs2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxmc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxms2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_etAxm82iEeiCta8rX3fxAA" name="Clear(tester).result" outgoing="_etAxkM2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxnM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxnc2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_etAxns2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@698df12d)" incoming="_etAxe82iEeiCta8rX3fxAA" outgoing="_etAxj82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxn82iEeiCta8rX3fxAA" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxoM2iEeiCta8rX3fxAA" target="_etAxtM2iEeiCta8rX3fxAA" source="_etAxoc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etAxoc2iEeiCta8rX3fxAA" name="WriteAll(Test::tester).input(Test::tester)" incoming="_etAxj82iEeiCta8rX3fxAA" outgoing="_etAxoM2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxos2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxo82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_etAxpM2iEeiCta8rX3fxAA" name="Iterate(Write(tester))" inputElement="_etAxtM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxpc2iEeiCta8rX3fxAA" target="_etAxsc2iEeiCta8rX3fxAA" source="_etAxtM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etAxps2iEeiCta8rX3fxAA" target="_etAxq82iEeiCta8rX3fxAA" source="_etAxp82iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_etAxp82iEeiCta8rX3fxAA" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_etAxkM2iEeiCta8rX3fxAA" outgoing="_etAxps2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxqM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxqc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_etAxqs2iEeiCta8rX3fxAA" name="Write(tester)" structuralFeature="_etAxV82iEeiCta8rX3fxAA">
                    <object xmi:id="_etAxq82iEeiCta8rX3fxAA" name="Write(tester).object" incoming="_etAxps2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxrM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxrc2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_etAxrs2iEeiCta8rX3fxAA" name="Write(tester).result" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxr82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxsM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_etAxsc2iEeiCta8rX3fxAA" name="Write(tester).value" incoming="_etAxpc2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxss2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxs82iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_etAxtM2iEeiCta8rX3fxAA" name="Iterate(Write(tester)).inputElement" incoming="_etAxoM2iEeiCta8rX3fxAA" outgoing="_etAxpc2iEeiCta8rX3fxAA" regionAsInput="_etAxpM2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAxtc2iEeiCta8rX3fxAA" name="RightHandSide@9855580" outgoing="_etAxkc2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_etAxts2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_etAxt82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAxgc2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxuM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxuc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etAxus2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAxgc2iEeiCta8rX3fxAA" outgoing="_etAxfM2iEeiCta8rX3fxAA _etAxgs2iEeiCta8rX3fxAA _etAxhM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_etAxu82iEeiCta8rX3fxAA" name="Call(Test$initialization$1)" incoming="_etAxis2iEeiCta8rX3fxAA" outgoing="_etAxg82iEeiCta8rX3fxAA" operation="_etBV9c2iEeiCta8rX3fxAA">
            <target xmi:id="_etAxvM2iEeiCta8rX3fxAA" name="Call(Test$initialization$1).target" incoming="_etAxgs2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxvc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxvs2iEeiCta8rX3fxAA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAxv82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1)" structuralFeature="_etAxVM2iEeiCta8rX3fxAA">
            <object xmi:id="_etAxwM2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).object" incoming="_etAxhM2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxwc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxws2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_etAxw82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).result" outgoing="_etAxhc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxxM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxxc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAxxs2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_etAxx82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etAxhc2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxyM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxyc2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_etAxys2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etAxhs2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxy82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAxzM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAxzc2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_etAxzs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etAxh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAxz82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx0M2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_etAx0c2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_etAx0s2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_etAx082iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etAxhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx1M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx1c2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_etAx1s2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etAxic2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx182iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx2M2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_etAx2c2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etAxh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx2s2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx282iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_etAx3M2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etAxiM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_etAx3c2iEeiCta8rX3fxAA" name="Decision(Test(Test$initializationFlag$1))" incoming="_etAxiM2iEeiCta8rX3fxAA _etAxic2iEeiCta8rX3fxAA" outgoing="_etAxis2iEeiCta8rX3fxAA" decisionInputFlow="_etAxic2iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAxfc2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_etAxes2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" parameter="_etAxdM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_etAxfs2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_etAxes2iEeiCta8rX3fxAA" outgoing="_etAxe82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAxf82iEeiCta8rX3fxAA" name="Return" incoming="_etAxfM2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" parameter="_etAxd82iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAx3s2iEeiCta8rX3fxAA" name="done$method$2" visibility="private" specification="_etBV_82iEeiCta8rX3fxAA" node="_etAx5M2iEeiCta8rX3fxAA _etAx5c2iEeiCta8rX3fxAA _etAx5s2iEeiCta8rX3fxAA" group="_etAx5s2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etAx382iEeiCta8rX3fxAA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx4M2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx4c2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAx4s2iEeiCta8rX3fxAA" target="_etAx5c2iEeiCta8rX3fxAA" source="_etAx5M2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etAx482iEeiCta8rX3fxAA" target="_etAx6s2iEeiCta8rX3fxAA" source="_etAx5c2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_etAx5s2iEeiCta8rX3fxAA" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAx582iEeiCta8rX3fxAA" target="_etAx8M2iEeiCta8rX3fxAA" source="_etAx6M2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAx6M2iEeiCta8rX3fxAA" name="ExpressionStatement@d16be1f" outgoing="_etAx582iEeiCta8rX3fxAA">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAx6c2iEeiCta8rX3fxAA" name="Call(WriteLine)">
              <argument xmi:id="_etAx6s2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_etAx482iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx682iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx7M2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etAx7c2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx7s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx782iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAx8M2iEeiCta8rX3fxAA" name="ExpressionStatement@7ed84cde" incoming="_etAx582iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etAx8c2iEeiCta8rX3fxAA" target="_etAx-c2iEeiCta8rX3fxAA" source="_etAyBc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etAx8s2iEeiCta8rX3fxAA" target="_etAx882iEeiCta8rX3fxAA" source="_etAx-s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_etAx882iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue))" incoming="_etAx8s2iEeiCta8rX3fxAA" mode="parallel" inputElement="_etAx-c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAx9M2iEeiCta8rX3fxAA" target="_etAx9s2iEeiCta8rX3fxAA" source="_etAx-c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_etAx9c2iEeiCta8rX3fxAA" name="SendSignal(Continue)" signal="_etBWk82iEeiCta8rX3fxAA">
                <target xmi:id="_etAx9s2iEeiCta8rX3fxAA" name="SendSignal(Continue).target" incoming="_etAx9M2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx982iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAx-M2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_etAx-c2iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue)).inputElement" incoming="_etAx8c2iEeiCta8rX3fxAA" outgoing="_etAx9M2iEeiCta8rX3fxAA" regionAsInput="_etAx882iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAx-s2iEeiCta8rX3fxAA" name="Feature(Read(tester).result)" outgoing="_etAx8s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAx-82iEeiCta8rX3fxAA" target="_etAyCM2iEeiCta8rX3fxAA" source="_etAx_s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAx_M2iEeiCta8rX3fxAA" target="_etAyAs2iEeiCta8rX3fxAA" source="_etAyCM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_etAx_c2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_etAx_s2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAx-82iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAx_82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyAM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAyAc2iEeiCta8rX3fxAA" name="Read(tester)" structuralFeature="_etAxV82iEeiCta8rX3fxAA">
                <object xmi:id="_etAyAs2iEeiCta8rX3fxAA" name="Read(tester).object" incoming="_etAx_M2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyA82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyBM2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_etAyBc2iEeiCta8rX3fxAA" name="Read(tester).result" outgoing="_etAx8c2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyBs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyB82iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_etAyCM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAx-82iEeiCta8rX3fxAA" outgoing="_etAx_M2iEeiCta8rX3fxAA"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_etAx5M2iEeiCta8rX3fxAA" name="Input(message)" outgoing="_etAx4s2iEeiCta8rX3fxAA" parameter="_etAx382iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_etAx5c2iEeiCta8rX3fxAA" name="Fork(message)" incoming="_etAx4s2iEeiCta8rX3fxAA" outgoing="_etAx482iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_etAyCc2iEeiCta8rX3fxAA" name="Test$initialization$1" visibility="private" specification="_etBV9c2iEeiCta8rX3fxAA" node="_etAyCs2iEeiCta8rX3fxAA" group="_etAyCs2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_etAyCs2iEeiCta8rX3fxAA" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyC82iEeiCta8rX3fxAA" target="_etAyGc2iEeiCta8rX3fxAA" source="_etAyFs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyDM2iEeiCta8rX3fxAA" target="_etAyJc2iEeiCta8rX3fxAA" source="_etAyGc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyDc2iEeiCta8rX3fxAA" target="_etAyNM2iEeiCta8rX3fxAA" source="_etAyGc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyDs2iEeiCta8rX3fxAA" target="_etAyO82iEeiCta8rX3fxAA" source="_etAyN82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyD82iEeiCta8rX3fxAA" target="_etAyR82iEeiCta8rX3fxAA" source="_etAyPs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyEM2iEeiCta8rX3fxAA" target="_etBV8M2iEeiCta8rX3fxAA" source="_etAyQs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAyEc2iEeiCta8rX3fxAA" target="_etBV9M2iEeiCta8rX3fxAA" source="_etBV882iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyEs2iEeiCta8rX3fxAA" target="_etBV9M2iEeiCta8rX3fxAA" source="_etAySs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etAyE82iEeiCta8rX3fxAA" target="_etAyGs2iEeiCta8rX3fxAA" source="_etBV9M2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_etAyFM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_etAyFc2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_etAyFs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etAyC82iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyF82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyGM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etAyGc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etAyC82iEeiCta8rX3fxAA" outgoing="_etAyDM2iEeiCta8rX3fxAA _etAyDc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAyGs2iEeiCta8rX3fxAA" name="Initialization" incoming="_etAyE82iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etAyG82iEeiCta8rX3fxAA" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyHM2iEeiCta8rX3fxAA" target="_etAyMs2iEeiCta8rX3fxAA" source="_etAyHs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAyHc2iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_etAyHs2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_etAyHM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyH82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyIM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_etAyIc2iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_etAyIs2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_etAyMs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyI82iEeiCta8rX3fxAA" target="_etAyL82iEeiCta8rX3fxAA" source="_etAyMs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etAyJM2iEeiCta8rX3fxAA" target="_etAyKc2iEeiCta8rX3fxAA" source="_etAyJc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etAyJc2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_etAyDM2iEeiCta8rX3fxAA" outgoing="_etAyJM2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyJs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyJ82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_etAyKM2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1)" structuralFeature="_etAxVM2iEeiCta8rX3fxAA">
                  <object xmi:id="_etAyKc2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).object" incoming="_etAyJM2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyKs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyK82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_etAyLM2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).result" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyLc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyLs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_etAyL82iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).value" incoming="_etAyI82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyMM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyMc2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_etAyMs2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_etAyHM2iEeiCta8rX3fxAA" outgoing="_etAyI82iEeiCta8rX3fxAA" regionAsInput="_etAyIs2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etAyM82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1)" structuralFeature="_etAxVM2iEeiCta8rX3fxAA">
            <object xmi:id="_etAyNM2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).object" incoming="_etAyDc2iEeiCta8rX3fxAA" type="_etAxTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyNc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyNs2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_etAyN82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).result" outgoing="_etAyDs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyOM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyOc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_etAyOs2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_etAyO82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etAyDs2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyPM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyPc2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_etAyPs2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etAyD82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyP82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyQM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etAyQc2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_etAyQs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etAyEM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyQ82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyRM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_etAyRc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_etAyRs2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_etAyR82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etAyD82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAySM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAySc2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_etAySs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etAyEs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etAyS82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etAyTM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_etBV8M2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etAyEM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBV8c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBV8s2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_etBV882iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etAyEc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_etBV9M2iEeiCta8rX3fxAA" name="Decision(Test(Test$initializationFlag$1))" incoming="_etAyEc2iEeiCta8rX3fxAA _etAyEs2iEeiCta8rX3fxAA" outgoing="_etAyE82iEeiCta8rX3fxAA" decisionInputFlow="_etAyEs2iEeiCta8rX3fxAA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_etBV9c2iEeiCta8rX3fxAA" name="Test$initialization$1" visibility="protected" method="_etAyCc2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_etBV9s2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_etAxWs2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_etBV982iEeiCta8rX3fxAA" name="done" visibility="public" method="_etAxXM2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_etBV-M2iEeiCta8rX3fxAA" name="Test" visibility="protected" method="_etAxc82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etBV-c2iEeiCta8rX3fxAA" name="tester" visibility="package" type="_etBWA82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBV-s2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBV-82iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etBV_M2iEeiCta8rX3fxAA" name="" visibility="package" type="_etAxTs2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBV_c2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBV_s2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_etBV_82iEeiCta8rX3fxAA" name="done" visibility="public" method="_etAx3s2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_etBWAM2iEeiCta8rX3fxAA" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWAc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWAs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_etBWA82iEeiCta8rX3fxAA" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_etBWBM2iEeiCta8rX3fxAA" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWBc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWBs2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_etBWB82iEeiCta8rX3fxAA" name="Tester$method$1" visibility="private" specification="_etBWjs2iEeiCta8rX3fxAA" node="_etBWDM2iEeiCta8rX3fxAA _etBWDc2iEeiCta8rX3fxAA" group="_etBWDc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_etBWCM2iEeiCta8rX3fxAA" name="" type="_etBWA82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWCc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWCs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWC82iEeiCta8rX3fxAA" target="_etBWDM2iEeiCta8rX3fxAA" source="_etBWHs2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_etBWDc2iEeiCta8rX3fxAA" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWDs2iEeiCta8rX3fxAA" target="_etBWHs2iEeiCta8rX3fxAA" source="_etBWG82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWD82iEeiCta8rX3fxAA" target="_etBWIM2iEeiCta8rX3fxAA" source="_etBWHs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWEM2iEeiCta8rX3fxAA" target="_etBWGc2iEeiCta8rX3fxAA" source="_etBWH82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWEc2iEeiCta8rX3fxAA" target="_etBWJM2iEeiCta8rX3fxAA" source="_etBWHs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWEs2iEeiCta8rX3fxAA" target="_etBWK82iEeiCta8rX3fxAA" source="_etBWJ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWE82iEeiCta8rX3fxAA" target="_etBWN82iEeiCta8rX3fxAA" source="_etBWLs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWFM2iEeiCta8rX3fxAA" target="_etBWPc2iEeiCta8rX3fxAA" source="_etBWMs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWFc2iEeiCta8rX3fxAA" target="_etBWQc2iEeiCta8rX3fxAA" source="_etBWQM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWFs2iEeiCta8rX3fxAA" target="_etBWQc2iEeiCta8rX3fxAA" source="_etBWOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWF82iEeiCta8rX3fxAA" target="_etBWH82iEeiCta8rX3fxAA" source="_etBWQc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBWGM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBWGc2iEeiCta8rX3fxAA" name="Body" incoming="_etBWEM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_etBWGs2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_etBWG82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etBWDs2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWHM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWHc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etBWHs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etBWDs2iEeiCta8rX3fxAA" outgoing="_etBWC82iEeiCta8rX3fxAA _etBWD82iEeiCta8rX3fxAA _etBWEc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_etBWH82iEeiCta8rX3fxAA" name="Call(Tester$initialization$1)" incoming="_etBWF82iEeiCta8rX3fxAA" outgoing="_etBWEM2iEeiCta8rX3fxAA" operation="_etBWjc2iEeiCta8rX3fxAA">
              <target xmi:id="_etBWIM2iEeiCta8rX3fxAA" name="Call(Tester$initialization$1).target" incoming="_etBWD82iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWIc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWIs2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etBWI82iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1)" structuralFeature="_etBWBM2iEeiCta8rX3fxAA">
              <object xmi:id="_etBWJM2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).object" incoming="_etBWEc2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWJc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWJs2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_etBWJ82iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).result" outgoing="_etBWEs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWKM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWKc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBWKs2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_etBWK82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etBWEs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWLM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWLc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etBWLs2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etBWE82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWL82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWMM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBWMc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_etBWMs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etBWFM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWM82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWNM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etBWNc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etBWNs2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_etBWN82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etBWE82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWOM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWOc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etBWOs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etBWFs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWO82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWPM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etBWPc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etBWFM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWPs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWP82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_etBWQM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etBWFc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etBWQc2iEeiCta8rX3fxAA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_etBWFc2iEeiCta8rX3fxAA _etBWFs2iEeiCta8rX3fxAA" outgoing="_etBWF82iEeiCta8rX3fxAA" decisionInputFlow="_etBWFs2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBWDM2iEeiCta8rX3fxAA" name="Return" incoming="_etBWC82iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" parameter="_etBWCM2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_etBWQs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_etBWks2iEeiCta8rX3fxAA" node="_etBWQ82iEeiCta8rX3fxAA" group="_etBWQ82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_etBWQ82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_etBWRM2iEeiCta8rX3fxAA" name="Tester$initialization$1" visibility="private" specification="_etBWjc2iEeiCta8rX3fxAA" node="_etBWRc2iEeiCta8rX3fxAA" group="_etBWRc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_etBWRc2iEeiCta8rX3fxAA" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWRs2iEeiCta8rX3fxAA" target="_etBWVM2iEeiCta8rX3fxAA" source="_etBWUc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWR82iEeiCta8rX3fxAA" target="_etBWYM2iEeiCta8rX3fxAA" source="_etBWVM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWSM2iEeiCta8rX3fxAA" target="_etBWb82iEeiCta8rX3fxAA" source="_etBWVM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWSc2iEeiCta8rX3fxAA" target="_etBWds2iEeiCta8rX3fxAA" source="_etBWcs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWSs2iEeiCta8rX3fxAA" target="_etBWgs2iEeiCta8rX3fxAA" source="_etBWec2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWS82iEeiCta8rX3fxAA" target="_etBWiM2iEeiCta8rX3fxAA" source="_etBWfc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWTM2iEeiCta8rX3fxAA" target="_etBWjM2iEeiCta8rX3fxAA" source="_etBWi82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWTc2iEeiCta8rX3fxAA" target="_etBWjM2iEeiCta8rX3fxAA" source="_etBWhc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWTs2iEeiCta8rX3fxAA" target="_etBWVc2iEeiCta8rX3fxAA" source="_etBWjM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBWT82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_etBWUM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_etBWUc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_etBWRs2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWUs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWU82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etBWVM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_etBWRs2iEeiCta8rX3fxAA" outgoing="_etBWR82iEeiCta8rX3fxAA _etBWSM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBWVc2iEeiCta8rX3fxAA" name="Initialization" incoming="_etBWTs2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBWVs2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWV82iEeiCta8rX3fxAA" target="_etBWbc2iEeiCta8rX3fxAA" source="_etBWWc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBWWM2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_etBWWc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_etBWV82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWWs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWW82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_etBWXM2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_etBWXc2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_etBWbc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWXs2iEeiCta8rX3fxAA" target="_etBWas2iEeiCta8rX3fxAA" source="_etBWbc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWX82iEeiCta8rX3fxAA" target="_etBWZM2iEeiCta8rX3fxAA" source="_etBWYM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_etBWYM2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_etBWR82iEeiCta8rX3fxAA" outgoing="_etBWX82iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWYc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWYs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_etBWY82iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1)" structuralFeature="_etBWBM2iEeiCta8rX3fxAA">
                    <object xmi:id="_etBWZM2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).object" incoming="_etBWX82iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWZc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWZs2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_etBWZ82iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).result" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWaM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWac2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_etBWas2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).value" incoming="_etBWXs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWa82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWbM2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_etBWbc2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_etBWV82iEeiCta8rX3fxAA" outgoing="_etBWXs2iEeiCta8rX3fxAA" regionAsInput="_etBWXc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_etBWbs2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1)" structuralFeature="_etBWBM2iEeiCta8rX3fxAA">
              <object xmi:id="_etBWb82iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).object" incoming="_etBWSM2iEeiCta8rX3fxAA" type="_etBWA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWcM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWcc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_etBWcs2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).result" outgoing="_etBWSc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWc82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWdM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBWdc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_etBWds2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_etBWSc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWd82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWeM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etBWec2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_etBWSs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWes2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWe82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBWfM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_etBWfc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_etBWS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWfs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWf82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etBWgM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etBWgc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_etBWgs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_etBWSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWg82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWhM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etBWhc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_etBWTc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWhs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWh82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etBWiM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_etBWS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWic2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWis2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_etBWi82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_etBWTM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etBWjM2iEeiCta8rX3fxAA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_etBWTM2iEeiCta8rX3fxAA _etBWTc2iEeiCta8rX3fxAA" outgoing="_etBWTs2iEeiCta8rX3fxAA" decisionInputFlow="_etBWTc2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_etBWjc2iEeiCta8rX3fxAA" name="Tester$initialization$1" visibility="protected" method="_etBWRM2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_etBWjs2iEeiCta8rX3fxAA" name="Tester" visibility="public" method="_etBWB82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_etBWj82iEeiCta8rX3fxAA" name="" visibility="package" type="_etBWA82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWkM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWkc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_etBWks2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_etBWQs2iEeiCta8rX3fxAA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_etBWk82iEeiCta8rX3fxAA" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_etBWlM2iEeiCta8rX3fxAA" name="Continue" signal="_etBWk82iEeiCta8rX3fxAA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_etBWlc2iEeiCta8rX3fxAA" name="AssertFalse" visibility="public" node="_etBWps2iEeiCta8rX3fxAA _etBWp82iEeiCta8rX3fxAA _etBWqM2iEeiCta8rX3fxAA _etBWqc2iEeiCta8rX3fxAA _etBWqs2iEeiCta8rX3fxAA" group="_etBWqs2iEeiCta8rX3fxAA">
      <elementImport xmi:id="_etBWls2iEeiCta8rX3fxAA" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_etBWl82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etBWmM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etBWmc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etBWms2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etBWm82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_etBWnM2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWnc2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWns2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_etBWn82iEeiCta8rX3fxAA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWoM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWoc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWos2iEeiCta8rX3fxAA" target="_etBWp82iEeiCta8rX3fxAA" source="_etBWps2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWo82iEeiCta8rX3fxAA" target="_etBWqc2iEeiCta8rX3fxAA" source="_etBWqM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWpM2iEeiCta8rX3fxAA" target="_etBWy82iEeiCta8rX3fxAA" source="_etBWp82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWpc2iEeiCta8rX3fxAA" target="_etBW782iEeiCta8rX3fxAA" source="_etBWqc2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_etBWqs2iEeiCta8rX3fxAA" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBWq82iEeiCta8rX3fxAA" name="ExpressionStatement@6a113bb0">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWrM2iEeiCta8rX3fxAA" target="_etBWsM2iEeiCta8rX3fxAA" source="_etBW082iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWrc2iEeiCta8rX3fxAA" target="_etBWs82iEeiCta8rX3fxAA" source="_etBW-M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etBWrs2iEeiCta8rX3fxAA" target="_etBWr82iEeiCta8rX3fxAA" source="_etBWts2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBWr82iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_etBWrs2iEeiCta8rX3fxAA" behavior="_etB9oc2iEeiCta8rX3fxAA">
            <argument xmi:id="_etBWsM2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_etBWrM2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWsc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWss2iEeiCta8rX3fxAA" value="1"/>
            </argument>
            <argument xmi:id="_etBWs82iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_etBWrc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWtM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWtc2iEeiCta8rX3fxAA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBWts2iEeiCta8rX3fxAA" name="Tuple@41a5e4bd" outgoing="_etBWrs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWt82iEeiCta8rX3fxAA" target="_etBW182iEeiCta8rX3fxAA" source="_etBWxc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWuM2iEeiCta8rX3fxAA" target="_etBW2s2iEeiCta8rX3fxAA" source="_etBWzs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWuc2iEeiCta8rX3fxAA" target="_etBW0c2iEeiCta8rX3fxAA" source="_etBWxM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBWus2iEeiCta8rX3fxAA" target="_etBW0c2iEeiCta8rX3fxAA" source="_etBWyc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWu82iEeiCta8rX3fxAA" target="_etBW5s2iEeiCta8rX3fxAA" source="_etBW782iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWvM2iEeiCta8rX3fxAA" target="_etBW8c2iEeiCta8rX3fxAA" source="_etBW782iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWvc2iEeiCta8rX3fxAA" target="_etBW982iEeiCta8rX3fxAA" source="_etBW9M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWvs2iEeiCta8rX3fxAA" target="_etBW-M2iEeiCta8rX3fxAA" source="_etBW6c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWv82iEeiCta8rX3fxAA" target="_etBW-c2iEeiCta8rX3fxAA" source="_etBW982iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWwM2iEeiCta8rX3fxAA" target="_etBW-c2iEeiCta8rX3fxAA" source="_etBW982iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWwc2iEeiCta8rX3fxAA" target="_etBW-M2iEeiCta8rX3fxAA" source="_etBW-c2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBWws2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWw82iEeiCta8rX3fxAA" target="_etBW7M2iEeiCta8rX3fxAA" source="_etBW4c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBWxM2iEeiCta8rX3fxAA" name="Value(&quot;! &quot;)" outgoing="_etBWuc2iEeiCta8rX3fxAA">
              <result xmi:id="_etBWxc2iEeiCta8rX3fxAA" name="Value(&quot;! &quot;).result" outgoing="_etBWt82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWxs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWx82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_etBWyM2iEeiCta8rX3fxAA" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBWyc2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_etBWus2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBWys2iEeiCta8rX3fxAA" target="_etBWzs2iEeiCta8rX3fxAA" source="_etBWy82iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBWy82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBWpM2iEeiCta8rX3fxAA" outgoing="_etBWys2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWzM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBWzc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBWzs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBWys2iEeiCta8rX3fxAA" outgoing="_etBWuM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBWz82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW0M2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBW0c2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBWuc2iEeiCta8rX3fxAA _etBWus2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBW0s2iEeiCta8rX3fxAA" target="_etBW082iEeiCta8rX3fxAA" source="_etBW3c2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etBW082iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBW0s2iEeiCta8rX3fxAA" outgoing="_etBWrM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW1M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW1c2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBW1s2iEeiCta8rX3fxAA" name="Call(Concat)">
                <argument xmi:id="_etBW182iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBWt82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW2M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW2c2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etBW2s2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBWuM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW282iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW3M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etBW3c2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBW0s2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW3s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW382iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBW4M2iEeiCta8rX3fxAA" name="Value(false)">
              <result xmi:id="_etBW4c2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_etBWw82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW4s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW482iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_etBW5M2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etBW5c2iEeiCta8rX3fxAA" name="Test(==)">
              <first xmi:id="_etBW5s2iEeiCta8rX3fxAA" name="Test(==).first" incoming="_etBWu82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW582iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW6M2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etBW6c2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_etBWvs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW6s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW682iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etBW7M2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_etBWw82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW7c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW7s2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etBW782iEeiCta8rX3fxAA" name="Fork(Fork(condition))" incoming="_etBWpc2iEeiCta8rX3fxAA" outgoing="_etBWu82iEeiCta8rX3fxAA _etBWvM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBW8M2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_etBW8c2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etBWvM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW8s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW882iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etBW9M2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etBWvc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBW9c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBW9s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etBW982iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_etBWvc2iEeiCta8rX3fxAA" outgoing="_etBWv82iEeiCta8rX3fxAA _etBWwM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_etBW-M2iEeiCta8rX3fxAA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_etBWvs2iEeiCta8rX3fxAA _etBWwc2iEeiCta8rX3fxAA" outgoing="_etBWrc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etBW-c2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_etBWv82iEeiCta8rX3fxAA _etBWwM2iEeiCta8rX3fxAA" outgoing="_etBWwc2iEeiCta8rX3fxAA" decisionInputFlow="_etBWwM2iEeiCta8rX3fxAA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBWps2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_etBWos2iEeiCta8rX3fxAA" parameter="_etBWnM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_etBWp82iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etBWos2iEeiCta8rX3fxAA" outgoing="_etBWpM2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBWqM2iEeiCta8rX3fxAA" name="Input(condition)" outgoing="_etBWo82iEeiCta8rX3fxAA" parameter="_etBWn82iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_etBWqc2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_etBWo82iEeiCta8rX3fxAA" outgoing="_etBWpc2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_etBW-s2iEeiCta8rX3fxAA" name="AssertEqual" visibility="public" node="_etBXGs2iEeiCta8rX3fxAA _etBXG82iEeiCta8rX3fxAA _etBXHM2iEeiCta8rX3fxAA _etBXHc2iEeiCta8rX3fxAA _etBXHs2iEeiCta8rX3fxAA _etBXH82iEeiCta8rX3fxAA _etBXIM2iEeiCta8rX3fxAA" group="_etBXIM2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_etBW-82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etBW_M2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etBW_c2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etBW_s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etBW_82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_etBXAM2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXAc2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXAs2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_etBXA82iEeiCta8rX3fxAA" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXBM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXBc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_etBXBs2iEeiCta8rX3fxAA" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXB82iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXCM2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXCc2iEeiCta8rX3fxAA" target="_etBXG82iEeiCta8rX3fxAA" source="_etBXGs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXCs2iEeiCta8rX3fxAA" target="_etBXHc2iEeiCta8rX3fxAA" source="_etBXHM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXC82iEeiCta8rX3fxAA" target="_etBXH82iEeiCta8rX3fxAA" source="_etBXHs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXDM2iEeiCta8rX3fxAA" target="_etBXV82iEeiCta8rX3fxAA" source="_etBXHc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXDc2iEeiCta8rX3fxAA" target="_etBXX82iEeiCta8rX3fxAA" source="_etBXH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXDs2iEeiCta8rX3fxAA" target="_etBXmc2iEeiCta8rX3fxAA" source="_etBXG82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXD82iEeiCta8rX3fxAA" target="_etBX2M2iEeiCta8rX3fxAA" source="_etBXH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXEM2iEeiCta8rX3fxAA" target="_etBYLM2iEeiCta8rX3fxAA" source="_etBXG82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXEc2iEeiCta8rX3fxAA" target="_etBYPM2iEeiCta8rX3fxAA" source="_etBXH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXEs2iEeiCta8rX3fxAA" target="_etBYRM2iEeiCta8rX3fxAA" source="_etBXHc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXE82iEeiCta8rX3fxAA" target="_etBYY82iEeiCta8rX3fxAA" source="_etBXH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXFM2iEeiCta8rX3fxAA" target="_etBYhs2iEeiCta8rX3fxAA" source="_etBXG82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXFc2iEeiCta8rX3fxAA" target="_etBYls2iEeiCta8rX3fxAA" source="_etBXH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXFs2iEeiCta8rX3fxAA" target="_etBYns2iEeiCta8rX3fxAA" source="_etBXHc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXF82iEeiCta8rX3fxAA" target="_etBY7c2iEeiCta8rX3fxAA" source="_etBXG82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXGM2iEeiCta8rX3fxAA" target="_etBY-s2iEeiCta8rX3fxAA" source="_etBXH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXGc2iEeiCta8rX3fxAA" target="_etBZAs2iEeiCta8rX3fxAA" source="_etBXHc2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_etBXIM2iEeiCta8rX3fxAA" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXIc2iEeiCta8rX3fxAA" target="_etBZFs2iEeiCta8rX3fxAA" source="_etBZCs2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXIs2iEeiCta8rX3fxAA" target="_etBZF82iEeiCta8rX3fxAA" source="_etBZDc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXI82iEeiCta8rX3fxAA" target="_etBZGM2iEeiCta8rX3fxAA" source="_etBZEM2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXJM2iEeiCta8rX3fxAA" target="_etBZGc2iEeiCta8rX3fxAA" source="_etBZE82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_etBXJc2iEeiCta8rX3fxAA" name="IfStatement@20126399">
          <edge xmi:type="uml:ControlFlow" xmi:id="_etBXJs2iEeiCta8rX3fxAA" target="_etBXws2iEeiCta8rX3fxAA" source="_etBXgs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXJ82iEeiCta8rX3fxAA" target="_etBYss2iEeiCta8rX3fxAA" source="_etBYps2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXKM2iEeiCta8rX3fxAA" target="_etBYs82iEeiCta8rX3fxAA" source="_etBYqc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXKc2iEeiCta8rX3fxAA" target="_etBYtM2iEeiCta8rX3fxAA" source="_etBYrM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXKs2iEeiCta8rX3fxAA" target="_etBYtc2iEeiCta8rX3fxAA" source="_etBYr82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXK82iEeiCta8rX3fxAA" target="_etBX5M2iEeiCta8rX3fxAA" source="_etBXxM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXLM2iEeiCta8rX3fxAA" target="_etBYAc2iEeiCta8rX3fxAA" source="_etBXxM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXLc2iEeiCta8rX3fxAA" target="_etBYNM2iEeiCta8rX3fxAA" source="_etBXxM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXLs2iEeiCta8rX3fxAA" target="_etBYjs2iEeiCta8rX3fxAA" source="_etBXxM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etBXL82iEeiCta8rX3fxAA" target="_etBX2s2iEeiCta8rX3fxAA" source="_etBXws2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etBXMM2iEeiCta8rX3fxAA" target="_etBYts2iEeiCta8rX3fxAA" source="_etBX2s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXMc2iEeiCta8rX3fxAA" target="_etBYyM2iEeiCta8rX3fxAA" source="_etBYss2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXMs2iEeiCta8rX3fxAA" target="_etBY0M2iEeiCta8rX3fxAA" source="_etBYs82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXM82iEeiCta8rX3fxAA" target="_etBY2M2iEeiCta8rX3fxAA" source="_etBYtM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXNM2iEeiCta8rX3fxAA" target="_etBY4M2iEeiCta8rX3fxAA" source="_etBYtc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXNc2iEeiCta8rX3fxAA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXNs2iEeiCta8rX3fxAA" target="_etBXTs2iEeiCta8rX3fxAA" source="_etBXV82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXN82iEeiCta8rX3fxAA" target="_etBXWc2iEeiCta8rX3fxAA" source="_etBXV82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXOM2iEeiCta8rX3fxAA" target="_etBXVM2iEeiCta8rX3fxAA" source="_etBXX82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXOc2iEeiCta8rX3fxAA" target="_etBXYc2iEeiCta8rX3fxAA" source="_etBXX82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXOs2iEeiCta8rX3fxAA" target="_etBXaM2iEeiCta8rX3fxAA" source="_etBXXM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXO82iEeiCta8rX3fxAA" target="_etBXac2iEeiCta8rX3fxAA" source="_etBXZM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXPM2iEeiCta8rX3fxAA" target="_etBXa82iEeiCta8rX3fxAA" source="_etBXaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXPc2iEeiCta8rX3fxAA" target="_etBXcs2iEeiCta8rX3fxAA" source="_etBXac2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXPs2iEeiCta8rX3fxAA" target="_etBXeM2iEeiCta8rX3fxAA" source="_etBXac2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBXP82iEeiCta8rX3fxAA" target="_etBXTc2iEeiCta8rX3fxAA" source="_etBXeM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBXQM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBXQc2iEeiCta8rX3fxAA" target="_etBXas2iEeiCta8rX3fxAA" source="_etBXeM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBXQs2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBXQ82iEeiCta8rX3fxAA" target="_etBXec2iEeiCta8rX3fxAA" source="_etBXZ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXRM2iEeiCta8rX3fxAA" target="_etBXec2iEeiCta8rX3fxAA" source="_etBXaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBXRc2iEeiCta8rX3fxAA" target="_etBXeM2iEeiCta8rX3fxAA" source="_etBXec2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBXRs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBXR82iEeiCta8rX3fxAA" target="_etBXcc2iEeiCta8rX3fxAA" source="_etBXec2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBXSM2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXSc2iEeiCta8rX3fxAA" target="_etBXes2iEeiCta8rX3fxAA" source="_etBXUc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXSs2iEeiCta8rX3fxAA" target="_etBXes2iEeiCta8rX3fxAA" source="_etBXbs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXS82iEeiCta8rX3fxAA" target="_etBXes2iEeiCta8rX3fxAA" source="_etBXdc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXTM2iEeiCta8rX3fxAA" target="_etBXfM2iEeiCta8rX3fxAA" source="_etBXes2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etBXTc2iEeiCta8rX3fxAA" name="Test(==)" incoming="_etBXP82iEeiCta8rX3fxAA">
              <first xmi:id="_etBXTs2iEeiCta8rX3fxAA" name="Test(==).first" incoming="_etBXNs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXT82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXUM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etBXUc2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_etBXSc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXUs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXU82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etBXVM2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_etBXOM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXVc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXVs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etBXV82iEeiCta8rX3fxAA" name="Fork(Fork(value1))" incoming="_etBXDM2iEeiCta8rX3fxAA" outgoing="_etBXNs2iEeiCta8rX3fxAA _etBXN82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXWM2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_etBXWc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etBXN82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXWs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXW82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etBXXM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etBXOs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXXc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXXs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etBXX82iEeiCta8rX3fxAA" name="Fork(Fork(value2))" incoming="_etBXDc2iEeiCta8rX3fxAA" outgoing="_etBXOM2iEeiCta8rX3fxAA _etBXOc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXYM2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_etBXYc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etBXOc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXYs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXY82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etBXZM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etBXO82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXZc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXZs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_etBXZ82iEeiCta8rX3fxAA" name="Initial(Test(==))" outgoing="_etBXQ82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBXaM2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_etBXOs2iEeiCta8rX3fxAA" outgoing="_etBXPM2iEeiCta8rX3fxAA _etBXRM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBXac2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_etBXO82iEeiCta8rX3fxAA" outgoing="_etBXPc2iEeiCta8rX3fxAA _etBXPs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXas2iEeiCta8rX3fxAA" name="Call(Not)" incoming="_etBXQc2iEeiCta8rX3fxAA">
              <argument xmi:id="_etBXa82iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_etBXPM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXbM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXbc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etBXbs2iEeiCta8rX3fxAA" name="Call(Not).result(result)" outgoing="_etBXSs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXb82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXcM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXcc2iEeiCta8rX3fxAA" name="Call(Not)" incoming="_etBXR82iEeiCta8rX3fxAA">
              <argument xmi:id="_etBXcs2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_etBXPc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXc82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXdM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etBXdc2iEeiCta8rX3fxAA" name="Call(Not).result(result)" outgoing="_etBXS82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXds2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXd82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_etBXeM2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_etBXPs2iEeiCta8rX3fxAA _etBXRc2iEeiCta8rX3fxAA" outgoing="_etBXP82iEeiCta8rX3fxAA _etBXQc2iEeiCta8rX3fxAA" decisionInputFlow="_etBXPs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etBXec2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_etBXQ82iEeiCta8rX3fxAA _etBXRM2iEeiCta8rX3fxAA" outgoing="_etBXRc2iEeiCta8rX3fxAA _etBXR82iEeiCta8rX3fxAA" decisionInputFlow="_etBXRM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_etBXes2iEeiCta8rX3fxAA" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_etBXSc2iEeiCta8rX3fxAA _etBXSs2iEeiCta8rX3fxAA _etBXS82iEeiCta8rX3fxAA" outgoing="_etBXTM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXe82iEeiCta8rX3fxAA" name="Call(Not)">
              <argument xmi:id="_etBXfM2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_etBXTM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXfc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXfs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etBXf82iEeiCta8rX3fxAA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXgM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXgc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXgs2iEeiCta8rX3fxAA" name="ExpressionStatement@46b80ac0" outgoing="_etBXJs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXg82iEeiCta8rX3fxAA" target="_etBXhs2iEeiCta8rX3fxAA" source="_etBXtc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBXhM2iEeiCta8rX3fxAA" target="_etBXhc2iEeiCta8rX3fxAA" source="_etBXic2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXhc2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_etBXhM2iEeiCta8rX3fxAA" behavior="_etB-Q82iEeiCta8rX3fxAA">
              <argument xmi:id="_etBXhs2iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_etBXg82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXh82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXiM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXic2iEeiCta8rX3fxAA" name="Tuple@3a4af7ed" outgoing="_etBXhM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXis2iEeiCta8rX3fxAA" target="_etBXpc2iEeiCta8rX3fxAA" source="_etBXk82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXi82iEeiCta8rX3fxAA" target="_etBXqM2iEeiCta8rX3fxAA" source="_etBXnM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBXjM2iEeiCta8rX3fxAA" target="_etBXn82iEeiCta8rX3fxAA" source="_etBXks2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBXjc2iEeiCta8rX3fxAA" target="_etBXn82iEeiCta8rX3fxAA" source="_etBXl82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXjs2iEeiCta8rX3fxAA" target="_etBXuc2iEeiCta8rX3fxAA" source="_etBXoc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXj82iEeiCta8rX3fxAA" target="_etBXvM2iEeiCta8rX3fxAA" source="_etBXr82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBXkM2iEeiCta8rX3fxAA" target="_etBXs82iEeiCta8rX3fxAA" source="_etBXn82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBXkc2iEeiCta8rX3fxAA" target="_etBXs82iEeiCta8rX3fxAA" source="_etBXrs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBXks2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;)" outgoing="_etBXjM2iEeiCta8rX3fxAA">
                <result xmi:id="_etBXk82iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;).result" outgoing="_etBXis2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXlM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXlc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_etBXls2iEeiCta8rX3fxAA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXl82iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_etBXjc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXmM2iEeiCta8rX3fxAA" target="_etBXnM2iEeiCta8rX3fxAA" source="_etBXmc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etBXmc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBXDs2iEeiCta8rX3fxAA" outgoing="_etBXmM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXms2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXm82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etBXnM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBXmM2iEeiCta8rX3fxAA" outgoing="_etBXi82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXnc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXns2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXn82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBXjM2iEeiCta8rX3fxAA _etBXjc2iEeiCta8rX3fxAA" outgoing="_etBXkM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXoM2iEeiCta8rX3fxAA" target="_etBXoc2iEeiCta8rX3fxAA" source="_etBXq82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etBXoc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBXoM2iEeiCta8rX3fxAA" outgoing="_etBXjs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXos2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXo82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXpM2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_etBXpc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBXis2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXps2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXp82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_etBXqM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBXi82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXqc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXqs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etBXq82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBXoM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXrM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXrc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBXrs2iEeiCta8rX3fxAA" name="Value(&quot;==&quot;)" outgoing="_etBXkc2iEeiCta8rX3fxAA">
                <result xmi:id="_etBXr82iEeiCta8rX3fxAA" name="Value(&quot;==&quot;).result" outgoing="_etBXj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXsM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXsc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_etBXss2iEeiCta8rX3fxAA" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXs82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBXkM2iEeiCta8rX3fxAA _etBXkc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXtM2iEeiCta8rX3fxAA" target="_etBXtc2iEeiCta8rX3fxAA" source="_etBXv82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etBXtc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBXtM2iEeiCta8rX3fxAA" outgoing="_etBXg82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXts2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXt82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBXuM2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_etBXuc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBXjs2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXus2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXu82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_etBXvM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBXj82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXvc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXvs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etBXv82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBXtM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBXwM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBXwc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXws2iEeiCta8rX3fxAA" name="ExpressionStatement@14adb3e8" incoming="_etBXJs2iEeiCta8rX3fxAA" outgoing="_etBXL82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXw82iEeiCta8rX3fxAA" target="_etBXxM2iEeiCta8rX3fxAA" source="_etBX2c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBXxM2iEeiCta8rX3fxAA" name="Fork(s)@23803141" incoming="_etBXw82iEeiCta8rX3fxAA" outgoing="_etBXK82iEeiCta8rX3fxAA _etBXLM2iEeiCta8rX3fxAA _etBXLc2iEeiCta8rX3fxAA _etBXLs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBXxc2iEeiCta8rX3fxAA" name="RightHandSide@2a159936">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_etBXxs2iEeiCta8rX3fxAA" name="CastExpression@2a159936" mode="parallel" outputElement="_etBX2c2iEeiCta8rX3fxAA" inputElement="_etBX2M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXx82iEeiCta8rX3fxAA" target="_etBX0M2iEeiCta8rX3fxAA" source="_etBX1s2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXyM2iEeiCta8rX3fxAA" target="_etBX182iEeiCta8rX3fxAA" source="_etBX1s2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXyc2iEeiCta8rX3fxAA" target="_etBX182iEeiCta8rX3fxAA" source="_etBX082iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXys2iEeiCta8rX3fxAA" target="_etBXzs2iEeiCta8rX3fxAA" source="_etBX182iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBXy82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXzM2iEeiCta8rX3fxAA" target="_etBX1s2iEeiCta8rX3fxAA" source="_etBX2M2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBXzc2iEeiCta8rX3fxAA" target="_etBX2c2iEeiCta8rX3fxAA" source="_etBXzs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_etBXzs2iEeiCta8rX3fxAA" name="Merge(CastExpression@2a159936.operand)" incoming="_etBXys2iEeiCta8rX3fxAA" outgoing="_etBXzc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_etBXz82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_etBX0M2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String).object" incoming="_etBXx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX0c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX0s2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_etBX082iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String).result" outgoing="_etBXyc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX1M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX1c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_etBX1s2iEeiCta8rX3fxAA" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_etBXzM2iEeiCta8rX3fxAA" outgoing="_etBXx82iEeiCta8rX3fxAA _etBXyM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_etBX182iEeiCta8rX3fxAA" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_etBXyM2iEeiCta8rX3fxAA _etBXyc2iEeiCta8rX3fxAA" outgoing="_etBXys2iEeiCta8rX3fxAA" decisionInputFlow="_etBXyc2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_etBX2M2iEeiCta8rX3fxAA" name="CastExpression@2a159936.inputElement" incoming="_etBXD82iEeiCta8rX3fxAA" outgoing="_etBXzM2iEeiCta8rX3fxAA" regionAsInput="_etBXxs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_etBX2c2iEeiCta8rX3fxAA" name="CastExpression@2a159936.outputElement" incoming="_etBXzc2iEeiCta8rX3fxAA" outgoing="_etBXw82iEeiCta8rX3fxAA" regionAsOutput="_etBXxs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_etBX2s2iEeiCta8rX3fxAA" name="IfStatement@581cb35e" incoming="_etBXL82iEeiCta8rX3fxAA" outgoing="_etBXMM2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBX282iEeiCta8rX3fxAA" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBX3M2iEeiCta8rX3fxAA" target="_etBX482iEeiCta8rX3fxAA" source="_etBX3c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBX3c2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@67dca10c)" outgoing="_etBX3M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBX3s2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_etBX382iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX4M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX4c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_etBX4s2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBX482iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_etBX3M2iEeiCta8rX3fxAA">
                <argument xmi:id="_etBX5M2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etBXK82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX5c2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX5s2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_etBX582iEeiCta8rX3fxAA" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX6M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX6c2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBX6s2iEeiCta8rX3fxAA" name="ExpressionStatement@24553e1b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBX682iEeiCta8rX3fxAA" target="_etBX7s2iEeiCta8rX3fxAA" source="_etBYHc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBX7M2iEeiCta8rX3fxAA" target="_etBX7c2iEeiCta8rX3fxAA" source="_etBX8c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBX7c2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_etBX7M2iEeiCta8rX3fxAA" behavior="_etB-Q82iEeiCta8rX3fxAA">
                <argument xmi:id="_etBX7s2iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_etBX682iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX782iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX8M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBX8c2iEeiCta8rX3fxAA" name="Tuple@5ef008e4" outgoing="_etBX7M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBX8s2iEeiCta8rX3fxAA" target="_etBYDc2iEeiCta8rX3fxAA" source="_etBX-82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBX882iEeiCta8rX3fxAA" target="_etBYEM2iEeiCta8rX3fxAA" source="_etBYBM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBX9M2iEeiCta8rX3fxAA" target="_etBYB82iEeiCta8rX3fxAA" source="_etBX-s2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBX9c2iEeiCta8rX3fxAA" target="_etBYB82iEeiCta8rX3fxAA" source="_etBX_82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBX9s2iEeiCta8rX3fxAA" target="_etBYIc2iEeiCta8rX3fxAA" source="_etBYCc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBX982iEeiCta8rX3fxAA" target="_etBYJM2iEeiCta8rX3fxAA" source="_etBYF82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBX-M2iEeiCta8rX3fxAA" target="_etBYG82iEeiCta8rX3fxAA" source="_etBYB82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBX-c2iEeiCta8rX3fxAA" target="_etBYG82iEeiCta8rX3fxAA" source="_etBYFs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBX-s2iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;)" outgoing="_etBX9M2iEeiCta8rX3fxAA">
                  <result xmi:id="_etBX-82iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;).result" outgoing="_etBX8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBX_M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBX_c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etBX_s2iEeiCta8rX3fxAA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBX_82iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141)" outgoing="_etBX9c2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYAM2iEeiCta8rX3fxAA" target="_etBYBM2iEeiCta8rX3fxAA" source="_etBYAc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_etBYAc2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141).input" incoming="_etBXLM2iEeiCta8rX3fxAA" outgoing="_etBYAM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYAs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYA82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_etBYBM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141).output" incoming="_etBYAM2iEeiCta8rX3fxAA" outgoing="_etBX882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYBc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYBs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYB82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBX9M2iEeiCta8rX3fxAA _etBX9c2iEeiCta8rX3fxAA" outgoing="_etBX-M2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYCM2iEeiCta8rX3fxAA" target="_etBYCc2iEeiCta8rX3fxAA" source="_etBYE82iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_etBYCc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBYCM2iEeiCta8rX3fxAA" outgoing="_etBX9s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYCs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYC82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBYDM2iEeiCta8rX3fxAA" name="Call(Concat)">
                    <argument xmi:id="_etBYDc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBX8s2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYDs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYD82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_etBYEM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBX882iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYEc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYEs2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_etBYE82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBYCM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYFM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYFc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBYFs2iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;)" outgoing="_etBX-c2iEeiCta8rX3fxAA">
                  <result xmi:id="_etBYF82iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;).result" outgoing="_etBX982iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYGM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYGc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etBYGs2iEeiCta8rX3fxAA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYG82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBX-M2iEeiCta8rX3fxAA _etBX-c2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYHM2iEeiCta8rX3fxAA" target="_etBYHc2iEeiCta8rX3fxAA" source="_etBYJ82iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_etBYHc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBYHM2iEeiCta8rX3fxAA" outgoing="_etBX682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYHs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYH82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBYIM2iEeiCta8rX3fxAA" name="Call(Concat)">
                    <argument xmi:id="_etBYIc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBX9s2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYIs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYI82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_etBYJM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBX982iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYJc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYJs2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_etBYJ82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBYHM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYKM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYKc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYKs2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYK82iEeiCta8rX3fxAA" target="_etBYL82iEeiCta8rX3fxAA" source="_etBYLM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYLM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBXEM2iEeiCta8rX3fxAA" outgoing="_etBYK82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYLc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYLs2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYL82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBYK82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYMM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYMc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYMs2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYM82iEeiCta8rX3fxAA" target="_etBYN82iEeiCta8rX3fxAA" source="_etBYNM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYNM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141).input" incoming="_etBXLc2iEeiCta8rX3fxAA" outgoing="_etBYM82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYNc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYNs2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYN82iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141).output" incoming="_etBYM82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYOM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYOc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYOs2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYO82iEeiCta8rX3fxAA" target="_etBYP82iEeiCta8rX3fxAA" source="_etBYPM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYPM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_etBXEc2iEeiCta8rX3fxAA" outgoing="_etBYO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYPc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYPs2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYP82iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_etBYO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYQM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYQc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYQs2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYQ82iEeiCta8rX3fxAA" target="_etBYR82iEeiCta8rX3fxAA" source="_etBYRM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYRM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_etBXEs2iEeiCta8rX3fxAA" outgoing="_etBYQ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYRc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYRs2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYR82iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_etBYQ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYSM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYSc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBYSs2iEeiCta8rX3fxAA" name="Value(true)">
              <result xmi:id="_etBYS82iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYTM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYTc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_etBYTs2iEeiCta8rX3fxAA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYT82iEeiCta8rX3fxAA" name="ExpressionStatement@64fda109">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYUM2iEeiCta8rX3fxAA" target="_etBYU82iEeiCta8rX3fxAA" source="_etBYg82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etBYUc2iEeiCta8rX3fxAA" target="_etBYUs2iEeiCta8rX3fxAA" source="_etBYVs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBYUs2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_etBYUc2iEeiCta8rX3fxAA" behavior="_etB-Q82iEeiCta8rX3fxAA">
                <argument xmi:id="_etBYU82iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_etBYUM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYVM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYVc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYVs2iEeiCta8rX3fxAA" name="Tuple@310568db" outgoing="_etBYUc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYV82iEeiCta8rX3fxAA" target="_etBYa82iEeiCta8rX3fxAA" source="_etBYY82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBYWM2iEeiCta8rX3fxAA" target="_etBYas2iEeiCta8rX3fxAA" source="_etBYYs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYWc2iEeiCta8rX3fxAA" target="_etBYds2iEeiCta8rX3fxAA" source="_etBYY82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBYWs2iEeiCta8rX3fxAA" target="_etBYgs2iEeiCta8rX3fxAA" source="_etBYgc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYW82iEeiCta8rX3fxAA" target="_etBYgs2iEeiCta8rX3fxAA" source="_etBYbs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBYXM2iEeiCta8rX3fxAA" target="_etBYcc2iEeiCta8rX3fxAA" source="_etBYgs2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBYXc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBYXs2iEeiCta8rX3fxAA" target="_etBYd82iEeiCta8rX3fxAA" source="_etBYgs2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_etBYX82iEeiCta8rX3fxAA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYYM2iEeiCta8rX3fxAA" target="_etBYg82iEeiCta8rX3fxAA" source="_etBYc82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYYc2iEeiCta8rX3fxAA" target="_etBYg82iEeiCta8rX3fxAA" source="_etBYec2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYYs2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@352280f4)" outgoing="_etBYWM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ForkNode" xmi:id="_etBYY82iEeiCta8rX3fxAA" name="Fork('')@516b3390" incoming="_etBXE82iEeiCta8rX3fxAA" outgoing="_etBYV82iEeiCta8rX3fxAA _etBYWc2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYZM2iEeiCta8rX3fxAA" name="RightHandSide@6676b867"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBYZc2iEeiCta8rX3fxAA" name="Value(null)">
                    <result xmi:id="_etBYZs2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYZ82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYaM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_etBYac2iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBYas2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_etBYWM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etBYa82iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etBYV82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYbM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYbc2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_etBYbs2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etBYW82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYb82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYcM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYcc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@3ec333dc.operand2" incoming="_etBYXM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYcs2iEeiCta8rX3fxAA" target="_etBYc82iEeiCta8rX3fxAA" source="_etBYds2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_etBYc82iEeiCta8rX3fxAA" name="NullCoalescingExpression@3ec333dc.operand2.result" incoming="_etBYcs2iEeiCta8rX3fxAA" outgoing="_etBYYM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYdM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYdc2iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_etBYds2iEeiCta8rX3fxAA" name="Merge(Fork('')@516b3390)" incoming="_etBYWc2iEeiCta8rX3fxAA" outgoing="_etBYcs2iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYd82iEeiCta8rX3fxAA" name="NullCoalescingExpression@3ec333dc.operand3" incoming="_etBYXs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYeM2iEeiCta8rX3fxAA" target="_etBYec2iEeiCta8rX3fxAA" source="_etBYfc2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_etBYec2iEeiCta8rX3fxAA" name="NullCoalescingExpression@3ec333dc.operand3.result" incoming="_etBYeM2iEeiCta8rX3fxAA" outgoing="_etBYYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYes2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYe82iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBYfM2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;)">
                    <result xmi:id="_etBYfc2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;).result" outgoing="_etBYeM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYfs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYf82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_etBYgM2iEeiCta8rX3fxAA" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_etBYgc2iEeiCta8rX3fxAA" name="Initial(NullCoalescingExpression@3ec333dc)" outgoing="_etBYWs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_etBYgs2iEeiCta8rX3fxAA" name="Decision(NullCoalescingExpression@3ec333dc)" incoming="_etBYWs2iEeiCta8rX3fxAA _etBYW82iEeiCta8rX3fxAA" outgoing="_etBYXM2iEeiCta8rX3fxAA _etBYXs2iEeiCta8rX3fxAA" decisionInputFlow="_etBYW82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_etBYg82iEeiCta8rX3fxAA" name="Merge(NullCoalescingExpression@3ec333dc.result)" incoming="_etBYYM2iEeiCta8rX3fxAA _etBYYc2iEeiCta8rX3fxAA" outgoing="_etBYUM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYhM2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYhc2iEeiCta8rX3fxAA" target="_etBYic2iEeiCta8rX3fxAA" source="_etBYhs2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYhs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBXFM2iEeiCta8rX3fxAA" outgoing="_etBYhc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYh82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYiM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYic2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBYhc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYis2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYi82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYjM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYjc2iEeiCta8rX3fxAA" target="_etBYkc2iEeiCta8rX3fxAA" source="_etBYjs2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYjs2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141).input" incoming="_etBXLs2iEeiCta8rX3fxAA" outgoing="_etBYjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYj82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYkM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYkc2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@23803141).output" incoming="_etBYjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYks2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYk82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYlM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYlc2iEeiCta8rX3fxAA" target="_etBYmc2iEeiCta8rX3fxAA" source="_etBYls2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYls2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_etBXFc2iEeiCta8rX3fxAA" outgoing="_etBYlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYl82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYmM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYmc2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_etBYlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYms2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYm82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYnM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYnc2iEeiCta8rX3fxAA" target="_etBYoc2iEeiCta8rX3fxAA" source="_etBYns2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBYns2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_etBXFs2iEeiCta8rX3fxAA" outgoing="_etBYnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYn82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYoM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBYoc2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_etBYnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYos2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYo82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_etBYpM2iEeiCta8rX3fxAA" body="_etBX6s2iEeiCta8rX3fxAA _etBYKs2iEeiCta8rX3fxAA _etBYMs2iEeiCta8rX3fxAA _etBYOs2iEeiCta8rX3fxAA _etBYQs2iEeiCta8rX3fxAA" bodyOutput="_etBYL82iEeiCta8rX3fxAA _etBYN82iEeiCta8rX3fxAA _etBYP82iEeiCta8rX3fxAA _etBYR82iEeiCta8rX3fxAA" decider="_etBX582iEeiCta8rX3fxAA" successorClause="_etBYpc2iEeiCta8rX3fxAA" test="_etBX282iEeiCta8rX3fxAA"/>
            <clause xmi:id="_etBYpc2iEeiCta8rX3fxAA" body="_etBYT82iEeiCta8rX3fxAA _etBYhM2iEeiCta8rX3fxAA _etBYjM2iEeiCta8rX3fxAA _etBYlM2iEeiCta8rX3fxAA _etBYnM2iEeiCta8rX3fxAA" bodyOutput="_etBYic2iEeiCta8rX3fxAA _etBYkc2iEeiCta8rX3fxAA _etBYmc2iEeiCta8rX3fxAA _etBYoc2iEeiCta8rX3fxAA" decider="_etBYS82iEeiCta8rX3fxAA" predecessorClause="_etBYpM2iEeiCta8rX3fxAA" test="_etBYSs2iEeiCta8rX3fxAA"/>
            <result xmi:id="_etBYps2iEeiCta8rX3fxAA" name="IfStatement@581cb35e.result(label)" outgoing="_etBXJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYp82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYqM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_etBYqc2iEeiCta8rX3fxAA" name="IfStatement@581cb35e.result(s)" outgoing="_etBXKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYqs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYq82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_etBYrM2iEeiCta8rX3fxAA" name="IfStatement@581cb35e.result(value2)" outgoing="_etBXKc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYrc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYrs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_etBYr82iEeiCta8rX3fxAA" name="IfStatement@581cb35e.result(value1)" outgoing="_etBXKs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYsM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYsc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_etBYss2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etBXJ82iEeiCta8rX3fxAA" outgoing="_etBXMc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_etBYs82iEeiCta8rX3fxAA" name="Fork(s)" incoming="_etBXKM2iEeiCta8rX3fxAA" outgoing="_etBXMs2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_etBYtM2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_etBXKc2iEeiCta8rX3fxAA" outgoing="_etBXM82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_etBYtc2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_etBXKs2iEeiCta8rX3fxAA" outgoing="_etBXNM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYts2iEeiCta8rX3fxAA" name="ExpressionStatement@7ac136a8" incoming="_etBXMM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYt82iEeiCta8rX3fxAA" target="_etBYus2iEeiCta8rX3fxAA" source="_etBYws2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBYuM2iEeiCta8rX3fxAA" target="_etBYuc2iEeiCta8rX3fxAA" source="_etBYwM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBYuc2iEeiCta8rX3fxAA" name="Call(WriteLine)" incoming="_etBYuM2iEeiCta8rX3fxAA">
              <argument xmi:id="_etBYus2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_etBYt82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYu82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYvM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etBYvc2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYvs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYv82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYwM2iEeiCta8rX3fxAA" name="Tuple@509dc16a" outgoing="_etBYuM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBYwc2iEeiCta8rX3fxAA" name="Value(&quot;&quot;)">
                <result xmi:id="_etBYws2iEeiCta8rX3fxAA" name="Value(&quot;&quot;).result" outgoing="_etBYt82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYw82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYxM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_etBYxc2iEeiCta8rX3fxAA" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYxs2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYx82iEeiCta8rX3fxAA" target="_etBYy82iEeiCta8rX3fxAA" source="_etBYyM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBYyM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBXMc2iEeiCta8rX3fxAA" outgoing="_etBYx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYyc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYys2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBYy82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBYx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBYzM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBYzc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBYzs2iEeiCta8rX3fxAA" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBYz82iEeiCta8rX3fxAA" target="_etBY082iEeiCta8rX3fxAA" source="_etBY0M2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBY0M2iEeiCta8rX3fxAA" name="Passthru(Fork(s)).input" incoming="_etBXMs2iEeiCta8rX3fxAA" outgoing="_etBYz82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY0c2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY0s2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBY082iEeiCta8rX3fxAA" name="Passthru(Fork(s)).output" incoming="_etBYz82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY1M2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY1c2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBY1s2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBY182iEeiCta8rX3fxAA" target="_etBY282iEeiCta8rX3fxAA" source="_etBY2M2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBY2M2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_etBXM82iEeiCta8rX3fxAA" outgoing="_etBY182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY2c2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY2s2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBY282iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_etBY182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY3M2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY3c2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBY3s2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBY382iEeiCta8rX3fxAA" target="_etBY482iEeiCta8rX3fxAA" source="_etBY4M2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBY4M2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_etBXNM2iEeiCta8rX3fxAA" outgoing="_etBY382iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY4c2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY4s2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBY482iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_etBY382iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY5M2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY5c2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBY5s2iEeiCta8rX3fxAA" name="Value(true)">
            <result xmi:id="_etBY582iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY6M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY6c2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_etBY6s2iEeiCta8rX3fxAA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBY682iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBY7M2iEeiCta8rX3fxAA" target="_etBY8M2iEeiCta8rX3fxAA" source="_etBY7c2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBY7c2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBXF82iEeiCta8rX3fxAA" outgoing="_etBY7M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY7s2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY782iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBY8M2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBY7M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY8c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY8s2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBY882iEeiCta8rX3fxAA" name="Value(null)">
            <result xmi:id="_etBY9M2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY9c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY9s2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_etBY982iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBY-M2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBY-c2iEeiCta8rX3fxAA" target="_etBY_c2iEeiCta8rX3fxAA" source="_etBY-s2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBY-s2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_etBXGM2iEeiCta8rX3fxAA" outgoing="_etBY-c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY-82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY_M2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBY_c2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_etBY-c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBY_s2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBY_82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZAM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZAc2iEeiCta8rX3fxAA" target="_etBZBc2iEeiCta8rX3fxAA" source="_etBZAs2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etBZAs2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_etBXGc2iEeiCta8rX3fxAA" outgoing="_etBZAc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZA82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZBM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etBZBc2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_etBZAc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZBs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZB82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_etBZCM2iEeiCta8rX3fxAA" body="_etBXgs2iEeiCta8rX3fxAA _etBXws2iEeiCta8rX3fxAA _etBX2s2iEeiCta8rX3fxAA _etBYts2iEeiCta8rX3fxAA _etBYxs2iEeiCta8rX3fxAA _etBYzs2iEeiCta8rX3fxAA _etBY1s2iEeiCta8rX3fxAA _etBY3s2iEeiCta8rX3fxAA" bodyOutput="_etBYy82iEeiCta8rX3fxAA _etBY082iEeiCta8rX3fxAA _etBY282iEeiCta8rX3fxAA _etBY482iEeiCta8rX3fxAA" decider="_etBXf82iEeiCta8rX3fxAA" successorClause="_etBZCc2iEeiCta8rX3fxAA" test="_etBXNc2iEeiCta8rX3fxAA"/>
          <clause xmi:id="_etBZCc2iEeiCta8rX3fxAA" body="_etBY682iEeiCta8rX3fxAA _etBY882iEeiCta8rX3fxAA _etBY-M2iEeiCta8rX3fxAA _etBZAM2iEeiCta8rX3fxAA" bodyOutput="_etBY8M2iEeiCta8rX3fxAA _etBY9M2iEeiCta8rX3fxAA _etBY_c2iEeiCta8rX3fxAA _etBZBc2iEeiCta8rX3fxAA" decider="_etBY582iEeiCta8rX3fxAA" predecessorClause="_etBZCM2iEeiCta8rX3fxAA" test="_etBY5s2iEeiCta8rX3fxAA"/>
          <result xmi:id="_etBZCs2iEeiCta8rX3fxAA" name="IfStatement@20126399.result(label)" outgoing="_etBXIc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZC82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZDM2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_etBZDc2iEeiCta8rX3fxAA" name="IfStatement@20126399.result(s)" outgoing="_etBXIs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZDs2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZD82iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_etBZEM2iEeiCta8rX3fxAA" name="IfStatement@20126399.result(value2)" outgoing="_etBXI82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZEc2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZEs2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_etBZE82iEeiCta8rX3fxAA" name="IfStatement@20126399.result(value1)" outgoing="_etBXJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZFM2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZFc2iEeiCta8rX3fxAA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_etBZFs2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etBXIc2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_etBZF82iEeiCta8rX3fxAA" name="Fork(s)" incoming="_etBXIs2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_etBZGM2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_etBXI82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_etBZGc2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_etBXJM2iEeiCta8rX3fxAA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBXGs2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_etBXCc2iEeiCta8rX3fxAA" parameter="_etBXAM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_etBXG82iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etBXCc2iEeiCta8rX3fxAA" outgoing="_etBXDs2iEeiCta8rX3fxAA _etBXEM2iEeiCta8rX3fxAA _etBXFM2iEeiCta8rX3fxAA _etBXF82iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBXHM2iEeiCta8rX3fxAA" name="Input(value1)" outgoing="_etBXCs2iEeiCta8rX3fxAA" parameter="_etBXA82iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_etBXHc2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_etBXCs2iEeiCta8rX3fxAA" outgoing="_etBXDM2iEeiCta8rX3fxAA _etBXEs2iEeiCta8rX3fxAA _etBXFs2iEeiCta8rX3fxAA _etBXGc2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBXHs2iEeiCta8rX3fxAA" name="Input(value2)" outgoing="_etBXC82iEeiCta8rX3fxAA" parameter="_etBXBs2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_etBXH82iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_etBXC82iEeiCta8rX3fxAA" outgoing="_etBXDc2iEeiCta8rX3fxAA _etBXD82iEeiCta8rX3fxAA _etBXEc2iEeiCta8rX3fxAA _etBXE82iEeiCta8rX3fxAA _etBXFc2iEeiCta8rX3fxAA _etBXGM2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_etBZGs2iEeiCta8rX3fxAA" name="AssertList" visibility="public" node="_etBZNM2iEeiCta8rX3fxAA _etBZNc2iEeiCta8rX3fxAA _etBZNs2iEeiCta8rX3fxAA _etBZN82iEeiCta8rX3fxAA _etBZOM2iEeiCta8rX3fxAA _etBZOc2iEeiCta8rX3fxAA _etBZOs2iEeiCta8rX3fxAA" group="_etBZOs2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_etBZG82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etBZHM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etBZHc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etBZHs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etBZH82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_etBZIM2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZIc2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZIs2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_etBZI82iEeiCta8rX3fxAA" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZJM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZJc2iEeiCta8rX3fxAA" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_etBZJs2iEeiCta8rX3fxAA" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZJ82iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZKM2iEeiCta8rX3fxAA" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZKc2iEeiCta8rX3fxAA" target="_etBZNc2iEeiCta8rX3fxAA" source="_etBZNM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZKs2iEeiCta8rX3fxAA" target="_etBZN82iEeiCta8rX3fxAA" source="_etBZNs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZK82iEeiCta8rX3fxAA" target="_etBZOc2iEeiCta8rX3fxAA" source="_etBZOM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZLM2iEeiCta8rX3fxAA" target="_etBZV82iEeiCta8rX3fxAA" source="_etBZNc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZLc2iEeiCta8rX3fxAA" target="_etBZcs2iEeiCta8rX3fxAA" source="_etBZN82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZLs2iEeiCta8rX3fxAA" target="_etBZfs2iEeiCta8rX3fxAA" source="_etBZOc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZL82iEeiCta8rX3fxAA" target="_etB9KM2iEeiCta8rX3fxAA" source="_etBZNc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZMM2iEeiCta8rX3fxAA" target="_etB9K82iEeiCta8rX3fxAA" source="_etBZN82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZMc2iEeiCta8rX3fxAA" target="_etB9Ls2iEeiCta8rX3fxAA" source="_etBZOc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZMs2iEeiCta8rX3fxAA" target="_etB9Yc2iEeiCta8rX3fxAA" source="_etBZN82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZM82iEeiCta8rX3fxAA" target="_etB9bc2iEeiCta8rX3fxAA" source="_etBZOc2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_etBZOs2iEeiCta8rX3fxAA" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_etBZO82iEeiCta8rX3fxAA" target="_etBZhM2iEeiCta8rX3fxAA" source="_etBZPM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZPM2iEeiCta8rX3fxAA" name="ExpressionStatement@699223c0" outgoing="_etBZO82iEeiCta8rX3fxAA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZPc2iEeiCta8rX3fxAA" target="_etBZQs2iEeiCta8rX3fxAA" source="_etBZX82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZPs2iEeiCta8rX3fxAA" target="_etBZRc2iEeiCta8rX3fxAA" source="_etBZbs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZP82iEeiCta8rX3fxAA" target="_etBZSM2iEeiCta8rX3fxAA" source="_etBZes2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etBZQM2iEeiCta8rX3fxAA" target="_etBZQc2iEeiCta8rX3fxAA" source="_etBZS82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZQc2iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_etBZQM2iEeiCta8rX3fxAA" behavior="_etBW-s2iEeiCta8rX3fxAA">
            <argument xmi:id="_etBZQs2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_etBZPc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZQ82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZRM2iEeiCta8rX3fxAA" value="1"/>
            </argument>
            <argument xmi:id="_etBZRc2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_etBZPs2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZRs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZR82iEeiCta8rX3fxAA" value="1"/>
            </argument>
            <argument xmi:id="_etBZSM2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_etBZP82iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZSc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZSs2iEeiCta8rX3fxAA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZS82iEeiCta8rX3fxAA" name="Tuple@1195b4c1" outgoing="_etBZQM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZTM2iEeiCta8rX3fxAA" target="_etBZY82iEeiCta8rX3fxAA" source="_etBZWs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZTc2iEeiCta8rX3fxAA" target="_etBZZs2iEeiCta8rX3fxAA" source="_etBZUc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBZTs2iEeiCta8rX3fxAA" target="_etBZXc2iEeiCta8rX3fxAA" source="_etBZVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBZT82iEeiCta8rX3fxAA" target="_etBZXc2iEeiCta8rX3fxAA" source="_etBZUM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBZUM2iEeiCta8rX3fxAA" name="Value(&quot;->size()&quot;)" outgoing="_etBZT82iEeiCta8rX3fxAA">
              <result xmi:id="_etBZUc2iEeiCta8rX3fxAA" name="Value(&quot;->size()&quot;).result" outgoing="_etBZTc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZUs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZU82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_etBZVM2iEeiCta8rX3fxAA" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZVc2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_etBZTs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZVs2iEeiCta8rX3fxAA" target="_etBZWs2iEeiCta8rX3fxAA" source="_etBZV82iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_etBZV82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBZLM2iEeiCta8rX3fxAA" outgoing="_etBZVs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZWM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZWc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_etBZWs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBZVs2iEeiCta8rX3fxAA" outgoing="_etBZTM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZW82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZXM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZXc2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBZTs2iEeiCta8rX3fxAA _etBZT82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZXs2iEeiCta8rX3fxAA" target="_etBZX82iEeiCta8rX3fxAA" source="_etBZac2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etBZX82iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBZXs2iEeiCta8rX3fxAA" outgoing="_etBZPc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZYM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZYc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZYs2iEeiCta8rX3fxAA" name="Call(Concat)">
                <argument xmi:id="_etBZY82iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBZTM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZZM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZZc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etBZZs2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBZTc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZZ82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZaM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etBZac2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBZXs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZas2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZa82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZbM2iEeiCta8rX3fxAA" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZbc2iEeiCta8rX3fxAA" target="_etBZbs2iEeiCta8rX3fxAA" source="_etBZdc2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etBZbs2iEeiCta8rX3fxAA" name="Output(Call(Size).result())" incoming="_etBZbc2iEeiCta8rX3fxAA" outgoing="_etBZPs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZb82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZcM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZcc2iEeiCta8rX3fxAA" name="Call(Size)">
                <argument xmi:id="_etBZcs2iEeiCta8rX3fxAA" name="Call(Size).argument(seq)" incoming="_etBZLc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZc82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZdM2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_etBZdc2iEeiCta8rX3fxAA" name="Call(Size).result()" outgoing="_etBZbc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZds2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZd82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZeM2iEeiCta8rX3fxAA" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZec2iEeiCta8rX3fxAA" target="_etBZes2iEeiCta8rX3fxAA" source="_etBZgc2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etBZes2iEeiCta8rX3fxAA" name="Output(Call(Size).result())" incoming="_etBZec2iEeiCta8rX3fxAA" outgoing="_etBZP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZe82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZfM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZfc2iEeiCta8rX3fxAA" name="Call(Size)">
                <argument xmi:id="_etBZfs2iEeiCta8rX3fxAA" name="Call(Size).argument(seq)" incoming="_etBZLs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZf82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZgM2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_etBZgc2iEeiCta8rX3fxAA" name="Call(Size).result()" outgoing="_etBZec2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZgs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZg82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZhM2iEeiCta8rX3fxAA" name="ForStatement@7fe8000" incoming="_etBZO82iEeiCta8rX3fxAA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZhc2iEeiCta8rX3fxAA" target="_etB9gs2iEeiCta8rX3fxAA" source="_etB9Vs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZhs2iEeiCta8rX3fxAA" target="_etB9NM2iEeiCta8rX3fxAA" source="_etB9nc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZh82iEeiCta8rX3fxAA" target="_etB9N82iEeiCta8rX3fxAA" source="_etB9mc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZiM2iEeiCta8rX3fxAA" target="_etB9Mc2iEeiCta8rX3fxAA" source="_etB9gs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etBZic2iEeiCta8rX3fxAA" target="_etBZis2iEeiCta8rX3fxAA" source="_etB9TM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:LoopNode" xmi:id="_etBZis2iEeiCta8rX3fxAA" name="Loop(ForStatement@7fe8000)" incoming="_etBZic2iEeiCta8rX3fxAA" bodyOutput="_etBZt82iEeiCta8rX3fxAA _etBZus2iEeiCta8rX3fxAA _etBZvc2iEeiCta8rX3fxAA _etB9Ds2iEeiCta8rX3fxAA _etBaXs2iEeiCta8rX3fxAA _etB9BM2iEeiCta8rX3fxAA" bodyPart="_etBZsc2iEeiCta8rX3fxAA _etBZss2iEeiCta8rX3fxAA _etB9B82iEeiCta8rX3fxAA _etB9Ec2iEeiCta8rX3fxAA" decider="_etBZrs2iEeiCta8rX3fxAA" isTestedFirst="true" test="_etBZp82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZi82iEeiCta8rX3fxAA" target="_etBZoc2iEeiCta8rX3fxAA" source="_etB9Fs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZjM2iEeiCta8rX3fxAA" target="_etBZos2iEeiCta8rX3fxAA" source="_etB9Gc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZjc2iEeiCta8rX3fxAA" target="_etBZo82iEeiCta8rX3fxAA" source="_etB9HM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZjs2iEeiCta8rX3fxAA" target="_etBZpM2iEeiCta8rX3fxAA" source="_etB9H82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZj82iEeiCta8rX3fxAA" target="_etBZpc2iEeiCta8rX3fxAA" source="_etB9Is2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZkM2iEeiCta8rX3fxAA" target="_etBZps2iEeiCta8rX3fxAA" source="_etB9Jc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZkc2iEeiCta8rX3fxAA" target="_etBZqM2iEeiCta8rX3fxAA" source="_etBZpc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZks2iEeiCta8rX3fxAA" target="_etBZq82iEeiCta8rX3fxAA" source="_etBZps2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etBZk82iEeiCta8rX3fxAA" target="_etBZss2iEeiCta8rX3fxAA" source="_etBZsc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZlM2iEeiCta8rX3fxAA" target="_etBaAM2iEeiCta8rX3fxAA" source="_etBZpM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZlc2iEeiCta8rX3fxAA" target="_etBaM82iEeiCta8rX3fxAA" source="_etBZpM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZls2iEeiCta8rX3fxAA" target="_etBaPs2iEeiCta8rX3fxAA" source="_etBZpM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZl82iEeiCta8rX3fxAA" target="_etB9CM2iEeiCta8rX3fxAA" source="_etBZpM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZmM2iEeiCta8rX3fxAA" target="_etB9C82iEeiCta8rX3fxAA" source="_etB9Es2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZmc2iEeiCta8rX3fxAA" target="_etBaWM2iEeiCta8rX3fxAA" source="_etBZpc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZms2iEeiCta8rX3fxAA" target="_etB9Ac2iEeiCta8rX3fxAA" source="_etBZps2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZm82iEeiCta8rX3fxAA" target="_etBZ5c2iEeiCta8rX3fxAA" source="_etBZoc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZnM2iEeiCta8rX3fxAA" target="_etBaKs2iEeiCta8rX3fxAA" source="_etBZos2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZnc2iEeiCta8rX3fxAA" target="_etBaNc2iEeiCta8rX3fxAA" source="_etBZo82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZns2iEeiCta8rX3fxAA" target="_etBaQc2iEeiCta8rX3fxAA" source="_etBZoc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZn82iEeiCta8rX3fxAA" target="_etBaSc2iEeiCta8rX3fxAA" source="_etBZos2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZoM2iEeiCta8rX3fxAA" target="_etBaUc2iEeiCta8rX3fxAA" source="_etBZo82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBZoc2iEeiCta8rX3fxAA" name="Fork(ForStatement@7fe8000.loopVariable(label))" incoming="_etBZi82iEeiCta8rX3fxAA" outgoing="_etBZm82iEeiCta8rX3fxAA _etBZns2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBZos2iEeiCta8rX3fxAA" name="Fork(ForStatement@7fe8000.loopVariable(list))" incoming="_etBZjM2iEeiCta8rX3fxAA" outgoing="_etBZnM2iEeiCta8rX3fxAA _etBZn82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBZo82iEeiCta8rX3fxAA" name="Fork(ForStatement@7fe8000.loopVariable(expected))" incoming="_etBZjc2iEeiCta8rX3fxAA" outgoing="_etBZnc2iEeiCta8rX3fxAA _etBZoM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBZpM2iEeiCta8rX3fxAA" name="Fork(ForStatement@7fe8000.loopVariable(i))" incoming="_etBZjs2iEeiCta8rX3fxAA" outgoing="_etBZlM2iEeiCta8rX3fxAA _etBZlc2iEeiCta8rX3fxAA _etBZls2iEeiCta8rX3fxAA _etBZl82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBZpc2iEeiCta8rX3fxAA" name="Fork(ForStatement@7fe8000.loopVariable(counter))" incoming="_etBZj82iEeiCta8rX3fxAA" outgoing="_etBZkc2iEeiCta8rX3fxAA _etBZmc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_etBZps2iEeiCta8rX3fxAA" name="Fork(ForStatement@7fe8000.loopVariable(upper))" incoming="_etBZkM2iEeiCta8rX3fxAA" outgoing="_etBZks2iEeiCta8rX3fxAA _etBZms2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZp82iEeiCta8rX3fxAA" name="Call(&lt;=)">
              <argument xmi:id="_etBZqM2iEeiCta8rX3fxAA" name="Call(&lt;=).argument(x)" incoming="_etBZkc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZqc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZqs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <argument xmi:id="_etBZq82iEeiCta8rX3fxAA" name="Call(&lt;=).argument(y)" incoming="_etBZks2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZrM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZrc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etBZrs2iEeiCta8rX3fxAA" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZr82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZsM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZsc2iEeiCta8rX3fxAA" name="Values(ForStatement@7fe8000)" outgoing="_etBZk82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZss2iEeiCta8rX3fxAA" name="Body(ForStatement@7fe8000)" incoming="_etBZk82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZs82iEeiCta8rX3fxAA" target="_etBZt82iEeiCta8rX3fxAA" source="_etBaRM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZtM2iEeiCta8rX3fxAA" target="_etBZus2iEeiCta8rX3fxAA" source="_etBaTM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZtc2iEeiCta8rX3fxAA" target="_etBZvc2iEeiCta8rX3fxAA" source="_etBaVM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZts2iEeiCta8rX3fxAA" target="_etBaW82iEeiCta8rX3fxAA" source="_etBaYs2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etBZt82iEeiCta8rX3fxAA" name="label" incoming="_etBZs82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZuM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZuc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_etBZus2iEeiCta8rX3fxAA" name="list" incoming="_etBZtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZu82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZvM2iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_etBZvc2iEeiCta8rX3fxAA" name="expected" incoming="_etBZtc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZvs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZv82iEeiCta8rX3fxAA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZwM2iEeiCta8rX3fxAA" name="ExpressionStatement@77c5023c">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZwc2iEeiCta8rX3fxAA" target="_etBZxs2iEeiCta8rX3fxAA" source="_etBaHM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZws2iEeiCta8rX3fxAA" target="_etBZyc2iEeiCta8rX3fxAA" source="_etBaMM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZw82iEeiCta8rX3fxAA" target="_etBZzM2iEeiCta8rX3fxAA" source="_etBaO82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_etBZxM2iEeiCta8rX3fxAA" target="_etBZxc2iEeiCta8rX3fxAA" source="_etBZz82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZxc2iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_etBZxM2iEeiCta8rX3fxAA" behavior="_etBW-s2iEeiCta8rX3fxAA">
                  <argument xmi:id="_etBZxs2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_etBZwc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZx82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZyM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_etBZyc2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_etBZws2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZys2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZy82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_etBZzM2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_etBZw82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZzc2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZzs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZz82iEeiCta8rX3fxAA" name="Tuple@7c29a6b5" outgoing="_etBZxM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ0M2iEeiCta8rX3fxAA" target="_etBZ8c2iEeiCta8rX3fxAA" source="_etBZ6M2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ0c2iEeiCta8rX3fxAA" target="_etBZ9M2iEeiCta8rX3fxAA" source="_etBZ382iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etBZ0s2iEeiCta8rX3fxAA" target="_etBZ682iEeiCta8rX3fxAA" source="_etBZ482iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etBZ082iEeiCta8rX3fxAA" target="_etBZ682iEeiCta8rX3fxAA" source="_etBZ3s2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ1M2iEeiCta8rX3fxAA" target="_etBaDM2iEeiCta8rX3fxAA" source="_etBZ7c2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ1c2iEeiCta8rX3fxAA" target="_etBaD82iEeiCta8rX3fxAA" source="_etBZ_M2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etBZ1s2iEeiCta8rX3fxAA" target="_etBaBs2iEeiCta8rX3fxAA" source="_etBZ682iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etBZ182iEeiCta8rX3fxAA" target="_etBaBs2iEeiCta8rX3fxAA" source="_etBZ-s2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ2M2iEeiCta8rX3fxAA" target="_etBaIM2iEeiCta8rX3fxAA" source="_etBaCM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ2c2iEeiCta8rX3fxAA" target="_etBaI82iEeiCta8rX3fxAA" source="_etBaFs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etBZ2s2iEeiCta8rX3fxAA" target="_etBaGs2iEeiCta8rX3fxAA" source="_etBaBs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_etBZ282iEeiCta8rX3fxAA" target="_etBaGs2iEeiCta8rX3fxAA" source="_etBaFc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ3M2iEeiCta8rX3fxAA" target="_etBaLc2iEeiCta8rX3fxAA" source="_etBaM82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ3c2iEeiCta8rX3fxAA" target="_etBaOM2iEeiCta8rX3fxAA" source="_etBaPs2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBZ3s2iEeiCta8rX3fxAA" name="Value(&quot;[&quot;)" outgoing="_etBZ082iEeiCta8rX3fxAA">
                    <result xmi:id="_etBZ382iEeiCta8rX3fxAA" name="Value(&quot;[&quot;).result" outgoing="_etBZ0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ4M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ4c2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_etBZ4s2iEeiCta8rX3fxAA" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZ482iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_etBZ0s2iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ5M2iEeiCta8rX3fxAA" target="_etBZ6M2iEeiCta8rX3fxAA" source="_etBZ5c2iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_etBZ5c2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBZm82iEeiCta8rX3fxAA" outgoing="_etBZ5M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ5s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ582iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_etBZ6M2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBZ5M2iEeiCta8rX3fxAA" outgoing="_etBZ0M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ6c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ6s2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZ682iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBZ0s2iEeiCta8rX3fxAA _etBZ082iEeiCta8rX3fxAA" outgoing="_etBZ1s2iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ7M2iEeiCta8rX3fxAA" target="_etBZ7c2iEeiCta8rX3fxAA" source="_etBZ982iEeiCta8rX3fxAA"/>
                    <structuredNodeOutput xmi:id="_etBZ7c2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBZ7M2iEeiCta8rX3fxAA" outgoing="_etBZ1M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ7s2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ782iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZ8M2iEeiCta8rX3fxAA" name="Call(Concat)">
                      <argument xmi:id="_etBZ8c2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBZ0M2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ8s2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ882iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <argument xmi:id="_etBZ9M2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBZ0c2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ9c2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ9s2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_etBZ982iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBZ7M2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ-M2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ-c2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBZ-s2iEeiCta8rX3fxAA" name="Node(Call(ToString))" outgoing="_etBZ182iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_etBZ-82iEeiCta8rX3fxAA" target="_etBZ_M2iEeiCta8rX3fxAA" source="_etBaA82iEeiCta8rX3fxAA"/>
                    <structuredNodeOutput xmi:id="_etBZ_M2iEeiCta8rX3fxAA" name="Output(Call(ToString).result(result))" incoming="_etBZ-82iEeiCta8rX3fxAA" outgoing="_etBZ1c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBZ_c2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBZ_s2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBZ_82iEeiCta8rX3fxAA" name="Call(ToString)">
                      <argument xmi:id="_etBaAM2iEeiCta8rX3fxAA" name="Call(ToString).argument(x)" incoming="_etBZlM2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaAc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaAs2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_etBaA82iEeiCta8rX3fxAA" name="Call(ToString).result(result)" outgoing="_etBZ-82iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaBM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaBc2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBaBs2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBZ1s2iEeiCta8rX3fxAA _etBZ182iEeiCta8rX3fxAA" outgoing="_etBZ2s2iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_etBaB82iEeiCta8rX3fxAA" target="_etBaCM2iEeiCta8rX3fxAA" source="_etBaEs2iEeiCta8rX3fxAA"/>
                    <structuredNodeOutput xmi:id="_etBaCM2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBaB82iEeiCta8rX3fxAA" outgoing="_etBZ2M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaCc2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaCs2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBaC82iEeiCta8rX3fxAA" name="Call(Concat)">
                      <argument xmi:id="_etBaDM2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBZ1M2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaDc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaDs2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <argument xmi:id="_etBaD82iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBZ1c2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaEM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaEc2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_etBaEs2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBaB82iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaE82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaFM2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBaFc2iEeiCta8rX3fxAA" name="Value(&quot;]&quot;)" outgoing="_etBZ282iEeiCta8rX3fxAA">
                    <result xmi:id="_etBaFs2iEeiCta8rX3fxAA" name="Value(&quot;]&quot;).result" outgoing="_etBZ2c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaF82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaGM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_etBaGc2iEeiCta8rX3fxAA" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBaGs2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etBZ2s2iEeiCta8rX3fxAA _etBZ282iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_etBaG82iEeiCta8rX3fxAA" target="_etBaHM2iEeiCta8rX3fxAA" source="_etBaJs2iEeiCta8rX3fxAA"/>
                    <structuredNodeOutput xmi:id="_etBaHM2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etBaG82iEeiCta8rX3fxAA" outgoing="_etBZwc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaHc2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaHs2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBaH82iEeiCta8rX3fxAA" name="Call(Concat)">
                      <argument xmi:id="_etBaIM2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etBZ2M2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaIc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaIs2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <argument xmi:id="_etBaI82iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etBZ2c2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaJM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaJc2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_etBaJs2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etBaG82iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaJ82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaKM2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBaKc2iEeiCta8rX3fxAA" name="Call(At)">
                    <argument xmi:id="_etBaKs2iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_etBZnM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaK82iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaLM2iEeiCta8rX3fxAA" value="*"/>
                    </argument>
                    <argument xmi:id="_etBaLc2iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_etBZ3M2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaLs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaL82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_etBaMM2iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_etBZws2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaMc2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaMs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_etBaM82iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_etBZlc2iEeiCta8rX3fxAA" outgoing="_etBZ3M2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBaNM2iEeiCta8rX3fxAA" name="Call(At)">
                    <argument xmi:id="_etBaNc2iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_etBZnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaNs2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaN82iEeiCta8rX3fxAA" value="*"/>
                    </argument>
                    <argument xmi:id="_etBaOM2iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_etBZ3c2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaOc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaOs2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_etBaO82iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_etBZw82iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaPM2iEeiCta8rX3fxAA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaPc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_etBaPs2iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_etBZls2iEeiCta8rX3fxAA" outgoing="_etBZ3c2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBaP82iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBaQM2iEeiCta8rX3fxAA" target="_etBaRM2iEeiCta8rX3fxAA" source="_etBaQc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etBaQc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etBZns2iEeiCta8rX3fxAA" outgoing="_etBaQM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaQs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaQ82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etBaRM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etBaQM2iEeiCta8rX3fxAA" outgoing="_etBZs82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaRc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaRs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBaR82iEeiCta8rX3fxAA" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBaSM2iEeiCta8rX3fxAA" target="_etBaTM2iEeiCta8rX3fxAA" source="_etBaSc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etBaSc2iEeiCta8rX3fxAA" name="Passthru(Fork(list)).input" incoming="_etBZn82iEeiCta8rX3fxAA" outgoing="_etBaSM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaSs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaS82iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etBaTM2iEeiCta8rX3fxAA" name="Passthru(Fork(list)).output" incoming="_etBaSM2iEeiCta8rX3fxAA" outgoing="_etBZtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaTc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaTs2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBaT82iEeiCta8rX3fxAA" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etBaUM2iEeiCta8rX3fxAA" target="_etBaVM2iEeiCta8rX3fxAA" source="_etBaUc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etBaUc2iEeiCta8rX3fxAA" name="Passthru(Fork(expected)).input" incoming="_etBZoM2iEeiCta8rX3fxAA" outgoing="_etBaUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaUs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaU82iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etBaVM2iEeiCta8rX3fxAA" name="Passthru(Fork(expected)).output" incoming="_etBaUM2iEeiCta8rX3fxAA" outgoing="_etBZtc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaVc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaVs2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etBaV82iEeiCta8rX3fxAA" name="Call(+)">
                <argument xmi:id="_etBaWM2iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_etBZmc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaWc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaWs2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etBaW82iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_etBZts2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaXM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaXc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etBaXs2iEeiCta8rX3fxAA" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaX82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaYM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etBaYc2iEeiCta8rX3fxAA" name="Value(1)">
                <result xmi:id="_etBaYs2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etBZts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etBaY82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etBaZM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_etBaZc2iEeiCta8rX3fxAA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etBaZs2iEeiCta8rX3fxAA" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9AM2iEeiCta8rX3fxAA" target="_etB9BM2iEeiCta8rX3fxAA" source="_etB9Ac2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etB9Ac2iEeiCta8rX3fxAA" name="Passthru(upper).input" incoming="_etBZms2iEeiCta8rX3fxAA" outgoing="_etB9AM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9As2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9A82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etB9BM2iEeiCta8rX3fxAA" name="Passthru(upper).output" incoming="_etB9AM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Bc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Bs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB9B82iEeiCta8rX3fxAA" name="Call(+)">
              <argument xmi:id="_etB9CM2iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_etBZl82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Cc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Cs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <argument xmi:id="_etB9C82iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_etBZmM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9DM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Dc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB9Ds2iEeiCta8rX3fxAA" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9D82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9EM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB9Ec2iEeiCta8rX3fxAA" name="Value(1)">
              <result xmi:id="_etB9Es2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etBZmM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9E82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9FM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etB9Fc2iEeiCta8rX3fxAA" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_etB9Fs2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariable(label)" outgoing="_etBZi82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9F82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9GM2iEeiCta8rX3fxAA" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_etB9Gc2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariable(list)" outgoing="_etBZjM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Gs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9G82iEeiCta8rX3fxAA" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_etB9HM2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariable(expected)" outgoing="_etBZjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Hc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Hs2iEeiCta8rX3fxAA" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_etB9H82iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariable(i)" outgoing="_etBZjs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9IM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Ic2iEeiCta8rX3fxAA" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_etB9Is2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariable(counter)" outgoing="_etBZj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9I82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9JM2iEeiCta8rX3fxAA" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_etB9Jc2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariable(upper)" outgoing="_etBZkM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Js2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9J82iEeiCta8rX3fxAA" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_etB9KM2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariableInput(label)" incoming="_etBZL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Kc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Ks2iEeiCta8rX3fxAA" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_etB9K82iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariableInput(list)" incoming="_etBZMM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9LM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Lc2iEeiCta8rX3fxAA" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_etB9Ls2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariableInput(expected)" incoming="_etBZMc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9L82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9MM2iEeiCta8rX3fxAA" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_etB9Mc2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariableInput(i)" incoming="_etBZiM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Ms2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9M82iEeiCta8rX3fxAA" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_etB9NM2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariableInput(counter)" incoming="_etBZhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Nc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Ns2iEeiCta8rX3fxAA" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_etB9N82iEeiCta8rX3fxAA" name="ForStatement@7fe8000.loopVariableInput(upper)" incoming="_etBZh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9OM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Oc2iEeiCta8rX3fxAA" value="1"/>
            </loopVariableInput>
            <result xmi:id="_etB9Os2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9O82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9PM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_etB9Pc2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Ps2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9P82iEeiCta8rX3fxAA" value="*"/>
            </result>
            <result xmi:id="_etB9QM2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Qc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Qs2iEeiCta8rX3fxAA" value="*"/>
            </result>
            <result xmi:id="_etB9Q82iEeiCta8rX3fxAA" name="ForStatement@7fe8000.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9RM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Rc2iEeiCta8rX3fxAA" value="*"/>
            </result>
            <result xmi:id="_etB9Rs2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9R82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9SM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_etB9Sc2iEeiCta8rX3fxAA" name="ForStatement@7fe8000.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Ss2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9S82iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9TM2iEeiCta8rX3fxAA" name="LoopVariables(ForStatement@7fe8000)" outgoing="_etBZic2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9Tc2iEeiCta8rX3fxAA" target="_etB9ec2iEeiCta8rX3fxAA" source="_etB9Xc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9Ts2iEeiCta8rX3fxAA" target="_etB9fM2iEeiCta8rX3fxAA" source="_etB9ac2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etB9T82iEeiCta8rX3fxAA" target="_etB9eM2iEeiCta8rX3fxAA" source="_etB9Ws2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etB9UM2iEeiCta8rX3fxAA" target="_etB9c82iEeiCta8rX3fxAA" source="_etB9Ws2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9Uc2iEeiCta8rX3fxAA" target="_etB9hM2iEeiCta8rX3fxAA" source="_etB9dc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9Us2iEeiCta8rX3fxAA" target="_etB9h82iEeiCta8rX3fxAA" source="_etB9gs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9U82iEeiCta8rX3fxAA" target="_etB9k82iEeiCta8rX3fxAA" source="_etB9is2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9VM2iEeiCta8rX3fxAA" target="_etB9ls2iEeiCta8rX3fxAA" source="_etB9js2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB9Vc2iEeiCta8rX3fxAA" name="Value(1)">
              <result xmi:id="_etB9Vs2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etBZhc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9V82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9WM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etB9Wc2iEeiCta8rX3fxAA" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9Ws2iEeiCta8rX3fxAA" name="Tuple@567b1b" outgoing="_etB9T82iEeiCta8rX3fxAA _etB9UM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9W82iEeiCta8rX3fxAA" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9XM2iEeiCta8rX3fxAA" target="_etB9Xc2iEeiCta8rX3fxAA" source="_etB9ZM2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etB9Xc2iEeiCta8rX3fxAA" name="Output(Call(Size).result())" incoming="_etB9XM2iEeiCta8rX3fxAA" outgoing="_etB9Tc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Xs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9X82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB9YM2iEeiCta8rX3fxAA" name="Call(Size)">
                  <argument xmi:id="_etB9Yc2iEeiCta8rX3fxAA" name="Call(Size).argument(seq)" incoming="_etBZMs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Ys2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Y82iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_etB9ZM2iEeiCta8rX3fxAA" name="Call(Size).result()" outgoing="_etB9XM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9Zc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9Zs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9Z82iEeiCta8rX3fxAA" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9aM2iEeiCta8rX3fxAA" target="_etB9ac2iEeiCta8rX3fxAA" source="_etB9cM2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etB9ac2iEeiCta8rX3fxAA" name="Output(Call(Size).result())" incoming="_etB9aM2iEeiCta8rX3fxAA" outgoing="_etB9Ts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9as2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9a82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB9bM2iEeiCta8rX3fxAA" name="Call(Size)">
                  <argument xmi:id="_etB9bc2iEeiCta8rX3fxAA" name="Call(Size).argument(seq)" incoming="_etBZM82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9bs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9b82iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_etB9cM2iEeiCta8rX3fxAA" name="Call(Size).result()" outgoing="_etB9aM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9cc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9cs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9c82iEeiCta8rX3fxAA" name="Node(Call(Min))" incoming="_etB9UM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9dM2iEeiCta8rX3fxAA" target="_etB9dc2iEeiCta8rX3fxAA" source="_etB9f82iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_etB9dc2iEeiCta8rX3fxAA" name="Output(Call(Min).result(result))" incoming="_etB9dM2iEeiCta8rX3fxAA" outgoing="_etB9Uc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9ds2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9d82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB9eM2iEeiCta8rX3fxAA" name="Call(Min)" incoming="_etB9T82iEeiCta8rX3fxAA">
                <argument xmi:id="_etB9ec2iEeiCta8rX3fxAA" name="Call(Min).argument(x)" incoming="_etB9Tc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9es2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9e82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_etB9fM2iEeiCta8rX3fxAA" name="Call(Min).argument(y)" incoming="_etB9Ts2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9fc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9fs2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_etB9f82iEeiCta8rX3fxAA" name="Call(Min).result(result)" outgoing="_etB9dM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9gM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9gc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etB9gs2iEeiCta8rX3fxAA" name="Fork(Value(1).result)" incoming="_etBZhc2iEeiCta8rX3fxAA" outgoing="_etBZiM2iEeiCta8rX3fxAA _etB9Us2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB9g82iEeiCta8rX3fxAA" name="Call(-)">
              <argument xmi:id="_etB9hM2iEeiCta8rX3fxAA" name="Call(-).argument(x)" incoming="_etB9Uc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9hc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9hs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <argument xmi:id="_etB9h82iEeiCta8rX3fxAA" name="Call(-).argument(y)" incoming="_etB9Us2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9iM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9ic2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB9is2iEeiCta8rX3fxAA" name="Call(-).result(result)" outgoing="_etB9U82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9i82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9jM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB9jc2iEeiCta8rX3fxAA" name="Value(1)">
              <result xmi:id="_etB9js2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etB9VM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9j82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9kM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etB9kc2iEeiCta8rX3fxAA" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB9ks2iEeiCta8rX3fxAA" name="Call(+)">
              <argument xmi:id="_etB9k82iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_etB9U82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9lM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9lc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <argument xmi:id="_etB9ls2iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_etB9VM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9l82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9mM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB9mc2iEeiCta8rX3fxAA" name="Call(+).result(result)" outgoing="_etBZh82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9ms2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9m82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB9nM2iEeiCta8rX3fxAA" name="Value(1)">
              <result xmi:id="_etB9nc2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etBZhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9ns2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9n82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_etB9oM2iEeiCta8rX3fxAA" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBZNM2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_etBZKc2iEeiCta8rX3fxAA" parameter="_etBZIM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_etBZNc2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etBZKc2iEeiCta8rX3fxAA" outgoing="_etBZLM2iEeiCta8rX3fxAA _etBZL82iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBZNs2iEeiCta8rX3fxAA" name="Input(list)" outgoing="_etBZKs2iEeiCta8rX3fxAA" parameter="_etBZI82iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_etBZN82iEeiCta8rX3fxAA" name="Fork(list)" incoming="_etBZKs2iEeiCta8rX3fxAA" outgoing="_etBZLc2iEeiCta8rX3fxAA _etBZMs2iEeiCta8rX3fxAA _etBZMM2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etBZOM2iEeiCta8rX3fxAA" name="Input(expected)" outgoing="_etBZK82iEeiCta8rX3fxAA" parameter="_etBZJs2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_etBZOc2iEeiCta8rX3fxAA" name="Fork(expected)" incoming="_etBZK82iEeiCta8rX3fxAA" outgoing="_etBZLs2iEeiCta8rX3fxAA _etBZM82iEeiCta8rX3fxAA _etBZMc2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_etB9oc2iEeiCta8rX3fxAA" name="AssertTrue" visibility="public" node="_etB9tc2iEeiCta8rX3fxAA _etB9ts2iEeiCta8rX3fxAA _etB9t82iEeiCta8rX3fxAA _etB9uM2iEeiCta8rX3fxAA _etB9uc2iEeiCta8rX3fxAA" group="_etB9uc2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_etB9os2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etB9o82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etB9pM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etB9pc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etB9ps2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_etB9p82iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9qM2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9qc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_etB9qs2iEeiCta8rX3fxAA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9q82iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9rM2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9rc2iEeiCta8rX3fxAA" target="_etB9ts2iEeiCta8rX3fxAA" source="_etB9tc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9rs2iEeiCta8rX3fxAA" target="_etB9uM2iEeiCta8rX3fxAA" source="_etB9t82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9r82iEeiCta8rX3fxAA" target="_etB9182iEeiCta8rX3fxAA" source="_etB9uM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9sM2iEeiCta8rX3fxAA" target="_etB9_82iEeiCta8rX3fxAA" source="_etB9ts2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9sc2iEeiCta8rX3fxAA" target="_etB-Fs2iEeiCta8rX3fxAA" source="_etB9uM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9ss2iEeiCta8rX3fxAA" target="_etB-Hs2iEeiCta8rX3fxAA" source="_etB9ts2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9s82iEeiCta8rX3fxAA" target="_etB-K82iEeiCta8rX3fxAA" source="_etB9uM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9tM2iEeiCta8rX3fxAA" target="_etB-M82iEeiCta8rX3fxAA" source="_etB9ts2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_etB9uc2iEeiCta8rX3fxAA" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9us2iEeiCta8rX3fxAA" target="_etB-Qc2iEeiCta8rX3fxAA" source="_etB-O82iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9u82iEeiCta8rX3fxAA" target="_etB-Qs2iEeiCta8rX3fxAA" source="_etB-Ps2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_etB9vM2iEeiCta8rX3fxAA" name="IfStatement@77e93be5">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9vc2iEeiCta8rX3fxAA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9vs2iEeiCta8rX3fxAA" target="_etB9zs2iEeiCta8rX3fxAA" source="_etB9182iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9v82iEeiCta8rX3fxAA" target="_etB92c2iEeiCta8rX3fxAA" source="_etB9182iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9wM2iEeiCta8rX3fxAA" target="_etB9382iEeiCta8rX3fxAA" source="_etB93M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9wc2iEeiCta8rX3fxAA" target="_etB94M2iEeiCta8rX3fxAA" source="_etB90c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9ws2iEeiCta8rX3fxAA" target="_etB94c2iEeiCta8rX3fxAA" source="_etB9382iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9w82iEeiCta8rX3fxAA" target="_etB94c2iEeiCta8rX3fxAA" source="_etB9382iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9xM2iEeiCta8rX3fxAA" target="_etB94M2iEeiCta8rX3fxAA" source="_etB94c2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_etB9xc2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9xs2iEeiCta8rX3fxAA" target="_etB91M2iEeiCta8rX3fxAA" source="_etB9yc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9x82iEeiCta8rX3fxAA" target="_etB9482iEeiCta8rX3fxAA" source="_etB94M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB9yM2iEeiCta8rX3fxAA" name="Value(true)">
              <result xmi:id="_etB9yc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_etB9xs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9ys2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9y82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_etB9zM2iEeiCta8rX3fxAA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_etB9zc2iEeiCta8rX3fxAA" name="Test(==)">
              <first xmi:id="_etB9zs2iEeiCta8rX3fxAA" name="Test(==).first" incoming="_etB9vs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9z82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB90M2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_etB90c2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_etB9wc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB90s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9082iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_etB91M2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_etB9xs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB91c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB91s2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etB9182iEeiCta8rX3fxAA" name="Fork(Fork(condition))" incoming="_etB9r82iEeiCta8rX3fxAA" outgoing="_etB9vs2iEeiCta8rX3fxAA _etB9v82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB92M2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_etB92c2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etB9v82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB92s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9282iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_etB93M2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etB9wM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB93c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB93s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etB9382iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_etB9wM2iEeiCta8rX3fxAA" outgoing="_etB9ws2iEeiCta8rX3fxAA _etB9w82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_etB94M2iEeiCta8rX3fxAA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_etB9wc2iEeiCta8rX3fxAA _etB9xM2iEeiCta8rX3fxAA" outgoing="_etB9x82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_etB94c2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_etB9ws2iEeiCta8rX3fxAA _etB9w82iEeiCta8rX3fxAA" outgoing="_etB9xM2iEeiCta8rX3fxAA" decisionInputFlow="_etB9w82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB94s2iEeiCta8rX3fxAA" name="Call(Not)">
              <argument xmi:id="_etB9482iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_etB9x82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB95M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB95c2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB95s2iEeiCta8rX3fxAA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9582iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB96M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB96c2iEeiCta8rX3fxAA" name="ExpressionStatement@5de9a7cc">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB96s2iEeiCta8rX3fxAA" target="_etB97c2iEeiCta8rX3fxAA" source="_etB-B82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etB9682iEeiCta8rX3fxAA" target="_etB97M2iEeiCta8rX3fxAA" source="_etB9882iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB97M2iEeiCta8rX3fxAA" name="Call(WriteLine)" incoming="_etB9682iEeiCta8rX3fxAA">
              <argument xmi:id="_etB97c2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_etB96s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB97s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9782iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB98M2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB98c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB98s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9882iEeiCta8rX3fxAA" name="Tuple@675a3ed0" outgoing="_etB9682iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB99M2iEeiCta8rX3fxAA" target="_etB-C82iEeiCta8rX3fxAA" source="_etB9-c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB99c2iEeiCta8rX3fxAA" target="_etB-Ds2iEeiCta8rX3fxAA" source="_etB-As2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etB99s2iEeiCta8rX3fxAA" target="_etB-Bc2iEeiCta8rX3fxAA" source="_etB9-M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etB9982iEeiCta8rX3fxAA" target="_etB-Bc2iEeiCta8rX3fxAA" source="_etB9_c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB9-M2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;)" outgoing="_etB99s2iEeiCta8rX3fxAA">
                <result xmi:id="_etB9-c2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;).result" outgoing="_etB99M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB9-s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB9-82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_etB9_M2iEeiCta8rX3fxAA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB9_c2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_etB9982iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB9_s2iEeiCta8rX3fxAA" target="_etB-As2iEeiCta8rX3fxAA" source="_etB9_82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_etB9_82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etB9sM2iEeiCta8rX3fxAA" outgoing="_etB9_s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-AM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Ac2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_etB-As2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etB9_s2iEeiCta8rX3fxAA" outgoing="_etB99c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-A82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-BM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-Bc2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_etB99s2iEeiCta8rX3fxAA _etB9982iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Bs2iEeiCta8rX3fxAA" target="_etB-B82iEeiCta8rX3fxAA" source="_etB-Ec2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etB-B82iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_etB-Bs2iEeiCta8rX3fxAA" outgoing="_etB96s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-CM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Cc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB-Cs2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_etB-C82iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_etB99M2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-DM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Dc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_etB-Ds2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_etB99c2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-D82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-EM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_etB-Ec2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_etB-Bs2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Es2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-E82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-FM2iEeiCta8rX3fxAA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Fc2iEeiCta8rX3fxAA" target="_etB-Gc2iEeiCta8rX3fxAA" source="_etB-Fs2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etB-Fs2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).input" incoming="_etB9sc2iEeiCta8rX3fxAA" outgoing="_etB-Fc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-F82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-GM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etB-Gc2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).output" incoming="_etB-Fc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Gs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-G82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-HM2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Hc2iEeiCta8rX3fxAA" target="_etB-Ic2iEeiCta8rX3fxAA" source="_etB-Hs2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etB-Hs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etB9ss2iEeiCta8rX3fxAA" outgoing="_etB-Hc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-H82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-IM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etB-Ic2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etB-Hc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Is2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-I82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB-JM2iEeiCta8rX3fxAA" name="Value(true)">
            <result xmi:id="_etB-Jc2iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Js2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-J82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_etB-KM2iEeiCta8rX3fxAA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-Kc2iEeiCta8rX3fxAA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Ks2iEeiCta8rX3fxAA" target="_etB-Ls2iEeiCta8rX3fxAA" source="_etB-K82iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etB-K82iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).input" incoming="_etB9s82iEeiCta8rX3fxAA" outgoing="_etB-Ks2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-LM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Lc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etB-Ls2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).output" incoming="_etB-Ks2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-L82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-MM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-Mc2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Ms2iEeiCta8rX3fxAA" target="_etB-Ns2iEeiCta8rX3fxAA" source="_etB-M82iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etB-M82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_etB9tM2iEeiCta8rX3fxAA" outgoing="_etB-Ms2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-NM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Nc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_etB-Ns2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_etB-Ms2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-N82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-OM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_etB-Oc2iEeiCta8rX3fxAA" body="_etB96c2iEeiCta8rX3fxAA _etB-FM2iEeiCta8rX3fxAA _etB-HM2iEeiCta8rX3fxAA" bodyOutput="_etB-Gc2iEeiCta8rX3fxAA _etB-Ic2iEeiCta8rX3fxAA" decider="_etB95s2iEeiCta8rX3fxAA" successorClause="_etB-Os2iEeiCta8rX3fxAA" test="_etB9vc2iEeiCta8rX3fxAA"/>
          <clause xmi:id="_etB-Os2iEeiCta8rX3fxAA" body="_etB-Kc2iEeiCta8rX3fxAA _etB-Mc2iEeiCta8rX3fxAA" bodyOutput="_etB-Ls2iEeiCta8rX3fxAA _etB-Ns2iEeiCta8rX3fxAA" decider="_etB-Jc2iEeiCta8rX3fxAA" predecessorClause="_etB-Oc2iEeiCta8rX3fxAA" test="_etB-JM2iEeiCta8rX3fxAA"/>
          <result xmi:id="_etB-O82iEeiCta8rX3fxAA" name="IfStatement@77e93be5.result(condition)" outgoing="_etB9us2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-PM2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Pc2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_etB-Ps2iEeiCta8rX3fxAA" name="IfStatement@77e93be5.result(label)" outgoing="_etB9u82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-P82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-QM2iEeiCta8rX3fxAA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_etB-Qc2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_etB9us2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_etB-Qs2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etB9u82iEeiCta8rX3fxAA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etB9tc2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_etB9rc2iEeiCta8rX3fxAA" parameter="_etB9p82iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_etB9ts2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_etB9rc2iEeiCta8rX3fxAA" outgoing="_etB9sM2iEeiCta8rX3fxAA _etB9ss2iEeiCta8rX3fxAA _etB9tM2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etB9t82iEeiCta8rX3fxAA" name="Input(condition)" outgoing="_etB9rs2iEeiCta8rX3fxAA" parameter="_etB9qs2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_etB9uM2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_etB9rs2iEeiCta8rX3fxAA" outgoing="_etB9r82iEeiCta8rX3fxAA _etB9sc2iEeiCta8rX3fxAA _etB9s82iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_etB-Q82iEeiCta8rX3fxAA" name="Write" visibility="public" node="_etB-Ts2iEeiCta8rX3fxAA _etB-T82iEeiCta8rX3fxAA _etB-UM2iEeiCta8rX3fxAA" group="_etB-UM2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_etB-RM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_etB-Rc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_etB-Rs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_etB-R82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_etB-SM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_etB-Sc2iEeiCta8rX3fxAA" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Ss2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-S82iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-TM2iEeiCta8rX3fxAA" target="_etB-T82iEeiCta8rX3fxAA" source="_etB-Ts2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Tc2iEeiCta8rX3fxAA" target="_etB-Wc2iEeiCta8rX3fxAA" source="_etB-T82iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_etB-UM2iEeiCta8rX3fxAA" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-Uc2iEeiCta8rX3fxAA" name="ExpressionStatement@6db64b7">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Us2iEeiCta8rX3fxAA" target="_etB-lM2iEeiCta8rX3fxAA" source="_etB-oc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_etB-U82iEeiCta8rX3fxAA" target="_etB-VM2iEeiCta8rX3fxAA" source="_etB-lc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_etB-VM2iEeiCta8rX3fxAA" name="Collect(Call(write))" incoming="_etB-U82iEeiCta8rX3fxAA" mode="parallel" inputElement="_etB-lM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Vc2iEeiCta8rX3fxAA" target="_etB-Xc2iEeiCta8rX3fxAA" source="_etB-k82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Vs2iEeiCta8rX3fxAA" target="_etB-c82iEeiCta8rX3fxAA" source="_etB-Wc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etB-V82iEeiCta8rX3fxAA" target="_etB-XM2iEeiCta8rX3fxAA" source="_etB-Zs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-WM2iEeiCta8rX3fxAA" target="_etB-Y82iEeiCta8rX3fxAA" source="_etB-lM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_etB-Wc2iEeiCta8rX3fxAA" name="Collect(Call(write)).input(Fork(value))" incoming="_etB-Tc2iEeiCta8rX3fxAA" outgoing="_etB-Vs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Ws2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-W82iEeiCta8rX3fxAA" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_etB-XM2iEeiCta8rX3fxAA" name="Call(write)" incoming="_etB-V82iEeiCta8rX3fxAA">
              <argument xmi:id="_etB-Xc2iEeiCta8rX3fxAA" name="Call(write).argument(value)" incoming="_etB-Vc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Xs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-X82iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB-YM2iEeiCta8rX3fxAA" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-Yc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Ys2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_etB-Y82iEeiCta8rX3fxAA" name="Call(write).target" incoming="_etB-WM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-ZM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-Zc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-Zs2iEeiCta8rX3fxAA" name="Tuple@45ce62b9" outgoing="_etB-V82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-Z82iEeiCta8rX3fxAA" target="_etB-e82iEeiCta8rX3fxAA" source="_etB-c82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etB-aM2iEeiCta8rX3fxAA" target="_etB-es2iEeiCta8rX3fxAA" source="_etB-cs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-ac2iEeiCta8rX3fxAA" target="_etB-hs2iEeiCta8rX3fxAA" source="_etB-c82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etB-as2iEeiCta8rX3fxAA" target="_etB-ks2iEeiCta8rX3fxAA" source="_etB-kc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-a82iEeiCta8rX3fxAA" target="_etB-ks2iEeiCta8rX3fxAA" source="_etB-fs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etB-bM2iEeiCta8rX3fxAA" target="_etB-gc2iEeiCta8rX3fxAA" source="_etB-ks2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_etB-bc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_etB-bs2iEeiCta8rX3fxAA" target="_etB-h82iEeiCta8rX3fxAA" source="_etB-ks2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_etB-b82iEeiCta8rX3fxAA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-cM2iEeiCta8rX3fxAA" target="_etB-k82iEeiCta8rX3fxAA" source="_etB-g82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-cc2iEeiCta8rX3fxAA" target="_etB-k82iEeiCta8rX3fxAA" source="_etB-ic2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-cs2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@4ce7bb84)" outgoing="_etB-aM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ForkNode" xmi:id="_etB-c82iEeiCta8rX3fxAA" name="Fork('')@5fe93bf" incoming="_etB-Vs2iEeiCta8rX3fxAA" outgoing="_etB-Z82iEeiCta8rX3fxAA _etB-ac2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-dM2iEeiCta8rX3fxAA" name="RightHandSide@7c91237c"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB-dc2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_etB-ds2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-d82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-eM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_etB-ec2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB-es2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_etB-aM2iEeiCta8rX3fxAA">
                <argument xmi:id="_etB-e82iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_etB-Z82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-fM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-fc2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_etB-fs2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_etB-a82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-f82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-gM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-gc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@68ec6a23.operand2" incoming="_etB-bM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-gs2iEeiCta8rX3fxAA" target="_etB-g82iEeiCta8rX3fxAA" source="_etB-hs2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etB-g82iEeiCta8rX3fxAA" name="NullCoalescingExpression@68ec6a23.operand2.result" incoming="_etB-gs2iEeiCta8rX3fxAA" outgoing="_etB-cM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-hM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-hc2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_etB-hs2iEeiCta8rX3fxAA" name="Merge(Fork('')@5fe93bf)" incoming="_etB-ac2iEeiCta8rX3fxAA" outgoing="_etB-gs2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-h82iEeiCta8rX3fxAA" name="NullCoalescingExpression@68ec6a23.operand3" incoming="_etB-bs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-iM2iEeiCta8rX3fxAA" target="_etB-ic2iEeiCta8rX3fxAA" source="_etB-jc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_etB-ic2iEeiCta8rX3fxAA" name="NullCoalescingExpression@68ec6a23.operand3.result" incoming="_etB-iM2iEeiCta8rX3fxAA" outgoing="_etB-cc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-is2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-i82iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB-jM2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;)">
                  <result xmi:id="_etB-jc2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;).result" outgoing="_etB-iM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-js2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-j82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_etB-kM2iEeiCta8rX3fxAA" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_etB-kc2iEeiCta8rX3fxAA" name="Initial(NullCoalescingExpression@68ec6a23)" outgoing="_etB-as2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_etB-ks2iEeiCta8rX3fxAA" name="Decision(NullCoalescingExpression@68ec6a23)" incoming="_etB-as2iEeiCta8rX3fxAA _etB-a82iEeiCta8rX3fxAA" outgoing="_etB-bM2iEeiCta8rX3fxAA _etB-bs2iEeiCta8rX3fxAA" decisionInputFlow="_etB-a82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_etB-k82iEeiCta8rX3fxAA" name="Merge(NullCoalescingExpression@68ec6a23.result)" incoming="_etB-cM2iEeiCta8rX3fxAA _etB-cc2iEeiCta8rX3fxAA" outgoing="_etB-Vc2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_etB-lM2iEeiCta8rX3fxAA" name="Collect(Call(write)).inputElement" incoming="_etB-Us2iEeiCta8rX3fxAA" outgoing="_etB-WM2iEeiCta8rX3fxAA" regionAsInput="_etB-VM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-lc2iEeiCta8rX3fxAA" name="Feature(Call(At).result())" outgoing="_etB-U82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-ls2iEeiCta8rX3fxAA" target="_etB-m82iEeiCta8rX3fxAA" source="_etB-ps2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-l82iEeiCta8rX3fxAA" target="_etB-rs2iEeiCta8rX3fxAA" source="_etB-qs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_etB-mM2iEeiCta8rX3fxAA" target="_etB-ms2iEeiCta8rX3fxAA" source="_etB-pM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_etB-mc2iEeiCta8rX3fxAA" target="_etB-ns2iEeiCta8rX3fxAA" source="_etB-rs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_etB-ms2iEeiCta8rX3fxAA" name="Call(At)" incoming="_etB-mM2iEeiCta8rX3fxAA">
              <argument xmi:id="_etB-m82iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_etB-ls2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-nM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-nc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <argument xmi:id="_etB-ns2iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_etB-mc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-n82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-oM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_etB-oc2iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_etB-Us2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-os2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-o82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_etB-pM2iEeiCta8rX3fxAA" name="Tuple@18dae87" outgoing="_etB-mM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_etB-pc2iEeiCta8rX3fxAA" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_etB-ps2iEeiCta8rX3fxAA" name="ReadExtent(StandardOutputChannel).result" outgoing="_etB-ls2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-p82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-qM2iEeiCta8rX3fxAA" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_etB-qc2iEeiCta8rX3fxAA" name="Value(1)">
                <result xmi:id="_etB-qs2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_etB-l82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etB-q82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_etB-rM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_etB-rc2iEeiCta8rX3fxAA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_etB-rs2iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_etB-l82iEeiCta8rX3fxAA" outgoing="_etB-mc2iEeiCta8rX3fxAA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_etB-Ts2iEeiCta8rX3fxAA" name="Input(value)" outgoing="_etB-TM2iEeiCta8rX3fxAA" parameter="_etB-Sc2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_etB-T82iEeiCta8rX3fxAA" name="Fork(value)" incoming="_etB-TM2iEeiCta8rX3fxAA" outgoing="_etB-Tc2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <profileApplication xmi:id="_etB-r82iEeiCta8rX3fxAA">
      <eAnnotations xmi:id="_etB-sM2iEeiCta8rX3fxAA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_etB-sc2iEeiCta8rX3fxAA" base_BehavioralFeature="_etAwcM2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_etB-ss2iEeiCta8rX3fxAA" base_BehavioralFeature="_etBWjs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_etB-s82iEeiCta8rX3fxAA" base_BehavioralFeature="_etBV9s2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_etB-tM2iEeiCta8rX3fxAA" base_BehavioralFeature="_etAwjs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_etCkEM2iEeiCta8rX3fxAA" base_BehavioralFeature="_etBWks2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_etCkEc2iEeiCta8rX3fxAA" base_BehavioralFeature="_etBV-M2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_etCkEs2iEeiCta8rX3fxAA" base_BehavioralFeature="_etAwdM2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_etCkE82iEeiCta8rX3fxAA" base_BehavioralFeature="_etAxRs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_etCkFM2iEeiCta8rX3fxAA" base_BehavioralFeature="_etAxTc2iEeiCta8rX3fxAA"/>
</xmi:XMI>

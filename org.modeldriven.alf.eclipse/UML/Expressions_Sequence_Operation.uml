<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_2aXfwHMaEeeoYuc64YE22w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_2aXfwXMaEeeoYuc64YE22w" name="Expressions_Sequence_Operation" visibility="public">
      <packageImport xmi:id="_2aXfwnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aXfw3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aXfxHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aXfxXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aXfxnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_2aXfx3MaEeeoYuc64YE22w" general="_2aYKxHMaEeeoYuc64YE22w"/>
      <ownedAttribute xmi:id="_2aXfyHMaEeeoYuc64YE22w" name="Expressions_Sequence_Operation$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXfyXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXfynMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aXfy3MaEeeoYuc64YE22w" name="Expressions_Sequence_Operation$method$1" specification="_2aYJ5XMaEeeoYuc64YE22w" node="_2aXf0HMaEeeoYuc64YE22w _2aXf0XMaEeeoYuc64YE22w" group="_2aXf0XMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aXfzHMaEeeoYuc64YE22w" name="" type="_2aXfwXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXfzXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXfznMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXfz3MaEeeoYuc64YE22w" target="_2aXf0HMaEeeoYuc64YE22w" source="_2aXf9XMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2aXf0XMaEeeoYuc64YE22w" name="Body(Expressions_Sequence_Operation$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf0nMaEeeoYuc64YE22w" target="_2aXf9XMaEeeoYuc64YE22w" source="_2aXf8nMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXf03MaEeeoYuc64YE22w" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXf1HMaEeeoYuc64YE22w" name="ExpressionStatement@7fa786f6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf1XMaEeeoYuc64YE22w" target="_2aXf6HMaEeeoYuc64YE22w" source="_2aXf2nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aXf1nMaEeeoYuc64YE22w" target="_2aXf53MaEeeoYuc64YE22w" source="_2aXf2HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf13MaEeeoYuc64YE22w" target="_2aXf7nMaEeeoYuc64YE22w" source="_2aXf33MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXf2HMaEeeoYuc64YE22w" name="Tuple@5f017d00" outgoing="_2aXf1nMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aXf2XMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_2aXf2nMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_2aXf1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf23MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf3HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2aXf3XMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2aXf3nMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2aXf33MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aXf13MaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf4HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf4XMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXf4nMaEeeoYuc64YE22w" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf43MaEeeoYuc64YE22w" target="_2aXf5HMaEeeoYuc64YE22w" source="_2aXf63MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aXf5HMaEeeoYuc64YE22w" name="Output(Call(run).result())" incoming="_2aXf43MaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf5XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf5nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2aXf53MaEeeoYuc64YE22w" name="Call(run)" incoming="_2aXf1nMaEeeoYuc64YE22w" operation="_2aYJ6XMaEeeoYuc64YE22w">
                  <argument xmi:id="_2aXf6HMaEeeoYuc64YE22w" name="Call(run).argument(tester)" incoming="_2aXf1XMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf6XMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf6nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aXf63MaEeeoYuc64YE22w" name="Call(run).result()" outgoing="_2aXf43MaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf7HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf7XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_2aXf7nMaEeeoYuc64YE22w" name="Call(run).target" incoming="_2aXf13MaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf73MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf8HMaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2aXf8XMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2aXf8nMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aXf0nMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf83MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf9HMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2aXf9XMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aXf0nMaEeeoYuc64YE22w" outgoing="_2aXfz3MaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aXf0HMaEeeoYuc64YE22w" name="Return" incoming="_2aXfz3MaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" parameter="_2aXfzHMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aXf9nMaEeeoYuc64YE22w" name="run$method$1" specification="_2aYJ6XMaEeeoYuc64YE22w" node="_2aXgAnMaEeeoYuc64YE22w _2aXgBXMaEeeoYuc64YE22w _2aXgA3MaEeeoYuc64YE22w _2aXgC3MaEeeoYuc64YE22w _2aXgBHMaEeeoYuc64YE22w" group="_2aXgBXMaEeeoYuc64YE22w _2aXgC3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aXf93MaEeeoYuc64YE22w" name="tester" type="_2aYuEnMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf-HMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf-XMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aXf-nMaEeeoYuc64YE22w" name="" type="_2aXfwXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXf-3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXf_HMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf_XMaEeeoYuc64YE22w" target="_2aXgB3MaEeeoYuc64YE22w" source="_2aXgAnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf_nMaEeeoYuc64YE22w" target="_2aXgA3MaEeeoYuc64YE22w" source="_2aYHZHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXf_3MaEeeoYuc64YE22w" target="_2aYHbXMaEeeoYuc64YE22w" source="_2aXgCnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgAHMaEeeoYuc64YE22w" target="_2aXgBHMaEeeoYuc64YE22w" source="_2aXgBXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgAXMaEeeoYuc64YE22w" target="_2aXgC3MaEeeoYuc64YE22w" source="_2aXgBHMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2aXgBXMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_2aXgAHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgBnMaEeeoYuc64YE22w" target="_2aXgCnMaEeeoYuc64YE22w" source="_2aXgB3MaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_2aXgB3MaEeeoYuc64YE22w" name="Input(tester)" incoming="_2aXf_XMaEeeoYuc64YE22w" outgoing="_2aXgBnMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgCHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgCXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_2aXgCnMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_2aXgBnMaEeeoYuc64YE22w" outgoing="_2aXf_3MaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_2aXgC3MaEeeoYuc64YE22w" name="Body(run$method$1)" incoming="_2aXgAXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgDHMaEeeoYuc64YE22w" target="_2aYHZHMaEeeoYuc64YE22w" source="_2aYHYXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgDXMaEeeoYuc64YE22w" target="_2aYHdHMaEeeoYuc64YE22w" source="_2aYHZHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgDnMaEeeoYuc64YE22w" target="_2aXgGHMaEeeoYuc64YE22w" source="_2aYHc3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgD3MaEeeoYuc64YE22w" target="_2aYHc3MaEeeoYuc64YE22w" source="_2aYHZXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgEHMaEeeoYuc64YE22w" target="_2aYHeHMaEeeoYuc64YE22w" source="_2aYHZHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgEXMaEeeoYuc64YE22w" target="_2aYHf3MaEeeoYuc64YE22w" source="_2aYHe3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgEnMaEeeoYuc64YE22w" target="_2aYHi3MaEeeoYuc64YE22w" source="_2aYHgnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgE3MaEeeoYuc64YE22w" target="_2aYHkXMaEeeoYuc64YE22w" source="_2aYHhnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgFHMaEeeoYuc64YE22w" target="_2aYHlXMaEeeoYuc64YE22w" source="_2aYHlHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgFXMaEeeoYuc64YE22w" target="_2aYHlXMaEeeoYuc64YE22w" source="_2aYHjnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgFnMaEeeoYuc64YE22w" target="_2aYHZXMaEeeoYuc64YE22w" source="_2aYHlXMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aXgF3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXgGHMaEeeoYuc64YE22w" name="Body" incoming="_2aXgDnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgGXMaEeeoYuc64YE22w" target="_2aXgVXMaEeeoYuc64YE22w" source="_2aXgSHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgGnMaEeeoYuc64YE22w" target="_2aXgTnMaEeeoYuc64YE22w" source="_2aXgJnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgG3MaEeeoYuc64YE22w" target="_2aXgZXMaEeeoYuc64YE22w" source="_2aXgSXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgHHMaEeeoYuc64YE22w" target="_2aXgXnMaEeeoYuc64YE22w" source="_2aXgTnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgHXMaEeeoYuc64YE22w" target="_2aYG3XMaEeeoYuc64YE22w" source="_2aXgSnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgHnMaEeeoYuc64YE22w" target="_2aYG1XMaEeeoYuc64YE22w" source="_2aXgXnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgH3MaEeeoYuc64YE22w" target="_2aYG9nMaEeeoYuc64YE22w" source="_2aXgS3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgIHMaEeeoYuc64YE22w" target="_2aYG7nMaEeeoYuc64YE22w" source="_2aYG1XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgIXMaEeeoYuc64YE22w" target="_2aYHHXMaEeeoYuc64YE22w" source="_2aXgTHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgInMaEeeoYuc64YE22w" target="_2aYHB3MaEeeoYuc64YE22w" source="_2aYG7nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgI3MaEeeoYuc64YE22w" target="_2aYHN3MaEeeoYuc64YE22w" source="_2aXgTXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgJHMaEeeoYuc64YE22w" target="_2aYHL3MaEeeoYuc64YE22w" source="_2aYHB3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgJXMaEeeoYuc64YE22w" target="_2aYHVnMaEeeoYuc64YE22w" source="_2aYHL3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXgJnMaEeeoYuc64YE22w" name="ExpressionStatement@7af89ecf" outgoing="_2aXgGnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgJ3MaEeeoYuc64YE22w" target="_2aXgSHMaEeeoYuc64YE22w" source="_2aXgL3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgKHMaEeeoYuc64YE22w" target="_2aXgSXMaEeeoYuc64YE22w" source="_2aXgMnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgKXMaEeeoYuc64YE22w" target="_2aXgSnMaEeeoYuc64YE22w" source="_2aXgNXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgKnMaEeeoYuc64YE22w" target="_2aXgS3MaEeeoYuc64YE22w" source="_2aXgOHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgK3MaEeeoYuc64YE22w" target="_2aXgTHMaEeeoYuc64YE22w" source="_2aXgO3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgLHMaEeeoYuc64YE22w" target="_2aXgTXMaEeeoYuc64YE22w" source="_2aXgPnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgLXMaEeeoYuc64YE22w" target="_2aXgQXMaEeeoYuc64YE22w" source="_2aXgRXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2aXgLnMaEeeoYuc64YE22w" name="Call(test)" operation="_2aYJ8HMaEeeoYuc64YE22w">
                <result xmi:id="_2aXgL3MaEeeoYuc64YE22w" name="Call(test).result(notEmpty)" outgoing="_2aXgJ3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgMHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgMXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2aXgMnMaEeeoYuc64YE22w" name="Call(test).result(includes)" outgoing="_2aXgKHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgM3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgNHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2aXgNXMaEeeoYuc64YE22w" name="Call(test).result(m)" outgoing="_2aXgKXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgNnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgN3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2aXgOHMaEeeoYuc64YE22w" name="Call(test).result(n)" outgoing="_2aXgKnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgOXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgOnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2aXgO3MaEeeoYuc64YE22w" name="Call(test).result(customers)" outgoing="_2aXgK3MaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgPHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgPXMaEeeoYuc64YE22w" value="*"/>
                </result>
                <result xmi:id="_2aXgPnMaEeeoYuc64YE22w" name="Call(test).result(list)" outgoing="_2aXgLHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgP3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgQHMaEeeoYuc64YE22w" value="*"/>
                </result>
                <target xmi:id="_2aXgQXMaEeeoYuc64YE22w" name="Call(test).target" incoming="_2aXgLXMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgQnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgQ3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2aXgRHMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2aXgRXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aXgLXMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgRnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgR3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2aXgSHMaEeeoYuc64YE22w" name="Fork(notEmpty)@1bf5cf8b" incoming="_2aXgJ3MaEeeoYuc64YE22w" outgoing="_2aXgGXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2aXgSXMaEeeoYuc64YE22w" name="Fork(includes)@ff74036" incoming="_2aXgKHMaEeeoYuc64YE22w" outgoing="_2aXgG3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2aXgSnMaEeeoYuc64YE22w" name="Fork(m)@70d70eed" incoming="_2aXgKXMaEeeoYuc64YE22w" outgoing="_2aXgHXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2aXgS3MaEeeoYuc64YE22w" name="Fork(n)@456b0eeb" incoming="_2aXgKnMaEeeoYuc64YE22w" outgoing="_2aXgH3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2aXgTHMaEeeoYuc64YE22w" name="Fork(customers)@390549f" incoming="_2aXgK3MaEeeoYuc64YE22w" outgoing="_2aXgIXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2aXgTXMaEeeoYuc64YE22w" name="Fork(list)@36d3522b" incoming="_2aXgLHMaEeeoYuc64YE22w" outgoing="_2aXgI3MaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXgTnMaEeeoYuc64YE22w" name="ExpressionStatement@2217b01c" incoming="_2aXgGnMaEeeoYuc64YE22w" outgoing="_2aXgHHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgT3MaEeeoYuc64YE22w" target="_2aXgUnMaEeeoYuc64YE22w" source="_2aXgWnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgUHMaEeeoYuc64YE22w" target="_2aXgUXMaEeeoYuc64YE22w" source="_2aXgWHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aXgUXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_2aXgUHMaEeeoYuc64YE22w" behavior="_2aYunXMaEeeoYuc64YE22w">
                <argument xmi:id="_2aXgUnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_2aXgT3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgU3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgVHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aXgVXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_2aXgGXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgVnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgV3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXgWHMaEeeoYuc64YE22w" name="Tuple@5d27a6ba" outgoing="_2aXgUHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aXgWXMaEeeoYuc64YE22w" name="Value(&quot;notEmpty&quot;)">
                  <result xmi:id="_2aXgWnMaEeeoYuc64YE22w" name="Value(&quot;notEmpty&quot;).result" outgoing="_2aXgT3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgW3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgXHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aXgXXMaEeeoYuc64YE22w" value="notEmpty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXgXnMaEeeoYuc64YE22w" name="ExpressionStatement@1189b5f2" incoming="_2aXgHHMaEeeoYuc64YE22w" outgoing="_2aXgHnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aXgX3MaEeeoYuc64YE22w" target="_2aXgYnMaEeeoYuc64YE22w" source="_2aYG0XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aXgYHMaEeeoYuc64YE22w" target="_2aXgYXMaEeeoYuc64YE22w" source="_2aXgaHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aXgYXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_2aXgYHMaEeeoYuc64YE22w" behavior="_2aYunXMaEeeoYuc64YE22w">
                <argument xmi:id="_2aXgYnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_2aXgX3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgY3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgZHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aXgZXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_2aXgG3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aXgZnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aXgZ3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aXgaHMaEeeoYuc64YE22w" name="Tuple@6542a2ff" outgoing="_2aXgYHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYG0HMaEeeoYuc64YE22w" name="Value(&quot;includes&quot;)">
                  <result xmi:id="_2aYG0XMaEeeoYuc64YE22w" name="Value(&quot;includes&quot;).result" outgoing="_2aXgX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG0nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG03MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYG1HMaEeeoYuc64YE22w" value="includes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYG1XMaEeeoYuc64YE22w" name="ExpressionStatement@48369cd2" incoming="_2aXgHnMaEeeoYuc64YE22w" outgoing="_2aXgIHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYG1nMaEeeoYuc64YE22w" target="_2aYG2nMaEeeoYuc64YE22w" source="_2aYG5XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYG13MaEeeoYuc64YE22w" target="_2aYG4HMaEeeoYuc64YE22w" source="_2aYG6nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYG2HMaEeeoYuc64YE22w" target="_2aYG2XMaEeeoYuc64YE22w" source="_2aYG43MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYG2XMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2aYG2HMaEeeoYuc64YE22w" behavior="_2aYvBXMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYG2nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2aYG1nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG23MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG3HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYG3XMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2aXgHXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG3nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG33MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYG4HMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2aYG13MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG4XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG4nMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYG43MaEeeoYuc64YE22w" name="Tuple@4b22cadc" outgoing="_2aYG2HMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYG5HMaEeeoYuc64YE22w" name="Value(&quot;m&quot;)">
                  <result xmi:id="_2aYG5XMaEeeoYuc64YE22w" name="Value(&quot;m&quot;).result" outgoing="_2aYG1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG5nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG53MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYG6HMaEeeoYuc64YE22w" value="m">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYG6XMaEeeoYuc64YE22w" name="Value(3)">
                  <result xmi:id="_2aYG6nMaEeeoYuc64YE22w" name="Value(3).result" outgoing="_2aYG13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG63MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG7HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2aYG7XMaEeeoYuc64YE22w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYG7nMaEeeoYuc64YE22w" name="ExpressionStatement@340c727" incoming="_2aXgIHMaEeeoYuc64YE22w" outgoing="_2aXgInMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYG73MaEeeoYuc64YE22w" target="_2aYG83MaEeeoYuc64YE22w" source="_2aYG_nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYG8HMaEeeoYuc64YE22w" target="_2aYG-XMaEeeoYuc64YE22w" source="_2aYHA3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYG8XMaEeeoYuc64YE22w" target="_2aYG8nMaEeeoYuc64YE22w" source="_2aYG_HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYG8nMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2aYG8XMaEeeoYuc64YE22w" behavior="_2aYvBXMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYG83MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2aYG73MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG9HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG9XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYG9nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2aXgH3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG93MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG-HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYG-XMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2aYG8HMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG-nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYG-3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYG_HMaEeeoYuc64YE22w" name="Tuple@7ea7f98a" outgoing="_2aYG8XMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYG_XMaEeeoYuc64YE22w" name="Value(&quot;n&quot;)">
                  <result xmi:id="_2aYG_nMaEeeoYuc64YE22w" name="Value(&quot;n&quot;).result" outgoing="_2aYG73MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYG_3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHAHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYHAXMaEeeoYuc64YE22w" value="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHAnMaEeeoYuc64YE22w" name="Value(3)">
                  <result xmi:id="_2aYHA3MaEeeoYuc64YE22w" name="Value(3).result" outgoing="_2aYG8HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHBHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHBXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2aYHBnMaEeeoYuc64YE22w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHB3MaEeeoYuc64YE22w" name="ExpressionStatement@515265c4" incoming="_2aXgInMaEeeoYuc64YE22w" outgoing="_2aXgJHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHCHMaEeeoYuc64YE22w" target="_2aYHDXMaEeeoYuc64YE22w" source="_2aYHGXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHCXMaEeeoYuc64YE22w" target="_2aYHEHMaEeeoYuc64YE22w" source="_2aYHKXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHCnMaEeeoYuc64YE22w" target="_2aYHE3MaEeeoYuc64YE22w" source="_2aYHK3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHC3MaEeeoYuc64YE22w" target="_2aYHDHMaEeeoYuc64YE22w" source="_2aYHFnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYHDHMaEeeoYuc64YE22w" name="Call(AssertList)" incoming="_2aYHC3MaEeeoYuc64YE22w" behavior="_2aYxH3MaEeeoYuc64YE22w">
                <argument xmi:id="_2aYHDXMaEeeoYuc64YE22w" name="Call(AssertList).argument(label)" incoming="_2aYHCHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHDnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHD3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYHEHMaEeeoYuc64YE22w" name="Call(AssertList).argument(list)" incoming="_2aYHCXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHEXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHEnMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYHE3MaEeeoYuc64YE22w" name="Call(AssertList).argument(expected)" incoming="_2aYHCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHFHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHFXMaEeeoYuc64YE22w" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHFnMaEeeoYuc64YE22w" name="Tuple@5c2a75e8" outgoing="_2aYHC3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHF3MaEeeoYuc64YE22w" target="_2aYHKHMaEeeoYuc64YE22w" source="_2aYHHXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHGHMaEeeoYuc64YE22w" name="Value(&quot;customers.name&quot;)">
                  <result xmi:id="_2aYHGXMaEeeoYuc64YE22w" name="Value(&quot;customers.name&quot;).result" outgoing="_2aYHCHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHGnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHG3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYHHHMaEeeoYuc64YE22w" value="customers.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2aYHHXMaEeeoYuc64YE22w" name="Fork(Fork(customers)@390549f)" incoming="_2aXgIXMaEeeoYuc64YE22w" outgoing="_2aYHF3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2aYHHnMaEeeoYuc64YE22w" name="Collect(Read(name))" mode="parallel" outputElement="_2aYHKXMaEeeoYuc64YE22w" inputElement="_2aYHKHMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHH3MaEeeoYuc64YE22w" target="_2aYHInMaEeeoYuc64YE22w" source="_2aYHKHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHIHMaEeeoYuc64YE22w" target="_2aYHKXMaEeeoYuc64YE22w" source="_2aYHJXMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYHIXMaEeeoYuc64YE22w" name="Read(name)" structuralFeature="_2aYKCHMaEeeoYuc64YE22w">
                    <object xmi:id="_2aYHInMaEeeoYuc64YE22w" name="Read(name).object" incoming="_2aYHH3MaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHI3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHJHMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2aYHJXMaEeeoYuc64YE22w" name="Read(name).result" outgoing="_2aYHIHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHJnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHJ3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2aYHKHMaEeeoYuc64YE22w" name="Collect(Read(name)).inputElement" incoming="_2aYHF3MaEeeoYuc64YE22w" outgoing="_2aYHH3MaEeeoYuc64YE22w" regionAsInput="_2aYHHnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2aYHKXMaEeeoYuc64YE22w" name="Collect(Read(name)).outputElement" incoming="_2aYHIHMaEeeoYuc64YE22w" outgoing="_2aYHCXMaEeeoYuc64YE22w" regionAsOutput="_2aYHHnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHKnMaEeeoYuc64YE22w" name="Value(&quot;C&quot;)">
                  <result xmi:id="_2aYHK3MaEeeoYuc64YE22w" name="Value(&quot;C&quot;).result" outgoing="_2aYHCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHLHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHLXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYHLnMaEeeoYuc64YE22w" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHL3MaEeeoYuc64YE22w" name="ExpressionStatement@296fe21c" incoming="_2aXgJHMaEeeoYuc64YE22w" outgoing="_2aXgJXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHMHMaEeeoYuc64YE22w" target="_2aYHNHMaEeeoYuc64YE22w" source="_2aYHP3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHMXMaEeeoYuc64YE22w" target="_2aYHOnMaEeeoYuc64YE22w" source="_2aYHR3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHMnMaEeeoYuc64YE22w" target="_2aYHM3MaEeeoYuc64YE22w" source="_2aYHPXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYHM3MaEeeoYuc64YE22w" name="Call(AssertList)" incoming="_2aYHMnMaEeeoYuc64YE22w" behavior="_2aYxH3MaEeeoYuc64YE22w">
                <argument xmi:id="_2aYHNHMaEeeoYuc64YE22w" name="Call(AssertList).argument(label)" incoming="_2aYHMHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHNXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHNnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYHN3MaEeeoYuc64YE22w" name="Call(AssertList).argument(list)" incoming="_2aXgI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHOHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHOXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYHOnMaEeeoYuc64YE22w" name="Call(AssertList).argument(expected)" incoming="_2aYHMXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHO3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHPHMaEeeoYuc64YE22w" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHPXMaEeeoYuc64YE22w" name="Tuple@2adbcea7" outgoing="_2aYHMnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHPnMaEeeoYuc64YE22w" name="Value(&quot;list&quot;)">
                  <result xmi:id="_2aYHP3MaEeeoYuc64YE22w" name="Value(&quot;list&quot;).result" outgoing="_2aYHMHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHQHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHQXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYHQnMaEeeoYuc64YE22w" value="list">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHQ3MaEeeoYuc64YE22w" name="SequenceConstructionExpression@7632a7a">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHRHMaEeeoYuc64YE22w" target="_2aYHUHMaEeeoYuc64YE22w" source="_2aYHSnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHRXMaEeeoYuc64YE22w" target="_2aYHR3MaEeeoYuc64YE22w" source="_2aYHTHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHRnMaEeeoYuc64YE22w" target="_2aYHR3MaEeeoYuc64YE22w" source="_2aYHUnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2aYHR3MaEeeoYuc64YE22w" name="SequenceConstructionExpression@7632a7a.output" incoming="_2aYHRXMaEeeoYuc64YE22w _2aYHRnMaEeeoYuc64YE22w" outgoing="_2aYHMXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHSHMaEeeoYuc64YE22w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHSXMaEeeoYuc64YE22w" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHSnMaEeeoYuc64YE22w" name="SequenceExpressionList@1ff4708b#1" outgoing="_2aYHRHMaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHS3MaEeeoYuc64YE22w" name="Value(&quot;Blah&quot;)">
                      <result xmi:id="_2aYHTHMaEeeoYuc64YE22w" name="Value(&quot;Blah&quot;).result" outgoing="_2aYHRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHTXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHTnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_2aYHT3MaEeeoYuc64YE22w" value="Blah">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHUHMaEeeoYuc64YE22w" name="SequenceExpressionList@1ff4708b#2" incoming="_2aYHRHMaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHUXMaEeeoYuc64YE22w" name="Value(1)">
                      <result xmi:id="_2aYHUnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYHRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHU3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHVHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_2aYHVXMaEeeoYuc64YE22w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHVnMaEeeoYuc64YE22w" name="ExpressionStatement@d398257" incoming="_2aXgJXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHV3MaEeeoYuc64YE22w" target="_2aYHWXMaEeeoYuc64YE22w" source="_2aYHXXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2aYHWHMaEeeoYuc64YE22w" name="Call(done)" operation="_2aYuCnMaEeeoYuc64YE22w">
                <target xmi:id="_2aYHWXMaEeeoYuc64YE22w" name="Call(done).target" incoming="_2aYHV3MaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHWnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHW3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYHXHMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2aYHXXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYHV3MaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHXnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHX3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYHYHMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2aYHYXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aXgDHMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHYnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHY3MaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYHZHMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aXgDHMaEeeoYuc64YE22w" outgoing="_2aXf_nMaEeeoYuc64YE22w _2aXgDXMaEeeoYuc64YE22w _2aXgEHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHZXMaEeeoYuc64YE22w" name="Super" incoming="_2aXgFnMaEeeoYuc64YE22w" outgoing="_2aXgD3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHZnMaEeeoYuc64YE22w" name="ExpressionStatement@19221d01">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYHZ3MaEeeoYuc64YE22w" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHaHMaEeeoYuc64YE22w" target="_2aYHaXMaEeeoYuc64YE22w" source="_2aYHcHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYHaXMaEeeoYuc64YE22w" name="Output(Call(Test$method$1).result())" incoming="_2aYHaHMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHanMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHa3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYHbHMaEeeoYuc64YE22w" name="Call(Test$method$1)" behavior="_2aYK_nMaEeeoYuc64YE22w">
                  <argument xmi:id="_2aYHbXMaEeeoYuc64YE22w" name="Call(Test$method$1).argument(tester)" incoming="_2aXf_3MaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHbnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHb3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aYHcHMaEeeoYuc64YE22w" name="Call(Test$method$1).result()" outgoing="_2aYHaHMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHcXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHcnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2aYHc3MaEeeoYuc64YE22w" name="Call(Expressions_Sequence_Operation$initialization$1)" incoming="_2aXgD3MaEeeoYuc64YE22w" outgoing="_2aXgDnMaEeeoYuc64YE22w" operation="_2aYJ5HMaEeeoYuc64YE22w">
            <target xmi:id="_2aYHdHMaEeeoYuc64YE22w" name="Call(Expressions_Sequence_Operation$initialization$1).target" incoming="_2aXgDXMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHdXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHdnMaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYHd3MaEeeoYuc64YE22w" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_2aXfyHMaEeeoYuc64YE22w">
            <object xmi:id="_2aYHeHMaEeeoYuc64YE22w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_2aXgEHMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHeXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHenMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2aYHe3MaEeeoYuc64YE22w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_2aXgEXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHfHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHfXMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYHfnMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2aYHf3MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aXgEXMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHgHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHgXMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2aYHgnMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aXgEnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHg3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHhHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYHhXMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2aYHhnMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aXgE3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHh3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHiHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2aYHiXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYHinMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2aYHi3MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aXgEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHjHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHjXMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2aYHjnMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aXgFXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHj3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHkHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2aYHkXMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aXgE3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHknMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHk3MaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2aYHlHMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aXgFHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2aYHlXMaEeeoYuc64YE22w" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_2aXgFHMaEeeoYuc64YE22w _2aXgFXMaEeeoYuc64YE22w" outgoing="_2aXgFnMaEeeoYuc64YE22w" decisionInputFlow="_2aXgFXMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aXgAnMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_2aXf_XMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" parameter="_2aXf93MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aXgA3MaEeeoYuc64YE22w" name="Return" incoming="_2aXf_nMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" parameter="_2aXf-nMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_2aXgBHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aXgAHMaEeeoYuc64YE22w" outgoing="_2aXgAXMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYHlnMaEeeoYuc64YE22w" name="test$method$1" specification="_2aYJ8HMaEeeoYuc64YE22w" node="_2aYHr3MaEeeoYuc64YE22w _2aYHsHMaEeeoYuc64YE22w _2aYHsXMaEeeoYuc64YE22w _2aYHsnMaEeeoYuc64YE22w _2aYHs3MaEeeoYuc64YE22w _2aYHtHMaEeeoYuc64YE22w _2aYHtXMaEeeoYuc64YE22w" group="_2aYHtXMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aYHl3MaEeeoYuc64YE22w" name="notEmpty" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHmHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHmXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYHmnMaEeeoYuc64YE22w" name="includes" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHm3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHnHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYHnXMaEeeoYuc64YE22w" name="m" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHnnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHn3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYHoHMaEeeoYuc64YE22w" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHoXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHonMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYHo3MaEeeoYuc64YE22w" name="customers" type="_2aYKBHMaEeeoYuc64YE22w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHpHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHpXMaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYHpnMaEeeoYuc64YE22w" name="list" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYHp3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYHqHMaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHqXMaEeeoYuc64YE22w" target="_2aYHr3MaEeeoYuc64YE22w" source="_2aYH4XMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHqnMaEeeoYuc64YE22w" target="_2aYHsHMaEeeoYuc64YE22w" source="_2aYH5HMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHq3MaEeeoYuc64YE22w" target="_2aYHsXMaEeeoYuc64YE22w" source="_2aYH53MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHrHMaEeeoYuc64YE22w" target="_2aYHsnMaEeeoYuc64YE22w" source="_2aYH6nMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHrXMaEeeoYuc64YE22w" target="_2aYHs3MaEeeoYuc64YE22w" source="_2aYH7XMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHrnMaEeeoYuc64YE22w" target="_2aYHtHMaEeeoYuc64YE22w" source="_2aYH8HMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2aYHtXMaEeeoYuc64YE22w" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHtnMaEeeoYuc64YE22w" target="_2aYIFXMaEeeoYuc64YE22w" source="_2aYH83MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHt3MaEeeoYuc64YE22w" target="_2aYIKHMaEeeoYuc64YE22w" source="_2aYIF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHuHMaEeeoYuc64YE22w" target="_2aYIHnMaEeeoYuc64YE22w" source="_2aYIFXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHuXMaEeeoYuc64YE22w" target="_2aYIOHMaEeeoYuc64YE22w" source="_2aYIF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHunMaEeeoYuc64YE22w" target="_2aYIO3MaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHu3MaEeeoYuc64YE22w" target="_2aYILnMaEeeoYuc64YE22w" source="_2aYIHnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHvHMaEeeoYuc64YE22w" target="_2aYIS3MaEeeoYuc64YE22w" source="_2aYIF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHvXMaEeeoYuc64YE22w" target="_2aYITnMaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHvnMaEeeoYuc64YE22w" target="_2aYIQXMaEeeoYuc64YE22w" source="_2aYILnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHv3MaEeeoYuc64YE22w" target="_2aYIfXMaEeeoYuc64YE22w" source="_2aYIQ3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHwHMaEeeoYuc64YE22w" target="_2aYIVHMaEeeoYuc64YE22w" source="_2aYIQXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHwXMaEeeoYuc64YE22w" target="_2aYIsHMaEeeoYuc64YE22w" source="_2aYIhnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHwnMaEeeoYuc64YE22w" target="_2aYIh3MaEeeoYuc64YE22w" source="_2aYIVHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHw3MaEeeoYuc64YE22w" target="_2aYIwnMaEeeoYuc64YE22w" source="_2aYIuXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHxHMaEeeoYuc64YE22w" target="_2aYIxXMaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHxXMaEeeoYuc64YE22w" target="_2aYIunMaEeeoYuc64YE22w" source="_2aYIh3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHxnMaEeeoYuc64YE22w" target="_2aYI3HMaEeeoYuc64YE22w" source="_2aYIy3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHx3MaEeeoYuc64YE22w" target="_2aYIzHMaEeeoYuc64YE22w" source="_2aYIunMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHyHMaEeeoYuc64YE22w" target="_2aYI7nMaEeeoYuc64YE22w" source="_2aYI5XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHyXMaEeeoYuc64YE22w" target="_2aYI8XMaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHynMaEeeoYuc64YE22w" target="_2aYI5nMaEeeoYuc64YE22w" source="_2aYIzHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHy3MaEeeoYuc64YE22w" target="_2aYI-HMaEeeoYuc64YE22w" source="_2aYI5nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHzHMaEeeoYuc64YE22w" target="_2aYJD3MaEeeoYuc64YE22w" source="_2aYI-HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYHzXMaEeeoYuc64YE22w" target="_2aYJJnMaEeeoYuc64YE22w" source="_2aYJD3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHznMaEeeoYuc64YE22w" target="_2aYJOXMaEeeoYuc64YE22w" source="_2aYJKHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYHz3MaEeeoYuc64YE22w" target="_2aYJPHMaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYH0HMaEeeoYuc64YE22w" target="_2aYJL3MaEeeoYuc64YE22w" source="_2aYJJnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH0XMaEeeoYuc64YE22w" target="_2aYJSnMaEeeoYuc64YE22w" source="_2aYJMXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH0nMaEeeoYuc64YE22w" target="_2aYJTXMaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYH03MaEeeoYuc64YE22w" target="_2aYJQnMaEeeoYuc64YE22w" source="_2aYJL3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH1HMaEeeoYuc64YE22w" target="_2aYJZHMaEeeoYuc64YE22w" source="_2aYJU3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYH1XMaEeeoYuc64YE22w" target="_2aYJVHMaEeeoYuc64YE22w" source="_2aYJQnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH1nMaEeeoYuc64YE22w" target="_2aYJfnMaEeeoYuc64YE22w" source="_2aYJbXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYH13MaEeeoYuc64YE22w" target="_2aYJbnMaEeeoYuc64YE22w" source="_2aYJVHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH2HMaEeeoYuc64YE22w" target="_2aYJkHMaEeeoYuc64YE22w" source="_2aYJh3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH2XMaEeeoYuc64YE22w" target="_2aYJk3MaEeeoYuc64YE22w" source="_2aYH9XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYH2nMaEeeoYuc64YE22w" target="_2aYJiHMaEeeoYuc64YE22w" source="_2aYJbnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH23MaEeeoYuc64YE22w" target="_2aYH4XMaEeeoYuc64YE22w" source="_2aYIIHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH3HMaEeeoYuc64YE22w" target="_2aYH5HMaEeeoYuc64YE22w" source="_2aYIMHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH3XMaEeeoYuc64YE22w" target="_2aYH53MaEeeoYuc64YE22w" source="_2aYI-nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH3nMaEeeoYuc64YE22w" target="_2aYH6nMaEeeoYuc64YE22w" source="_2aYJEXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH33MaEeeoYuc64YE22w" target="_2aYH7XMaEeeoYuc64YE22w" source="_2aYI93MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH4HMaEeeoYuc64YE22w" target="_2aYH8HMaEeeoYuc64YE22w" source="_2aYJmXMaEeeoYuc64YE22w"/>
          <structuredNodeOutput xmi:id="_2aYH4XMaEeeoYuc64YE22w" name="Output(notEmpty)" incoming="_2aYH23MaEeeoYuc64YE22w" outgoing="_2aYHqXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH4nMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH43MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2aYH5HMaEeeoYuc64YE22w" name="Output(includes)" incoming="_2aYH3HMaEeeoYuc64YE22w" outgoing="_2aYHqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH5XMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH5nMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2aYH53MaEeeoYuc64YE22w" name="Output(m)" incoming="_2aYH3XMaEeeoYuc64YE22w" outgoing="_2aYHq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH6HMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH6XMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2aYH6nMaEeeoYuc64YE22w" name="Output(n)" incoming="_2aYH3nMaEeeoYuc64YE22w" outgoing="_2aYHrHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH63MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH7HMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2aYH7XMaEeeoYuc64YE22w" name="Output(customers)" incoming="_2aYH33MaEeeoYuc64YE22w" outgoing="_2aYHrXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH7nMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH73MaEeeoYuc64YE22w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2aYH8HMaEeeoYuc64YE22w" name="Output(list)" incoming="_2aYH4HMaEeeoYuc64YE22w" outgoing="_2aYHrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH8XMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH8nMaEeeoYuc64YE22w" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYH83MaEeeoYuc64YE22w" name="ExpressionStatement@2de73991" outgoing="_2aYHtnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH9HMaEeeoYuc64YE22w" target="_2aYH9XMaEeeoYuc64YE22w" source="_2aYIEXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYH9XMaEeeoYuc64YE22w" name="Fork(customer)@3aa2f9aa" incoming="_2aYH9HMaEeeoYuc64YE22w" outgoing="_2aYHunMaEeeoYuc64YE22w _2aYHvXMaEeeoYuc64YE22w _2aYHxHMaEeeoYuc64YE22w _2aYHyXMaEeeoYuc64YE22w _2aYHz3MaEeeoYuc64YE22w _2aYH0nMaEeeoYuc64YE22w _2aYH2XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYH9nMaEeeoYuc64YE22w" name="RightHandSide@5b6f8d84">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH93MaEeeoYuc64YE22w" target="_2aYIFHMaEeeoYuc64YE22w" source="_2aYIBnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH-HMaEeeoYuc64YE22w" target="_2aYIAnMaEeeoYuc64YE22w" source="_2aYIFHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYH-XMaEeeoYuc64YE22w" target="_2aYH_HMaEeeoYuc64YE22w" source="_2aYIC3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYH-nMaEeeoYuc64YE22w" target="_2aYH-3MaEeeoYuc64YE22w" source="_2aYICXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2aYH-3MaEeeoYuc64YE22w" name="Call(Customer)" incoming="_2aYH-nMaEeeoYuc64YE22w" operation="_2aYKvHMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYH_HMaEeeoYuc64YE22w" name="Call(Customer).argument(name)" incoming="_2aYH-XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYH_XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYH_nMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYH_3MaEeeoYuc64YE22w" name="Call(Customer).result()" type="_2aYKBHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIAHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIAXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_2aYIAnMaEeeoYuc64YE22w" name="Call(Customer).target" incoming="_2aYH-HMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIA3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIBHMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_2aYIBXMaEeeoYuc64YE22w" name="Create(Customer)" classifier="_2aYKBHMaEeeoYuc64YE22w">
                <result xmi:id="_2aYIBnMaEeeoYuc64YE22w" name="Create(Customer).result" outgoing="_2aYH93MaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIB3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYICHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYICXMaEeeoYuc64YE22w" name="Tuple@51829b5d" outgoing="_2aYH-nMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYICnMaEeeoYuc64YE22w" name="Value(&quot;A&quot;)">
                  <result xmi:id="_2aYIC3MaEeeoYuc64YE22w" name="Value(&quot;A&quot;).result" outgoing="_2aYH-XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIDHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIDXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYIDnMaEeeoYuc64YE22w" value="A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYID3MaEeeoYuc64YE22w" name="Node(Call(Customer))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIEHMaEeeoYuc64YE22w" target="_2aYIEXMaEeeoYuc64YE22w" source="_2aYIFHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYIEXMaEeeoYuc64YE22w" name="Output(Fork(Create(Customer).result))" incoming="_2aYIEHMaEeeoYuc64YE22w" outgoing="_2aYH9HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIEnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIE3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ForkNode" xmi:id="_2aYIFHMaEeeoYuc64YE22w" name="Fork(Create(Customer).result)" incoming="_2aYH93MaEeeoYuc64YE22w" outgoing="_2aYH-HMaEeeoYuc64YE22w _2aYIEHMaEeeoYuc64YE22w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIFXMaEeeoYuc64YE22w" name="ExpressionStatement@5cab1f47" incoming="_2aYHtnMaEeeoYuc64YE22w" outgoing="_2aYHuHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIFnMaEeeoYuc64YE22w" target="_2aYIF3MaEeeoYuc64YE22w" source="_2aYIGnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIF3MaEeeoYuc64YE22w" name="Fork(customers)@44e3fe67" incoming="_2aYIFnMaEeeoYuc64YE22w" outgoing="_2aYHt3MaEeeoYuc64YE22w _2aYHuXMaEeeoYuc64YE22w _2aYHvHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIGHMaEeeoYuc64YE22w" name="RightHandSide@ca2036b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYIGXMaEeeoYuc64YE22w" name="Value(null)">
                <result xmi:id="_2aYIGnMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_2aYIFnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIG3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIHHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_2aYIHXMaEeeoYuc64YE22w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIHnMaEeeoYuc64YE22w" name="ExpressionStatement@71267620" incoming="_2aYHuHMaEeeoYuc64YE22w" outgoing="_2aYHu3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIH3MaEeeoYuc64YE22w" target="_2aYIIHMaEeeoYuc64YE22w" source="_2aYIJHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIIHMaEeeoYuc64YE22w" name="Fork(notEmpty)@72d96d7a" incoming="_2aYIH3MaEeeoYuc64YE22w" outgoing="_2aYH23MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIIXMaEeeoYuc64YE22w" name="RightHandSide@4294669">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIInMaEeeoYuc64YE22w" name="Node(Call(NotEmpty))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYII3MaEeeoYuc64YE22w" target="_2aYIJHMaEeeoYuc64YE22w" source="_2aYIK3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYIJHMaEeeoYuc64YE22w" name="Output(Call(NotEmpty).result())" incoming="_2aYII3MaEeeoYuc64YE22w" outgoing="_2aYIH3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIJXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIJnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYIJ3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
                  <argument xmi:id="_2aYIKHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aYHt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIKXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIKnMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2aYIK3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aYII3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYILHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYILXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYILnMaEeeoYuc64YE22w" name="ExpressionStatement@3c54f777" incoming="_2aYHu3MaEeeoYuc64YE22w" outgoing="_2aYHvnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIL3MaEeeoYuc64YE22w" target="_2aYIMHMaEeeoYuc64YE22w" source="_2aYINHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIMHMaEeeoYuc64YE22w" name="Fork(includes)@149c9b3a" incoming="_2aYIL3MaEeeoYuc64YE22w" outgoing="_2aYH3HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIMXMaEeeoYuc64YE22w" name="RightHandSide@3027a1f1">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIMnMaEeeoYuc64YE22w" name="Node(Call(Includes))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIM3MaEeeoYuc64YE22w" target="_2aYINHMaEeeoYuc64YE22w" source="_2aYIPnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYINHMaEeeoYuc64YE22w" name="Output(Call(Includes).result())" incoming="_2aYIM3MaEeeoYuc64YE22w" outgoing="_2aYIL3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYINXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYINnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYIN3MaEeeoYuc64YE22w" name="Call(Includes)">
                  <argument xmi:id="_2aYIOHMaEeeoYuc64YE22w" name="Call(Includes).argument(seq)" incoming="_2aYHuXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIOXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIOnMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <argument xmi:id="_2aYIO3MaEeeoYuc64YE22w" name="Call(Includes).argument(element)" incoming="_2aYHunMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIPHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIPXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aYIPnMaEeeoYuc64YE22w" name="Call(Includes).result()" outgoing="_2aYIM3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIP3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIQHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Includes"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIQXMaEeeoYuc64YE22w" name="ExpressionStatement@658f4aa" incoming="_2aYHvnMaEeeoYuc64YE22w" outgoing="_2aYHwHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIQnMaEeeoYuc64YE22w" target="_2aYIQ3MaEeeoYuc64YE22w" source="_2aYIR3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIQ3MaEeeoYuc64YE22w" name="Fork(customers)@3f81a8bd" incoming="_2aYIQnMaEeeoYuc64YE22w" outgoing="_2aYHv3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIRHMaEeeoYuc64YE22w" name="RightHandSide@fe67297">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIRXMaEeeoYuc64YE22w" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIRnMaEeeoYuc64YE22w" target="_2aYIR3MaEeeoYuc64YE22w" source="_2aYIUXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYIR3MaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYIRnMaEeeoYuc64YE22w" outgoing="_2aYIQnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYISHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYISXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYISnMaEeeoYuc64YE22w" name="Call(Including)">
                  <argument xmi:id="_2aYIS3MaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYHvHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYITHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYITXMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <argument xmi:id="_2aYITnMaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYHvXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIT3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIUHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aYIUXMaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYIRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIUnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIU3MaEeeoYuc64YE22w" value="*"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIVHMaEeeoYuc64YE22w" name="ExpressionStatement@7f71485a" incoming="_2aYHwHMaEeeoYuc64YE22w" outgoing="_2aYHwnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIVXMaEeeoYuc64YE22w" target="_2aYIgHMaEeeoYuc64YE22w" source="_2aYIc3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYIVnMaEeeoYuc64YE22w" target="_2aYIfHMaEeeoYuc64YE22w" source="_2aYIWHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIV3MaEeeoYuc64YE22w" target="_2aYIhnMaEeeoYuc64YE22w" source="_2aYIg3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIWHMaEeeoYuc64YE22w" name="Tuple@41160cd4" outgoing="_2aYIVnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIWXMaEeeoYuc64YE22w" target="_2aYIdnMaEeeoYuc64YE22w" source="_2aYIaHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIWnMaEeeoYuc64YE22w" target="_2aYIZHMaEeeoYuc64YE22w" source="_2aYIdnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIW3MaEeeoYuc64YE22w" target="_2aYIXnMaEeeoYuc64YE22w" source="_2aYIbXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYIXHMaEeeoYuc64YE22w" target="_2aYIXXMaEeeoYuc64YE22w" source="_2aYIa3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2aYIXXMaEeeoYuc64YE22w" name="Call(Customer)" incoming="_2aYIXHMaEeeoYuc64YE22w" operation="_2aYKvHMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYIXnMaEeeoYuc64YE22w" name="Call(Customer).argument(name)" incoming="_2aYIW3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIX3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIYHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYIYXMaEeeoYuc64YE22w" name="Call(Customer).result()" type="_2aYKBHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIYnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIY3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_2aYIZHMaEeeoYuc64YE22w" name="Call(Customer).target" incoming="_2aYIWnMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIZXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIZnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_2aYIZ3MaEeeoYuc64YE22w" name="Create(Customer)" classifier="_2aYKBHMaEeeoYuc64YE22w">
                <result xmi:id="_2aYIaHMaEeeoYuc64YE22w" name="Create(Customer).result" outgoing="_2aYIWXMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIaXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIanMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIa3MaEeeoYuc64YE22w" name="Tuple@3d8d3cb2" outgoing="_2aYIXHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYIbHMaEeeoYuc64YE22w" name="Value(&quot;B&quot;)">
                  <result xmi:id="_2aYIbXMaEeeoYuc64YE22w" name="Value(&quot;B&quot;).result" outgoing="_2aYIW3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIbnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIb3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYIcHMaEeeoYuc64YE22w" value="B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIcXMaEeeoYuc64YE22w" name="Node(Call(Customer))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIcnMaEeeoYuc64YE22w" target="_2aYIc3MaEeeoYuc64YE22w" source="_2aYIdnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYIc3MaEeeoYuc64YE22w" name="Output(Fork(Create(Customer).result))" incoming="_2aYIcnMaEeeoYuc64YE22w" outgoing="_2aYIVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIdHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIdXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ForkNode" xmi:id="_2aYIdnMaEeeoYuc64YE22w" name="Fork(Create(Customer).result)" incoming="_2aYIWXMaEeeoYuc64YE22w" outgoing="_2aYIWnMaEeeoYuc64YE22w _2aYIcnMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYId3MaEeeoYuc64YE22w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIeHMaEeeoYuc64YE22w" target="_2aYIeXMaEeeoYuc64YE22w" source="_2aYIg3MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYIeXMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYIeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIenMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIe3MaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYIfHMaEeeoYuc64YE22w" name="Call(Including)" incoming="_2aYIVnMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYIfXMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYHv3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIfnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIf3MaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYIgHMaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYIVXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIgXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIgnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYIg3MaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYIV3MaEeeoYuc64YE22w _2aYIeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIhHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIhXMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIhnMaEeeoYuc64YE22w" name="Fork(customers)@461df0fe" incoming="_2aYIV3MaEeeoYuc64YE22w" outgoing="_2aYHwXMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIh3MaEeeoYuc64YE22w" name="ExpressionStatement@797dc3a0" incoming="_2aYHwnMaEeeoYuc64YE22w" outgoing="_2aYHxXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIiHMaEeeoYuc64YE22w" target="_2aYIs3MaEeeoYuc64YE22w" source="_2aYIpnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYIiXMaEeeoYuc64YE22w" target="_2aYIr3MaEeeoYuc64YE22w" source="_2aYIi3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIinMaEeeoYuc64YE22w" target="_2aYIuXMaEeeoYuc64YE22w" source="_2aYItnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIi3MaEeeoYuc64YE22w" name="Tuple@6547d84c" outgoing="_2aYIiXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIjHMaEeeoYuc64YE22w" target="_2aYIqXMaEeeoYuc64YE22w" source="_2aYIm3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIjXMaEeeoYuc64YE22w" target="_2aYIl3MaEeeoYuc64YE22w" source="_2aYIqXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIjnMaEeeoYuc64YE22w" target="_2aYIkXMaEeeoYuc64YE22w" source="_2aYIoHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYIj3MaEeeoYuc64YE22w" target="_2aYIkHMaEeeoYuc64YE22w" source="_2aYInnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2aYIkHMaEeeoYuc64YE22w" name="Call(Customer)" incoming="_2aYIj3MaEeeoYuc64YE22w" operation="_2aYKvHMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYIkXMaEeeoYuc64YE22w" name="Call(Customer).argument(name)" incoming="_2aYIjnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIknMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIk3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYIlHMaEeeoYuc64YE22w" name="Call(Customer).result()" type="_2aYKBHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIlXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIlnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_2aYIl3MaEeeoYuc64YE22w" name="Call(Customer).target" incoming="_2aYIjXMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYImHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYImXMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_2aYImnMaEeeoYuc64YE22w" name="Create(Customer)" classifier="_2aYKBHMaEeeoYuc64YE22w">
                <result xmi:id="_2aYIm3MaEeeoYuc64YE22w" name="Create(Customer).result" outgoing="_2aYIjHMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYInHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYInXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYInnMaEeeoYuc64YE22w" name="Tuple@310d7600" outgoing="_2aYIj3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYIn3MaEeeoYuc64YE22w" name="Value(&quot;C&quot;)">
                  <result xmi:id="_2aYIoHMaEeeoYuc64YE22w" name="Value(&quot;C&quot;).result" outgoing="_2aYIjnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIoXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIonMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYIo3MaEeeoYuc64YE22w" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIpHMaEeeoYuc64YE22w" name="Node(Call(Customer))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIpXMaEeeoYuc64YE22w" target="_2aYIpnMaEeeoYuc64YE22w" source="_2aYIqXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYIpnMaEeeoYuc64YE22w" name="Output(Fork(Create(Customer).result))" incoming="_2aYIpXMaEeeoYuc64YE22w" outgoing="_2aYIiHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIp3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIqHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ForkNode" xmi:id="_2aYIqXMaEeeoYuc64YE22w" name="Fork(Create(Customer).result)" incoming="_2aYIjHMaEeeoYuc64YE22w" outgoing="_2aYIjXMaEeeoYuc64YE22w _2aYIpXMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIqnMaEeeoYuc64YE22w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIq3MaEeeoYuc64YE22w" target="_2aYIrHMaEeeoYuc64YE22w" source="_2aYItnMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYIrHMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYIq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIrXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIrnMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYIr3MaEeeoYuc64YE22w" name="Call(Including)" incoming="_2aYIiXMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYIsHMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYHwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIsXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIsnMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYIs3MaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYIiHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYItHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYItXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYItnMaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYIinMaEeeoYuc64YE22w _2aYIq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIt3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIuHMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIuXMaEeeoYuc64YE22w" name="Fork(customers)@433180f3" incoming="_2aYIinMaEeeoYuc64YE22w" outgoing="_2aYHw3MaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIunMaEeeoYuc64YE22w" name="ExpressionStatement@60e3c1e9" incoming="_2aYHxXMaEeeoYuc64YE22w" outgoing="_2aYHx3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIu3MaEeeoYuc64YE22w" target="_2aYIy3MaEeeoYuc64YE22w" source="_2aYIyHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIvHMaEeeoYuc64YE22w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIvXMaEeeoYuc64YE22w" target="_2aYIvnMaEeeoYuc64YE22w" source="_2aYIyHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYIvnMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYIvXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIv3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIwHMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYIwXMaEeeoYuc64YE22w" name="Call(Including)">
                <argument xmi:id="_2aYIwnMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYHw3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIw3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIxHMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYIxXMaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYHxHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIxnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIx3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYIyHMaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYIu3MaEeeoYuc64YE22w _2aYIvXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYIyXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYIynMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYIy3MaEeeoYuc64YE22w" name="Fork(customers)@59727641" incoming="_2aYIu3MaEeeoYuc64YE22w" outgoing="_2aYHxnMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYIzHMaEeeoYuc64YE22w" name="ExpressionStatement@141f544d" incoming="_2aYHx3MaEeeoYuc64YE22w" outgoing="_2aYHynMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIzXMaEeeoYuc64YE22w" target="_2aYI33MaEeeoYuc64YE22w" source="_2aYI0nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYIznMaEeeoYuc64YE22w" target="_2aYI23MaEeeoYuc64YE22w" source="_2aYI0HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYIz3MaEeeoYuc64YE22w" target="_2aYI5XMaEeeoYuc64YE22w" source="_2aYI4nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI0HMaEeeoYuc64YE22w" name="Tuple@77cd8d4d" outgoing="_2aYIznMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYI0XMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_2aYI0nMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_2aYIzXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI03MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI1HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2aYI1XMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI1nMaEeeoYuc64YE22w" name="Node(Call(ExcludeAt))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYI13MaEeeoYuc64YE22w" target="_2aYI2HMaEeeoYuc64YE22w" source="_2aYI4nMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYI2HMaEeeoYuc64YE22w" name="Output(Call(ExcludeAt).result())" incoming="_2aYI13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI2XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI2nMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYI23MaEeeoYuc64YE22w" name="Call(ExcludeAt)" incoming="_2aYIznMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYI3HMaEeeoYuc64YE22w" name="Call(ExcludeAt).argument(seq)" incoming="_2aYHxnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI3XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI3nMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYI33MaEeeoYuc64YE22w" name="Call(ExcludeAt).argument(index)" incoming="_2aYIzXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI4HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI4XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYI4nMaEeeoYuc64YE22w" name="Call(ExcludeAt).result()" outgoing="_2aYIz3MaEeeoYuc64YE22w _2aYI13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI43MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI5HMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYI5XMaEeeoYuc64YE22w" name="Fork(customers)@12714505" incoming="_2aYIz3MaEeeoYuc64YE22w" outgoing="_2aYHyHMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI5nMaEeeoYuc64YE22w" name="ExpressionStatement@65038e97" incoming="_2aYHynMaEeeoYuc64YE22w" outgoing="_2aYHy3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYI53MaEeeoYuc64YE22w" target="_2aYI93MaEeeoYuc64YE22w" source="_2aYI9HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI6HMaEeeoYuc64YE22w" name="Node(Call(Excluding))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYI6XMaEeeoYuc64YE22w" target="_2aYI6nMaEeeoYuc64YE22w" source="_2aYI9HMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYI6nMaEeeoYuc64YE22w" name="Output(Call(Excluding).result())" incoming="_2aYI6XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI63MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI7HMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYI7XMaEeeoYuc64YE22w" name="Call(Excluding)">
                <argument xmi:id="_2aYI7nMaEeeoYuc64YE22w" name="Call(Excluding).argument(seq)" incoming="_2aYHyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI73MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI8HMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYI8XMaEeeoYuc64YE22w" name="Call(Excluding).argument(element)" incoming="_2aYHyXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI8nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI83MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYI9HMaEeeoYuc64YE22w" name="Call(Excluding).result()" outgoing="_2aYI53MaEeeoYuc64YE22w _2aYI6XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYI9XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYI9nMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Excluding"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYI93MaEeeoYuc64YE22w" name="Fork(customers)@247e7adf" incoming="_2aYI53MaEeeoYuc64YE22w" outgoing="_2aYH33MaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI-HMaEeeoYuc64YE22w" name="ExpressionStatement@2824ecc" incoming="_2aYHy3MaEeeoYuc64YE22w" outgoing="_2aYHzHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYI-XMaEeeoYuc64YE22w" target="_2aYI-nMaEeeoYuc64YE22w" source="_2aYJBXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYI-nMaEeeoYuc64YE22w" name="Fork(m)@25748b45" incoming="_2aYI-XMaEeeoYuc64YE22w" outgoing="_2aYH3XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI-3MaEeeoYuc64YE22w" name="RightHandSide@5a5c8049">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYI_HMaEeeoYuc64YE22w" target="_2aYJCXMaEeeoYuc64YE22w" source="_2aYJAHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYI_XMaEeeoYuc64YE22w" target="_2aYJCHMaEeeoYuc64YE22w" source="_2aYI_nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYI_nMaEeeoYuc64YE22w" name="Tuple@24a5db6d" outgoing="_2aYI_XMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_2aYI_3MaEeeoYuc64YE22w" name="ReadExtent(Customer)" classifier="_2aYKBHMaEeeoYuc64YE22w">
                  <result xmi:id="_2aYJAHMaEeeoYuc64YE22w" name="ReadExtent(Customer).result" outgoing="_2aYI_HMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJAXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJAnMaEeeoYuc64YE22w" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJA3MaEeeoYuc64YE22w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJBHMaEeeoYuc64YE22w" target="_2aYJBXMaEeeoYuc64YE22w" source="_2aYJDHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYJBXMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_2aYJBHMaEeeoYuc64YE22w" outgoing="_2aYI-XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJBnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJB3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJCHMaEeeoYuc64YE22w" name="Call(Size)" incoming="_2aYI_XMaEeeoYuc64YE22w">
                  <argument xmi:id="_2aYJCXMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_2aYI_HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJCnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJC3MaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2aYJDHMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_2aYJBHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJDXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJDnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJD3MaEeeoYuc64YE22w" name="ExpressionStatement@879a237" incoming="_2aYHzHMaEeeoYuc64YE22w" outgoing="_2aYHzXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJEHMaEeeoYuc64YE22w" target="_2aYJEXMaEeeoYuc64YE22w" source="_2aYJHHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJEXMaEeeoYuc64YE22w" name="Fork(n)@356746dc" incoming="_2aYJEHMaEeeoYuc64YE22w" outgoing="_2aYH3nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJEnMaEeeoYuc64YE22w" name="RightHandSide@295e1d78">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJE3MaEeeoYuc64YE22w" target="_2aYJIHMaEeeoYuc64YE22w" source="_2aYJF3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYJFHMaEeeoYuc64YE22w" target="_2aYJH3MaEeeoYuc64YE22w" source="_2aYJFXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJFXMaEeeoYuc64YE22w" name="Tuple@27f0a4ed" outgoing="_2aYJFHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_2aYJFnMaEeeoYuc64YE22w" name="ReadExtent(Customer)" classifier="_2aYKBHMaEeeoYuc64YE22w">
                  <result xmi:id="_2aYJF3MaEeeoYuc64YE22w" name="ReadExtent(Customer).result" outgoing="_2aYJE3MaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJGHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJGXMaEeeoYuc64YE22w" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJGnMaEeeoYuc64YE22w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJG3MaEeeoYuc64YE22w" target="_2aYJHHMaEeeoYuc64YE22w" source="_2aYJI3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYJHHMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_2aYJG3MaEeeoYuc64YE22w" outgoing="_2aYJEHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJHXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJHnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJH3MaEeeoYuc64YE22w" name="Call(Size)" incoming="_2aYJFHMaEeeoYuc64YE22w">
                  <argument xmi:id="_2aYJIHMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_2aYJE3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJIXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJInMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2aYJI3MaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_2aYJG3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJJHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJJXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJJnMaEeeoYuc64YE22w" name="ExpressionStatement@405972c" incoming="_2aYHzXMaEeeoYuc64YE22w" outgoing="_2aYH0HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJJ3MaEeeoYuc64YE22w" target="_2aYJKHMaEeeoYuc64YE22w" source="_2aYJK3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJKHMaEeeoYuc64YE22w" name="Fork(list)@692d271" incoming="_2aYJJ3MaEeeoYuc64YE22w" outgoing="_2aYHznMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJKXMaEeeoYuc64YE22w" name="RightHandSide@1def3078">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYJKnMaEeeoYuc64YE22w" name="Value(null)">
                <result xmi:id="_2aYJK3MaEeeoYuc64YE22w" name="Value(null).result" outgoing="_2aYJJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJLHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJLXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_2aYJLnMaEeeoYuc64YE22w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJL3MaEeeoYuc64YE22w" name="ExpressionStatement@39e621bf" incoming="_2aYH0HMaEeeoYuc64YE22w" outgoing="_2aYH03MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJMHMaEeeoYuc64YE22w" target="_2aYJMXMaEeeoYuc64YE22w" source="_2aYJNXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJMXMaEeeoYuc64YE22w" name="Fork(list)@6db07c63" incoming="_2aYJMHMaEeeoYuc64YE22w" outgoing="_2aYH0XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJMnMaEeeoYuc64YE22w" name="RightHandSide@35dc7aa5">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJM3MaEeeoYuc64YE22w" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJNHMaEeeoYuc64YE22w" target="_2aYJNXMaEeeoYuc64YE22w" source="_2aYJP3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYJNXMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYJNHMaEeeoYuc64YE22w" outgoing="_2aYJMHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJNnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJN3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJOHMaEeeoYuc64YE22w" name="Call(Including)">
                  <argument xmi:id="_2aYJOXMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYHznMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJOnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJO3MaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <argument xmi:id="_2aYJPHMaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYHz3MaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJPXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJPnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aYJP3MaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYJNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJQHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJQXMaEeeoYuc64YE22w" value="*"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJQnMaEeeoYuc64YE22w" name="ExpressionStatement@121b4d5f" incoming="_2aYH03MaEeeoYuc64YE22w" outgoing="_2aYH1XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJQ3MaEeeoYuc64YE22w" target="_2aYJU3MaEeeoYuc64YE22w" source="_2aYJUHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJRHMaEeeoYuc64YE22w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJRXMaEeeoYuc64YE22w" target="_2aYJRnMaEeeoYuc64YE22w" source="_2aYJUHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYJRnMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYJRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJR3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJSHMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJSXMaEeeoYuc64YE22w" name="Call(Including)">
                <argument xmi:id="_2aYJSnMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYH0XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJS3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJTHMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYJTXMaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYH0nMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJTnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJT3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYJUHMaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYJQ3MaEeeoYuc64YE22w _2aYJRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJUXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJUnMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJU3MaEeeoYuc64YE22w" name="Fork(list)@5dd63368" incoming="_2aYJQ3MaEeeoYuc64YE22w" outgoing="_2aYH1HMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJVHMaEeeoYuc64YE22w" name="ExpressionStatement@40752b0a" incoming="_2aYH1XMaEeeoYuc64YE22w" outgoing="_2aYH13MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJVXMaEeeoYuc64YE22w" target="_2aYJZ3MaEeeoYuc64YE22w" source="_2aYJWnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYJVnMaEeeoYuc64YE22w" target="_2aYJY3MaEeeoYuc64YE22w" source="_2aYJWHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJV3MaEeeoYuc64YE22w" target="_2aYJbXMaEeeoYuc64YE22w" source="_2aYJanMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJWHMaEeeoYuc64YE22w" name="Tuple@5e81c747" outgoing="_2aYJVnMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYJWXMaEeeoYuc64YE22w" name="Value(&quot;Blah&quot;)">
                <result xmi:id="_2aYJWnMaEeeoYuc64YE22w" name="Value(&quot;Blah&quot;).result" outgoing="_2aYJVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJW3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJXHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2aYJXXMaEeeoYuc64YE22w" value="Blah">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJXnMaEeeoYuc64YE22w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJX3MaEeeoYuc64YE22w" target="_2aYJYHMaEeeoYuc64YE22w" source="_2aYJanMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYJYHMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYJX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJYXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJYnMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJY3MaEeeoYuc64YE22w" name="Call(Including)" incoming="_2aYJVnMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYJZHMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYH1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJZXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJZnMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYJZ3MaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYJVXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJaHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJaXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYJanMaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYJV3MaEeeoYuc64YE22w _2aYJX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJa3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJbHMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJbXMaEeeoYuc64YE22w" name="Fork(list)@3cceb873" incoming="_2aYJV3MaEeeoYuc64YE22w" outgoing="_2aYH1nMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJbnMaEeeoYuc64YE22w" name="ExpressionStatement@add5705" incoming="_2aYH13MaEeeoYuc64YE22w" outgoing="_2aYH2nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJb3MaEeeoYuc64YE22w" target="_2aYJgXMaEeeoYuc64YE22w" source="_2aYJdHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYJcHMaEeeoYuc64YE22w" target="_2aYJfXMaEeeoYuc64YE22w" source="_2aYJcnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJcXMaEeeoYuc64YE22w" target="_2aYJh3MaEeeoYuc64YE22w" source="_2aYJhHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJcnMaEeeoYuc64YE22w" name="Tuple@52fae3ab" outgoing="_2aYJcHMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYJc3MaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_2aYJdHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYJb3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJdXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJdnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2aYJd3MaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJeHMaEeeoYuc64YE22w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJeXMaEeeoYuc64YE22w" target="_2aYJenMaEeeoYuc64YE22w" source="_2aYJhHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYJenMaEeeoYuc64YE22w" name="Output(Call(Including).result())" incoming="_2aYJeXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJe3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJfHMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJfXMaEeeoYuc64YE22w" name="Call(Including)" incoming="_2aYJcHMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYJfnMaEeeoYuc64YE22w" name="Call(Including).argument(seq)" incoming="_2aYH1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJf3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJgHMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYJgXMaEeeoYuc64YE22w" name="Call(Including).argument(element)" incoming="_2aYJb3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJgnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJg3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYJhHMaEeeoYuc64YE22w" name="Call(Including).result()" outgoing="_2aYJcXMaEeeoYuc64YE22w _2aYJeXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJhXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJhnMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJh3MaEeeoYuc64YE22w" name="Fork(list)@50cabfe9" incoming="_2aYJcXMaEeeoYuc64YE22w" outgoing="_2aYH2HMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJiHMaEeeoYuc64YE22w" name="ExpressionStatement@489cefaa" incoming="_2aYH2nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJiXMaEeeoYuc64YE22w" target="_2aYJmXMaEeeoYuc64YE22w" source="_2aYJlnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJinMaEeeoYuc64YE22w" name="Node(Call(Difference))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJi3MaEeeoYuc64YE22w" target="_2aYJjHMaEeeoYuc64YE22w" source="_2aYJlnMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYJjHMaEeeoYuc64YE22w" name="Output(Call(Difference).result())" incoming="_2aYJi3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJjXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJjnMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJj3MaEeeoYuc64YE22w" name="Call(Difference)">
                <argument xmi:id="_2aYJkHMaEeeoYuc64YE22w" name="Call(Difference).argument(seq1)" incoming="_2aYH2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJkXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJknMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_2aYJk3MaEeeoYuc64YE22w" name="Call(Difference).argument(seq2)" incoming="_2aYH2XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJlHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJlXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2aYJlnMaEeeoYuc64YE22w" name="Call(Difference).result()" outgoing="_2aYJiXMaEeeoYuc64YE22w _2aYJi3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJl3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJmHMaEeeoYuc64YE22w" value="*"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Difference"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYJmXMaEeeoYuc64YE22w" name="Fork(list)@6d1538b9" incoming="_2aYJiXMaEeeoYuc64YE22w" outgoing="_2aYH4HMaEeeoYuc64YE22w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYHr3MaEeeoYuc64YE22w" name="Output(notEmpty)" incoming="_2aYHqXMaEeeoYuc64YE22w" parameter="_2aYHl3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYHsHMaEeeoYuc64YE22w" name="Output(includes)" incoming="_2aYHqnMaEeeoYuc64YE22w" parameter="_2aYHmnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYHsXMaEeeoYuc64YE22w" name="Output(m)" incoming="_2aYHq3MaEeeoYuc64YE22w" parameter="_2aYHnXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYHsnMaEeeoYuc64YE22w" name="Output(n)" incoming="_2aYHrHMaEeeoYuc64YE22w" parameter="_2aYHoHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYHs3MaEeeoYuc64YE22w" name="Output(customers)" incoming="_2aYHrXMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" parameter="_2aYHo3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYHtHMaEeeoYuc64YE22w" name="Output(list)" incoming="_2aYHrnMaEeeoYuc64YE22w" parameter="_2aYHpnMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYJmnMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2aYKA3MaEeeoYuc64YE22w" node="_2aYJm3MaEeeoYuc64YE22w" group="_2aYJm3MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2aYJm3MaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYJnHMaEeeoYuc64YE22w" name="Expressions_Sequence_Operation$initialization$1" specification="_2aYJ5HMaEeeoYuc64YE22w" node="_2aYJnXMaEeeoYuc64YE22w" group="_2aYJnXMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2aYJnXMaEeeoYuc64YE22w" name="Body(Expressions_Sequence_Operation$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJnnMaEeeoYuc64YE22w" target="_2aYJrXMaEeeoYuc64YE22w" source="_2aYJqnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJn3MaEeeoYuc64YE22w" target="_2aYJsXMaEeeoYuc64YE22w" source="_2aYJrXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJoHMaEeeoYuc64YE22w" target="_2aYJvHMaEeeoYuc64YE22w" source="_2aYJrXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJoXMaEeeoYuc64YE22w" target="_2aYJxnMaEeeoYuc64YE22w" source="_2aYJrXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJonMaEeeoYuc64YE22w" target="_2aYJzXMaEeeoYuc64YE22w" source="_2aYJyXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJo3MaEeeoYuc64YE22w" target="_2aYJ2XMaEeeoYuc64YE22w" source="_2aYJ0HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJpHMaEeeoYuc64YE22w" target="_2aYJ33MaEeeoYuc64YE22w" source="_2aYJ1HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYJpXMaEeeoYuc64YE22w" target="_2aYJ43MaEeeoYuc64YE22w" source="_2aYJ4nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJpnMaEeeoYuc64YE22w" target="_2aYJ43MaEeeoYuc64YE22w" source="_2aYJ3HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYJp3MaEeeoYuc64YE22w" target="_2aYJrnMaEeeoYuc64YE22w" source="_2aYJ43MaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYJqHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYJqXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2aYJqnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYJnnMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJq3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJrHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYJrXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYJnnMaEeeoYuc64YE22w" outgoing="_2aYJn3MaEeeoYuc64YE22w _2aYJoHMaEeeoYuc64YE22w _2aYJoXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJrnMaEeeoYuc64YE22w" name="Initialization" incoming="_2aYJp3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYJr3MaEeeoYuc64YE22w" target="_2aYJtHMaEeeoYuc64YE22w" source="_2aYJsHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2aYJsHMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" outgoing="_2aYJr3MaEeeoYuc64YE22w" operation="_2aYuCHMaEeeoYuc64YE22w">
              <target xmi:id="_2aYJsXMaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_2aYJn3MaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJsnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJs3MaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYJtHMaEeeoYuc64YE22w" name="Set(initializationFlag)" incoming="_2aYJr3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYJtXMaEeeoYuc64YE22w" target="_2aYJwnMaEeeoYuc64YE22w" source="_2aYJt3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYJtnMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_2aYJt3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2aYJtXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJuHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJuXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYJunMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2aYJu3MaEeeoYuc64YE22w" name="Write(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_2aXfyHMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_2aYJvHMaEeeoYuc64YE22w" name="Write(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_2aYJoHMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJvXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJvnMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2aYJv3MaEeeoYuc64YE22w" name="Write(Expressions_Sequence_Operation$initializationFlag$1).result" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJwHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJwXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_2aYJwnMaEeeoYuc64YE22w" name="Write(Expressions_Sequence_Operation$initializationFlag$1).value" incoming="_2aYJtXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJw3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJxHMaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYJxXMaEeeoYuc64YE22w" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_2aXfyHMaEeeoYuc64YE22w">
            <object xmi:id="_2aYJxnMaEeeoYuc64YE22w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_2aYJoXMaEeeoYuc64YE22w" type="_2aXfwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJx3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJyHMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2aYJyXMaEeeoYuc64YE22w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_2aYJonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJynMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJy3MaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYJzHMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2aYJzXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYJonMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJznMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJz3MaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2aYJ0HMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYJo3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ0XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ0nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYJ03MaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2aYJ1HMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYJpHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ1XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ1nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2aYJ13MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYJ2HMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2aYJ2XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYJo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ2nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ23MaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2aYJ3HMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYJpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ3XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ3nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2aYJ33MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYJpHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ4HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ4XMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2aYJ4nMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYJpXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2aYJ43MaEeeoYuc64YE22w" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_2aYJpXMaEeeoYuc64YE22w _2aYJpnMaEeeoYuc64YE22w" outgoing="_2aYJp3MaEeeoYuc64YE22w" decisionInputFlow="_2aYJpnMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2aYJ5HMaEeeoYuc64YE22w" name="Expressions_Sequence_Operation$initialization$1" visibility="protected" method="_2aYJnHMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2aYJ5XMaEeeoYuc64YE22w" name="Expressions_Sequence_Operation" visibility="public" method="_2aXfy3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aYJ5nMaEeeoYuc64YE22w" name="" visibility="package" type="_2aXfwXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ53MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ6HMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2aYJ6XMaEeeoYuc64YE22w" name="run" visibility="public" method="_2aXf9nMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aYJ6nMaEeeoYuc64YE22w" name="tester" visibility="package" type="_2aYuEnMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ63MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ7HMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYJ7XMaEeeoYuc64YE22w" name="" visibility="package" type="_2aXfwXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ7nMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ73MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2aYJ8HMaEeeoYuc64YE22w" name="test" visibility="package" method="_2aYHlnMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aYJ8XMaEeeoYuc64YE22w" name="notEmpty" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ8nMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ83MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYJ9HMaEeeoYuc64YE22w" name="includes" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ9XMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ9nMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYJ93MaEeeoYuc64YE22w" name="m" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ-HMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ-XMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYJ-nMaEeeoYuc64YE22w" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ-3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ_HMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYJ_XMaEeeoYuc64YE22w" name="customers" visibility="package" type="_2aYKBHMaEeeoYuc64YE22w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYJ_nMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYJ_3MaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYKAHMaEeeoYuc64YE22w" name="list" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKAXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKAnMaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2aYKA3MaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2aYJmnMaEeeoYuc64YE22w" redefinedOperation="_2aYuCXMaEeeoYuc64YE22w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2aYKBHMaEeeoYuc64YE22w" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_2aYKBXMaEeeoYuc64YE22w" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKBnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKB3MaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2aYKCHMaEeeoYuc64YE22w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKCXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKCnMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYKC3MaEeeoYuc64YE22w" name="Customer$method$1" specification="_2aYKvHMaEeeoYuc64YE22w" node="_2aYKF3MaEeeoYuc64YE22w _2aYKGnMaEeeoYuc64YE22w _2aYKGHMaEeeoYuc64YE22w _2aYKIHMaEeeoYuc64YE22w _2aYKGXMaEeeoYuc64YE22w" group="_2aYKGnMaEeeoYuc64YE22w _2aYKIHMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2aYKDHMaEeeoYuc64YE22w" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKDXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKDnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2aYKD3MaEeeoYuc64YE22w" name="" type="_2aYKBHMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKEHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKEXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKEnMaEeeoYuc64YE22w" target="_2aYKHHMaEeeoYuc64YE22w" source="_2aYKF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKE3MaEeeoYuc64YE22w" target="_2aYKPnMaEeeoYuc64YE22w" source="_2aYKH3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKFHMaEeeoYuc64YE22w" target="_2aYKGHMaEeeoYuc64YE22w" source="_2aYKU3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKFXMaEeeoYuc64YE22w" target="_2aYKGXMaEeeoYuc64YE22w" source="_2aYKGnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKFnMaEeeoYuc64YE22w" target="_2aYKIHMaEeeoYuc64YE22w" source="_2aYKGXMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2aYKGnMaEeeoYuc64YE22w" name="Node(Input(name))" outgoing="_2aYKFXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKG3MaEeeoYuc64YE22w" target="_2aYKH3MaEeeoYuc64YE22w" source="_2aYKHHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYKHHMaEeeoYuc64YE22w" name="Input(name)" incoming="_2aYKEnMaEeeoYuc64YE22w" outgoing="_2aYKG3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKHXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKHnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYKH3MaEeeoYuc64YE22w" name="Fork(name)" incoming="_2aYKG3MaEeeoYuc64YE22w" outgoing="_2aYKE3MaEeeoYuc64YE22w"/>
          </structuredNode>
          <structuredNode xmi:id="_2aYKIHMaEeeoYuc64YE22w" name="Body(Customer$method$1)" incoming="_2aYKFnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKIXMaEeeoYuc64YE22w" target="_2aYKU3MaEeeoYuc64YE22w" source="_2aYKUHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKInMaEeeoYuc64YE22w" target="_2aYKVXMaEeeoYuc64YE22w" source="_2aYKU3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKI3MaEeeoYuc64YE22w" target="_2aYKLHMaEeeoYuc64YE22w" source="_2aYKVHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKJHMaEeeoYuc64YE22w" target="_2aYKWXMaEeeoYuc64YE22w" source="_2aYKU3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKJXMaEeeoYuc64YE22w" target="_2aYKYHMaEeeoYuc64YE22w" source="_2aYKXHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKJnMaEeeoYuc64YE22w" target="_2aYKbHMaEeeoYuc64YE22w" source="_2aYKY3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKJ3MaEeeoYuc64YE22w" target="_2aYKcnMaEeeoYuc64YE22w" source="_2aYKZ3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKKHMaEeeoYuc64YE22w" target="_2aYKdnMaEeeoYuc64YE22w" source="_2aYKdXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKKXMaEeeoYuc64YE22w" target="_2aYKdnMaEeeoYuc64YE22w" source="_2aYKb3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKKnMaEeeoYuc64YE22w" target="_2aYKVHMaEeeoYuc64YE22w" source="_2aYKdnMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYKK3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKLHMaEeeoYuc64YE22w" name="Body" incoming="_2aYKI3MaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKLXMaEeeoYuc64YE22w" name="ExpressionStatement@344ae864">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKLnMaEeeoYuc64YE22w" target="_2aYKOHMaEeeoYuc64YE22w" source="_2aYKNHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKL3MaEeeoYuc64YE22w" target="_2aYKQXMaEeeoYuc64YE22w" source="_2aYKPnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKMHMaEeeoYuc64YE22w" target="_2aYKRXMaEeeoYuc64YE22w" source="_2aYKO3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKMXMaEeeoYuc64YE22w" target="_2aYKMnMaEeeoYuc64YE22w" source="_2aYKTnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKMnMaEeeoYuc64YE22w" name="Expression(LeftHandSide@7562a51b)" incoming="_2aYKMXMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYKM3MaEeeoYuc64YE22w" name="ReadSelf">
                    <result xmi:id="_2aYKNHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYKLnMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKNXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKNnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2aYKN3MaEeeoYuc64YE22w" name="Clear(name)" structuralFeature="_2aYKCHMaEeeoYuc64YE22w">
                  <object xmi:id="_2aYKOHMaEeeoYuc64YE22w" name="Clear(name).object" incoming="_2aYKLnMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKOXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKOnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2aYKO3MaEeeoYuc64YE22w" name="Clear(name).result" outgoing="_2aYKMHMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKPHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKPXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2aYKPnMaEeeoYuc64YE22w" name="Fork(LeftHandSide@7562a51b)" incoming="_2aYKE3MaEeeoYuc64YE22w" outgoing="_2aYKL3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKP3MaEeeoYuc64YE22w" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKQHMaEeeoYuc64YE22w" target="_2aYKS3MaEeeoYuc64YE22w" source="_2aYKQXMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2aYKQXMaEeeoYuc64YE22w" name="WriteAll(Customer::name).input(Customer::name)" incoming="_2aYKL3MaEeeoYuc64YE22w" outgoing="_2aYKQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKQnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKQ3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2aYKRHMaEeeoYuc64YE22w" name="Write(name)" structuralFeature="_2aYKCHMaEeeoYuc64YE22w" isReplaceAll="true">
                    <object xmi:id="_2aYKRXMaEeeoYuc64YE22w" name="Write(name).object" incoming="_2aYKMHMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKRnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKR3MaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2aYKSHMaEeeoYuc64YE22w" name="Write(name).result" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKSXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKSnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2aYKS3MaEeeoYuc64YE22w" name="Write(name).value" incoming="_2aYKQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKTHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKTXMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKTnMaEeeoYuc64YE22w" name="RightHandSide@6312c09f" outgoing="_2aYKMXMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYKT3MaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2aYKUHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYKIXMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKUXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKUnMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYKU3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYKIXMaEeeoYuc64YE22w" outgoing="_2aYKFHMaEeeoYuc64YE22w _2aYKInMaEeeoYuc64YE22w _2aYKJHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2aYKVHMaEeeoYuc64YE22w" name="Call(Customer$initialization$1)" incoming="_2aYKKnMaEeeoYuc64YE22w" outgoing="_2aYKI3MaEeeoYuc64YE22w" operation="_2aYKu3MaEeeoYuc64YE22w">
              <target xmi:id="_2aYKVXMaEeeoYuc64YE22w" name="Call(Customer$initialization$1).target" incoming="_2aYKInMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKVnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKV3MaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYKWHMaEeeoYuc64YE22w" name="Read(Customer$initializationFlag$1)" structuralFeature="_2aYKBXMaEeeoYuc64YE22w">
              <object xmi:id="_2aYKWXMaEeeoYuc64YE22w" name="Read(Customer$initializationFlag$1).object" incoming="_2aYKJHMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKWnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKW3MaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2aYKXHMaEeeoYuc64YE22w" name="Read(Customer$initializationFlag$1).result" outgoing="_2aYKJXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKXXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKXnMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYKX3MaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2aYKYHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYKJXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKYXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKYnMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYKY3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYKJnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKZHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKZXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYKZnMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2aYKZ3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYKJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKaHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKaXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aYKanMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYKa3MaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2aYKbHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYKJnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKbXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKbnMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aYKb3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYKKXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKcHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKcXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aYKcnMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYKJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKc3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKdHMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2aYKdXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYKKHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYKdnMaEeeoYuc64YE22w" name="Decision(Test(Customer$initializationFlag$1))" incoming="_2aYKKHMaEeeoYuc64YE22w _2aYKKXMaEeeoYuc64YE22w" outgoing="_2aYKKnMaEeeoYuc64YE22w" decisionInputFlow="_2aYKKXMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYKF3MaEeeoYuc64YE22w" name="Input(name)" outgoing="_2aYKEnMaEeeoYuc64YE22w" parameter="_2aYKDHMaEeeoYuc64YE22w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </node>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYKGHMaEeeoYuc64YE22w" name="Return" incoming="_2aYKFHMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" parameter="_2aYKD3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:JoinNode" xmi:id="_2aYKGXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aYKFXMaEeeoYuc64YE22w" outgoing="_2aYKFnMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYKd3MaEeeoYuc64YE22w" name="destroy$method$1" specification="_2aYKw3MaEeeoYuc64YE22w" node="_2aYKeHMaEeeoYuc64YE22w" group="_2aYKeHMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2aYKeHMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYKeXMaEeeoYuc64YE22w" name="Customer$initialization$1" specification="_2aYKu3MaEeeoYuc64YE22w" node="_2aYKenMaEeeoYuc64YE22w" group="_2aYKenMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2aYKenMaEeeoYuc64YE22w" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKe3MaEeeoYuc64YE22w" target="_2aYKiXMaEeeoYuc64YE22w" source="_2aYKhnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKfHMaEeeoYuc64YE22w" target="_2aYKk3MaEeeoYuc64YE22w" source="_2aYKiXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKfXMaEeeoYuc64YE22w" target="_2aYKnXMaEeeoYuc64YE22w" source="_2aYKiXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKfnMaEeeoYuc64YE22w" target="_2aYKpHMaEeeoYuc64YE22w" source="_2aYKoHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKf3MaEeeoYuc64YE22w" target="_2aYKsHMaEeeoYuc64YE22w" source="_2aYKp3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKgHMaEeeoYuc64YE22w" target="_2aYKtnMaEeeoYuc64YE22w" source="_2aYKq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKgXMaEeeoYuc64YE22w" target="_2aYKunMaEeeoYuc64YE22w" source="_2aYKuXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKgnMaEeeoYuc64YE22w" target="_2aYKunMaEeeoYuc64YE22w" source="_2aYKs3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYKg3MaEeeoYuc64YE22w" target="_2aYKinMaEeeoYuc64YE22w" source="_2aYKunMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYKhHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYKhXMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2aYKhnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYKe3MaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKh3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKiHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYKiXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYKe3MaEeeoYuc64YE22w" outgoing="_2aYKfHMaEeeoYuc64YE22w _2aYKfXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKinMaEeeoYuc64YE22w" name="Initialization" incoming="_2aYKg3MaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYKi3MaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYKjHMaEeeoYuc64YE22w" target="_2aYKmXMaEeeoYuc64YE22w" source="_2aYKjnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYKjXMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_2aYKjnMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2aYKjHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKj3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKkHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYKkXMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2aYKknMaEeeoYuc64YE22w" name="Write(Customer$initializationFlag$1)" structuralFeature="_2aYKBXMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2aYKk3MaEeeoYuc64YE22w" name="Write(Customer$initializationFlag$1).object" incoming="_2aYKfHMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKlHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKlXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2aYKlnMaEeeoYuc64YE22w" name="Write(Customer$initializationFlag$1).result" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKl3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKmHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2aYKmXMaEeeoYuc64YE22w" name="Write(Customer$initializationFlag$1).value" incoming="_2aYKjHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKmnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKm3MaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYKnHMaEeeoYuc64YE22w" name="Read(Customer$initializationFlag$1)" structuralFeature="_2aYKBXMaEeeoYuc64YE22w">
              <object xmi:id="_2aYKnXMaEeeoYuc64YE22w" name="Read(Customer$initializationFlag$1).object" incoming="_2aYKfXMaEeeoYuc64YE22w" type="_2aYKBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKnnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKn3MaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2aYKoHMaEeeoYuc64YE22w" name="Read(Customer$initializationFlag$1).result" outgoing="_2aYKfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKoXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKonMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYKo3MaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2aYKpHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYKfnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKpXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKpnMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYKp3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYKf3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKqHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKqXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYKqnMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2aYKq3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYKgHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKrHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKrXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aYKrnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYKr3MaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2aYKsHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYKf3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKsXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKsnMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aYKs3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYKgnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKtHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKtXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aYKtnMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYKgHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKt3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKuHMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2aYKuXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYKgXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYKunMaEeeoYuc64YE22w" name="Decision(Test(Customer$initializationFlag$1))" incoming="_2aYKgXMaEeeoYuc64YE22w _2aYKgnMaEeeoYuc64YE22w" outgoing="_2aYKg3MaEeeoYuc64YE22w" decisionInputFlow="_2aYKgnMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2aYKu3MaEeeoYuc64YE22w" name="Customer$initialization$1" visibility="protected" method="_2aYKeXMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_2aYKvHMaEeeoYuc64YE22w" name="Customer" visibility="public" method="_2aYKC3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2aYKvXMaEeeoYuc64YE22w" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKvnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKv3MaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2aYKwHMaEeeoYuc64YE22w" name="" visibility="package" type="_2aYKBHMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKwXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKwnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2aYKw3MaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2aYKd3MaEeeoYuc64YE22w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2aYKxHMaEeeoYuc64YE22w" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_2aYKxXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aYKxnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aYKx3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aYKyHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aYKyXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_2aYKynMaEeeoYuc64YE22w" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKy3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKzHMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2aYKzXMaEeeoYuc64YE22w" name="tester" visibility="private" type="_2aYuEnMaEeeoYuc64YE22w">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYKznMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYKz3MaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYK0HMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2aYuCXMaEeeoYuc64YE22w" node="_2aYK0XMaEeeoYuc64YE22w" group="_2aYK0XMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2aYK0XMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYK0nMaEeeoYuc64YE22w" name="done$method$1" specification="_2aYuCnMaEeeoYuc64YE22w" node="_2aYK03MaEeeoYuc64YE22w" group="_2aYK03MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2aYK03MaEeeoYuc64YE22w" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYK1HMaEeeoYuc64YE22w" target="_2aYK5XMaEeeoYuc64YE22w" source="_2aYK1XMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYK1XMaEeeoYuc64YE22w" name="ExpressionStatement@920822e" outgoing="_2aYK1HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYK1nMaEeeoYuc64YE22w" target="_2aYK2XMaEeeoYuc64YE22w" source="_2aYK4XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYK13MaEeeoYuc64YE22w" target="_2aYK2HMaEeeoYuc64YE22w" source="_2aYK33MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYK2HMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_2aYK13MaEeeoYuc64YE22w">
              <argument xmi:id="_2aYK2XMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_2aYK1nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK2nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK23MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYK3HMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK3XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK3nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYK33MaEeeoYuc64YE22w" name="Tuple@197298ef" outgoing="_2aYK13MaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYK4HMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_2aYK4XMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;).result" outgoing="_2aYK1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK4nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK43MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2aYK5HMaEeeoYuc64YE22w" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYK5XMaEeeoYuc64YE22w" name="ExpressionStatement@53944290" incoming="_2aYK1HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYK5nMaEeeoYuc64YE22w" target="_2aYK7nMaEeeoYuc64YE22w" source="_2aYK-nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYK53MaEeeoYuc64YE22w" target="_2aYK6HMaEeeoYuc64YE22w" source="_2aYK73MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_2aYK6HMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue))" incoming="_2aYK53MaEeeoYuc64YE22w" mode="parallel" inputElement="_2aYK7nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYK6XMaEeeoYuc64YE22w" target="_2aYK63MaEeeoYuc64YE22w" source="_2aYK7nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2aYK6nMaEeeoYuc64YE22w" name="SendSignal(Continue)" signal="_2aYum3MaEeeoYuc64YE22w">
                <target xmi:id="_2aYK63MaEeeoYuc64YE22w" name="SendSignal(Continue).target" incoming="_2aYK6XMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK7HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK7XMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_2aYK7nMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue)).inputElement" incoming="_2aYK5nMaEeeoYuc64YE22w" outgoing="_2aYK6XMaEeeoYuc64YE22w" regionAsInput="_2aYK6HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYK73MaEeeoYuc64YE22w" name="Feature(Read(tester).result)" outgoing="_2aYK53MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYK8HMaEeeoYuc64YE22w" target="_2aYK_XMaEeeoYuc64YE22w" source="_2aYK83MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYK8XMaEeeoYuc64YE22w" target="_2aYK93MaEeeoYuc64YE22w" source="_2aYK_XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYK8nMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2aYK83MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYK8HMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK9HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK9XMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYK9nMaEeeoYuc64YE22w" name="Read(tester)" structuralFeature="_2aYKzXMaEeeoYuc64YE22w">
                <object xmi:id="_2aYK93MaEeeoYuc64YE22w" name="Read(tester).object" incoming="_2aYK8XMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK-HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK-XMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2aYK-nMaEeeoYuc64YE22w" name="Read(tester).result" outgoing="_2aYK5nMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYK-3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYK_HMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2aYK_XMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYK8HMaEeeoYuc64YE22w" outgoing="_2aYK8XMaEeeoYuc64YE22w"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYK_nMaEeeoYuc64YE22w" name="Test$method$1" specification="_2aYuC3MaEeeoYuc64YE22w" node="_2aYLCnMaEeeoYuc64YE22w _2aYLDXMaEeeoYuc64YE22w _2aYLC3MaEeeoYuc64YE22w _2aYLE3MaEeeoYuc64YE22w _2aYLDHMaEeeoYuc64YE22w" group="_2aYLDXMaEeeoYuc64YE22w _2aYLE3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aYK_3MaEeeoYuc64YE22w" name="tester" type="_2aYuEnMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLAHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLAXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYLAnMaEeeoYuc64YE22w" name="" type="_2aYKxHMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLA3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLBHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLBXMaEeeoYuc64YE22w" target="_2aYLD3MaEeeoYuc64YE22w" source="_2aYLCnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLBnMaEeeoYuc64YE22w" target="_2aYLMXMaEeeoYuc64YE22w" source="_2aYLEnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLB3MaEeeoYuc64YE22w" target="_2aYLC3MaEeeoYuc64YE22w" source="_2aYLTXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLCHMaEeeoYuc64YE22w" target="_2aYLDHMaEeeoYuc64YE22w" source="_2aYLDXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLCXMaEeeoYuc64YE22w" target="_2aYLE3MaEeeoYuc64YE22w" source="_2aYLDHMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2aYLDXMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_2aYLCHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLDnMaEeeoYuc64YE22w" target="_2aYLEnMaEeeoYuc64YE22w" source="_2aYLD3MaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_2aYLD3MaEeeoYuc64YE22w" name="Input(tester)" incoming="_2aYLBXMaEeeoYuc64YE22w" outgoing="_2aYLDnMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLEHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLEXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYLEnMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_2aYLDnMaEeeoYuc64YE22w" outgoing="_2aYLBnMaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_2aYLE3MaEeeoYuc64YE22w" name="Body(Test$method$1)" incoming="_2aYLCXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLFHMaEeeoYuc64YE22w" target="_2aYLTXMaEeeoYuc64YE22w" source="_2aYLSnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLFXMaEeeoYuc64YE22w" target="_2aYLT3MaEeeoYuc64YE22w" source="_2aYLTXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLFnMaEeeoYuc64YE22w" target="_2aYLH3MaEeeoYuc64YE22w" source="_2aYLTnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLF3MaEeeoYuc64YE22w" target="_2aYLU3MaEeeoYuc64YE22w" source="_2aYLTXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLGHMaEeeoYuc64YE22w" target="_2aYLWnMaEeeoYuc64YE22w" source="_2aYLVnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLGXMaEeeoYuc64YE22w" target="_2aYLZnMaEeeoYuc64YE22w" source="_2aYLXXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLGnMaEeeoYuc64YE22w" target="_2aYLbHMaEeeoYuc64YE22w" source="_2aYLYXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLG3MaEeeoYuc64YE22w" target="_2aYLcHMaEeeoYuc64YE22w" source="_2aYLb3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLHHMaEeeoYuc64YE22w" target="_2aYLcHMaEeeoYuc64YE22w" source="_2aYLaXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLHXMaEeeoYuc64YE22w" target="_2aYLTnMaEeeoYuc64YE22w" source="_2aYLcHMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYLHnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLH3MaEeeoYuc64YE22w" name="Body" incoming="_2aYLFnMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLIHMaEeeoYuc64YE22w" name="ExpressionStatement@19bf683c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLIXMaEeeoYuc64YE22w" target="_2aYLK3MaEeeoYuc64YE22w" source="_2aYLJ3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLInMaEeeoYuc64YE22w" target="_2aYLNHMaEeeoYuc64YE22w" source="_2aYLMXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLI3MaEeeoYuc64YE22w" target="_2aYLOnMaEeeoYuc64YE22w" source="_2aYLLnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLJHMaEeeoYuc64YE22w" target="_2aYLJXMaEeeoYuc64YE22w" source="_2aYLSHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLJXMaEeeoYuc64YE22w" name="Expression(LeftHandSide@14fcc063)" incoming="_2aYLJHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYLJnMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_2aYLJ3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYLIXMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLKHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLKXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2aYLKnMaEeeoYuc64YE22w" name="Clear(tester)" structuralFeature="_2aYKzXMaEeeoYuc64YE22w">
                <object xmi:id="_2aYLK3MaEeeoYuc64YE22w" name="Clear(tester).object" incoming="_2aYLIXMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLLHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLLXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2aYLLnMaEeeoYuc64YE22w" name="Clear(tester).result" outgoing="_2aYLI3MaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLL3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLMHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2aYLMXMaEeeoYuc64YE22w" name="Fork(LeftHandSide@14fcc063)" incoming="_2aYLBnMaEeeoYuc64YE22w" outgoing="_2aYLInMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLMnMaEeeoYuc64YE22w" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLM3MaEeeoYuc64YE22w" target="_2aYLR3MaEeeoYuc64YE22w" source="_2aYLNHMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2aYLNHMaEeeoYuc64YE22w" name="WriteAll(Test::tester).input(Test::tester)" incoming="_2aYLInMaEeeoYuc64YE22w" outgoing="_2aYLM3MaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLNXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLNnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2aYLN3MaEeeoYuc64YE22w" name="Iterate(Write(tester))" inputElement="_2aYLR3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLOHMaEeeoYuc64YE22w" target="_2aYLRHMaEeeoYuc64YE22w" source="_2aYLR3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLOXMaEeeoYuc64YE22w" target="_2aYLPnMaEeeoYuc64YE22w" source="_2aYLOnMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2aYLOnMaEeeoYuc64YE22w" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_2aYLI3MaEeeoYuc64YE22w" outgoing="_2aYLOXMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLO3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLPHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2aYLPXMaEeeoYuc64YE22w" name="Write(tester)" structuralFeature="_2aYKzXMaEeeoYuc64YE22w">
                    <object xmi:id="_2aYLPnMaEeeoYuc64YE22w" name="Write(tester).object" incoming="_2aYLOXMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLP3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLQHMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2aYLQXMaEeeoYuc64YE22w" name="Write(tester).result" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLQnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLQ3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2aYLRHMaEeeoYuc64YE22w" name="Write(tester).value" incoming="_2aYLOHMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLRXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLRnMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2aYLR3MaEeeoYuc64YE22w" name="Iterate(Write(tester)).inputElement" incoming="_2aYLM3MaEeeoYuc64YE22w" outgoing="_2aYLOHMaEeeoYuc64YE22w" regionAsInput="_2aYLN3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLSHMaEeeoYuc64YE22w" name="RightHandSide@45ab4b36" outgoing="_2aYLJHMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYLSXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2aYLSnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYLFHMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLS3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLTHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYLTXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYLFHMaEeeoYuc64YE22w" outgoing="_2aYLB3MaEeeoYuc64YE22w _2aYLFXMaEeeoYuc64YE22w _2aYLF3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2aYLTnMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" incoming="_2aYLHXMaEeeoYuc64YE22w" outgoing="_2aYLFnMaEeeoYuc64YE22w" operation="_2aYuCHMaEeeoYuc64YE22w">
            <target xmi:id="_2aYLT3MaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_2aYLFXMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLUHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLUXMaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYLUnMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_2aYKynMaEeeoYuc64YE22w">
            <object xmi:id="_2aYLU3MaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_2aYLF3MaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLVHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLVXMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2aYLVnMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_2aYLGHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLV3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLWHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYLWXMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2aYLWnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYLGHMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLW3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLXHMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2aYLXXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYLGXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLXnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLX3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYLYHMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2aYLYXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYLGnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLYnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLY3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2aYLZHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYLZXMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2aYLZnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYLGXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLZ3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLaHMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2aYLaXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYLHHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLanMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLa3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2aYLbHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYLGnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLbXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLbnMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2aYLb3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYLG3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2aYLcHMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_2aYLG3MaEeeoYuc64YE22w _2aYLHHMaEeeoYuc64YE22w" outgoing="_2aYLHXMaEeeoYuc64YE22w" decisionInputFlow="_2aYLHHMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYLCnMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_2aYLBXMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" parameter="_2aYK_3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYLC3MaEeeoYuc64YE22w" name="Return" incoming="_2aYLB3MaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" parameter="_2aYLAnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_2aYLDHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aYLCHMaEeeoYuc64YE22w" outgoing="_2aYLCXMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYLcXMaEeeoYuc64YE22w" name="Test$initialization$1" specification="_2aYuCHMaEeeoYuc64YE22w" node="_2aYLcnMaEeeoYuc64YE22w" group="_2aYLcnMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2aYLcnMaEeeoYuc64YE22w" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLc3MaEeeoYuc64YE22w" target="_2aYLgXMaEeeoYuc64YE22w" source="_2aYLfnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLdHMaEeeoYuc64YE22w" target="_2aYt4HMaEeeoYuc64YE22w" source="_2aYLgXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLdXMaEeeoYuc64YE22w" target="_2aYt6nMaEeeoYuc64YE22w" source="_2aYLgXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLdnMaEeeoYuc64YE22w" target="_2aYt8XMaEeeoYuc64YE22w" source="_2aYt7XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLd3MaEeeoYuc64YE22w" target="_2aYt_XMaEeeoYuc64YE22w" source="_2aYt9HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLeHMaEeeoYuc64YE22w" target="_2aYuA3MaEeeoYuc64YE22w" source="_2aYt-HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLeXMaEeeoYuc64YE22w" target="_2aYuB3MaEeeoYuc64YE22w" source="_2aYuBnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLenMaEeeoYuc64YE22w" target="_2aYuB3MaEeeoYuc64YE22w" source="_2aYuAHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYLe3MaEeeoYuc64YE22w" target="_2aYLgnMaEeeoYuc64YE22w" source="_2aYuB3MaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYLfHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYLfXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2aYLfnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYLc3MaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLf3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLgHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYLgXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYLc3MaEeeoYuc64YE22w" outgoing="_2aYLdHMaEeeoYuc64YE22w _2aYLdXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLgnMaEeeoYuc64YE22w" name="Initialization" incoming="_2aYLe3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYLg3MaEeeoYuc64YE22w" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYLhHMaEeeoYuc64YE22w" target="_2aYt5nMaEeeoYuc64YE22w" source="_2aYLhnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYLhXMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_2aYLhnMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2aYLhHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYLh3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYLiHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYLiXMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2aYLinMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1)" structuralFeature="_2aYKynMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_2aYt4HMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).object" incoming="_2aYLdHMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt4XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt4nMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2aYt43MaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).result" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt5HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt5XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_2aYt5nMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).value" incoming="_2aYLhHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt53MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt6HMaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYt6XMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_2aYKynMaEeeoYuc64YE22w">
            <object xmi:id="_2aYt6nMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_2aYLdXMaEeeoYuc64YE22w" type="_2aYKxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt63MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt7HMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2aYt7XMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_2aYLdnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt7nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt73MaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYt8HMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2aYt8XMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYLdnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt8nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt83MaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2aYt9HMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYLd3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt9XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt9nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYt93MaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2aYt-HMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYLeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt-XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt-nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2aYt-3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYt_HMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2aYt_XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYLd3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYt_nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYt_3MaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2aYuAHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYLenMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuAXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuAnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2aYuA3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYLeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuBHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuBXMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2aYuBnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYLeXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2aYuB3MaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_2aYLeXMaEeeoYuc64YE22w _2aYLenMaEeeoYuc64YE22w" outgoing="_2aYLe3MaEeeoYuc64YE22w" decisionInputFlow="_2aYLenMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2aYuCHMaEeeoYuc64YE22w" name="Test$initialization$1" visibility="protected" method="_2aYLcXMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2aYuCXMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2aYK0HMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2aYuCnMaEeeoYuc64YE22w" name="done" visibility="public" method="_2aYK0nMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2aYuC3MaEeeoYuc64YE22w" name="Test" visibility="protected" method="_2aYK_nMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2aYuDHMaEeeoYuc64YE22w" name="tester" visibility="package" type="_2aYuEnMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuDXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuDnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2aYuD3MaEeeoYuc64YE22w" name="" visibility="package" type="_2aYKxHMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuEHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuEXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2aYuEnMaEeeoYuc64YE22w" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2aYuE3MaEeeoYuc64YE22w" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuFHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuFXMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYuFnMaEeeoYuc64YE22w" name="Tester$method$1" specification="_2aYulnMaEeeoYuc64YE22w" node="_2aYuG3MaEeeoYuc64YE22w _2aYuHHMaEeeoYuc64YE22w" group="_2aYuHHMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2aYuF3MaEeeoYuc64YE22w" name="" type="_2aYuEnMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuGHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuGXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuGnMaEeeoYuc64YE22w" target="_2aYuG3MaEeeoYuc64YE22w" source="_2aYuLXMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2aYuHHMaEeeoYuc64YE22w" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuHXMaEeeoYuc64YE22w" target="_2aYuLXMaEeeoYuc64YE22w" source="_2aYuKnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuHnMaEeeoYuc64YE22w" target="_2aYuL3MaEeeoYuc64YE22w" source="_2aYuLXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYuH3MaEeeoYuc64YE22w" target="_2aYuKHMaEeeoYuc64YE22w" source="_2aYuLnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuIHMaEeeoYuc64YE22w" target="_2aYuM3MaEeeoYuc64YE22w" source="_2aYuLXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuIXMaEeeoYuc64YE22w" target="_2aYuOnMaEeeoYuc64YE22w" source="_2aYuNnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuInMaEeeoYuc64YE22w" target="_2aYuRnMaEeeoYuc64YE22w" source="_2aYuPXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuI3MaEeeoYuc64YE22w" target="_2aYuTHMaEeeoYuc64YE22w" source="_2aYuQXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYuJHMaEeeoYuc64YE22w" target="_2aYuUHMaEeeoYuc64YE22w" source="_2aYuT3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuJXMaEeeoYuc64YE22w" target="_2aYuUHMaEeeoYuc64YE22w" source="_2aYuSXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYuJnMaEeeoYuc64YE22w" target="_2aYuLnMaEeeoYuc64YE22w" source="_2aYuUHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYuJ3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYuKHMaEeeoYuc64YE22w" name="Body" incoming="_2aYuH3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYuKXMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2aYuKnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYuHXMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuK3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuLHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYuLXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYuHXMaEeeoYuc64YE22w" outgoing="_2aYuGnMaEeeoYuc64YE22w _2aYuHnMaEeeoYuc64YE22w _2aYuIHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2aYuLnMaEeeoYuc64YE22w" name="Call(Tester$initialization$1)" incoming="_2aYuJnMaEeeoYuc64YE22w" outgoing="_2aYuH3MaEeeoYuc64YE22w" operation="_2aYulXMaEeeoYuc64YE22w">
              <target xmi:id="_2aYuL3MaEeeoYuc64YE22w" name="Call(Tester$initialization$1).target" incoming="_2aYuHnMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuMHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuMXMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYuMnMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_2aYuE3MaEeeoYuc64YE22w">
              <object xmi:id="_2aYuM3MaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_2aYuIHMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuNHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuNXMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2aYuNnMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_2aYuIXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuN3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuOHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYuOXMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2aYuOnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYuIXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuO3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuPHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYuPXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYuInMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuPnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuP3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYuQHMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2aYuQXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYuI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuQnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuQ3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aYuRHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYuRXMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2aYuRnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYuInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuR3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuSHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aYuSXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYuJXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuSnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuS3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aYuTHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYuI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuTXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuTnMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2aYuT3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYuJHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYuUHMaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2aYuJHMaEeeoYuc64YE22w _2aYuJXMaEeeoYuc64YE22w" outgoing="_2aYuJnMaEeeoYuc64YE22w" decisionInputFlow="_2aYuJXMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYuG3MaEeeoYuc64YE22w" name="Return" incoming="_2aYuGnMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" parameter="_2aYuF3MaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYuUXMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2aYumnMaEeeoYuc64YE22w" node="_2aYuUnMaEeeoYuc64YE22w" group="_2aYuUnMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2aYuUnMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2aYuU3MaEeeoYuc64YE22w" name="Tester$initialization$1" specification="_2aYulXMaEeeoYuc64YE22w" node="_2aYuVHMaEeeoYuc64YE22w" group="_2aYuVHMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2aYuVHMaEeeoYuc64YE22w" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuVXMaEeeoYuc64YE22w" target="_2aYuY3MaEeeoYuc64YE22w" source="_2aYuYHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuVnMaEeeoYuc64YE22w" target="_2aYubXMaEeeoYuc64YE22w" source="_2aYuY3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuV3MaEeeoYuc64YE22w" target="_2aYud3MaEeeoYuc64YE22w" source="_2aYuY3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuWHMaEeeoYuc64YE22w" target="_2aYufnMaEeeoYuc64YE22w" source="_2aYuenMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuWXMaEeeoYuc64YE22w" target="_2aYuinMaEeeoYuc64YE22w" source="_2aYugXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuWnMaEeeoYuc64YE22w" target="_2aYukHMaEeeoYuc64YE22w" source="_2aYuhXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYuW3MaEeeoYuc64YE22w" target="_2aYulHMaEeeoYuc64YE22w" source="_2aYuk3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuXHMaEeeoYuc64YE22w" target="_2aYulHMaEeeoYuc64YE22w" source="_2aYujXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYuXXMaEeeoYuc64YE22w" target="_2aYuZHMaEeeoYuc64YE22w" source="_2aYulHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYuXnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2aYuX3MaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2aYuYHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2aYuVXMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuYXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuYnMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYuY3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2aYuVXMaEeeoYuc64YE22w" outgoing="_2aYuVnMaEeeoYuc64YE22w _2aYuV3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYuZHMaEeeoYuc64YE22w" name="Initialization" incoming="_2aYuXXMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYuZXMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuZnMaEeeoYuc64YE22w" target="_2aYuc3MaEeeoYuc64YE22w" source="_2aYuaHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYuZ3MaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_2aYuaHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2aYuZnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuaXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuanMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYua3MaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2aYubHMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1)" structuralFeature="_2aYuE3MaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2aYubXMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).object" incoming="_2aYuVnMaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYubnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYub3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2aYucHMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).result" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYucXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYucnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2aYuc3MaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).value" incoming="_2aYuZnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYudHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYudXMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2aYudnMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_2aYuE3MaEeeoYuc64YE22w">
              <object xmi:id="_2aYud3MaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_2aYuV3MaEeeoYuc64YE22w" type="_2aYuEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYueHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYueXMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2aYuenMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_2aYuWHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYue3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYufHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYufXMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2aYufnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2aYuWHMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuf3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYugHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYugXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2aYuWXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYugnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYug3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYuhHMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2aYuhXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2aYuWnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuhnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuh3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aYuiHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYuiXMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2aYuinMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2aYuWXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYui3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYujHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aYujXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2aYuXHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYujnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuj3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aYukHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2aYuWnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYukXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuknMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2aYuk3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_2aYuW3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYulHMaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2aYuW3MaEeeoYuc64YE22w _2aYuXHMaEeeoYuc64YE22w" outgoing="_2aYuXXMaEeeoYuc64YE22w" decisionInputFlow="_2aYuXHMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2aYulXMaEeeoYuc64YE22w" name="Tester$initialization$1" visibility="protected" method="_2aYuU3MaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_2aYulnMaEeeoYuc64YE22w" name="Tester" visibility="public" method="_2aYuFnMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2aYul3MaEeeoYuc64YE22w" name="" visibility="package" type="_2aYuEnMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYumHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYumXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2aYumnMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2aYuUXMaEeeoYuc64YE22w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2aYum3MaEeeoYuc64YE22w" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_2aYunHMaEeeoYuc64YE22w" name="Continue" signal="_2aYum3MaEeeoYuc64YE22w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2aYunXMaEeeoYuc64YE22w" name="AssertFalse" visibility="public" node="_2aYusXMaEeeoYuc64YE22w _2aYutHMaEeeoYuc64YE22w _2aYusnMaEeeoYuc64YE22w _2aYuunMaEeeoYuc64YE22w _2aYuwHMaEeeoYuc64YE22w _2aYus3MaEeeoYuc64YE22w" group="_2aYutHMaEeeoYuc64YE22w _2aYuunMaEeeoYuc64YE22w _2aYuwHMaEeeoYuc64YE22w">
      <elementImport xmi:id="_2aYunnMaEeeoYuc64YE22w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_2aYun3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aYuoHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aYuoXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aYuonMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aYuo3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2aYupHMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYupXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYupnMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2aYup3MaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuqHMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuqXMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuqnMaEeeoYuc64YE22w" target="_2aYutnMaEeeoYuc64YE22w" source="_2aYusXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuq3MaEeeoYuc64YE22w" target="_2aYuvHMaEeeoYuc64YE22w" source="_2aYusnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYurHMaEeeoYuc64YE22w" target="_2aYu5XMaEeeoYuc64YE22w" source="_2aYuuXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYurXMaEeeoYuc64YE22w" target="_2aYu-nMaEeeoYuc64YE22w" source="_2aYuv3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYurnMaEeeoYuc64YE22w" target="_2aYus3MaEeeoYuc64YE22w" source="_2aYutHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYur3MaEeeoYuc64YE22w" target="_2aYus3MaEeeoYuc64YE22w" source="_2aYuunMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYusHMaEeeoYuc64YE22w" target="_2aYuwHMaEeeoYuc64YE22w" source="_2aYus3MaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2aYutHMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2aYurnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYutXMaEeeoYuc64YE22w" target="_2aYuuXMaEeeoYuc64YE22w" source="_2aYutnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYutnMaEeeoYuc64YE22w" name="Input(label)" incoming="_2aYuqnMaEeeoYuc64YE22w" outgoing="_2aYutXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYut3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuuHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYuuXMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aYutXMaEeeoYuc64YE22w" outgoing="_2aYurHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYuunMaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_2aYur3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuu3MaEeeoYuc64YE22w" target="_2aYuv3MaEeeoYuc64YE22w" source="_2aYuvHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYuvHMaEeeoYuc64YE22w" name="Input(condition)" incoming="_2aYuq3MaEeeoYuc64YE22w" outgoing="_2aYuu3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuvXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuvnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYuv3MaEeeoYuc64YE22w" name="Fork(condition)" incoming="_2aYuu3MaEeeoYuc64YE22w" outgoing="_2aYurXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYuwHMaEeeoYuc64YE22w" name="Body(AssertFalse)" incoming="_2aYusHMaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYuwXMaEeeoYuc64YE22w" name="ExpressionStatement@78b28970">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuwnMaEeeoYuc64YE22w" target="_2aYuxnMaEeeoYuc64YE22w" source="_2aYu3nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuw3MaEeeoYuc64YE22w" target="_2aYuyXMaEeeoYuc64YE22w" source="_2aYvA3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYuxHMaEeeoYuc64YE22w" target="_2aYuxXMaEeeoYuc64YE22w" source="_2aYuzHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYuxXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2aYuxHMaEeeoYuc64YE22w" behavior="_2aZVInMaEeeoYuc64YE22w">
            <argument xmi:id="_2aYuxnMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2aYuwnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYux3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuyHMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_2aYuyXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2aYuw3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYuynMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYuy3MaEeeoYuc64YE22w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYuzHMaEeeoYuc64YE22w" name="Tuple@144d887b" outgoing="_2aYuxHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuzXMaEeeoYuc64YE22w" target="_2aYu4nMaEeeoYuc64YE22w" source="_2aYu2HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuznMaEeeoYuc64YE22w" target="_2aYu8XMaEeeoYuc64YE22w" source="_2aYu-nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYuz3MaEeeoYuc64YE22w" target="_2aYu_HMaEeeoYuc64YE22w" source="_2aYu-nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu0HMaEeeoYuc64YE22w" target="_2aYvAnMaEeeoYuc64YE22w" source="_2aYu_3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu0XMaEeeoYuc64YE22w" target="_2aYvA3MaEeeoYuc64YE22w" source="_2aYu9HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu0nMaEeeoYuc64YE22w" target="_2aYvBHMaEeeoYuc64YE22w" source="_2aYvAnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu03MaEeeoYuc64YE22w" target="_2aYvBHMaEeeoYuc64YE22w" source="_2aYvAnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu1HMaEeeoYuc64YE22w" target="_2aYvA3MaEeeoYuc64YE22w" source="_2aYvBHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYu1XMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu1nMaEeeoYuc64YE22w" target="_2aYu93MaEeeoYuc64YE22w" source="_2aYu7HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYu13MaEeeoYuc64YE22w" name="Value(&quot;! &quot;)">
              <result xmi:id="_2aYu2HMaEeeoYuc64YE22w" name="Value(&quot;! &quot;).result" outgoing="_2aYuzXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu2XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu2nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2aYu23MaEeeoYuc64YE22w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYu3HMaEeeoYuc64YE22w" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYu3XMaEeeoYuc64YE22w" target="_2aYu3nMaEeeoYuc64YE22w" source="_2aYu6HMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYu3nMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYu3XMaEeeoYuc64YE22w" outgoing="_2aYuwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu33MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu4HMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYu4XMaEeeoYuc64YE22w" name="Call(Concat)">
                <argument xmi:id="_2aYu4nMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYuzXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu43MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu5HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYu5XMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYurHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu5nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu53MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYu6HMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYu3XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu6XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu6nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYu63MaEeeoYuc64YE22w" name="Value(false)">
              <result xmi:id="_2aYu7HMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_2aYu1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu7XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu7nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYu73MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYu8HMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_2aYu8XMaEeeoYuc64YE22w" name="Test(==).first" incoming="_2aYuznMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu8nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu83MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aYu9HMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_2aYu0XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu9XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu9nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aYu93MaEeeoYuc64YE22w" name="Test(==).second" incoming="_2aYu1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu-HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu-XMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYu-nMaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_2aYurXMaEeeoYuc64YE22w" outgoing="_2aYuznMaEeeoYuc64YE22w _2aYuz3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYu-3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2aYu_HMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aYuz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYu_XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYu_nMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYu_3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aYu0HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvAHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvAXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYvAnMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2aYu0HMaEeeoYuc64YE22w" outgoing="_2aYu0nMaEeeoYuc64YE22w _2aYu03MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2aYvA3MaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2aYu0XMaEeeoYuc64YE22w _2aYu1HMaEeeoYuc64YE22w" outgoing="_2aYuw3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYvBHMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2aYu0nMaEeeoYuc64YE22w _2aYu03MaEeeoYuc64YE22w" outgoing="_2aYu1HMaEeeoYuc64YE22w" decisionInputFlow="_2aYu03MaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYusXMaEeeoYuc64YE22w" name="Input(label)" outgoing="_2aYuqnMaEeeoYuc64YE22w" parameter="_2aYupHMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYusnMaEeeoYuc64YE22w" name="Input(condition)" outgoing="_2aYuq3MaEeeoYuc64YE22w" parameter="_2aYup3MaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_2aYus3MaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aYurnMaEeeoYuc64YE22w _2aYur3MaEeeoYuc64YE22w" outgoing="_2aYusHMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2aYvBXMaEeeoYuc64YE22w" name="AssertEqual" visibility="public" node="_2aYvKXMaEeeoYuc64YE22w _2aYvLXMaEeeoYuc64YE22w _2aYvKnMaEeeoYuc64YE22w _2aYvM3MaEeeoYuc64YE22w _2aYvK3MaEeeoYuc64YE22w _2aYvOXMaEeeoYuc64YE22w _2aYvP3MaEeeoYuc64YE22w _2aYvLHMaEeeoYuc64YE22w" group="_2aYvLXMaEeeoYuc64YE22w _2aYvM3MaEeeoYuc64YE22w _2aYvOXMaEeeoYuc64YE22w _2aYvP3MaEeeoYuc64YE22w">
      <packageImport xmi:id="_2aYvBnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aYvB3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aYvCHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aYvCXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aYvCnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2aYvC3MaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvDHMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvDXMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2aYvDnMaEeeoYuc64YE22w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvD3MaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvEHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2aYvEXMaEeeoYuc64YE22w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvEnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvE3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvFHMaEeeoYuc64YE22w" target="_2aYvL3MaEeeoYuc64YE22w" source="_2aYvKXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvFXMaEeeoYuc64YE22w" target="_2aYvNXMaEeeoYuc64YE22w" source="_2aYvKnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvFnMaEeeoYuc64YE22w" target="_2aYvO3MaEeeoYuc64YE22w" source="_2aYvK3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvF3MaEeeoYuc64YE22w" target="_2aYvdnMaEeeoYuc64YE22w" source="_2aYvOHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvGHMaEeeoYuc64YE22w" target="_2aYvfnMaEeeoYuc64YE22w" source="_2aYvPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvGXMaEeeoYuc64YE22w" target="_2aYvunMaEeeoYuc64YE22w" source="_2aYvMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvGnMaEeeoYuc64YE22w" target="_2aYv6nMaEeeoYuc64YE22w" source="_2aYvPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvG3MaEeeoYuc64YE22w" target="_2aYwMXMaEeeoYuc64YE22w" source="_2aYvMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvHHMaEeeoYuc64YE22w" target="_2aYwQXMaEeeoYuc64YE22w" source="_2aYvPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvHXMaEeeoYuc64YE22w" target="_2aYwSXMaEeeoYuc64YE22w" source="_2aYvOHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvHnMaEeeoYuc64YE22w" target="_2aYwaHMaEeeoYuc64YE22w" source="_2aYvPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvH3MaEeeoYuc64YE22w" target="_2aYwi3MaEeeoYuc64YE22w" source="_2aYvMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvIHMaEeeoYuc64YE22w" target="_2aYwm3MaEeeoYuc64YE22w" source="_2aYvPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvIXMaEeeoYuc64YE22w" target="_2aYwo3MaEeeoYuc64YE22w" source="_2aYvOHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvInMaEeeoYuc64YE22w" target="_2aYw8nMaEeeoYuc64YE22w" source="_2aYvMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvI3MaEeeoYuc64YE22w" target="_2aYw_3MaEeeoYuc64YE22w" source="_2aYvPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvJHMaEeeoYuc64YE22w" target="_2aYxB3MaEeeoYuc64YE22w" source="_2aYvOHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvJXMaEeeoYuc64YE22w" target="_2aYvLHMaEeeoYuc64YE22w" source="_2aYvLXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvJnMaEeeoYuc64YE22w" target="_2aYvLHMaEeeoYuc64YE22w" source="_2aYvM3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvJ3MaEeeoYuc64YE22w" target="_2aYvLHMaEeeoYuc64YE22w" source="_2aYvOXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvKHMaEeeoYuc64YE22w" target="_2aYvP3MaEeeoYuc64YE22w" source="_2aYvLHMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2aYvLXMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2aYvJXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvLnMaEeeoYuc64YE22w" target="_2aYvMnMaEeeoYuc64YE22w" source="_2aYvL3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYvL3MaEeeoYuc64YE22w" name="Input(label)" incoming="_2aYvFHMaEeeoYuc64YE22w" outgoing="_2aYvLnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvMHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvMXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYvMnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aYvLnMaEeeoYuc64YE22w" outgoing="_2aYvGXMaEeeoYuc64YE22w _2aYvG3MaEeeoYuc64YE22w _2aYvH3MaEeeoYuc64YE22w _2aYvInMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYvM3MaEeeoYuc64YE22w" name="Node(Input(value1))" outgoing="_2aYvJnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvNHMaEeeoYuc64YE22w" target="_2aYvOHMaEeeoYuc64YE22w" source="_2aYvNXMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYvNXMaEeeoYuc64YE22w" name="Input(value1)" incoming="_2aYvFXMaEeeoYuc64YE22w" outgoing="_2aYvNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvNnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvN3MaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYvOHMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_2aYvNHMaEeeoYuc64YE22w" outgoing="_2aYvF3MaEeeoYuc64YE22w _2aYvHXMaEeeoYuc64YE22w _2aYvIXMaEeeoYuc64YE22w _2aYvJHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYvOXMaEeeoYuc64YE22w" name="Node(Input(value2))" outgoing="_2aYvJ3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvOnMaEeeoYuc64YE22w" target="_2aYvPnMaEeeoYuc64YE22w" source="_2aYvO3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYvO3MaEeeoYuc64YE22w" name="Input(value2)" incoming="_2aYvFnMaEeeoYuc64YE22w" outgoing="_2aYvOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvPHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvPXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYvPnMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_2aYvOnMaEeeoYuc64YE22w" outgoing="_2aYvGHMaEeeoYuc64YE22w _2aYvGnMaEeeoYuc64YE22w _2aYvHHMaEeeoYuc64YE22w _2aYvHnMaEeeoYuc64YE22w _2aYvIHMaEeeoYuc64YE22w _2aYvI3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYvP3MaEeeoYuc64YE22w" name="Body(AssertEqual)" incoming="_2aYvKHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvQHMaEeeoYuc64YE22w" target="_2aYxG3MaEeeoYuc64YE22w" source="_2aYxD3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvQXMaEeeoYuc64YE22w" target="_2aYxHHMaEeeoYuc64YE22w" source="_2aYxEnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvQnMaEeeoYuc64YE22w" target="_2aYxHXMaEeeoYuc64YE22w" source="_2aYxFXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvQ3MaEeeoYuc64YE22w" target="_2aYxHnMaEeeoYuc64YE22w" source="_2aYxGHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2aYvRHMaEeeoYuc64YE22w" name="IfStatement@32bed2c7">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvRXMaEeeoYuc64YE22w" target="_2aYv1HMaEeeoYuc64YE22w" source="_2aYvoXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvRnMaEeeoYuc64YE22w" target="_2aYwt3MaEeeoYuc64YE22w" source="_2aYwq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvR3MaEeeoYuc64YE22w" target="_2aYwuHMaEeeoYuc64YE22w" source="_2aYwrnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvSHMaEeeoYuc64YE22w" target="_2aYwuXMaEeeoYuc64YE22w" source="_2aYwsXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvSXMaEeeoYuc64YE22w" target="_2aYwunMaEeeoYuc64YE22w" source="_2aYwtHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvSnMaEeeoYuc64YE22w" target="_2aYv9nMaEeeoYuc64YE22w" source="_2aYv1nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvS3MaEeeoYuc64YE22w" target="_2aYwFXMaEeeoYuc64YE22w" source="_2aYv1nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvTHMaEeeoYuc64YE22w" target="_2aYwOXMaEeeoYuc64YE22w" source="_2aYv1nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvTXMaEeeoYuc64YE22w" target="_2aYwk3MaEeeoYuc64YE22w" source="_2aYv1nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvTnMaEeeoYuc64YE22w" target="_2aYv7HMaEeeoYuc64YE22w" source="_2aYv1HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvT3MaEeeoYuc64YE22w" target="_2aYwu3MaEeeoYuc64YE22w" source="_2aYv7HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvUHMaEeeoYuc64YE22w" target="_2aYwzXMaEeeoYuc64YE22w" source="_2aYwt3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvUXMaEeeoYuc64YE22w" target="_2aYw1XMaEeeoYuc64YE22w" source="_2aYwuHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvUnMaEeeoYuc64YE22w" target="_2aYw3XMaEeeoYuc64YE22w" source="_2aYwuXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvU3MaEeeoYuc64YE22w" target="_2aYw5XMaEeeoYuc64YE22w" source="_2aYwunMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYvVHMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvVXMaEeeoYuc64YE22w" target="_2aYvbXMaEeeoYuc64YE22w" source="_2aYvdnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvVnMaEeeoYuc64YE22w" target="_2aYveHMaEeeoYuc64YE22w" source="_2aYvdnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvV3MaEeeoYuc64YE22w" target="_2aYvc3MaEeeoYuc64YE22w" source="_2aYvfnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvWHMaEeeoYuc64YE22w" target="_2aYvgHMaEeeoYuc64YE22w" source="_2aYvfnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvWXMaEeeoYuc64YE22w" target="_2aYvh3MaEeeoYuc64YE22w" source="_2aYve3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvWnMaEeeoYuc64YE22w" target="_2aYviHMaEeeoYuc64YE22w" source="_2aYvg3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvW3MaEeeoYuc64YE22w" target="_2aYvinMaEeeoYuc64YE22w" source="_2aYvh3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvXHMaEeeoYuc64YE22w" target="_2aYvkXMaEeeoYuc64YE22w" source="_2aYviHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvXXMaEeeoYuc64YE22w" target="_2aYvl3MaEeeoYuc64YE22w" source="_2aYviHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvXnMaEeeoYuc64YE22w" target="_2aYvbHMaEeeoYuc64YE22w" source="_2aYvl3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYvX3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvYHMaEeeoYuc64YE22w" target="_2aYviXMaEeeoYuc64YE22w" source="_2aYvl3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYvYXMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvYnMaEeeoYuc64YE22w" target="_2aYvmHMaEeeoYuc64YE22w" source="_2aYvhnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvY3MaEeeoYuc64YE22w" target="_2aYvmHMaEeeoYuc64YE22w" source="_2aYvh3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvZHMaEeeoYuc64YE22w" target="_2aYvl3MaEeeoYuc64YE22w" source="_2aYvmHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYvZXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvZnMaEeeoYuc64YE22w" target="_2aYvkHMaEeeoYuc64YE22w" source="_2aYvmHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYvZ3MaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvaHMaEeeoYuc64YE22w" target="_2aYvmXMaEeeoYuc64YE22w" source="_2aYvcHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvaXMaEeeoYuc64YE22w" target="_2aYvmXMaEeeoYuc64YE22w" source="_2aYvjXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvanMaEeeoYuc64YE22w" target="_2aYvmXMaEeeoYuc64YE22w" source="_2aYvlHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYva3MaEeeoYuc64YE22w" target="_2aYvm3MaEeeoYuc64YE22w" source="_2aYvmXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aYvbHMaEeeoYuc64YE22w" name="Test(==)" incoming="_2aYvXnMaEeeoYuc64YE22w">
              <first xmi:id="_2aYvbXMaEeeoYuc64YE22w" name="Test(==).first" incoming="_2aYvVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvbnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvb3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aYvcHMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_2aYvaHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvcXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvcnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aYvc3MaEeeoYuc64YE22w" name="Test(==).second" incoming="_2aYvV3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvdHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvdXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYvdnMaEeeoYuc64YE22w" name="Fork(Fork(value1))" incoming="_2aYvF3MaEeeoYuc64YE22w" outgoing="_2aYvVXMaEeeoYuc64YE22w _2aYvVnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvd3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2aYveHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aYvVnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYveXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvenMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYve3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aYvWXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvfHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvfXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYvfnMaEeeoYuc64YE22w" name="Fork(Fork(value2))" incoming="_2aYvGHMaEeeoYuc64YE22w" outgoing="_2aYvV3MaEeeoYuc64YE22w _2aYvWHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvf3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2aYvgHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aYvWHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvgXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvgnMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aYvg3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aYvWnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvhHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvhXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2aYvhnMaEeeoYuc64YE22w" name="Initial(Test(==))" outgoing="_2aYvYnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYvh3MaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2aYvWXMaEeeoYuc64YE22w" outgoing="_2aYvW3MaEeeoYuc64YE22w _2aYvY3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYviHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2aYvWnMaEeeoYuc64YE22w" outgoing="_2aYvXHMaEeeoYuc64YE22w _2aYvXXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYviXMaEeeoYuc64YE22w" name="Call(Not)" incoming="_2aYvYHMaEeeoYuc64YE22w">
              <argument xmi:id="_2aYvinMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2aYvW3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvi3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvjHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYvjXMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_2aYvaXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvjnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvj3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvkHMaEeeoYuc64YE22w" name="Call(Not)" incoming="_2aYvZnMaEeeoYuc64YE22w">
              <argument xmi:id="_2aYvkXMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2aYvXHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvknMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvk3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYvlHMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_2aYvanMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvlXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvlnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYvl3MaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2aYvXXMaEeeoYuc64YE22w _2aYvZHMaEeeoYuc64YE22w" outgoing="_2aYvXnMaEeeoYuc64YE22w _2aYvYHMaEeeoYuc64YE22w" decisionInputFlow="_2aYvXXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aYvmHMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2aYvYnMaEeeoYuc64YE22w _2aYvY3MaEeeoYuc64YE22w" outgoing="_2aYvZHMaEeeoYuc64YE22w _2aYvZnMaEeeoYuc64YE22w" decisionInputFlow="_2aYvY3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2aYvmXMaEeeoYuc64YE22w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_2aYvaHMaEeeoYuc64YE22w _2aYvaXMaEeeoYuc64YE22w _2aYvanMaEeeoYuc64YE22w" outgoing="_2aYva3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvmnMaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_2aYvm3MaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2aYva3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvnHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvnXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYvnnMaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvn3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvoHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYvoXMaEeeoYuc64YE22w" name="ExpressionStatement@440ed2e" outgoing="_2aYvRXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvonMaEeeoYuc64YE22w" target="_2aYvpXMaEeeoYuc64YE22w" source="_2aYvx3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYvo3MaEeeoYuc64YE22w" target="_2aYvpHMaEeeoYuc64YE22w" source="_2aYvqHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvpHMaEeeoYuc64YE22w" name="Call(Write)" incoming="_2aYvo3MaEeeoYuc64YE22w" behavior="_2aZVx3MaEeeoYuc64YE22w">
              <argument xmi:id="_2aYvpXMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_2aYvonMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvpnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvp3MaEeeoYuc64YE22w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYvqHMaEeeoYuc64YE22w" name="Tuple@768bac2a" outgoing="_2aYvo3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvqXMaEeeoYuc64YE22w" target="_2aYvt3MaEeeoYuc64YE22w" source="_2aYvrXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvqnMaEeeoYuc64YE22w" target="_2aYvy3MaEeeoYuc64YE22w" source="_2aYvs3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvq3MaEeeoYuc64YE22w" target="_2aYvznMaEeeoYuc64YE22w" source="_2aYvwXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYvrHMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_2aYvrXMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_2aYvqXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvrnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvr3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2aYvsHMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYvsXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvsnMaEeeoYuc64YE22w" target="_2aYvs3MaEeeoYuc64YE22w" source="_2aYvvXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYvs3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYvsnMaEeeoYuc64YE22w" outgoing="_2aYvqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvtHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvtXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvtnMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_2aYvt3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYvqXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvuHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvuXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2aYvunMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYvGXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvu3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvvHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aYvvXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYvsnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvvnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvv3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYvwHMaEeeoYuc64YE22w" name="Value(&quot;==&quot;)">
                <result xmi:id="_2aYvwXMaEeeoYuc64YE22w" name="Value(&quot;==&quot;).result" outgoing="_2aYvq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvwnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvw3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2aYvxHMaEeeoYuc64YE22w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYvxXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYvxnMaEeeoYuc64YE22w" target="_2aYvx3MaEeeoYuc64YE22w" source="_2aYv0XMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYvx3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYvxnMaEeeoYuc64YE22w" outgoing="_2aYvonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvyHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvyXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYvynMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_2aYvy3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYvqnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvzHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYvzXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2aYvznMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYvq3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYvz3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv0HMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aYv0XMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYvxnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYv0nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv03MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYv1HMaEeeoYuc64YE22w" name="ExpressionStatement@2a2548aa" incoming="_2aYvRXMaEeeoYuc64YE22w" outgoing="_2aYvTnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv1XMaEeeoYuc64YE22w" target="_2aYv1nMaEeeoYuc64YE22w" source="_2aYv63MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYv1nMaEeeoYuc64YE22w" name="Fork(s)@2a6e5619" incoming="_2aYv1XMaEeeoYuc64YE22w" outgoing="_2aYvSnMaEeeoYuc64YE22w _2aYvS3MaEeeoYuc64YE22w _2aYvTHMaEeeoYuc64YE22w _2aYvTXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYv13MaEeeoYuc64YE22w" name="RightHandSide@175bec98">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2aYv2HMaEeeoYuc64YE22w" name="CastExpression@175bec98" mode="parallel" outputElement="_2aYv63MaEeeoYuc64YE22w" inputElement="_2aYv6nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv2XMaEeeoYuc64YE22w" target="_2aYv4nMaEeeoYuc64YE22w" source="_2aYv6HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv2nMaEeeoYuc64YE22w" target="_2aYv6XMaEeeoYuc64YE22w" source="_2aYv6HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv23MaEeeoYuc64YE22w" target="_2aYv6XMaEeeoYuc64YE22w" source="_2aYv5XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv3HMaEeeoYuc64YE22w" target="_2aYv4HMaEeeoYuc64YE22w" source="_2aYv6XMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYv3XMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv3nMaEeeoYuc64YE22w" target="_2aYv6HMaEeeoYuc64YE22w" source="_2aYv6nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv33MaEeeoYuc64YE22w" target="_2aYv63MaEeeoYuc64YE22w" source="_2aYv4HMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2aYv4HMaEeeoYuc64YE22w" name="Merge(CastExpression@175bec98.operand)" incoming="_2aYv3HMaEeeoYuc64YE22w" outgoing="_2aYv33MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2aYv4XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_2aYv4nMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).object" incoming="_2aYv2XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYv43MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv5HMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2aYv5XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).result" outgoing="_2aYv23MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYv5nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv53MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2aYv6HMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_2aYv3nMaEeeoYuc64YE22w" outgoing="_2aYv2XMaEeeoYuc64YE22w _2aYv2nMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2aYv6XMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_2aYv2nMaEeeoYuc64YE22w _2aYv23MaEeeoYuc64YE22w" outgoing="_2aYv3HMaEeeoYuc64YE22w" decisionInputFlow="_2aYv23MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2aYv6nMaEeeoYuc64YE22w" name="CastExpression@175bec98.inputElement" incoming="_2aYvGnMaEeeoYuc64YE22w" outgoing="_2aYv3nMaEeeoYuc64YE22w" regionAsInput="_2aYv2HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2aYv63MaEeeoYuc64YE22w" name="CastExpression@175bec98.outputElement" incoming="_2aYv33MaEeeoYuc64YE22w" outgoing="_2aYv1XMaEeeoYuc64YE22w" regionAsOutput="_2aYv2HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_2aYv7HMaEeeoYuc64YE22w" name="IfStatement@375d91da" incoming="_2aYvTnMaEeeoYuc64YE22w" outgoing="_2aYvT3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYv7XMaEeeoYuc64YE22w" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYv7nMaEeeoYuc64YE22w" target="_2aYv9XMaEeeoYuc64YE22w" source="_2aYv73MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYv73MaEeeoYuc64YE22w" name="Operands(EqualityExpression@6c8e67e9)" outgoing="_2aYv7nMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYv8HMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_2aYv8XMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYv8nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv83MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2aYv9HMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYv9XMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2aYv7nMaEeeoYuc64YE22w">
                <argument xmi:id="_2aYv9nMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aYvSnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYv93MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv-HMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2aYv-XMaEeeoYuc64YE22w" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYv-nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYv-3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYv_HMaEeeoYuc64YE22w" name="ExpressionStatement@bd9622c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYv_XMaEeeoYuc64YE22w" target="_2aYwAHMaEeeoYuc64YE22w" source="_2aYwInMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYv_nMaEeeoYuc64YE22w" target="_2aYv_3MaEeeoYuc64YE22w" source="_2aYwA3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYv_3MaEeeoYuc64YE22w" name="Call(Write)" incoming="_2aYv_nMaEeeoYuc64YE22w" behavior="_2aZVx3MaEeeoYuc64YE22w">
                <argument xmi:id="_2aYwAHMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_2aYv_XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwAXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwAnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwA3MaEeeoYuc64YE22w" name="Tuple@25aee438" outgoing="_2aYv_nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwBHMaEeeoYuc64YE22w" target="_2aYwEnMaEeeoYuc64YE22w" source="_2aYwCHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwBXMaEeeoYuc64YE22w" target="_2aYwJnMaEeeoYuc64YE22w" source="_2aYwDnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwBnMaEeeoYuc64YE22w" target="_2aYwKXMaEeeoYuc64YE22w" source="_2aYwHHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYwB3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_2aYwCHMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_2aYwBHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwCXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwCnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYwC3MaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwDHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwDXMaEeeoYuc64YE22w" target="_2aYwDnMaEeeoYuc64YE22w" source="_2aYwGHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2aYwDnMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYwDXMaEeeoYuc64YE22w" outgoing="_2aYwBXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwD3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwEHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYwEXMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_2aYwEnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYwBHMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwE3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwFHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_2aYwFXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYvS3MaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwFnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwF3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2aYwGHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYwDXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwGXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwGnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYwG3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_2aYwHHMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_2aYwBnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwHXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwHnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aYwH3MaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwIHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwIXMaEeeoYuc64YE22w" target="_2aYwInMaEeeoYuc64YE22w" source="_2aYwLHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2aYwInMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYwIXMaEeeoYuc64YE22w" outgoing="_2aYv_XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwI3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwJHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYwJXMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_2aYwJnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYwBXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwJ3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwKHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_2aYwKXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYwBnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwKnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwK3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2aYwLHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYwIXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwLXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwLnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwL3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwMHMaEeeoYuc64YE22w" target="_2aYwNHMaEeeoYuc64YE22w" source="_2aYwMXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwMXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aYvG3MaEeeoYuc64YE22w" outgoing="_2aYwMHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwMnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwM3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwNHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aYwMHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwNXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwNnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwN3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@2a6e5619)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwOHMaEeeoYuc64YE22w" target="_2aYwPHMaEeeoYuc64YE22w" source="_2aYwOXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwOXMaEeeoYuc64YE22w" name="Passthru(Fork(s)@2a6e5619).input" incoming="_2aYvTHMaEeeoYuc64YE22w" outgoing="_2aYwOHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwOnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwO3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwPHMaEeeoYuc64YE22w" name="Passthru(Fork(s)@2a6e5619).output" incoming="_2aYwOHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwPXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwPnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwP3MaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwQHMaEeeoYuc64YE22w" target="_2aYwRHMaEeeoYuc64YE22w" source="_2aYwQXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwQXMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2aYvHHMaEeeoYuc64YE22w" outgoing="_2aYwQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwQnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwQ3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwRHMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2aYwQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwRXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwRnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwR3MaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwSHMaEeeoYuc64YE22w" target="_2aYwTHMaEeeoYuc64YE22w" source="_2aYwSXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwSXMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2aYvHXMaEeeoYuc64YE22w" outgoing="_2aYwSHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwSnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwS3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwTHMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2aYwSHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwTXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwTnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYwT3MaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_2aYwUHMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwUXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwUnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYwU3MaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwVHMaEeeoYuc64YE22w" name="ExpressionStatement@1e754de1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwVXMaEeeoYuc64YE22w" target="_2aYwWHMaEeeoYuc64YE22w" source="_2aYwiHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aYwVnMaEeeoYuc64YE22w" target="_2aYwV3MaEeeoYuc64YE22w" source="_2aYwW3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYwV3MaEeeoYuc64YE22w" name="Call(Write)" incoming="_2aYwVnMaEeeoYuc64YE22w" behavior="_2aZVx3MaEeeoYuc64YE22w">
                <argument xmi:id="_2aYwWHMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_2aYwVXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwWXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwWnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwW3MaEeeoYuc64YE22w" name="Tuple@4bfb7cde" outgoing="_2aYwVnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwXHMaEeeoYuc64YE22w" target="_2aYwcHMaEeeoYuc64YE22w" source="_2aYwaHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2aYwXXMaEeeoYuc64YE22w" target="_2aYwb3MaEeeoYuc64YE22w" source="_2aYwZ3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwXnMaEeeoYuc64YE22w" target="_2aYwe3MaEeeoYuc64YE22w" source="_2aYwaHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2aYwX3MaEeeoYuc64YE22w" target="_2aYwh3MaEeeoYuc64YE22w" source="_2aYwhnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwYHMaEeeoYuc64YE22w" target="_2aYwh3MaEeeoYuc64YE22w" source="_2aYwc3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2aYwYXMaEeeoYuc64YE22w" target="_2aYwdnMaEeeoYuc64YE22w" source="_2aYwh3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYwYnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2aYwY3MaEeeoYuc64YE22w" target="_2aYwfHMaEeeoYuc64YE22w" source="_2aYwh3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aYwZHMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwZXMaEeeoYuc64YE22w" target="_2aYwiHMaEeeoYuc64YE22w" source="_2aYweHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwZnMaEeeoYuc64YE22w" target="_2aYwiHMaEeeoYuc64YE22w" source="_2aYwfnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwZ3MaEeeoYuc64YE22w" name="Operands(EqualityExpression@158600f)" outgoing="_2aYwXXMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ForkNode" xmi:id="_2aYwaHMaEeeoYuc64YE22w" name="Fork()@4f63304d" incoming="_2aYvHnMaEeeoYuc64YE22w" outgoing="_2aYwXHMaEeeoYuc64YE22w _2aYwXnMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwaXMaEeeoYuc64YE22w" name="RightHandSide@733a2072"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYwanMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_2aYwa3MaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwbHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwbXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2aYwbnMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYwb3MaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2aYwXXMaEeeoYuc64YE22w">
                  <argument xmi:id="_2aYwcHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aYwXHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwcXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwcnMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2aYwc3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aYwYHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwdHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwdXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwdnMaEeeoYuc64YE22w" name="NullCoalescingExpression@44cfd479.operand2" incoming="_2aYwYXMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwd3MaEeeoYuc64YE22w" target="_2aYweHMaEeeoYuc64YE22w" source="_2aYwe3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2aYweHMaEeeoYuc64YE22w" name="NullCoalescingExpression@44cfd479.operand2.result" incoming="_2aYwd3MaEeeoYuc64YE22w" outgoing="_2aYwZXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYweXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwenMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_2aYwe3MaEeeoYuc64YE22w" name="Merge(Fork()@4f63304d)" incoming="_2aYwXnMaEeeoYuc64YE22w" outgoing="_2aYwd3MaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwfHMaEeeoYuc64YE22w" name="NullCoalescingExpression@44cfd479.operand3" incoming="_2aYwY3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwfXMaEeeoYuc64YE22w" target="_2aYwfnMaEeeoYuc64YE22w" source="_2aYwgnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2aYwfnMaEeeoYuc64YE22w" name="NullCoalescingExpression@44cfd479.operand3.result" incoming="_2aYwfXMaEeeoYuc64YE22w" outgoing="_2aYwZnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwf3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwgHMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYwgXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                    <result xmi:id="_2aYwgnMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_2aYwfXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwg3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwhHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2aYwhXMaEeeoYuc64YE22w" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2aYwhnMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@44cfd479)" outgoing="_2aYwX3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2aYwh3MaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@44cfd479)" incoming="_2aYwX3MaEeeoYuc64YE22w _2aYwYHMaEeeoYuc64YE22w" outgoing="_2aYwYXMaEeeoYuc64YE22w _2aYwY3MaEeeoYuc64YE22w" decisionInputFlow="_2aYwYHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2aYwiHMaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@44cfd479.result)" incoming="_2aYwZXMaEeeoYuc64YE22w _2aYwZnMaEeeoYuc64YE22w" outgoing="_2aYwVXMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwiXMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwinMaEeeoYuc64YE22w" target="_2aYwjnMaEeeoYuc64YE22w" source="_2aYwi3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwi3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aYvH3MaEeeoYuc64YE22w" outgoing="_2aYwinMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwjHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwjXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwjnMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aYwinMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwj3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwkHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwkXMaEeeoYuc64YE22w" name="Passthru(Fork(s)@2a6e5619)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwknMaEeeoYuc64YE22w" target="_2aYwlnMaEeeoYuc64YE22w" source="_2aYwk3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwk3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@2a6e5619).input" incoming="_2aYvTXMaEeeoYuc64YE22w" outgoing="_2aYwknMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwlHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwlXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwlnMaEeeoYuc64YE22w" name="Passthru(Fork(s)@2a6e5619).output" incoming="_2aYwknMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwl3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwmHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwmXMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwmnMaEeeoYuc64YE22w" target="_2aYwnnMaEeeoYuc64YE22w" source="_2aYwm3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwm3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2aYvIHMaEeeoYuc64YE22w" outgoing="_2aYwmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwnHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwnXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwnnMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2aYwmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwn3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwoHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwoXMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwonMaEeeoYuc64YE22w" target="_2aYwpnMaEeeoYuc64YE22w" source="_2aYwo3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2aYwo3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2aYvIXMaEeeoYuc64YE22w" outgoing="_2aYwonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwpHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwpXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2aYwpnMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2aYwonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwp3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwqHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_2aYwqXMaEeeoYuc64YE22w" body="_2aYv_HMaEeeoYuc64YE22w _2aYwL3MaEeeoYuc64YE22w _2aYwN3MaEeeoYuc64YE22w _2aYwP3MaEeeoYuc64YE22w _2aYwR3MaEeeoYuc64YE22w" bodyOutput="_2aYwNHMaEeeoYuc64YE22w _2aYwPHMaEeeoYuc64YE22w _2aYwRHMaEeeoYuc64YE22w _2aYwTHMaEeeoYuc64YE22w" decider="_2aYv-XMaEeeoYuc64YE22w" successorClause="_2aYwqnMaEeeoYuc64YE22w" test="_2aYv7XMaEeeoYuc64YE22w"/>
            <clause xmi:id="_2aYwqnMaEeeoYuc64YE22w" body="_2aYwVHMaEeeoYuc64YE22w _2aYwiXMaEeeoYuc64YE22w _2aYwkXMaEeeoYuc64YE22w _2aYwmXMaEeeoYuc64YE22w _2aYwoXMaEeeoYuc64YE22w" bodyOutput="_2aYwjnMaEeeoYuc64YE22w _2aYwlnMaEeeoYuc64YE22w _2aYwnnMaEeeoYuc64YE22w _2aYwpnMaEeeoYuc64YE22w" decider="_2aYwUHMaEeeoYuc64YE22w" predecessorClause="_2aYwqXMaEeeoYuc64YE22w" test="_2aYwT3MaEeeoYuc64YE22w"/>
            <result xmi:id="_2aYwq3MaEeeoYuc64YE22w" name="IfStatement@375d91da.result(label)" outgoing="_2aYvRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwrHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwrXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2aYwrnMaEeeoYuc64YE22w" name="IfStatement@375d91da.result(s)" outgoing="_2aYvR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwr3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwsHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2aYwsXMaEeeoYuc64YE22w" name="IfStatement@375d91da.result(value2)" outgoing="_2aYvSHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwsnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYws3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2aYwtHMaEeeoYuc64YE22w" name="IfStatement@375d91da.result(value1)" outgoing="_2aYvSXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwtXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwtnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYwt3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aYvRnMaEeeoYuc64YE22w" outgoing="_2aYvUHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYwuHMaEeeoYuc64YE22w" name="Fork(s)" incoming="_2aYvR3MaEeeoYuc64YE22w" outgoing="_2aYvUXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYwuXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_2aYvSHMaEeeoYuc64YE22w" outgoing="_2aYvUnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2aYwunMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_2aYvSXMaEeeoYuc64YE22w" outgoing="_2aYvU3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwu3MaEeeoYuc64YE22w" name="ExpressionStatement@439d42f8" incoming="_2aYvT3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwvHMaEeeoYuc64YE22w" target="_2aYwv3MaEeeoYuc64YE22w" source="_2aYwx3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYwvXMaEeeoYuc64YE22w" target="_2aYwvnMaEeeoYuc64YE22w" source="_2aYwxXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYwvnMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_2aYwvXMaEeeoYuc64YE22w">
              <argument xmi:id="_2aYwv3MaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_2aYwvHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwwHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwwXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYwwnMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYww3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwxHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwxXMaEeeoYuc64YE22w" name="Tuple@39fc3d9c" outgoing="_2aYwvXMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYwxnMaEeeoYuc64YE22w" name="Value(&quot;&quot;)">
                <result xmi:id="_2aYwx3MaEeeoYuc64YE22w" name="Value(&quot;&quot;).result" outgoing="_2aYwvHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwyHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwyXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2aYwynMaEeeoYuc64YE22w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYwy3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYwzHMaEeeoYuc64YE22w" target="_2aYw0HMaEeeoYuc64YE22w" source="_2aYwzXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYwzXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aYvUHMaEeeoYuc64YE22w" outgoing="_2aYwzHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYwznMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYwz3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYw0HMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aYwzHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw0XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw0nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYw03MaEeeoYuc64YE22w" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYw1HMaEeeoYuc64YE22w" target="_2aYw2HMaEeeoYuc64YE22w" source="_2aYw1XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYw1XMaEeeoYuc64YE22w" name="Passthru(Fork(s)).input" incoming="_2aYvUXMaEeeoYuc64YE22w" outgoing="_2aYw1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw1nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw13MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYw2HMaEeeoYuc64YE22w" name="Passthru(Fork(s)).output" incoming="_2aYw1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw2XMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw2nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYw23MaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYw3HMaEeeoYuc64YE22w" target="_2aYw4HMaEeeoYuc64YE22w" source="_2aYw3XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYw3XMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2aYvUnMaEeeoYuc64YE22w" outgoing="_2aYw3HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw3nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw33MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYw4HMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2aYw3HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw4XMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw4nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYw43MaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYw5HMaEeeoYuc64YE22w" target="_2aYw6HMaEeeoYuc64YE22w" source="_2aYw5XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYw5XMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2aYvU3MaEeeoYuc64YE22w" outgoing="_2aYw5HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw5nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw53MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYw6HMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2aYw5HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw6XMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw6nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYw63MaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_2aYw7HMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw7XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw7nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2aYw73MaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYw8HMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYw8XMaEeeoYuc64YE22w" target="_2aYw9XMaEeeoYuc64YE22w" source="_2aYw8nMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYw8nMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aYvInMaEeeoYuc64YE22w" outgoing="_2aYw8XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw83MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw9HMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYw9XMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aYw8XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw9nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw93MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYw-HMaEeeoYuc64YE22w" name="Value(null)">
            <result xmi:id="_2aYw-XMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYw-nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYw-3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_2aYw_HMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYw_XMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYw_nMaEeeoYuc64YE22w" target="_2aYxAnMaEeeoYuc64YE22w" source="_2aYw_3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYw_3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2aYvI3MaEeeoYuc64YE22w" outgoing="_2aYw_nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxAHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxAXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYxAnMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2aYw_nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxA3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxBHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxBXMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxBnMaEeeoYuc64YE22w" target="_2aYxCnMaEeeoYuc64YE22w" source="_2aYxB3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aYxB3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2aYvJHMaEeeoYuc64YE22w" outgoing="_2aYxBnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxCHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxCXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aYxCnMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2aYxBnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxC3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxDHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2aYxDXMaEeeoYuc64YE22w" body="_2aYvoXMaEeeoYuc64YE22w _2aYv1HMaEeeoYuc64YE22w _2aYv7HMaEeeoYuc64YE22w _2aYwu3MaEeeoYuc64YE22w _2aYwy3MaEeeoYuc64YE22w _2aYw03MaEeeoYuc64YE22w _2aYw23MaEeeoYuc64YE22w _2aYw43MaEeeoYuc64YE22w" bodyOutput="_2aYw0HMaEeeoYuc64YE22w _2aYw2HMaEeeoYuc64YE22w _2aYw4HMaEeeoYuc64YE22w _2aYw6HMaEeeoYuc64YE22w" decider="_2aYvnnMaEeeoYuc64YE22w" successorClause="_2aYxDnMaEeeoYuc64YE22w" test="_2aYvVHMaEeeoYuc64YE22w"/>
          <clause xmi:id="_2aYxDnMaEeeoYuc64YE22w" body="_2aYw8HMaEeeoYuc64YE22w _2aYw-HMaEeeoYuc64YE22w _2aYw_XMaEeeoYuc64YE22w _2aYxBXMaEeeoYuc64YE22w" bodyOutput="_2aYw9XMaEeeoYuc64YE22w _2aYw-XMaEeeoYuc64YE22w _2aYxAnMaEeeoYuc64YE22w _2aYxCnMaEeeoYuc64YE22w" decider="_2aYw7HMaEeeoYuc64YE22w" predecessorClause="_2aYxDXMaEeeoYuc64YE22w" test="_2aYw63MaEeeoYuc64YE22w"/>
          <result xmi:id="_2aYxD3MaEeeoYuc64YE22w" name="IfStatement@32bed2c7.result(label)" outgoing="_2aYvQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxEHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxEXMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2aYxEnMaEeeoYuc64YE22w" name="IfStatement@32bed2c7.result(s)" outgoing="_2aYvQXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxE3MaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxFHMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2aYxFXMaEeeoYuc64YE22w" name="IfStatement@32bed2c7.result(value2)" outgoing="_2aYvQnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxFnMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxF3MaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2aYxGHMaEeeoYuc64YE22w" name="IfStatement@32bed2c7.result(value1)" outgoing="_2aYvQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxGXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxGnMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxG3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aYvQHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxHHMaEeeoYuc64YE22w" name="Fork(s)" incoming="_2aYvQXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxHXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_2aYvQnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxHnMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_2aYvQ3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYvKXMaEeeoYuc64YE22w" name="Input(label)" outgoing="_2aYvFHMaEeeoYuc64YE22w" parameter="_2aYvC3MaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYvKnMaEeeoYuc64YE22w" name="Input(value1)" outgoing="_2aYvFXMaEeeoYuc64YE22w" parameter="_2aYvDnMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYvK3MaEeeoYuc64YE22w" name="Input(value2)" outgoing="_2aYvFnMaEeeoYuc64YE22w" parameter="_2aYvEXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_2aYvLHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aYvJXMaEeeoYuc64YE22w _2aYvJnMaEeeoYuc64YE22w _2aYvJ3MaEeeoYuc64YE22w" outgoing="_2aYvKHMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2aYxH3MaEeeoYuc64YE22w" name="AssertList" visibility="public" node="_2aYxPXMaEeeoYuc64YE22w _2aYxQXMaEeeoYuc64YE22w _2aYxPnMaEeeoYuc64YE22w _2aYxR3MaEeeoYuc64YE22w _2aYxP3MaEeeoYuc64YE22w _2aYxTXMaEeeoYuc64YE22w _2aYxU3MaEeeoYuc64YE22w _2aYxQHMaEeeoYuc64YE22w" group="_2aYxQXMaEeeoYuc64YE22w _2aYxR3MaEeeoYuc64YE22w _2aYxTXMaEeeoYuc64YE22w _2aYxU3MaEeeoYuc64YE22w">
      <packageImport xmi:id="_2aYxIHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aYxIXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aYxInMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aYxI3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aYxJHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2aYxJXMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxJnMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxJ3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2aYxKHMaEeeoYuc64YE22w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxKXMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxKnMaEeeoYuc64YE22w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2aYxK3MaEeeoYuc64YE22w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxLHMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxLXMaEeeoYuc64YE22w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxLnMaEeeoYuc64YE22w" target="_2aYxQ3MaEeeoYuc64YE22w" source="_2aYxPXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxL3MaEeeoYuc64YE22w" target="_2aYxSXMaEeeoYuc64YE22w" source="_2aYxPnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxMHMaEeeoYuc64YE22w" target="_2aYxT3MaEeeoYuc64YE22w" source="_2aYxP3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxMXMaEeeoYuc64YE22w" target="_2aYxcXMaEeeoYuc64YE22w" source="_2aYxRnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxMnMaEeeoYuc64YE22w" target="_2aYxgHMaEeeoYuc64YE22w" source="_2aYxTHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxM3MaEeeoYuc64YE22w" target="_2aYxjHMaEeeoYuc64YE22w" source="_2aYxUnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxNHMaEeeoYuc64YE22w" target="_2aYyjnMaEeeoYuc64YE22w" source="_2aYxRnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxNXMaEeeoYuc64YE22w" target="_2aYykXMaEeeoYuc64YE22w" source="_2aYxTHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxNnMaEeeoYuc64YE22w" target="_2aYylHMaEeeoYuc64YE22w" source="_2aYxUnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxN3MaEeeoYuc64YE22w" target="_2aYyxnMaEeeoYuc64YE22w" source="_2aYxTHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxOHMaEeeoYuc64YE22w" target="_2aYy0nMaEeeoYuc64YE22w" source="_2aYxUnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxOXMaEeeoYuc64YE22w" target="_2aYxQHMaEeeoYuc64YE22w" source="_2aYxQXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxOnMaEeeoYuc64YE22w" target="_2aYxQHMaEeeoYuc64YE22w" source="_2aYxR3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxO3MaEeeoYuc64YE22w" target="_2aYxQHMaEeeoYuc64YE22w" source="_2aYxTXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxPHMaEeeoYuc64YE22w" target="_2aYxU3MaEeeoYuc64YE22w" source="_2aYxQHMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2aYxQXMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2aYxOXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxQnMaEeeoYuc64YE22w" target="_2aYxRnMaEeeoYuc64YE22w" source="_2aYxQ3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYxQ3MaEeeoYuc64YE22w" name="Input(label)" incoming="_2aYxLnMaEeeoYuc64YE22w" outgoing="_2aYxQnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxRHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxRXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxRnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aYxQnMaEeeoYuc64YE22w" outgoing="_2aYxMXMaEeeoYuc64YE22w _2aYxNHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYxR3MaEeeoYuc64YE22w" name="Node(Input(list))" outgoing="_2aYxOnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxSHMaEeeoYuc64YE22w" target="_2aYxTHMaEeeoYuc64YE22w" source="_2aYxSXMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYxSXMaEeeoYuc64YE22w" name="Input(list)" incoming="_2aYxL3MaEeeoYuc64YE22w" outgoing="_2aYxSHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxSnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxS3MaEeeoYuc64YE22w" value="*"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxTHMaEeeoYuc64YE22w" name="Fork(list)" incoming="_2aYxSHMaEeeoYuc64YE22w" outgoing="_2aYxMnMaEeeoYuc64YE22w _2aYxN3MaEeeoYuc64YE22w _2aYxNXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYxTXMaEeeoYuc64YE22w" name="Node(Input(expected))" outgoing="_2aYxO3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxTnMaEeeoYuc64YE22w" target="_2aYxUnMaEeeoYuc64YE22w" source="_2aYxT3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aYxT3MaEeeoYuc64YE22w" name="Input(expected)" incoming="_2aYxMHMaEeeoYuc64YE22w" outgoing="_2aYxTnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxUHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxUXMaEeeoYuc64YE22w" value="*"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aYxUnMaEeeoYuc64YE22w" name="Fork(expected)" incoming="_2aYxTnMaEeeoYuc64YE22w" outgoing="_2aYxM3MaEeeoYuc64YE22w _2aYxOHMaEeeoYuc64YE22w _2aYxNnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aYxU3MaEeeoYuc64YE22w" name="Body(AssertList)" incoming="_2aYxPHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxVHMaEeeoYuc64YE22w" target="_2aYxknMaEeeoYuc64YE22w" source="_2aYxVXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxVXMaEeeoYuc64YE22w" name="ExpressionStatement@2ca45170" outgoing="_2aYxVHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxVnMaEeeoYuc64YE22w" target="_2aYxW3MaEeeoYuc64YE22w" source="_2aYxbXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxV3MaEeeoYuc64YE22w" target="_2aYxXnMaEeeoYuc64YE22w" source="_2aYxfHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxWHMaEeeoYuc64YE22w" target="_2aYxYXMaEeeoYuc64YE22w" source="_2aYxiHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxWXMaEeeoYuc64YE22w" target="_2aYxWnMaEeeoYuc64YE22w" source="_2aYxZHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYxWnMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2aYxWXMaEeeoYuc64YE22w" behavior="_2aYvBXMaEeeoYuc64YE22w">
            <argument xmi:id="_2aYxW3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2aYxVnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxXHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxXXMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_2aYxXnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2aYxV3MaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxX3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxYHMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_2aYxYXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2aYxWHMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxYnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxY3MaEeeoYuc64YE22w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxZHMaEeeoYuc64YE22w" name="Tuple@5d018d5e" outgoing="_2aYxWXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxZXMaEeeoYuc64YE22w" target="_2aYxdHMaEeeoYuc64YE22w" source="_2aYxZ3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYxZnMaEeeoYuc64YE22w" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_2aYxZ3MaEeeoYuc64YE22w" name="Value(&quot;->size()&quot;).result" outgoing="_2aYxZXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxaHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxaXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2aYxanMaEeeoYuc64YE22w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxa3MaEeeoYuc64YE22w" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxbHMaEeeoYuc64YE22w" target="_2aYxbXMaEeeoYuc64YE22w" source="_2aYxd3MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYxbXMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYxbHMaEeeoYuc64YE22w" outgoing="_2aYxVnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxbnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxb3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYxcHMaEeeoYuc64YE22w" name="Call(Concat)">
                <argument xmi:id="_2aYxcXMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYxMXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxcnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxc3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYxdHMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYxZXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxdXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxdnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYxd3MaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYxbHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxeHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxeXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxenMaEeeoYuc64YE22w" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxe3MaEeeoYuc64YE22w" target="_2aYxfHMaEeeoYuc64YE22w" source="_2aYxg3MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYxfHMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_2aYxe3MaEeeoYuc64YE22w" outgoing="_2aYxV3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxfXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxfnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYxf3MaEeeoYuc64YE22w" name="Call(Size)">
                <argument xmi:id="_2aYxgHMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_2aYxMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxgXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxgnMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2aYxg3MaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_2aYxe3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxhHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxhXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxhnMaEeeoYuc64YE22w" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxh3MaEeeoYuc64YE22w" target="_2aYxiHMaEeeoYuc64YE22w" source="_2aYxj3MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYxiHMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_2aYxh3MaEeeoYuc64YE22w" outgoing="_2aYxWHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxiXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxinMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYxi3MaEeeoYuc64YE22w" name="Call(Size)">
                <argument xmi:id="_2aYxjHMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_2aYxM3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxjXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxjnMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2aYxj3MaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_2aYxh3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxkHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxkXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxknMaEeeoYuc64YE22w" name="ForStatement@7b079074" incoming="_2aYxVHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxk3MaEeeoYuc64YE22w" target="_2aZVA3MaEeeoYuc64YE22w" source="_2aYyu3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxlHMaEeeoYuc64YE22w" target="_2aYymnMaEeeoYuc64YE22w" source="_2aZVHnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxlXMaEeeoYuc64YE22w" target="_2aYynXMaEeeoYuc64YE22w" source="_2aZVGnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxlnMaEeeoYuc64YE22w" target="_2aYyl3MaEeeoYuc64YE22w" source="_2aZVA3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxl3MaEeeoYuc64YE22w" target="_2aYxmHMaEeeoYuc64YE22w" source="_2aYysnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:LoopNode" xmi:id="_2aYxmHMaEeeoYuc64YE22w" name="Loop(ForStatement@7b079074)" incoming="_2aYxl3MaEeeoYuc64YE22w" bodyOutput="_2aYxxXMaEeeoYuc64YE22w _2aYxyHMaEeeoYuc64YE22w _2aYxy3MaEeeoYuc64YE22w _2aYydHMaEeeoYuc64YE22w _2aYyXXMaEeeoYuc64YE22w _2aYyanMaEeeoYuc64YE22w" bodyPart="_2aYxv3MaEeeoYuc64YE22w _2aYxwHMaEeeoYuc64YE22w _2aYybXMaEeeoYuc64YE22w _2aYyd3MaEeeoYuc64YE22w" decider="_2aYxvHMaEeeoYuc64YE22w" isTestedFirst="true" test="_2aYxtXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxmXMaEeeoYuc64YE22w" target="_2aYxr3MaEeeoYuc64YE22w" source="_2aYyfHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxmnMaEeeoYuc64YE22w" target="_2aYxsHMaEeeoYuc64YE22w" source="_2aYyf3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxm3MaEeeoYuc64YE22w" target="_2aYxsXMaEeeoYuc64YE22w" source="_2aYygnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxnHMaEeeoYuc64YE22w" target="_2aYxsnMaEeeoYuc64YE22w" source="_2aYyhXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxnXMaEeeoYuc64YE22w" target="_2aYxs3MaEeeoYuc64YE22w" source="_2aYyiHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxnnMaEeeoYuc64YE22w" target="_2aYxtHMaEeeoYuc64YE22w" source="_2aYyi3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxn3MaEeeoYuc64YE22w" target="_2aYxtnMaEeeoYuc64YE22w" source="_2aYxs3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxoHMaEeeoYuc64YE22w" target="_2aYxuXMaEeeoYuc64YE22w" source="_2aYxtHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYxoXMaEeeoYuc64YE22w" target="_2aYxwHMaEeeoYuc64YE22w" source="_2aYxv3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxonMaEeeoYuc64YE22w" target="_2aYx_3MaEeeoYuc64YE22w" source="_2aYxsnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxo3MaEeeoYuc64YE22w" target="_2aYyMnMaEeeoYuc64YE22w" source="_2aYxsnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxpHMaEeeoYuc64YE22w" target="_2aYyPXMaEeeoYuc64YE22w" source="_2aYxsnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxpXMaEeeoYuc64YE22w" target="_2aYybnMaEeeoYuc64YE22w" source="_2aYxsnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxpnMaEeeoYuc64YE22w" target="_2aYycXMaEeeoYuc64YE22w" source="_2aYyeHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxp3MaEeeoYuc64YE22w" target="_2aYyV3MaEeeoYuc64YE22w" source="_2aYxs3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxqHMaEeeoYuc64YE22w" target="_2aYyZ3MaEeeoYuc64YE22w" source="_2aYxtHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxqXMaEeeoYuc64YE22w" target="_2aYx8HMaEeeoYuc64YE22w" source="_2aYxr3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxqnMaEeeoYuc64YE22w" target="_2aYyKXMaEeeoYuc64YE22w" source="_2aYxsHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxq3MaEeeoYuc64YE22w" target="_2aYyNHMaEeeoYuc64YE22w" source="_2aYxsXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxrHMaEeeoYuc64YE22w" target="_2aYyQHMaEeeoYuc64YE22w" source="_2aYxr3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxrXMaEeeoYuc64YE22w" target="_2aYySHMaEeeoYuc64YE22w" source="_2aYxsHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxrnMaEeeoYuc64YE22w" target="_2aYyUHMaEeeoYuc64YE22w" source="_2aYxsXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYxr3MaEeeoYuc64YE22w" name="Fork(ForStatement@7b079074.loopVariable(label))" incoming="_2aYxmXMaEeeoYuc64YE22w" outgoing="_2aYxqXMaEeeoYuc64YE22w _2aYxrHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYxsHMaEeeoYuc64YE22w" name="Fork(ForStatement@7b079074.loopVariable(list))" incoming="_2aYxmnMaEeeoYuc64YE22w" outgoing="_2aYxqnMaEeeoYuc64YE22w _2aYxrXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYxsXMaEeeoYuc64YE22w" name="Fork(ForStatement@7b079074.loopVariable(expected))" incoming="_2aYxm3MaEeeoYuc64YE22w" outgoing="_2aYxq3MaEeeoYuc64YE22w _2aYxrnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYxsnMaEeeoYuc64YE22w" name="Fork(ForStatement@7b079074.loopVariable(i))" incoming="_2aYxnHMaEeeoYuc64YE22w" outgoing="_2aYxonMaEeeoYuc64YE22w _2aYxo3MaEeeoYuc64YE22w _2aYxpHMaEeeoYuc64YE22w _2aYxpXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYxs3MaEeeoYuc64YE22w" name="Fork(ForStatement@7b079074.loopVariable(counter))" incoming="_2aYxnXMaEeeoYuc64YE22w" outgoing="_2aYxn3MaEeeoYuc64YE22w _2aYxp3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2aYxtHMaEeeoYuc64YE22w" name="Fork(ForStatement@7b079074.loopVariable(upper))" incoming="_2aYxnnMaEeeoYuc64YE22w" outgoing="_2aYxoHMaEeeoYuc64YE22w _2aYxqHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYxtXMaEeeoYuc64YE22w" name="Call(&lt;=)">
              <argument xmi:id="_2aYxtnMaEeeoYuc64YE22w" name="Call(&lt;=).argument(x)" incoming="_2aYxn3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxt3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxuHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_2aYxuXMaEeeoYuc64YE22w" name="Call(&lt;=).argument(y)" incoming="_2aYxoHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxunMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxu3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYxvHMaEeeoYuc64YE22w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxvXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxvnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxv3MaEeeoYuc64YE22w" name="Values(ForStatement@7b079074)" outgoing="_2aYxoXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxwHMaEeeoYuc64YE22w" name="Body(ForStatement@7b079074)" incoming="_2aYxoXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxwXMaEeeoYuc64YE22w" target="_2aYxxXMaEeeoYuc64YE22w" source="_2aYyQ3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxwnMaEeeoYuc64YE22w" target="_2aYxyHMaEeeoYuc64YE22w" source="_2aYyS3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxw3MaEeeoYuc64YE22w" target="_2aYxy3MaEeeoYuc64YE22w" source="_2aYyU3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxxHMaEeeoYuc64YE22w" target="_2aYyWnMaEeeoYuc64YE22w" source="_2aYyYXMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aYxxXMaEeeoYuc64YE22w" name="label" incoming="_2aYxwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxxnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxx3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_2aYxyHMaEeeoYuc64YE22w" name="list" incoming="_2aYxwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxyXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxynMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_2aYxy3MaEeeoYuc64YE22w" name="expected" incoming="_2aYxw3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYxzHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYxzXMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYxznMaEeeoYuc64YE22w" name="ExpressionStatement@326610c9">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYxz3MaEeeoYuc64YE22w" target="_2aYx1HMaEeeoYuc64YE22w" source="_2aYyG3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx0HMaEeeoYuc64YE22w" target="_2aYx13MaEeeoYuc64YE22w" source="_2aYyL3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx0XMaEeeoYuc64YE22w" target="_2aYx2nMaEeeoYuc64YE22w" source="_2aYyOnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2aYx0nMaEeeoYuc64YE22w" target="_2aYx03MaEeeoYuc64YE22w" source="_2aYx3XMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYx03MaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2aYx0nMaEeeoYuc64YE22w" behavior="_2aYvBXMaEeeoYuc64YE22w">
                  <argument xmi:id="_2aYx1HMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2aYxz3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx1XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx1nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2aYx13MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2aYx0HMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx2HMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx2XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2aYx2nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2aYx0XMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx23MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx3HMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYx3XMaEeeoYuc64YE22w" name="Tuple@14d42ec6" outgoing="_2aYx0nMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx3nMaEeeoYuc64YE22w" target="_2aYx83MaEeeoYuc64YE22w" source="_2aYx5nMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx33MaEeeoYuc64YE22w" target="_2aYyC3MaEeeoYuc64YE22w" source="_2aYx7HMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx4HMaEeeoYuc64YE22w" target="_2aYyDnMaEeeoYuc64YE22w" source="_2aYx-3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx4XMaEeeoYuc64YE22w" target="_2aYyH3MaEeeoYuc64YE22w" source="_2aYyB3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx4nMaEeeoYuc64YE22w" target="_2aYyInMaEeeoYuc64YE22w" source="_2aYyFXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx43MaEeeoYuc64YE22w" target="_2aYyLHMaEeeoYuc64YE22w" source="_2aYyMnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx5HMaEeeoYuc64YE22w" target="_2aYyN3MaEeeoYuc64YE22w" source="_2aYyPXMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYx5XMaEeeoYuc64YE22w" name="Value(&quot;[&quot;)">
                    <result xmi:id="_2aYx5nMaEeeoYuc64YE22w" name="Value(&quot;[&quot;).result" outgoing="_2aYx3nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx53MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx6HMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2aYx6XMaEeeoYuc64YE22w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYx6nMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx63MaEeeoYuc64YE22w" target="_2aYx7HMaEeeoYuc64YE22w" source="_2aYx9nMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_2aYx7HMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYx63MaEeeoYuc64YE22w" outgoing="_2aYx33MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx7XMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx7nMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYx73MaEeeoYuc64YE22w" name="Call(Concat)">
                      <argument xmi:id="_2aYx8HMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYxqXMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx8XMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx8nMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_2aYx83MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYx3nMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx9HMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx9XMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2aYx9nMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYx63MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx93MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx-HMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYx-XMaEeeoYuc64YE22w" name="Node(Call(ToString))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYx-nMaEeeoYuc64YE22w" target="_2aYx-3MaEeeoYuc64YE22w" source="_2aYyAnMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_2aYx-3MaEeeoYuc64YE22w" name="Output(Call(ToString).result(result))" incoming="_2aYx-nMaEeeoYuc64YE22w" outgoing="_2aYx4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYx_HMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYx_XMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYx_nMaEeeoYuc64YE22w" name="Call(ToString)">
                      <argument xmi:id="_2aYx_3MaEeeoYuc64YE22w" name="Call(ToString).argument(x)" incoming="_2aYxonMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyAHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyAXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2aYyAnMaEeeoYuc64YE22w" name="Call(ToString).result(result)" outgoing="_2aYx-nMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyA3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyBHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyBXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyBnMaEeeoYuc64YE22w" target="_2aYyB3MaEeeoYuc64YE22w" source="_2aYyEXMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_2aYyB3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYyBnMaEeeoYuc64YE22w" outgoing="_2aYx4XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyCHMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyCXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYyCnMaEeeoYuc64YE22w" name="Call(Concat)">
                      <argument xmi:id="_2aYyC3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYx33MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyDHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyDXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_2aYyDnMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYx4HMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyD3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyEHMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2aYyEXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYyBnMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyEnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyE3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYyFHMaEeeoYuc64YE22w" name="Value(&quot;]&quot;)">
                    <result xmi:id="_2aYyFXMaEeeoYuc64YE22w" name="Value(&quot;]&quot;).result" outgoing="_2aYx4nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyFnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyF3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2aYyGHMaEeeoYuc64YE22w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyGXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyGnMaEeeoYuc64YE22w" target="_2aYyG3MaEeeoYuc64YE22w" source="_2aYyJXMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_2aYyG3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aYyGnMaEeeoYuc64YE22w" outgoing="_2aYxz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyHHMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyHXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYyHnMaEeeoYuc64YE22w" name="Call(Concat)">
                      <argument xmi:id="_2aYyH3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aYx4XMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyIHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyIXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_2aYyInMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aYx4nMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyI3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyJHMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2aYyJXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aYyGnMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyJnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyJ3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYyKHMaEeeoYuc64YE22w" name="Call(At)">
                    <argument xmi:id="_2aYyKXMaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_2aYxqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyKnMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyK3MaEeeoYuc64YE22w" value="*"/>
                    </argument>
                    <argument xmi:id="_2aYyLHMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_2aYx43MaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyLXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyLnMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2aYyL3MaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_2aYx0HMaEeeoYuc64YE22w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyMHMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyMXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2aYyMnMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_2aYxo3MaEeeoYuc64YE22w" outgoing="_2aYx43MaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYyM3MaEeeoYuc64YE22w" name="Call(At)">
                    <argument xmi:id="_2aYyNHMaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_2aYxq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyNXMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyNnMaEeeoYuc64YE22w" value="*"/>
                    </argument>
                    <argument xmi:id="_2aYyN3MaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_2aYx5HMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyOHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyOXMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2aYyOnMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_2aYx0XMaEeeoYuc64YE22w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyO3MaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyPHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2aYyPXMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_2aYxpHMaEeeoYuc64YE22w" outgoing="_2aYx5HMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyPnMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyP3MaEeeoYuc64YE22w" target="_2aYyQ3MaEeeoYuc64YE22w" source="_2aYyQHMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2aYyQHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aYxrHMaEeeoYuc64YE22w" outgoing="_2aYyP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyQXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyQnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2aYyQ3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aYyP3MaEeeoYuc64YE22w" outgoing="_2aYxwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyRHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyRXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyRnMaEeeoYuc64YE22w" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyR3MaEeeoYuc64YE22w" target="_2aYyS3MaEeeoYuc64YE22w" source="_2aYySHMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2aYySHMaEeeoYuc64YE22w" name="Passthru(Fork(list)).input" incoming="_2aYxrXMaEeeoYuc64YE22w" outgoing="_2aYyR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYySXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYySnMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2aYyS3MaEeeoYuc64YE22w" name="Passthru(Fork(list)).output" incoming="_2aYyR3MaEeeoYuc64YE22w" outgoing="_2aYxwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyTHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyTXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyTnMaEeeoYuc64YE22w" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyT3MaEeeoYuc64YE22w" target="_2aYyU3MaEeeoYuc64YE22w" source="_2aYyUHMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2aYyUHMaEeeoYuc64YE22w" name="Passthru(Fork(expected)).input" incoming="_2aYxrnMaEeeoYuc64YE22w" outgoing="_2aYyT3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyUXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyUnMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2aYyU3MaEeeoYuc64YE22w" name="Passthru(Fork(expected)).output" incoming="_2aYyT3MaEeeoYuc64YE22w" outgoing="_2aYxw3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyVHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyVXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYyVnMaEeeoYuc64YE22w" name="Call(+)">
                <argument xmi:id="_2aYyV3MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2aYxp3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyWHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyWXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aYyWnMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2aYxxHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyW3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyXHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aYyXXMaEeeoYuc64YE22w" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyXnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyX3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYyYHMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_2aYyYXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYxxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyYnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyY3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2aYyZHMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyZXMaEeeoYuc64YE22w" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyZnMaEeeoYuc64YE22w" target="_2aYyanMaEeeoYuc64YE22w" source="_2aYyZ3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2aYyZ3MaEeeoYuc64YE22w" name="Passthru(upper).input" incoming="_2aYxqHMaEeeoYuc64YE22w" outgoing="_2aYyZnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyaHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyaXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2aYyanMaEeeoYuc64YE22w" name="Passthru(upper).output" incoming="_2aYyZnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYya3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYybHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYybXMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_2aYybnMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2aYxpXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyb3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYycHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_2aYycXMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2aYxpnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYycnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyc3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aYydHMaEeeoYuc64YE22w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYydXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYydnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYyd3MaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_2aYyeHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYxpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyeXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyenMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aYye3MaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_2aYyfHMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariable(label)" outgoing="_2aYxmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyfXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyfnMaEeeoYuc64YE22w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_2aYyf3MaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariable(list)" outgoing="_2aYxmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYygHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYygXMaEeeoYuc64YE22w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_2aYygnMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariable(expected)" outgoing="_2aYxm3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyg3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyhHMaEeeoYuc64YE22w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_2aYyhXMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariable(i)" outgoing="_2aYxnHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyhnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyh3MaEeeoYuc64YE22w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_2aYyiHMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariable(counter)" outgoing="_2aYxnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyiXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyinMaEeeoYuc64YE22w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_2aYyi3MaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariable(upper)" outgoing="_2aYxnnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyjHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyjXMaEeeoYuc64YE22w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_2aYyjnMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariableInput(label)" incoming="_2aYxNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyj3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYykHMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2aYykXMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariableInput(list)" incoming="_2aYxNXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyknMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyk3MaEeeoYuc64YE22w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2aYylHMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariableInput(expected)" incoming="_2aYxNnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYylXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYylnMaEeeoYuc64YE22w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2aYyl3MaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariableInput(i)" incoming="_2aYxlnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYymHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYymXMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2aYymnMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariableInput(counter)" incoming="_2aYxlHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYym3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYynHMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2aYynXMaEeeoYuc64YE22w" name="ForStatement@7b079074.loopVariableInput(upper)" incoming="_2aYxlXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYynnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyn3MaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_2aYyoHMaEeeoYuc64YE22w" name="ForStatement@7b079074.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyoXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyonMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2aYyo3MaEeeoYuc64YE22w" name="ForStatement@7b079074.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYypHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYypXMaEeeoYuc64YE22w" value="*"/>
            </result>
            <result xmi:id="_2aYypnMaEeeoYuc64YE22w" name="ForStatement@7b079074.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyp3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyqHMaEeeoYuc64YE22w" value="*"/>
            </result>
            <result xmi:id="_2aYyqXMaEeeoYuc64YE22w" name="ForStatement@7b079074.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyqnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyq3MaEeeoYuc64YE22w" value="*"/>
            </result>
            <result xmi:id="_2aYyrHMaEeeoYuc64YE22w" name="ForStatement@7b079074.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyrXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyrnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2aYyr3MaEeeoYuc64YE22w" name="ForStatement@7b079074.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYysHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYysXMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYysnMaEeeoYuc64YE22w" name="LoopVariables(ForStatement@7b079074)" outgoing="_2aYxl3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYys3MaEeeoYuc64YE22w" target="_2aZU-nMaEeeoYuc64YE22w" source="_2aYywnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYytHMaEeeoYuc64YE22w" target="_2aZU_XMaEeeoYuc64YE22w" source="_2aYyznMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aYytXMaEeeoYuc64YE22w" target="_2aZU-XMaEeeoYuc64YE22w" source="_2aYyv3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYytnMaEeeoYuc64YE22w" target="_2aZVBXMaEeeoYuc64YE22w" source="_2aZU9nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyt3MaEeeoYuc64YE22w" target="_2aZVCHMaEeeoYuc64YE22w" source="_2aZVA3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyuHMaEeeoYuc64YE22w" target="_2aZVFHMaEeeoYuc64YE22w" source="_2aZVC3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyuXMaEeeoYuc64YE22w" target="_2aZVF3MaEeeoYuc64YE22w" source="_2aZVD3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aYyunMaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_2aYyu3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYxk3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyvHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyvXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aYyvnMaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyv3MaEeeoYuc64YE22w" name="Tuple@64aa6759" outgoing="_2aYytXMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYywHMaEeeoYuc64YE22w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYywXMaEeeoYuc64YE22w" target="_2aYywnMaEeeoYuc64YE22w" source="_2aYyyXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYywnMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_2aYywXMaEeeoYuc64YE22w" outgoing="_2aYys3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyw3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyxHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYyxXMaEeeoYuc64YE22w" name="Call(Size)">
                  <argument xmi:id="_2aYyxnMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_2aYxN3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyx3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyyHMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2aYyyXMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_2aYywXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyynMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYyy3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aYyzHMaEeeoYuc64YE22w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aYyzXMaEeeoYuc64YE22w" target="_2aYyznMaEeeoYuc64YE22w" source="_2aZU8XMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aYyznMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_2aYyzXMaEeeoYuc64YE22w" outgoing="_2aYytHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYyz3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aYy0HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aYy0XMaEeeoYuc64YE22w" name="Call(Size)">
                  <argument xmi:id="_2aYy0nMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_2aYxOHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aYy03MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZU8HMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2aZU8XMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_2aYyzXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZU8nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZU83MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZU9HMaEeeoYuc64YE22w" name="Node(Call(Min))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZU9XMaEeeoYuc64YE22w" target="_2aZU9nMaEeeoYuc64YE22w" source="_2aZVAHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2aZU9nMaEeeoYuc64YE22w" name="Output(Call(Min).result(result))" incoming="_2aZU9XMaEeeoYuc64YE22w" outgoing="_2aYytnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZU93MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZU-HMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZU-XMaEeeoYuc64YE22w" name="Call(Min)" incoming="_2aYytXMaEeeoYuc64YE22w">
                <argument xmi:id="_2aZU-nMaEeeoYuc64YE22w" name="Call(Min).argument(x)" incoming="_2aYys3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZU-3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZU_HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2aZU_XMaEeeoYuc64YE22w" name="Call(Min).argument(y)" incoming="_2aYytHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZU_nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZU_3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2aZVAHMaEeeoYuc64YE22w" name="Call(Min).result(result)" outgoing="_2aZU9XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVAXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVAnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aZVA3MaEeeoYuc64YE22w" name="Fork(Value(1).result)" incoming="_2aYxk3MaEeeoYuc64YE22w" outgoing="_2aYxlnMaEeeoYuc64YE22w _2aYyt3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZVBHMaEeeoYuc64YE22w" name="Call(-)">
              <argument xmi:id="_2aZVBXMaEeeoYuc64YE22w" name="Call(-).argument(x)" incoming="_2aYytnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVBnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVB3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_2aZVCHMaEeeoYuc64YE22w" name="Call(-).argument(y)" incoming="_2aYyt3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVCXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVCnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aZVC3MaEeeoYuc64YE22w" name="Call(-).result(result)" outgoing="_2aYyuHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVDHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVDXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZVDnMaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_2aZVD3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYyuXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVEHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVEXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aZVEnMaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZVE3MaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_2aZVFHMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2aYyuHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVFXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVFnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_2aZVF3MaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2aYyuXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVGHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVGXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aZVGnMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_2aYxlXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVG3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVHHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZVHXMaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_2aZVHnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aYxlHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVH3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVIHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2aZVIXMaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYxPXMaEeeoYuc64YE22w" name="Input(label)" outgoing="_2aYxLnMaEeeoYuc64YE22w" parameter="_2aYxJXMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYxPnMaEeeoYuc64YE22w" name="Input(list)" outgoing="_2aYxL3MaEeeoYuc64YE22w" parameter="_2aYxKHMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aYxP3MaEeeoYuc64YE22w" name="Input(expected)" outgoing="_2aYxMHMaEeeoYuc64YE22w" parameter="_2aYxK3MaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_2aYxQHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aYxOXMaEeeoYuc64YE22w _2aYxOnMaEeeoYuc64YE22w _2aYxO3MaEeeoYuc64YE22w" outgoing="_2aYxPHMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2aZVInMaEeeoYuc64YE22w" name="AssertTrue" visibility="public" node="_2aZVOXMaEeeoYuc64YE22w _2aZVPHMaEeeoYuc64YE22w _2aZVOnMaEeeoYuc64YE22w _2aZVQnMaEeeoYuc64YE22w _2aZVSHMaEeeoYuc64YE22w _2aZVO3MaEeeoYuc64YE22w" group="_2aZVPHMaEeeoYuc64YE22w _2aZVQnMaEeeoYuc64YE22w _2aZVSHMaEeeoYuc64YE22w">
      <packageImport xmi:id="_2aZVI3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aZVJHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aZVJXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aZVJnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aZVJ3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2aZVKHMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVKXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVKnMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2aZVK3MaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVLHMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVLXMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVLnMaEeeoYuc64YE22w" target="_2aZVPnMaEeeoYuc64YE22w" source="_2aZVOXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVL3MaEeeoYuc64YE22w" target="_2aZVRHMaEeeoYuc64YE22w" source="_2aZVOnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVMHMaEeeoYuc64YE22w" target="_2aZVZnMaEeeoYuc64YE22w" source="_2aZVR3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVMXMaEeeoYuc64YE22w" target="_2aZVknMaEeeoYuc64YE22w" source="_2aZVQXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVMnMaEeeoYuc64YE22w" target="_2aZVmnMaEeeoYuc64YE22w" source="_2aZVR3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVM3MaEeeoYuc64YE22w" target="_2aZVonMaEeeoYuc64YE22w" source="_2aZVQXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVNHMaEeeoYuc64YE22w" target="_2aZVr3MaEeeoYuc64YE22w" source="_2aZVR3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVNXMaEeeoYuc64YE22w" target="_2aZVt3MaEeeoYuc64YE22w" source="_2aZVQXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aZVNnMaEeeoYuc64YE22w" target="_2aZVO3MaEeeoYuc64YE22w" source="_2aZVPHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aZVN3MaEeeoYuc64YE22w" target="_2aZVO3MaEeeoYuc64YE22w" source="_2aZVQnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aZVOHMaEeeoYuc64YE22w" target="_2aZVSHMaEeeoYuc64YE22w" source="_2aZVO3MaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2aZVPHMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2aZVNnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVPXMaEeeoYuc64YE22w" target="_2aZVQXMaEeeoYuc64YE22w" source="_2aZVPnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aZVPnMaEeeoYuc64YE22w" name="Input(label)" incoming="_2aZVLnMaEeeoYuc64YE22w" outgoing="_2aZVPXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVP3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVQHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aZVQXMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aZVPXMaEeeoYuc64YE22w" outgoing="_2aZVMXMaEeeoYuc64YE22w _2aZVM3MaEeeoYuc64YE22w _2aZVNXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aZVQnMaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_2aZVN3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVQ3MaEeeoYuc64YE22w" target="_2aZVR3MaEeeoYuc64YE22w" source="_2aZVRHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aZVRHMaEeeoYuc64YE22w" name="Input(condition)" incoming="_2aZVL3MaEeeoYuc64YE22w" outgoing="_2aZVQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVRXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVRnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aZVR3MaEeeoYuc64YE22w" name="Fork(condition)" incoming="_2aZVQ3MaEeeoYuc64YE22w" outgoing="_2aZVMHMaEeeoYuc64YE22w _2aZVMnMaEeeoYuc64YE22w _2aZVNHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aZVSHMaEeeoYuc64YE22w" name="Body(AssertTrue)" incoming="_2aZVOHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVSXMaEeeoYuc64YE22w" target="_2aZVxXMaEeeoYuc64YE22w" source="_2aZVv3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVSnMaEeeoYuc64YE22w" target="_2aZVxnMaEeeoYuc64YE22w" source="_2aZVwnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2aZVS3MaEeeoYuc64YE22w" name="IfStatement@3c574fff">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVTHMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVTXMaEeeoYuc64YE22w" target="_2aZVXXMaEeeoYuc64YE22w" source="_2aZVZnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVTnMaEeeoYuc64YE22w" target="_2aZVaHMaEeeoYuc64YE22w" source="_2aZVZnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVT3MaEeeoYuc64YE22w" target="_2aZVbnMaEeeoYuc64YE22w" source="_2aZVa3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVUHMaEeeoYuc64YE22w" target="_2aZVb3MaEeeoYuc64YE22w" source="_2aZVYHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVUXMaEeeoYuc64YE22w" target="_2aZVcHMaEeeoYuc64YE22w" source="_2aZVbnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVUnMaEeeoYuc64YE22w" target="_2aZVcHMaEeeoYuc64YE22w" source="_2aZVbnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVU3MaEeeoYuc64YE22w" target="_2aZVb3MaEeeoYuc64YE22w" source="_2aZVcHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aZVVHMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVVXMaEeeoYuc64YE22w" target="_2aZVY3MaEeeoYuc64YE22w" source="_2aZVWHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVVnMaEeeoYuc64YE22w" target="_2aZVcnMaEeeoYuc64YE22w" source="_2aZVb3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZVV3MaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_2aZVWHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2aZVVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVWXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVWnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2aZVW3MaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2aZVXHMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_2aZVXXMaEeeoYuc64YE22w" name="Test(==).first" incoming="_2aZVTXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVXnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVX3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2aZVYHMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_2aZVUHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVYXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVYnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2aZVY3MaEeeoYuc64YE22w" name="Test(==).second" incoming="_2aZVVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVZHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVZXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aZVZnMaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_2aZVMHMaEeeoYuc64YE22w" outgoing="_2aZVTXMaEeeoYuc64YE22w _2aZVTnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZVZ3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2aZVaHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aZVTnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVaXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVanMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2aZVa3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aZVT3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVbHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVbXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aZVbnMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2aZVT3MaEeeoYuc64YE22w" outgoing="_2aZVUXMaEeeoYuc64YE22w _2aZVUnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2aZVb3MaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2aZVUHMaEeeoYuc64YE22w _2aZVU3MaEeeoYuc64YE22w" outgoing="_2aZVVnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2aZVcHMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2aZVUXMaEeeoYuc64YE22w _2aZVUnMaEeeoYuc64YE22w" outgoing="_2aZVU3MaEeeoYuc64YE22w" decisionInputFlow="_2aZVUnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZVcXMaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_2aZVcnMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2aZVVnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVc3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVdHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aZVdXMaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVdnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVd3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVeHMaEeeoYuc64YE22w" name="ExpressionStatement@709351ea">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVeXMaEeeoYuc64YE22w" target="_2aZVfHMaEeeoYuc64YE22w" source="_2aZVi3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aZVenMaEeeoYuc64YE22w" target="_2aZVe3MaEeeoYuc64YE22w" source="_2aZVgnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZVe3MaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_2aZVenMaEeeoYuc64YE22w">
              <argument xmi:id="_2aZVfHMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_2aZVeXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVfXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVfnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aZVf3MaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVgHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVgXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVgnMaEeeoYuc64YE22w" name="Tuple@57d72984" outgoing="_2aZVenMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVg3MaEeeoYuc64YE22w" target="_2aZVj3MaEeeoYuc64YE22w" source="_2aZVhXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZVhHMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_2aZVhXMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_2aZVg3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVhnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVh3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2aZViHMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZViXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVinMaEeeoYuc64YE22w" target="_2aZVi3MaEeeoYuc64YE22w" source="_2aZVlXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aZVi3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2aZVinMaEeeoYuc64YE22w" outgoing="_2aZVeXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVjHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVjXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZVjnMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_2aZVj3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2aZVg3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVkHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVkXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2aZVknMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2aZVMXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVk3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVlHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2aZVlXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2aZVinMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVlnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVl3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVmHMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVmXMaEeeoYuc64YE22w" target="_2aZVnXMaEeeoYuc64YE22w" source="_2aZVmnMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aZVmnMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_2aZVMnMaEeeoYuc64YE22w" outgoing="_2aZVmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVm3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVnHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aZVnXMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_2aZVmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVnnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVn3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVoHMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVoXMaEeeoYuc64YE22w" target="_2aZVpXMaEeeoYuc64YE22w" source="_2aZVonMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aZVonMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aZVM3MaEeeoYuc64YE22w" outgoing="_2aZVoXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVo3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVpHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aZVpXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aZVoXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVpnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVp3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZVqHMaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_2aZVqXMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVqnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVq3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2aZVrHMaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVrXMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVrnMaEeeoYuc64YE22w" target="_2aZVsnMaEeeoYuc64YE22w" source="_2aZVr3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aZVr3MaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_2aZVNHMaEeeoYuc64YE22w" outgoing="_2aZVrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVsHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVsXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aZVsnMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_2aZVrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVs3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVtHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZVtXMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZVtnMaEeeoYuc64YE22w" target="_2aZVunMaEeeoYuc64YE22w" source="_2aZVt3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aZVt3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2aZVNXMaEeeoYuc64YE22w" outgoing="_2aZVtnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVuHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVuXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2aZVunMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2aZVtnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVu3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVvHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2aZVvXMaEeeoYuc64YE22w" body="_2aZVeHMaEeeoYuc64YE22w _2aZVmHMaEeeoYuc64YE22w _2aZVoHMaEeeoYuc64YE22w" bodyOutput="_2aZVnXMaEeeoYuc64YE22w _2aZVpXMaEeeoYuc64YE22w" decider="_2aZVdXMaEeeoYuc64YE22w" successorClause="_2aZVvnMaEeeoYuc64YE22w" test="_2aZVTHMaEeeoYuc64YE22w"/>
          <clause xmi:id="_2aZVvnMaEeeoYuc64YE22w" body="_2aZVrXMaEeeoYuc64YE22w _2aZVtXMaEeeoYuc64YE22w" bodyOutput="_2aZVsnMaEeeoYuc64YE22w _2aZVunMaEeeoYuc64YE22w" decider="_2aZVqXMaEeeoYuc64YE22w" predecessorClause="_2aZVvXMaEeeoYuc64YE22w" test="_2aZVqHMaEeeoYuc64YE22w"/>
          <result xmi:id="_2aZVv3MaEeeoYuc64YE22w" name="IfStatement@3c574fff.result(condition)" outgoing="_2aZVSXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVwHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVwXMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2aZVwnMaEeeoYuc64YE22w" name="IfStatement@3c574fff.result(label)" outgoing="_2aZVSnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVw3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVxHMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2aZVxXMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_2aZVSXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2aZVxnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2aZVSnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aZVOXMaEeeoYuc64YE22w" name="Input(label)" outgoing="_2aZVLnMaEeeoYuc64YE22w" parameter="_2aZVKHMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aZVOnMaEeeoYuc64YE22w" name="Input(condition)" outgoing="_2aZVL3MaEeeoYuc64YE22w" parameter="_2aZVK3MaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_2aZVO3MaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aZVNnMaEeeoYuc64YE22w _2aZVN3MaEeeoYuc64YE22w" outgoing="_2aZVOHMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2aZVx3MaEeeoYuc64YE22w" name="Write" visibility="public" node="_2aZV1HMaEeeoYuc64YE22w _2aZV1nMaEeeoYuc64YE22w _2aZV3HMaEeeoYuc64YE22w _2aZV1XMaEeeoYuc64YE22w" group="_2aZV1nMaEeeoYuc64YE22w _2aZV3HMaEeeoYuc64YE22w">
      <packageImport xmi:id="_2aZVyHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2aZVyXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2aZVynMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2aZVy3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2aZVzHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2aZVzXMaEeeoYuc64YE22w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZVznMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZVz3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV0HMaEeeoYuc64YE22w" target="_2aZV2HMaEeeoYuc64YE22w" source="_2aZV1HMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV0XMaEeeoYuc64YE22w" target="_2aZV5XMaEeeoYuc64YE22w" source="_2aZV23MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV0nMaEeeoYuc64YE22w" target="_2aZV1XMaEeeoYuc64YE22w" source="_2aZV1nMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV03MaEeeoYuc64YE22w" target="_2aZV3HMaEeeoYuc64YE22w" source="_2aZV1XMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2aZV1nMaEeeoYuc64YE22w" name="Node(Input(value))" outgoing="_2aZV0nMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV13MaEeeoYuc64YE22w" target="_2aZV23MaEeeoYuc64YE22w" source="_2aZV2HMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2aZV2HMaEeeoYuc64YE22w" name="Input(value)" incoming="_2aZV0HMaEeeoYuc64YE22w" outgoing="_2aZV13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZV2XMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZV2nMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2aZV23MaEeeoYuc64YE22w" name="Fork(value)" incoming="_2aZV13MaEeeoYuc64YE22w" outgoing="_2aZV0XMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2aZV3HMaEeeoYuc64YE22w" name="Body(Write)" incoming="_2aZV03MaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZV3XMaEeeoYuc64YE22w" name="ExpressionStatement@148a73be">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV3nMaEeeoYuc64YE22w" target="_2aZWIHMaEeeoYuc64YE22w" source="_2aZWLXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV33MaEeeoYuc64YE22w" target="_2aZV4HMaEeeoYuc64YE22w" source="_2aZWIXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_2aZV4HMaEeeoYuc64YE22w" name="Collect(Call(write))" incoming="_2aZV33MaEeeoYuc64YE22w" mode="parallel" inputElement="_2aZWIHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV4XMaEeeoYuc64YE22w" target="_2aZV6XMaEeeoYuc64YE22w" source="_2aZWH3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV4nMaEeeoYuc64YE22w" target="_2aZV_3MaEeeoYuc64YE22w" source="_2aZV5XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV43MaEeeoYuc64YE22w" target="_2aZV6HMaEeeoYuc64YE22w" source="_2aZV8nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV5HMaEeeoYuc64YE22w" target="_2aZV73MaEeeoYuc64YE22w" source="_2aZWIHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2aZV5XMaEeeoYuc64YE22w" name="Collect(Call(write)).input(Fork(value))" incoming="_2aZV0XMaEeeoYuc64YE22w" outgoing="_2aZV4nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZV5nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZV53MaEeeoYuc64YE22w" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2aZV6HMaEeeoYuc64YE22w" name="Call(write)" incoming="_2aZV43MaEeeoYuc64YE22w">
              <argument xmi:id="_2aZV6XMaEeeoYuc64YE22w" name="Call(write).argument(value)" incoming="_2aZV4XMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZV6nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZV63MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aZV7HMaEeeoYuc64YE22w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZV7XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZV7nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_2aZV73MaEeeoYuc64YE22w" name="Call(write).target" incoming="_2aZV5HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZV8HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZV8XMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZV8nMaEeeoYuc64YE22w" name="Tuple@41d1fbca" outgoing="_2aZV43MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV83MaEeeoYuc64YE22w" target="_2aZWB3MaEeeoYuc64YE22w" source="_2aZV_3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV9HMaEeeoYuc64YE22w" target="_2aZWBnMaEeeoYuc64YE22w" source="_2aZV_nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV9XMaEeeoYuc64YE22w" target="_2aZWEnMaEeeoYuc64YE22w" source="_2aZV_3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV9nMaEeeoYuc64YE22w" target="_2aZWHnMaEeeoYuc64YE22w" source="_2aZWHXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV93MaEeeoYuc64YE22w" target="_2aZWHnMaEeeoYuc64YE22w" source="_2aZWCnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV-HMaEeeoYuc64YE22w" target="_2aZWDXMaEeeoYuc64YE22w" source="_2aZWHnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aZV-XMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2aZV-nMaEeeoYuc64YE22w" target="_2aZWE3MaEeeoYuc64YE22w" source="_2aZWHnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2aZV-3MaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV_HMaEeeoYuc64YE22w" target="_2aZWH3MaEeeoYuc64YE22w" source="_2aZWD3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZV_XMaEeeoYuc64YE22w" target="_2aZWH3MaEeeoYuc64YE22w" source="_2aZWFXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZV_nMaEeeoYuc64YE22w" name="Operands(EqualityExpression@736d7f75)" outgoing="_2aZV9HMaEeeoYuc64YE22w">
                <node xmi:type="uml:ForkNode" xmi:id="_2aZV_3MaEeeoYuc64YE22w" name="Fork()@5fbb3ca8" incoming="_2aZV4nMaEeeoYuc64YE22w" outgoing="_2aZV83MaEeeoYuc64YE22w _2aZV9XMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZWAHMaEeeoYuc64YE22w" name="RightHandSide@4aa8939b"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZWAXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_2aZWAnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWA3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWBHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2aZWBXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZWBnMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2aZV9HMaEeeoYuc64YE22w">
                <argument xmi:id="_2aZWB3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2aZV83MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWCHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWCXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2aZWCnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2aZV93MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWC3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWDHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZWDXMaEeeoYuc64YE22w" name="NullCoalescingExpression@4f5df437.operand2" incoming="_2aZV-HMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZWDnMaEeeoYuc64YE22w" target="_2aZWD3MaEeeoYuc64YE22w" source="_2aZWEnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aZWD3MaEeeoYuc64YE22w" name="NullCoalescingExpression@4f5df437.operand2.result" incoming="_2aZWDnMaEeeoYuc64YE22w" outgoing="_2aZV_HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWEHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWEXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_2aZWEnMaEeeoYuc64YE22w" name="Merge(Fork()@5fbb3ca8)" incoming="_2aZV9XMaEeeoYuc64YE22w" outgoing="_2aZWDnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZWE3MaEeeoYuc64YE22w" name="NullCoalescingExpression@4f5df437.operand3" incoming="_2aZV-nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZWFHMaEeeoYuc64YE22w" target="_2aZWFXMaEeeoYuc64YE22w" source="_2aZWGXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2aZWFXMaEeeoYuc64YE22w" name="NullCoalescingExpression@4f5df437.operand3.result" incoming="_2aZWFHMaEeeoYuc64YE22w" outgoing="_2aZV_XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWFnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWF3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZWGHMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_2aZWGXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_2aZWFHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWGnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWG3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2aZWHHMaEeeoYuc64YE22w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2aZWHXMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@4f5df437)" outgoing="_2aZV9nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_2aZWHnMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@4f5df437)" incoming="_2aZV9nMaEeeoYuc64YE22w _2aZV93MaEeeoYuc64YE22w" outgoing="_2aZV-HMaEeeoYuc64YE22w _2aZV-nMaEeeoYuc64YE22w" decisionInputFlow="_2aZV93MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_2aZWH3MaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@4f5df437.result)" incoming="_2aZV_HMaEeeoYuc64YE22w _2aZV_XMaEeeoYuc64YE22w" outgoing="_2aZV4XMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_2aZWIHMaEeeoYuc64YE22w" name="Collect(Call(write)).inputElement" incoming="_2aZV3nMaEeeoYuc64YE22w" outgoing="_2aZV5HMaEeeoYuc64YE22w" regionAsInput="_2aZV4HMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZWIXMaEeeoYuc64YE22w" name="Feature(Call(At).result())" outgoing="_2aZV33MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZWInMaEeeoYuc64YE22w" target="_2aZWJ3MaEeeoYuc64YE22w" source="_2aZWMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZWI3MaEeeoYuc64YE22w" target="_2aZWOnMaEeeoYuc64YE22w" source="_2aZWNnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2aZWJHMaEeeoYuc64YE22w" target="_2aZWJnMaEeeoYuc64YE22w" source="_2aZWMHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2aZWJXMaEeeoYuc64YE22w" target="_2aZWKnMaEeeoYuc64YE22w" source="_2aZWOnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2aZWJnMaEeeoYuc64YE22w" name="Call(At)" incoming="_2aZWJHMaEeeoYuc64YE22w">
              <argument xmi:id="_2aZWJ3MaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_2aZWInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWKHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWKXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <argument xmi:id="_2aZWKnMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_2aZWJXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWK3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWLHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2aZWLXMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_2aZV3nMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWLnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWL3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2aZWMHMaEeeoYuc64YE22w" name="Tuple@7faa5f57" outgoing="_2aZWJHMaEeeoYuc64YE22w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_2aZWMXMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_2aZWMnMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel).result" outgoing="_2aZWInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWM3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWNHMaEeeoYuc64YE22w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2aZWNXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_2aZWNnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2aZWI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2aZWN3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2aZWOHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2aZWOXMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2aZWOnMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_2aZWI3MaEeeoYuc64YE22w" outgoing="_2aZWJXMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2aZV1HMaEeeoYuc64YE22w" name="Input(value)" outgoing="_2aZV0HMaEeeoYuc64YE22w" parameter="_2aZVzXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_2aZV1XMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2aZV0nMaEeeoYuc64YE22w" outgoing="_2aZV03MaEeeoYuc64YE22w"/>
    </packagedElement>
    <profileApplication xmi:id="_2aZWO3MaEeeoYuc64YE22w">
      <eAnnotations xmi:id="_2aZWPHMaEeeoYuc64YE22w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_2aZWPXMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYKvHMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2aZWPnMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYJ5XMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2aZWP3MaEeeoYuc64YE22w" base_BehavioralFeature="_2aYuC3MaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2aZWQHMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYuCXMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2aZWQXMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYKA3MaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2aZWQnMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYulnMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2aZWQ3MaEeeoYuc64YE22w" base_BehavioralFeature="_2aYKw3MaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2aZWRHMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYJ6XMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2aZWRXMaEeeoYuc64YE22w" base_BehavioralFeature="_2aYumnMaEeeoYuc64YE22w"/>
</xmi:XMI>

<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_2sXiMNXWEem1l5O0R0OWkQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_2sXiMdXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Operation" visibility="public">
      <packageImport xmi:id="_2sXiMtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sXiM9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sXiNNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sXiNdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sXiNtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_2sXiN9XWEem1l5O0R0OWkQ" general="_2sYMGtXWEem1l5O0R0OWkQ"/>
      <ownedAttribute xmi:id="_2sXiONXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Operation$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiOdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiOtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sXiO9XWEem1l5O0R0OWkQ" name="Expressions_Sequence_Operation$method$1" visibility="private" specification="_2sYLPNXWEem1l5O0R0OWkQ" node="_2sXiQNXWEem1l5O0R0OWkQ _2sXiQdXWEem1l5O0R0OWkQ" group="_2sXiQdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sXiPNXWEem1l5O0R0OWkQ" name="" type="_2sXiMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiPdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiPtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiP9XWEem1l5O0R0OWkQ" target="_2sXiQNXWEem1l5O0R0OWkQ" source="_2sXiatXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2sXiQdXWEem1l5O0R0OWkQ" name="Body(Expressions_Sequence_Operation$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiQtXWEem1l5O0R0OWkQ" target="_2sXiatXWEem1l5O0R0OWkQ" source="_2sXiZ9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXiQ9XWEem1l5O0R0OWkQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXiRNXWEem1l5O0R0OWkQ" name="ExpressionStatement@5c87b484">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiRdXWEem1l5O0R0OWkQ" target="_2sXiXdXWEem1l5O0R0OWkQ" source="_2sXiS9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXiRtXWEem1l5O0R0OWkQ" target="_2sXiXNXWEem1l5O0R0OWkQ" source="_2sXiSdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiR9XWEem1l5O0R0OWkQ" target="_2sXiVtXWEem1l5O0R0OWkQ" source="_2sXiUNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXiSNXWEem1l5O0R0OWkQ" target="_2sXiU9XWEem1l5O0R0OWkQ" source="_2sXiSdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXiSdXWEem1l5O0R0OWkQ" name="Tuple@1e3d60c2" outgoing="_2sXiRtXWEem1l5O0R0OWkQ _2sXiSNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXiStXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2sXiS9XWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_2sXiRdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiTNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiTdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2sXiTtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2sXiT9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2sXiUNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sXiR9XWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiUdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiUtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXiU9XWEem1l5O0R0OWkQ" name="Node(Call(run))" incoming="_2sXiSNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiVNXWEem1l5O0R0OWkQ" target="_2sXiWdXWEem1l5O0R0OWkQ" source="_2sXiYNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiVdXWEem1l5O0R0OWkQ" target="_2sXiY9XWEem1l5O0R0OWkQ" source="_2sXiVtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sXiVtXWEem1l5O0R0OWkQ" name="Input(Call(run).target)" incoming="_2sXiR9XWEem1l5O0R0OWkQ" outgoing="_2sXiVdXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiV9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiWNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sXiWdXWEem1l5O0R0OWkQ" name="Output(Call(run).result())" incoming="_2sXiVNXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiWtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiW9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2sXiXNXWEem1l5O0R0OWkQ" name="Call(run)" incoming="_2sXiRtXWEem1l5O0R0OWkQ" operation="_2sYLQNXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sXiXdXWEem1l5O0R0OWkQ" name="Call(run).argument(tester)" incoming="_2sXiRdXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiXtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiX9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sXiYNXWEem1l5O0R0OWkQ" name="Call(run).result()" outgoing="_2sXiVNXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiYdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiYtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_2sXiY9XWEem1l5O0R0OWkQ" name="Call(run).target" incoming="_2sXiVdXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiZNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiZdXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2sXiZtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2sXiZ9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sXiQtXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiaNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiadXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sXiatXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sXiQtXWEem1l5O0R0OWkQ" outgoing="_2sXiP9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXiQNXWEem1l5O0R0OWkQ" name="Return" incoming="_2sXiP9XWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" parameter="_2sXiPNXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sXia9XWEem1l5O0R0OWkQ" name="run$method$1" visibility="private" specification="_2sYLQNXWEem1l5O0R0OWkQ" node="_2sXiddXWEem1l5O0R0OWkQ _2sXidtXWEem1l5O0R0OWkQ _2sXid9XWEem1l5O0R0OWkQ _2sXieNXWEem1l5O0R0OWkQ" group="_2sXieNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sXibNXWEem1l5O0R0OWkQ" name="tester" type="_2sYNLNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXibdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXibtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sXib9XWEem1l5O0R0OWkQ" name="" type="_2sXiMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXicNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXicdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXictXWEem1l5O0R0OWkQ" target="_2sXidtXWEem1l5O0R0OWkQ" source="_2sXiddXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXic9XWEem1l5O0R0OWkQ" target="_2sXid9XWEem1l5O0R0OWkQ" source="_2sXjatXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXidNXWEem1l5O0R0OWkQ" target="_2sXjc9XWEem1l5O0R0OWkQ" source="_2sXidtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2sXieNXWEem1l5O0R0OWkQ" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiedXWEem1l5O0R0OWkQ" target="_2sXjatXWEem1l5O0R0OWkQ" source="_2sXjZ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXietXWEem1l5O0R0OWkQ" target="_2sXjetXWEem1l5O0R0OWkQ" source="_2sXjatXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXie9XWEem1l5O0R0OWkQ" target="_2sXihdXWEem1l5O0R0OWkQ" source="_2sXjedXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXifNXWEem1l5O0R0OWkQ" target="_2sXjedXWEem1l5O0R0OWkQ" source="_2sXja9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXifdXWEem1l5O0R0OWkQ" target="_2sXjftXWEem1l5O0R0OWkQ" source="_2sXjatXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiftXWEem1l5O0R0OWkQ" target="_2sXjhdXWEem1l5O0R0OWkQ" source="_2sXjgdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXif9XWEem1l5O0R0OWkQ" target="_2sXjkdXWEem1l5O0R0OWkQ" source="_2sXjiNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXigNXWEem1l5O0R0OWkQ" target="_2sXjl9XWEem1l5O0R0OWkQ" source="_2sXjjNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXigdXWEem1l5O0R0OWkQ" target="_2sXjm9XWEem1l5O0R0OWkQ" source="_2sXjmtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXigtXWEem1l5O0R0OWkQ" target="_2sXjm9XWEem1l5O0R0OWkQ" source="_2sXjlNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXig9XWEem1l5O0R0OWkQ" target="_2sXja9XWEem1l5O0R0OWkQ" source="_2sXjm9XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sXihNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXihdXWEem1l5O0R0OWkQ" name="Body" incoming="_2sXie9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXihtXWEem1l5O0R0OWkQ" target="_2sXiwtXWEem1l5O0R0OWkQ" source="_2sXitdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXih9XWEem1l5O0R0OWkQ" target="_2sXiu9XWEem1l5O0R0OWkQ" source="_2sXik9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiiNXWEem1l5O0R0OWkQ" target="_2sXi0tXWEem1l5O0R0OWkQ" source="_2sXittXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXiidXWEem1l5O0R0OWkQ" target="_2sXiy9XWEem1l5O0R0OWkQ" source="_2sXiu9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiitXWEem1l5O0R0OWkQ" target="_2sXi49XWEem1l5O0R0OWkQ" source="_2sXit9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXii9XWEem1l5O0R0OWkQ" target="_2sXi29XWEem1l5O0R0OWkQ" source="_2sXiy9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXijNXWEem1l5O0R0OWkQ" target="_2sXi_NXWEem1l5O0R0OWkQ" source="_2sXiuNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXijdXWEem1l5O0R0OWkQ" target="_2sXi9NXWEem1l5O0R0OWkQ" source="_2sXi29XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXijtXWEem1l5O0R0OWkQ" target="_2sXjI9XWEem1l5O0R0OWkQ" source="_2sXiudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXij9XWEem1l5O0R0OWkQ" target="_2sXjDdXWEem1l5O0R0OWkQ" source="_2sXi9NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXikNXWEem1l5O0R0OWkQ" target="_2sXjPdXWEem1l5O0R0OWkQ" source="_2sXiutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXikdXWEem1l5O0R0OWkQ" target="_2sXjNdXWEem1l5O0R0OWkQ" source="_2sXjDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sXiktXWEem1l5O0R0OWkQ" target="_2sXjXNXWEem1l5O0R0OWkQ" source="_2sXjNdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXik9XWEem1l5O0R0OWkQ" name="ExpressionStatement@313ef373" outgoing="_2sXih9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXilNXWEem1l5O0R0OWkQ" target="_2sXitdXWEem1l5O0R0OWkQ" source="_2sXinNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXildXWEem1l5O0R0OWkQ" target="_2sXittXWEem1l5O0R0OWkQ" source="_2sXin9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXiltXWEem1l5O0R0OWkQ" target="_2sXit9XWEem1l5O0R0OWkQ" source="_2sXiotXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXil9XWEem1l5O0R0OWkQ" target="_2sXiuNXWEem1l5O0R0OWkQ" source="_2sXipdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXimNXWEem1l5O0R0OWkQ" target="_2sXiudXWEem1l5O0R0OWkQ" source="_2sXiqNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXimdXWEem1l5O0R0OWkQ" target="_2sXiutXWEem1l5O0R0OWkQ" source="_2sXiq9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXimtXWEem1l5O0R0OWkQ" target="_2sXirtXWEem1l5O0R0OWkQ" source="_2sXistXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2sXim9XWEem1l5O0R0OWkQ" name="Call(test)" operation="_2sYLR9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2sXinNXWEem1l5O0R0OWkQ" name="Call(test).result(notEmpty)" outgoing="_2sXilNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXindXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXintXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2sXin9XWEem1l5O0R0OWkQ" name="Call(test).result(includes)" outgoing="_2sXildXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXioNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiodXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2sXiotXWEem1l5O0R0OWkQ" name="Call(test).result(m)" outgoing="_2sXiltXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXio9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXipNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2sXipdXWEem1l5O0R0OWkQ" name="Call(test).result(n)" outgoing="_2sXil9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiptXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXip9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2sXiqNXWEem1l5O0R0OWkQ" name="Call(test).result(customers)" outgoing="_2sXimNXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiqdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiqtXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <result xmi:id="_2sXiq9XWEem1l5O0R0OWkQ" name="Call(test).result(list)" outgoing="_2sXimdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXirNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXirdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <target xmi:id="_2sXirtXWEem1l5O0R0OWkQ" name="Call(test).target" incoming="_2sXimtXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXir9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXisNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2sXisdXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2sXistXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sXimtXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXis9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXitNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2sXitdXWEem1l5O0R0OWkQ" name="Fork(notEmpty)@576aed47" incoming="_2sXilNXWEem1l5O0R0OWkQ" outgoing="_2sXihtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2sXittXWEem1l5O0R0OWkQ" name="Fork(includes)@49d0c746" incoming="_2sXildXWEem1l5O0R0OWkQ" outgoing="_2sXiiNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2sXit9XWEem1l5O0R0OWkQ" name="Fork(m)@2b231e1a" incoming="_2sXiltXWEem1l5O0R0OWkQ" outgoing="_2sXiitXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2sXiuNXWEem1l5O0R0OWkQ" name="Fork(n)@2b23ceec" incoming="_2sXil9XWEem1l5O0R0OWkQ" outgoing="_2sXijNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2sXiudXWEem1l5O0R0OWkQ" name="Fork(customers)@7cf6ca80" incoming="_2sXimNXWEem1l5O0R0OWkQ" outgoing="_2sXijtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2sXiutXWEem1l5O0R0OWkQ" name="Fork(list)@3353d8af" incoming="_2sXimdXWEem1l5O0R0OWkQ" outgoing="_2sXikNXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXiu9XWEem1l5O0R0OWkQ" name="ExpressionStatement@63691181" incoming="_2sXih9XWEem1l5O0R0OWkQ" outgoing="_2sXiidXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXivNXWEem1l5O0R0OWkQ" target="_2sXiv9XWEem1l5O0R0OWkQ" source="_2sXix9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXivdXWEem1l5O0R0OWkQ" target="_2sXivtXWEem1l5O0R0OWkQ" source="_2sXixdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXivtXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2sXivdXWEem1l5O0R0OWkQ" behavior="_2sYwq9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sXiv9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2sXivNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiwNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiwdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXiwtXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2sXihtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiw9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXixNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXixdXWEem1l5O0R0OWkQ" name="Tuple@2dad1d4c" outgoing="_2sXivdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXixtXWEem1l5O0R0OWkQ" name="Value(&quot;notEmpty&quot;)">
                  <result xmi:id="_2sXix9XWEem1l5O0R0OWkQ" name="Value(&quot;notEmpty&quot;).result" outgoing="_2sXivNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXiyNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXiydXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXiytXWEem1l5O0R0OWkQ" value="notEmpty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXiy9XWEem1l5O0R0OWkQ" name="ExpressionStatement@190d79f4" incoming="_2sXiidXWEem1l5O0R0OWkQ" outgoing="_2sXii9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXizNXWEem1l5O0R0OWkQ" target="_2sXiz9XWEem1l5O0R0OWkQ" source="_2sXi19XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXizdXWEem1l5O0R0OWkQ" target="_2sXiztXWEem1l5O0R0OWkQ" source="_2sXi1dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXiztXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2sXizdXWEem1l5O0R0OWkQ" behavior="_2sYwq9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sXiz9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2sXizNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi0NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi0dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXi0tXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2sXiiNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi09XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi1NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXi1dXWEem1l5O0R0OWkQ" name="Tuple@153faa0a" outgoing="_2sXizdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXi1tXWEem1l5O0R0OWkQ" name="Value(&quot;includes&quot;)">
                  <result xmi:id="_2sXi19XWEem1l5O0R0OWkQ" name="Value(&quot;includes&quot;).result" outgoing="_2sXizNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi2NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi2dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXi2tXWEem1l5O0R0OWkQ" value="includes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXi29XWEem1l5O0R0OWkQ" name="ExpressionStatement@53481a02" incoming="_2sXii9XWEem1l5O0R0OWkQ" outgoing="_2sXijdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXi3NXWEem1l5O0R0OWkQ" target="_2sXi4NXWEem1l5O0R0OWkQ" source="_2sXi69XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXi3dXWEem1l5O0R0OWkQ" target="_2sXi5tXWEem1l5O0R0OWkQ" source="_2sXi8NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXi3tXWEem1l5O0R0OWkQ" target="_2sXi39XWEem1l5O0R0OWkQ" source="_2sXi6dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXi39XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2sXi3tXWEem1l5O0R0OWkQ" behavior="_2sYxENXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sXi4NXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2sXi3NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi4dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi4tXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXi49XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2sXiitXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi5NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi5dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXi5tXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2sXi3dXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi59XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi6NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXi6dXWEem1l5O0R0OWkQ" name="Tuple@925ac16" outgoing="_2sXi3tXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXi6tXWEem1l5O0R0OWkQ" name="Value(&quot;m&quot;)">
                  <result xmi:id="_2sXi69XWEem1l5O0R0OWkQ" name="Value(&quot;m&quot;).result" outgoing="_2sXi3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi7NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi7dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXi7tXWEem1l5O0R0OWkQ" value="m">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXi79XWEem1l5O0R0OWkQ" name="Value(3)">
                  <result xmi:id="_2sXi8NXWEem1l5O0R0OWkQ" name="Value(3).result" outgoing="_2sXi3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi8dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi8tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2sXi89XWEem1l5O0R0OWkQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXi9NXWEem1l5O0R0OWkQ" name="ExpressionStatement@794433b5" incoming="_2sXijdXWEem1l5O0R0OWkQ" outgoing="_2sXij9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXi9dXWEem1l5O0R0OWkQ" target="_2sXi-dXWEem1l5O0R0OWkQ" source="_2sXjBNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXi9tXWEem1l5O0R0OWkQ" target="_2sXi_9XWEem1l5O0R0OWkQ" source="_2sXjCdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXi99XWEem1l5O0R0OWkQ" target="_2sXi-NXWEem1l5O0R0OWkQ" source="_2sXjAtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXi-NXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2sXi99XWEem1l5O0R0OWkQ" behavior="_2sYxENXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sXi-dXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2sXi9dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi-tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi-9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXi_NXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2sXijNXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXi_dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXi_tXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXi_9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2sXi9tXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjANXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjAdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjAtXWEem1l5O0R0OWkQ" name="Tuple@57cf3642" outgoing="_2sXi99XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjA9XWEem1l5O0R0OWkQ" name="Value(&quot;n&quot;)">
                  <result xmi:id="_2sXjBNXWEem1l5O0R0OWkQ" name="Value(&quot;n&quot;).result" outgoing="_2sXi9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjBdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjBtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXjB9XWEem1l5O0R0OWkQ" value="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjCNXWEem1l5O0R0OWkQ" name="Value(3)">
                  <result xmi:id="_2sXjCdXWEem1l5O0R0OWkQ" name="Value(3).result" outgoing="_2sXi9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjC9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2sXjDNXWEem1l5O0R0OWkQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjDdXWEem1l5O0R0OWkQ" name="ExpressionStatement@215695dd" incoming="_2sXij9XWEem1l5O0R0OWkQ" outgoing="_2sXikdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjDtXWEem1l5O0R0OWkQ" target="_2sXjE9XWEem1l5O0R0OWkQ" source="_2sXjH9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjD9XWEem1l5O0R0OWkQ" target="_2sXjFtXWEem1l5O0R0OWkQ" source="_2sXjL9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjENXWEem1l5O0R0OWkQ" target="_2sXjGdXWEem1l5O0R0OWkQ" source="_2sXjMdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjEdXWEem1l5O0R0OWkQ" target="_2sXjEtXWEem1l5O0R0OWkQ" source="_2sXjHNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXjEtXWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_2sXjEdXWEem1l5O0R0OWkQ" behavior="_2sYzMNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sXjE9XWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_2sXjDtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjFNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjFdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXjFtXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_2sXjD9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjF9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjGNXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sXjGdXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_2sXjENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjGtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjG9XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjHNXWEem1l5O0R0OWkQ" name="Tuple@54b3d65b" outgoing="_2sXjEdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjHdXWEem1l5O0R0OWkQ" target="_2sXjLtXWEem1l5O0R0OWkQ" source="_2sXjI9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjHtXWEem1l5O0R0OWkQ" name="Value(&quot;customers.name&quot;)">
                  <result xmi:id="_2sXjH9XWEem1l5O0R0OWkQ" name="Value(&quot;customers.name&quot;).result" outgoing="_2sXjDtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjINXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjIdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXjItXWEem1l5O0R0OWkQ" value="customers.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2sXjI9XWEem1l5O0R0OWkQ" name="Fork(Fork(customers)@7cf6ca80)" incoming="_2sXijtXWEem1l5O0R0OWkQ" outgoing="_2sXjHdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2sXjJNXWEem1l5O0R0OWkQ" name="Collect(Read(name))" mode="parallel" outputElement="_2sXjL9XWEem1l5O0R0OWkQ" inputElement="_2sXjLtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjJdXWEem1l5O0R0OWkQ" target="_2sXjKNXWEem1l5O0R0OWkQ" source="_2sXjLtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjJtXWEem1l5O0R0OWkQ" target="_2sXjL9XWEem1l5O0R0OWkQ" source="_2sXjK9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sXjJ9XWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_2sYLX9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2sXjKNXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_2sXjJdXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjKdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjKtXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2sXjK9XWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_2sXjJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjLNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjLdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2sXjLtXWEem1l5O0R0OWkQ" name="Collect(Read(name)).inputElement" incoming="_2sXjHdXWEem1l5O0R0OWkQ" outgoing="_2sXjJdXWEem1l5O0R0OWkQ" regionAsInput="_2sXjJNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2sXjL9XWEem1l5O0R0OWkQ" name="Collect(Read(name)).outputElement" incoming="_2sXjJtXWEem1l5O0R0OWkQ" outgoing="_2sXjD9XWEem1l5O0R0OWkQ" regionAsOutput="_2sXjJNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjMNXWEem1l5O0R0OWkQ" name="Value(&quot;C&quot;)">
                  <result xmi:id="_2sXjMdXWEem1l5O0R0OWkQ" name="Value(&quot;C&quot;).result" outgoing="_2sXjENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjMtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjM9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXjNNXWEem1l5O0R0OWkQ" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjNdXWEem1l5O0R0OWkQ" name="ExpressionStatement@6af62352" incoming="_2sXikdXWEem1l5O0R0OWkQ" outgoing="_2sXiktXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjNtXWEem1l5O0R0OWkQ" target="_2sXjOtXWEem1l5O0R0OWkQ" source="_2sXjRdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjN9XWEem1l5O0R0OWkQ" target="_2sXjQNXWEem1l5O0R0OWkQ" source="_2sXjTdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjONXWEem1l5O0R0OWkQ" target="_2sXjOdXWEem1l5O0R0OWkQ" source="_2sXjQ9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXjOdXWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_2sXjONXWEem1l5O0R0OWkQ" behavior="_2sYzMNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sXjOtXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_2sXjNtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjO9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjPNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sXjPdXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_2sXikNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjPtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjP9XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sXjQNXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_2sXjN9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjQdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjQtXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjQ9XWEem1l5O0R0OWkQ" name="Tuple@23d503fc" outgoing="_2sXjONXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjRNXWEem1l5O0R0OWkQ" name="Value(&quot;list&quot;)">
                  <result xmi:id="_2sXjRdXWEem1l5O0R0OWkQ" name="Value(&quot;list&quot;).result" outgoing="_2sXjNtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjRtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjR9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXjSNXWEem1l5O0R0OWkQ" value="list">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjSdXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@362c4ee1">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjStXWEem1l5O0R0OWkQ" target="_2sXjVtXWEem1l5O0R0OWkQ" source="_2sXjUNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjS9XWEem1l5O0R0OWkQ" target="_2sXjTdXWEem1l5O0R0OWkQ" source="_2sXjUtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjTNXWEem1l5O0R0OWkQ" target="_2sXjTdXWEem1l5O0R0OWkQ" source="_2sXjWNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2sXjTdXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@362c4ee1.output" incoming="_2sXjS9XWEem1l5O0R0OWkQ _2sXjTNXWEem1l5O0R0OWkQ" outgoing="_2sXjN9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjTtXWEem1l5O0R0OWkQ" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjT9XWEem1l5O0R0OWkQ" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjUNXWEem1l5O0R0OWkQ" name="SequenceExpressionList@77ea0c33#1" outgoing="_2sXjStXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjUdXWEem1l5O0R0OWkQ" name="Value(&quot;Blah&quot;)">
                      <result xmi:id="_2sXjUtXWEem1l5O0R0OWkQ" name="Value(&quot;Blah&quot;).result" outgoing="_2sXjS9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjU9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjVNXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_2sXjVdXWEem1l5O0R0OWkQ" value="Blah">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjVtXWEem1l5O0R0OWkQ" name="SequenceExpressionList@77ea0c33#2" incoming="_2sXjStXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXjV9XWEem1l5O0R0OWkQ" name="Value(1)">
                      <result xmi:id="_2sXjWNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sXjTNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjWdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjWtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_2sXjW9XWEem1l5O0R0OWkQ" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjXNXWEem1l5O0R0OWkQ" name="ExpressionStatement@249e6b7c" incoming="_2sXiktXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjXdXWEem1l5O0R0OWkQ" target="_2sXjX9XWEem1l5O0R0OWkQ" source="_2sXjY9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2sXjXtXWEem1l5O0R0OWkQ" name="Call(done)" operation="_2sYNINXWEem1l5O0R0OWkQ">
                <target xmi:id="_2sXjX9XWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_2sXjXdXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjYNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjYdXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2sXjYtXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2sXjY9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sXjXdXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjZNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjZdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2sXjZtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2sXjZ9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sXiedXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjaNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjadXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sXjatXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sXiedXWEem1l5O0R0OWkQ" outgoing="_2sXic9XWEem1l5O0R0OWkQ _2sXietXWEem1l5O0R0OWkQ _2sXifdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXja9XWEem1l5O0R0OWkQ" name="Super" incoming="_2sXig9XWEem1l5O0R0OWkQ" outgoing="_2sXifNXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjbNXWEem1l5O0R0OWkQ" name="ExpressionStatement@2739066">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXjbdXWEem1l5O0R0OWkQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjbtXWEem1l5O0R0OWkQ" target="_2sXjb9XWEem1l5O0R0OWkQ" source="_2sXjdtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sXjb9XWEem1l5O0R0OWkQ" name="Output(Call(Test$method$1).result())" incoming="_2sXjbtXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjcNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjcdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXjctXWEem1l5O0R0OWkQ" name="Call(Test$method$1)" behavior="_2sYMP9XWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sXjc9XWEem1l5O0R0OWkQ" name="Call(Test$method$1).argument(tester)" incoming="_2sXidNXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjdNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjddXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sXjdtXWEem1l5O0R0OWkQ" name="Call(Test$method$1).result()" outgoing="_2sXjbtXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjd9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjeNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2sXjedXWEem1l5O0R0OWkQ" name="Call(Expressions_Sequence_Operation$initialization$1)" incoming="_2sXifNXWEem1l5O0R0OWkQ" outgoing="_2sXie9XWEem1l5O0R0OWkQ" operation="_2sYLO9XWEem1l5O0R0OWkQ">
            <target xmi:id="_2sXjetXWEem1l5O0R0OWkQ" name="Call(Expressions_Sequence_Operation$initialization$1).target" incoming="_2sXietXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXje9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjfNXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sXjfdXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_2sXiONXWEem1l5O0R0OWkQ">
            <object xmi:id="_2sXjftXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_2sXifdXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjf9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjgNXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2sXjgdXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_2sXiftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjgtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjg9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sXjhNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2sXjhdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sXiftXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjhtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjh9XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2sXjiNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sXif9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjidXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjitXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXji9XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2sXjjNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sXigNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjjdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjjtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2sXjj9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2sXjkNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2sXjkdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sXif9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjktXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjk9XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2sXjlNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sXigtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjldXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjltXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2sXjl9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sXigNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjmNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjmdXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2sXjmtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sXigdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2sXjm9XWEem1l5O0R0OWkQ" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_2sXigdXWEem1l5O0R0OWkQ _2sXigtXWEem1l5O0R0OWkQ" outgoing="_2sXig9XWEem1l5O0R0OWkQ" decisionInputFlow="_2sXigtXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXiddXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2sXictXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" parameter="_2sXibNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2sXidtXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2sXictXWEem1l5O0R0OWkQ" outgoing="_2sXidNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXid9XWEem1l5O0R0OWkQ" name="Return" incoming="_2sXic9XWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" parameter="_2sXib9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sXjnNXWEem1l5O0R0OWkQ" name="test$method$1" visibility="private" specification="_2sYLR9XWEem1l5O0R0OWkQ" node="_2sXjtdXWEem1l5O0R0OWkQ _2sXjttXWEem1l5O0R0OWkQ _2sXjt9XWEem1l5O0R0OWkQ _2sXjuNXWEem1l5O0R0OWkQ _2sXjudXWEem1l5O0R0OWkQ _2sXjutXWEem1l5O0R0OWkQ _2sXju9XWEem1l5O0R0OWkQ" group="_2sXju9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sXjndXWEem1l5O0R0OWkQ" name="notEmpty" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjntXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjn9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sXjoNXWEem1l5O0R0OWkQ" name="includes" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjodXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjotXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sXjo9XWEem1l5O0R0OWkQ" name="m" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjpNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjpdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sXjptXWEem1l5O0R0OWkQ" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjp9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjqNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sXjqdXWEem1l5O0R0OWkQ" name="customers" type="_2sYLW9XWEem1l5O0R0OWkQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjqtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjq9XWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sXjrNXWEem1l5O0R0OWkQ" name="list" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXjrdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXjrtXWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjr9XWEem1l5O0R0OWkQ" target="_2sXjtdXWEem1l5O0R0OWkQ" source="_2sXj6NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjsNXWEem1l5O0R0OWkQ" target="_2sXjttXWEem1l5O0R0OWkQ" source="_2sXj69XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjsdXWEem1l5O0R0OWkQ" target="_2sXjt9XWEem1l5O0R0OWkQ" source="_2sXj7tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjstXWEem1l5O0R0OWkQ" target="_2sXjuNXWEem1l5O0R0OWkQ" source="_2sXj8dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjs9XWEem1l5O0R0OWkQ" target="_2sXjudXWEem1l5O0R0OWkQ" source="_2sXj9NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjtNXWEem1l5O0R0OWkQ" target="_2sXjutXWEem1l5O0R0OWkQ" source="_2sXj99XWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2sXju9XWEem1l5O0R0OWkQ" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjvNXWEem1l5O0R0OWkQ" target="_2sYJT9XWEem1l5O0R0OWkQ" source="_2sXj-tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjvdXWEem1l5O0R0OWkQ" target="_2sYJYtXWEem1l5O0R0OWkQ" source="_2sYJUdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjvtXWEem1l5O0R0OWkQ" target="_2sYJWNXWEem1l5O0R0OWkQ" source="_2sYJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjv9XWEem1l5O0R0OWkQ" target="_2sYJctXWEem1l5O0R0OWkQ" source="_2sYJUdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjwNXWEem1l5O0R0OWkQ" target="_2sYJddXWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjwdXWEem1l5O0R0OWkQ" target="_2sYJaNXWEem1l5O0R0OWkQ" source="_2sYJWNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjwtXWEem1l5O0R0OWkQ" target="_2sYJhdXWEem1l5O0R0OWkQ" source="_2sYJUdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjw9XWEem1l5O0R0OWkQ" target="_2sYJiNXWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjxNXWEem1l5O0R0OWkQ" target="_2sYJe9XWEem1l5O0R0OWkQ" source="_2sYJaNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjxdXWEem1l5O0R0OWkQ" target="_2sYJudXWEem1l5O0R0OWkQ" source="_2sYJfdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjxtXWEem1l5O0R0OWkQ" target="_2sYJjtXWEem1l5O0R0OWkQ" source="_2sYJe9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjx9XWEem1l5O0R0OWkQ" target="_2sYJ7tXWEem1l5O0R0OWkQ" source="_2sYJwtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjyNXWEem1l5O0R0OWkQ" target="_2sYJw9XWEem1l5O0R0OWkQ" source="_2sYJjtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjydXWEem1l5O0R0OWkQ" target="_2sYKANXWEem1l5O0R0OWkQ" source="_2sYJ99XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjytXWEem1l5O0R0OWkQ" target="_2sYKA9XWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjy9XWEem1l5O0R0OWkQ" target="_2sYJ-NXWEem1l5O0R0OWkQ" source="_2sYJw9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjzNXWEem1l5O0R0OWkQ" target="_2sYKG9XWEem1l5O0R0OWkQ" source="_2sYKCdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXjzdXWEem1l5O0R0OWkQ" target="_2sYKCtXWEem1l5O0R0OWkQ" source="_2sYJ-NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjztXWEem1l5O0R0OWkQ" target="_2sYKLdXWEem1l5O0R0OWkQ" source="_2sYKJNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXjz9XWEem1l5O0R0OWkQ" target="_2sYKMNXWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj0NXWEem1l5O0R0OWkQ" target="_2sYKJdXWEem1l5O0R0OWkQ" source="_2sYKCtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj0dXWEem1l5O0R0OWkQ" target="_2sYKN9XWEem1l5O0R0OWkQ" source="_2sYKJdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj0tXWEem1l5O0R0OWkQ" target="_2sYKT9XWEem1l5O0R0OWkQ" source="_2sYKN9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj09XWEem1l5O0R0OWkQ" target="_2sYKZ9XWEem1l5O0R0OWkQ" source="_2sYKT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj1NXWEem1l5O0R0OWkQ" target="_2sYKddXWEem1l5O0R0OWkQ" source="_2sYKZ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj1dXWEem1l5O0R0OWkQ" target="_2sYKh9XWEem1l5O0R0OWkQ" source="_2sYKfNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj1tXWEem1l5O0R0OWkQ" target="_2sYKitXWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj19XWEem1l5O0R0OWkQ" target="_2sYKfdXWEem1l5O0R0OWkQ" source="_2sYKddXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj2NXWEem1l5O0R0OWkQ" target="_2sYKmNXWEem1l5O0R0OWkQ" source="_2sYKf9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj2dXWEem1l5O0R0OWkQ" target="_2sYKm9XWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj2tXWEem1l5O0R0OWkQ" target="_2sYKkNXWEem1l5O0R0OWkQ" source="_2sYKfdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj29XWEem1l5O0R0OWkQ" target="_2sYKs9XWEem1l5O0R0OWkQ" source="_2sYKodXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj3NXWEem1l5O0R0OWkQ" target="_2sYKotXWEem1l5O0R0OWkQ" source="_2sYKkNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj3dXWEem1l5O0R0OWkQ" target="_2sYKztXWEem1l5O0R0OWkQ" source="_2sYKvNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj3tXWEem1l5O0R0OWkQ" target="_2sYKvdXWEem1l5O0R0OWkQ" source="_2sYKotXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj39XWEem1l5O0R0OWkQ" target="_2sYK4NXWEem1l5O0R0OWkQ" source="_2sYK19XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj4NXWEem1l5O0R0OWkQ" target="_2sYK49XWEem1l5O0R0OWkQ" source="_2sXj_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sXj4dXWEem1l5O0R0OWkQ" target="_2sYK2NXWEem1l5O0R0OWkQ" source="_2sYKvdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj4tXWEem1l5O0R0OWkQ" target="_2sXj6NXWEem1l5O0R0OWkQ" source="_2sYJWtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj49XWEem1l5O0R0OWkQ" target="_2sXj69XWEem1l5O0R0OWkQ" source="_2sYJatXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj5NXWEem1l5O0R0OWkQ" target="_2sXj7tXWEem1l5O0R0OWkQ" source="_2sYKOdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj5dXWEem1l5O0R0OWkQ" target="_2sXj8dXWEem1l5O0R0OWkQ" source="_2sYKUdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj5tXWEem1l5O0R0OWkQ" target="_2sXj9NXWEem1l5O0R0OWkQ" source="_2sYKNtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj59XWEem1l5O0R0OWkQ" target="_2sXj99XWEem1l5O0R0OWkQ" source="_2sYK6dXWEem1l5O0R0OWkQ"/>
          <structuredNodeOutput xmi:id="_2sXj6NXWEem1l5O0R0OWkQ" name="Output(notEmpty)" incoming="_2sXj4tXWEem1l5O0R0OWkQ" outgoing="_2sXjr9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXj6dXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXj6tXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2sXj69XWEem1l5O0R0OWkQ" name="Output(includes)" incoming="_2sXj49XWEem1l5O0R0OWkQ" outgoing="_2sXjsNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXj7NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXj7dXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2sXj7tXWEem1l5O0R0OWkQ" name="Output(m)" incoming="_2sXj5NXWEem1l5O0R0OWkQ" outgoing="_2sXjsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXj79XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXj8NXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2sXj8dXWEem1l5O0R0OWkQ" name="Output(n)" incoming="_2sXj5dXWEem1l5O0R0OWkQ" outgoing="_2sXjstXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXj8tXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXj89XWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2sXj9NXWEem1l5O0R0OWkQ" name="Output(customers)" incoming="_2sXj5tXWEem1l5O0R0OWkQ" outgoing="_2sXjs9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXj9dXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXj9tXWEem1l5O0R0OWkQ" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_2sXj99XWEem1l5O0R0OWkQ" name="Output(list)" incoming="_2sXj59XWEem1l5O0R0OWkQ" outgoing="_2sXjtNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXj-NXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXj-dXWEem1l5O0R0OWkQ" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXj-tXWEem1l5O0R0OWkQ" name="ExpressionStatement@5a246cd2" outgoing="_2sXjvNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj-9XWEem1l5O0R0OWkQ" target="_2sXj_NXWEem1l5O0R0OWkQ" source="_2sYJQdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sXj_NXWEem1l5O0R0OWkQ" name="Fork(customer)@27bd8eb7" incoming="_2sXj-9XWEem1l5O0R0OWkQ" outgoing="_2sXjwNXWEem1l5O0R0OWkQ _2sXjw9XWEem1l5O0R0OWkQ _2sXjytXWEem1l5O0R0OWkQ _2sXjz9XWEem1l5O0R0OWkQ _2sXj1tXWEem1l5O0R0OWkQ _2sXj2dXWEem1l5O0R0OWkQ _2sXj4NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXj_dXWEem1l5O0R0OWkQ" name="RightHandSide@3b66a480">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj_tXWEem1l5O0R0OWkQ" target="_2sYJTtXWEem1l5O0R0OWkQ" source="_2sXkBNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXj_9XWEem1l5O0R0OWkQ" target="_2sYJS9XWEem1l5O0R0OWkQ" source="_2sYJTtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sXkANXWEem1l5O0R0OWkQ" target="_2sYJRdXWEem1l5O0R0OWkQ" source="_2sXkCdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXkAdXWEem1l5O0R0OWkQ" target="_2sXkDdXWEem1l5O0R0OWkQ" source="_2sXkB9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sXkAtXWEem1l5O0R0OWkQ" target="_2sXkDdXWEem1l5O0R0OWkQ" source="_2sXkA9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_2sXkA9XWEem1l5O0R0OWkQ" name="Create(Customer)" outgoing="_2sXkAtXWEem1l5O0R0OWkQ" classifier="_2sYLW9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2sXkBNXWEem1l5O0R0OWkQ" name="Create(Customer).result" outgoing="_2sXj_tXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXkBdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXkBtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXkB9XWEem1l5O0R0OWkQ" name="Tuple@5f0c6bbe" outgoing="_2sXkAdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sXkCNXWEem1l5O0R0OWkQ" name="Value(&quot;A&quot;)">
                  <result xmi:id="_2sXkCdXWEem1l5O0R0OWkQ" name="Value(&quot;A&quot;).result" outgoing="_2sXkANXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sXkCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sXkC9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sXkDNXWEem1l5O0R0OWkQ" value="A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sXkDdXWEem1l5O0R0OWkQ" name="Node(Call(Customer))" incoming="_2sXkAtXWEem1l5O0R0OWkQ _2sXkAdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJQNXWEem1l5O0R0OWkQ" target="_2sYJQdXWEem1l5O0R0OWkQ" source="_2sYJTtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYJQdXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Customer).result))" incoming="_2sYJQNXWEem1l5O0R0OWkQ" outgoing="_2sXj-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJQtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJQ9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2sYJRNXWEem1l5O0R0OWkQ" name="Call(Customer)" operation="_2sYMEtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYJRdXWEem1l5O0R0OWkQ" name="Call(Customer).argument(name)" incoming="_2sXkANXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJRtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJR9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYJSNXWEem1l5O0R0OWkQ" name="Call(Customer).result()" type="_2sYLW9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJSdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJStXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_2sYJS9XWEem1l5O0R0OWkQ" name="Call(Customer).target" incoming="_2sXj_9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJTNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJTdXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2sYJTtXWEem1l5O0R0OWkQ" name="Fork(Create(Customer).result)" incoming="_2sXj_tXWEem1l5O0R0OWkQ" outgoing="_2sXj_9XWEem1l5O0R0OWkQ _2sYJQNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJT9XWEem1l5O0R0OWkQ" name="ExpressionStatement@6ab13fcc" incoming="_2sXjvNXWEem1l5O0R0OWkQ" outgoing="_2sXjvtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJUNXWEem1l5O0R0OWkQ" target="_2sYJUdXWEem1l5O0R0OWkQ" source="_2sYJVNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYJUdXWEem1l5O0R0OWkQ" name="Fork(customers)@79e39efc" incoming="_2sYJUNXWEem1l5O0R0OWkQ" outgoing="_2sXjvdXWEem1l5O0R0OWkQ _2sXjv9XWEem1l5O0R0OWkQ _2sXjwtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJUtXWEem1l5O0R0OWkQ" name="RightHandSide@628ec907">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYJU9XWEem1l5O0R0OWkQ" name="Value(null)">
                <result xmi:id="_2sYJVNXWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_2sYJUNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJVdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJVtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_2sYJV9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJWNXWEem1l5O0R0OWkQ" name="ExpressionStatement@524a6d54" incoming="_2sXjvtXWEem1l5O0R0OWkQ" outgoing="_2sXjwdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJWdXWEem1l5O0R0OWkQ" target="_2sYJWtXWEem1l5O0R0OWkQ" source="_2sYJXtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYJWtXWEem1l5O0R0OWkQ" name="Fork(notEmpty)@7f05dbe8" incoming="_2sYJWdXWEem1l5O0R0OWkQ" outgoing="_2sXj4tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJW9XWEem1l5O0R0OWkQ" name="RightHandSide@269c7a1c">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJXNXWEem1l5O0R0OWkQ" name="Node(Call(NotEmpty))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJXdXWEem1l5O0R0OWkQ" target="_2sYJXtXWEem1l5O0R0OWkQ" source="_2sYJZdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYJXtXWEem1l5O0R0OWkQ" name="Output(Call(NotEmpty).result())" incoming="_2sYJXdXWEem1l5O0R0OWkQ" outgoing="_2sYJWdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJX9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJYNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYJYdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
                  <argument xmi:id="_2sYJYtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sXjvdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJY9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJZNXWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2sYJZdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sYJXdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJZtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJZ9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJaNXWEem1l5O0R0OWkQ" name="ExpressionStatement@755e7a74" incoming="_2sXjwdXWEem1l5O0R0OWkQ" outgoing="_2sXjxNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJadXWEem1l5O0R0OWkQ" target="_2sYJatXWEem1l5O0R0OWkQ" source="_2sYJbtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYJatXWEem1l5O0R0OWkQ" name="Fork(includes)@62c13215" incoming="_2sYJadXWEem1l5O0R0OWkQ" outgoing="_2sXj49XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJa9XWEem1l5O0R0OWkQ" name="RightHandSide@3cf5d572">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJbNXWEem1l5O0R0OWkQ" name="Node(Call(Includes))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJbdXWEem1l5O0R0OWkQ" target="_2sYJbtXWEem1l5O0R0OWkQ" source="_2sYJeNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYJbtXWEem1l5O0R0OWkQ" name="Output(Call(Includes).result())" incoming="_2sYJbdXWEem1l5O0R0OWkQ" outgoing="_2sYJadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJb9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJcNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYJcdXWEem1l5O0R0OWkQ" name="Call(Includes)">
                  <argument xmi:id="_2sYJctXWEem1l5O0R0OWkQ" name="Call(Includes).argument(seq)" incoming="_2sXjv9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJc9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJdNXWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <argument xmi:id="_2sYJddXWEem1l5O0R0OWkQ" name="Call(Includes).argument(element)" incoming="_2sXjwNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJdtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJd9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYJeNXWEem1l5O0R0OWkQ" name="Call(Includes).result()" outgoing="_2sYJbdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJedXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJetXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Includes"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJe9XWEem1l5O0R0OWkQ" name="ExpressionStatement@5e64a244" incoming="_2sXjxNXWEem1l5O0R0OWkQ" outgoing="_2sXjxtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJfNXWEem1l5O0R0OWkQ" target="_2sYJfdXWEem1l5O0R0OWkQ" source="_2sYJgdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYJfdXWEem1l5O0R0OWkQ" name="Fork(customers)@6505d090" incoming="_2sYJfNXWEem1l5O0R0OWkQ" outgoing="_2sXjxdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJftXWEem1l5O0R0OWkQ" name="RightHandSide@2b359a0f">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJf9XWEem1l5O0R0OWkQ" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJgNXWEem1l5O0R0OWkQ" target="_2sYJgdXWEem1l5O0R0OWkQ" source="_2sYJi9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYJgdXWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYJgNXWEem1l5O0R0OWkQ" outgoing="_2sYJfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJgtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJg9XWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYJhNXWEem1l5O0R0OWkQ" name="Call(Including)">
                  <argument xmi:id="_2sYJhdXWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXjwtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJhtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJh9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <argument xmi:id="_2sYJiNXWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sXjw9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJidXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJitXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYJi9XWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYJgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJjNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJjdXWEem1l5O0R0OWkQ" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJjtXWEem1l5O0R0OWkQ" name="ExpressionStatement@415b0d35" incoming="_2sXjxtXWEem1l5O0R0OWkQ" outgoing="_2sXjyNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJj9XWEem1l5O0R0OWkQ" target="_2sYJvNXWEem1l5O0R0OWkQ" source="_2sYJpdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJkNXWEem1l5O0R0OWkQ" target="_2sYJuNXWEem1l5O0R0OWkQ" source="_2sYJk9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJkdXWEem1l5O0R0OWkQ" target="_2sYJwtXWEem1l5O0R0OWkQ" source="_2sYJv9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJktXWEem1l5O0R0OWkQ" target="_2sYJs9XWEem1l5O0R0OWkQ" source="_2sYJk9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJk9XWEem1l5O0R0OWkQ" name="Tuple@2a55f095" outgoing="_2sYJkNXWEem1l5O0R0OWkQ _2sYJktXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJlNXWEem1l5O0R0OWkQ" target="_2sYJstXWEem1l5O0R0OWkQ" source="_2sYJmtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJldXWEem1l5O0R0OWkQ" target="_2sYJr9XWEem1l5O0R0OWkQ" source="_2sYJstXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJltXWEem1l5O0R0OWkQ" target="_2sYJqdXWEem1l5O0R0OWkQ" source="_2sYJn9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJl9XWEem1l5O0R0OWkQ" target="_2sYJo9XWEem1l5O0R0OWkQ" source="_2sYJndXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJmNXWEem1l5O0R0OWkQ" target="_2sYJo9XWEem1l5O0R0OWkQ" source="_2sYJmdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_2sYJmdXWEem1l5O0R0OWkQ" name="Create(Customer)" outgoing="_2sYJmNXWEem1l5O0R0OWkQ" classifier="_2sYLW9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2sYJmtXWEem1l5O0R0OWkQ" name="Create(Customer).result" outgoing="_2sYJlNXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJm9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJnNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJndXWEem1l5O0R0OWkQ" name="Tuple@4632116" outgoing="_2sYJl9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYJntXWEem1l5O0R0OWkQ" name="Value(&quot;B&quot;)">
                  <result xmi:id="_2sYJn9XWEem1l5O0R0OWkQ" name="Value(&quot;B&quot;).result" outgoing="_2sYJltXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJoNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJodXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sYJotXWEem1l5O0R0OWkQ" value="B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJo9XWEem1l5O0R0OWkQ" name="Node(Call(Customer))" incoming="_2sYJmNXWEem1l5O0R0OWkQ _2sYJl9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJpNXWEem1l5O0R0OWkQ" target="_2sYJpdXWEem1l5O0R0OWkQ" source="_2sYJstXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYJpdXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Customer).result))" incoming="_2sYJpNXWEem1l5O0R0OWkQ" outgoing="_2sYJj9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJptXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJp9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2sYJqNXWEem1l5O0R0OWkQ" name="Call(Customer)" operation="_2sYMEtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYJqdXWEem1l5O0R0OWkQ" name="Call(Customer).argument(name)" incoming="_2sYJltXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJqtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJq9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYJrNXWEem1l5O0R0OWkQ" name="Call(Customer).result()" type="_2sYLW9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJrdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJrtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_2sYJr9XWEem1l5O0R0OWkQ" name="Call(Customer).target" incoming="_2sYJldXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJsNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJsdXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2sYJstXWEem1l5O0R0OWkQ" name="Fork(Create(Customer).result)" incoming="_2sYJlNXWEem1l5O0R0OWkQ" outgoing="_2sYJldXWEem1l5O0R0OWkQ _2sYJpNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJs9XWEem1l5O0R0OWkQ" name="Node(Call(Including))" incoming="_2sYJktXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJtNXWEem1l5O0R0OWkQ" target="_2sYJtdXWEem1l5O0R0OWkQ" source="_2sYJv9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYJtdXWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYJtNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJttXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJt9XWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYJuNXWEem1l5O0R0OWkQ" name="Call(Including)" incoming="_2sYJkNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYJudXWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXjxdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJutXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJu9XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYJvNXWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sYJj9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJvdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJvtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYJv9XWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYJkdXWEem1l5O0R0OWkQ _2sYJtNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJwNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJwdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYJwtXWEem1l5O0R0OWkQ" name="Fork(customers)@24a4f640" incoming="_2sYJkdXWEem1l5O0R0OWkQ" outgoing="_2sXjx9XWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJw9XWEem1l5O0R0OWkQ" name="ExpressionStatement@58d8cc39" incoming="_2sXjyNXWEem1l5O0R0OWkQ" outgoing="_2sXjy9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJxNXWEem1l5O0R0OWkQ" target="_2sYJ8dXWEem1l5O0R0OWkQ" source="_2sYJ2tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJxdXWEem1l5O0R0OWkQ" target="_2sYJ7dXWEem1l5O0R0OWkQ" source="_2sYJyNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJxtXWEem1l5O0R0OWkQ" target="_2sYJ99XWEem1l5O0R0OWkQ" source="_2sYJ9NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJx9XWEem1l5O0R0OWkQ" target="_2sYJ6NXWEem1l5O0R0OWkQ" source="_2sYJyNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJyNXWEem1l5O0R0OWkQ" name="Tuple@1c7d7c3f" outgoing="_2sYJxdXWEem1l5O0R0OWkQ _2sYJx9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJydXWEem1l5O0R0OWkQ" target="_2sYJ59XWEem1l5O0R0OWkQ" source="_2sYJz9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJytXWEem1l5O0R0OWkQ" target="_2sYJ5NXWEem1l5O0R0OWkQ" source="_2sYJ59XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJy9XWEem1l5O0R0OWkQ" target="_2sYJ3tXWEem1l5O0R0OWkQ" source="_2sYJ1NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJzNXWEem1l5O0R0OWkQ" target="_2sYJ2NXWEem1l5O0R0OWkQ" source="_2sYJ0tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYJzdXWEem1l5O0R0OWkQ" target="_2sYJ2NXWEem1l5O0R0OWkQ" source="_2sYJztXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_2sYJztXWEem1l5O0R0OWkQ" name="Create(Customer)" outgoing="_2sYJzdXWEem1l5O0R0OWkQ" classifier="_2sYLW9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2sYJz9XWEem1l5O0R0OWkQ" name="Create(Customer).result" outgoing="_2sYJydXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ0NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ0dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJ0tXWEem1l5O0R0OWkQ" name="Tuple@7354cd4f" outgoing="_2sYJzNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYJ09XWEem1l5O0R0OWkQ" name="Value(&quot;C&quot;)">
                  <result xmi:id="_2sYJ1NXWEem1l5O0R0OWkQ" name="Value(&quot;C&quot;).result" outgoing="_2sYJy9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ1dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ1tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sYJ19XWEem1l5O0R0OWkQ" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJ2NXWEem1l5O0R0OWkQ" name="Node(Call(Customer))" incoming="_2sYJzdXWEem1l5O0R0OWkQ _2sYJzNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJ2dXWEem1l5O0R0OWkQ" target="_2sYJ2tXWEem1l5O0R0OWkQ" source="_2sYJ59XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYJ2tXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Customer).result))" incoming="_2sYJ2dXWEem1l5O0R0OWkQ" outgoing="_2sYJxNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ29XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ3NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2sYJ3dXWEem1l5O0R0OWkQ" name="Call(Customer)" operation="_2sYMEtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYJ3tXWEem1l5O0R0OWkQ" name="Call(Customer).argument(name)" incoming="_2sYJy9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ39XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ4NXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYJ4dXWEem1l5O0R0OWkQ" name="Call(Customer).result()" type="_2sYLW9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ4tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ49XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_2sYJ5NXWEem1l5O0R0OWkQ" name="Call(Customer).target" incoming="_2sYJytXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ5dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ5tXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2sYJ59XWEem1l5O0R0OWkQ" name="Fork(Create(Customer).result)" incoming="_2sYJydXWEem1l5O0R0OWkQ" outgoing="_2sYJytXWEem1l5O0R0OWkQ _2sYJ2dXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJ6NXWEem1l5O0R0OWkQ" name="Node(Call(Including))" incoming="_2sYJx9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJ6dXWEem1l5O0R0OWkQ" target="_2sYJ6tXWEem1l5O0R0OWkQ" source="_2sYJ9NXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYJ6tXWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYJ6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ69XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ7NXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYJ7dXWEem1l5O0R0OWkQ" name="Call(Including)" incoming="_2sYJxdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYJ7tXWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXjx9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ79XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ8NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYJ8dXWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sYJxNXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ8tXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ89XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYJ9NXWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYJxtXWEem1l5O0R0OWkQ _2sYJ6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ9dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ9tXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYJ99XWEem1l5O0R0OWkQ" name="Fork(customers)@4af7290c" incoming="_2sYJxtXWEem1l5O0R0OWkQ" outgoing="_2sXjydXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJ-NXWEem1l5O0R0OWkQ" name="ExpressionStatement@7256ff8b" incoming="_2sXjy9XWEem1l5O0R0OWkQ" outgoing="_2sXjzdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJ-dXWEem1l5O0R0OWkQ" target="_2sYKCdXWEem1l5O0R0OWkQ" source="_2sYKBtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYJ-tXWEem1l5O0R0OWkQ" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYJ-9XWEem1l5O0R0OWkQ" target="_2sYJ_NXWEem1l5O0R0OWkQ" source="_2sYKBtXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYJ_NXWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYJ-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYJ_dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYJ_tXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYJ_9XWEem1l5O0R0OWkQ" name="Call(Including)">
                <argument xmi:id="_2sYKANXWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXjydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKAdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKAtXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYKA9XWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sXjytXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKBNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKBdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYKBtXWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYJ-dXWEem1l5O0R0OWkQ _2sYJ-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKB9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKCNXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKCdXWEem1l5O0R0OWkQ" name="Fork(customers)@37577bc9" incoming="_2sYJ-dXWEem1l5O0R0OWkQ" outgoing="_2sXjzNXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKCtXWEem1l5O0R0OWkQ" name="ExpressionStatement@6be0731f" incoming="_2sXjzdXWEem1l5O0R0OWkQ" outgoing="_2sXj0NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKC9XWEem1l5O0R0OWkQ" target="_2sYKHtXWEem1l5O0R0OWkQ" source="_2sYKEdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKDNXWEem1l5O0R0OWkQ" target="_2sYKGtXWEem1l5O0R0OWkQ" source="_2sYKD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKDdXWEem1l5O0R0OWkQ" target="_2sYKJNXWEem1l5O0R0OWkQ" source="_2sYKIdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKDtXWEem1l5O0R0OWkQ" target="_2sYKFdXWEem1l5O0R0OWkQ" source="_2sYKD9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKD9XWEem1l5O0R0OWkQ" name="Tuple@5b39b1c2" outgoing="_2sYKDNXWEem1l5O0R0OWkQ _2sYKDtXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYKENXWEem1l5O0R0OWkQ" name="Value(2)">
                <result xmi:id="_2sYKEdXWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_2sYKC9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKEtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKE9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2sYKFNXWEem1l5O0R0OWkQ" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKFdXWEem1l5O0R0OWkQ" name="Node(Call(ExcludeAt))" incoming="_2sYKDtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKFtXWEem1l5O0R0OWkQ" target="_2sYKF9XWEem1l5O0R0OWkQ" source="_2sYKIdXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYKF9XWEem1l5O0R0OWkQ" name="Output(Call(ExcludeAt).result())" incoming="_2sYKFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKGNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKGdXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKGtXWEem1l5O0R0OWkQ" name="Call(ExcludeAt)" incoming="_2sYKDNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYKG9XWEem1l5O0R0OWkQ" name="Call(ExcludeAt).argument(seq)" incoming="_2sXjzNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKHNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKHdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYKHtXWEem1l5O0R0OWkQ" name="Call(ExcludeAt).argument(index)" incoming="_2sYKC9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKH9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKINXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYKIdXWEem1l5O0R0OWkQ" name="Call(ExcludeAt).result()" outgoing="_2sYKDdXWEem1l5O0R0OWkQ _2sYKFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKItXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKI9XWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKJNXWEem1l5O0R0OWkQ" name="Fork(customers)@a90340b" incoming="_2sYKDdXWEem1l5O0R0OWkQ" outgoing="_2sXjztXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKJdXWEem1l5O0R0OWkQ" name="ExpressionStatement@63e213e4" incoming="_2sXj0NXWEem1l5O0R0OWkQ" outgoing="_2sXj0dXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKJtXWEem1l5O0R0OWkQ" target="_2sYKNtXWEem1l5O0R0OWkQ" source="_2sYKM9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKJ9XWEem1l5O0R0OWkQ" name="Node(Call(Excluding))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKKNXWEem1l5O0R0OWkQ" target="_2sYKKdXWEem1l5O0R0OWkQ" source="_2sYKM9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYKKdXWEem1l5O0R0OWkQ" name="Output(Call(Excluding).result())" incoming="_2sYKKNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKKtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKK9XWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKLNXWEem1l5O0R0OWkQ" name="Call(Excluding)">
                <argument xmi:id="_2sYKLdXWEem1l5O0R0OWkQ" name="Call(Excluding).argument(seq)" incoming="_2sXjztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKLtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKL9XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYKMNXWEem1l5O0R0OWkQ" name="Call(Excluding).argument(element)" incoming="_2sXjz9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKMdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKMtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYKM9XWEem1l5O0R0OWkQ" name="Call(Excluding).result()" outgoing="_2sYKJtXWEem1l5O0R0OWkQ _2sYKKNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKNNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKNdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Excluding"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKNtXWEem1l5O0R0OWkQ" name="Fork(customers)@2905e48a" incoming="_2sYKJtXWEem1l5O0R0OWkQ" outgoing="_2sXj5tXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKN9XWEem1l5O0R0OWkQ" name="ExpressionStatement@20df9f4" incoming="_2sXj0dXWEem1l5O0R0OWkQ" outgoing="_2sXj0tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKONXWEem1l5O0R0OWkQ" target="_2sYKOdXWEem1l5O0R0OWkQ" source="_2sYKRdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKOdXWEem1l5O0R0OWkQ" name="Fork(m)@302f0a53" incoming="_2sYKONXWEem1l5O0R0OWkQ" outgoing="_2sXj5NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKOtXWEem1l5O0R0OWkQ" name="RightHandSide@5de41be8">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKO9XWEem1l5O0R0OWkQ" target="_2sYKSdXWEem1l5O0R0OWkQ" source="_2sYKQNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKPNXWEem1l5O0R0OWkQ" target="_2sYKSNXWEem1l5O0R0OWkQ" source="_2sYKPtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKPdXWEem1l5O0R0OWkQ" target="_2sYKQ9XWEem1l5O0R0OWkQ" source="_2sYKPtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKPtXWEem1l5O0R0OWkQ" name="Tuple@63ce874f" outgoing="_2sYKPNXWEem1l5O0R0OWkQ _2sYKPdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_2sYKP9XWEem1l5O0R0OWkQ" name="ReadExtent(Customer)" classifier="_2sYLW9XWEem1l5O0R0OWkQ">
                  <result xmi:id="_2sYKQNXWEem1l5O0R0OWkQ" name="ReadExtent(Customer).result" outgoing="_2sYKO9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKQdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKQtXWEem1l5O0R0OWkQ" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKQ9XWEem1l5O0R0OWkQ" name="Node(Call(Size))" incoming="_2sYKPdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKRNXWEem1l5O0R0OWkQ" target="_2sYKRdXWEem1l5O0R0OWkQ" source="_2sYKTNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYKRdXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_2sYKRNXWEem1l5O0R0OWkQ" outgoing="_2sYKONXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKRtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKR9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKSNXWEem1l5O0R0OWkQ" name="Call(Size)" incoming="_2sYKPNXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYKSdXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_2sYKO9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKStXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKS9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2sYKTNXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_2sYKRNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKTdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKTtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKT9XWEem1l5O0R0OWkQ" name="ExpressionStatement@26123977" incoming="_2sXj0tXWEem1l5O0R0OWkQ" outgoing="_2sXj09XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKUNXWEem1l5O0R0OWkQ" target="_2sYKUdXWEem1l5O0R0OWkQ" source="_2sYKXdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKUdXWEem1l5O0R0OWkQ" name="Fork(n)@79696aef" incoming="_2sYKUNXWEem1l5O0R0OWkQ" outgoing="_2sXj5dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKUtXWEem1l5O0R0OWkQ" name="RightHandSide@15912c6d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKU9XWEem1l5O0R0OWkQ" target="_2sYKYdXWEem1l5O0R0OWkQ" source="_2sYKWNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKVNXWEem1l5O0R0OWkQ" target="_2sYKYNXWEem1l5O0R0OWkQ" source="_2sYKVtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKVdXWEem1l5O0R0OWkQ" target="_2sYKW9XWEem1l5O0R0OWkQ" source="_2sYKVtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKVtXWEem1l5O0R0OWkQ" name="Tuple@28d1cfa7" outgoing="_2sYKVNXWEem1l5O0R0OWkQ _2sYKVdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_2sYKV9XWEem1l5O0R0OWkQ" name="ReadExtent(Customer)" classifier="_2sYLW9XWEem1l5O0R0OWkQ">
                  <result xmi:id="_2sYKWNXWEem1l5O0R0OWkQ" name="ReadExtent(Customer).result" outgoing="_2sYKU9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKWdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKWtXWEem1l5O0R0OWkQ" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKW9XWEem1l5O0R0OWkQ" name="Node(Call(Size))" incoming="_2sYKVdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKXNXWEem1l5O0R0OWkQ" target="_2sYKXdXWEem1l5O0R0OWkQ" source="_2sYKZNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYKXdXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_2sYKXNXWEem1l5O0R0OWkQ" outgoing="_2sYKUNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKXtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKX9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKYNXWEem1l5O0R0OWkQ" name="Call(Size)" incoming="_2sYKVNXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYKYdXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_2sYKU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKYtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKY9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2sYKZNXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_2sYKXNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKZdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKZtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKZ9XWEem1l5O0R0OWkQ" name="ExpressionStatement@24ace812" incoming="_2sXj09XWEem1l5O0R0OWkQ" outgoing="_2sXj1NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKaNXWEem1l5O0R0OWkQ" target="_2sYKadXWEem1l5O0R0OWkQ" source="_2sYKbdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKadXWEem1l5O0R0OWkQ" name="Fork(list)@271eabfa" incoming="_2sYKaNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKatXWEem1l5O0R0OWkQ" name="RightHandSide@5ae28dc8">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKa9XWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@5ae28dc8">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKbNXWEem1l5O0R0OWkQ" target="_2sYKbdXWEem1l5O0R0OWkQ" source="_2sYKcdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYKbdXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@5ae28dc8.output" incoming="_2sYKbNXWEem1l5O0R0OWkQ" outgoing="_2sYKaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKbtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKb9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYKcNXWEem1l5O0R0OWkQ" name="Value(&quot;x&quot;)">
                  <result xmi:id="_2sYKcdXWEem1l5O0R0OWkQ" name="Value(&quot;x&quot;).result" outgoing="_2sYKbNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKctXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKc9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sYKdNXWEem1l5O0R0OWkQ" value="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKddXWEem1l5O0R0OWkQ" name="ExpressionStatement@27c66620" incoming="_2sXj1NXWEem1l5O0R0OWkQ" outgoing="_2sXj19XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKdtXWEem1l5O0R0OWkQ" target="_2sYKfNXWEem1l5O0R0OWkQ" source="_2sYKeNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYKd9XWEem1l5O0R0OWkQ" name="Value(null)">
              <result xmi:id="_2sYKeNXWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_2sYKdtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKedXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKetXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralNull" xmi:id="_2sYKe9XWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKfNXWEem1l5O0R0OWkQ" name="Fork(list)@33d49a51" incoming="_2sYKdtXWEem1l5O0R0OWkQ" outgoing="_2sXj1dXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKfdXWEem1l5O0R0OWkQ" name="ExpressionStatement@9bf9e18" incoming="_2sXj19XWEem1l5O0R0OWkQ" outgoing="_2sXj2tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKftXWEem1l5O0R0OWkQ" target="_2sYKf9XWEem1l5O0R0OWkQ" source="_2sYKg9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKf9XWEem1l5O0R0OWkQ" name="Fork(list)@71d85b03" incoming="_2sYKftXWEem1l5O0R0OWkQ" outgoing="_2sXj2NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKgNXWEem1l5O0R0OWkQ" name="RightHandSide@2c6c4556">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKgdXWEem1l5O0R0OWkQ" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKgtXWEem1l5O0R0OWkQ" target="_2sYKg9XWEem1l5O0R0OWkQ" source="_2sYKjdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYKg9XWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYKgtXWEem1l5O0R0OWkQ" outgoing="_2sYKftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKhNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKhdXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKhtXWEem1l5O0R0OWkQ" name="Call(Including)">
                  <argument xmi:id="_2sYKh9XWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXj1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKiNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKidXWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <argument xmi:id="_2sYKitXWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sXj1tXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKi9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKjNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYKjdXWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYKgtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKjtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKj9XWEem1l5O0R0OWkQ" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKkNXWEem1l5O0R0OWkQ" name="ExpressionStatement@135c5345" incoming="_2sXj2tXWEem1l5O0R0OWkQ" outgoing="_2sXj3NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKkdXWEem1l5O0R0OWkQ" target="_2sYKodXWEem1l5O0R0OWkQ" source="_2sYKntXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKktXWEem1l5O0R0OWkQ" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKk9XWEem1l5O0R0OWkQ" target="_2sYKlNXWEem1l5O0R0OWkQ" source="_2sYKntXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYKlNXWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYKk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKldXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKltXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKl9XWEem1l5O0R0OWkQ" name="Call(Including)">
                <argument xmi:id="_2sYKmNXWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXj2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKmdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKmtXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYKm9XWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sXj2dXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKnNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKndXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYKntXWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYKkdXWEem1l5O0R0OWkQ _2sYKk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKn9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKoNXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKodXWEem1l5O0R0OWkQ" name="Fork(list)@2ee22248" incoming="_2sYKkdXWEem1l5O0R0OWkQ" outgoing="_2sXj29XWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKotXWEem1l5O0R0OWkQ" name="ExpressionStatement@74ab0e72" incoming="_2sXj3NXWEem1l5O0R0OWkQ" outgoing="_2sXj3tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKo9XWEem1l5O0R0OWkQ" target="_2sYKttXWEem1l5O0R0OWkQ" source="_2sYKqdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKpNXWEem1l5O0R0OWkQ" target="_2sYKstXWEem1l5O0R0OWkQ" source="_2sYKp9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKpdXWEem1l5O0R0OWkQ" target="_2sYKvNXWEem1l5O0R0OWkQ" source="_2sYKudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKptXWEem1l5O0R0OWkQ" target="_2sYKrdXWEem1l5O0R0OWkQ" source="_2sYKp9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKp9XWEem1l5O0R0OWkQ" name="Tuple@133bcf76" outgoing="_2sYKpNXWEem1l5O0R0OWkQ _2sYKptXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYKqNXWEem1l5O0R0OWkQ" name="Value(&quot;Blah&quot;)">
                <result xmi:id="_2sYKqdXWEem1l5O0R0OWkQ" name="Value(&quot;Blah&quot;).result" outgoing="_2sYKo9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKqtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKq9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2sYKrNXWEem1l5O0R0OWkQ" value="Blah">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKrdXWEem1l5O0R0OWkQ" name="Node(Call(Including))" incoming="_2sYKptXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKrtXWEem1l5O0R0OWkQ" target="_2sYKr9XWEem1l5O0R0OWkQ" source="_2sYKudXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYKr9XWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYKrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKsNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKsdXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKstXWEem1l5O0R0OWkQ" name="Call(Including)" incoming="_2sYKpNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYKs9XWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXj29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKtNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKtdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYKttXWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sYKo9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKt9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKuNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYKudXWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYKpdXWEem1l5O0R0OWkQ _2sYKrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKutXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKu9XWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYKvNXWEem1l5O0R0OWkQ" name="Fork(list)@604c77d5" incoming="_2sYKpdXWEem1l5O0R0OWkQ" outgoing="_2sXj3dXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKvdXWEem1l5O0R0OWkQ" name="ExpressionStatement@f1c8260" incoming="_2sXj3tXWEem1l5O0R0OWkQ" outgoing="_2sXj4dXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKvtXWEem1l5O0R0OWkQ" target="_2sYK0dXWEem1l5O0R0OWkQ" source="_2sYKxNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKv9XWEem1l5O0R0OWkQ" target="_2sYKzdXWEem1l5O0R0OWkQ" source="_2sYKwtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKwNXWEem1l5O0R0OWkQ" target="_2sYK19XWEem1l5O0R0OWkQ" source="_2sYK1NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYKwdXWEem1l5O0R0OWkQ" target="_2sYKyNXWEem1l5O0R0OWkQ" source="_2sYKwtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKwtXWEem1l5O0R0OWkQ" name="Tuple@883f297" outgoing="_2sYKv9XWEem1l5O0R0OWkQ _2sYKwdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYKw9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_2sYKxNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sYKvtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKxdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKxtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2sYKx9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYKyNXWEem1l5O0R0OWkQ" name="Node(Call(Including))" incoming="_2sYKwdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYKydXWEem1l5O0R0OWkQ" target="_2sYKytXWEem1l5O0R0OWkQ" source="_2sYK1NXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYKytXWEem1l5O0R0OWkQ" name="Output(Call(Including).result())" incoming="_2sYKydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKy9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYKzNXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYKzdXWEem1l5O0R0OWkQ" name="Call(Including)" incoming="_2sYKv9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYKztXWEem1l5O0R0OWkQ" name="Call(Including).argument(seq)" incoming="_2sXj3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYKz9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK0NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYK0dXWEem1l5O0R0OWkQ" name="Call(Including).argument(element)" incoming="_2sYKvtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK0tXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK09XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYK1NXWEem1l5O0R0OWkQ" name="Call(Including).result()" outgoing="_2sYKwNXWEem1l5O0R0OWkQ _2sYKydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK1dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK1tXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYK19XWEem1l5O0R0OWkQ" name="Fork(list)@60dae8f4" incoming="_2sYKwNXWEem1l5O0R0OWkQ" outgoing="_2sXj39XWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYK2NXWEem1l5O0R0OWkQ" name="ExpressionStatement@2e65ae58" incoming="_2sXj4dXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK2dXWEem1l5O0R0OWkQ" target="_2sYK6dXWEem1l5O0R0OWkQ" source="_2sYK5tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYK2tXWEem1l5O0R0OWkQ" name="Node(Call(Difference))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK29XWEem1l5O0R0OWkQ" target="_2sYK3NXWEem1l5O0R0OWkQ" source="_2sYK5tXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYK3NXWEem1l5O0R0OWkQ" name="Output(Call(Difference).result())" incoming="_2sYK29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK3dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK3tXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYK39XWEem1l5O0R0OWkQ" name="Call(Difference)">
                <argument xmi:id="_2sYK4NXWEem1l5O0R0OWkQ" name="Call(Difference).argument(seq1)" incoming="_2sXj39XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK4dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK4tXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_2sYK49XWEem1l5O0R0OWkQ" name="Call(Difference).argument(seq2)" incoming="_2sXj4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK5NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK5dXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2sYK5tXWEem1l5O0R0OWkQ" name="Call(Difference).result()" outgoing="_2sYK2dXWEem1l5O0R0OWkQ _2sYK29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK59XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK6NXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Difference"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYK6dXWEem1l5O0R0OWkQ" name="Fork(list)@72ee333e" incoming="_2sYK2dXWEem1l5O0R0OWkQ" outgoing="_2sXj59XWEem1l5O0R0OWkQ"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXjtdXWEem1l5O0R0OWkQ" name="Output(notEmpty)" incoming="_2sXjr9XWEem1l5O0R0OWkQ" parameter="_2sXjndXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXjttXWEem1l5O0R0OWkQ" name="Output(includes)" incoming="_2sXjsNXWEem1l5O0R0OWkQ" parameter="_2sXjoNXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXjt9XWEem1l5O0R0OWkQ" name="Output(m)" incoming="_2sXjsdXWEem1l5O0R0OWkQ" parameter="_2sXjo9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXjuNXWEem1l5O0R0OWkQ" name="Output(n)" incoming="_2sXjstXWEem1l5O0R0OWkQ" parameter="_2sXjptXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXjudXWEem1l5O0R0OWkQ" name="Output(customers)" incoming="_2sXjs9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" parameter="_2sXjqdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sXjutXWEem1l5O0R0OWkQ" name="Output(list)" incoming="_2sXjtNXWEem1l5O0R0OWkQ" parameter="_2sXjrNXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYK6tXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2sYLWtXWEem1l5O0R0OWkQ" node="_2sYK69XWEem1l5O0R0OWkQ" group="_2sYK69XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2sYK69XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYK7NXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Operation$initialization$1" visibility="private" specification="_2sYLO9XWEem1l5O0R0OWkQ" node="_2sYK7dXWEem1l5O0R0OWkQ" group="_2sYK7dXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2sYK7dXWEem1l5O0R0OWkQ" name="Body(Expressions_Sequence_Operation$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK7tXWEem1l5O0R0OWkQ" target="_2sYK_dXWEem1l5O0R0OWkQ" source="_2sYK-tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK79XWEem1l5O0R0OWkQ" target="_2sYLAdXWEem1l5O0R0OWkQ" source="_2sYK_dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK8NXWEem1l5O0R0OWkQ" target="_2sYLDtXWEem1l5O0R0OWkQ" source="_2sYK_dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK8dXWEem1l5O0R0OWkQ" target="_2sYLHdXWEem1l5O0R0OWkQ" source="_2sYK_dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK8tXWEem1l5O0R0OWkQ" target="_2sYLJNXWEem1l5O0R0OWkQ" source="_2sYLINXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK89XWEem1l5O0R0OWkQ" target="_2sYLMNXWEem1l5O0R0OWkQ" source="_2sYLJ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK9NXWEem1l5O0R0OWkQ" target="_2sYLNtXWEem1l5O0R0OWkQ" source="_2sYLK9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYK9dXWEem1l5O0R0OWkQ" target="_2sYLOtXWEem1l5O0R0OWkQ" source="_2sYLOdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYK9tXWEem1l5O0R0OWkQ" target="_2sYLOtXWEem1l5O0R0OWkQ" source="_2sYLM9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYK99XWEem1l5O0R0OWkQ" target="_2sYK_tXWEem1l5O0R0OWkQ" source="_2sYLOtXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYK-NXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYK-dXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2sYK-tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYK7tXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYK-9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYK_NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYK_dXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYK7tXWEem1l5O0R0OWkQ" outgoing="_2sYK79XWEem1l5O0R0OWkQ _2sYK8NXWEem1l5O0R0OWkQ _2sYK8dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYK_tXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2sYK99XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYK_9XWEem1l5O0R0OWkQ" target="_2sYLBNXWEem1l5O0R0OWkQ" source="_2sYLANXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2sYLANXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" outgoing="_2sYK_9XWEem1l5O0R0OWkQ" operation="_2sYNHtXWEem1l5O0R0OWkQ">
              <target xmi:id="_2sYLAdXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_2sYK79XWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLAtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLA9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYLBNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2sYK_9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLBdXWEem1l5O0R0OWkQ" target="_2sYLG9XWEem1l5O0R0OWkQ" source="_2sYLB9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYLBtXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2sYLB9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2sYLBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLCNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLCdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYLCtXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYLC9XWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1))" inputElement="_2sYLG9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLDNXWEem1l5O0R0OWkQ" target="_2sYLGNXWEem1l5O0R0OWkQ" source="_2sYLG9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLDdXWEem1l5O0R0OWkQ" target="_2sYLEtXWEem1l5O0R0OWkQ" source="_2sYLDtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sYLDtXWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2sYK8NXWEem1l5O0R0OWkQ" outgoing="_2sYLDdXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLD9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLENXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2sYLEdXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_2sXiONXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2sYLEtXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_2sYLDdXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLE9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLFNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2sYLFdXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1).result" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLFtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLF9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2sYLGNXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1).value" incoming="_2sYLDNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLGdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLGtXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2sYLG9XWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).inputElement" incoming="_2sYLBdXWEem1l5O0R0OWkQ" outgoing="_2sYLDNXWEem1l5O0R0OWkQ" regionAsInput="_2sYLC9XWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYLHNXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_2sXiONXWEem1l5O0R0OWkQ">
            <object xmi:id="_2sYLHdXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_2sYK8dXWEem1l5O0R0OWkQ" type="_2sXiMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLHtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLH9XWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2sYLINXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_2sYK8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLIdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLItXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYLI9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2sYLJNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYK8tXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLJdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLJtXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2sYLJ9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYK89XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLKNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLKdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYLKtXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2sYLK9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYK9NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLLNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLLdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2sYLLtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYLL9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2sYLMNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYK89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLMdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLMtXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2sYLM9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYK9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLNNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLNdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2sYLNtXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYK9NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLN9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLONXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2sYLOdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYK9dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2sYLOtXWEem1l5O0R0OWkQ" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_2sYK9dXWEem1l5O0R0OWkQ _2sYK9tXWEem1l5O0R0OWkQ" outgoing="_2sYK99XWEem1l5O0R0OWkQ" decisionInputFlow="_2sYK9tXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2sYLO9XWEem1l5O0R0OWkQ" name="Expressions_Sequence_Operation$initialization$1" visibility="protected" method="_2sYK7NXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2sYLPNXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Operation" visibility="public" method="_2sXiO9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYLPdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2sXiMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLPtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLP9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2sYLQNXWEem1l5O0R0OWkQ" name="run" visibility="public" method="_2sXia9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYLQdXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2sYNLNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLQtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLQ9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYLRNXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2sXiMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLRdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLRtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2sYLR9XWEem1l5O0R0OWkQ" name="test" visibility="package" method="_2sXjnNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYLSNXWEem1l5O0R0OWkQ" name="notEmpty" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLSdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLStXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYLS9XWEem1l5O0R0OWkQ" name="includes" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLTNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLTdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYLTtXWEem1l5O0R0OWkQ" name="m" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLT9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLUNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYLUdXWEem1l5O0R0OWkQ" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLUtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLU9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYLVNXWEem1l5O0R0OWkQ" name="customers" visibility="package" type="_2sYLW9XWEem1l5O0R0OWkQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLVdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLVtXWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYLV9XWEem1l5O0R0OWkQ" name="list" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLWNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLWdXWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2sYLWtXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2sYK6tXWEem1l5O0R0OWkQ" redefinedOperation="_2sYNH9XWEem1l5O0R0OWkQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2sYLW9XWEem1l5O0R0OWkQ" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_2sYLXNXWEem1l5O0R0OWkQ" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLXdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLXtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2sYLX9XWEem1l5O0R0OWkQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLYNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLYdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYLYtXWEem1l5O0R0OWkQ" name="Customer$method$1" visibility="private" specification="_2sYMEtXWEem1l5O0R0OWkQ" node="_2sYLbNXWEem1l5O0R0OWkQ _2sYLbdXWEem1l5O0R0OWkQ _2sYLbtXWEem1l5O0R0OWkQ _2sYLb9XWEem1l5O0R0OWkQ" group="_2sYLb9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2sYLY9XWEem1l5O0R0OWkQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLZNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLZdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2sYLZtXWEem1l5O0R0OWkQ" name="" type="_2sYLW9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLZ9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLaNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLadXWEem1l5O0R0OWkQ" target="_2sYLbdXWEem1l5O0R0OWkQ" source="_2sYLbNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLatXWEem1l5O0R0OWkQ" target="_2sYLjdXWEem1l5O0R0OWkQ" source="_2sYLbdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLa9XWEem1l5O0R0OWkQ" target="_2sYLbtXWEem1l5O0R0OWkQ" source="_2sYLotXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2sYLb9XWEem1l5O0R0OWkQ" name="Body(Customer$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLcNXWEem1l5O0R0OWkQ" target="_2sYLotXWEem1l5O0R0OWkQ" source="_2sYLn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLcdXWEem1l5O0R0OWkQ" target="_2sYLpNXWEem1l5O0R0OWkQ" source="_2sYLotXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYLctXWEem1l5O0R0OWkQ" target="_2sYLe9XWEem1l5O0R0OWkQ" source="_2sYLo9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLc9XWEem1l5O0R0OWkQ" target="_2sYLqNXWEem1l5O0R0OWkQ" source="_2sYLotXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLdNXWEem1l5O0R0OWkQ" target="_2sYLr9XWEem1l5O0R0OWkQ" source="_2sYLq9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLddXWEem1l5O0R0OWkQ" target="_2sYLu9XWEem1l5O0R0OWkQ" source="_2sYLstXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLdtXWEem1l5O0R0OWkQ" target="_2sYLwdXWEem1l5O0R0OWkQ" source="_2sYLttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYLd9XWEem1l5O0R0OWkQ" target="_2sYLxdXWEem1l5O0R0OWkQ" source="_2sYLxNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLeNXWEem1l5O0R0OWkQ" target="_2sYLxdXWEem1l5O0R0OWkQ" source="_2sYLvtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYLedXWEem1l5O0R0OWkQ" target="_2sYLo9XWEem1l5O0R0OWkQ" source="_2sYLxdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYLetXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYLe9XWEem1l5O0R0OWkQ" name="Body" incoming="_2sYLctXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYLfNXWEem1l5O0R0OWkQ" name="ExpressionStatement@70d55f69">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLfdXWEem1l5O0R0OWkQ" target="_2sYLh9XWEem1l5O0R0OWkQ" source="_2sYLg9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLftXWEem1l5O0R0OWkQ" target="_2sYLkNXWEem1l5O0R0OWkQ" source="_2sYLjdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLf9XWEem1l5O0R0OWkQ" target="_2sYLlNXWEem1l5O0R0OWkQ" source="_2sYLitXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYLgNXWEem1l5O0R0OWkQ" target="_2sYLgdXWEem1l5O0R0OWkQ" source="_2sYLndXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYLgdXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@1dcffb36)" incoming="_2sYLgNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYLgtXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2sYLg9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYLfdXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLhNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLhdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2sYLhtXWEem1l5O0R0OWkQ" name="Clear(name)" structuralFeature="_2sYLX9XWEem1l5O0R0OWkQ">
                  <object xmi:id="_2sYLh9XWEem1l5O0R0OWkQ" name="Clear(name).object" incoming="_2sYLfdXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLiNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLidXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2sYLitXWEem1l5O0R0OWkQ" name="Clear(name).result" outgoing="_2sYLf9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLi9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLjNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2sYLjdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@1dcffb36)" incoming="_2sYLatXWEem1l5O0R0OWkQ" outgoing="_2sYLftXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYLjtXWEem1l5O0R0OWkQ" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLj9XWEem1l5O0R0OWkQ" target="_2sYLmtXWEem1l5O0R0OWkQ" source="_2sYLkNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2sYLkNXWEem1l5O0R0OWkQ" name="WriteAll(Customer::name).input(Customer::name)" incoming="_2sYLftXWEem1l5O0R0OWkQ" outgoing="_2sYLj9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLkdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLktXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2sYLk9XWEem1l5O0R0OWkQ" name="Write(name)" structuralFeature="_2sYLX9XWEem1l5O0R0OWkQ" isReplaceAll="true">
                    <object xmi:id="_2sYLlNXWEem1l5O0R0OWkQ" name="Write(name).object" incoming="_2sYLf9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLldXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLltXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2sYLl9XWEem1l5O0R0OWkQ" name="Write(name).result" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLmNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLmdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2sYLmtXWEem1l5O0R0OWkQ" name="Write(name).value" incoming="_2sYLj9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLm9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLnNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYLndXWEem1l5O0R0OWkQ" name="RightHandSide@18847abc" outgoing="_2sYLgNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYLntXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2sYLn9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYLcNXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLoNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLodXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYLotXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYLcNXWEem1l5O0R0OWkQ" outgoing="_2sYLa9XWEem1l5O0R0OWkQ _2sYLcdXWEem1l5O0R0OWkQ _2sYLc9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2sYLo9XWEem1l5O0R0OWkQ" name="Call(Customer$initialization$1)" incoming="_2sYLedXWEem1l5O0R0OWkQ" outgoing="_2sYLctXWEem1l5O0R0OWkQ" operation="_2sYMEdXWEem1l5O0R0OWkQ">
              <target xmi:id="_2sYLpNXWEem1l5O0R0OWkQ" name="Call(Customer$initialization$1).target" incoming="_2sYLcdXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLpdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLptXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYLp9XWEem1l5O0R0OWkQ" name="Read(Customer$initializationFlag$1)" structuralFeature="_2sYLXNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2sYLqNXWEem1l5O0R0OWkQ" name="Read(Customer$initializationFlag$1).object" incoming="_2sYLc9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLqdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLqtXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2sYLq9XWEem1l5O0R0OWkQ" name="Read(Customer$initializationFlag$1).result" outgoing="_2sYLdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLrNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLrdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYLrtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2sYLr9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYLdNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLsNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLsdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYLstXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYLddXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLs9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLtNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYLtdXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2sYLttXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYLdtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLt9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLuNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sYLudXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYLutXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2sYLu9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYLddXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLvNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLvdXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sYLvtXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYLeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLv9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLwNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sYLwdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYLdtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYLwtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYLw9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2sYLxNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYLd9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYLxdXWEem1l5O0R0OWkQ" name="Decision(Test(Customer$initializationFlag$1))" incoming="_2sYLd9XWEem1l5O0R0OWkQ _2sYLeNXWEem1l5O0R0OWkQ" outgoing="_2sYLedXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYLeNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYLbNXWEem1l5O0R0OWkQ" name="Input(name)" outgoing="_2sYLadXWEem1l5O0R0OWkQ" parameter="_2sYLY9XWEem1l5O0R0OWkQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYLbdXWEem1l5O0R0OWkQ" name="Fork(name)" incoming="_2sYLadXWEem1l5O0R0OWkQ" outgoing="_2sYLatXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYLbtXWEem1l5O0R0OWkQ" name="Return" incoming="_2sYLa9XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" parameter="_2sYLZtXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYLxtXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2sYMGdXWEem1l5O0R0OWkQ" node="_2sYLx9XWEem1l5O0R0OWkQ" group="_2sYLx9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2sYLx9XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYLyNXWEem1l5O0R0OWkQ" name="Customer$initialization$1" visibility="private" specification="_2sYMEdXWEem1l5O0R0OWkQ" node="_2sYLydXWEem1l5O0R0OWkQ" group="_2sYLydXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2sYLydXWEem1l5O0R0OWkQ" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLytXWEem1l5O0R0OWkQ" target="_2sYL2NXWEem1l5O0R0OWkQ" source="_2sYL1dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLy9XWEem1l5O0R0OWkQ" target="_2sYL5NXWEem1l5O0R0OWkQ" source="_2sYL2NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLzNXWEem1l5O0R0OWkQ" target="_2sYL89XWEem1l5O0R0OWkQ" source="_2sYL2NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLzdXWEem1l5O0R0OWkQ" target="_2sYL-tXWEem1l5O0R0OWkQ" source="_2sYL9tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLztXWEem1l5O0R0OWkQ" target="_2sYMBtXWEem1l5O0R0OWkQ" source="_2sYL_dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYLz9XWEem1l5O0R0OWkQ" target="_2sYMDNXWEem1l5O0R0OWkQ" source="_2sYMAdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYL0NXWEem1l5O0R0OWkQ" target="_2sYMENXWEem1l5O0R0OWkQ" source="_2sYMD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYL0dXWEem1l5O0R0OWkQ" target="_2sYMENXWEem1l5O0R0OWkQ" source="_2sYMCdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYL0tXWEem1l5O0R0OWkQ" target="_2sYL2dXWEem1l5O0R0OWkQ" source="_2sYMENXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYL09XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYL1NXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2sYL1dXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYLytXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL1tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL19XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYL2NXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYLytXWEem1l5O0R0OWkQ" outgoing="_2sYLy9XWEem1l5O0R0OWkQ _2sYLzNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYL2dXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2sYL0tXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYL2tXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYL29XWEem1l5O0R0OWkQ" target="_2sYL8dXWEem1l5O0R0OWkQ" source="_2sYL3dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYL3NXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2sYL3dXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2sYL29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL3tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL39XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYL4NXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYL4dXWEem1l5O0R0OWkQ" name="Iterate(Write(Customer$initializationFlag$1))" inputElement="_2sYL8dXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYL4tXWEem1l5O0R0OWkQ" target="_2sYL7tXWEem1l5O0R0OWkQ" source="_2sYL8dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYL49XWEem1l5O0R0OWkQ" target="_2sYL6NXWEem1l5O0R0OWkQ" source="_2sYL5NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2sYL5NXWEem1l5O0R0OWkQ" name="Iterate(Write(Customer$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2sYLy9XWEem1l5O0R0OWkQ" outgoing="_2sYL49XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL5dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL5tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2sYL59XWEem1l5O0R0OWkQ" name="Write(Customer$initializationFlag$1)" structuralFeature="_2sYLXNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2sYL6NXWEem1l5O0R0OWkQ" name="Write(Customer$initializationFlag$1).object" incoming="_2sYL49XWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL6dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL6tXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2sYL69XWEem1l5O0R0OWkQ" name="Write(Customer$initializationFlag$1).result" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL7NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL7dXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2sYL7tXWEem1l5O0R0OWkQ" name="Write(Customer$initializationFlag$1).value" incoming="_2sYL4tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL79XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL8NXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2sYL8dXWEem1l5O0R0OWkQ" name="Iterate(Write(Customer$initializationFlag$1)).inputElement" incoming="_2sYL29XWEem1l5O0R0OWkQ" outgoing="_2sYL4tXWEem1l5O0R0OWkQ" regionAsInput="_2sYL4dXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYL8tXWEem1l5O0R0OWkQ" name="Read(Customer$initializationFlag$1)" structuralFeature="_2sYLXNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2sYL89XWEem1l5O0R0OWkQ" name="Read(Customer$initializationFlag$1).object" incoming="_2sYLzNXWEem1l5O0R0OWkQ" type="_2sYLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL9NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL9dXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2sYL9tXWEem1l5O0R0OWkQ" name="Read(Customer$initializationFlag$1).result" outgoing="_2sYLzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL99XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL-NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYL-dXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2sYL-tXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYLzdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL-9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL_NXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYL_dXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYLztXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYL_tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYL_9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYMANXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2sYMAdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYLz9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMAtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMA9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sYMBNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYMBdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2sYMBtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYLztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMB9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMCNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sYMCdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYL0dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMC9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sYMDNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYLz9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMDdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMDtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2sYMD9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYL0NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYMENXWEem1l5O0R0OWkQ" name="Decision(Test(Customer$initializationFlag$1))" incoming="_2sYL0NXWEem1l5O0R0OWkQ _2sYL0dXWEem1l5O0R0OWkQ" outgoing="_2sYL0tXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYL0dXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2sYMEdXWEem1l5O0R0OWkQ" name="Customer$initialization$1" visibility="protected" method="_2sYLyNXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2sYMEtXWEem1l5O0R0OWkQ" name="Customer" visibility="public" method="_2sYLYtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2sYME9XWEem1l5O0R0OWkQ" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMFNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMFdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2sYMFtXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2sYLW9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMF9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMGNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2sYMGdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2sYLxtXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2sYMGtXWEem1l5O0R0OWkQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_2sYMG9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sYMHNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sYMHdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sYMHtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sYMH9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_2sYMINXWEem1l5O0R0OWkQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMIdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMItXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2sYMI9XWEem1l5O0R0OWkQ" name="tester" visibility="private" type="_2sYNLNXWEem1l5O0R0OWkQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMJNXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMJdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYMJtXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2sYNH9XWEem1l5O0R0OWkQ" node="_2sYMJ9XWEem1l5O0R0OWkQ" group="_2sYMJ9XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2sYMJ9XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYMKNXWEem1l5O0R0OWkQ" name="done$method$1" visibility="private" specification="_2sYNINXWEem1l5O0R0OWkQ" node="_2sYMKdXWEem1l5O0R0OWkQ" group="_2sYMKdXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2sYMKdXWEem1l5O0R0OWkQ" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMKtXWEem1l5O0R0OWkQ" name="ExpressionStatement@3e2bc845">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMK9XWEem1l5O0R0OWkQ" target="_2sYML9XWEem1l5O0R0OWkQ" source="_2sYMN9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMLNXWEem1l5O0R0OWkQ" target="_2sYMLtXWEem1l5O0R0OWkQ" source="_2sYMNdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMLdXWEem1l5O0R0OWkQ" target="_2sYMMtXWEem1l5O0R0OWkQ" source="_2sYMPNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2sYMLtXWEem1l5O0R0OWkQ" name="Call(done)" incoming="_2sYMLNXWEem1l5O0R0OWkQ" operation="_2sYNKNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sYML9XWEem1l5O0R0OWkQ" name="Call(done).argument(message)" incoming="_2sYMK9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMMNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMMdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <target xmi:id="_2sYMMtXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_2sYMLdXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMM9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMNNXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMNdXWEem1l5O0R0OWkQ" name="Tuple@3679d661" outgoing="_2sYMLNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYMNtXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_2sYMN9XWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;).result" outgoing="_2sYMK9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMOdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2sYMOtXWEem1l5O0R0OWkQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYMO9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2sYMPNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYMLdXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMPdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMPtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYMP9XWEem1l5O0R0OWkQ" name="Test$method$1" visibility="private" specification="_2sYNIdXWEem1l5O0R0OWkQ" node="_2sYMSdXWEem1l5O0R0OWkQ _2sYMStXWEem1l5O0R0OWkQ _2sYMS9XWEem1l5O0R0OWkQ _2sYMTNXWEem1l5O0R0OWkQ" group="_2sYMTNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYMQNXWEem1l5O0R0OWkQ" name="tester" type="_2sYNLNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMQdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMQtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYMQ9XWEem1l5O0R0OWkQ" name="" type="_2sYMGtXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMRNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMRdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMRtXWEem1l5O0R0OWkQ" target="_2sYMStXWEem1l5O0R0OWkQ" source="_2sYMSdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMR9XWEem1l5O0R0OWkQ" target="_2sYMatXWEem1l5O0R0OWkQ" source="_2sYMStXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMSNXWEem1l5O0R0OWkQ" target="_2sYMS9XWEem1l5O0R0OWkQ" source="_2sYMhtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2sYMTNXWEem1l5O0R0OWkQ" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMTdXWEem1l5O0R0OWkQ" target="_2sYMhtXWEem1l5O0R0OWkQ" source="_2sYMg9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMTtXWEem1l5O0R0OWkQ" target="_2sYMiNXWEem1l5O0R0OWkQ" source="_2sYMhtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMT9XWEem1l5O0R0OWkQ" target="_2sYMWNXWEem1l5O0R0OWkQ" source="_2sYMh9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMUNXWEem1l5O0R0OWkQ" target="_2sYMjNXWEem1l5O0R0OWkQ" source="_2sYMhtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMUdXWEem1l5O0R0OWkQ" target="_2sYMk9XWEem1l5O0R0OWkQ" source="_2sYMj9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMUtXWEem1l5O0R0OWkQ" target="_2sYMn9XWEem1l5O0R0OWkQ" source="_2sYMltXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMU9XWEem1l5O0R0OWkQ" target="_2sYMpdXWEem1l5O0R0OWkQ" source="_2sYMmtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMVNXWEem1l5O0R0OWkQ" target="_2sYMqdXWEem1l5O0R0OWkQ" source="_2sYMqNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMVdXWEem1l5O0R0OWkQ" target="_2sYMqdXWEem1l5O0R0OWkQ" source="_2sYMotXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMVtXWEem1l5O0R0OWkQ" target="_2sYMh9XWEem1l5O0R0OWkQ" source="_2sYMqdXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYMV9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMWNXWEem1l5O0R0OWkQ" name="Body" incoming="_2sYMT9XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMWdXWEem1l5O0R0OWkQ" name="ExpressionStatement@d160c5b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMWtXWEem1l5O0R0OWkQ" target="_2sYMZNXWEem1l5O0R0OWkQ" source="_2sYMYNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMW9XWEem1l5O0R0OWkQ" target="_2sYMbdXWEem1l5O0R0OWkQ" source="_2sYMatXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMXNXWEem1l5O0R0OWkQ" target="_2sYMc9XWEem1l5O0R0OWkQ" source="_2sYMZ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMXdXWEem1l5O0R0OWkQ" target="_2sYMXtXWEem1l5O0R0OWkQ" source="_2sYMgdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMXtXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@64766c87)" incoming="_2sYMXdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYMX9XWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2sYMYNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYMWtXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMYdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMYtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2sYMY9XWEem1l5O0R0OWkQ" name="Clear(tester)" structuralFeature="_2sYMI9XWEem1l5O0R0OWkQ">
                <object xmi:id="_2sYMZNXWEem1l5O0R0OWkQ" name="Clear(tester).object" incoming="_2sYMWtXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMZdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMZtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2sYMZ9XWEem1l5O0R0OWkQ" name="Clear(tester).result" outgoing="_2sYMXNXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMaNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMadXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2sYMatXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@64766c87)" incoming="_2sYMR9XWEem1l5O0R0OWkQ" outgoing="_2sYMW9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMa9XWEem1l5O0R0OWkQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMbNXWEem1l5O0R0OWkQ" target="_2sYMgNXWEem1l5O0R0OWkQ" source="_2sYMbdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sYMbdXWEem1l5O0R0OWkQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_2sYMW9XWEem1l5O0R0OWkQ" outgoing="_2sYMbNXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMbtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMb9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYMcNXWEem1l5O0R0OWkQ" name="Iterate(Write(tester))" inputElement="_2sYMgNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMcdXWEem1l5O0R0OWkQ" target="_2sYMfdXWEem1l5O0R0OWkQ" source="_2sYMgNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMctXWEem1l5O0R0OWkQ" target="_2sYMd9XWEem1l5O0R0OWkQ" source="_2sYMc9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2sYMc9XWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_2sYMXNXWEem1l5O0R0OWkQ" outgoing="_2sYMctXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMdNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMddXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2sYMdtXWEem1l5O0R0OWkQ" name="Write(tester)" structuralFeature="_2sYMI9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2sYMd9XWEem1l5O0R0OWkQ" name="Write(tester).object" incoming="_2sYMctXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMeNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMedXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2sYMetXWEem1l5O0R0OWkQ" name="Write(tester).result" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMe9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMfNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2sYMfdXWEem1l5O0R0OWkQ" name="Write(tester).value" incoming="_2sYMcdXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMftXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMf9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2sYMgNXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).inputElement" incoming="_2sYMbNXWEem1l5O0R0OWkQ" outgoing="_2sYMcdXWEem1l5O0R0OWkQ" regionAsInput="_2sYMcNXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMgdXWEem1l5O0R0OWkQ" name="RightHandSide@59ae22bd" outgoing="_2sYMXdXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYMgtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2sYMg9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYMTdXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMhNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMhdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYMhtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYMTdXWEem1l5O0R0OWkQ" outgoing="_2sYMSNXWEem1l5O0R0OWkQ _2sYMTtXWEem1l5O0R0OWkQ _2sYMUNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2sYMh9XWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" incoming="_2sYMVtXWEem1l5O0R0OWkQ" outgoing="_2sYMT9XWEem1l5O0R0OWkQ" operation="_2sYNHtXWEem1l5O0R0OWkQ">
            <target xmi:id="_2sYMiNXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_2sYMTtXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMidXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMitXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYMi9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_2sYMINXWEem1l5O0R0OWkQ">
            <object xmi:id="_2sYMjNXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_2sYMUNXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMjdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMjtXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2sYMj9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_2sYMUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMkNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMkdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYMktXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2sYMk9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYMUdXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMlNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMldXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2sYMltXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYMUtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMl9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMmNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYMmdXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2sYMmtXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYMU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMm9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMnNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2sYMndXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYMntXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2sYMn9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYMUtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMoNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYModXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2sYMotXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYMVdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMo9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMpNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2sYMpdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYMU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMptXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMp9XWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2sYMqNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYMVNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2sYMqdXWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_2sYMVNXWEem1l5O0R0OWkQ _2sYMVdXWEem1l5O0R0OWkQ" outgoing="_2sYMVtXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYMVdXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYMSdXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2sYMRtXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" parameter="_2sYMQNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2sYMStXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2sYMRtXWEem1l5O0R0OWkQ" outgoing="_2sYMR9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYMS9XWEem1l5O0R0OWkQ" name="Return" incoming="_2sYMSNXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" parameter="_2sYMQ9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYMqtXWEem1l5O0R0OWkQ" name="done$method$2" visibility="private" specification="_2sYNKNXWEem1l5O0R0OWkQ" node="_2sYMsNXWEem1l5O0R0OWkQ _2sYMsdXWEem1l5O0R0OWkQ _2sYMstXWEem1l5O0R0OWkQ" group="_2sYMstXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYMq9XWEem1l5O0R0OWkQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMrNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMrdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMrtXWEem1l5O0R0OWkQ" target="_2sYMsdXWEem1l5O0R0OWkQ" source="_2sYMsNXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMr9XWEem1l5O0R0OWkQ" target="_2sYMttXWEem1l5O0R0OWkQ" source="_2sYMsdXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2sYMstXWEem1l5O0R0OWkQ" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMs9XWEem1l5O0R0OWkQ" target="_2sYMvNXWEem1l5O0R0OWkQ" source="_2sYMtNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMtNXWEem1l5O0R0OWkQ" name="ExpressionStatement@1d3ddccf" outgoing="_2sYMs9XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYMtdXWEem1l5O0R0OWkQ" name="Call(WriteLine)">
              <argument xmi:id="_2sYMttXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2sYMr9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMt9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMuNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sYMudXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMutXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMu9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMvNXWEem1l5O0R0OWkQ" name="ExpressionStatement@2aa2d00d" incoming="_2sYMs9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMvdXWEem1l5O0R0OWkQ" target="_2sYMxdXWEem1l5O0R0OWkQ" source="_2sYM0dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYMvtXWEem1l5O0R0OWkQ" target="_2sYMv9XWEem1l5O0R0OWkQ" source="_2sYMxtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYMv9XWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue))" incoming="_2sYMvtXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2sYMxdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMwNXWEem1l5O0R0OWkQ" target="_2sYMwtXWEem1l5O0R0OWkQ" source="_2sYMxdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2sYMwdXWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_2sYwqdXWEem1l5O0R0OWkQ">
                <target xmi:id="_2sYMwtXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_2sYMwNXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMw9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMxNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_2sYMxdXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_2sYMvdXWEem1l5O0R0OWkQ" outgoing="_2sYMwNXWEem1l5O0R0OWkQ" regionAsInput="_2sYMv9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYMxtXWEem1l5O0R0OWkQ" name="Feature(Read(tester).result)" outgoing="_2sYMvtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMx9XWEem1l5O0R0OWkQ" target="_2sYM1NXWEem1l5O0R0OWkQ" source="_2sYMytXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYMyNXWEem1l5O0R0OWkQ" target="_2sYMztXWEem1l5O0R0OWkQ" source="_2sYM1NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYMydXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2sYMytXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYMx9XWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMy9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYMzNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYMzdXWEem1l5O0R0OWkQ" name="Read(tester)" structuralFeature="_2sYMI9XWEem1l5O0R0OWkQ">
                <object xmi:id="_2sYMztXWEem1l5O0R0OWkQ" name="Read(tester).object" incoming="_2sYMyNXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYMz9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM0NXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2sYM0dXWEem1l5O0R0OWkQ" name="Read(tester).result" outgoing="_2sYMvdXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM0tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM09XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2sYM1NXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYMx9XWEem1l5O0R0OWkQ" outgoing="_2sYMyNXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYMsNXWEem1l5O0R0OWkQ" name="Input(message)" outgoing="_2sYMrtXWEem1l5O0R0OWkQ" parameter="_2sYMq9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2sYMsdXWEem1l5O0R0OWkQ" name="Fork(message)" incoming="_2sYMrtXWEem1l5O0R0OWkQ" outgoing="_2sYMr9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYM1dXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="private" specification="_2sYNHtXWEem1l5O0R0OWkQ" node="_2sYM1tXWEem1l5O0R0OWkQ" group="_2sYM1tXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2sYM1tXWEem1l5O0R0OWkQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM19XWEem1l5O0R0OWkQ" target="_2sYM5dXWEem1l5O0R0OWkQ" source="_2sYM4tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM2NXWEem1l5O0R0OWkQ" target="_2sYM8dXWEem1l5O0R0OWkQ" source="_2sYM5dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM2dXWEem1l5O0R0OWkQ" target="_2sYNANXWEem1l5O0R0OWkQ" source="_2sYM5dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM2tXWEem1l5O0R0OWkQ" target="_2sYNB9XWEem1l5O0R0OWkQ" source="_2sYNA9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM29XWEem1l5O0R0OWkQ" target="_2sYNE9XWEem1l5O0R0OWkQ" source="_2sYNCtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM3NXWEem1l5O0R0OWkQ" target="_2sYNGdXWEem1l5O0R0OWkQ" source="_2sYNDtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYM3dXWEem1l5O0R0OWkQ" target="_2sYNHdXWEem1l5O0R0OWkQ" source="_2sYNHNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM3tXWEem1l5O0R0OWkQ" target="_2sYNHdXWEem1l5O0R0OWkQ" source="_2sYNFtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYM39XWEem1l5O0R0OWkQ" target="_2sYM5tXWEem1l5O0R0OWkQ" source="_2sYNHdXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYM4NXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYM4dXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2sYM4tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYM19XWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM49XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM5NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYM5dXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYM19XWEem1l5O0R0OWkQ" outgoing="_2sYM2NXWEem1l5O0R0OWkQ _2sYM2dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYM5tXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2sYM39XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYM59XWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM6NXWEem1l5O0R0OWkQ" target="_2sYM_tXWEem1l5O0R0OWkQ" source="_2sYM6tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYM6dXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2sYM6tXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2sYM6NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM69XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM7NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYM7dXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYM7tXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_2sYM_tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM79XWEem1l5O0R0OWkQ" target="_2sYM-9XWEem1l5O0R0OWkQ" source="_2sYM_tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYM8NXWEem1l5O0R0OWkQ" target="_2sYM9dXWEem1l5O0R0OWkQ" source="_2sYM8dXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sYM8dXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2sYM2NXWEem1l5O0R0OWkQ" outgoing="_2sYM8NXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM8tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM89XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2sYM9NXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1)" structuralFeature="_2sYMINXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2sYM9dXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).object" incoming="_2sYM8NXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM9tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM99XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2sYM-NXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).result" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM-dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM-tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2sYM-9XWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).value" incoming="_2sYM79XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYM_NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYM_dXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2sYM_tXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_2sYM6NXWEem1l5O0R0OWkQ" outgoing="_2sYM79XWEem1l5O0R0OWkQ" regionAsInput="_2sYM7tXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYM_9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_2sYMINXWEem1l5O0R0OWkQ">
            <object xmi:id="_2sYNANXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_2sYM2dXWEem1l5O0R0OWkQ" type="_2sYMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNAdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNAtXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2sYNA9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_2sYM2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNBNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNBdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYNBtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2sYNB9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYM2tXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNCNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNCdXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2sYNCtXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYM29XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNC9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNDNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYNDdXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2sYNDtXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYM3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYND9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNENXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2sYNEdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYNEtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2sYNE9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYM29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNFNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNFdXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2sYNFtXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYM3tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNF9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNGNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2sYNGdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYM3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNGtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNG9XWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2sYNHNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYM3dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2sYNHdXWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_2sYM3dXWEem1l5O0R0OWkQ _2sYM3tXWEem1l5O0R0OWkQ" outgoing="_2sYM39XWEem1l5O0R0OWkQ" decisionInputFlow="_2sYM3tXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2sYNHtXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="protected" method="_2sYM1dXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2sYNH9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2sYMJtXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2sYNINXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_2sYMKNXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2sYNIdXWEem1l5O0R0OWkQ" name="Test" visibility="protected" method="_2sYMP9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYNItXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2sYNLNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNI9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNJNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2sYNJdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2sYMGtXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNJtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNJ9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2sYNKNXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_2sYMqtXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2sYNKdXWEem1l5O0R0OWkQ" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNKtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNK9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2sYNLNXWEem1l5O0R0OWkQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2sYNLdXWEem1l5O0R0OWkQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNLtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNL9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYNMNXWEem1l5O0R0OWkQ" name="Tester$method$1" visibility="private" specification="_2sYwpNXWEem1l5O0R0OWkQ" node="_2sYNNdXWEem1l5O0R0OWkQ _2sYNNtXWEem1l5O0R0OWkQ" group="_2sYNNtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2sYNMdXWEem1l5O0R0OWkQ" name="" type="_2sYNLNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNMtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNM9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNNNXWEem1l5O0R0OWkQ" target="_2sYNNdXWEem1l5O0R0OWkQ" source="_2sYNR9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2sYNNtXWEem1l5O0R0OWkQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNN9XWEem1l5O0R0OWkQ" target="_2sYNR9XWEem1l5O0R0OWkQ" source="_2sYNRNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNONXWEem1l5O0R0OWkQ" target="_2sYNSdXWEem1l5O0R0OWkQ" source="_2sYNR9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYNOdXWEem1l5O0R0OWkQ" target="_2sYNQtXWEem1l5O0R0OWkQ" source="_2sYNSNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNOtXWEem1l5O0R0OWkQ" target="_2sYNTdXWEem1l5O0R0OWkQ" source="_2sYNR9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNO9XWEem1l5O0R0OWkQ" target="_2sYNVNXWEem1l5O0R0OWkQ" source="_2sYNUNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNPNXWEem1l5O0R0OWkQ" target="_2sYNYNXWEem1l5O0R0OWkQ" source="_2sYNV9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNPdXWEem1l5O0R0OWkQ" target="_2sYwU9XWEem1l5O0R0OWkQ" source="_2sYNW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYNPtXWEem1l5O0R0OWkQ" target="_2sYwV9XWEem1l5O0R0OWkQ" source="_2sYwVtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYNP9XWEem1l5O0R0OWkQ" target="_2sYwV9XWEem1l5O0R0OWkQ" source="_2sYwUNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYNQNXWEem1l5O0R0OWkQ" target="_2sYNSNXWEem1l5O0R0OWkQ" source="_2sYwV9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYNQdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYNQtXWEem1l5O0R0OWkQ" name="Body" incoming="_2sYNOdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYNQ9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2sYNRNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYNN9XWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNRdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNRtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYNR9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYNN9XWEem1l5O0R0OWkQ" outgoing="_2sYNNNXWEem1l5O0R0OWkQ _2sYNONXWEem1l5O0R0OWkQ _2sYNOtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2sYNSNXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1)" incoming="_2sYNQNXWEem1l5O0R0OWkQ" outgoing="_2sYNOdXWEem1l5O0R0OWkQ" operation="_2sYwo9XWEem1l5O0R0OWkQ">
              <target xmi:id="_2sYNSdXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1).target" incoming="_2sYNONXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNStXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNS9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYNTNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_2sYNLdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2sYNTdXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_2sYNOtXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNTtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNT9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2sYNUNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_2sYNO9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNUdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNUtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYNU9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2sYNVNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYNO9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNVdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNVtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYNV9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYNPNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNWNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNWdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYNWtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2sYNW9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYNPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNXNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNXdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sYNXtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYNX9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2sYNYNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYNPNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYNYdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYNYtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sYwUNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYNP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwUdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwUtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sYwU9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYNPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwVNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwVdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2sYwVtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYNPtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYwV9XWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2sYNPtXWEem1l5O0R0OWkQ _2sYNP9XWEem1l5O0R0OWkQ" outgoing="_2sYNQNXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYNP9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYNNdXWEem1l5O0R0OWkQ" name="Return" incoming="_2sYNNNXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" parameter="_2sYNMdXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYwWNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2sYwqNXWEem1l5O0R0OWkQ" node="_2sYwWdXWEem1l5O0R0OWkQ" group="_2sYwWdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2sYwWdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2sYwWtXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="private" specification="_2sYwo9XWEem1l5O0R0OWkQ" node="_2sYwW9XWEem1l5O0R0OWkQ" group="_2sYwW9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2sYwW9XWEem1l5O0R0OWkQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwXNXWEem1l5O0R0OWkQ" target="_2sYwatXWEem1l5O0R0OWkQ" source="_2sYwZ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwXdXWEem1l5O0R0OWkQ" target="_2sYwdtXWEem1l5O0R0OWkQ" source="_2sYwatXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwXtXWEem1l5O0R0OWkQ" target="_2sYwhdXWEem1l5O0R0OWkQ" source="_2sYwatXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwX9XWEem1l5O0R0OWkQ" target="_2sYwjNXWEem1l5O0R0OWkQ" source="_2sYwiNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwYNXWEem1l5O0R0OWkQ" target="_2sYwmNXWEem1l5O0R0OWkQ" source="_2sYwj9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwYdXWEem1l5O0R0OWkQ" target="_2sYwntXWEem1l5O0R0OWkQ" source="_2sYwk9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYwYtXWEem1l5O0R0OWkQ" target="_2sYwotXWEem1l5O0R0OWkQ" source="_2sYwodXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwY9XWEem1l5O0R0OWkQ" target="_2sYwotXWEem1l5O0R0OWkQ" source="_2sYwm9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYwZNXWEem1l5O0R0OWkQ" target="_2sYwa9XWEem1l5O0R0OWkQ" source="_2sYwotXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYwZdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2sYwZtXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2sYwZ9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2sYwXNXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwaNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwadXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYwatXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2sYwXNXWEem1l5O0R0OWkQ" outgoing="_2sYwXdXWEem1l5O0R0OWkQ _2sYwXtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYwa9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_2sYwZNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYwbNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwbdXWEem1l5O0R0OWkQ" target="_2sYwg9XWEem1l5O0R0OWkQ" source="_2sYwb9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYwbtXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2sYwb9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2sYwbdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwcNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwcdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYwctXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYwc9XWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_2sYwg9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwdNXWEem1l5O0R0OWkQ" target="_2sYwgNXWEem1l5O0R0OWkQ" source="_2sYwg9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwddXWEem1l5O0R0OWkQ" target="_2sYwetXWEem1l5O0R0OWkQ" source="_2sYwdtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2sYwdtXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2sYwXdXWEem1l5O0R0OWkQ" outgoing="_2sYwddXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwd9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYweNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2sYwedXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_2sYNLdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2sYwetXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).object" incoming="_2sYwddXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwe9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwfNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2sYwfdXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).result" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwftXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwf9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2sYwgNXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).value" incoming="_2sYwdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwgdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwgtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2sYwg9XWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_2sYwbdXWEem1l5O0R0OWkQ" outgoing="_2sYwdNXWEem1l5O0R0OWkQ" regionAsInput="_2sYwc9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2sYwhNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_2sYNLdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2sYwhdXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_2sYwXtXWEem1l5O0R0OWkQ" type="_2sYNLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwhtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwh9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2sYwiNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_2sYwX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwidXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwitXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYwi9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2sYwjNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2sYwX9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwjdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwjtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYwj9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2sYwYNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwkNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwkdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYwktXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2sYwk9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2sYwYdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwlNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwldXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sYwltXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYwl9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2sYwmNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2sYwYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwmdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwmtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sYwm9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2sYwY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwnNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwndXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sYwntXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2sYwYdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwn9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwoNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2sYwodXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2sYwYtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYwotXWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2sYwYtXWEem1l5O0R0OWkQ _2sYwY9XWEem1l5O0R0OWkQ" outgoing="_2sYwZNXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYwY9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2sYwo9XWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="protected" method="_2sYwWtXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2sYwpNXWEem1l5O0R0OWkQ" name="Tester" visibility="public" method="_2sYNMNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2sYwpdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2sYNLNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwptXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwp9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2sYwqNXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2sYwWNXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2sYwqdXWEem1l5O0R0OWkQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_2sYwqtXWEem1l5O0R0OWkQ" name="Continue" signal="_2sYwqdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2sYwq9XWEem1l5O0R0OWkQ" name="AssertFalse" visibility="public" node="_2sYwvNXWEem1l5O0R0OWkQ _2sYwvdXWEem1l5O0R0OWkQ _2sYwvtXWEem1l5O0R0OWkQ _2sYwv9XWEem1l5O0R0OWkQ _2sYwwNXWEem1l5O0R0OWkQ" group="_2sYwwNXWEem1l5O0R0OWkQ">
      <elementImport xmi:id="_2sYwrNXWEem1l5O0R0OWkQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_2sYwrdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sYwrtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sYwr9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sYwsNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sYwsdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2sYwstXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYws9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwtNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2sYwtdXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwttXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwt9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwuNXWEem1l5O0R0OWkQ" target="_2sYwvdXWEem1l5O0R0OWkQ" source="_2sYwvNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwudXWEem1l5O0R0OWkQ" target="_2sYwv9XWEem1l5O0R0OWkQ" source="_2sYwvtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwutXWEem1l5O0R0OWkQ" target="_2sYw4dXWEem1l5O0R0OWkQ" source="_2sYwvdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwu9XWEem1l5O0R0OWkQ" target="_2sYxBdXWEem1l5O0R0OWkQ" source="_2sYwv9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2sYwwNXWEem1l5O0R0OWkQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYwwdXWEem1l5O0R0OWkQ" name="ExpressionStatement@45570b7">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwwtXWEem1l5O0R0OWkQ" target="_2sYwxtXWEem1l5O0R0OWkQ" source="_2sYw6dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYww9XWEem1l5O0R0OWkQ" target="_2sYwydXWEem1l5O0R0OWkQ" source="_2sYxDtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYwxNXWEem1l5O0R0OWkQ" target="_2sYwxdXWEem1l5O0R0OWkQ" source="_2sYwzNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYwxdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2sYwxNXWEem1l5O0R0OWkQ" behavior="_2sZXldXWEem1l5O0R0OWkQ">
            <argument xmi:id="_2sYwxtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2sYwwtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwx9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwyNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_2sYwydXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2sYww9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYwytXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYwy9XWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYwzNXWEem1l5O0R0OWkQ" name="Tuple@2600a3e4" outgoing="_2sYwxNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwzdXWEem1l5O0R0OWkQ" target="_2sYw7dXWEem1l5O0R0OWkQ" source="_2sYw29XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYwztXWEem1l5O0R0OWkQ" target="_2sYw8NXWEem1l5O0R0OWkQ" source="_2sYw5NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYwz9XWEem1l5O0R0OWkQ" target="_2sYw59XWEem1l5O0R0OWkQ" source="_2sYw2tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYw0NXWEem1l5O0R0OWkQ" target="_2sYw59XWEem1l5O0R0OWkQ" source="_2sYw39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw0dXWEem1l5O0R0OWkQ" target="_2sYw_NXWEem1l5O0R0OWkQ" source="_2sYxBdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw0tXWEem1l5O0R0OWkQ" target="_2sYxB9XWEem1l5O0R0OWkQ" source="_2sYxBdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw09XWEem1l5O0R0OWkQ" target="_2sYxDdXWEem1l5O0R0OWkQ" source="_2sYxCtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw1NXWEem1l5O0R0OWkQ" target="_2sYxDtXWEem1l5O0R0OWkQ" source="_2sYw_9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw1dXWEem1l5O0R0OWkQ" target="_2sYxD9XWEem1l5O0R0OWkQ" source="_2sYxDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw1tXWEem1l5O0R0OWkQ" target="_2sYxD9XWEem1l5O0R0OWkQ" source="_2sYxDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw19XWEem1l5O0R0OWkQ" target="_2sYxDtXWEem1l5O0R0OWkQ" source="_2sYxD9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYw2NXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw2dXWEem1l5O0R0OWkQ" target="_2sYxAtXWEem1l5O0R0OWkQ" source="_2sYw99XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYw2tXWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;)" outgoing="_2sYwz9XWEem1l5O0R0OWkQ">
              <result xmi:id="_2sYw29XWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;).result" outgoing="_2sYwzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw3NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw3dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2sYw3tXWEem1l5O0R0OWkQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYw39XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2sYw0NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw4NXWEem1l5O0R0OWkQ" target="_2sYw5NXWEem1l5O0R0OWkQ" source="_2sYw4dXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYw4dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYwutXWEem1l5O0R0OWkQ" outgoing="_2sYw4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw4tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw49XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYw5NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYw4NXWEem1l5O0R0OWkQ" outgoing="_2sYwztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw5dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw5tXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYw59XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYwz9XWEem1l5O0R0OWkQ _2sYw0NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYw6NXWEem1l5O0R0OWkQ" target="_2sYw6dXWEem1l5O0R0OWkQ" source="_2sYw89XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYw6dXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sYw6NXWEem1l5O0R0OWkQ" outgoing="_2sYwwtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw6tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw69XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYw7NXWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_2sYw7dXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYwzdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw7tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw79XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sYw8NXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYwztXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw8dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw8tXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYw89XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sYw6NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw9NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw9dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYw9tXWEem1l5O0R0OWkQ" name="Value(false)">
              <result xmi:id="_2sYw99XWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2sYw2dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw-NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw-dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYw-tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYw-9XWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_2sYw_NXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2sYw0dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYw_dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYw_tXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sYw_9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2sYw1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxANXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxAdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sYxAtXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2sYw2dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxA9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxBNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYxBdXWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_2sYwu9XWEem1l5O0R0OWkQ" outgoing="_2sYw0dXWEem1l5O0R0OWkQ _2sYw0tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxBtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2sYxB9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sYw0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxCNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxCdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYxCtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sYw09XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxC9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxDNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYxDdXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2sYw09XWEem1l5O0R0OWkQ" outgoing="_2sYw1dXWEem1l5O0R0OWkQ _2sYw1tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2sYxDtXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2sYw1NXWEem1l5O0R0OWkQ _2sYw19XWEem1l5O0R0OWkQ" outgoing="_2sYww9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYxD9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2sYw1dXWEem1l5O0R0OWkQ _2sYw1tXWEem1l5O0R0OWkQ" outgoing="_2sYw19XWEem1l5O0R0OWkQ" decisionInputFlow="_2sYw1tXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYwvNXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2sYwuNXWEem1l5O0R0OWkQ" parameter="_2sYwstXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYwvdXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sYwuNXWEem1l5O0R0OWkQ" outgoing="_2sYwutXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYwvtXWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_2sYwudXWEem1l5O0R0OWkQ" parameter="_2sYwtdXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYwv9XWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2sYwudXWEem1l5O0R0OWkQ" outgoing="_2sYwu9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2sYxENXWEem1l5O0R0OWkQ" name="AssertEqual" visibility="public" node="_2sYxMNXWEem1l5O0R0OWkQ _2sYxMdXWEem1l5O0R0OWkQ _2sYxMtXWEem1l5O0R0OWkQ _2sYxM9XWEem1l5O0R0OWkQ _2sYxNNXWEem1l5O0R0OWkQ _2sYxNdXWEem1l5O0R0OWkQ _2sYxNtXWEem1l5O0R0OWkQ" group="_2sYxNtXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2sYxEdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sYxEtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sYxE9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sYxFNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sYxFdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2sYxFtXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxF9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxGNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2sYxGdXWEem1l5O0R0OWkQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxGtXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxG9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2sYxHNXWEem1l5O0R0OWkQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxHdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxHtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxH9XWEem1l5O0R0OWkQ" target="_2sYxMdXWEem1l5O0R0OWkQ" source="_2sYxMNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxINXWEem1l5O0R0OWkQ" target="_2sYxM9XWEem1l5O0R0OWkQ" source="_2sYxMtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxIdXWEem1l5O0R0OWkQ" target="_2sYxNdXWEem1l5O0R0OWkQ" source="_2sYxNNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxItXWEem1l5O0R0OWkQ" target="_2sYxbdXWEem1l5O0R0OWkQ" source="_2sYxM9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxI9XWEem1l5O0R0OWkQ" target="_2sYxddXWEem1l5O0R0OWkQ" source="_2sYxNdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxJNXWEem1l5O0R0OWkQ" target="_2sYxr9XWEem1l5O0R0OWkQ" source="_2sYxMdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxJdXWEem1l5O0R0OWkQ" target="_2sYx7tXWEem1l5O0R0OWkQ" source="_2sYxNdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxJtXWEem1l5O0R0OWkQ" target="_2sYyQtXWEem1l5O0R0OWkQ" source="_2sYxMdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxJ9XWEem1l5O0R0OWkQ" target="_2sYyUtXWEem1l5O0R0OWkQ" source="_2sYxNdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxKNXWEem1l5O0R0OWkQ" target="_2sYyWtXWEem1l5O0R0OWkQ" source="_2sYxM9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxKdXWEem1l5O0R0OWkQ" target="_2sYyedXWEem1l5O0R0OWkQ" source="_2sYxNdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxKtXWEem1l5O0R0OWkQ" target="_2sYynNXWEem1l5O0R0OWkQ" source="_2sYxMdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxK9XWEem1l5O0R0OWkQ" target="_2sYyrNXWEem1l5O0R0OWkQ" source="_2sYxNdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxLNXWEem1l5O0R0OWkQ" target="_2sYytNXWEem1l5O0R0OWkQ" source="_2sYxM9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxLdXWEem1l5O0R0OWkQ" target="_2sYzA9XWEem1l5O0R0OWkQ" source="_2sYxMdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxLtXWEem1l5O0R0OWkQ" target="_2sYzENXWEem1l5O0R0OWkQ" source="_2sYxNdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxL9XWEem1l5O0R0OWkQ" target="_2sYzGNXWEem1l5O0R0OWkQ" source="_2sYxM9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2sYxNtXWEem1l5O0R0OWkQ" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxN9XWEem1l5O0R0OWkQ" target="_2sYzLNXWEem1l5O0R0OWkQ" source="_2sYzINXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxONXWEem1l5O0R0OWkQ" target="_2sYzLdXWEem1l5O0R0OWkQ" source="_2sYzI9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxOdXWEem1l5O0R0OWkQ" target="_2sYzLtXWEem1l5O0R0OWkQ" source="_2sYzJtXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxOtXWEem1l5O0R0OWkQ" target="_2sYzL9XWEem1l5O0R0OWkQ" source="_2sYzKdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2sYxO9XWEem1l5O0R0OWkQ" name="IfStatement@5ac70685">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxPNXWEem1l5O0R0OWkQ" target="_2sYx2NXWEem1l5O0R0OWkQ" source="_2sYxmNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxPdXWEem1l5O0R0OWkQ" target="_2sYyyNXWEem1l5O0R0OWkQ" source="_2sYyvNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxPtXWEem1l5O0R0OWkQ" target="_2sYyydXWEem1l5O0R0OWkQ" source="_2sYyv9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxP9XWEem1l5O0R0OWkQ" target="_2sYyytXWEem1l5O0R0OWkQ" source="_2sYywtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxQNXWEem1l5O0R0OWkQ" target="_2sYyy9XWEem1l5O0R0OWkQ" source="_2sYyxdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxQdXWEem1l5O0R0OWkQ" target="_2sYx-tXWEem1l5O0R0OWkQ" source="_2sYx2tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxQtXWEem1l5O0R0OWkQ" target="_2sYyF9XWEem1l5O0R0OWkQ" source="_2sYx2tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxQ9XWEem1l5O0R0OWkQ" target="_2sYyStXWEem1l5O0R0OWkQ" source="_2sYx2tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxRNXWEem1l5O0R0OWkQ" target="_2sYypNXWEem1l5O0R0OWkQ" source="_2sYx2tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxRdXWEem1l5O0R0OWkQ" target="_2sYx8NXWEem1l5O0R0OWkQ" source="_2sYx2NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxRtXWEem1l5O0R0OWkQ" target="_2sYyzNXWEem1l5O0R0OWkQ" source="_2sYx8NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxR9XWEem1l5O0R0OWkQ" target="_2sYy3tXWEem1l5O0R0OWkQ" source="_2sYyyNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxSNXWEem1l5O0R0OWkQ" target="_2sYy5tXWEem1l5O0R0OWkQ" source="_2sYyydXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxSdXWEem1l5O0R0OWkQ" target="_2sYy7tXWEem1l5O0R0OWkQ" source="_2sYyytXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxStXWEem1l5O0R0OWkQ" target="_2sYy9tXWEem1l5O0R0OWkQ" source="_2sYyy9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYxS9XWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxTNXWEem1l5O0R0OWkQ" target="_2sYxZNXWEem1l5O0R0OWkQ" source="_2sYxbdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxTdXWEem1l5O0R0OWkQ" target="_2sYxb9XWEem1l5O0R0OWkQ" source="_2sYxbdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxTtXWEem1l5O0R0OWkQ" target="_2sYxatXWEem1l5O0R0OWkQ" source="_2sYxddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxT9XWEem1l5O0R0OWkQ" target="_2sYxd9XWEem1l5O0R0OWkQ" source="_2sYxddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxUNXWEem1l5O0R0OWkQ" target="_2sYxftXWEem1l5O0R0OWkQ" source="_2sYxctXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxUdXWEem1l5O0R0OWkQ" target="_2sYxf9XWEem1l5O0R0OWkQ" source="_2sYxetXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxUtXWEem1l5O0R0OWkQ" target="_2sYxgdXWEem1l5O0R0OWkQ" source="_2sYxftXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxU9XWEem1l5O0R0OWkQ" target="_2sYxiNXWEem1l5O0R0OWkQ" source="_2sYxf9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxVNXWEem1l5O0R0OWkQ" target="_2sYxjtXWEem1l5O0R0OWkQ" source="_2sYxf9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxVdXWEem1l5O0R0OWkQ" target="_2sYxY9XWEem1l5O0R0OWkQ" source="_2sYxjtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYxVtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxV9XWEem1l5O0R0OWkQ" target="_2sYxgNXWEem1l5O0R0OWkQ" source="_2sYxjtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYxWNXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxWdXWEem1l5O0R0OWkQ" target="_2sYxj9XWEem1l5O0R0OWkQ" source="_2sYxfdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxWtXWEem1l5O0R0OWkQ" target="_2sYxj9XWEem1l5O0R0OWkQ" source="_2sYxftXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxW9XWEem1l5O0R0OWkQ" target="_2sYxjtXWEem1l5O0R0OWkQ" source="_2sYxj9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYxXNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxXdXWEem1l5O0R0OWkQ" target="_2sYxh9XWEem1l5O0R0OWkQ" source="_2sYxj9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYxXtXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxX9XWEem1l5O0R0OWkQ" target="_2sYxkNXWEem1l5O0R0OWkQ" source="_2sYxZ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxYNXWEem1l5O0R0OWkQ" target="_2sYxkNXWEem1l5O0R0OWkQ" source="_2sYxhNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxYdXWEem1l5O0R0OWkQ" target="_2sYxkNXWEem1l5O0R0OWkQ" source="_2sYxi9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxYtXWEem1l5O0R0OWkQ" target="_2sYxktXWEem1l5O0R0OWkQ" source="_2sYxkNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sYxY9XWEem1l5O0R0OWkQ" name="Test(==)" incoming="_2sYxVdXWEem1l5O0R0OWkQ">
              <first xmi:id="_2sYxZNXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2sYxTNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxZdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxZtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sYxZ9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2sYxX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxaNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxadXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sYxatXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2sYxTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxa9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxbNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYxbdXWEem1l5O0R0OWkQ" name="Fork(Fork(value1))" incoming="_2sYxItXWEem1l5O0R0OWkQ" outgoing="_2sYxTNXWEem1l5O0R0OWkQ _2sYxTdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxbtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2sYxb9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sYxTdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxcNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxcdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYxctXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sYxUNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxc9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxdNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYxddXWEem1l5O0R0OWkQ" name="Fork(Fork(value2))" incoming="_2sYxI9XWEem1l5O0R0OWkQ" outgoing="_2sYxTtXWEem1l5O0R0OWkQ _2sYxT9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxdtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2sYxd9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sYxT9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxeNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxedXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sYxetXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sYxUdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxe9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxfNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2sYxfdXWEem1l5O0R0OWkQ" name="Initial(Test(==))" outgoing="_2sYxWdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYxftXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2sYxUNXWEem1l5O0R0OWkQ" outgoing="_2sYxUtXWEem1l5O0R0OWkQ _2sYxWtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYxf9XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2sYxUdXWEem1l5O0R0OWkQ" outgoing="_2sYxU9XWEem1l5O0R0OWkQ _2sYxVNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxgNXWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_2sYxV9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sYxgdXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2sYxUtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxgtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxg9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sYxhNXWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_2sYxYNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxhdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxhtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxh9XWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_2sYxXdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sYxiNXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2sYxU9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxidXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxitXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sYxi9XWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_2sYxYdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxjNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxjdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYxjtXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2sYxVNXWEem1l5O0R0OWkQ _2sYxW9XWEem1l5O0R0OWkQ" outgoing="_2sYxVdXWEem1l5O0R0OWkQ _2sYxV9XWEem1l5O0R0OWkQ" decisionInputFlow="_2sYxVNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sYxj9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2sYxWdXWEem1l5O0R0OWkQ _2sYxWtXWEem1l5O0R0OWkQ" outgoing="_2sYxW9XWEem1l5O0R0OWkQ _2sYxXdXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYxWtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2sYxkNXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_2sYxX9XWEem1l5O0R0OWkQ _2sYxYNXWEem1l5O0R0OWkQ _2sYxYdXWEem1l5O0R0OWkQ" outgoing="_2sYxYtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxkdXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_2sYxktXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2sYxYtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxk9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxlNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sYxldXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxltXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxl9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYxmNXWEem1l5O0R0OWkQ" name="ExpressionStatement@1adf55a2" outgoing="_2sYxPNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxmdXWEem1l5O0R0OWkQ" target="_2sYxnNXWEem1l5O0R0OWkQ" source="_2sYxy9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxmtXWEem1l5O0R0OWkQ" target="_2sYxm9XWEem1l5O0R0OWkQ" source="_2sYxn9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxm9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2sYxmtXWEem1l5O0R0OWkQ" behavior="_2sZYN9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sYxnNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2sYxmdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxndXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxntXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYxn9XWEem1l5O0R0OWkQ" name="Tuple@3f182db1" outgoing="_2sYxmtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxoNXWEem1l5O0R0OWkQ" target="_2sYxu9XWEem1l5O0R0OWkQ" source="_2sYxqdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxodXWEem1l5O0R0OWkQ" target="_2sYxvtXWEem1l5O0R0OWkQ" source="_2sYxstXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxotXWEem1l5O0R0OWkQ" target="_2sYxtdXWEem1l5O0R0OWkQ" source="_2sYxqNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxo9XWEem1l5O0R0OWkQ" target="_2sYxtdXWEem1l5O0R0OWkQ" source="_2sYxrdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxpNXWEem1l5O0R0OWkQ" target="_2sYxz9XWEem1l5O0R0OWkQ" source="_2sYxt9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxpdXWEem1l5O0R0OWkQ" target="_2sYx0tXWEem1l5O0R0OWkQ" source="_2sYxxdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxptXWEem1l5O0R0OWkQ" target="_2sYxydXWEem1l5O0R0OWkQ" source="_2sYxtdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYxp9XWEem1l5O0R0OWkQ" target="_2sYxydXWEem1l5O0R0OWkQ" source="_2sYxxNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYxqNXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_2sYxotXWEem1l5O0R0OWkQ">
                <result xmi:id="_2sYxqdXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_2sYxoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxqtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxq9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2sYxrNXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYxrdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2sYxo9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxrtXWEem1l5O0R0OWkQ" target="_2sYxstXWEem1l5O0R0OWkQ" source="_2sYxr9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sYxr9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYxJNXWEem1l5O0R0OWkQ" outgoing="_2sYxrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxsNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxsdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sYxstXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYxrtXWEem1l5O0R0OWkQ" outgoing="_2sYxodXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxs9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxtNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYxtdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYxotXWEem1l5O0R0OWkQ _2sYxo9XWEem1l5O0R0OWkQ" outgoing="_2sYxptXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxttXWEem1l5O0R0OWkQ" target="_2sYxt9XWEem1l5O0R0OWkQ" source="_2sYxwdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYxt9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sYxttXWEem1l5O0R0OWkQ" outgoing="_2sYxpNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxuNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxudXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxutXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2sYxu9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYxoNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxvNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxvdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2sYxvtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYxodXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxv9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxwNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYxwdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sYxttXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxwtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxw9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYxxNXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;)" outgoing="_2sYxp9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2sYxxdXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;).result" outgoing="_2sYxpdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxxtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxx9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2sYxyNXWEem1l5O0R0OWkQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYxydXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYxptXWEem1l5O0R0OWkQ _2sYxp9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYxytXWEem1l5O0R0OWkQ" target="_2sYxy9XWEem1l5O0R0OWkQ" source="_2sYx1dXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sYxy9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sYxytXWEem1l5O0R0OWkQ" outgoing="_2sYxmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYxzNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYxzdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYxztXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2sYxz9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYxpNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx0NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx0dXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2sYx0tXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYxpdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx09XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx1NXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sYx1dXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sYxytXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx1tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx19XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYx2NXWEem1l5O0R0OWkQ" name="ExpressionStatement@14b87222" incoming="_2sYxPNXWEem1l5O0R0OWkQ" outgoing="_2sYxRdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx2dXWEem1l5O0R0OWkQ" target="_2sYx2tXWEem1l5O0R0OWkQ" source="_2sYx79XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYx2tXWEem1l5O0R0OWkQ" name="Fork(s)@357d4c50" incoming="_2sYx2dXWEem1l5O0R0OWkQ" outgoing="_2sYxQdXWEem1l5O0R0OWkQ _2sYxQtXWEem1l5O0R0OWkQ _2sYxQ9XWEem1l5O0R0OWkQ _2sYxRNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYx29XWEem1l5O0R0OWkQ" name="RightHandSide@5cb6b4db">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2sYx3NXWEem1l5O0R0OWkQ" name="CastExpression@5cb6b4db" mode="parallel" outputElement="_2sYx79XWEem1l5O0R0OWkQ" inputElement="_2sYx7tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx3dXWEem1l5O0R0OWkQ" target="_2sYx5tXWEem1l5O0R0OWkQ" source="_2sYx7NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx3tXWEem1l5O0R0OWkQ" target="_2sYx7dXWEem1l5O0R0OWkQ" source="_2sYx7NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx39XWEem1l5O0R0OWkQ" target="_2sYx7dXWEem1l5O0R0OWkQ" source="_2sYx6dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx4NXWEem1l5O0R0OWkQ" target="_2sYx5NXWEem1l5O0R0OWkQ" source="_2sYx7dXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYx4dXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx4tXWEem1l5O0R0OWkQ" target="_2sYx7NXWEem1l5O0R0OWkQ" source="_2sYx7tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYx49XWEem1l5O0R0OWkQ" target="_2sYx79XWEem1l5O0R0OWkQ" source="_2sYx5NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2sYx5NXWEem1l5O0R0OWkQ" name="Merge(CastExpression@5cb6b4db.operand)" incoming="_2sYx4NXWEem1l5O0R0OWkQ" outgoing="_2sYx49XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2sYx5dXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_2sYx5tXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).object" incoming="_2sYx3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx59XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx6NXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2sYx6dXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).result" outgoing="_2sYx39XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx6tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx69XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2sYx7NXWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_2sYx4tXWEem1l5O0R0OWkQ" outgoing="_2sYx3dXWEem1l5O0R0OWkQ _2sYx3tXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2sYx7dXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_2sYx3tXWEem1l5O0R0OWkQ _2sYx39XWEem1l5O0R0OWkQ" outgoing="_2sYx4NXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYx39XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2sYx7tXWEem1l5O0R0OWkQ" name="CastExpression@5cb6b4db.inputElement" incoming="_2sYxJdXWEem1l5O0R0OWkQ" outgoing="_2sYx4tXWEem1l5O0R0OWkQ" regionAsInput="_2sYx3NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2sYx79XWEem1l5O0R0OWkQ" name="CastExpression@5cb6b4db.outputElement" incoming="_2sYx49XWEem1l5O0R0OWkQ" outgoing="_2sYx2dXWEem1l5O0R0OWkQ" regionAsOutput="_2sYx3NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_2sYx8NXWEem1l5O0R0OWkQ" name="IfStatement@4ebe146" incoming="_2sYxRdXWEem1l5O0R0OWkQ" outgoing="_2sYxRtXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYx8dXWEem1l5O0R0OWkQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYx8tXWEem1l5O0R0OWkQ" target="_2sYx-dXWEem1l5O0R0OWkQ" source="_2sYx89XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYx89XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@5eafef3a)" outgoing="_2sYx8tXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYx9NXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2sYx9dXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx9tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx99XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2sYx-NXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYx-dXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2sYx8tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYx-tXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sYxQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx-9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx_NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2sYx_dXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYx_tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYx_9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyANXWEem1l5O0R0OWkQ" name="ExpressionStatement@65bf4f0f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyAdXWEem1l5O0R0OWkQ" target="_2sYyBNXWEem1l5O0R0OWkQ" source="_2sYyM9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyAtXWEem1l5O0R0OWkQ" target="_2sYyA9XWEem1l5O0R0OWkQ" source="_2sYyB9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYyA9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2sYyAtXWEem1l5O0R0OWkQ" behavior="_2sZYN9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYyBNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2sYyAdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyBdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyBtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyB9XWEem1l5O0R0OWkQ" name="Tuple@4ec3b923" outgoing="_2sYyAtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyCNXWEem1l5O0R0OWkQ" target="_2sYyI9XWEem1l5O0R0OWkQ" source="_2sYyEdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyCdXWEem1l5O0R0OWkQ" target="_2sYyJtXWEem1l5O0R0OWkQ" source="_2sYyGtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyCtXWEem1l5O0R0OWkQ" target="_2sYyHdXWEem1l5O0R0OWkQ" source="_2sYyENXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyC9XWEem1l5O0R0OWkQ" target="_2sYyHdXWEem1l5O0R0OWkQ" source="_2sYyFdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyDNXWEem1l5O0R0OWkQ" target="_2sYyN9XWEem1l5O0R0OWkQ" source="_2sYyH9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyDdXWEem1l5O0R0OWkQ" target="_2sYyOtXWEem1l5O0R0OWkQ" source="_2sYyLdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyDtXWEem1l5O0R0OWkQ" target="_2sYyMdXWEem1l5O0R0OWkQ" source="_2sYyHdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyD9XWEem1l5O0R0OWkQ" target="_2sYyMdXWEem1l5O0R0OWkQ" source="_2sYyLNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYyENXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_2sYyCtXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2sYyEdXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_2sYyCNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyEtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyE9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sYyFNXWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyFdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50)" outgoing="_2sYyC9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyFtXWEem1l5O0R0OWkQ" target="_2sYyGtXWEem1l5O0R0OWkQ" source="_2sYyF9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2sYyF9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50).input" incoming="_2sYxQtXWEem1l5O0R0OWkQ" outgoing="_2sYyFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyGNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyGdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2sYyGtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50).output" incoming="_2sYyFtXWEem1l5O0R0OWkQ" outgoing="_2sYyCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyG9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyHNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyHdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYyCtXWEem1l5O0R0OWkQ _2sYyC9XWEem1l5O0R0OWkQ" outgoing="_2sYyDtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyHtXWEem1l5O0R0OWkQ" target="_2sYyH9XWEem1l5O0R0OWkQ" source="_2sYyKdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2sYyH9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sYyHtXWEem1l5O0R0OWkQ" outgoing="_2sYyDNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyINXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyIdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYyItXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_2sYyI9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYyCNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyJNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyJdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2sYyJtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYyCdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyJ9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyKNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2sYyKdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sYyHtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyKtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyK9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYyLNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_2sYyD9XWEem1l5O0R0OWkQ">
                  <result xmi:id="_2sYyLdXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_2sYyDdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyLtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyL9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sYyMNXWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyMdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYyDtXWEem1l5O0R0OWkQ _2sYyD9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyMtXWEem1l5O0R0OWkQ" target="_2sYyM9XWEem1l5O0R0OWkQ" source="_2sYyPdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2sYyM9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sYyMtXWEem1l5O0R0OWkQ" outgoing="_2sYyAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyNNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyNdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYyNtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_2sYyN9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYyDNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyONXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyOdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2sYyOtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYyDdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyO9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyPNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2sYyPdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sYyMtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyPtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyP9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyQNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyQdXWEem1l5O0R0OWkQ" target="_2sYyRdXWEem1l5O0R0OWkQ" source="_2sYyQtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYyQtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYxJtXWEem1l5O0R0OWkQ" outgoing="_2sYyQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyQ9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyRNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyRdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYyQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyRtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyR9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYySNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYySdXWEem1l5O0R0OWkQ" target="_2sYyTdXWEem1l5O0R0OWkQ" source="_2sYyStXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYyStXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50).input" incoming="_2sYxQ9XWEem1l5O0R0OWkQ" outgoing="_2sYySdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyS9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyTNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyTdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50).output" incoming="_2sYySdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyTtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyT9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyUNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyUdXWEem1l5O0R0OWkQ" target="_2sYyVdXWEem1l5O0R0OWkQ" source="_2sYyUtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYyUtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2sYxJ9XWEem1l5O0R0OWkQ" outgoing="_2sYyUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyU9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyVNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyVdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2sYyUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyVtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyV9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyWNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyWdXWEem1l5O0R0OWkQ" target="_2sYyXdXWEem1l5O0R0OWkQ" source="_2sYyWtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYyWtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2sYxKNXWEem1l5O0R0OWkQ" outgoing="_2sYyWdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyW9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyXNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyXdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2sYyWdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyXtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyX9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYyYNXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_2sYyYdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyYtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyY9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYyZNXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyZdXWEem1l5O0R0OWkQ" name="ExpressionStatement@181fcc9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyZtXWEem1l5O0R0OWkQ" target="_2sYyadXWEem1l5O0R0OWkQ" source="_2sYymdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyZ9XWEem1l5O0R0OWkQ" target="_2sYyaNXWEem1l5O0R0OWkQ" source="_2sYybNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYyaNXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2sYyZ9XWEem1l5O0R0OWkQ" behavior="_2sZYN9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sYyadXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2sYyZtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyatXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYya9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYybNXWEem1l5O0R0OWkQ" name="Tuple@4358aeb7" outgoing="_2sYyZ9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYybdXWEem1l5O0R0OWkQ" target="_2sYygdXWEem1l5O0R0OWkQ" source="_2sYyedXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYybtXWEem1l5O0R0OWkQ" target="_2sYygNXWEem1l5O0R0OWkQ" source="_2sYyeNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyb9XWEem1l5O0R0OWkQ" target="_2sYyjNXWEem1l5O0R0OWkQ" source="_2sYyedXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYycNXWEem1l5O0R0OWkQ" target="_2sYymNXWEem1l5O0R0OWkQ" source="_2sYyl9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYycdXWEem1l5O0R0OWkQ" target="_2sYymNXWEem1l5O0R0OWkQ" source="_2sYyhNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyctXWEem1l5O0R0OWkQ" target="_2sYyh9XWEem1l5O0R0OWkQ" source="_2sYymNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYyc9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYydNXWEem1l5O0R0OWkQ" target="_2sYyjdXWEem1l5O0R0OWkQ" source="_2sYymNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sYyddXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYydtXWEem1l5O0R0OWkQ" target="_2sYymdXWEem1l5O0R0OWkQ" source="_2sYyidXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyd9XWEem1l5O0R0OWkQ" target="_2sYymdXWEem1l5O0R0OWkQ" source="_2sYyj9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyeNXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@1eead105)" outgoing="_2sYybtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_2sYyedXWEem1l5O0R0OWkQ" name="Fork('')@20f8ff49" incoming="_2sYxKdXWEem1l5O0R0OWkQ" outgoing="_2sYybdXWEem1l5O0R0OWkQ _2sYyb9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyetXWEem1l5O0R0OWkQ" name="RightHandSide@7c42ca3b"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYye9XWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_2sYyfNXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyfdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyftXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2sYyf9XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYygNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2sYybtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYygdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sYybdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYygtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyg9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2sYyhNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sYycdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyhdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyhtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyh9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@24068385.operand2" incoming="_2sYyctXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyiNXWEem1l5O0R0OWkQ" target="_2sYyidXWEem1l5O0R0OWkQ" source="_2sYyjNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2sYyidXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@24068385.operand2.result" incoming="_2sYyiNXWEem1l5O0R0OWkQ" outgoing="_2sYydtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyitXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyi9XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_2sYyjNXWEem1l5O0R0OWkQ" name="Merge(Fork('')@20f8ff49)" incoming="_2sYyb9XWEem1l5O0R0OWkQ" outgoing="_2sYyiNXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyjdXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@24068385.operand3" incoming="_2sYydNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyjtXWEem1l5O0R0OWkQ" target="_2sYyj9XWEem1l5O0R0OWkQ" source="_2sYyk9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2sYyj9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@24068385.operand3.result" incoming="_2sYyjtXWEem1l5O0R0OWkQ" outgoing="_2sYyd9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYykNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYykdXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYyktXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_2sYyk9XWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_2sYyjtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYylNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyldXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2sYyltXWEem1l5O0R0OWkQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2sYyl9XWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@24068385)" outgoing="_2sYycNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2sYymNXWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@24068385)" incoming="_2sYycNXWEem1l5O0R0OWkQ _2sYycdXWEem1l5O0R0OWkQ" outgoing="_2sYyctXWEem1l5O0R0OWkQ _2sYydNXWEem1l5O0R0OWkQ" decisionInputFlow="_2sYycdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2sYymdXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@24068385.result)" incoming="_2sYydtXWEem1l5O0R0OWkQ _2sYyd9XWEem1l5O0R0OWkQ" outgoing="_2sYyZtXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYymtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYym9XWEem1l5O0R0OWkQ" target="_2sYyn9XWEem1l5O0R0OWkQ" source="_2sYynNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYynNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYxKtXWEem1l5O0R0OWkQ" outgoing="_2sYym9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyndXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyntXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyn9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYym9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyoNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyodXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyotXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyo9XWEem1l5O0R0OWkQ" target="_2sYyp9XWEem1l5O0R0OWkQ" source="_2sYypNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYypNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50).input" incoming="_2sYxRNXWEem1l5O0R0OWkQ" outgoing="_2sYyo9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYypdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyptXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyp9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@357d4c50).output" incoming="_2sYyo9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyqNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyqdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyqtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyq9XWEem1l5O0R0OWkQ" target="_2sYyr9XWEem1l5O0R0OWkQ" source="_2sYyrNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYyrNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2sYxK9XWEem1l5O0R0OWkQ" outgoing="_2sYyq9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyrdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyrtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyr9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2sYyq9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYysNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYysdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYystXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYys9XWEem1l5O0R0OWkQ" target="_2sYyt9XWEem1l5O0R0OWkQ" source="_2sYytNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYytNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2sYxLNXWEem1l5O0R0OWkQ" outgoing="_2sYys9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYytdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyttXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYyt9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2sYys9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyuNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyudXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_2sYyutXWEem1l5O0R0OWkQ" body="_2sYyANXWEem1l5O0R0OWkQ _2sYyQNXWEem1l5O0R0OWkQ _2sYySNXWEem1l5O0R0OWkQ _2sYyUNXWEem1l5O0R0OWkQ _2sYyWNXWEem1l5O0R0OWkQ" bodyOutput="_2sYyRdXWEem1l5O0R0OWkQ _2sYyTdXWEem1l5O0R0OWkQ _2sYyVdXWEem1l5O0R0OWkQ _2sYyXdXWEem1l5O0R0OWkQ" decider="_2sYx_dXWEem1l5O0R0OWkQ" successorClause="_2sYyu9XWEem1l5O0R0OWkQ" test="_2sYx8dXWEem1l5O0R0OWkQ"/>
            <clause xmi:id="_2sYyu9XWEem1l5O0R0OWkQ" body="_2sYyZdXWEem1l5O0R0OWkQ _2sYymtXWEem1l5O0R0OWkQ _2sYyotXWEem1l5O0R0OWkQ _2sYyqtXWEem1l5O0R0OWkQ _2sYystXWEem1l5O0R0OWkQ" bodyOutput="_2sYyn9XWEem1l5O0R0OWkQ _2sYyp9XWEem1l5O0R0OWkQ _2sYyr9XWEem1l5O0R0OWkQ _2sYyt9XWEem1l5O0R0OWkQ" decider="_2sYyYdXWEem1l5O0R0OWkQ" predecessorClause="_2sYyutXWEem1l5O0R0OWkQ" test="_2sYyYNXWEem1l5O0R0OWkQ"/>
            <result xmi:id="_2sYyvNXWEem1l5O0R0OWkQ" name="IfStatement@4ebe146.result(label)" outgoing="_2sYxPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyvdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyvtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2sYyv9XWEem1l5O0R0OWkQ" name="IfStatement@4ebe146.result(s)" outgoing="_2sYxPtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYywNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYywdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2sYywtXWEem1l5O0R0OWkQ" name="IfStatement@4ebe146.result(value2)" outgoing="_2sYxP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyw9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyxNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2sYyxdXWEem1l5O0R0OWkQ" name="IfStatement@4ebe146.result(value1)" outgoing="_2sYxQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYyxtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYyx9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYyyNXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sYxPdXWEem1l5O0R0OWkQ" outgoing="_2sYxR9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYyydXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2sYxPtXWEem1l5O0R0OWkQ" outgoing="_2sYxSNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYyytXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2sYxP9XWEem1l5O0R0OWkQ" outgoing="_2sYxSdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2sYyy9XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2sYxQNXWEem1l5O0R0OWkQ" outgoing="_2sYxStXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYyzNXWEem1l5O0R0OWkQ" name="ExpressionStatement@1c7e2fd" incoming="_2sYxRtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYyzdXWEem1l5O0R0OWkQ" target="_2sYy0NXWEem1l5O0R0OWkQ" source="_2sYy2NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYyztXWEem1l5O0R0OWkQ" target="_2sYyz9XWEem1l5O0R0OWkQ" source="_2sYy1tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYyz9XWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_2sYyztXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sYy0NXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2sYyzdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy0dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy0tXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sYy09XWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy1NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy1dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYy1tXWEem1l5O0R0OWkQ" name="Tuple@7ab86920" outgoing="_2sYyztXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYy19XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;)">
                <result xmi:id="_2sYy2NXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;).result" outgoing="_2sYyzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy2dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy2tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2sYy29XWEem1l5O0R0OWkQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYy3NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYy3dXWEem1l5O0R0OWkQ" target="_2sYy4dXWEem1l5O0R0OWkQ" source="_2sYy3tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYy3tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYxR9XWEem1l5O0R0OWkQ" outgoing="_2sYy3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy39XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy4NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYy4dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYy3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy4tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy49XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYy5NXWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYy5dXWEem1l5O0R0OWkQ" target="_2sYy6dXWEem1l5O0R0OWkQ" source="_2sYy5tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYy5tXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_2sYxSNXWEem1l5O0R0OWkQ" outgoing="_2sYy5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy59XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy6NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYy6dXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_2sYy5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy6tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy69XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYy7NXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYy7dXWEem1l5O0R0OWkQ" target="_2sYy8dXWEem1l5O0R0OWkQ" source="_2sYy7tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYy7tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2sYxSdXWEem1l5O0R0OWkQ" outgoing="_2sYy7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy79XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy8NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYy8dXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2sYy7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy8tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy89XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYy9NXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYy9dXWEem1l5O0R0OWkQ" target="_2sYy-dXWEem1l5O0R0OWkQ" source="_2sYy9tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYy9tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2sYxStXWEem1l5O0R0OWkQ" outgoing="_2sYy9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy99XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy-NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYy-dXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2sYy9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy-tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy-9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYy_NXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_2sYy_dXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYy_tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYy_9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2sYzANXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzAdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzAtXWEem1l5O0R0OWkQ" target="_2sYzBtXWEem1l5O0R0OWkQ" source="_2sYzA9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYzA9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYxLdXWEem1l5O0R0OWkQ" outgoing="_2sYzAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzBNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzBdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYzBtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYzAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzB9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzCNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYzCdXWEem1l5O0R0OWkQ" name="Value(null)">
            <result xmi:id="_2sYzCtXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzC9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzDNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_2sYzDdXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzDtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzD9XWEem1l5O0R0OWkQ" target="_2sYzE9XWEem1l5O0R0OWkQ" source="_2sYzENXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYzENXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2sYxLtXWEem1l5O0R0OWkQ" outgoing="_2sYzD9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzEdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzEtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYzE9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2sYzD9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzFNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzFdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzFtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzF9XWEem1l5O0R0OWkQ" target="_2sYzG9XWEem1l5O0R0OWkQ" source="_2sYzGNXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sYzGNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2sYxL9XWEem1l5O0R0OWkQ" outgoing="_2sYzF9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzGdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzGtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sYzG9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2sYzF9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzHNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzHdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2sYzHtXWEem1l5O0R0OWkQ" body="_2sYxmNXWEem1l5O0R0OWkQ _2sYx2NXWEem1l5O0R0OWkQ _2sYx8NXWEem1l5O0R0OWkQ _2sYyzNXWEem1l5O0R0OWkQ _2sYy3NXWEem1l5O0R0OWkQ _2sYy5NXWEem1l5O0R0OWkQ _2sYy7NXWEem1l5O0R0OWkQ _2sYy9NXWEem1l5O0R0OWkQ" bodyOutput="_2sYy4dXWEem1l5O0R0OWkQ _2sYy6dXWEem1l5O0R0OWkQ _2sYy8dXWEem1l5O0R0OWkQ _2sYy-dXWEem1l5O0R0OWkQ" decider="_2sYxldXWEem1l5O0R0OWkQ" successorClause="_2sYzH9XWEem1l5O0R0OWkQ" test="_2sYxS9XWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_2sYzH9XWEem1l5O0R0OWkQ" body="_2sYzAdXWEem1l5O0R0OWkQ _2sYzCdXWEem1l5O0R0OWkQ _2sYzDtXWEem1l5O0R0OWkQ _2sYzFtXWEem1l5O0R0OWkQ" bodyOutput="_2sYzBtXWEem1l5O0R0OWkQ _2sYzCtXWEem1l5O0R0OWkQ _2sYzE9XWEem1l5O0R0OWkQ _2sYzG9XWEem1l5O0R0OWkQ" decider="_2sYy_dXWEem1l5O0R0OWkQ" predecessorClause="_2sYzHtXWEem1l5O0R0OWkQ" test="_2sYy_NXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_2sYzINXWEem1l5O0R0OWkQ" name="IfStatement@5ac70685.result(label)" outgoing="_2sYxN9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzIdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzItXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2sYzI9XWEem1l5O0R0OWkQ" name="IfStatement@5ac70685.result(s)" outgoing="_2sYxONXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzJNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzJdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2sYzJtXWEem1l5O0R0OWkQ" name="IfStatement@5ac70685.result(value2)" outgoing="_2sYxOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzJ9XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzKNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2sYzKdXWEem1l5O0R0OWkQ" name="IfStatement@5ac70685.result(value1)" outgoing="_2sYxOtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzKtXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzK9XWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2sYzLNXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sYxN9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2sYzLdXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2sYxONXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2sYzLtXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2sYxOdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2sYzL9XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2sYxOtXWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYxMNXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2sYxH9XWEem1l5O0R0OWkQ" parameter="_2sYxFtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYxMdXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sYxH9XWEem1l5O0R0OWkQ" outgoing="_2sYxJNXWEem1l5O0R0OWkQ _2sYxJtXWEem1l5O0R0OWkQ _2sYxKtXWEem1l5O0R0OWkQ _2sYxLdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYxMtXWEem1l5O0R0OWkQ" name="Input(value1)" outgoing="_2sYxINXWEem1l5O0R0OWkQ" parameter="_2sYxGdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYxM9XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2sYxINXWEem1l5O0R0OWkQ" outgoing="_2sYxItXWEem1l5O0R0OWkQ _2sYxKNXWEem1l5O0R0OWkQ _2sYxLNXWEem1l5O0R0OWkQ _2sYxL9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYxNNXWEem1l5O0R0OWkQ" name="Input(value2)" outgoing="_2sYxIdXWEem1l5O0R0OWkQ" parameter="_2sYxHNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYxNdXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2sYxIdXWEem1l5O0R0OWkQ" outgoing="_2sYxI9XWEem1l5O0R0OWkQ _2sYxJdXWEem1l5O0R0OWkQ _2sYxJ9XWEem1l5O0R0OWkQ _2sYxKdXWEem1l5O0R0OWkQ _2sYxK9XWEem1l5O0R0OWkQ _2sYxLtXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2sYzMNXWEem1l5O0R0OWkQ" name="AssertList" visibility="public" node="_2sYzStXWEem1l5O0R0OWkQ _2sYzS9XWEem1l5O0R0OWkQ _2sYzTNXWEem1l5O0R0OWkQ _2sYzTdXWEem1l5O0R0OWkQ _2sYzTtXWEem1l5O0R0OWkQ _2sYzT9XWEem1l5O0R0OWkQ _2sYzUNXWEem1l5O0R0OWkQ" group="_2sYzUNXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2sYzMdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sYzMtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sYzM9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sYzNNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sYzNdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2sYzNtXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzN9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzONXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2sYzOdXWEem1l5O0R0OWkQ" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzOtXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzO9XWEem1l5O0R0OWkQ" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2sYzPNXWEem1l5O0R0OWkQ" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzPdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzPtXWEem1l5O0R0OWkQ" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzP9XWEem1l5O0R0OWkQ" target="_2sYzS9XWEem1l5O0R0OWkQ" source="_2sYzStXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzQNXWEem1l5O0R0OWkQ" target="_2sYzTdXWEem1l5O0R0OWkQ" source="_2sYzTNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzQdXWEem1l5O0R0OWkQ" target="_2sYzT9XWEem1l5O0R0OWkQ" source="_2sYzTtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzQtXWEem1l5O0R0OWkQ" target="_2sYzbdXWEem1l5O0R0OWkQ" source="_2sYzS9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzQ9XWEem1l5O0R0OWkQ" target="_2sYziNXWEem1l5O0R0OWkQ" source="_2sYzTdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzRNXWEem1l5O0R0OWkQ" target="_2sYzlNXWEem1l5O0R0OWkQ" source="_2sYzT9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzRdXWEem1l5O0R0OWkQ" target="_2sY0pdXWEem1l5O0R0OWkQ" source="_2sYzS9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzRtXWEem1l5O0R0OWkQ" target="_2sY0qNXWEem1l5O0R0OWkQ" source="_2sYzTdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzR9XWEem1l5O0R0OWkQ" target="_2sY0q9XWEem1l5O0R0OWkQ" source="_2sYzT9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzSNXWEem1l5O0R0OWkQ" target="_2sY03tXWEem1l5O0R0OWkQ" source="_2sYzTdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzSdXWEem1l5O0R0OWkQ" target="_2sZXYdXWEem1l5O0R0OWkQ" source="_2sYzT9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2sYzUNXWEem1l5O0R0OWkQ" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_2sYzUdXWEem1l5O0R0OWkQ" target="_2sYzmtXWEem1l5O0R0OWkQ" source="_2sYzUtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzUtXWEem1l5O0R0OWkQ" name="ExpressionStatement@275c5251" outgoing="_2sYzUdXWEem1l5O0R0OWkQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzU9XWEem1l5O0R0OWkQ" target="_2sYzWNXWEem1l5O0R0OWkQ" source="_2sYzddXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzVNXWEem1l5O0R0OWkQ" target="_2sYzW9XWEem1l5O0R0OWkQ" source="_2sYzhNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzVdXWEem1l5O0R0OWkQ" target="_2sYzXtXWEem1l5O0R0OWkQ" source="_2sYzkNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYzVtXWEem1l5O0R0OWkQ" target="_2sYzV9XWEem1l5O0R0OWkQ" source="_2sYzYdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYzV9XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2sYzVtXWEem1l5O0R0OWkQ" behavior="_2sYxENXWEem1l5O0R0OWkQ">
            <argument xmi:id="_2sYzWNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2sYzU9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzWdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzWtXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_2sYzW9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2sYzVNXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzXNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzXdXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_2sYzXtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2sYzVdXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzX9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzYNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzYdXWEem1l5O0R0OWkQ" name="Tuple@264d590e" outgoing="_2sYzVtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzYtXWEem1l5O0R0OWkQ" target="_2sYzedXWEem1l5O0R0OWkQ" source="_2sYzcNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzY9XWEem1l5O0R0OWkQ" target="_2sYzfNXWEem1l5O0R0OWkQ" source="_2sYzZ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYzZNXWEem1l5O0R0OWkQ" target="_2sYzc9XWEem1l5O0R0OWkQ" source="_2sYza9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYzZdXWEem1l5O0R0OWkQ" target="_2sYzc9XWEem1l5O0R0OWkQ" source="_2sYzZtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYzZtXWEem1l5O0R0OWkQ" name="Value(&quot;->size()&quot;)" outgoing="_2sYzZdXWEem1l5O0R0OWkQ">
              <result xmi:id="_2sYzZ9XWEem1l5O0R0OWkQ" name="Value(&quot;->size()&quot;).result" outgoing="_2sYzY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzaNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzadXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2sYzatXWEem1l5O0R0OWkQ" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYza9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2sYzZNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzbNXWEem1l5O0R0OWkQ" target="_2sYzcNXWEem1l5O0R0OWkQ" source="_2sYzbdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2sYzbdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYzQtXWEem1l5O0R0OWkQ" outgoing="_2sYzbNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzbtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzb9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2sYzcNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYzbNXWEem1l5O0R0OWkQ" outgoing="_2sYzYtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzcdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzctXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzc9XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYzZNXWEem1l5O0R0OWkQ _2sYzZdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzdNXWEem1l5O0R0OWkQ" target="_2sYzddXWEem1l5O0R0OWkQ" source="_2sYzf9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYzddXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sYzdNXWEem1l5O0R0OWkQ" outgoing="_2sYzU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzdtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzd9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYzeNXWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_2sYzedXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYzYtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzetXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYze9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sYzfNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYzY9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzfdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzftXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sYzf9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sYzdNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzgNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzgdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzgtXWEem1l5O0R0OWkQ" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzg9XWEem1l5O0R0OWkQ" target="_2sYzhNXWEem1l5O0R0OWkQ" source="_2sYzi9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYzhNXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_2sYzg9XWEem1l5O0R0OWkQ" outgoing="_2sYzVNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzhdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzhtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYzh9XWEem1l5O0R0OWkQ" name="Call(Size)">
                <argument xmi:id="_2sYziNXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_2sYzQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzidXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzitXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2sYzi9XWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_2sYzg9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzjNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzjdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzjtXWEem1l5O0R0OWkQ" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzj9XWEem1l5O0R0OWkQ" target="_2sYzkNXWEem1l5O0R0OWkQ" source="_2sYzl9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYzkNXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_2sYzj9XWEem1l5O0R0OWkQ" outgoing="_2sYzVdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzkdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzktXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYzk9XWEem1l5O0R0OWkQ" name="Call(Size)">
                <argument xmi:id="_2sYzlNXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_2sYzRNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzldXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzltXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2sYzl9XWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_2sYzj9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzmNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzmdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzmtXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7" incoming="_2sYzUdXWEem1l5O0R0OWkQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzm9XWEem1l5O0R0OWkQ" target="_2sZXdtXWEem1l5O0R0OWkQ" source="_2sY009XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYznNXWEem1l5O0R0OWkQ" target="_2sY0sdXWEem1l5O0R0OWkQ" source="_2sZXkdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzndXWEem1l5O0R0OWkQ" target="_2sY0tNXWEem1l5O0R0OWkQ" source="_2sZXjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzntXWEem1l5O0R0OWkQ" target="_2sY0rtXWEem1l5O0R0OWkQ" source="_2sZXdtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sYzn9XWEem1l5O0R0OWkQ" target="_2sYzoNXWEem1l5O0R0OWkQ" source="_2sY0ydXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:LoopNode" xmi:id="_2sYzoNXWEem1l5O0R0OWkQ" name="Loop(ForStatement@3774b3a7)" incoming="_2sYzn9XWEem1l5O0R0OWkQ" bodyOutput="_2sYzzdXWEem1l5O0R0OWkQ _2sYz0NXWEem1l5O0R0OWkQ _2sYz09XWEem1l5O0R0OWkQ _2sY0i9XWEem1l5O0R0OWkQ _2sY0dNXWEem1l5O0R0OWkQ _2sY0gdXWEem1l5O0R0OWkQ" bodyPart="_2sYzx9XWEem1l5O0R0OWkQ _2sYzyNXWEem1l5O0R0OWkQ _2sY0hNXWEem1l5O0R0OWkQ _2sY0jtXWEem1l5O0R0OWkQ" decider="_2sYzxNXWEem1l5O0R0OWkQ" isTestedFirst="true" test="_2sYzvdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzodXWEem1l5O0R0OWkQ" target="_2sYzt9XWEem1l5O0R0OWkQ" source="_2sY0k9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzotXWEem1l5O0R0OWkQ" target="_2sYzuNXWEem1l5O0R0OWkQ" source="_2sY0ltXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzo9XWEem1l5O0R0OWkQ" target="_2sYzudXWEem1l5O0R0OWkQ" source="_2sY0mdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzpNXWEem1l5O0R0OWkQ" target="_2sYzutXWEem1l5O0R0OWkQ" source="_2sY0nNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzpdXWEem1l5O0R0OWkQ" target="_2sYzu9XWEem1l5O0R0OWkQ" source="_2sY0n9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzptXWEem1l5O0R0OWkQ" target="_2sYzvNXWEem1l5O0R0OWkQ" source="_2sY0otXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzp9XWEem1l5O0R0OWkQ" target="_2sYzvtXWEem1l5O0R0OWkQ" source="_2sYzu9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzqNXWEem1l5O0R0OWkQ" target="_2sYzwdXWEem1l5O0R0OWkQ" source="_2sYzvNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sYzqdXWEem1l5O0R0OWkQ" target="_2sYzyNXWEem1l5O0R0OWkQ" source="_2sYzx9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzqtXWEem1l5O0R0OWkQ" target="_2sY0FtXWEem1l5O0R0OWkQ" source="_2sYzutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzq9XWEem1l5O0R0OWkQ" target="_2sY0SdXWEem1l5O0R0OWkQ" source="_2sYzutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzrNXWEem1l5O0R0OWkQ" target="_2sY0VNXWEem1l5O0R0OWkQ" source="_2sYzutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzrdXWEem1l5O0R0OWkQ" target="_2sY0hdXWEem1l5O0R0OWkQ" source="_2sYzutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzrtXWEem1l5O0R0OWkQ" target="_2sY0iNXWEem1l5O0R0OWkQ" source="_2sY0j9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzr9XWEem1l5O0R0OWkQ" target="_2sY0btXWEem1l5O0R0OWkQ" source="_2sYzu9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzsNXWEem1l5O0R0OWkQ" target="_2sY0ftXWEem1l5O0R0OWkQ" source="_2sYzvNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzsdXWEem1l5O0R0OWkQ" target="_2sYz-9XWEem1l5O0R0OWkQ" source="_2sYzt9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzstXWEem1l5O0R0OWkQ" target="_2sY0QNXWEem1l5O0R0OWkQ" source="_2sYzuNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzs9XWEem1l5O0R0OWkQ" target="_2sY0S9XWEem1l5O0R0OWkQ" source="_2sYzudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYztNXWEem1l5O0R0OWkQ" target="_2sY0V9XWEem1l5O0R0OWkQ" source="_2sYzt9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYztdXWEem1l5O0R0OWkQ" target="_2sY0X9XWEem1l5O0R0OWkQ" source="_2sYzuNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzttXWEem1l5O0R0OWkQ" target="_2sY0Z9XWEem1l5O0R0OWkQ" source="_2sYzudXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYzt9XWEem1l5O0R0OWkQ" name="Fork(ForStatement@3774b3a7.loopVariable(label))" incoming="_2sYzodXWEem1l5O0R0OWkQ" outgoing="_2sYzsdXWEem1l5O0R0OWkQ _2sYztNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYzuNXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3774b3a7.loopVariable(list))" incoming="_2sYzotXWEem1l5O0R0OWkQ" outgoing="_2sYzstXWEem1l5O0R0OWkQ _2sYztdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYzudXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3774b3a7.loopVariable(expected))" incoming="_2sYzo9XWEem1l5O0R0OWkQ" outgoing="_2sYzs9XWEem1l5O0R0OWkQ _2sYzttXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYzutXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3774b3a7.loopVariable(i))" incoming="_2sYzpNXWEem1l5O0R0OWkQ" outgoing="_2sYzqtXWEem1l5O0R0OWkQ _2sYzq9XWEem1l5O0R0OWkQ _2sYzrNXWEem1l5O0R0OWkQ _2sYzrdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYzu9XWEem1l5O0R0OWkQ" name="Fork(ForStatement@3774b3a7.loopVariable(counter))" incoming="_2sYzpdXWEem1l5O0R0OWkQ" outgoing="_2sYzp9XWEem1l5O0R0OWkQ _2sYzr9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2sYzvNXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3774b3a7.loopVariable(upper))" incoming="_2sYzptXWEem1l5O0R0OWkQ" outgoing="_2sYzqNXWEem1l5O0R0OWkQ _2sYzsNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYzvdXWEem1l5O0R0OWkQ" name="Call(&lt;=)">
              <argument xmi:id="_2sYzvtXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(x)" incoming="_2sYzp9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzv9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzwNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_2sYzwdXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(y)" incoming="_2sYzqNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzwtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzw9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sYzxNXWEem1l5O0R0OWkQ" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzxdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzxtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzx9XWEem1l5O0R0OWkQ" name="Values(ForStatement@3774b3a7)" outgoing="_2sYzqdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYzyNXWEem1l5O0R0OWkQ" name="Body(ForStatement@3774b3a7)" incoming="_2sYzqdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzydXWEem1l5O0R0OWkQ" target="_2sYzzdXWEem1l5O0R0OWkQ" source="_2sY0WtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzytXWEem1l5O0R0OWkQ" target="_2sYz0NXWEem1l5O0R0OWkQ" source="_2sY0YtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzy9XWEem1l5O0R0OWkQ" target="_2sYz09XWEem1l5O0R0OWkQ" source="_2sY0atXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYzzNXWEem1l5O0R0OWkQ" target="_2sY0cdXWEem1l5O0R0OWkQ" source="_2sY0eNXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sYzzdXWEem1l5O0R0OWkQ" name="label" incoming="_2sYzydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYzztXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYzz9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_2sYz0NXWEem1l5O0R0OWkQ" name="list" incoming="_2sYzytXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz0dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz0tXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_2sYz09XWEem1l5O0R0OWkQ" name="expected" incoming="_2sYzy9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz1NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz1dXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYz1tXWEem1l5O0R0OWkQ" name="ExpressionStatement@622dae37">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz19XWEem1l5O0R0OWkQ" target="_2sYz3NXWEem1l5O0R0OWkQ" source="_2sY0MtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz2NXWEem1l5O0R0OWkQ" target="_2sYz39XWEem1l5O0R0OWkQ" source="_2sY0RtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz2dXWEem1l5O0R0OWkQ" target="_2sYz4tXWEem1l5O0R0OWkQ" source="_2sY0UdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz2tXWEem1l5O0R0OWkQ" target="_2sYz29XWEem1l5O0R0OWkQ" source="_2sYz5dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sYz29XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2sYz2tXWEem1l5O0R0OWkQ" behavior="_2sYxENXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2sYz3NXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2sYz19XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz3dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz3tXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2sYz39XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2sYz2NXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz4NXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz4dXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2sYz4tXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2sYz2dXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz49XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz5NXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYz5dXWEem1l5O0R0OWkQ" name="Tuple@35c85aa8" outgoing="_2sYz2tXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz5tXWEem1l5O0R0OWkQ" target="_2sY0B9XWEem1l5O0R0OWkQ" source="_2sYz_tXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz59XWEem1l5O0R0OWkQ" target="_2sY0CtXWEem1l5O0R0OWkQ" source="_2sYz9dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz6NXWEem1l5O0R0OWkQ" target="_2sY0AdXWEem1l5O0R0OWkQ" source="_2sYz-dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz6dXWEem1l5O0R0OWkQ" target="_2sY0AdXWEem1l5O0R0OWkQ" source="_2sYz9NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz6tXWEem1l5O0R0OWkQ" target="_2sY0ItXWEem1l5O0R0OWkQ" source="_2sY0A9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz69XWEem1l5O0R0OWkQ" target="_2sY0JdXWEem1l5O0R0OWkQ" source="_2sY0EtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz7NXWEem1l5O0R0OWkQ" target="_2sY0HNXWEem1l5O0R0OWkQ" source="_2sY0AdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz7dXWEem1l5O0R0OWkQ" target="_2sY0HNXWEem1l5O0R0OWkQ" source="_2sY0ENXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz7tXWEem1l5O0R0OWkQ" target="_2sY0NtXWEem1l5O0R0OWkQ" source="_2sY0HtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz79XWEem1l5O0R0OWkQ" target="_2sY0OdXWEem1l5O0R0OWkQ" source="_2sY0LNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz8NXWEem1l5O0R0OWkQ" target="_2sY0MNXWEem1l5O0R0OWkQ" source="_2sY0HNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2sYz8dXWEem1l5O0R0OWkQ" target="_2sY0MNXWEem1l5O0R0OWkQ" source="_2sY0K9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz8tXWEem1l5O0R0OWkQ" target="_2sY0Q9XWEem1l5O0R0OWkQ" source="_2sY0SdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz89XWEem1l5O0R0OWkQ" target="_2sY0TtXWEem1l5O0R0OWkQ" source="_2sY0VNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sYz9NXWEem1l5O0R0OWkQ" name="Value(&quot;[&quot;)" outgoing="_2sYz6dXWEem1l5O0R0OWkQ">
                    <result xmi:id="_2sYz9dXWEem1l5O0R0OWkQ" name="Value(&quot;[&quot;).result" outgoing="_2sYz59XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz9tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz99XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2sYz-NXWEem1l5O0R0OWkQ" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sYz-dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2sYz6NXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2sYz-tXWEem1l5O0R0OWkQ" target="_2sYz_tXWEem1l5O0R0OWkQ" source="_2sYz-9XWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2sYz-9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYzsdXWEem1l5O0R0OWkQ" outgoing="_2sYz-tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz_NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sYz_dXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2sYz_tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sYz-tXWEem1l5O0R0OWkQ" outgoing="_2sYz5tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sYz_9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0ANXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0AdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYz6NXWEem1l5O0R0OWkQ _2sYz6dXWEem1l5O0R0OWkQ" outgoing="_2sYz7NXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0AtXWEem1l5O0R0OWkQ" target="_2sY0A9XWEem1l5O0R0OWkQ" source="_2sY0DdXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_2sY0A9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sY0AtXWEem1l5O0R0OWkQ" outgoing="_2sYz6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0BNXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0BdXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0BtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                      <argument xmi:id="_2sY0B9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYz5tXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0CNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0CdXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_2sY0CtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYz59XWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0C9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0DNXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2sY0DdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sY0AtXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0DtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0D9XWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0ENXWEem1l5O0R0OWkQ" name="Node(Call(ToString))" outgoing="_2sYz7dXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0EdXWEem1l5O0R0OWkQ" target="_2sY0EtXWEem1l5O0R0OWkQ" source="_2sY0GdXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_2sY0EtXWEem1l5O0R0OWkQ" name="Output(Call(ToString).result(result))" incoming="_2sY0EdXWEem1l5O0R0OWkQ" outgoing="_2sYz69XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0E9XWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0FNXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0FdXWEem1l5O0R0OWkQ" name="Call(ToString)">
                      <argument xmi:id="_2sY0FtXWEem1l5O0R0OWkQ" name="Call(ToString).argument(x)" incoming="_2sYzqtXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0F9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0GNXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2sY0GdXWEem1l5O0R0OWkQ" name="Call(ToString).result(result)" outgoing="_2sY0EdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0GtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0G9XWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0HNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYz7NXWEem1l5O0R0OWkQ _2sYz7dXWEem1l5O0R0OWkQ" outgoing="_2sYz8NXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0HdXWEem1l5O0R0OWkQ" target="_2sY0HtXWEem1l5O0R0OWkQ" source="_2sY0KNXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_2sY0HtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sY0HdXWEem1l5O0R0OWkQ" outgoing="_2sYz7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0H9XWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0INXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0IdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                      <argument xmi:id="_2sY0ItXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYz6tXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0I9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0JNXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_2sY0JdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYz69XWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0JtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0J9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2sY0KNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sY0HdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0KdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0KtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sY0K9XWEem1l5O0R0OWkQ" name="Value(&quot;]&quot;)" outgoing="_2sYz8dXWEem1l5O0R0OWkQ">
                    <result xmi:id="_2sY0LNXWEem1l5O0R0OWkQ" name="Value(&quot;]&quot;).result" outgoing="_2sYz79XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0LdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0LtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2sY0L9XWEem1l5O0R0OWkQ" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0MNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sYz8NXWEem1l5O0R0OWkQ _2sYz8dXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0MdXWEem1l5O0R0OWkQ" target="_2sY0MtXWEem1l5O0R0OWkQ" source="_2sY0PNXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_2sY0MtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sY0MdXWEem1l5O0R0OWkQ" outgoing="_2sYz19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0M9XWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0NNXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0NdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                      <argument xmi:id="_2sY0NtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sYz7tXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0N9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0ONXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_2sY0OdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sYz79XWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0OtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0O9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2sY0PNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sY0MdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0PdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0PtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0P9XWEem1l5O0R0OWkQ" name="Call(At)">
                    <argument xmi:id="_2sY0QNXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2sYzstXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0QdXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0QtXWEem1l5O0R0OWkQ" value="*"/>
                    </argument>
                    <argument xmi:id="_2sY0Q9XWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2sYz8tXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0RNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0RdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2sY0RtXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2sYz2NXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0R9XWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0SNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2sY0SdXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2sYzq9XWEem1l5O0R0OWkQ" outgoing="_2sYz8tXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0StXWEem1l5O0R0OWkQ" name="Call(At)">
                    <argument xmi:id="_2sY0S9XWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2sYzs9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0TNXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0TdXWEem1l5O0R0OWkQ" value="*"/>
                    </argument>
                    <argument xmi:id="_2sY0TtXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2sYz89XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0T9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0UNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2sY0UdXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2sYz2dXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0UtXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0U9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2sY0VNXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2sYzrNXWEem1l5O0R0OWkQ" outgoing="_2sYz89XWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0VdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0VtXWEem1l5O0R0OWkQ" target="_2sY0WtXWEem1l5O0R0OWkQ" source="_2sY0V9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sY0V9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sYztNXWEem1l5O0R0OWkQ" outgoing="_2sY0VtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0WNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0WdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sY0WtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sY0VtXWEem1l5O0R0OWkQ" outgoing="_2sYzydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0W9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0XNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0XdXWEem1l5O0R0OWkQ" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0XtXWEem1l5O0R0OWkQ" target="_2sY0YtXWEem1l5O0R0OWkQ" source="_2sY0X9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sY0X9XWEem1l5O0R0OWkQ" name="Passthru(Fork(list)).input" incoming="_2sYztdXWEem1l5O0R0OWkQ" outgoing="_2sY0XtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0YNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0YdXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sY0YtXWEem1l5O0R0OWkQ" name="Passthru(Fork(list)).output" incoming="_2sY0XtXWEem1l5O0R0OWkQ" outgoing="_2sYzytXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0Y9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0ZNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0ZdXWEem1l5O0R0OWkQ" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0ZtXWEem1l5O0R0OWkQ" target="_2sY0atXWEem1l5O0R0OWkQ" source="_2sY0Z9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sY0Z9XWEem1l5O0R0OWkQ" name="Passthru(Fork(expected)).input" incoming="_2sYzttXWEem1l5O0R0OWkQ" outgoing="_2sY0ZtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0aNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0adXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sY0atXWEem1l5O0R0OWkQ" name="Passthru(Fork(expected)).output" incoming="_2sY0ZtXWEem1l5O0R0OWkQ" outgoing="_2sYzy9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0a9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0bNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0bdXWEem1l5O0R0OWkQ" name="Call(+)">
                <argument xmi:id="_2sY0btXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2sYzr9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0b9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0cNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sY0cdXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2sYzzNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0ctXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0c9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sY0dNXWEem1l5O0R0OWkQ" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0ddXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0dtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sY0d9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_2sY0eNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sYzzNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0edXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0etXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2sY0e9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0fNXWEem1l5O0R0OWkQ" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0fdXWEem1l5O0R0OWkQ" target="_2sY0gdXWEem1l5O0R0OWkQ" source="_2sY0ftXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sY0ftXWEem1l5O0R0OWkQ" name="Passthru(upper).input" incoming="_2sYzsNXWEem1l5O0R0OWkQ" outgoing="_2sY0fdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0f9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0gNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sY0gdXWEem1l5O0R0OWkQ" name="Passthru(upper).output" incoming="_2sY0fdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0gtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0g9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY0hNXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_2sY0hdXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2sYzrdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0htXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0h9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_2sY0iNXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2sYzrtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0idXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0itXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sY0i9XWEem1l5O0R0OWkQ" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0jNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0jdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sY0jtXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_2sY0j9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sYzrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0kNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0kdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sY0ktXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_2sY0k9XWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariable(label)" outgoing="_2sYzodXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0lNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0ldXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_2sY0ltXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariable(list)" outgoing="_2sYzotXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0l9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0mNXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_2sY0mdXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariable(expected)" outgoing="_2sYzo9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0mtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0m9XWEem1l5O0R0OWkQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_2sY0nNXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariable(i)" outgoing="_2sYzpNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0ndXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0ntXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_2sY0n9XWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariable(counter)" outgoing="_2sYzpdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0oNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0odXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_2sY0otXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariable(upper)" outgoing="_2sYzptXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0o9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0pNXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_2sY0pdXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariableInput(label)" incoming="_2sYzRdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0ptXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0p9XWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2sY0qNXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariableInput(list)" incoming="_2sYzRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0qdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0qtXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2sY0q9XWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariableInput(expected)" incoming="_2sYzR9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0rNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0rdXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2sY0rtXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariableInput(i)" incoming="_2sYzntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0r9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0sNXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2sY0sdXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariableInput(counter)" incoming="_2sYznNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0stXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0s9XWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_2sY0tNXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.loopVariableInput(upper)" incoming="_2sYzndXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0tdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0ttXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <result xmi:id="_2sY0t9XWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0uNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0udXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2sY0utXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0u9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0vNXWEem1l5O0R0OWkQ" value="*"/>
            </result>
            <result xmi:id="_2sY0vdXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0vtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0v9XWEem1l5O0R0OWkQ" value="*"/>
            </result>
            <result xmi:id="_2sY0wNXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0wdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0wtXWEem1l5O0R0OWkQ" value="*"/>
            </result>
            <result xmi:id="_2sY0w9XWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0xNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0xdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2sY0xtXWEem1l5O0R0OWkQ" name="ForStatement@3774b3a7.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY0x9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY0yNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY0ydXWEem1l5O0R0OWkQ" name="LoopVariables(ForStatement@3774b3a7)" outgoing="_2sYzn9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0ytXWEem1l5O0R0OWkQ" target="_2sZXbdXWEem1l5O0R0OWkQ" source="_2sY02tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0y9XWEem1l5O0R0OWkQ" target="_2sZXcNXWEem1l5O0R0OWkQ" source="_2sY05tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sY0zNXWEem1l5O0R0OWkQ" target="_2sZXbNXWEem1l5O0R0OWkQ" source="_2sY019XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sY0zdXWEem1l5O0R0OWkQ" target="_2sZXZ9XWEem1l5O0R0OWkQ" source="_2sY019XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0ztXWEem1l5O0R0OWkQ" target="_2sZXeNXWEem1l5O0R0OWkQ" source="_2sZXadXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY0z9XWEem1l5O0R0OWkQ" target="_2sZXe9XWEem1l5O0R0OWkQ" source="_2sZXdtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY00NXWEem1l5O0R0OWkQ" target="_2sZXh9XWEem1l5O0R0OWkQ" source="_2sZXftXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY00dXWEem1l5O0R0OWkQ" target="_2sZXitXWEem1l5O0R0OWkQ" source="_2sZXgtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sY00tXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_2sY009XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sYzm9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY01NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY01dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sY01tXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY019XWEem1l5O0R0OWkQ" name="Tuple@42e5c58" outgoing="_2sY0zNXWEem1l5O0R0OWkQ _2sY0zdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY02NXWEem1l5O0R0OWkQ" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY02dXWEem1l5O0R0OWkQ" target="_2sY02tXWEem1l5O0R0OWkQ" source="_2sY04dXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sY02tXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_2sY02dXWEem1l5O0R0OWkQ" outgoing="_2sY0ytXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY029XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY03NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sY03dXWEem1l5O0R0OWkQ" name="Call(Size)">
                  <argument xmi:id="_2sY03tXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_2sYzSNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY039XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY04NXWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2sY04dXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_2sY02dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY04tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY049XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sY05NXWEem1l5O0R0OWkQ" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sY05dXWEem1l5O0R0OWkQ" target="_2sY05tXWEem1l5O0R0OWkQ" source="_2sZXZNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sY05tXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_2sY05dXWEem1l5O0R0OWkQ" outgoing="_2sY0y9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sY059XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sY06NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZXYNXWEem1l5O0R0OWkQ" name="Call(Size)">
                  <argument xmi:id="_2sZXYdXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_2sYzSdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXYtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXY9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2sZXZNXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_2sY05dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXZdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXZtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZXZ9XWEem1l5O0R0OWkQ" name="Node(Call(Min))" incoming="_2sY0zdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXaNXWEem1l5O0R0OWkQ" target="_2sZXadXWEem1l5O0R0OWkQ" source="_2sZXc9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2sZXadXWEem1l5O0R0OWkQ" name="Output(Call(Min).result(result))" incoming="_2sZXaNXWEem1l5O0R0OWkQ" outgoing="_2sY0ztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXatXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXa9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZXbNXWEem1l5O0R0OWkQ" name="Call(Min)" incoming="_2sY0zNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sZXbdXWEem1l5O0R0OWkQ" name="Call(Min).argument(x)" incoming="_2sY0ytXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXbtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXb9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2sZXcNXWEem1l5O0R0OWkQ" name="Call(Min).argument(y)" incoming="_2sY0y9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXcdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXctXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2sZXc9XWEem1l5O0R0OWkQ" name="Call(Min).result(result)" outgoing="_2sZXaNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXdNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXddXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sZXdtXWEem1l5O0R0OWkQ" name="Fork(Value(1).result)" incoming="_2sYzm9XWEem1l5O0R0OWkQ" outgoing="_2sYzntXWEem1l5O0R0OWkQ _2sY0z9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZXd9XWEem1l5O0R0OWkQ" name="Call(-)">
              <argument xmi:id="_2sZXeNXWEem1l5O0R0OWkQ" name="Call(-).argument(x)" incoming="_2sY0ztXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXedXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXetXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_2sZXe9XWEem1l5O0R0OWkQ" name="Call(-).argument(y)" incoming="_2sY0z9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXfNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXfdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sZXftXWEem1l5O0R0OWkQ" name="Call(-).result(result)" outgoing="_2sY00NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXf9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXgNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZXgdXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_2sZXgtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sY00dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXg9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXhNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sZXhdXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZXhtXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_2sZXh9XWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2sY00NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXiNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXidXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_2sZXitXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2sY00dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXi9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXjNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sZXjdXWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_2sYzndXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXjtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXj9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZXkNXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_2sZXkdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sYznNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXktXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXk9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2sZXlNXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYzStXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2sYzP9XWEem1l5O0R0OWkQ" parameter="_2sYzNtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYzS9XWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sYzP9XWEem1l5O0R0OWkQ" outgoing="_2sYzQtXWEem1l5O0R0OWkQ _2sYzRdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYzTNXWEem1l5O0R0OWkQ" name="Input(list)" outgoing="_2sYzQNXWEem1l5O0R0OWkQ" parameter="_2sYzOdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYzTdXWEem1l5O0R0OWkQ" name="Fork(list)" incoming="_2sYzQNXWEem1l5O0R0OWkQ" outgoing="_2sYzQ9XWEem1l5O0R0OWkQ _2sYzSNXWEem1l5O0R0OWkQ _2sYzRtXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sYzTtXWEem1l5O0R0OWkQ" name="Input(expected)" outgoing="_2sYzQdXWEem1l5O0R0OWkQ" parameter="_2sYzPNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2sYzT9XWEem1l5O0R0OWkQ" name="Fork(expected)" incoming="_2sYzQdXWEem1l5O0R0OWkQ" outgoing="_2sYzRNXWEem1l5O0R0OWkQ _2sYzSdXWEem1l5O0R0OWkQ _2sYzR9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2sZXldXWEem1l5O0R0OWkQ" name="AssertTrue" visibility="public" node="_2sZXqdXWEem1l5O0R0OWkQ _2sZXqtXWEem1l5O0R0OWkQ _2sZXq9XWEem1l5O0R0OWkQ _2sZXrNXWEem1l5O0R0OWkQ _2sZXrdXWEem1l5O0R0OWkQ" group="_2sZXrdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2sZXltXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sZXl9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sZXmNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sZXmdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sZXmtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2sZXm9XWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXnNXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXndXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2sZXntXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXn9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXoNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXodXWEem1l5O0R0OWkQ" target="_2sZXqtXWEem1l5O0R0OWkQ" source="_2sZXqdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXotXWEem1l5O0R0OWkQ" target="_2sZXrNXWEem1l5O0R0OWkQ" source="_2sZXq9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXo9XWEem1l5O0R0OWkQ" target="_2sZXy9XWEem1l5O0R0OWkQ" source="_2sZXrNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXpNXWEem1l5O0R0OWkQ" target="_2sZX89XWEem1l5O0R0OWkQ" source="_2sZXqtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXpdXWEem1l5O0R0OWkQ" target="_2sZYCtXWEem1l5O0R0OWkQ" source="_2sZXrNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXptXWEem1l5O0R0OWkQ" target="_2sZYEtXWEem1l5O0R0OWkQ" source="_2sZXqtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXp9XWEem1l5O0R0OWkQ" target="_2sZYH9XWEem1l5O0R0OWkQ" source="_2sZXrNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXqNXWEem1l5O0R0OWkQ" target="_2sZYJ9XWEem1l5O0R0OWkQ" source="_2sZXqtXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2sZXrdXWEem1l5O0R0OWkQ" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXrtXWEem1l5O0R0OWkQ" target="_2sZYNdXWEem1l5O0R0OWkQ" source="_2sZYL9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXr9XWEem1l5O0R0OWkQ" target="_2sZYNtXWEem1l5O0R0OWkQ" source="_2sZYMtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2sZXsNXWEem1l5O0R0OWkQ" name="IfStatement@26fd51f0">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZXsdXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXstXWEem1l5O0R0OWkQ" target="_2sZXwtXWEem1l5O0R0OWkQ" source="_2sZXy9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXs9XWEem1l5O0R0OWkQ" target="_2sZXzdXWEem1l5O0R0OWkQ" source="_2sZXy9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXtNXWEem1l5O0R0OWkQ" target="_2sZX09XWEem1l5O0R0OWkQ" source="_2sZX0NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXtdXWEem1l5O0R0OWkQ" target="_2sZX1NXWEem1l5O0R0OWkQ" source="_2sZXxdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXttXWEem1l5O0R0OWkQ" target="_2sZX1dXWEem1l5O0R0OWkQ" source="_2sZX09XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXt9XWEem1l5O0R0OWkQ" target="_2sZX1dXWEem1l5O0R0OWkQ" source="_2sZX09XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXuNXWEem1l5O0R0OWkQ" target="_2sZX1NXWEem1l5O0R0OWkQ" source="_2sZX1dXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sZXudXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXutXWEem1l5O0R0OWkQ" target="_2sZXyNXWEem1l5O0R0OWkQ" source="_2sZXvdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZXu9XWEem1l5O0R0OWkQ" target="_2sZX19XWEem1l5O0R0OWkQ" source="_2sZX1NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZXvNXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_2sZXvdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2sZXutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXvtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXv9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2sZXwNXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2sZXwdXWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_2sZXwtXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2sZXstXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXw9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXxNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2sZXxdXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2sZXtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXxtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXx9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2sZXyNXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2sZXutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXydXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXytXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sZXy9XWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_2sZXo9XWEem1l5O0R0OWkQ" outgoing="_2sZXstXWEem1l5O0R0OWkQ _2sZXs9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZXzNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2sZXzdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sZXs9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZXztXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZXz9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2sZX0NXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sZXtNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX0dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX0tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sZX09XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2sZXtNXWEem1l5O0R0OWkQ" outgoing="_2sZXttXWEem1l5O0R0OWkQ _2sZXt9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2sZX1NXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2sZXtdXWEem1l5O0R0OWkQ _2sZXuNXWEem1l5O0R0OWkQ" outgoing="_2sZXu9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2sZX1dXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2sZXttXWEem1l5O0R0OWkQ _2sZXt9XWEem1l5O0R0OWkQ" outgoing="_2sZXuNXWEem1l5O0R0OWkQ" decisionInputFlow="_2sZXt9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZX1tXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_2sZX19XWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2sZXu9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX2NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX2dXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sZX2tXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX29XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX3NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZX3dXWEem1l5O0R0OWkQ" name="ExpressionStatement@53d43f96">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZX3tXWEem1l5O0R0OWkQ" target="_2sZX4dXWEem1l5O0R0OWkQ" source="_2sZX-9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sZX39XWEem1l5O0R0OWkQ" target="_2sZX4NXWEem1l5O0R0OWkQ" source="_2sZX59XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZX4NXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_2sZX39XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sZX4dXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2sZX3tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX4tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX49XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sZX5NXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX5dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX5tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZX59XWEem1l5O0R0OWkQ" name="Tuple@71d1990b" outgoing="_2sZX39XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZX6NXWEem1l5O0R0OWkQ" target="_2sZX_9XWEem1l5O0R0OWkQ" source="_2sZX7dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZX6dXWEem1l5O0R0OWkQ" target="_2sZYAtXWEem1l5O0R0OWkQ" source="_2sZX9tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sZX6tXWEem1l5O0R0OWkQ" target="_2sZX-dXWEem1l5O0R0OWkQ" source="_2sZX7NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sZX69XWEem1l5O0R0OWkQ" target="_2sZX-dXWEem1l5O0R0OWkQ" source="_2sZX8dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZX7NXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_2sZX6tXWEem1l5O0R0OWkQ">
                <result xmi:id="_2sZX7dXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_2sZX6NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX7tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX79XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2sZX8NXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZX8dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2sZX69XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZX8tXWEem1l5O0R0OWkQ" target="_2sZX9tXWEem1l5O0R0OWkQ" source="_2sZX89XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2sZX89XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sZXpNXWEem1l5O0R0OWkQ" outgoing="_2sZX8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX9NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX9dXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2sZX9tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sZX8tXWEem1l5O0R0OWkQ" outgoing="_2sZX6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX99XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX-NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZX-dXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2sZX6tXWEem1l5O0R0OWkQ _2sZX69XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZX-tXWEem1l5O0R0OWkQ" target="_2sZX-9XWEem1l5O0R0OWkQ" source="_2sZYBdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sZX-9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2sZX-tXWEem1l5O0R0OWkQ" outgoing="_2sZX3tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZX_NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZX_dXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZX_tXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2sZX_9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2sZX6NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYANXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYAdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2sZYAtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2sZX6dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYA9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYBNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2sZYBdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2sZX-tXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYBtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYB9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYCNXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYCdXWEem1l5O0R0OWkQ" target="_2sZYDdXWEem1l5O0R0OWkQ" source="_2sZYCtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sZYCtXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_2sZXpdXWEem1l5O0R0OWkQ" outgoing="_2sZYCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYC9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYDNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sZYDdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_2sZYCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYDtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYD9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYENXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYEdXWEem1l5O0R0OWkQ" target="_2sZYFdXWEem1l5O0R0OWkQ" source="_2sZYEtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sZYEtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sZXptXWEem1l5O0R0OWkQ" outgoing="_2sZYEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYE9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYFNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sZYFdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sZYEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYFtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYF9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZYGNXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_2sZYGdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYGtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYG9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2sZYHNXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYHdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYHtXWEem1l5O0R0OWkQ" target="_2sZYItXWEem1l5O0R0OWkQ" source="_2sZYH9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sZYH9XWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_2sZXp9XWEem1l5O0R0OWkQ" outgoing="_2sZYHtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYINXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYIdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sZYItXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_2sZYHtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYI9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYJNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYJdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYJtXWEem1l5O0R0OWkQ" target="_2sZYKtXWEem1l5O0R0OWkQ" source="_2sZYJ9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sZYJ9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2sZXqNXWEem1l5O0R0OWkQ" outgoing="_2sZYJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYKNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYKdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2sZYKtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2sZYJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYK9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYLNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2sZYLdXWEem1l5O0R0OWkQ" body="_2sZX3dXWEem1l5O0R0OWkQ _2sZYCNXWEem1l5O0R0OWkQ _2sZYENXWEem1l5O0R0OWkQ" bodyOutput="_2sZYDdXWEem1l5O0R0OWkQ _2sZYFdXWEem1l5O0R0OWkQ" decider="_2sZX2tXWEem1l5O0R0OWkQ" successorClause="_2sZYLtXWEem1l5O0R0OWkQ" test="_2sZXsdXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_2sZYLtXWEem1l5O0R0OWkQ" body="_2sZYHdXWEem1l5O0R0OWkQ _2sZYJdXWEem1l5O0R0OWkQ" bodyOutput="_2sZYItXWEem1l5O0R0OWkQ _2sZYKtXWEem1l5O0R0OWkQ" decider="_2sZYGdXWEem1l5O0R0OWkQ" predecessorClause="_2sZYLdXWEem1l5O0R0OWkQ" test="_2sZYGNXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_2sZYL9XWEem1l5O0R0OWkQ" name="IfStatement@26fd51f0.result(condition)" outgoing="_2sZXrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYMNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYMdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2sZYMtXWEem1l5O0R0OWkQ" name="IfStatement@26fd51f0.result(label)" outgoing="_2sZXr9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYM9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYNNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2sZYNdXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2sZXrtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2sZYNtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sZXr9XWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sZXqdXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2sZXodXWEem1l5O0R0OWkQ" parameter="_2sZXm9XWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2sZXqtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2sZXodXWEem1l5O0R0OWkQ" outgoing="_2sZXpNXWEem1l5O0R0OWkQ _2sZXptXWEem1l5O0R0OWkQ _2sZXqNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sZXq9XWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_2sZXotXWEem1l5O0R0OWkQ" parameter="_2sZXntXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2sZXrNXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2sZXotXWEem1l5O0R0OWkQ" outgoing="_2sZXo9XWEem1l5O0R0OWkQ _2sZXpdXWEem1l5O0R0OWkQ _2sZXp9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2sZYN9XWEem1l5O0R0OWkQ" name="Write" visibility="public" node="_2sZYQtXWEem1l5O0R0OWkQ _2sZYQ9XWEem1l5O0R0OWkQ _2sZYRNXWEem1l5O0R0OWkQ" group="_2sZYRNXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2sZYONXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2sZYOdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2sZYOtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2sZYO9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2sZYPNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2sZYPdXWEem1l5O0R0OWkQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYPtXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYP9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYQNXWEem1l5O0R0OWkQ" target="_2sZYQ9XWEem1l5O0R0OWkQ" source="_2sZYQtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYQdXWEem1l5O0R0OWkQ" target="_2sZYTdXWEem1l5O0R0OWkQ" source="_2sZYQ9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2sZYRNXWEem1l5O0R0OWkQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYRdXWEem1l5O0R0OWkQ" name="ExpressionStatement@83e196f">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYRtXWEem1l5O0R0OWkQ" target="_2sZYiNXWEem1l5O0R0OWkQ" source="_2sZYldXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYR9XWEem1l5O0R0OWkQ" target="_2sZYSNXWEem1l5O0R0OWkQ" source="_2sZYidXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_2sZYSNXWEem1l5O0R0OWkQ" name="Collect(Call(write))" incoming="_2sZYR9XWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2sZYiNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYSdXWEem1l5O0R0OWkQ" target="_2sZYUdXWEem1l5O0R0OWkQ" source="_2sZYh9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYStXWEem1l5O0R0OWkQ" target="_2sZYZ9XWEem1l5O0R0OWkQ" source="_2sZYTdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYS9XWEem1l5O0R0OWkQ" target="_2sZYUNXWEem1l5O0R0OWkQ" source="_2sZYWtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYTNXWEem1l5O0R0OWkQ" target="_2sZYV9XWEem1l5O0R0OWkQ" source="_2sZYiNXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2sZYTdXWEem1l5O0R0OWkQ" name="Collect(Call(write)).input(Fork(value))" incoming="_2sZYQdXWEem1l5O0R0OWkQ" outgoing="_2sZYStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYTtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYT9XWEem1l5O0R0OWkQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2sZYUNXWEem1l5O0R0OWkQ" name="Call(write)" incoming="_2sZYS9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sZYUdXWEem1l5O0R0OWkQ" name="Call(write).argument(value)" incoming="_2sZYSdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYUtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYU9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sZYVNXWEem1l5O0R0OWkQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYVdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYVtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_2sZYV9XWEem1l5O0R0OWkQ" name="Call(write).target" incoming="_2sZYTNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYWNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYWdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYWtXWEem1l5O0R0OWkQ" name="Tuple@9f1c4c" outgoing="_2sZYS9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYW9XWEem1l5O0R0OWkQ" target="_2sZYb9XWEem1l5O0R0OWkQ" source="_2sZYZ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYXNXWEem1l5O0R0OWkQ" target="_2sZYbtXWEem1l5O0R0OWkQ" source="_2sZYZtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYXdXWEem1l5O0R0OWkQ" target="_2sZYetXWEem1l5O0R0OWkQ" source="_2sZYZ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYXtXWEem1l5O0R0OWkQ" target="_2sZYhtXWEem1l5O0R0OWkQ" source="_2sZYhdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYX9XWEem1l5O0R0OWkQ" target="_2sZYhtXWEem1l5O0R0OWkQ" source="_2sZYctXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYYNXWEem1l5O0R0OWkQ" target="_2sZYddXWEem1l5O0R0OWkQ" source="_2sZYhtXWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sZYYdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYYtXWEem1l5O0R0OWkQ" target="_2sZYe9XWEem1l5O0R0OWkQ" source="_2sZYhtXWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2sZYY9XWEem1l5O0R0OWkQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYZNXWEem1l5O0R0OWkQ" target="_2sZYh9XWEem1l5O0R0OWkQ" source="_2sZYd9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYZdXWEem1l5O0R0OWkQ" target="_2sZYh9XWEem1l5O0R0OWkQ" source="_2sZYfdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYZtXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@69e9f68a)" outgoing="_2sZYXNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ForkNode" xmi:id="_2sZYZ9XWEem1l5O0R0OWkQ" name="Fork('')@43532072" incoming="_2sZYStXWEem1l5O0R0OWkQ" outgoing="_2sZYW9XWEem1l5O0R0OWkQ _2sZYXdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYaNXWEem1l5O0R0OWkQ" name="RightHandSide@7865b645"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZYadXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2sZYatXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYa9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYbNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2sZYbdXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZYbtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2sZYXNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2sZYb9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2sZYW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYcNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYcdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2sZYctXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2sZYX9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYc9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYdNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYddXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@54f306b2.operand2" incoming="_2sZYYNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYdtXWEem1l5O0R0OWkQ" target="_2sZYd9XWEem1l5O0R0OWkQ" source="_2sZYetXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sZYd9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@54f306b2.operand2.result" incoming="_2sZYdtXWEem1l5O0R0OWkQ" outgoing="_2sZYZNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYeNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYedXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_2sZYetXWEem1l5O0R0OWkQ" name="Merge(Fork('')@43532072)" incoming="_2sZYXdXWEem1l5O0R0OWkQ" outgoing="_2sZYdtXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYe9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@54f306b2.operand3" incoming="_2sZYYtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYfNXWEem1l5O0R0OWkQ" target="_2sZYfdXWEem1l5O0R0OWkQ" source="_2sZYgdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2sZYfdXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@54f306b2.operand3.result" incoming="_2sZYfNXWEem1l5O0R0OWkQ" outgoing="_2sZYZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYftXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYf9XWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZYgNXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_2sZYgdXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_2sZYfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYgtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYg9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2sZYhNXWEem1l5O0R0OWkQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2sZYhdXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@54f306b2)" outgoing="_2sZYXtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_2sZYhtXWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@54f306b2)" incoming="_2sZYXtXWEem1l5O0R0OWkQ _2sZYX9XWEem1l5O0R0OWkQ" outgoing="_2sZYYNXWEem1l5O0R0OWkQ _2sZYYtXWEem1l5O0R0OWkQ" decisionInputFlow="_2sZYX9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_2sZYh9XWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@54f306b2.result)" incoming="_2sZYZNXWEem1l5O0R0OWkQ _2sZYZdXWEem1l5O0R0OWkQ" outgoing="_2sZYSdXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_2sZYiNXWEem1l5O0R0OWkQ" name="Collect(Call(write)).inputElement" incoming="_2sZYRtXWEem1l5O0R0OWkQ" outgoing="_2sZYTNXWEem1l5O0R0OWkQ" regionAsInput="_2sZYSNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYidXWEem1l5O0R0OWkQ" name="Feature(Call(At).result())" outgoing="_2sZYR9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYitXWEem1l5O0R0OWkQ" target="_2sZYj9XWEem1l5O0R0OWkQ" source="_2sZYmtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYi9XWEem1l5O0R0OWkQ" target="_2sZYotXWEem1l5O0R0OWkQ" source="_2sZYntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2sZYjNXWEem1l5O0R0OWkQ" target="_2sZYjtXWEem1l5O0R0OWkQ" source="_2sZYmNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2sZYjdXWEem1l5O0R0OWkQ" target="_2sZYktXWEem1l5O0R0OWkQ" source="_2sZYotXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2sZYjtXWEem1l5O0R0OWkQ" name="Call(At)" incoming="_2sZYjNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2sZYj9XWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2sZYitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYkNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYkdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <argument xmi:id="_2sZYktXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2sZYjdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYk9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYlNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2sZYldXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2sZYRtXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYltXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYl9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2sZYmNXWEem1l5O0R0OWkQ" name="Tuple@5d01f6f7" outgoing="_2sZYjNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_2sZYmdXWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_2sZYmtXWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_2sZYitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYm9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYnNXWEem1l5O0R0OWkQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2sZYndXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_2sZYntXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2sZYi9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2sZYn9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2sZYoNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2sZYodXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2sZYotXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2sZYi9XWEem1l5O0R0OWkQ" outgoing="_2sZYjdXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2sZYQtXWEem1l5O0R0OWkQ" name="Input(value)" outgoing="_2sZYQNXWEem1l5O0R0OWkQ" parameter="_2sZYPdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2sZYQ9XWEem1l5O0R0OWkQ" name="Fork(value)" incoming="_2sZYQNXWEem1l5O0R0OWkQ" outgoing="_2sZYQdXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <profileApplication xmi:id="_2sZYo9XWEem1l5O0R0OWkQ">
      <eAnnotations xmi:id="_2sZYpNXWEem1l5O0R0OWkQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_2sZYpdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYNH9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2sZYptXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYwqNXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2sZYp9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYLWtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2sZYqNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYLQNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2sZYqdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYNIdXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2sZYqtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYMEtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2sZ-cNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYLPNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2sZ-cdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYwpNXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2sZ-ctXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2sYMGdXWEem1l5O0R0OWkQ"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_S9pq4BwQEeiwC7KEKP2RMQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_S9pq4RwQEeiwC7KEKP2RMQ" name="Expressions_Sequence_Operation" visibility="public">
      <packageImport xmi:id="_S9pq4hwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9pq4xwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9pq5BwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9pq5RwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9pq5hwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_S9pq5xwQEeiwC7KEKP2RMQ" general="_S9qVGRwQEeiwC7KEKP2RMQ"/>
      <ownedAttribute xmi:id="_S9pq6BwQEeiwC7KEKP2RMQ" name="Expressions_Sequence_Operation$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pq6RwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pq6hwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9pq6xwQEeiwC7KEKP2RMQ" name="Expressions_Sequence_Operation$method$1" visibility="private" specification="_S9qUOxwQEeiwC7KEKP2RMQ" node="_S9pq8BwQEeiwC7KEKP2RMQ _S9pq8RwQEeiwC7KEKP2RMQ" group="_S9pq8RwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9pq7BwQEeiwC7KEKP2RMQ" name="" type="_S9pq4RwQEeiwC7KEKP2RMQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pq7RwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pq7hwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pq7xwQEeiwC7KEKP2RMQ" target="_S9pq8BwQEeiwC7KEKP2RMQ" source="_S9prGhwQEeiwC7KEKP2RMQ"/>
        <structuredNode xmi:id="_S9pq8RwQEeiwC7KEKP2RMQ" name="Body(Expressions_Sequence_Operation$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pq8hwQEeiwC7KEKP2RMQ" target="_S9prGhwQEeiwC7KEKP2RMQ" source="_S9prFxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9pq8xwQEeiwC7KEKP2RMQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9pq9BwQEeiwC7KEKP2RMQ" name="ExpressionStatement@530759">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pq9RwQEeiwC7KEKP2RMQ" target="_S9prDRwQEeiwC7KEKP2RMQ" source="_S9pq-xwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9pq9hwQEeiwC7KEKP2RMQ" target="_S9prDBwQEeiwC7KEKP2RMQ" source="_S9pq-RwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pq9xwQEeiwC7KEKP2RMQ" target="_S9prBhwQEeiwC7KEKP2RMQ" source="_S9prABwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9pq-BwQEeiwC7KEKP2RMQ" target="_S9prAxwQEeiwC7KEKP2RMQ" source="_S9pq-RwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9pq-RwQEeiwC7KEKP2RMQ" name="Tuple@baea9e3" outgoing="_S9pq9hwQEeiwC7KEKP2RMQ _S9pq-BwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9pq-hwQEeiwC7KEKP2RMQ" name="Value(null)">
                  <result xmi:id="_S9pq-xwQEeiwC7KEKP2RMQ" name="Value(null).result" outgoing="_S9pq9RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pq_BwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pq_RwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_S9pq_hwQEeiwC7KEKP2RMQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_S9pq_xwQEeiwC7KEKP2RMQ" name="ReadSelf">
                <result xmi:id="_S9prABwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9pq9xwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prARwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prAhwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prAxwQEeiwC7KEKP2RMQ" name="Node(Call(run))" incoming="_S9pq-BwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prBBwQEeiwC7KEKP2RMQ" target="_S9prCRwQEeiwC7KEKP2RMQ" source="_S9prEBwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prBRwQEeiwC7KEKP2RMQ" target="_S9prExwQEeiwC7KEKP2RMQ" source="_S9prBhwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9prBhwQEeiwC7KEKP2RMQ" name="Input(Call(run).target)" incoming="_S9pq9xwQEeiwC7KEKP2RMQ" outgoing="_S9prBRwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prBxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prCBwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9prCRwQEeiwC7KEKP2RMQ" name="Output(Call(run).result())" incoming="_S9prBBwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prChwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prCxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_S9prDBwQEeiwC7KEKP2RMQ" name="Call(run)" incoming="_S9pq9hwQEeiwC7KEKP2RMQ" operation="_S9qUPxwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9prDRwQEeiwC7KEKP2RMQ" name="Call(run).argument(tester)" incoming="_S9pq9RwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prDhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prDxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9prEBwQEeiwC7KEKP2RMQ" name="Call(run).result()" outgoing="_S9prBBwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prERwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prEhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <target xmi:id="_S9prExwQEeiwC7KEKP2RMQ" name="Call(run).target" incoming="_S9prBRwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prFBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prFRwQEeiwC7KEKP2RMQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S9prFhwQEeiwC7KEKP2RMQ" name="ReadSelf">
            <result xmi:id="_S9prFxwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9pq8hwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prGBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prGRwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9prGhwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9pq8hwQEeiwC7KEKP2RMQ" outgoing="_S9pq7xwQEeiwC7KEKP2RMQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9pq8BwQEeiwC7KEKP2RMQ" name="Return" incoming="_S9pq7xwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" parameter="_S9pq7BwQEeiwC7KEKP2RMQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9prGxwQEeiwC7KEKP2RMQ" name="run$method$1" visibility="private" specification="_S9qUPxwQEeiwC7KEKP2RMQ" node="_S9prJRwQEeiwC7KEKP2RMQ _S9prJhwQEeiwC7KEKP2RMQ _S9prJxwQEeiwC7KEKP2RMQ _S9prKBwQEeiwC7KEKP2RMQ" group="_S9prKBwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9prHBwQEeiwC7KEKP2RMQ" name="tester" type="_S9qWKxwQEeiwC7KEKP2RMQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prHRwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prHhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9prHxwQEeiwC7KEKP2RMQ" name="" type="_S9pq4RwQEeiwC7KEKP2RMQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prIBwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prIRwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prIhwQEeiwC7KEKP2RMQ" target="_S9prJhwQEeiwC7KEKP2RMQ" source="_S9prJRwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prIxwQEeiwC7KEKP2RMQ" target="_S9prJxwQEeiwC7KEKP2RMQ" source="_S9psGhwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prJBwQEeiwC7KEKP2RMQ" target="_S9psIxwQEeiwC7KEKP2RMQ" source="_S9prJhwQEeiwC7KEKP2RMQ"/>
        <structuredNode xmi:id="_S9prKBwQEeiwC7KEKP2RMQ" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prKRwQEeiwC7KEKP2RMQ" target="_S9psGhwQEeiwC7KEKP2RMQ" source="_S9psFxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prKhwQEeiwC7KEKP2RMQ" target="_S9psKhwQEeiwC7KEKP2RMQ" source="_S9psGhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9prKxwQEeiwC7KEKP2RMQ" target="_S9prNRwQEeiwC7KEKP2RMQ" source="_S9psKRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9prLBwQEeiwC7KEKP2RMQ" target="_S9psKRwQEeiwC7KEKP2RMQ" source="_S9psGxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prLRwQEeiwC7KEKP2RMQ" target="_S9psLhwQEeiwC7KEKP2RMQ" source="_S9psGhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prLhwQEeiwC7KEKP2RMQ" target="_S9psNRwQEeiwC7KEKP2RMQ" source="_S9psMRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prLxwQEeiwC7KEKP2RMQ" target="_S9psQRwQEeiwC7KEKP2RMQ" source="_S9psOBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prMBwQEeiwC7KEKP2RMQ" target="_S9psRxwQEeiwC7KEKP2RMQ" source="_S9psPBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9prMRwQEeiwC7KEKP2RMQ" target="_S9psSxwQEeiwC7KEKP2RMQ" source="_S9psShwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prMhwQEeiwC7KEKP2RMQ" target="_S9psSxwQEeiwC7KEKP2RMQ" source="_S9psRBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9prMxwQEeiwC7KEKP2RMQ" target="_S9psGxwQEeiwC7KEKP2RMQ" source="_S9psSxwQEeiwC7KEKP2RMQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9prNBwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prNRwQEeiwC7KEKP2RMQ" name="Body" incoming="_S9prKxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prNhwQEeiwC7KEKP2RMQ" target="_S9prchwQEeiwC7KEKP2RMQ" source="_S9prZRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prNxwQEeiwC7KEKP2RMQ" target="_S9praxwQEeiwC7KEKP2RMQ" source="_S9prQxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prOBwQEeiwC7KEKP2RMQ" target="_S9prghwQEeiwC7KEKP2RMQ" source="_S9prZhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prORwQEeiwC7KEKP2RMQ" target="_S9prexwQEeiwC7KEKP2RMQ" source="_S9praxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prOhwQEeiwC7KEKP2RMQ" target="_S9prkxwQEeiwC7KEKP2RMQ" source="_S9prZxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prOxwQEeiwC7KEKP2RMQ" target="_S9prixwQEeiwC7KEKP2RMQ" source="_S9prexwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prPBwQEeiwC7KEKP2RMQ" target="_S9prrBwQEeiwC7KEKP2RMQ" source="_S9praBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prPRwQEeiwC7KEKP2RMQ" target="_S9prpBwQEeiwC7KEKP2RMQ" source="_S9prixwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prPhwQEeiwC7KEKP2RMQ" target="_S9pr0xwQEeiwC7KEKP2RMQ" source="_S9praRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prPxwQEeiwC7KEKP2RMQ" target="_S9prvRwQEeiwC7KEKP2RMQ" source="_S9prpBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prQBwQEeiwC7KEKP2RMQ" target="_S9pr7RwQEeiwC7KEKP2RMQ" source="_S9prahwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prQRwQEeiwC7KEKP2RMQ" target="_S9pr5RwQEeiwC7KEKP2RMQ" source="_S9prvRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9prQhwQEeiwC7KEKP2RMQ" target="_S9psDBwQEeiwC7KEKP2RMQ" source="_S9pr5RwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prQxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@6bdb2897" outgoing="_S9prNxwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prRBwQEeiwC7KEKP2RMQ" target="_S9prZRwQEeiwC7KEKP2RMQ" source="_S9prTBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prRRwQEeiwC7KEKP2RMQ" target="_S9prZhwQEeiwC7KEKP2RMQ" source="_S9prTxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prRhwQEeiwC7KEKP2RMQ" target="_S9prZxwQEeiwC7KEKP2RMQ" source="_S9prUhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prRxwQEeiwC7KEKP2RMQ" target="_S9praBwQEeiwC7KEKP2RMQ" source="_S9prVRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prSBwQEeiwC7KEKP2RMQ" target="_S9praRwQEeiwC7KEKP2RMQ" source="_S9prWBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prSRwQEeiwC7KEKP2RMQ" target="_S9prahwQEeiwC7KEKP2RMQ" source="_S9prWxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prShwQEeiwC7KEKP2RMQ" target="_S9prXhwQEeiwC7KEKP2RMQ" source="_S9prYhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_S9prSxwQEeiwC7KEKP2RMQ" name="Call(test)" operation="_S9qURhwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9prTBwQEeiwC7KEKP2RMQ" name="Call(test).result(notEmpty)" outgoing="_S9prRBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prTRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prThwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <result xmi:id="_S9prTxwQEeiwC7KEKP2RMQ" name="Call(test).result(includes)" outgoing="_S9prRRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prUBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prURwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <result xmi:id="_S9prUhwQEeiwC7KEKP2RMQ" name="Call(test).result(m)" outgoing="_S9prRhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prUxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prVBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <result xmi:id="_S9prVRwQEeiwC7KEKP2RMQ" name="Call(test).result(n)" outgoing="_S9prRxwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prVhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prVxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <result xmi:id="_S9prWBwQEeiwC7KEKP2RMQ" name="Call(test).result(customers)" outgoing="_S9prSBwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prWRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prWhwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <result xmi:id="_S9prWxwQEeiwC7KEKP2RMQ" name="Call(test).result(list)" outgoing="_S9prSRwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prXBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prXRwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <target xmi:id="_S9prXhwQEeiwC7KEKP2RMQ" name="Call(test).target" incoming="_S9prShwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prXxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prYBwQEeiwC7KEKP2RMQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_S9prYRwQEeiwC7KEKP2RMQ" name="ReadSelf">
                <result xmi:id="_S9prYhwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9prShwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prYxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prZBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S9prZRwQEeiwC7KEKP2RMQ" name="Fork(notEmpty)@35a005a4" incoming="_S9prRBwQEeiwC7KEKP2RMQ" outgoing="_S9prNhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S9prZhwQEeiwC7KEKP2RMQ" name="Fork(includes)@247632d4" incoming="_S9prRRwQEeiwC7KEKP2RMQ" outgoing="_S9prOBwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S9prZxwQEeiwC7KEKP2RMQ" name="Fork(m)@4e936562" incoming="_S9prRhwQEeiwC7KEKP2RMQ" outgoing="_S9prOhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S9praBwQEeiwC7KEKP2RMQ" name="Fork(n)@7b2bd431" incoming="_S9prRxwQEeiwC7KEKP2RMQ" outgoing="_S9prPBwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S9praRwQEeiwC7KEKP2RMQ" name="Fork(customers)@7d84e160" incoming="_S9prSBwQEeiwC7KEKP2RMQ" outgoing="_S9prPhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_S9prahwQEeiwC7KEKP2RMQ" name="Fork(list)@68f19c96" incoming="_S9prSRwQEeiwC7KEKP2RMQ" outgoing="_S9prQBwQEeiwC7KEKP2RMQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9praxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@27ab7050" incoming="_S9prNxwQEeiwC7KEKP2RMQ" outgoing="_S9prORwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prbBwQEeiwC7KEKP2RMQ" target="_S9prbxwQEeiwC7KEKP2RMQ" source="_S9prdxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9prbRwQEeiwC7KEKP2RMQ" target="_S9prbhwQEeiwC7KEKP2RMQ" source="_S9prdRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9prbhwQEeiwC7KEKP2RMQ" name="Call(AssertFalse)" incoming="_S9prbRwQEeiwC7KEKP2RMQ" behavior="_S9q5URwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9prbxwQEeiwC7KEKP2RMQ" name="Call(AssertFalse).argument(label)" incoming="_S9prbBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prcBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prcRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prchwQEeiwC7KEKP2RMQ" name="Call(AssertFalse).argument(condition)" incoming="_S9prNhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prcxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prdBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prdRwQEeiwC7KEKP2RMQ" name="Tuple@738c56b8" outgoing="_S9prbRwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9prdhwQEeiwC7KEKP2RMQ" name="Value(&quot;notEmpty&quot;)">
                  <result xmi:id="_S9prdxwQEeiwC7KEKP2RMQ" name="Value(&quot;notEmpty&quot;).result" outgoing="_S9prbBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9preBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9preRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9prehwQEeiwC7KEKP2RMQ" value="notEmpty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prexwQEeiwC7KEKP2RMQ" name="ExpressionStatement@5ec287d9" incoming="_S9prORwQEeiwC7KEKP2RMQ" outgoing="_S9prOxwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prfBwQEeiwC7KEKP2RMQ" target="_S9prfxwQEeiwC7KEKP2RMQ" source="_S9prhxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9prfRwQEeiwC7KEKP2RMQ" target="_S9prfhwQEeiwC7KEKP2RMQ" source="_S9prhRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9prfhwQEeiwC7KEKP2RMQ" name="Call(AssertFalse)" incoming="_S9prfRwQEeiwC7KEKP2RMQ" behavior="_S9q5URwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9prfxwQEeiwC7KEKP2RMQ" name="Call(AssertFalse).argument(label)" incoming="_S9prfBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prgBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prgRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prghwQEeiwC7KEKP2RMQ" name="Call(AssertFalse).argument(condition)" incoming="_S9prOBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prgxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prhBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prhRwQEeiwC7KEKP2RMQ" name="Tuple@95ed9e6" outgoing="_S9prfRwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9prhhwQEeiwC7KEKP2RMQ" name="Value(&quot;includes&quot;)">
                  <result xmi:id="_S9prhxwQEeiwC7KEKP2RMQ" name="Value(&quot;includes&quot;).result" outgoing="_S9prfBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9priBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9priRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9prihwQEeiwC7KEKP2RMQ" value="includes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prixwQEeiwC7KEKP2RMQ" name="ExpressionStatement@1ec5a7b4" incoming="_S9prOxwQEeiwC7KEKP2RMQ" outgoing="_S9prPRwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prjBwQEeiwC7KEKP2RMQ" target="_S9prkBwQEeiwC7KEKP2RMQ" source="_S9prmxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prjRwQEeiwC7KEKP2RMQ" target="_S9prlhwQEeiwC7KEKP2RMQ" source="_S9proBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9prjhwQEeiwC7KEKP2RMQ" target="_S9prjxwQEeiwC7KEKP2RMQ" source="_S9prmRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9prjxwQEeiwC7KEKP2RMQ" name="Call(AssertEqual)" incoming="_S9prjhwQEeiwC7KEKP2RMQ" behavior="_S9q5thwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9prkBwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(label)" incoming="_S9prjBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prkRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prkhwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prkxwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value1)" incoming="_S9prOhwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prlBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prlRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prlhwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value2)" incoming="_S9prjRwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prlxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prmBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prmRwQEeiwC7KEKP2RMQ" name="Tuple@22b968c6" outgoing="_S9prjhwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9prmhwQEeiwC7KEKP2RMQ" name="Value(&quot;m&quot;)">
                  <result xmi:id="_S9prmxwQEeiwC7KEKP2RMQ" name="Value(&quot;m&quot;).result" outgoing="_S9prjBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prnBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prnRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9prnhwQEeiwC7KEKP2RMQ" value="m">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9prnxwQEeiwC7KEKP2RMQ" name="Value(3)">
                  <result xmi:id="_S9proBwQEeiwC7KEKP2RMQ" name="Value(3).result" outgoing="_S9prjRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9proRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prohwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S9proxwQEeiwC7KEKP2RMQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prpBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@5c1181a2" incoming="_S9prPRwQEeiwC7KEKP2RMQ" outgoing="_S9prPxwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prpRwQEeiwC7KEKP2RMQ" target="_S9prqRwQEeiwC7KEKP2RMQ" source="_S9prtBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prphwQEeiwC7KEKP2RMQ" target="_S9prrxwQEeiwC7KEKP2RMQ" source="_S9pruRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9prpxwQEeiwC7KEKP2RMQ" target="_S9prqBwQEeiwC7KEKP2RMQ" source="_S9prshwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9prqBwQEeiwC7KEKP2RMQ" name="Call(AssertEqual)" incoming="_S9prpxwQEeiwC7KEKP2RMQ" behavior="_S9q5thwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9prqRwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(label)" incoming="_S9prpRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prqhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prqxwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prrBwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value1)" incoming="_S9prPBwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prrRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prrhwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prrxwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value2)" incoming="_S9prphwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prsBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prsRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prshwQEeiwC7KEKP2RMQ" name="Tuple@5754f983" outgoing="_S9prpxwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9prsxwQEeiwC7KEKP2RMQ" name="Value(&quot;n&quot;)">
                  <result xmi:id="_S9prtBwQEeiwC7KEKP2RMQ" name="Value(&quot;n&quot;).result" outgoing="_S9prpRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prtRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prthwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9prtxwQEeiwC7KEKP2RMQ" value="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9pruBwQEeiwC7KEKP2RMQ" name="Value(3)">
                  <result xmi:id="_S9pruRwQEeiwC7KEKP2RMQ" name="Value(3).result" outgoing="_S9prphwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pruhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pruxwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_S9prvBwQEeiwC7KEKP2RMQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9prvRwQEeiwC7KEKP2RMQ" name="ExpressionStatement@4b8d944" incoming="_S9prPxwQEeiwC7KEKP2RMQ" outgoing="_S9prQRwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prvhwQEeiwC7KEKP2RMQ" target="_S9prwxwQEeiwC7KEKP2RMQ" source="_S9przxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prvxwQEeiwC7KEKP2RMQ" target="_S9prxhwQEeiwC7KEKP2RMQ" source="_S9pr3xwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9prwBwQEeiwC7KEKP2RMQ" target="_S9pryRwQEeiwC7KEKP2RMQ" source="_S9pr4RwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9prwRwQEeiwC7KEKP2RMQ" target="_S9prwhwQEeiwC7KEKP2RMQ" source="_S9przBwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9prwhwQEeiwC7KEKP2RMQ" name="Call(AssertList)" incoming="_S9prwRwQEeiwC7KEKP2RMQ" behavior="_S9q71hwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9prwxwQEeiwC7KEKP2RMQ" name="Call(AssertList).argument(label)" incoming="_S9prvhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prxBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9prxRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9prxhwQEeiwC7KEKP2RMQ" name="Call(AssertList).argument(list)" incoming="_S9prvxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9prxxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pryBwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9pryRwQEeiwC7KEKP2RMQ" name="Call(AssertList).argument(expected)" incoming="_S9prwBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pryhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pryxwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9przBwQEeiwC7KEKP2RMQ" name="Tuple@27b22b9a" outgoing="_S9prwRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9przRwQEeiwC7KEKP2RMQ" target="_S9pr3hwQEeiwC7KEKP2RMQ" source="_S9pr0xwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9przhwQEeiwC7KEKP2RMQ" name="Value(&quot;customers.name&quot;)">
                  <result xmi:id="_S9przxwQEeiwC7KEKP2RMQ" name="Value(&quot;customers.name&quot;).result" outgoing="_S9prvhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr0BwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr0RwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9pr0hwQEeiwC7KEKP2RMQ" value="customers.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S9pr0xwQEeiwC7KEKP2RMQ" name="Fork(Fork(customers)@7d84e160)" incoming="_S9prPhwQEeiwC7KEKP2RMQ" outgoing="_S9przRwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_S9pr1BwQEeiwC7KEKP2RMQ" name="Collect(Read(name))" mode="parallel" outputElement="_S9pr3xwQEeiwC7KEKP2RMQ" inputElement="_S9pr3hwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pr1RwQEeiwC7KEKP2RMQ" target="_S9pr2BwQEeiwC7KEKP2RMQ" source="_S9pr3hwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pr1hwQEeiwC7KEKP2RMQ" target="_S9pr3xwQEeiwC7KEKP2RMQ" source="_S9pr2xwQEeiwC7KEKP2RMQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9pr1xwQEeiwC7KEKP2RMQ" name="Read(name)" structuralFeature="_S9qUXhwQEeiwC7KEKP2RMQ">
                    <object xmi:id="_S9pr2BwQEeiwC7KEKP2RMQ" name="Read(name).object" incoming="_S9pr1RwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr2RwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr2hwQEeiwC7KEKP2RMQ" value="1"/>
                    </object>
                    <result xmi:id="_S9pr2xwQEeiwC7KEKP2RMQ" name="Read(name).result" outgoing="_S9pr1hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr3BwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr3RwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_S9pr3hwQEeiwC7KEKP2RMQ" name="Collect(Read(name)).inputElement" incoming="_S9przRwQEeiwC7KEKP2RMQ" outgoing="_S9pr1RwQEeiwC7KEKP2RMQ" regionAsInput="_S9pr1BwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_S9pr3xwQEeiwC7KEKP2RMQ" name="Collect(Read(name)).outputElement" incoming="_S9pr1hwQEeiwC7KEKP2RMQ" outgoing="_S9prvxwQEeiwC7KEKP2RMQ" regionAsOutput="_S9pr1BwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9pr4BwQEeiwC7KEKP2RMQ" name="Value(&quot;C&quot;)">
                  <result xmi:id="_S9pr4RwQEeiwC7KEKP2RMQ" name="Value(&quot;C&quot;).result" outgoing="_S9prwBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr4hwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr4xwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9pr5BwQEeiwC7KEKP2RMQ" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9pr5RwQEeiwC7KEKP2RMQ" name="ExpressionStatement@378ce8f3" incoming="_S9prQRwQEeiwC7KEKP2RMQ" outgoing="_S9prQhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pr5hwQEeiwC7KEKP2RMQ" target="_S9pr6hwQEeiwC7KEKP2RMQ" source="_S9pr9RwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pr5xwQEeiwC7KEKP2RMQ" target="_S9pr8BwQEeiwC7KEKP2RMQ" source="_S9pr_RwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9pr6BwQEeiwC7KEKP2RMQ" target="_S9pr6RwQEeiwC7KEKP2RMQ" source="_S9pr8xwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9pr6RwQEeiwC7KEKP2RMQ" name="Call(AssertList)" incoming="_S9pr6BwQEeiwC7KEKP2RMQ" behavior="_S9q71hwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9pr6hwQEeiwC7KEKP2RMQ" name="Call(AssertList).argument(label)" incoming="_S9pr5hwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr6xwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr7BwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9pr7RwQEeiwC7KEKP2RMQ" name="Call(AssertList).argument(list)" incoming="_S9prQBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr7hwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr7xwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9pr8BwQEeiwC7KEKP2RMQ" name="Call(AssertList).argument(expected)" incoming="_S9pr5xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr8RwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr8hwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9pr8xwQEeiwC7KEKP2RMQ" name="Tuple@4ff69566" outgoing="_S9pr6BwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9pr9BwQEeiwC7KEKP2RMQ" name="Value(&quot;list&quot;)">
                  <result xmi:id="_S9pr9RwQEeiwC7KEKP2RMQ" name="Value(&quot;list&quot;).result" outgoing="_S9pr5hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr9hwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr9xwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9pr-BwQEeiwC7KEKP2RMQ" value="list">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9pr-RwQEeiwC7KEKP2RMQ" name="SequenceConstructionExpression@392f37b9">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9pr-hwQEeiwC7KEKP2RMQ" target="_S9psBhwQEeiwC7KEKP2RMQ" source="_S9psABwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pr-xwQEeiwC7KEKP2RMQ" target="_S9pr_RwQEeiwC7KEKP2RMQ" source="_S9psAhwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9pr_BwQEeiwC7KEKP2RMQ" target="_S9pr_RwQEeiwC7KEKP2RMQ" source="_S9psCBwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeOutput xmi:id="_S9pr_RwQEeiwC7KEKP2RMQ" name="SequenceConstructionExpression@392f37b9.output" incoming="_S9pr-xwQEeiwC7KEKP2RMQ _S9pr_BwQEeiwC7KEKP2RMQ" outgoing="_S9pr5xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9pr_hwQEeiwC7KEKP2RMQ" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9pr_xwQEeiwC7KEKP2RMQ" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9psABwQEeiwC7KEKP2RMQ" name="SequenceExpressionList@67210123#1" outgoing="_S9pr-hwQEeiwC7KEKP2RMQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9psARwQEeiwC7KEKP2RMQ" name="Value(&quot;Blah&quot;)">
                      <result xmi:id="_S9psAhwQEeiwC7KEKP2RMQ" name="Value(&quot;Blah&quot;).result" outgoing="_S9pr-xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psAxwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psBBwQEeiwC7KEKP2RMQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_S9psBRwQEeiwC7KEKP2RMQ" value="Blah">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9psBhwQEeiwC7KEKP2RMQ" name="SequenceExpressionList@67210123#2" incoming="_S9pr-hwQEeiwC7KEKP2RMQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9psBxwQEeiwC7KEKP2RMQ" name="Value(1)">
                      <result xmi:id="_S9psCBwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9pr_BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psCRwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psChwQEeiwC7KEKP2RMQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_S9psCxwQEeiwC7KEKP2RMQ" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9psDBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@617c7a78" incoming="_S9prQhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9psDRwQEeiwC7KEKP2RMQ" target="_S9psDxwQEeiwC7KEKP2RMQ" source="_S9psExwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_S9psDhwQEeiwC7KEKP2RMQ" name="Call(done)" operation="_S9qWHxwQEeiwC7KEKP2RMQ">
                <target xmi:id="_S9psDxwQEeiwC7KEKP2RMQ" name="Call(done).target" incoming="_S9psDRwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psEBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psERwQEeiwC7KEKP2RMQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_S9psEhwQEeiwC7KEKP2RMQ" name="ReadSelf">
                <result xmi:id="_S9psExwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9psDRwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psFBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psFRwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S9psFhwQEeiwC7KEKP2RMQ" name="ReadSelf">
            <result xmi:id="_S9psFxwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9prKRwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psGBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psGRwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9psGhwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9prKRwQEeiwC7KEKP2RMQ" outgoing="_S9prIxwQEeiwC7KEKP2RMQ _S9prKhwQEeiwC7KEKP2RMQ _S9prLRwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9psGxwQEeiwC7KEKP2RMQ" name="Super" incoming="_S9prMxwQEeiwC7KEKP2RMQ" outgoing="_S9prLBwQEeiwC7KEKP2RMQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9psHBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@60c20935">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9psHRwQEeiwC7KEKP2RMQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9psHhwQEeiwC7KEKP2RMQ" target="_S9psHxwQEeiwC7KEKP2RMQ" source="_S9psJhwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9psHxwQEeiwC7KEKP2RMQ" name="Output(Call(Test$method$1).result())" incoming="_S9psHhwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psIBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psIRwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9psIhwQEeiwC7KEKP2RMQ" name="Call(Test$method$1)" behavior="_S9qVPhwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9psIxwQEeiwC7KEKP2RMQ" name="Call(Test$method$1).argument(tester)" incoming="_S9prJBwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psJBwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psJRwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9psJhwQEeiwC7KEKP2RMQ" name="Call(Test$method$1).result()" outgoing="_S9psHhwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psJxwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psKBwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_S9psKRwQEeiwC7KEKP2RMQ" name="Call(Expressions_Sequence_Operation$initialization$1)" incoming="_S9prLBwQEeiwC7KEKP2RMQ" outgoing="_S9prKxwQEeiwC7KEKP2RMQ" operation="_S9qUOhwQEeiwC7KEKP2RMQ">
            <target xmi:id="_S9psKhwQEeiwC7KEKP2RMQ" name="Call(Expressions_Sequence_Operation$initialization$1).target" incoming="_S9prKhwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psKxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psLBwQEeiwC7KEKP2RMQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9psLRwQEeiwC7KEKP2RMQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_S9pq6BwQEeiwC7KEKP2RMQ">
            <object xmi:id="_S9psLhwQEeiwC7KEKP2RMQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_S9prLRwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psLxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psMBwQEeiwC7KEKP2RMQ" value="1"/>
            </object>
            <result xmi:id="_S9psMRwQEeiwC7KEKP2RMQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_S9prLhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psMhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psMxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9psNBwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
            <argument xmi:id="_S9psNRwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9prLhwQEeiwC7KEKP2RMQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psNhwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psNxwQEeiwC7KEKP2RMQ" value="*"/>
            </argument>
            <result xmi:id="_S9psOBwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9prLxwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psORwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psOhwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9psOxwQEeiwC7KEKP2RMQ" name="Value(0)">
            <result xmi:id="_S9psPBwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9prMBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psPRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psPhwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_S9psPxwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S9psQBwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
            <first xmi:id="_S9psQRwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9prLxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psQhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psQxwQEeiwC7KEKP2RMQ" value="1"/>
            </first>
            <result xmi:id="_S9psRBwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9prMhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psRRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psRhwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <second xmi:id="_S9psRxwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9prMBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psSBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psSRwQEeiwC7KEKP2RMQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S9psShwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9prMRwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S9psSxwQEeiwC7KEKP2RMQ" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_S9prMRwQEeiwC7KEKP2RMQ _S9prMhwQEeiwC7KEKP2RMQ" outgoing="_S9prMxwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9prMhwQEeiwC7KEKP2RMQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9prJRwQEeiwC7KEKP2RMQ" name="Input(tester)" outgoing="_S9prIhwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" parameter="_S9prHBwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_S9prJhwQEeiwC7KEKP2RMQ" name="Fork(tester)" incoming="_S9prIhwQEeiwC7KEKP2RMQ" outgoing="_S9prJBwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9prJxwQEeiwC7KEKP2RMQ" name="Return" incoming="_S9prIxwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" parameter="_S9prHxwQEeiwC7KEKP2RMQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9psTBwQEeiwC7KEKP2RMQ" name="test$method$1" visibility="private" specification="_S9qURhwQEeiwC7KEKP2RMQ" node="_S9qR9BwQEeiwC7KEKP2RMQ _S9qR9RwQEeiwC7KEKP2RMQ _S9qR9hwQEeiwC7KEKP2RMQ _S9qR9xwQEeiwC7KEKP2RMQ _S9qR-BwQEeiwC7KEKP2RMQ _S9qR-RwQEeiwC7KEKP2RMQ _S9qR-hwQEeiwC7KEKP2RMQ" group="_S9qR-hwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9psTRwQEeiwC7KEKP2RMQ" name="notEmpty" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psThwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psTxwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9psUBwQEeiwC7KEKP2RMQ" name="includes" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psURwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psUhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9psUxwQEeiwC7KEKP2RMQ" name="m" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psVBwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psVRwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9psVhwQEeiwC7KEKP2RMQ" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psVxwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psWBwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9psWRwQEeiwC7KEKP2RMQ" name="customers" type="_S9qUWhwQEeiwC7KEKP2RMQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psWhwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psWxwQEeiwC7KEKP2RMQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9psXBwQEeiwC7KEKP2RMQ" name="list" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9psXRwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9psXhwQEeiwC7KEKP2RMQ" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9psXxwQEeiwC7KEKP2RMQ" target="_S9qR9BwQEeiwC7KEKP2RMQ" source="_S9qSJhwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9psYBwQEeiwC7KEKP2RMQ" target="_S9qR9RwQEeiwC7KEKP2RMQ" source="_S9qSKRwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR8BwQEeiwC7KEKP2RMQ" target="_S9qR9hwQEeiwC7KEKP2RMQ" source="_S9qSLBwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR8RwQEeiwC7KEKP2RMQ" target="_S9qR9xwQEeiwC7KEKP2RMQ" source="_S9qSLxwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR8hwQEeiwC7KEKP2RMQ" target="_S9qR-BwQEeiwC7KEKP2RMQ" source="_S9qSMhwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR8xwQEeiwC7KEKP2RMQ" target="_S9qR-RwQEeiwC7KEKP2RMQ" source="_S9qSNRwQEeiwC7KEKP2RMQ"/>
        <structuredNode xmi:id="_S9qR-hwQEeiwC7KEKP2RMQ" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qR-xwQEeiwC7KEKP2RMQ" target="_S9qSWxwQEeiwC7KEKP2RMQ" source="_S9qSOBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR_BwQEeiwC7KEKP2RMQ" target="_S9qSbhwQEeiwC7KEKP2RMQ" source="_S9qSXRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qR_RwQEeiwC7KEKP2RMQ" target="_S9qSZBwQEeiwC7KEKP2RMQ" source="_S9qSWxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR_hwQEeiwC7KEKP2RMQ" target="_S9qSfhwQEeiwC7KEKP2RMQ" source="_S9qSXRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qR_xwQEeiwC7KEKP2RMQ" target="_S9qSgRwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSABwQEeiwC7KEKP2RMQ" target="_S9qSdBwQEeiwC7KEKP2RMQ" source="_S9qSZBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSARwQEeiwC7KEKP2RMQ" target="_S9qSkRwQEeiwC7KEKP2RMQ" source="_S9qSXRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSAhwQEeiwC7KEKP2RMQ" target="_S9qSlBwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSAxwQEeiwC7KEKP2RMQ" target="_S9qShxwQEeiwC7KEKP2RMQ" source="_S9qSdBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSBBwQEeiwC7KEKP2RMQ" target="_S9qSxRwQEeiwC7KEKP2RMQ" source="_S9qSiRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSBRwQEeiwC7KEKP2RMQ" target="_S9qSmhwQEeiwC7KEKP2RMQ" source="_S9qShxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSBhwQEeiwC7KEKP2RMQ" target="_S9qS-hwQEeiwC7KEKP2RMQ" source="_S9qSzhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSBxwQEeiwC7KEKP2RMQ" target="_S9qSzxwQEeiwC7KEKP2RMQ" source="_S9qSmhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSCBwQEeiwC7KEKP2RMQ" target="_S9qTDBwQEeiwC7KEKP2RMQ" source="_S9qTAxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSCRwQEeiwC7KEKP2RMQ" target="_S9qTDxwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSChwQEeiwC7KEKP2RMQ" target="_S9qTBBwQEeiwC7KEKP2RMQ" source="_S9qSzxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSCxwQEeiwC7KEKP2RMQ" target="_S9qTJxwQEeiwC7KEKP2RMQ" source="_S9qTFRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSDBwQEeiwC7KEKP2RMQ" target="_S9qTFhwQEeiwC7KEKP2RMQ" source="_S9qTBBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSDRwQEeiwC7KEKP2RMQ" target="_S9qTORwQEeiwC7KEKP2RMQ" source="_S9qTMBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSDhwQEeiwC7KEKP2RMQ" target="_S9qTPBwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSDxwQEeiwC7KEKP2RMQ" target="_S9qTMRwQEeiwC7KEKP2RMQ" source="_S9qTFhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSEBwQEeiwC7KEKP2RMQ" target="_S9qTQxwQEeiwC7KEKP2RMQ" source="_S9qTMRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSERwQEeiwC7KEKP2RMQ" target="_S9qTWxwQEeiwC7KEKP2RMQ" source="_S9qTQxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSEhwQEeiwC7KEKP2RMQ" target="_S9qTcxwQEeiwC7KEKP2RMQ" source="_S9qTWxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSExwQEeiwC7KEKP2RMQ" target="_S9qThhwQEeiwC7KEKP2RMQ" source="_S9qTdRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSFBwQEeiwC7KEKP2RMQ" target="_S9qTiRwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSFRwQEeiwC7KEKP2RMQ" target="_S9qTfBwQEeiwC7KEKP2RMQ" source="_S9qTcxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSFhwQEeiwC7KEKP2RMQ" target="_S9qTlxwQEeiwC7KEKP2RMQ" source="_S9qTfhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSFxwQEeiwC7KEKP2RMQ" target="_S9qTmhwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSGBwQEeiwC7KEKP2RMQ" target="_S9qTjxwQEeiwC7KEKP2RMQ" source="_S9qTfBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSGRwQEeiwC7KEKP2RMQ" target="_S9qTshwQEeiwC7KEKP2RMQ" source="_S9qToBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSGhwQEeiwC7KEKP2RMQ" target="_S9qToRwQEeiwC7KEKP2RMQ" source="_S9qTjxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSGxwQEeiwC7KEKP2RMQ" target="_S9qTzRwQEeiwC7KEKP2RMQ" source="_S9qTuxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSHBwQEeiwC7KEKP2RMQ" target="_S9qTvBwQEeiwC7KEKP2RMQ" source="_S9qToRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSHRwQEeiwC7KEKP2RMQ" target="_S9qT3xwQEeiwC7KEKP2RMQ" source="_S9qT1hwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSHhwQEeiwC7KEKP2RMQ" target="_S9qT4hwQEeiwC7KEKP2RMQ" source="_S9qSOhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSHxwQEeiwC7KEKP2RMQ" target="_S9qT1xwQEeiwC7KEKP2RMQ" source="_S9qTvBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSIBwQEeiwC7KEKP2RMQ" target="_S9qSJhwQEeiwC7KEKP2RMQ" source="_S9qSZhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSIRwQEeiwC7KEKP2RMQ" target="_S9qSKRwQEeiwC7KEKP2RMQ" source="_S9qSdhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSIhwQEeiwC7KEKP2RMQ" target="_S9qSLBwQEeiwC7KEKP2RMQ" source="_S9qTRRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSIxwQEeiwC7KEKP2RMQ" target="_S9qSLxwQEeiwC7KEKP2RMQ" source="_S9qTXRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSJBwQEeiwC7KEKP2RMQ" target="_S9qSMhwQEeiwC7KEKP2RMQ" source="_S9qTQhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSJRwQEeiwC7KEKP2RMQ" target="_S9qSNRwQEeiwC7KEKP2RMQ" source="_S9qT6BwQEeiwC7KEKP2RMQ"/>
          <structuredNodeOutput xmi:id="_S9qSJhwQEeiwC7KEKP2RMQ" name="Output(notEmpty)" incoming="_S9qSIBwQEeiwC7KEKP2RMQ" outgoing="_S9psXxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSJxwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSKBwQEeiwC7KEKP2RMQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_S9qSKRwQEeiwC7KEKP2RMQ" name="Output(includes)" incoming="_S9qSIRwQEeiwC7KEKP2RMQ" outgoing="_S9psYBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSKhwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSKxwQEeiwC7KEKP2RMQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_S9qSLBwQEeiwC7KEKP2RMQ" name="Output(m)" incoming="_S9qSIhwQEeiwC7KEKP2RMQ" outgoing="_S9qR8BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSLRwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSLhwQEeiwC7KEKP2RMQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_S9qSLxwQEeiwC7KEKP2RMQ" name="Output(n)" incoming="_S9qSIxwQEeiwC7KEKP2RMQ" outgoing="_S9qR8RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSMBwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSMRwQEeiwC7KEKP2RMQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_S9qSMhwQEeiwC7KEKP2RMQ" name="Output(customers)" incoming="_S9qSJBwQEeiwC7KEKP2RMQ" outgoing="_S9qR8hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSMxwQEeiwC7KEKP2RMQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSNBwQEeiwC7KEKP2RMQ" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_S9qSNRwQEeiwC7KEKP2RMQ" name="Output(list)" incoming="_S9qSJRwQEeiwC7KEKP2RMQ" outgoing="_S9qR8xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSNhwQEeiwC7KEKP2RMQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSNxwQEeiwC7KEKP2RMQ" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSOBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@456b0eeb" outgoing="_S9qR-xwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSORwQEeiwC7KEKP2RMQ" target="_S9qSOhwQEeiwC7KEKP2RMQ" source="_S9qSTRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qSOhwQEeiwC7KEKP2RMQ" name="Fork(customer)@15a74ceb" incoming="_S9qSORwQEeiwC7KEKP2RMQ" outgoing="_S9qR_xwQEeiwC7KEKP2RMQ _S9qSAhwQEeiwC7KEKP2RMQ _S9qSCRwQEeiwC7KEKP2RMQ _S9qSDhwQEeiwC7KEKP2RMQ _S9qSFBwQEeiwC7KEKP2RMQ _S9qSFxwQEeiwC7KEKP2RMQ _S9qSHhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSOxwQEeiwC7KEKP2RMQ" name="RightHandSide@27538e23">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSPBwQEeiwC7KEKP2RMQ" target="_S9qSWhwQEeiwC7KEKP2RMQ" source="_S9qSQhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSPRwQEeiwC7KEKP2RMQ" target="_S9qSVxwQEeiwC7KEKP2RMQ" source="_S9qSWhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSPhwQEeiwC7KEKP2RMQ" target="_S9qSURwQEeiwC7KEKP2RMQ" source="_S9qSRxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSPxwQEeiwC7KEKP2RMQ" target="_S9qSSxwQEeiwC7KEKP2RMQ" source="_S9qSRRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSQBwQEeiwC7KEKP2RMQ" target="_S9qSSxwQEeiwC7KEKP2RMQ" source="_S9qSQRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_S9qSQRwQEeiwC7KEKP2RMQ" name="Create(Customer)" outgoing="_S9qSQBwQEeiwC7KEKP2RMQ" classifier="_S9qUWhwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9qSQhwQEeiwC7KEKP2RMQ" name="Create(Customer).result" outgoing="_S9qSPBwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSQxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSRBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSRRwQEeiwC7KEKP2RMQ" name="Tuple@7c117540" outgoing="_S9qSPxwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qSRhwQEeiwC7KEKP2RMQ" name="Value(&quot;A&quot;)">
                  <result xmi:id="_S9qSRxwQEeiwC7KEKP2RMQ" name="Value(&quot;A&quot;).result" outgoing="_S9qSPhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSSBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSSRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9qSShwQEeiwC7KEKP2RMQ" value="A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSSxwQEeiwC7KEKP2RMQ" name="Node(Call(Customer))" incoming="_S9qSQBwQEeiwC7KEKP2RMQ _S9qSPxwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSTBwQEeiwC7KEKP2RMQ" target="_S9qSTRwQEeiwC7KEKP2RMQ" source="_S9qSWhwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qSTRwQEeiwC7KEKP2RMQ" name="Output(Fork(Create(Customer).result))" incoming="_S9qSTBwQEeiwC7KEKP2RMQ" outgoing="_S9qSORwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSThwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSTxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_S9qSUBwQEeiwC7KEKP2RMQ" name="Call(Customer)" operation="_S9qVERwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9qSURwQEeiwC7KEKP2RMQ" name="Call(Customer).argument(name)" incoming="_S9qSPhwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSUhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSUxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9qSVBwQEeiwC7KEKP2RMQ" name="Call(Customer).result()" type="_S9qUWhwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSVRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSVhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <target xmi:id="_S9qSVxwQEeiwC7KEKP2RMQ" name="Call(Customer).target" incoming="_S9qSPRwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSWBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSWRwQEeiwC7KEKP2RMQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S9qSWhwQEeiwC7KEKP2RMQ" name="Fork(Create(Customer).result)" incoming="_S9qSPBwQEeiwC7KEKP2RMQ" outgoing="_S9qSPRwQEeiwC7KEKP2RMQ _S9qSTBwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSWxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@2b6a3cb9" incoming="_S9qR-xwQEeiwC7KEKP2RMQ" outgoing="_S9qR_RwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSXBwQEeiwC7KEKP2RMQ" target="_S9qSXRwQEeiwC7KEKP2RMQ" source="_S9qSYBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qSXRwQEeiwC7KEKP2RMQ" name="Fork(customers)@71379e2e" incoming="_S9qSXBwQEeiwC7KEKP2RMQ" outgoing="_S9qR_BwQEeiwC7KEKP2RMQ _S9qR_hwQEeiwC7KEKP2RMQ _S9qSARwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSXhwQEeiwC7KEKP2RMQ" name="RightHandSide@3bd35fc3">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qSXxwQEeiwC7KEKP2RMQ" name="Value(null)">
                <result xmi:id="_S9qSYBwQEeiwC7KEKP2RMQ" name="Value(null).result" outgoing="_S9qSXBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSYRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSYhwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_S9qSYxwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSZBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@2d27e5bb" incoming="_S9qR_RwQEeiwC7KEKP2RMQ" outgoing="_S9qSABwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSZRwQEeiwC7KEKP2RMQ" target="_S9qSZhwQEeiwC7KEKP2RMQ" source="_S9qSahwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qSZhwQEeiwC7KEKP2RMQ" name="Fork(notEmpty)@1cf73fc7" incoming="_S9qSZRwQEeiwC7KEKP2RMQ" outgoing="_S9qSIBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSZxwQEeiwC7KEKP2RMQ" name="RightHandSide@7209e0a1">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSaBwQEeiwC7KEKP2RMQ" name="Node(Call(NotEmpty))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSaRwQEeiwC7KEKP2RMQ" target="_S9qSahwQEeiwC7KEKP2RMQ" source="_S9qScRwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qSahwQEeiwC7KEKP2RMQ" name="Output(Call(NotEmpty).result())" incoming="_S9qSaRwQEeiwC7KEKP2RMQ" outgoing="_S9qSZRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSaxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSbBwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qSbRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)">
                  <argument xmi:id="_S9qSbhwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9qR_BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSbxwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qScBwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <result xmi:id="_S9qScRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9qSaRwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSchwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qScxwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSdBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@49a682bf" incoming="_S9qSABwQEeiwC7KEKP2RMQ" outgoing="_S9qSAxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSdRwQEeiwC7KEKP2RMQ" target="_S9qSdhwQEeiwC7KEKP2RMQ" source="_S9qSehwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qSdhwQEeiwC7KEKP2RMQ" name="Fork(includes)@44246f75" incoming="_S9qSdRwQEeiwC7KEKP2RMQ" outgoing="_S9qSIRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSdxwQEeiwC7KEKP2RMQ" name="RightHandSide@48369cd2">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSeBwQEeiwC7KEKP2RMQ" name="Node(Call(Includes))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSeRwQEeiwC7KEKP2RMQ" target="_S9qSehwQEeiwC7KEKP2RMQ" source="_S9qShBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qSehwQEeiwC7KEKP2RMQ" name="Output(Call(Includes).result())" incoming="_S9qSeRwQEeiwC7KEKP2RMQ" outgoing="_S9qSdRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSexwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSfBwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qSfRwQEeiwC7KEKP2RMQ" name="Call(Includes)">
                  <argument xmi:id="_S9qSfhwQEeiwC7KEKP2RMQ" name="Call(Includes).argument(seq)" incoming="_S9qR_hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSfxwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSgBwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <argument xmi:id="_S9qSgRwQEeiwC7KEKP2RMQ" name="Call(Includes).argument(element)" incoming="_S9qR_xwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSghwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSgxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9qShBwQEeiwC7KEKP2RMQ" name="Call(Includes).result()" outgoing="_S9qSeRwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qShRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qShhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Includes"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qShxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@20d65b51" incoming="_S9qSAxwQEeiwC7KEKP2RMQ" outgoing="_S9qSBRwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSiBwQEeiwC7KEKP2RMQ" target="_S9qSiRwQEeiwC7KEKP2RMQ" source="_S9qSjRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qSiRwQEeiwC7KEKP2RMQ" name="Fork(customers)@3df5661c" incoming="_S9qSiBwQEeiwC7KEKP2RMQ" outgoing="_S9qSBBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSihwQEeiwC7KEKP2RMQ" name="RightHandSide@10cfa8aa">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSixwQEeiwC7KEKP2RMQ" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSjBwQEeiwC7KEKP2RMQ" target="_S9qSjRwQEeiwC7KEKP2RMQ" source="_S9qSlxwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qSjRwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qSjBwQEeiwC7KEKP2RMQ" outgoing="_S9qSiBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSjhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSjxwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qSkBwQEeiwC7KEKP2RMQ" name="Call(Including)">
                  <argument xmi:id="_S9qSkRwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSARwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSkhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSkxwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <argument xmi:id="_S9qSlBwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qSAhwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSlRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSlhwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9qSlxwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qSjBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSmBwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSmRwQEeiwC7KEKP2RMQ" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSmhwQEeiwC7KEKP2RMQ" name="ExpressionStatement@29039958" incoming="_S9qSBRwQEeiwC7KEKP2RMQ" outgoing="_S9qSBxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSmxwQEeiwC7KEKP2RMQ" target="_S9qSyBwQEeiwC7KEKP2RMQ" source="_S9qSsRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSnBwQEeiwC7KEKP2RMQ" target="_S9qSxBwQEeiwC7KEKP2RMQ" source="_S9qSnxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSnRwQEeiwC7KEKP2RMQ" target="_S9qSzhwQEeiwC7KEKP2RMQ" source="_S9qSyxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSnhwQEeiwC7KEKP2RMQ" target="_S9qSvxwQEeiwC7KEKP2RMQ" source="_S9qSnxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSnxwQEeiwC7KEKP2RMQ" name="Tuple@2793360c" outgoing="_S9qSnBwQEeiwC7KEKP2RMQ _S9qSnhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSoBwQEeiwC7KEKP2RMQ" target="_S9qSvhwQEeiwC7KEKP2RMQ" source="_S9qSphwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSoRwQEeiwC7KEKP2RMQ" target="_S9qSuxwQEeiwC7KEKP2RMQ" source="_S9qSvhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSohwQEeiwC7KEKP2RMQ" target="_S9qStRwQEeiwC7KEKP2RMQ" source="_S9qSqxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSoxwQEeiwC7KEKP2RMQ" target="_S9qSrxwQEeiwC7KEKP2RMQ" source="_S9qSqRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qSpBwQEeiwC7KEKP2RMQ" target="_S9qSrxwQEeiwC7KEKP2RMQ" source="_S9qSpRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_S9qSpRwQEeiwC7KEKP2RMQ" name="Create(Customer)" outgoing="_S9qSpBwQEeiwC7KEKP2RMQ" classifier="_S9qUWhwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9qSphwQEeiwC7KEKP2RMQ" name="Create(Customer).result" outgoing="_S9qSoBwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSpxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSqBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSqRwQEeiwC7KEKP2RMQ" name="Tuple@4c5becb3" outgoing="_S9qSoxwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qSqhwQEeiwC7KEKP2RMQ" name="Value(&quot;B&quot;)">
                  <result xmi:id="_S9qSqxwQEeiwC7KEKP2RMQ" name="Value(&quot;B&quot;).result" outgoing="_S9qSohwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSrBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSrRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9qSrhwQEeiwC7KEKP2RMQ" value="B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSrxwQEeiwC7KEKP2RMQ" name="Node(Call(Customer))" incoming="_S9qSpBwQEeiwC7KEKP2RMQ _S9qSoxwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSsBwQEeiwC7KEKP2RMQ" target="_S9qSsRwQEeiwC7KEKP2RMQ" source="_S9qSvhwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qSsRwQEeiwC7KEKP2RMQ" name="Output(Fork(Create(Customer).result))" incoming="_S9qSsBwQEeiwC7KEKP2RMQ" outgoing="_S9qSmxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSshwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSsxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_S9qStBwQEeiwC7KEKP2RMQ" name="Call(Customer)" operation="_S9qVERwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9qStRwQEeiwC7KEKP2RMQ" name="Call(Customer).argument(name)" incoming="_S9qSohwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSthwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qStxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9qSuBwQEeiwC7KEKP2RMQ" name="Call(Customer).result()" type="_S9qUWhwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSuRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSuhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <target xmi:id="_S9qSuxwQEeiwC7KEKP2RMQ" name="Call(Customer).target" incoming="_S9qSoRwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSvBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSvRwQEeiwC7KEKP2RMQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S9qSvhwQEeiwC7KEKP2RMQ" name="Fork(Create(Customer).result)" incoming="_S9qSoBwQEeiwC7KEKP2RMQ" outgoing="_S9qSoRwQEeiwC7KEKP2RMQ _S9qSsBwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSvxwQEeiwC7KEKP2RMQ" name="Node(Call(Including))" incoming="_S9qSnhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qSwBwQEeiwC7KEKP2RMQ" target="_S9qSwRwQEeiwC7KEKP2RMQ" source="_S9qSyxwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qSwRwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qSwBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSwhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSwxwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qSxBwQEeiwC7KEKP2RMQ" name="Call(Including)" incoming="_S9qSnBwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9qSxRwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSBBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSxhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSxxwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qSyBwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qSmxwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSyRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSyhwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qSyxwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qSnRwQEeiwC7KEKP2RMQ _S9qSwBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qSzBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qSzRwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qSzhwQEeiwC7KEKP2RMQ" name="Fork(customers)@44bb344d" incoming="_S9qSnRwQEeiwC7KEKP2RMQ" outgoing="_S9qSBhwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qSzxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@e9e6338" incoming="_S9qSBxwQEeiwC7KEKP2RMQ" outgoing="_S9qSChwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS0BwQEeiwC7KEKP2RMQ" target="_S9qS_RwQEeiwC7KEKP2RMQ" source="_S9qS5hwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qS0RwQEeiwC7KEKP2RMQ" target="_S9qS-RwQEeiwC7KEKP2RMQ" source="_S9qS1BwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS0hwQEeiwC7KEKP2RMQ" target="_S9qTAxwQEeiwC7KEKP2RMQ" source="_S9qTABwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qS0xwQEeiwC7KEKP2RMQ" target="_S9qS9BwQEeiwC7KEKP2RMQ" source="_S9qS1BwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qS1BwQEeiwC7KEKP2RMQ" name="Tuple@44632877" outgoing="_S9qS0RwQEeiwC7KEKP2RMQ _S9qS0xwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS1RwQEeiwC7KEKP2RMQ" target="_S9qS8xwQEeiwC7KEKP2RMQ" source="_S9qS2xwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS1hwQEeiwC7KEKP2RMQ" target="_S9qS8BwQEeiwC7KEKP2RMQ" source="_S9qS8xwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS1xwQEeiwC7KEKP2RMQ" target="_S9qS6hwQEeiwC7KEKP2RMQ" source="_S9qS4BwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qS2BwQEeiwC7KEKP2RMQ" target="_S9qS5BwQEeiwC7KEKP2RMQ" source="_S9qS3hwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qS2RwQEeiwC7KEKP2RMQ" target="_S9qS5BwQEeiwC7KEKP2RMQ" source="_S9qS2hwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_S9qS2hwQEeiwC7KEKP2RMQ" name="Create(Customer)" outgoing="_S9qS2RwQEeiwC7KEKP2RMQ" classifier="_S9qUWhwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9qS2xwQEeiwC7KEKP2RMQ" name="Create(Customer).result" outgoing="_S9qS1RwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS3BwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS3RwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qS3hwQEeiwC7KEKP2RMQ" name="Tuple@28a5d3d5" outgoing="_S9qS2BwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qS3xwQEeiwC7KEKP2RMQ" name="Value(&quot;C&quot;)">
                  <result xmi:id="_S9qS4BwQEeiwC7KEKP2RMQ" name="Value(&quot;C&quot;).result" outgoing="_S9qS1xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS4RwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS4hwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9qS4xwQEeiwC7KEKP2RMQ" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qS5BwQEeiwC7KEKP2RMQ" name="Node(Call(Customer))" incoming="_S9qS2RwQEeiwC7KEKP2RMQ _S9qS2BwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS5RwQEeiwC7KEKP2RMQ" target="_S9qS5hwQEeiwC7KEKP2RMQ" source="_S9qS8xwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qS5hwQEeiwC7KEKP2RMQ" name="Output(Fork(Create(Customer).result))" incoming="_S9qS5RwQEeiwC7KEKP2RMQ" outgoing="_S9qS0BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS5xwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS6BwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_S9qS6RwQEeiwC7KEKP2RMQ" name="Call(Customer)" operation="_S9qVERwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9qS6hwQEeiwC7KEKP2RMQ" name="Call(Customer).argument(name)" incoming="_S9qS1xwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS6xwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS7BwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9qS7RwQEeiwC7KEKP2RMQ" name="Call(Customer).result()" type="_S9qUWhwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS7hwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS7xwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <target xmi:id="_S9qS8BwQEeiwC7KEKP2RMQ" name="Call(Customer).target" incoming="_S9qS1hwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS8RwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS8hwQEeiwC7KEKP2RMQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S9qS8xwQEeiwC7KEKP2RMQ" name="Fork(Create(Customer).result)" incoming="_S9qS1RwQEeiwC7KEKP2RMQ" outgoing="_S9qS1hwQEeiwC7KEKP2RMQ _S9qS5RwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qS9BwQEeiwC7KEKP2RMQ" name="Node(Call(Including))" incoming="_S9qS0xwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qS9RwQEeiwC7KEKP2RMQ" target="_S9qS9hwQEeiwC7KEKP2RMQ" source="_S9qTABwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qS9hwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qS9RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS9xwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS-BwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qS-RwQEeiwC7KEKP2RMQ" name="Call(Including)" incoming="_S9qS0RwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9qS-hwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSBhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS-xwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS_BwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qS_RwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qS0BwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qS_hwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qS_xwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qTABwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qS0hwQEeiwC7KEKP2RMQ _S9qS9RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTARwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTAhwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTAxwQEeiwC7KEKP2RMQ" name="Fork(customers)@3a04a245" incoming="_S9qS0hwQEeiwC7KEKP2RMQ" outgoing="_S9qSCBwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTBBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@7abaa844" incoming="_S9qSChwQEeiwC7KEKP2RMQ" outgoing="_S9qSDBwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTBRwQEeiwC7KEKP2RMQ" target="_S9qTFRwQEeiwC7KEKP2RMQ" source="_S9qTEhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTBhwQEeiwC7KEKP2RMQ" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTBxwQEeiwC7KEKP2RMQ" target="_S9qTCBwQEeiwC7KEKP2RMQ" source="_S9qTEhwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qTCBwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qTBxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTCRwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTChwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTCxwQEeiwC7KEKP2RMQ" name="Call(Including)">
                <argument xmi:id="_S9qTDBwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSCBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTDRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTDhwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qTDxwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qSCRwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTEBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTERwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qTEhwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qTBRwQEeiwC7KEKP2RMQ _S9qTBxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTExwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTFBwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTFRwQEeiwC7KEKP2RMQ" name="Fork(customers)@587e4a47" incoming="_S9qTBRwQEeiwC7KEKP2RMQ" outgoing="_S9qSCxwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTFhwQEeiwC7KEKP2RMQ" name="ExpressionStatement@5c2a75e8" incoming="_S9qSDBwQEeiwC7KEKP2RMQ" outgoing="_S9qSDxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTFxwQEeiwC7KEKP2RMQ" target="_S9qTKhwQEeiwC7KEKP2RMQ" source="_S9qTHRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTGBwQEeiwC7KEKP2RMQ" target="_S9qTJhwQEeiwC7KEKP2RMQ" source="_S9qTGxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTGRwQEeiwC7KEKP2RMQ" target="_S9qTMBwQEeiwC7KEKP2RMQ" source="_S9qTLRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTGhwQEeiwC7KEKP2RMQ" target="_S9qTIRwQEeiwC7KEKP2RMQ" source="_S9qTGxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTGxwQEeiwC7KEKP2RMQ" name="Tuple@21951ceb" outgoing="_S9qTGBwQEeiwC7KEKP2RMQ _S9qTGhwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qTHBwQEeiwC7KEKP2RMQ" name="Value(2)">
                <result xmi:id="_S9qTHRwQEeiwC7KEKP2RMQ" name="Value(2).result" outgoing="_S9qTFxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTHhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTHxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_S9qTIBwQEeiwC7KEKP2RMQ" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTIRwQEeiwC7KEKP2RMQ" name="Node(Call(ExcludeAt))" incoming="_S9qTGhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTIhwQEeiwC7KEKP2RMQ" target="_S9qTIxwQEeiwC7KEKP2RMQ" source="_S9qTLRwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qTIxwQEeiwC7KEKP2RMQ" name="Output(Call(ExcludeAt).result())" incoming="_S9qTIhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTJBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTJRwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTJhwQEeiwC7KEKP2RMQ" name="Call(ExcludeAt)" incoming="_S9qTGBwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9qTJxwQEeiwC7KEKP2RMQ" name="Call(ExcludeAt).argument(seq)" incoming="_S9qSCxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTKBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTKRwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qTKhwQEeiwC7KEKP2RMQ" name="Call(ExcludeAt).argument(index)" incoming="_S9qTFxwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTKxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTLBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qTLRwQEeiwC7KEKP2RMQ" name="Call(ExcludeAt).result()" outgoing="_S9qTGRwQEeiwC7KEKP2RMQ _S9qTIhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTLhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTLxwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTMBwQEeiwC7KEKP2RMQ" name="Fork(customers)@6cabad07" incoming="_S9qTGRwQEeiwC7KEKP2RMQ" outgoing="_S9qSDRwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTMRwQEeiwC7KEKP2RMQ" name="ExpressionStatement@675b8126" incoming="_S9qSDxwQEeiwC7KEKP2RMQ" outgoing="_S9qSEBwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTMhwQEeiwC7KEKP2RMQ" target="_S9qTQhwQEeiwC7KEKP2RMQ" source="_S9qTPxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTMxwQEeiwC7KEKP2RMQ" name="Node(Call(Excluding))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTNBwQEeiwC7KEKP2RMQ" target="_S9qTNRwQEeiwC7KEKP2RMQ" source="_S9qTPxwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qTNRwQEeiwC7KEKP2RMQ" name="Output(Call(Excluding).result())" incoming="_S9qTNBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTNhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTNxwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTOBwQEeiwC7KEKP2RMQ" name="Call(Excluding)">
                <argument xmi:id="_S9qTORwQEeiwC7KEKP2RMQ" name="Call(Excluding).argument(seq)" incoming="_S9qSDRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTOhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTOxwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qTPBwQEeiwC7KEKP2RMQ" name="Call(Excluding).argument(element)" incoming="_S9qSDhwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTPRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTPhwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qTPxwQEeiwC7KEKP2RMQ" name="Call(Excluding).result()" outgoing="_S9qTMhwQEeiwC7KEKP2RMQ _S9qTNBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTQBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTQRwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Excluding"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTQhwQEeiwC7KEKP2RMQ" name="Fork(customers)@68344fcf" incoming="_S9qTMhwQEeiwC7KEKP2RMQ" outgoing="_S9qSJBwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTQxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@6fcf679f" incoming="_S9qSEBwQEeiwC7KEKP2RMQ" outgoing="_S9qSERwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTRBwQEeiwC7KEKP2RMQ" target="_S9qTRRwQEeiwC7KEKP2RMQ" source="_S9qTURwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTRRwQEeiwC7KEKP2RMQ" name="Fork(m)@197f7131" incoming="_S9qTRBwQEeiwC7KEKP2RMQ" outgoing="_S9qSIhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTRhwQEeiwC7KEKP2RMQ" name="RightHandSide@7cc1bc98">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTRxwQEeiwC7KEKP2RMQ" target="_S9qTVRwQEeiwC7KEKP2RMQ" source="_S9qTTBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTSBwQEeiwC7KEKP2RMQ" target="_S9qTVBwQEeiwC7KEKP2RMQ" source="_S9qTShwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTSRwQEeiwC7KEKP2RMQ" target="_S9qTTxwQEeiwC7KEKP2RMQ" source="_S9qTShwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTShwQEeiwC7KEKP2RMQ" name="Tuple@6ba1fb1e" outgoing="_S9qTSBwQEeiwC7KEKP2RMQ _S9qTSRwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_S9qTSxwQEeiwC7KEKP2RMQ" name="ReadExtent(Customer)" classifier="_S9qUWhwQEeiwC7KEKP2RMQ">
                  <result xmi:id="_S9qTTBwQEeiwC7KEKP2RMQ" name="ReadExtent(Customer).result" outgoing="_S9qTRxwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTTRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTThwQEeiwC7KEKP2RMQ" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTTxwQEeiwC7KEKP2RMQ" name="Node(Call(Size))" incoming="_S9qTSRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTUBwQEeiwC7KEKP2RMQ" target="_S9qTURwQEeiwC7KEKP2RMQ" source="_S9qTWBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qTURwQEeiwC7KEKP2RMQ" name="Output(Call(Size).result())" incoming="_S9qTUBwQEeiwC7KEKP2RMQ" outgoing="_S9qTRBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTUhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTUxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTVBwQEeiwC7KEKP2RMQ" name="Call(Size)" incoming="_S9qTSBwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9qTVRwQEeiwC7KEKP2RMQ" name="Call(Size).argument(seq)" incoming="_S9qTRxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTVhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTVxwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <result xmi:id="_S9qTWBwQEeiwC7KEKP2RMQ" name="Call(Size).result()" outgoing="_S9qTUBwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTWRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTWhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTWxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@3cbc7338" incoming="_S9qSERwQEeiwC7KEKP2RMQ" outgoing="_S9qSEhwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTXBwQEeiwC7KEKP2RMQ" target="_S9qTXRwQEeiwC7KEKP2RMQ" source="_S9qTaRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTXRwQEeiwC7KEKP2RMQ" name="Fork(n)@19221d01" incoming="_S9qTXBwQEeiwC7KEKP2RMQ" outgoing="_S9qSIxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTXhwQEeiwC7KEKP2RMQ" name="RightHandSide@ce79b2a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTXxwQEeiwC7KEKP2RMQ" target="_S9qTbRwQEeiwC7KEKP2RMQ" source="_S9qTZBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTYBwQEeiwC7KEKP2RMQ" target="_S9qTbBwQEeiwC7KEKP2RMQ" source="_S9qTYhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTYRwQEeiwC7KEKP2RMQ" target="_S9qTZxwQEeiwC7KEKP2RMQ" source="_S9qTYhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTYhwQEeiwC7KEKP2RMQ" name="Tuple@3d6dae39" outgoing="_S9qTYBwQEeiwC7KEKP2RMQ _S9qTYRwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_S9qTYxwQEeiwC7KEKP2RMQ" name="ReadExtent(Customer)" classifier="_S9qUWhwQEeiwC7KEKP2RMQ">
                  <result xmi:id="_S9qTZBwQEeiwC7KEKP2RMQ" name="ReadExtent(Customer).result" outgoing="_S9qTXxwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTZRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTZhwQEeiwC7KEKP2RMQ" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTZxwQEeiwC7KEKP2RMQ" name="Node(Call(Size))" incoming="_S9qTYRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTaBwQEeiwC7KEKP2RMQ" target="_S9qTaRwQEeiwC7KEKP2RMQ" source="_S9qTcBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qTaRwQEeiwC7KEKP2RMQ" name="Output(Call(Size).result())" incoming="_S9qTaBwQEeiwC7KEKP2RMQ" outgoing="_S9qTXBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTahwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTaxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTbBwQEeiwC7KEKP2RMQ" name="Call(Size)" incoming="_S9qTYBwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9qTbRwQEeiwC7KEKP2RMQ" name="Call(Size).argument(seq)" incoming="_S9qTXxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTbhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTbxwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <result xmi:id="_S9qTcBwQEeiwC7KEKP2RMQ" name="Call(Size).result()" outgoing="_S9qTaBwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTcRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTchwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTcxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@33901824" incoming="_S9qSEhwQEeiwC7KEKP2RMQ" outgoing="_S9qSFRwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTdBwQEeiwC7KEKP2RMQ" target="_S9qTdRwQEeiwC7KEKP2RMQ" source="_S9qTeBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTdRwQEeiwC7KEKP2RMQ" name="Fork(list)@1fa3d8ba" incoming="_S9qTdBwQEeiwC7KEKP2RMQ" outgoing="_S9qSExwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTdhwQEeiwC7KEKP2RMQ" name="RightHandSide@28148fe">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qTdxwQEeiwC7KEKP2RMQ" name="Value(null)">
                <result xmi:id="_S9qTeBwQEeiwC7KEKP2RMQ" name="Value(null).result" outgoing="_S9qTdBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTeRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTehwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_S9qTexwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTfBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@15539287" incoming="_S9qSFRwQEeiwC7KEKP2RMQ" outgoing="_S9qSGBwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTfRwQEeiwC7KEKP2RMQ" target="_S9qTfhwQEeiwC7KEKP2RMQ" source="_S9qTghwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTfhwQEeiwC7KEKP2RMQ" name="Fork(list)@7b8e5116" incoming="_S9qTfRwQEeiwC7KEKP2RMQ" outgoing="_S9qSFhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTfxwQEeiwC7KEKP2RMQ" name="RightHandSide@3d762245">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTgBwQEeiwC7KEKP2RMQ" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTgRwQEeiwC7KEKP2RMQ" target="_S9qTghwQEeiwC7KEKP2RMQ" source="_S9qTjBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9qTghwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qTgRwQEeiwC7KEKP2RMQ" outgoing="_S9qTfRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTgxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qThBwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qThRwQEeiwC7KEKP2RMQ" name="Call(Including)">
                  <argument xmi:id="_S9qThhwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSExwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qThxwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTiBwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <argument xmi:id="_S9qTiRwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qSFBwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTihwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTixwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9qTjBwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qTgRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTjRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTjhwQEeiwC7KEKP2RMQ" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTjxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@3336f309" incoming="_S9qSGBwQEeiwC7KEKP2RMQ" outgoing="_S9qSGhwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTkBwQEeiwC7KEKP2RMQ" target="_S9qToBwQEeiwC7KEKP2RMQ" source="_S9qTnRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTkRwQEeiwC7KEKP2RMQ" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTkhwQEeiwC7KEKP2RMQ" target="_S9qTkxwQEeiwC7KEKP2RMQ" source="_S9qTnRwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qTkxwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qTkhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTlBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTlRwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTlhwQEeiwC7KEKP2RMQ" name="Call(Including)">
                <argument xmi:id="_S9qTlxwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSFhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTmBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTmRwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qTmhwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qSFxwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTmxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTnBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qTnRwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qTkBwQEeiwC7KEKP2RMQ _S9qTkhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTnhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTnxwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qToBwQEeiwC7KEKP2RMQ" name="Fork(list)@5cba9039" incoming="_S9qTkBwQEeiwC7KEKP2RMQ" outgoing="_S9qSGRwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qToRwQEeiwC7KEKP2RMQ" name="ExpressionStatement@323b0f40" incoming="_S9qSGhwQEeiwC7KEKP2RMQ" outgoing="_S9qSHBwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTohwQEeiwC7KEKP2RMQ" target="_S9qTtRwQEeiwC7KEKP2RMQ" source="_S9qTqBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qToxwQEeiwC7KEKP2RMQ" target="_S9qTsRwQEeiwC7KEKP2RMQ" source="_S9qTphwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTpBwQEeiwC7KEKP2RMQ" target="_S9qTuxwQEeiwC7KEKP2RMQ" source="_S9qTuBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTpRwQEeiwC7KEKP2RMQ" target="_S9qTrBwQEeiwC7KEKP2RMQ" source="_S9qTphwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTphwQEeiwC7KEKP2RMQ" name="Tuple@54a7ecf" outgoing="_S9qToxwQEeiwC7KEKP2RMQ _S9qTpRwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qTpxwQEeiwC7KEKP2RMQ" name="Value(&quot;Blah&quot;)">
                <result xmi:id="_S9qTqBwQEeiwC7KEKP2RMQ" name="Value(&quot;Blah&quot;).result" outgoing="_S9qTohwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTqRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTqhwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S9qTqxwQEeiwC7KEKP2RMQ" value="Blah">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTrBwQEeiwC7KEKP2RMQ" name="Node(Call(Including))" incoming="_S9qTpRwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTrRwQEeiwC7KEKP2RMQ" target="_S9qTrhwQEeiwC7KEKP2RMQ" source="_S9qTuBwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qTrhwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qTrRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTrxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTsBwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTsRwQEeiwC7KEKP2RMQ" name="Call(Including)" incoming="_S9qToxwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9qTshwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTsxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTtBwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qTtRwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qTohwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTthwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTtxwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qTuBwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qTpBwQEeiwC7KEKP2RMQ _S9qTrRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTuRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTuhwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qTuxwQEeiwC7KEKP2RMQ" name="Fork(list)@6d833e44" incoming="_S9qTpBwQEeiwC7KEKP2RMQ" outgoing="_S9qSGxwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTvBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@6072d810" incoming="_S9qSHBwQEeiwC7KEKP2RMQ" outgoing="_S9qSHxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTvRwQEeiwC7KEKP2RMQ" target="_S9qT0BwQEeiwC7KEKP2RMQ" source="_S9qTwxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTvhwQEeiwC7KEKP2RMQ" target="_S9qTzBwQEeiwC7KEKP2RMQ" source="_S9qTwRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTvxwQEeiwC7KEKP2RMQ" target="_S9qT1hwQEeiwC7KEKP2RMQ" source="_S9qT0xwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qTwBwQEeiwC7KEKP2RMQ" target="_S9qTxxwQEeiwC7KEKP2RMQ" source="_S9qTwRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTwRwQEeiwC7KEKP2RMQ" name="Tuple@5f102e6e" outgoing="_S9qTvhwQEeiwC7KEKP2RMQ _S9qTwBwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qTwhwQEeiwC7KEKP2RMQ" name="Value(1)">
                <result xmi:id="_S9qTwxwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9qTvRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTxBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTxRwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_S9qTxhwQEeiwC7KEKP2RMQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qTxxwQEeiwC7KEKP2RMQ" name="Node(Call(Including))" incoming="_S9qTwBwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qTyBwQEeiwC7KEKP2RMQ" target="_S9qTyRwQEeiwC7KEKP2RMQ" source="_S9qT0xwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qTyRwQEeiwC7KEKP2RMQ" name="Output(Call(Including).result())" incoming="_S9qTyBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTyhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTyxwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qTzBwQEeiwC7KEKP2RMQ" name="Call(Including)" incoming="_S9qTvhwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9qTzRwQEeiwC7KEKP2RMQ" name="Call(Including).argument(seq)" incoming="_S9qSGxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qTzhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qTzxwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qT0BwQEeiwC7KEKP2RMQ" name="Call(Including).argument(element)" incoming="_S9qTvRwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT0RwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT0hwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9qT0xwQEeiwC7KEKP2RMQ" name="Call(Including).result()" outgoing="_S9qTvxwQEeiwC7KEKP2RMQ _S9qTyBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT1BwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT1RwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qT1hwQEeiwC7KEKP2RMQ" name="Fork(list)@7ee3f0d3" incoming="_S9qTvxwQEeiwC7KEKP2RMQ" outgoing="_S9qSHRwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qT1xwQEeiwC7KEKP2RMQ" name="ExpressionStatement@5ae73093" incoming="_S9qSHxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT2BwQEeiwC7KEKP2RMQ" target="_S9qT6BwQEeiwC7KEKP2RMQ" source="_S9qT5RwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qT2RwQEeiwC7KEKP2RMQ" name="Node(Call(Difference))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT2hwQEeiwC7KEKP2RMQ" target="_S9qT2xwQEeiwC7KEKP2RMQ" source="_S9qT5RwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9qT2xwQEeiwC7KEKP2RMQ" name="Output(Call(Difference).result())" incoming="_S9qT2hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT3BwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT3RwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qT3hwQEeiwC7KEKP2RMQ" name="Call(Difference)">
                <argument xmi:id="_S9qT3xwQEeiwC7KEKP2RMQ" name="Call(Difference).argument(seq1)" incoming="_S9qSHRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT4BwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT4RwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <argument xmi:id="_S9qT4hwQEeiwC7KEKP2RMQ" name="Call(Difference).argument(seq2)" incoming="_S9qSHhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT4xwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT5BwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <result xmi:id="_S9qT5RwQEeiwC7KEKP2RMQ" name="Call(Difference).result()" outgoing="_S9qT2BwQEeiwC7KEKP2RMQ _S9qT2hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT5hwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT5xwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Difference"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qT6BwQEeiwC7KEKP2RMQ" name="Fork(list)@4e1bbf85" incoming="_S9qT2BwQEeiwC7KEKP2RMQ" outgoing="_S9qSJRwQEeiwC7KEKP2RMQ"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qR9BwQEeiwC7KEKP2RMQ" name="Output(notEmpty)" incoming="_S9psXxwQEeiwC7KEKP2RMQ" parameter="_S9psTRwQEeiwC7KEKP2RMQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qR9RwQEeiwC7KEKP2RMQ" name="Output(includes)" incoming="_S9psYBwQEeiwC7KEKP2RMQ" parameter="_S9psUBwQEeiwC7KEKP2RMQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qR9hwQEeiwC7KEKP2RMQ" name="Output(m)" incoming="_S9qR8BwQEeiwC7KEKP2RMQ" parameter="_S9psUxwQEeiwC7KEKP2RMQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qR9xwQEeiwC7KEKP2RMQ" name="Output(n)" incoming="_S9qR8RwQEeiwC7KEKP2RMQ" parameter="_S9psVhwQEeiwC7KEKP2RMQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qR-BwQEeiwC7KEKP2RMQ" name="Output(customers)" incoming="_S9qR8hwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" parameter="_S9psWRwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qR-RwQEeiwC7KEKP2RMQ" name="Output(list)" incoming="_S9qR8xwQEeiwC7KEKP2RMQ" parameter="_S9psXBwQEeiwC7KEKP2RMQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qT6RwQEeiwC7KEKP2RMQ" name="destroy$method$1" visibility="private" specification="_S9qUWRwQEeiwC7KEKP2RMQ" node="_S9qT6hwQEeiwC7KEKP2RMQ" group="_S9qT6hwQEeiwC7KEKP2RMQ">
        <structuredNode xmi:id="_S9qT6hwQEeiwC7KEKP2RMQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qT6xwQEeiwC7KEKP2RMQ" name="Expressions_Sequence_Operation$initialization$1" visibility="private" specification="_S9qUOhwQEeiwC7KEKP2RMQ" node="_S9qT7BwQEeiwC7KEKP2RMQ" group="_S9qT7BwQEeiwC7KEKP2RMQ">
        <structuredNode xmi:id="_S9qT7BwQEeiwC7KEKP2RMQ" name="Body(Expressions_Sequence_Operation$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT7RwQEeiwC7KEKP2RMQ" target="_S9qT_BwQEeiwC7KEKP2RMQ" source="_S9qT-RwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT7hwQEeiwC7KEKP2RMQ" target="_S9qUABwQEeiwC7KEKP2RMQ" source="_S9qT_BwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT7xwQEeiwC7KEKP2RMQ" target="_S9qUDRwQEeiwC7KEKP2RMQ" source="_S9qT_BwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT8BwQEeiwC7KEKP2RMQ" target="_S9qUHBwQEeiwC7KEKP2RMQ" source="_S9qT_BwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT8RwQEeiwC7KEKP2RMQ" target="_S9qUIxwQEeiwC7KEKP2RMQ" source="_S9qUHxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT8hwQEeiwC7KEKP2RMQ" target="_S9qULxwQEeiwC7KEKP2RMQ" source="_S9qUJhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT8xwQEeiwC7KEKP2RMQ" target="_S9qUNRwQEeiwC7KEKP2RMQ" source="_S9qUKhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qT9BwQEeiwC7KEKP2RMQ" target="_S9qUORwQEeiwC7KEKP2RMQ" source="_S9qUOBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qT9RwQEeiwC7KEKP2RMQ" target="_S9qUORwQEeiwC7KEKP2RMQ" source="_S9qUMhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qT9hwQEeiwC7KEKP2RMQ" target="_S9qT_RwQEeiwC7KEKP2RMQ" source="_S9qUORwQEeiwC7KEKP2RMQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9qT9xwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qT-BwQEeiwC7KEKP2RMQ" name="ReadSelf">
            <result xmi:id="_S9qT-RwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qT7RwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qT-hwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qT-xwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9qT_BwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qT7RwQEeiwC7KEKP2RMQ" outgoing="_S9qT7hwQEeiwC7KEKP2RMQ _S9qT7xwQEeiwC7KEKP2RMQ _S9qT8BwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qT_RwQEeiwC7KEKP2RMQ" name="Initialization" incoming="_S9qT9hwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qT_hwQEeiwC7KEKP2RMQ" target="_S9qUAxwQEeiwC7KEKP2RMQ" source="_S9qT_xwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S9qT_xwQEeiwC7KEKP2RMQ" name="Call(Test$initialization$1)" outgoing="_S9qT_hwQEeiwC7KEKP2RMQ" operation="_S9qWHRwQEeiwC7KEKP2RMQ">
              <target xmi:id="_S9qUABwQEeiwC7KEKP2RMQ" name="Call(Test$initialization$1).target" incoming="_S9qT7hwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUARwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUAhwQEeiwC7KEKP2RMQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qUAxwQEeiwC7KEKP2RMQ" name="Set(initializationFlag)" incoming="_S9qT_hwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUBBwQEeiwC7KEKP2RMQ" target="_S9qUGhwQEeiwC7KEKP2RMQ" source="_S9qUBhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qUBRwQEeiwC7KEKP2RMQ" name="Value(true)">
                <result xmi:id="_S9qUBhwQEeiwC7KEKP2RMQ" name="Value(true).result" outgoing="_S9qUBBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUBxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUCBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_S9qUCRwQEeiwC7KEKP2RMQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_S9qUChwQEeiwC7KEKP2RMQ" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1))" inputElement="_S9qUGhwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUCxwQEeiwC7KEKP2RMQ" target="_S9qUFxwQEeiwC7KEKP2RMQ" source="_S9qUGhwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUDBwQEeiwC7KEKP2RMQ" target="_S9qUERwQEeiwC7KEKP2RMQ" source="_S9qUDRwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9qUDRwQEeiwC7KEKP2RMQ" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_S9qT7xwQEeiwC7KEKP2RMQ" outgoing="_S9qUDBwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUDhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUDxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S9qUEBwQEeiwC7KEKP2RMQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_S9pq6BwQEeiwC7KEKP2RMQ">
                  <object xmi:id="_S9qUERwQEeiwC7KEKP2RMQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_S9qUDBwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUEhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUExwQEeiwC7KEKP2RMQ" value="1"/>
                  </object>
                  <result xmi:id="_S9qUFBwQEeiwC7KEKP2RMQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1).result" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUFRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUFhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:id="_S9qUFxwQEeiwC7KEKP2RMQ" name="Write(Expressions_Sequence_Operation$initializationFlag$1).value" incoming="_S9qUCxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUGBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUGRwQEeiwC7KEKP2RMQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_S9qUGhwQEeiwC7KEKP2RMQ" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).inputElement" incoming="_S9qUBBwQEeiwC7KEKP2RMQ" outgoing="_S9qUCxwQEeiwC7KEKP2RMQ" regionAsInput="_S9qUChwQEeiwC7KEKP2RMQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qUGxwQEeiwC7KEKP2RMQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_S9pq6BwQEeiwC7KEKP2RMQ">
            <object xmi:id="_S9qUHBwQEeiwC7KEKP2RMQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_S9qT8BwQEeiwC7KEKP2RMQ" type="_S9pq4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUHRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUHhwQEeiwC7KEKP2RMQ" value="1"/>
            </object>
            <result xmi:id="_S9qUHxwQEeiwC7KEKP2RMQ" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_S9qT8RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUIBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUIRwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qUIhwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
            <argument xmi:id="_S9qUIxwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9qT8RwQEeiwC7KEKP2RMQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUJBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUJRwQEeiwC7KEKP2RMQ" value="*"/>
            </argument>
            <result xmi:id="_S9qUJhwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9qT8hwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUJxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUKBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qUKRwQEeiwC7KEKP2RMQ" name="Value(0)">
            <result xmi:id="_S9qUKhwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9qT8xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUKxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qULBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_S9qULRwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S9qULhwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
            <first xmi:id="_S9qULxwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9qT8hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUMBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUMRwQEeiwC7KEKP2RMQ" value="1"/>
            </first>
            <result xmi:id="_S9qUMhwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9qT9RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUMxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUNBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <second xmi:id="_S9qUNRwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9qT8xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUNhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUNxwQEeiwC7KEKP2RMQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S9qUOBwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9qT9BwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S9qUORwQEeiwC7KEKP2RMQ" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_S9qT9BwQEeiwC7KEKP2RMQ _S9qT9RwQEeiwC7KEKP2RMQ" outgoing="_S9qT9hwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9qT9RwQEeiwC7KEKP2RMQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_S9qUOhwQEeiwC7KEKP2RMQ" name="Expressions_Sequence_Operation$initialization$1" visibility="protected" method="_S9qT6xwQEeiwC7KEKP2RMQ"/>
      <ownedOperation xmi:id="_S9qUOxwQEeiwC7KEKP2RMQ" name="Expressions_Sequence_Operation" visibility="public" method="_S9pq6xwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qUPBwQEeiwC7KEKP2RMQ" name="" visibility="package" type="_S9pq4RwQEeiwC7KEKP2RMQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUPRwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUPhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_S9qUPxwQEeiwC7KEKP2RMQ" name="run" visibility="public" method="_S9prGxwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qUQBwQEeiwC7KEKP2RMQ" name="tester" visibility="package" type="_S9qWKxwQEeiwC7KEKP2RMQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUQRwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUQhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qUQxwQEeiwC7KEKP2RMQ" name="" visibility="package" type="_S9pq4RwQEeiwC7KEKP2RMQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qURBwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qURRwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_S9qURhwQEeiwC7KEKP2RMQ" name="test" visibility="package" method="_S9psTBwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qURxwQEeiwC7KEKP2RMQ" name="notEmpty" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUSBwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUSRwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qUShwQEeiwC7KEKP2RMQ" name="includes" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUSxwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUTBwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qUTRwQEeiwC7KEKP2RMQ" name="m" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUThwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUTxwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qUUBwQEeiwC7KEKP2RMQ" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUURwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUUhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qUUxwQEeiwC7KEKP2RMQ" name="customers" visibility="package" type="_S9qUWhwQEeiwC7KEKP2RMQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUVBwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUVRwQEeiwC7KEKP2RMQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qUVhwQEeiwC7KEKP2RMQ" name="list" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUVxwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUWBwQEeiwC7KEKP2RMQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_S9qUWRwQEeiwC7KEKP2RMQ" name="destroy" visibility="public" method="_S9qT6RwQEeiwC7KEKP2RMQ" redefinedOperation="_S9qWHhwQEeiwC7KEKP2RMQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_S9qUWhwQEeiwC7KEKP2RMQ" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_S9qUWxwQEeiwC7KEKP2RMQ" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUXBwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUXRwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_S9qUXhwQEeiwC7KEKP2RMQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUXxwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUYBwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qUYRwQEeiwC7KEKP2RMQ" name="Customer$method$1" visibility="private" specification="_S9qVERwQEeiwC7KEKP2RMQ" node="_S9qUaxwQEeiwC7KEKP2RMQ _S9qUbBwQEeiwC7KEKP2RMQ _S9qUbRwQEeiwC7KEKP2RMQ _S9qUbhwQEeiwC7KEKP2RMQ" group="_S9qUbhwQEeiwC7KEKP2RMQ">
          <ownedParameter xmi:id="_S9qUYhwQEeiwC7KEKP2RMQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUYxwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUZBwQEeiwC7KEKP2RMQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_S9qUZRwQEeiwC7KEKP2RMQ" name="" type="_S9qUWhwQEeiwC7KEKP2RMQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUZhwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUZxwQEeiwC7KEKP2RMQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUaBwQEeiwC7KEKP2RMQ" target="_S9qUbBwQEeiwC7KEKP2RMQ" source="_S9qUaxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUaRwQEeiwC7KEKP2RMQ" target="_S9qUjBwQEeiwC7KEKP2RMQ" source="_S9qUbBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUahwQEeiwC7KEKP2RMQ" target="_S9qUbRwQEeiwC7KEKP2RMQ" source="_S9qUoRwQEeiwC7KEKP2RMQ"/>
          <structuredNode xmi:id="_S9qUbhwQEeiwC7KEKP2RMQ" name="Body(Customer$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUbxwQEeiwC7KEKP2RMQ" target="_S9qUoRwQEeiwC7KEKP2RMQ" source="_S9qUnhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUcBwQEeiwC7KEKP2RMQ" target="_S9qUoxwQEeiwC7KEKP2RMQ" source="_S9qUoRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qUcRwQEeiwC7KEKP2RMQ" target="_S9qUehwQEeiwC7KEKP2RMQ" source="_S9qUohwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUchwQEeiwC7KEKP2RMQ" target="_S9qUpxwQEeiwC7KEKP2RMQ" source="_S9qUoRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUcxwQEeiwC7KEKP2RMQ" target="_S9qUrhwQEeiwC7KEKP2RMQ" source="_S9qUqhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUdBwQEeiwC7KEKP2RMQ" target="_S9qUuhwQEeiwC7KEKP2RMQ" source="_S9qUsRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUdRwQEeiwC7KEKP2RMQ" target="_S9qUwBwQEeiwC7KEKP2RMQ" source="_S9qUtRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qUdhwQEeiwC7KEKP2RMQ" target="_S9qUxBwQEeiwC7KEKP2RMQ" source="_S9qUwxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUdxwQEeiwC7KEKP2RMQ" target="_S9qUxBwQEeiwC7KEKP2RMQ" source="_S9qUvRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qUeBwQEeiwC7KEKP2RMQ" target="_S9qUohwQEeiwC7KEKP2RMQ" source="_S9qUxBwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9qUeRwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qUehwQEeiwC7KEKP2RMQ" name="Body" incoming="_S9qUcRwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qUexwQEeiwC7KEKP2RMQ" name="ExpressionStatement@4a992ce8">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUfBwQEeiwC7KEKP2RMQ" target="_S9qUhhwQEeiwC7KEKP2RMQ" source="_S9qUghwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUfRwQEeiwC7KEKP2RMQ" target="_S9qUjxwQEeiwC7KEKP2RMQ" source="_S9qUjBwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUfhwQEeiwC7KEKP2RMQ" target="_S9qUkxwQEeiwC7KEKP2RMQ" source="_S9qUiRwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9qUfxwQEeiwC7KEKP2RMQ" target="_S9qUgBwQEeiwC7KEKP2RMQ" source="_S9qUnBwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qUgBwQEeiwC7KEKP2RMQ" name="Expression(LeftHandSide@d9a4ba5)" incoming="_S9qUfxwQEeiwC7KEKP2RMQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qUgRwQEeiwC7KEKP2RMQ" name="ReadSelf">
                    <result xmi:id="_S9qUghwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qUfBwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUgxwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUhBwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S9qUhRwQEeiwC7KEKP2RMQ" name="Clear(name)" structuralFeature="_S9qUXhwQEeiwC7KEKP2RMQ">
                  <object xmi:id="_S9qUhhwQEeiwC7KEKP2RMQ" name="Clear(name).object" incoming="_S9qUfBwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUhxwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUiBwQEeiwC7KEKP2RMQ" value="1"/>
                  </object>
                  <result xmi:id="_S9qUiRwQEeiwC7KEKP2RMQ" name="Clear(name).result" outgoing="_S9qUfhwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUihwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUixwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S9qUjBwQEeiwC7KEKP2RMQ" name="Fork(LeftHandSide@d9a4ba5)" incoming="_S9qUaRwQEeiwC7KEKP2RMQ" outgoing="_S9qUfRwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qUjRwQEeiwC7KEKP2RMQ" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUjhwQEeiwC7KEKP2RMQ" target="_S9qUmRwQEeiwC7KEKP2RMQ" source="_S9qUjxwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeInput xmi:id="_S9qUjxwQEeiwC7KEKP2RMQ" name="WriteAll(Customer::name).input(Customer::name)" incoming="_S9qUfRwQEeiwC7KEKP2RMQ" outgoing="_S9qUjhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUkBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUkRwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S9qUkhwQEeiwC7KEKP2RMQ" name="Write(name)" structuralFeature="_S9qUXhwQEeiwC7KEKP2RMQ" isReplaceAll="true">
                    <object xmi:id="_S9qUkxwQEeiwC7KEKP2RMQ" name="Write(name).object" incoming="_S9qUfhwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUlBwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUlRwQEeiwC7KEKP2RMQ" value="1"/>
                    </object>
                    <result xmi:id="_S9qUlhwQEeiwC7KEKP2RMQ" name="Write(name).result" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUlxwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUmBwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:id="_S9qUmRwQEeiwC7KEKP2RMQ" name="Write(name).value" incoming="_S9qUjhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUmhwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUmxwQEeiwC7KEKP2RMQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qUnBwQEeiwC7KEKP2RMQ" name="RightHandSide@3c615880" outgoing="_S9qUfxwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qUnRwQEeiwC7KEKP2RMQ" name="ReadSelf">
              <result xmi:id="_S9qUnhwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qUbxwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUnxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUoBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qUoRwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qUbxwQEeiwC7KEKP2RMQ" outgoing="_S9qUahwQEeiwC7KEKP2RMQ _S9qUcBwQEeiwC7KEKP2RMQ _S9qUchwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S9qUohwQEeiwC7KEKP2RMQ" name="Call(Customer$initialization$1)" incoming="_S9qUeBwQEeiwC7KEKP2RMQ" outgoing="_S9qUcRwQEeiwC7KEKP2RMQ" operation="_S9qVEBwQEeiwC7KEKP2RMQ">
              <target xmi:id="_S9qUoxwQEeiwC7KEKP2RMQ" name="Call(Customer$initialization$1).target" incoming="_S9qUcBwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUpBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUpRwQEeiwC7KEKP2RMQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qUphwQEeiwC7KEKP2RMQ" name="Read(Customer$initializationFlag$1)" structuralFeature="_S9qUWxwQEeiwC7KEKP2RMQ">
              <object xmi:id="_S9qUpxwQEeiwC7KEKP2RMQ" name="Read(Customer$initializationFlag$1).object" incoming="_S9qUchwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUqBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUqRwQEeiwC7KEKP2RMQ" value="1"/>
              </object>
              <result xmi:id="_S9qUqhwQEeiwC7KEKP2RMQ" name="Read(Customer$initializationFlag$1).result" outgoing="_S9qUcxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUqxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUrBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qUrRwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
              <argument xmi:id="_S9qUrhwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9qUcxwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUrxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUsBwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9qUsRwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9qUdBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUshwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUsxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qUtBwQEeiwC7KEKP2RMQ" name="Value(0)">
              <result xmi:id="_S9qUtRwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9qUdRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUthwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUtxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9qUuBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9qUuRwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
              <first xmi:id="_S9qUuhwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9qUdBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUuxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUvBwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9qUvRwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9qUdxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUvhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUvxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9qUwBwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9qUdRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qUwRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qUwhwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S9qUwxwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9qUdhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9qUxBwQEeiwC7KEKP2RMQ" name="Decision(Test(Customer$initializationFlag$1))" incoming="_S9qUdhwQEeiwC7KEKP2RMQ _S9qUdxwQEeiwC7KEKP2RMQ" outgoing="_S9qUeBwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9qUdxwQEeiwC7KEKP2RMQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qUaxwQEeiwC7KEKP2RMQ" name="Input(name)" outgoing="_S9qUaBwQEeiwC7KEKP2RMQ" parameter="_S9qUYhwQEeiwC7KEKP2RMQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9qUbBwQEeiwC7KEKP2RMQ" name="Fork(name)" incoming="_S9qUaBwQEeiwC7KEKP2RMQ" outgoing="_S9qUaRwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qUbRwQEeiwC7KEKP2RMQ" name="Return" incoming="_S9qUahwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" parameter="_S9qUZRwQEeiwC7KEKP2RMQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qUxRwQEeiwC7KEKP2RMQ" name="destroy$method$1" visibility="private" specification="_S9qVGBwQEeiwC7KEKP2RMQ" node="_S9qUxhwQEeiwC7KEKP2RMQ" group="_S9qUxhwQEeiwC7KEKP2RMQ">
          <structuredNode xmi:id="_S9qUxhwQEeiwC7KEKP2RMQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qUxxwQEeiwC7KEKP2RMQ" name="Customer$initialization$1" visibility="private" specification="_S9qVEBwQEeiwC7KEKP2RMQ" node="_S9qUyBwQEeiwC7KEKP2RMQ" group="_S9qUyBwQEeiwC7KEKP2RMQ">
          <structuredNode xmi:id="_S9qUyBwQEeiwC7KEKP2RMQ" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUyRwQEeiwC7KEKP2RMQ" target="_S9qU1xwQEeiwC7KEKP2RMQ" source="_S9qU1BwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUyhwQEeiwC7KEKP2RMQ" target="_S9qU4xwQEeiwC7KEKP2RMQ" source="_S9qU1xwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUyxwQEeiwC7KEKP2RMQ" target="_S9qU8hwQEeiwC7KEKP2RMQ" source="_S9qU1xwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUzBwQEeiwC7KEKP2RMQ" target="_S9qU-RwQEeiwC7KEKP2RMQ" source="_S9qU9RwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUzRwQEeiwC7KEKP2RMQ" target="_S9qVBRwQEeiwC7KEKP2RMQ" source="_S9qU_BwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qUzhwQEeiwC7KEKP2RMQ" target="_S9qVCxwQEeiwC7KEKP2RMQ" source="_S9qVABwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qUzxwQEeiwC7KEKP2RMQ" target="_S9qVDxwQEeiwC7KEKP2RMQ" source="_S9qVDhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qU0BwQEeiwC7KEKP2RMQ" target="_S9qVDxwQEeiwC7KEKP2RMQ" source="_S9qVCBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qU0RwQEeiwC7KEKP2RMQ" target="_S9qU2BwQEeiwC7KEKP2RMQ" source="_S9qVDxwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9qU0hwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qU0xwQEeiwC7KEKP2RMQ" name="ReadSelf">
              <result xmi:id="_S9qU1BwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qUyRwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU1RwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU1hwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qU1xwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qUyRwQEeiwC7KEKP2RMQ" outgoing="_S9qUyhwQEeiwC7KEKP2RMQ _S9qUyxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qU2BwQEeiwC7KEKP2RMQ" name="Initialization" incoming="_S9qU0RwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qU2RwQEeiwC7KEKP2RMQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qU2hwQEeiwC7KEKP2RMQ" target="_S9qU8BwQEeiwC7KEKP2RMQ" source="_S9qU3BwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qU2xwQEeiwC7KEKP2RMQ" name="Value(true)">
                  <result xmi:id="_S9qU3BwQEeiwC7KEKP2RMQ" name="Value(true).result" outgoing="_S9qU2hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU3RwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU3hwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_S9qU3xwQEeiwC7KEKP2RMQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_S9qU4BwQEeiwC7KEKP2RMQ" name="Iterate(Write(Customer$initializationFlag$1))" inputElement="_S9qU8BwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qU4RwQEeiwC7KEKP2RMQ" target="_S9qU7RwQEeiwC7KEKP2RMQ" source="_S9qU8BwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qU4hwQEeiwC7KEKP2RMQ" target="_S9qU5xwQEeiwC7KEKP2RMQ" source="_S9qU4xwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeInput xmi:id="_S9qU4xwQEeiwC7KEKP2RMQ" name="Iterate(Write(Customer$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_S9qUyhwQEeiwC7KEKP2RMQ" outgoing="_S9qU4hwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU5BwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU5RwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S9qU5hwQEeiwC7KEKP2RMQ" name="Write(Customer$initializationFlag$1)" structuralFeature="_S9qUWxwQEeiwC7KEKP2RMQ">
                    <object xmi:id="_S9qU5xwQEeiwC7KEKP2RMQ" name="Write(Customer$initializationFlag$1).object" incoming="_S9qU4hwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU6BwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU6RwQEeiwC7KEKP2RMQ" value="1"/>
                    </object>
                    <result xmi:id="_S9qU6hwQEeiwC7KEKP2RMQ" name="Write(Customer$initializationFlag$1).result" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU6xwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU7BwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:id="_S9qU7RwQEeiwC7KEKP2RMQ" name="Write(Customer$initializationFlag$1).value" incoming="_S9qU4RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU7hwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU7xwQEeiwC7KEKP2RMQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_S9qU8BwQEeiwC7KEKP2RMQ" name="Iterate(Write(Customer$initializationFlag$1)).inputElement" incoming="_S9qU2hwQEeiwC7KEKP2RMQ" outgoing="_S9qU4RwQEeiwC7KEKP2RMQ" regionAsInput="_S9qU4BwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qU8RwQEeiwC7KEKP2RMQ" name="Read(Customer$initializationFlag$1)" structuralFeature="_S9qUWxwQEeiwC7KEKP2RMQ">
              <object xmi:id="_S9qU8hwQEeiwC7KEKP2RMQ" name="Read(Customer$initializationFlag$1).object" incoming="_S9qUyxwQEeiwC7KEKP2RMQ" type="_S9qUWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU8xwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU9BwQEeiwC7KEKP2RMQ" value="1"/>
              </object>
              <result xmi:id="_S9qU9RwQEeiwC7KEKP2RMQ" name="Read(Customer$initializationFlag$1).result" outgoing="_S9qUzBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU9hwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU9xwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qU-BwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
              <argument xmi:id="_S9qU-RwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9qUzBwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU-hwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU-xwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9qU_BwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9qUzRwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qU_RwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qU_hwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qU_xwQEeiwC7KEKP2RMQ" name="Value(0)">
              <result xmi:id="_S9qVABwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9qUzhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVARwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVAhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9qVAxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9qVBBwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
              <first xmi:id="_S9qVBRwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9qUzRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVBhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVBxwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9qVCBwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9qU0BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVCRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVChwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9qVCxwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9qUzhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVDBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVDRwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S9qVDhwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9qUzxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9qVDxwQEeiwC7KEKP2RMQ" name="Decision(Test(Customer$initializationFlag$1))" incoming="_S9qUzxwQEeiwC7KEKP2RMQ _S9qU0BwQEeiwC7KEKP2RMQ" outgoing="_S9qU0RwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9qU0BwQEeiwC7KEKP2RMQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_S9qVEBwQEeiwC7KEKP2RMQ" name="Customer$initialization$1" visibility="protected" method="_S9qUxxwQEeiwC7KEKP2RMQ"/>
        <ownedOperation xmi:id="_S9qVERwQEeiwC7KEKP2RMQ" name="Customer" visibility="public" method="_S9qUYRwQEeiwC7KEKP2RMQ">
          <ownedParameter xmi:id="_S9qVEhwQEeiwC7KEKP2RMQ" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVExwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVFBwQEeiwC7KEKP2RMQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_S9qVFRwQEeiwC7KEKP2RMQ" name="" visibility="package" type="_S9qUWhwQEeiwC7KEKP2RMQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVFhwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVFxwQEeiwC7KEKP2RMQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_S9qVGBwQEeiwC7KEKP2RMQ" name="destroy" visibility="public" method="_S9qUxRwQEeiwC7KEKP2RMQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S9qVGRwQEeiwC7KEKP2RMQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_S9qVGhwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9qVGxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9qVHBwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9qVHRwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9qVHhwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_S9qVHxwQEeiwC7KEKP2RMQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVIBwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVIRwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_S9qVIhwQEeiwC7KEKP2RMQ" name="tester" visibility="private" type="_S9qWKxwQEeiwC7KEKP2RMQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVIxwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVJBwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qVJRwQEeiwC7KEKP2RMQ" name="destroy$method$1" visibility="private" specification="_S9qWHhwQEeiwC7KEKP2RMQ" node="_S9qVJhwQEeiwC7KEKP2RMQ" group="_S9qVJhwQEeiwC7KEKP2RMQ">
        <structuredNode xmi:id="_S9qVJhwQEeiwC7KEKP2RMQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qVJxwQEeiwC7KEKP2RMQ" name="done$method$1" visibility="private" specification="_S9qWHxwQEeiwC7KEKP2RMQ" node="_S9qVKBwQEeiwC7KEKP2RMQ" group="_S9qVKBwQEeiwC7KEKP2RMQ">
        <structuredNode xmi:id="_S9qVKBwQEeiwC7KEKP2RMQ" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVKRwQEeiwC7KEKP2RMQ" name="ExpressionStatement@2317fa8e">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVKhwQEeiwC7KEKP2RMQ" target="_S9qVLhwQEeiwC7KEKP2RMQ" source="_S9qVNhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVKxwQEeiwC7KEKP2RMQ" target="_S9qVLRwQEeiwC7KEKP2RMQ" source="_S9qVNBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVLBwQEeiwC7KEKP2RMQ" target="_S9qVMRwQEeiwC7KEKP2RMQ" source="_S9qVOxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S9qVLRwQEeiwC7KEKP2RMQ" name="Call(done)" incoming="_S9qVKxwQEeiwC7KEKP2RMQ" operation="_S9qWJxwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9qVLhwQEeiwC7KEKP2RMQ" name="Call(done).argument(message)" incoming="_S9qVKhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVLxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVMBwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <target xmi:id="_S9qVMRwQEeiwC7KEKP2RMQ" name="Call(done).target" incoming="_S9qVLBwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVMhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVMxwQEeiwC7KEKP2RMQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVNBwQEeiwC7KEKP2RMQ" name="Tuple@53c166cc" outgoing="_S9qVKxwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qVNRwQEeiwC7KEKP2RMQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_S9qVNhwQEeiwC7KEKP2RMQ" name="Value(&quot;Done.&quot;).result" outgoing="_S9qVKhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVNxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVOBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S9qVORwQEeiwC7KEKP2RMQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qVOhwQEeiwC7KEKP2RMQ" name="ReadSelf">
              <result xmi:id="_S9qVOxwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qVLBwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVPBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVPRwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qVPhwQEeiwC7KEKP2RMQ" name="Test$method$1" visibility="private" specification="_S9qWIBwQEeiwC7KEKP2RMQ" node="_S9qVSBwQEeiwC7KEKP2RMQ _S9qVSRwQEeiwC7KEKP2RMQ _S9qVShwQEeiwC7KEKP2RMQ _S9qVSxwQEeiwC7KEKP2RMQ" group="_S9qVSxwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qVPxwQEeiwC7KEKP2RMQ" name="tester" type="_S9qWKxwQEeiwC7KEKP2RMQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVQBwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVQRwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qVQhwQEeiwC7KEKP2RMQ" name="" type="_S9qVGRwQEeiwC7KEKP2RMQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVQxwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVRBwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVRRwQEeiwC7KEKP2RMQ" target="_S9qVSRwQEeiwC7KEKP2RMQ" source="_S9qVSBwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVRhwQEeiwC7KEKP2RMQ" target="_S9qVaRwQEeiwC7KEKP2RMQ" source="_S9qVSRwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVRxwQEeiwC7KEKP2RMQ" target="_S9qVShwQEeiwC7KEKP2RMQ" source="_S9qVhRwQEeiwC7KEKP2RMQ"/>
        <structuredNode xmi:id="_S9qVSxwQEeiwC7KEKP2RMQ" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVTBwQEeiwC7KEKP2RMQ" target="_S9qVhRwQEeiwC7KEKP2RMQ" source="_S9qVghwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVTRwQEeiwC7KEKP2RMQ" target="_S9qVhxwQEeiwC7KEKP2RMQ" source="_S9qVhRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVThwQEeiwC7KEKP2RMQ" target="_S9qVVxwQEeiwC7KEKP2RMQ" source="_S9qVhhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVTxwQEeiwC7KEKP2RMQ" target="_S9qVixwQEeiwC7KEKP2RMQ" source="_S9qVhRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVUBwQEeiwC7KEKP2RMQ" target="_S9qVkhwQEeiwC7KEKP2RMQ" source="_S9qVjhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVURwQEeiwC7KEKP2RMQ" target="_S9qVnhwQEeiwC7KEKP2RMQ" source="_S9qVlRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVUhwQEeiwC7KEKP2RMQ" target="_S9qVpBwQEeiwC7KEKP2RMQ" source="_S9qVmRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVUxwQEeiwC7KEKP2RMQ" target="_S9qVqBwQEeiwC7KEKP2RMQ" source="_S9qVpxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVVBwQEeiwC7KEKP2RMQ" target="_S9qVqBwQEeiwC7KEKP2RMQ" source="_S9qVoRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVVRwQEeiwC7KEKP2RMQ" target="_S9qVhhwQEeiwC7KEKP2RMQ" source="_S9qVqBwQEeiwC7KEKP2RMQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9qVVhwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVVxwQEeiwC7KEKP2RMQ" name="Body" incoming="_S9qVThwQEeiwC7KEKP2RMQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVWBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@6877b591">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVWRwQEeiwC7KEKP2RMQ" target="_S9qVYxwQEeiwC7KEKP2RMQ" source="_S9qVXxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVWhwQEeiwC7KEKP2RMQ" target="_S9qVbBwQEeiwC7KEKP2RMQ" source="_S9qVaRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVWxwQEeiwC7KEKP2RMQ" target="_S9qVchwQEeiwC7KEKP2RMQ" source="_S9qVZhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVXBwQEeiwC7KEKP2RMQ" target="_S9qVXRwQEeiwC7KEKP2RMQ" source="_S9qVgBwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVXRwQEeiwC7KEKP2RMQ" name="Expression(LeftHandSide@1d5512ad)" incoming="_S9qVXBwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qVXhwQEeiwC7KEKP2RMQ" name="ReadSelf">
                  <result xmi:id="_S9qVXxwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qVWRwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVYBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVYRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_S9qVYhwQEeiwC7KEKP2RMQ" name="Clear(tester)" structuralFeature="_S9qVIhwQEeiwC7KEKP2RMQ">
                <object xmi:id="_S9qVYxwQEeiwC7KEKP2RMQ" name="Clear(tester).object" incoming="_S9qVWRwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVZBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVZRwQEeiwC7KEKP2RMQ" value="1"/>
                </object>
                <result xmi:id="_S9qVZhwQEeiwC7KEKP2RMQ" name="Clear(tester).result" outgoing="_S9qVWxwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVZxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVaBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S9qVaRwQEeiwC7KEKP2RMQ" name="Fork(LeftHandSide@1d5512ad)" incoming="_S9qVRhwQEeiwC7KEKP2RMQ" outgoing="_S9qVWhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVahwQEeiwC7KEKP2RMQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVaxwQEeiwC7KEKP2RMQ" target="_S9qVfxwQEeiwC7KEKP2RMQ" source="_S9qVbBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9qVbBwQEeiwC7KEKP2RMQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_S9qVWhwQEeiwC7KEKP2RMQ" outgoing="_S9qVaxwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVbRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVbhwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_S9qVbxwQEeiwC7KEKP2RMQ" name="Iterate(Write(tester))" inputElement="_S9qVfxwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVcBwQEeiwC7KEKP2RMQ" target="_S9qVfBwQEeiwC7KEKP2RMQ" source="_S9qVfxwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVcRwQEeiwC7KEKP2RMQ" target="_S9qVdhwQEeiwC7KEKP2RMQ" source="_S9qVchwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeInput xmi:id="_S9qVchwQEeiwC7KEKP2RMQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_S9qVWxwQEeiwC7KEKP2RMQ" outgoing="_S9qVcRwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVcxwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVdBwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S9qVdRwQEeiwC7KEKP2RMQ" name="Write(tester)" structuralFeature="_S9qVIhwQEeiwC7KEKP2RMQ">
                    <object xmi:id="_S9qVdhwQEeiwC7KEKP2RMQ" name="Write(tester).object" incoming="_S9qVcRwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVdxwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVeBwQEeiwC7KEKP2RMQ" value="1"/>
                    </object>
                    <result xmi:id="_S9qVeRwQEeiwC7KEKP2RMQ" name="Write(tester).result" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVehwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVexwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:id="_S9qVfBwQEeiwC7KEKP2RMQ" name="Write(tester).value" incoming="_S9qVcBwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVfRwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVfhwQEeiwC7KEKP2RMQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_S9qVfxwQEeiwC7KEKP2RMQ" name="Iterate(Write(tester)).inputElement" incoming="_S9qVaxwQEeiwC7KEKP2RMQ" outgoing="_S9qVcBwQEeiwC7KEKP2RMQ" regionAsInput="_S9qVbxwQEeiwC7KEKP2RMQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVgBwQEeiwC7KEKP2RMQ" name="RightHandSide@2fc5124c" outgoing="_S9qVXBwQEeiwC7KEKP2RMQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qVgRwQEeiwC7KEKP2RMQ" name="ReadSelf">
            <result xmi:id="_S9qVghwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qVTBwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVgxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVhBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9qVhRwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qVTBwQEeiwC7KEKP2RMQ" outgoing="_S9qVRxwQEeiwC7KEKP2RMQ _S9qVTRwQEeiwC7KEKP2RMQ _S9qVTxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_S9qVhhwQEeiwC7KEKP2RMQ" name="Call(Test$initialization$1)" incoming="_S9qVVRwQEeiwC7KEKP2RMQ" outgoing="_S9qVThwQEeiwC7KEKP2RMQ" operation="_S9qWHRwQEeiwC7KEKP2RMQ">
            <target xmi:id="_S9qVhxwQEeiwC7KEKP2RMQ" name="Call(Test$initialization$1).target" incoming="_S9qVTRwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qViBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qViRwQEeiwC7KEKP2RMQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qVihwQEeiwC7KEKP2RMQ" name="Read(Test$initializationFlag$1)" structuralFeature="_S9qVHxwQEeiwC7KEKP2RMQ">
            <object xmi:id="_S9qVixwQEeiwC7KEKP2RMQ" name="Read(Test$initializationFlag$1).object" incoming="_S9qVTxwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVjBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVjRwQEeiwC7KEKP2RMQ" value="1"/>
            </object>
            <result xmi:id="_S9qVjhwQEeiwC7KEKP2RMQ" name="Read(Test$initializationFlag$1).result" outgoing="_S9qVUBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVjxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVkBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qVkRwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
            <argument xmi:id="_S9qVkhwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9qVUBwQEeiwC7KEKP2RMQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVkxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVlBwQEeiwC7KEKP2RMQ" value="*"/>
            </argument>
            <result xmi:id="_S9qVlRwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9qVURwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVlhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVlxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qVmBwQEeiwC7KEKP2RMQ" name="Value(0)">
            <result xmi:id="_S9qVmRwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9qVUhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVmhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVmxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_S9qVnBwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S9qVnRwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
            <first xmi:id="_S9qVnhwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9qVURwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVnxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVoBwQEeiwC7KEKP2RMQ" value="1"/>
            </first>
            <result xmi:id="_S9qVoRwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9qVVBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVohwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVoxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <second xmi:id="_S9qVpBwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9qVUhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVpRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVphwQEeiwC7KEKP2RMQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S9qVpxwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9qVUxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S9qVqBwQEeiwC7KEKP2RMQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_S9qVUxwQEeiwC7KEKP2RMQ _S9qVVBwQEeiwC7KEKP2RMQ" outgoing="_S9qVVRwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9qVVBwQEeiwC7KEKP2RMQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qVSBwQEeiwC7KEKP2RMQ" name="Input(tester)" outgoing="_S9qVRRwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" parameter="_S9qVPxwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_S9qVSRwQEeiwC7KEKP2RMQ" name="Fork(tester)" incoming="_S9qVRRwQEeiwC7KEKP2RMQ" outgoing="_S9qVRhwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qVShwQEeiwC7KEKP2RMQ" name="Return" incoming="_S9qVRxwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" parameter="_S9qVQhwQEeiwC7KEKP2RMQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qVqRwQEeiwC7KEKP2RMQ" name="done$method$2" visibility="private" specification="_S9qWJxwQEeiwC7KEKP2RMQ" node="_S9qVrxwQEeiwC7KEKP2RMQ _S9qVsBwQEeiwC7KEKP2RMQ _S9qVsRwQEeiwC7KEKP2RMQ" group="_S9qVsRwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qVqhwQEeiwC7KEKP2RMQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVqxwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVrBwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVrRwQEeiwC7KEKP2RMQ" target="_S9qVsBwQEeiwC7KEKP2RMQ" source="_S9qVrxwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVrhwQEeiwC7KEKP2RMQ" target="_S9qVtRwQEeiwC7KEKP2RMQ" source="_S9qVsBwQEeiwC7KEKP2RMQ"/>
        <structuredNode xmi:id="_S9qVsRwQEeiwC7KEKP2RMQ" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVshwQEeiwC7KEKP2RMQ" target="_S9qVuxwQEeiwC7KEKP2RMQ" source="_S9qVsxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVsxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@36186d58" outgoing="_S9qVshwQEeiwC7KEKP2RMQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qVtBwQEeiwC7KEKP2RMQ" name="Call(WriteLine)">
              <argument xmi:id="_S9qVtRwQEeiwC7KEKP2RMQ" name="Call(WriteLine).argument(value)" incoming="_S9qVrhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVthwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVtxwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9qVuBwQEeiwC7KEKP2RMQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVuRwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVuhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVuxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@7ba97ea4" incoming="_S9qVshwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVvBwQEeiwC7KEKP2RMQ" target="_S9qVxBwQEeiwC7KEKP2RMQ" source="_S9qV0BwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qVvRwQEeiwC7KEKP2RMQ" target="_S9qVvhwQEeiwC7KEKP2RMQ" source="_S9qVxRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_S9qVvhwQEeiwC7KEKP2RMQ" name="Collect(SendSignal(Continue))" incoming="_S9qVvRwQEeiwC7KEKP2RMQ" mode="parallel" inputElement="_S9qVxBwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVvxwQEeiwC7KEKP2RMQ" target="_S9qVwRwQEeiwC7KEKP2RMQ" source="_S9qVxBwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_S9qVwBwQEeiwC7KEKP2RMQ" name="SendSignal(Continue)" signal="_S9q5TxwQEeiwC7KEKP2RMQ">
                <target xmi:id="_S9qVwRwQEeiwC7KEKP2RMQ" name="SendSignal(Continue).target" incoming="_S9qVvxwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVwhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVwxwQEeiwC7KEKP2RMQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_S9qVxBwQEeiwC7KEKP2RMQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_S9qVvBwQEeiwC7KEKP2RMQ" outgoing="_S9qVvxwQEeiwC7KEKP2RMQ" regionAsInput="_S9qVvhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qVxRwQEeiwC7KEKP2RMQ" name="Feature(Read(tester).result)" outgoing="_S9qVvRwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVxhwQEeiwC7KEKP2RMQ" target="_S9qV0xwQEeiwC7KEKP2RMQ" source="_S9qVyRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qVxxwQEeiwC7KEKP2RMQ" target="_S9qVzRwQEeiwC7KEKP2RMQ" source="_S9qV0xwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qVyBwQEeiwC7KEKP2RMQ" name="ReadSelf">
                <result xmi:id="_S9qVyRwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qVxhwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVyhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVyxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qVzBwQEeiwC7KEKP2RMQ" name="Read(tester)" structuralFeature="_S9qVIhwQEeiwC7KEKP2RMQ">
                <object xmi:id="_S9qVzRwQEeiwC7KEKP2RMQ" name="Read(tester).object" incoming="_S9qVxxwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qVzhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qVzxwQEeiwC7KEKP2RMQ" value="1"/>
                </object>
                <result xmi:id="_S9qV0BwQEeiwC7KEKP2RMQ" name="Read(tester).result" outgoing="_S9qVvBwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV0RwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV0hwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_S9qV0xwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qVxhwQEeiwC7KEKP2RMQ" outgoing="_S9qVxxwQEeiwC7KEKP2RMQ"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qVrxwQEeiwC7KEKP2RMQ" name="Input(message)" outgoing="_S9qVrRwQEeiwC7KEKP2RMQ" parameter="_S9qVqhwQEeiwC7KEKP2RMQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_S9qVsBwQEeiwC7KEKP2RMQ" name="Fork(message)" incoming="_S9qVrRwQEeiwC7KEKP2RMQ" outgoing="_S9qVrhwQEeiwC7KEKP2RMQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qV1BwQEeiwC7KEKP2RMQ" name="Test$initialization$1" visibility="private" specification="_S9qWHRwQEeiwC7KEKP2RMQ" node="_S9qV1RwQEeiwC7KEKP2RMQ" group="_S9qV1RwQEeiwC7KEKP2RMQ">
        <structuredNode xmi:id="_S9qV1RwQEeiwC7KEKP2RMQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV1hwQEeiwC7KEKP2RMQ" target="_S9qV5BwQEeiwC7KEKP2RMQ" source="_S9qV4RwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV1xwQEeiwC7KEKP2RMQ" target="_S9qV8BwQEeiwC7KEKP2RMQ" source="_S9qV5BwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV2BwQEeiwC7KEKP2RMQ" target="_S9qV_xwQEeiwC7KEKP2RMQ" source="_S9qV5BwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV2RwQEeiwC7KEKP2RMQ" target="_S9qWBhwQEeiwC7KEKP2RMQ" source="_S9qWAhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV2hwQEeiwC7KEKP2RMQ" target="_S9qWEhwQEeiwC7KEKP2RMQ" source="_S9qWCRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV2xwQEeiwC7KEKP2RMQ" target="_S9qWGBwQEeiwC7KEKP2RMQ" source="_S9qWDRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qV3BwQEeiwC7KEKP2RMQ" target="_S9qWHBwQEeiwC7KEKP2RMQ" source="_S9qWGxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV3RwQEeiwC7KEKP2RMQ" target="_S9qWHBwQEeiwC7KEKP2RMQ" source="_S9qWFRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9qV3hwQEeiwC7KEKP2RMQ" target="_S9qV5RwQEeiwC7KEKP2RMQ" source="_S9qWHBwQEeiwC7KEKP2RMQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9qV3xwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qV4BwQEeiwC7KEKP2RMQ" name="ReadSelf">
            <result xmi:id="_S9qV4RwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qV1hwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV4hwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV4xwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9qV5BwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qV1hwQEeiwC7KEKP2RMQ" outgoing="_S9qV1xwQEeiwC7KEKP2RMQ _S9qV2BwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qV5RwQEeiwC7KEKP2RMQ" name="Initialization" incoming="_S9qV3hwQEeiwC7KEKP2RMQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qV5hwQEeiwC7KEKP2RMQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV5xwQEeiwC7KEKP2RMQ" target="_S9qV_RwQEeiwC7KEKP2RMQ" source="_S9qV6RwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qV6BwQEeiwC7KEKP2RMQ" name="Value(true)">
                <result xmi:id="_S9qV6RwQEeiwC7KEKP2RMQ" name="Value(true).result" outgoing="_S9qV5xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV6hwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV6xwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_S9qV7BwQEeiwC7KEKP2RMQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_S9qV7RwQEeiwC7KEKP2RMQ" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_S9qV_RwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV7hwQEeiwC7KEKP2RMQ" target="_S9qV-hwQEeiwC7KEKP2RMQ" source="_S9qV_RwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qV7xwQEeiwC7KEKP2RMQ" target="_S9qV9BwQEeiwC7KEKP2RMQ" source="_S9qV8BwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9qV8BwQEeiwC7KEKP2RMQ" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_S9qV1xwQEeiwC7KEKP2RMQ" outgoing="_S9qV7xwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV8RwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV8hwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S9qV8xwQEeiwC7KEKP2RMQ" name="Write(Test$initializationFlag$1)" structuralFeature="_S9qVHxwQEeiwC7KEKP2RMQ">
                  <object xmi:id="_S9qV9BwQEeiwC7KEKP2RMQ" name="Write(Test$initializationFlag$1).object" incoming="_S9qV7xwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV9RwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV9hwQEeiwC7KEKP2RMQ" value="1"/>
                  </object>
                  <result xmi:id="_S9qV9xwQEeiwC7KEKP2RMQ" name="Write(Test$initializationFlag$1).result" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV-BwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV-RwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:id="_S9qV-hwQEeiwC7KEKP2RMQ" name="Write(Test$initializationFlag$1).value" incoming="_S9qV7hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qV-xwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qV_BwQEeiwC7KEKP2RMQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_S9qV_RwQEeiwC7KEKP2RMQ" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_S9qV5xwQEeiwC7KEKP2RMQ" outgoing="_S9qV7hwQEeiwC7KEKP2RMQ" regionAsInput="_S9qV7RwQEeiwC7KEKP2RMQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qV_hwQEeiwC7KEKP2RMQ" name="Read(Test$initializationFlag$1)" structuralFeature="_S9qVHxwQEeiwC7KEKP2RMQ">
            <object xmi:id="_S9qV_xwQEeiwC7KEKP2RMQ" name="Read(Test$initializationFlag$1).object" incoming="_S9qV2BwQEeiwC7KEKP2RMQ" type="_S9qVGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWABwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWARwQEeiwC7KEKP2RMQ" value="1"/>
            </object>
            <result xmi:id="_S9qWAhwQEeiwC7KEKP2RMQ" name="Read(Test$initializationFlag$1).result" outgoing="_S9qV2RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWAxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWBBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qWBRwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
            <argument xmi:id="_S9qWBhwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9qV2RwQEeiwC7KEKP2RMQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWBxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWCBwQEeiwC7KEKP2RMQ" value="*"/>
            </argument>
            <result xmi:id="_S9qWCRwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9qV2hwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWChwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWCxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qWDBwQEeiwC7KEKP2RMQ" name="Value(0)">
            <result xmi:id="_S9qWDRwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9qV2xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWDhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWDxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_S9qWEBwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_S9qWERwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
            <first xmi:id="_S9qWEhwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9qV2hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWExwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWFBwQEeiwC7KEKP2RMQ" value="1"/>
            </first>
            <result xmi:id="_S9qWFRwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9qV3RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWFhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWFxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <second xmi:id="_S9qWGBwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9qV2xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWGRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWGhwQEeiwC7KEKP2RMQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_S9qWGxwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9qV3BwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_S9qWHBwQEeiwC7KEKP2RMQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_S9qV3BwQEeiwC7KEKP2RMQ _S9qV3RwQEeiwC7KEKP2RMQ" outgoing="_S9qV3hwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9qV3RwQEeiwC7KEKP2RMQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_S9qWHRwQEeiwC7KEKP2RMQ" name="Test$initialization$1" visibility="protected" method="_S9qV1BwQEeiwC7KEKP2RMQ"/>
      <ownedOperation xmi:id="_S9qWHhwQEeiwC7KEKP2RMQ" name="destroy" visibility="public" method="_S9qVJRwQEeiwC7KEKP2RMQ"/>
      <ownedOperation xmi:id="_S9qWHxwQEeiwC7KEKP2RMQ" name="done" visibility="public" method="_S9qVJxwQEeiwC7KEKP2RMQ"/>
      <ownedOperation xmi:id="_S9qWIBwQEeiwC7KEKP2RMQ" name="Test" visibility="protected" method="_S9qVPhwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qWIRwQEeiwC7KEKP2RMQ" name="tester" visibility="package" type="_S9qWKxwQEeiwC7KEKP2RMQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWIhwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWIxwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_S9qWJBwQEeiwC7KEKP2RMQ" name="" visibility="package" type="_S9qVGRwQEeiwC7KEKP2RMQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWJRwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWJhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_S9qWJxwQEeiwC7KEKP2RMQ" name="done" visibility="public" method="_S9qVqRwQEeiwC7KEKP2RMQ">
        <ownedParameter xmi:id="_S9qWKBwQEeiwC7KEKP2RMQ" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWKRwQEeiwC7KEKP2RMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWKhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_S9qWKxwQEeiwC7KEKP2RMQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_S9qWLBwQEeiwC7KEKP2RMQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWLRwQEeiwC7KEKP2RMQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWLhwQEeiwC7KEKP2RMQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qWLxwQEeiwC7KEKP2RMQ" name="Tester$method$1" visibility="private" specification="_S9q5ShwQEeiwC7KEKP2RMQ" node="_S9qWNBwQEeiwC7KEKP2RMQ _S9qWNRwQEeiwC7KEKP2RMQ" group="_S9qWNRwQEeiwC7KEKP2RMQ">
          <ownedParameter xmi:id="_S9qWMBwQEeiwC7KEKP2RMQ" name="" type="_S9qWKxwQEeiwC7KEKP2RMQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWMRwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWMhwQEeiwC7KEKP2RMQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWMxwQEeiwC7KEKP2RMQ" target="_S9qWNBwQEeiwC7KEKP2RMQ" source="_S9qWRhwQEeiwC7KEKP2RMQ"/>
          <structuredNode xmi:id="_S9qWNRwQEeiwC7KEKP2RMQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWNhwQEeiwC7KEKP2RMQ" target="_S9qWRhwQEeiwC7KEKP2RMQ" source="_S9qWQxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWNxwQEeiwC7KEKP2RMQ" target="_S9qWSBwQEeiwC7KEKP2RMQ" source="_S9qWRhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qWOBwQEeiwC7KEKP2RMQ" target="_S9qWQRwQEeiwC7KEKP2RMQ" source="_S9qWRxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWORwQEeiwC7KEKP2RMQ" target="_S9qWTBwQEeiwC7KEKP2RMQ" source="_S9qWRhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWOhwQEeiwC7KEKP2RMQ" target="_S9qWUxwQEeiwC7KEKP2RMQ" source="_S9qWTxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWOxwQEeiwC7KEKP2RMQ" target="_S9qWXxwQEeiwC7KEKP2RMQ" source="_S9qWVhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWPBwQEeiwC7KEKP2RMQ" target="_S9qWZRwQEeiwC7KEKP2RMQ" source="_S9qWWhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qWPRwQEeiwC7KEKP2RMQ" target="_S9qWaRwQEeiwC7KEKP2RMQ" source="_S9qWaBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9qWPhwQEeiwC7KEKP2RMQ" target="_S9qWaRwQEeiwC7KEKP2RMQ" source="_S9qWYhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9qWPxwQEeiwC7KEKP2RMQ" target="_S9qWRxwQEeiwC7KEKP2RMQ" source="_S9qWaRwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9qWQBwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9qWQRwQEeiwC7KEKP2RMQ" name="Body" incoming="_S9qWOBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S9qWQhwQEeiwC7KEKP2RMQ" name="ReadSelf">
              <result xmi:id="_S9qWQxwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9qWNhwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWRBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWRRwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9qWRhwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9qWNhwQEeiwC7KEKP2RMQ" outgoing="_S9qWMxwQEeiwC7KEKP2RMQ _S9qWNxwQEeiwC7KEKP2RMQ _S9qWORwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S9qWRxwQEeiwC7KEKP2RMQ" name="Call(Tester$initialization$1)" incoming="_S9qWPxwQEeiwC7KEKP2RMQ" outgoing="_S9qWOBwQEeiwC7KEKP2RMQ" operation="_S9q5SRwQEeiwC7KEKP2RMQ">
              <target xmi:id="_S9qWSBwQEeiwC7KEKP2RMQ" name="Call(Tester$initialization$1).target" incoming="_S9qWNxwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWSRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWShwQEeiwC7KEKP2RMQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9qWSxwQEeiwC7KEKP2RMQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_S9qWLBwQEeiwC7KEKP2RMQ">
              <object xmi:id="_S9qWTBwQEeiwC7KEKP2RMQ" name="Read(Tester$initializationFlag$1).object" incoming="_S9qWORwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWTRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWThwQEeiwC7KEKP2RMQ" value="1"/>
              </object>
              <result xmi:id="_S9qWTxwQEeiwC7KEKP2RMQ" name="Read(Tester$initializationFlag$1).result" outgoing="_S9qWOhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWUBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWURwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9qWUhwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
              <argument xmi:id="_S9qWUxwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9qWOhwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWVBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWVRwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9qWVhwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9qWOxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWVxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWWBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9qWWRwQEeiwC7KEKP2RMQ" name="Value(0)">
              <result xmi:id="_S9qWWhwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9qWPBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWWxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWXBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9qWXRwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9qWXhwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
              <first xmi:id="_S9qWXxwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9qWOxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWYBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWYRwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9qWYhwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9qWPhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWYxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWZBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9qWZRwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9qWPBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9qWZhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9qWZxwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S9qWaBwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9qWPRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9qWaRwQEeiwC7KEKP2RMQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_S9qWPRwQEeiwC7KEKP2RMQ _S9qWPhwQEeiwC7KEKP2RMQ" outgoing="_S9qWPxwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9qWPhwQEeiwC7KEKP2RMQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9qWNBwQEeiwC7KEKP2RMQ" name="Return" incoming="_S9qWMxwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" parameter="_S9qWMBwQEeiwC7KEKP2RMQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9qWahwQEeiwC7KEKP2RMQ" name="destroy$method$1" visibility="private" specification="_S9q5ThwQEeiwC7KEKP2RMQ" node="_S9qWaxwQEeiwC7KEKP2RMQ" group="_S9qWaxwQEeiwC7KEKP2RMQ">
          <structuredNode xmi:id="_S9qWaxwQEeiwC7KEKP2RMQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_S9q5ABwQEeiwC7KEKP2RMQ" name="Tester$initialization$1" visibility="private" specification="_S9q5SRwQEeiwC7KEKP2RMQ" node="_S9q5ARwQEeiwC7KEKP2RMQ" group="_S9q5ARwQEeiwC7KEKP2RMQ">
          <structuredNode xmi:id="_S9q5ARwQEeiwC7KEKP2RMQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5AhwQEeiwC7KEKP2RMQ" target="_S9q5EBwQEeiwC7KEKP2RMQ" source="_S9q5DRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5AxwQEeiwC7KEKP2RMQ" target="_S9q5HBwQEeiwC7KEKP2RMQ" source="_S9q5EBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5BBwQEeiwC7KEKP2RMQ" target="_S9q5KxwQEeiwC7KEKP2RMQ" source="_S9q5EBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5BRwQEeiwC7KEKP2RMQ" target="_S9q5MhwQEeiwC7KEKP2RMQ" source="_S9q5LhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5BhwQEeiwC7KEKP2RMQ" target="_S9q5PhwQEeiwC7KEKP2RMQ" source="_S9q5NRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5BxwQEeiwC7KEKP2RMQ" target="_S9q5RBwQEeiwC7KEKP2RMQ" source="_S9q5ORwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5CBwQEeiwC7KEKP2RMQ" target="_S9q5SBwQEeiwC7KEKP2RMQ" source="_S9q5RxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5CRwQEeiwC7KEKP2RMQ" target="_S9q5SBwQEeiwC7KEKP2RMQ" source="_S9q5QRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5ChwQEeiwC7KEKP2RMQ" target="_S9q5ERwQEeiwC7KEKP2RMQ" source="_S9q5SBwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q5CxwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_S9q5DBwQEeiwC7KEKP2RMQ" name="ReadSelf">
              <result xmi:id="_S9q5DRwQEeiwC7KEKP2RMQ" name="ReadSelf.result" outgoing="_S9q5AhwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5DhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5DxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q5EBwQEeiwC7KEKP2RMQ" name="Fork(ReadSelf.result)" incoming="_S9q5AhwQEeiwC7KEKP2RMQ" outgoing="_S9q5AxwQEeiwC7KEKP2RMQ _S9q5BBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q5ERwQEeiwC7KEKP2RMQ" name="Initialization" incoming="_S9q5ChwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q5EhwQEeiwC7KEKP2RMQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5ExwQEeiwC7KEKP2RMQ" target="_S9q5KRwQEeiwC7KEKP2RMQ" source="_S9q5FRwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q5FBwQEeiwC7KEKP2RMQ" name="Value(true)">
                  <result xmi:id="_S9q5FRwQEeiwC7KEKP2RMQ" name="Value(true).result" outgoing="_S9q5ExwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5FhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5FxwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_S9q5GBwQEeiwC7KEKP2RMQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_S9q5GRwQEeiwC7KEKP2RMQ" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_S9q5KRwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5GhwQEeiwC7KEKP2RMQ" target="_S9q5JhwQEeiwC7KEKP2RMQ" source="_S9q5KRwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5GxwQEeiwC7KEKP2RMQ" target="_S9q5IBwQEeiwC7KEKP2RMQ" source="_S9q5HBwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeInput xmi:id="_S9q5HBwQEeiwC7KEKP2RMQ" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_S9q5AxwQEeiwC7KEKP2RMQ" outgoing="_S9q5GxwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5HRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5HhwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_S9q5HxwQEeiwC7KEKP2RMQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_S9qWLBwQEeiwC7KEKP2RMQ">
                    <object xmi:id="_S9q5IBwQEeiwC7KEKP2RMQ" name="Write(Tester$initializationFlag$1).object" incoming="_S9q5GxwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5IRwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5IhwQEeiwC7KEKP2RMQ" value="1"/>
                    </object>
                    <result xmi:id="_S9q5IxwQEeiwC7KEKP2RMQ" name="Write(Tester$initializationFlag$1).result" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5JBwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5JRwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:id="_S9q5JhwQEeiwC7KEKP2RMQ" name="Write(Tester$initializationFlag$1).value" incoming="_S9q5GhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5JxwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5KBwQEeiwC7KEKP2RMQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_S9q5KRwQEeiwC7KEKP2RMQ" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_S9q5ExwQEeiwC7KEKP2RMQ" outgoing="_S9q5GhwQEeiwC7KEKP2RMQ" regionAsInput="_S9q5GRwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_S9q5KhwQEeiwC7KEKP2RMQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_S9qWLBwQEeiwC7KEKP2RMQ">
              <object xmi:id="_S9q5KxwQEeiwC7KEKP2RMQ" name="Read(Tester$initializationFlag$1).object" incoming="_S9q5BBwQEeiwC7KEKP2RMQ" type="_S9qWKxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5LBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5LRwQEeiwC7KEKP2RMQ" value="1"/>
              </object>
              <result xmi:id="_S9q5LhwQEeiwC7KEKP2RMQ" name="Read(Tester$initializationFlag$1).result" outgoing="_S9q5BRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5LxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5MBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q5MRwQEeiwC7KEKP2RMQ" name="Call(ListSize)">
              <argument xmi:id="_S9q5MhwQEeiwC7KEKP2RMQ" name="Call(ListSize).argument(list)" incoming="_S9q5BRwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5MxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5NBwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9q5NRwQEeiwC7KEKP2RMQ" name="Call(ListSize).result(result)" outgoing="_S9q5BhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5NhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5NxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q5OBwQEeiwC7KEKP2RMQ" name="Value(0)">
              <result xmi:id="_S9q5ORwQEeiwC7KEKP2RMQ" name="Value(0).result" outgoing="_S9q5BxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5OhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5OxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9q5PBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9q5PRwQEeiwC7KEKP2RMQ" name="Test(Size==0)">
              <first xmi:id="_S9q5PhwQEeiwC7KEKP2RMQ" name="Test(Size==0).first" incoming="_S9q5BhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5PxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5QBwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9q5QRwQEeiwC7KEKP2RMQ" name="Test(Size==0).result" outgoing="_S9q5CRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5QhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5QxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9q5RBwQEeiwC7KEKP2RMQ" name="Test(Size==0).second" incoming="_S9q5BxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5RRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5RhwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S9q5RxwQEeiwC7KEKP2RMQ" name="InitialNode" outgoing="_S9q5CBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9q5SBwQEeiwC7KEKP2RMQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_S9q5CBwQEeiwC7KEKP2RMQ _S9q5CRwQEeiwC7KEKP2RMQ" outgoing="_S9q5ChwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9q5CRwQEeiwC7KEKP2RMQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_S9q5SRwQEeiwC7KEKP2RMQ" name="Tester$initialization$1" visibility="protected" method="_S9q5ABwQEeiwC7KEKP2RMQ"/>
        <ownedOperation xmi:id="_S9q5ShwQEeiwC7KEKP2RMQ" name="Tester" visibility="public" method="_S9qWLxwQEeiwC7KEKP2RMQ">
          <ownedParameter xmi:id="_S9q5SxwQEeiwC7KEKP2RMQ" name="" visibility="package" type="_S9qWKxwQEeiwC7KEKP2RMQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5TBwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5TRwQEeiwC7KEKP2RMQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_S9q5ThwQEeiwC7KEKP2RMQ" name="destroy" visibility="public" method="_S9qWahwQEeiwC7KEKP2RMQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_S9q5TxwQEeiwC7KEKP2RMQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_S9q5UBwQEeiwC7KEKP2RMQ" name="Continue" signal="_S9q5TxwQEeiwC7KEKP2RMQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S9q5URwQEeiwC7KEKP2RMQ" name="AssertFalse" visibility="public" node="_S9q5YhwQEeiwC7KEKP2RMQ _S9q5YxwQEeiwC7KEKP2RMQ _S9q5ZBwQEeiwC7KEKP2RMQ _S9q5ZRwQEeiwC7KEKP2RMQ _S9q5ZhwQEeiwC7KEKP2RMQ" group="_S9q5ZhwQEeiwC7KEKP2RMQ">
      <elementImport xmi:id="_S9q5UhwQEeiwC7KEKP2RMQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_S9q5UxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9q5VBwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9q5VRwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9q5VhwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9q5VxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S9q5WBwQEeiwC7KEKP2RMQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5WRwQEeiwC7KEKP2RMQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5WhwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S9q5WxwQEeiwC7KEKP2RMQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5XBwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5XRwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5XhwQEeiwC7KEKP2RMQ" target="_S9q5YxwQEeiwC7KEKP2RMQ" source="_S9q5YhwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5XxwQEeiwC7KEKP2RMQ" target="_S9q5ZRwQEeiwC7KEKP2RMQ" source="_S9q5ZBwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5YBwQEeiwC7KEKP2RMQ" target="_S9q5hxwQEeiwC7KEKP2RMQ" source="_S9q5YxwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5YRwQEeiwC7KEKP2RMQ" target="_S9q5qxwQEeiwC7KEKP2RMQ" source="_S9q5ZRwQEeiwC7KEKP2RMQ"/>
      <structuredNode xmi:id="_S9q5ZhwQEeiwC7KEKP2RMQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q5ZxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@6a04a25f">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5aBwQEeiwC7KEKP2RMQ" target="_S9q5bBwQEeiwC7KEKP2RMQ" source="_S9q5jxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5aRwQEeiwC7KEKP2RMQ" target="_S9q5bxwQEeiwC7KEKP2RMQ" source="_S9q5tBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5ahwQEeiwC7KEKP2RMQ" target="_S9q5axwQEeiwC7KEKP2RMQ" source="_S9q5chwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q5axwQEeiwC7KEKP2RMQ" name="Call(AssertTrue)" incoming="_S9q5ahwQEeiwC7KEKP2RMQ" behavior="_S9rhlBwQEeiwC7KEKP2RMQ">
            <argument xmi:id="_S9q5bBwQEeiwC7KEKP2RMQ" name="Call(AssertTrue).argument(label)" incoming="_S9q5aBwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5bRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5bhwQEeiwC7KEKP2RMQ" value="1"/>
            </argument>
            <argument xmi:id="_S9q5bxwQEeiwC7KEKP2RMQ" name="Call(AssertTrue).argument(condition)" incoming="_S9q5aRwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5cBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5cRwQEeiwC7KEKP2RMQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q5chwQEeiwC7KEKP2RMQ" name="Tuple@6b2612cf" outgoing="_S9q5ahwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5cxwQEeiwC7KEKP2RMQ" target="_S9q5kxwQEeiwC7KEKP2RMQ" source="_S9q5gRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5dBwQEeiwC7KEKP2RMQ" target="_S9q5lhwQEeiwC7KEKP2RMQ" source="_S9q5ihwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5dRwQEeiwC7KEKP2RMQ" target="_S9q5jRwQEeiwC7KEKP2RMQ" source="_S9q5gBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5dhwQEeiwC7KEKP2RMQ" target="_S9q5jRwQEeiwC7KEKP2RMQ" source="_S9q5hRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5dxwQEeiwC7KEKP2RMQ" target="_S9q5ohwQEeiwC7KEKP2RMQ" source="_S9q5qxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5eBwQEeiwC7KEKP2RMQ" target="_S9q5rRwQEeiwC7KEKP2RMQ" source="_S9q5qxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5eRwQEeiwC7KEKP2RMQ" target="_S9q5sxwQEeiwC7KEKP2RMQ" source="_S9q5sBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5ehwQEeiwC7KEKP2RMQ" target="_S9q5tBwQEeiwC7KEKP2RMQ" source="_S9q5pRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5exwQEeiwC7KEKP2RMQ" target="_S9q5tRwQEeiwC7KEKP2RMQ" source="_S9q5sxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5fBwQEeiwC7KEKP2RMQ" target="_S9q5tRwQEeiwC7KEKP2RMQ" source="_S9q5sxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5fRwQEeiwC7KEKP2RMQ" target="_S9q5tBwQEeiwC7KEKP2RMQ" source="_S9q5tRwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q5fhwQEeiwC7KEKP2RMQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5fxwQEeiwC7KEKP2RMQ" target="_S9q5qBwQEeiwC7KEKP2RMQ" source="_S9q5nRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q5gBwQEeiwC7KEKP2RMQ" name="Value(&quot;! &quot;)" outgoing="_S9q5dRwQEeiwC7KEKP2RMQ">
              <result xmi:id="_S9q5gRwQEeiwC7KEKP2RMQ" name="Value(&quot;! &quot;).result" outgoing="_S9q5cxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5ghwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5gxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_S9q5hBwQEeiwC7KEKP2RMQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q5hRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))" outgoing="_S9q5dhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5hhwQEeiwC7KEKP2RMQ" target="_S9q5ihwQEeiwC7KEKP2RMQ" source="_S9q5hxwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q5hxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q5YBwQEeiwC7KEKP2RMQ" outgoing="_S9q5hhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5iBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5iRwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q5ihwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q5hhwQEeiwC7KEKP2RMQ" outgoing="_S9q5dBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5ixwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5jBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q5jRwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9q5dRwQEeiwC7KEKP2RMQ _S9q5dhwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5jhwQEeiwC7KEKP2RMQ" target="_S9q5jxwQEeiwC7KEKP2RMQ" source="_S9q5mRwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9q5jxwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9q5jhwQEeiwC7KEKP2RMQ" outgoing="_S9q5aBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5kBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5kRwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q5khwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                <argument xmi:id="_S9q5kxwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9q5cxwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5lBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5lRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9q5lhwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9q5dBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5lxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5mBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9q5mRwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9q5jhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5mhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5mxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q5nBwQEeiwC7KEKP2RMQ" name="Value(false)">
              <result xmi:id="_S9q5nRwQEeiwC7KEKP2RMQ" name="Value(false).result" outgoing="_S9q5fxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5nhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5nxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_S9q5oBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9q5oRwQEeiwC7KEKP2RMQ" name="Test(==)">
              <first xmi:id="_S9q5ohwQEeiwC7KEKP2RMQ" name="Test(==).first" incoming="_S9q5dxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5oxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5pBwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9q5pRwQEeiwC7KEKP2RMQ" name="Test(==).result" outgoing="_S9q5ehwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5phwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5pxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9q5qBwQEeiwC7KEKP2RMQ" name="Test(==).second" incoming="_S9q5fxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5qRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5qhwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q5qxwQEeiwC7KEKP2RMQ" name="Fork(Fork(condition))" incoming="_S9q5YRwQEeiwC7KEKP2RMQ" outgoing="_S9q5dxwQEeiwC7KEKP2RMQ _S9q5eBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q5rBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)">
              <argument xmi:id="_S9q5rRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9q5eBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5rhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5rxwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9q5sBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9q5eRwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5sRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5shwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q5sxwQEeiwC7KEKP2RMQ" name="Fork(Call(NotEmpty).result())" incoming="_S9q5eRwQEeiwC7KEKP2RMQ" outgoing="_S9q5exwQEeiwC7KEKP2RMQ _S9q5fBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_S9q5tBwQEeiwC7KEKP2RMQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_S9q5ehwQEeiwC7KEKP2RMQ _S9q5fRwQEeiwC7KEKP2RMQ" outgoing="_S9q5aRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9q5tRwQEeiwC7KEKP2RMQ" name="Decision(Call(NotEmpty).result())" incoming="_S9q5exwQEeiwC7KEKP2RMQ _S9q5fBwQEeiwC7KEKP2RMQ" outgoing="_S9q5fRwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9q5fBwQEeiwC7KEKP2RMQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q5YhwQEeiwC7KEKP2RMQ" name="Input(label)" outgoing="_S9q5XhwQEeiwC7KEKP2RMQ" parameter="_S9q5WBwQEeiwC7KEKP2RMQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q5YxwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9q5XhwQEeiwC7KEKP2RMQ" outgoing="_S9q5YBwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q5ZBwQEeiwC7KEKP2RMQ" name="Input(condition)" outgoing="_S9q5XxwQEeiwC7KEKP2RMQ" parameter="_S9q5WxwQEeiwC7KEKP2RMQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q5ZRwQEeiwC7KEKP2RMQ" name="Fork(condition)" incoming="_S9q5XxwQEeiwC7KEKP2RMQ" outgoing="_S9q5YRwQEeiwC7KEKP2RMQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S9q5thwQEeiwC7KEKP2RMQ" name="AssertEqual" visibility="public" node="_S9q51hwQEeiwC7KEKP2RMQ _S9q51xwQEeiwC7KEKP2RMQ _S9q52BwQEeiwC7KEKP2RMQ _S9q52RwQEeiwC7KEKP2RMQ _S9q52hwQEeiwC7KEKP2RMQ _S9q52xwQEeiwC7KEKP2RMQ _S9q53BwQEeiwC7KEKP2RMQ" group="_S9q53BwQEeiwC7KEKP2RMQ">
      <packageImport xmi:id="_S9q5txwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9q5uBwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9q5uRwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9q5uhwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9q5uxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S9q5vBwQEeiwC7KEKP2RMQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5vRwQEeiwC7KEKP2RMQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5vhwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S9q5vxwQEeiwC7KEKP2RMQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5wBwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5wRwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S9q5whwQEeiwC7KEKP2RMQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q5wxwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q5xBwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5xRwQEeiwC7KEKP2RMQ" target="_S9q51xwQEeiwC7KEKP2RMQ" source="_S9q51hwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5xhwQEeiwC7KEKP2RMQ" target="_S9q52RwQEeiwC7KEKP2RMQ" source="_S9q52BwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5xxwQEeiwC7KEKP2RMQ" target="_S9q52xwQEeiwC7KEKP2RMQ" source="_S9q52hwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5yBwQEeiwC7KEKP2RMQ" target="_S9q6ExwQEeiwC7KEKP2RMQ" source="_S9q52RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5yRwQEeiwC7KEKP2RMQ" target="_S9q6GxwQEeiwC7KEKP2RMQ" source="_S9q52xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5yhwQEeiwC7KEKP2RMQ" target="_S9q6VRwQEeiwC7KEKP2RMQ" source="_S9q51xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5yxwQEeiwC7KEKP2RMQ" target="_S9q6lBwQEeiwC7KEKP2RMQ" source="_S9q52xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5zBwQEeiwC7KEKP2RMQ" target="_S9q66BwQEeiwC7KEKP2RMQ" source="_S9q51xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5zRwQEeiwC7KEKP2RMQ" target="_S9q6-BwQEeiwC7KEKP2RMQ" source="_S9q52xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5zhwQEeiwC7KEKP2RMQ" target="_S9q7ABwQEeiwC7KEKP2RMQ" source="_S9q52RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5zxwQEeiwC7KEKP2RMQ" target="_S9q7HxwQEeiwC7KEKP2RMQ" source="_S9q52xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q50BwQEeiwC7KEKP2RMQ" target="_S9q7QhwQEeiwC7KEKP2RMQ" source="_S9q51xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q50RwQEeiwC7KEKP2RMQ" target="_S9q7UhwQEeiwC7KEKP2RMQ" source="_S9q52xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q50hwQEeiwC7KEKP2RMQ" target="_S9q7WhwQEeiwC7KEKP2RMQ" source="_S9q52RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q50xwQEeiwC7KEKP2RMQ" target="_S9q7qRwQEeiwC7KEKP2RMQ" source="_S9q51xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q51BwQEeiwC7KEKP2RMQ" target="_S9q7thwQEeiwC7KEKP2RMQ" source="_S9q52xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q51RwQEeiwC7KEKP2RMQ" target="_S9q7vhwQEeiwC7KEKP2RMQ" source="_S9q52RwQEeiwC7KEKP2RMQ"/>
      <structuredNode xmi:id="_S9q53BwQEeiwC7KEKP2RMQ" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q53RwQEeiwC7KEKP2RMQ" target="_S9q70hwQEeiwC7KEKP2RMQ" source="_S9q7xhwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q53hwQEeiwC7KEKP2RMQ" target="_S9q70xwQEeiwC7KEKP2RMQ" source="_S9q7yRwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q53xwQEeiwC7KEKP2RMQ" target="_S9q71BwQEeiwC7KEKP2RMQ" source="_S9q7zBwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q54BwQEeiwC7KEKP2RMQ" target="_S9q71RwQEeiwC7KEKP2RMQ" source="_S9q7zxwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_S9q54RwQEeiwC7KEKP2RMQ" name="IfStatement@71d65f01">
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9q54hwQEeiwC7KEKP2RMQ" target="_S9q6fhwQEeiwC7KEKP2RMQ" source="_S9q6PhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q54xwQEeiwC7KEKP2RMQ" target="_S9q7bhwQEeiwC7KEKP2RMQ" source="_S9q7YhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q55BwQEeiwC7KEKP2RMQ" target="_S9q7bxwQEeiwC7KEKP2RMQ" source="_S9q7ZRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q55RwQEeiwC7KEKP2RMQ" target="_S9q7cBwQEeiwC7KEKP2RMQ" source="_S9q7aBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q55hwQEeiwC7KEKP2RMQ" target="_S9q7cRwQEeiwC7KEKP2RMQ" source="_S9q7axwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q55xwQEeiwC7KEKP2RMQ" target="_S9q6oBwQEeiwC7KEKP2RMQ" source="_S9q6gBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q56BwQEeiwC7KEKP2RMQ" target="_S9q6vRwQEeiwC7KEKP2RMQ" source="_S9q6gBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q56RwQEeiwC7KEKP2RMQ" target="_S9q68BwQEeiwC7KEKP2RMQ" source="_S9q6gBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q56hwQEeiwC7KEKP2RMQ" target="_S9q7ShwQEeiwC7KEKP2RMQ" source="_S9q6gBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9q56xwQEeiwC7KEKP2RMQ" target="_S9q6lhwQEeiwC7KEKP2RMQ" source="_S9q6fhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9q57BwQEeiwC7KEKP2RMQ" target="_S9q7chwQEeiwC7KEKP2RMQ" source="_S9q6lhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q57RwQEeiwC7KEKP2RMQ" target="_S9q7hBwQEeiwC7KEKP2RMQ" source="_S9q7bhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q57hwQEeiwC7KEKP2RMQ" target="_S9q7jBwQEeiwC7KEKP2RMQ" source="_S9q7bxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q57xwQEeiwC7KEKP2RMQ" target="_S9q7lBwQEeiwC7KEKP2RMQ" source="_S9q7cBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q58BwQEeiwC7KEKP2RMQ" target="_S9q7nBwQEeiwC7KEKP2RMQ" source="_S9q7cRwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q58RwQEeiwC7KEKP2RMQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q58hwQEeiwC7KEKP2RMQ" target="_S9q6ChwQEeiwC7KEKP2RMQ" source="_S9q6ExwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q58xwQEeiwC7KEKP2RMQ" target="_S9q6FRwQEeiwC7KEKP2RMQ" source="_S9q6ExwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q59BwQEeiwC7KEKP2RMQ" target="_S9q6EBwQEeiwC7KEKP2RMQ" source="_S9q6GxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q59RwQEeiwC7KEKP2RMQ" target="_S9q6HRwQEeiwC7KEKP2RMQ" source="_S9q6GxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q59hwQEeiwC7KEKP2RMQ" target="_S9q6JBwQEeiwC7KEKP2RMQ" source="_S9q6GBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q59xwQEeiwC7KEKP2RMQ" target="_S9q6JRwQEeiwC7KEKP2RMQ" source="_S9q6IBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5-BwQEeiwC7KEKP2RMQ" target="_S9q6JxwQEeiwC7KEKP2RMQ" source="_S9q6JBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5-RwQEeiwC7KEKP2RMQ" target="_S9q6LhwQEeiwC7KEKP2RMQ" source="_S9q6JRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q5-hwQEeiwC7KEKP2RMQ" target="_S9q6NBwQEeiwC7KEKP2RMQ" source="_S9q6JRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5-xwQEeiwC7KEKP2RMQ" target="_S9q6CRwQEeiwC7KEKP2RMQ" source="_S9q6NBwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q5_BwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5_RwQEeiwC7KEKP2RMQ" target="_S9q6JhwQEeiwC7KEKP2RMQ" source="_S9q6NBwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q5_hwQEeiwC7KEKP2RMQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q5_xwQEeiwC7KEKP2RMQ" target="_S9q6NRwQEeiwC7KEKP2RMQ" source="_S9q6IxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6ABwQEeiwC7KEKP2RMQ" target="_S9q6NRwQEeiwC7KEKP2RMQ" source="_S9q6JBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6ARwQEeiwC7KEKP2RMQ" target="_S9q6NBwQEeiwC7KEKP2RMQ" source="_S9q6NRwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q6AhwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6AxwQEeiwC7KEKP2RMQ" target="_S9q6LRwQEeiwC7KEKP2RMQ" source="_S9q6NRwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q6BBwQEeiwC7KEKP2RMQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6BRwQEeiwC7KEKP2RMQ" target="_S9q6NhwQEeiwC7KEKP2RMQ" source="_S9q6DRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6BhwQEeiwC7KEKP2RMQ" target="_S9q6NhwQEeiwC7KEKP2RMQ" source="_S9q6KhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6BxwQEeiwC7KEKP2RMQ" target="_S9q6NhwQEeiwC7KEKP2RMQ" source="_S9q6MRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6CBwQEeiwC7KEKP2RMQ" target="_S9q6OBwQEeiwC7KEKP2RMQ" source="_S9q6NhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9q6CRwQEeiwC7KEKP2RMQ" name="Test(==)" incoming="_S9q5-xwQEeiwC7KEKP2RMQ">
              <first xmi:id="_S9q6ChwQEeiwC7KEKP2RMQ" name="Test(==).first" incoming="_S9q58hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6CxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6DBwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9q6DRwQEeiwC7KEKP2RMQ" name="Test(==).result" outgoing="_S9q6BRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6DhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6DxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9q6EBwQEeiwC7KEKP2RMQ" name="Test(==).second" incoming="_S9q59BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6ERwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6EhwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q6ExwQEeiwC7KEKP2RMQ" name="Fork(Fork(value1))" incoming="_S9q5yBwQEeiwC7KEKP2RMQ" outgoing="_S9q58hwQEeiwC7KEKP2RMQ _S9q58xwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6FBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)">
              <argument xmi:id="_S9q6FRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9q58xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6FhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6FxwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9q6GBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9q59hwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6GRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6GhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q6GxwQEeiwC7KEKP2RMQ" name="Fork(Fork(value2))" incoming="_S9q5yRwQEeiwC7KEKP2RMQ" outgoing="_S9q59BwQEeiwC7KEKP2RMQ _S9q59RwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6HBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)">
              <argument xmi:id="_S9q6HRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9q59RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6HhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6HxwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9q6IBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9q59xwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6IRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6IhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_S9q6IxwQEeiwC7KEKP2RMQ" name="Initial(Test(==))" outgoing="_S9q5_xwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q6JBwQEeiwC7KEKP2RMQ" name="Fork(Call(NotEmpty).result())" incoming="_S9q59hwQEeiwC7KEKP2RMQ" outgoing="_S9q5-BwQEeiwC7KEKP2RMQ _S9q6ABwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q6JRwQEeiwC7KEKP2RMQ" name="Fork(Call(NotEmpty).result())" incoming="_S9q59xwQEeiwC7KEKP2RMQ" outgoing="_S9q5-RwQEeiwC7KEKP2RMQ _S9q5-hwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6JhwQEeiwC7KEKP2RMQ" name="Call(Not)" incoming="_S9q5_RwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9q6JxwQEeiwC7KEKP2RMQ" name="Call(Not).argument(x)" incoming="_S9q5-BwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6KBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6KRwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9q6KhwQEeiwC7KEKP2RMQ" name="Call(Not).result(result)" outgoing="_S9q6BhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6KxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6LBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6LRwQEeiwC7KEKP2RMQ" name="Call(Not)" incoming="_S9q6AxwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9q6LhwQEeiwC7KEKP2RMQ" name="Call(Not).argument(x)" incoming="_S9q5-RwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6LxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6MBwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9q6MRwQEeiwC7KEKP2RMQ" name="Call(Not).result(result)" outgoing="_S9q6BxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6MhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6MxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9q6NBwQEeiwC7KEKP2RMQ" name="Decision(Call(NotEmpty).result())" incoming="_S9q5-hwQEeiwC7KEKP2RMQ _S9q6ARwQEeiwC7KEKP2RMQ" outgoing="_S9q5-xwQEeiwC7KEKP2RMQ _S9q5_RwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9q5-hwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9q6NRwQEeiwC7KEKP2RMQ" name="Decision(Call(NotEmpty).result())" incoming="_S9q5_xwQEeiwC7KEKP2RMQ _S9q6ABwQEeiwC7KEKP2RMQ" outgoing="_S9q6ARwQEeiwC7KEKP2RMQ _S9q6AxwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9q6ABwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_S9q6NhwQEeiwC7KEKP2RMQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_S9q6BRwQEeiwC7KEKP2RMQ _S9q6BhwQEeiwC7KEKP2RMQ _S9q6BxwQEeiwC7KEKP2RMQ" outgoing="_S9q6CBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6NxwQEeiwC7KEKP2RMQ" name="Call(Not)">
              <argument xmi:id="_S9q6OBwQEeiwC7KEKP2RMQ" name="Call(Not).argument(x)" incoming="_S9q6CBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6ORwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6OhwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9q6OxwQEeiwC7KEKP2RMQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6PBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6PRwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6PhwQEeiwC7KEKP2RMQ" name="ExpressionStatement@5b6f8d84" outgoing="_S9q54hwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6PxwQEeiwC7KEKP2RMQ" target="_S9q6QhwQEeiwC7KEKP2RMQ" source="_S9q6cRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6QBwQEeiwC7KEKP2RMQ" target="_S9q6QRwQEeiwC7KEKP2RMQ" source="_S9q6RRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6QRwQEeiwC7KEKP2RMQ" name="Call(Write)" incoming="_S9q6QBwQEeiwC7KEKP2RMQ" behavior="_S9riNhwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9q6QhwQEeiwC7KEKP2RMQ" name="Call(Write).argument(value)" incoming="_S9q6PxwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6QxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6RBwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6RRwQEeiwC7KEKP2RMQ" name="Tuple@e4e89e0" outgoing="_S9q6QBwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6RhwQEeiwC7KEKP2RMQ" target="_S9q6YRwQEeiwC7KEKP2RMQ" source="_S9q6TxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6RxwQEeiwC7KEKP2RMQ" target="_S9q6ZBwQEeiwC7KEKP2RMQ" source="_S9q6WBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6SBwQEeiwC7KEKP2RMQ" target="_S9q6WxwQEeiwC7KEKP2RMQ" source="_S9q6ThwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6SRwQEeiwC7KEKP2RMQ" target="_S9q6WxwQEeiwC7KEKP2RMQ" source="_S9q6UxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6ShwQEeiwC7KEKP2RMQ" target="_S9q6dRwQEeiwC7KEKP2RMQ" source="_S9q6XRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6SxwQEeiwC7KEKP2RMQ" target="_S9q6eBwQEeiwC7KEKP2RMQ" source="_S9q6axwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6TBwQEeiwC7KEKP2RMQ" target="_S9q6bxwQEeiwC7KEKP2RMQ" source="_S9q6WxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6TRwQEeiwC7KEKP2RMQ" target="_S9q6bxwQEeiwC7KEKP2RMQ" source="_S9q6ahwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q6ThwQEeiwC7KEKP2RMQ" name="Value(&quot;FAILED: &quot;)" outgoing="_S9q6SBwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9q6TxwQEeiwC7KEKP2RMQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_S9q6RhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6UBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6URwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S9q6UhwQEeiwC7KEKP2RMQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6UxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))" outgoing="_S9q6SRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6VBwQEeiwC7KEKP2RMQ" target="_S9q6WBwQEeiwC7KEKP2RMQ" source="_S9q6VRwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9q6VRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q5yhwQEeiwC7KEKP2RMQ" outgoing="_S9q6VBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6VhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6VxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9q6WBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q6VBwQEeiwC7KEKP2RMQ" outgoing="_S9q6RxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6WRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6WhwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6WxwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9q6SBwQEeiwC7KEKP2RMQ _S9q6SRwQEeiwC7KEKP2RMQ" outgoing="_S9q6TBwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6XBwQEeiwC7KEKP2RMQ" target="_S9q6XRwQEeiwC7KEKP2RMQ" source="_S9q6ZxwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9q6XRwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9q6XBwQEeiwC7KEKP2RMQ" outgoing="_S9q6ShwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6XhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6XxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6YBwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                  <argument xmi:id="_S9q6YRwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9q6RhwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6YhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6YxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <argument xmi:id="_S9q6ZBwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9q6RxwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6ZRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6ZhwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9q6ZxwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9q6XBwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6aBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6aRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q6ahwQEeiwC7KEKP2RMQ" name="Value(&quot;==&quot;)" outgoing="_S9q6TRwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9q6axwQEeiwC7KEKP2RMQ" name="Value(&quot;==&quot;).result" outgoing="_S9q6SxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6bBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6bRwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S9q6bhwQEeiwC7KEKP2RMQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6bxwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9q6TBwQEeiwC7KEKP2RMQ _S9q6TRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6cBwQEeiwC7KEKP2RMQ" target="_S9q6cRwQEeiwC7KEKP2RMQ" source="_S9q6exwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9q6cRwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9q6cBwQEeiwC7KEKP2RMQ" outgoing="_S9q6PxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6chwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6cxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6dBwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                  <argument xmi:id="_S9q6dRwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9q6ShwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6dhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6dxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <argument xmi:id="_S9q6eBwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9q6SxwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6eRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6ehwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9q6exwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9q6cBwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6fBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6fRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6fhwQEeiwC7KEKP2RMQ" name="ExpressionStatement@3a04f388" incoming="_S9q54hwQEeiwC7KEKP2RMQ" outgoing="_S9q56xwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6fxwQEeiwC7KEKP2RMQ" target="_S9q6gBwQEeiwC7KEKP2RMQ" source="_S9q6lRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9q6gBwQEeiwC7KEKP2RMQ" name="Fork(s)@795ae889" incoming="_S9q6fxwQEeiwC7KEKP2RMQ" outgoing="_S9q55xwQEeiwC7KEKP2RMQ _S9q56BwQEeiwC7KEKP2RMQ _S9q56RwQEeiwC7KEKP2RMQ _S9q56hwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6gRwQEeiwC7KEKP2RMQ" name="RightHandSide@1b63f7bb">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_S9q6ghwQEeiwC7KEKP2RMQ" name="CastExpression@1b63f7bb" mode="parallel" outputElement="_S9q6lRwQEeiwC7KEKP2RMQ" inputElement="_S9q6lBwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6gxwQEeiwC7KEKP2RMQ" target="_S9q6jBwQEeiwC7KEKP2RMQ" source="_S9q6khwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6hBwQEeiwC7KEKP2RMQ" target="_S9q6kxwQEeiwC7KEKP2RMQ" source="_S9q6khwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6hRwQEeiwC7KEKP2RMQ" target="_S9q6kxwQEeiwC7KEKP2RMQ" source="_S9q6jxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6hhwQEeiwC7KEKP2RMQ" target="_S9q6ihwQEeiwC7KEKP2RMQ" source="_S9q6kxwQEeiwC7KEKP2RMQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q6hxwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6iBwQEeiwC7KEKP2RMQ" target="_S9q6khwQEeiwC7KEKP2RMQ" source="_S9q6lBwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6iRwQEeiwC7KEKP2RMQ" target="_S9q6lRwQEeiwC7KEKP2RMQ" source="_S9q6ihwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_S9q6ihwQEeiwC7KEKP2RMQ" name="Merge(CastExpression@1b63f7bb.operand)" incoming="_S9q6hhwQEeiwC7KEKP2RMQ" outgoing="_S9q6iRwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_S9q6ixwQEeiwC7KEKP2RMQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_S9q6jBwQEeiwC7KEKP2RMQ" name="ReadIsClassifiedObject(String).object" incoming="_S9q6gxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6jRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6jhwQEeiwC7KEKP2RMQ" value="1"/>
                  </object>
                  <result xmi:id="_S9q6jxwQEeiwC7KEKP2RMQ" name="ReadIsClassifiedObject(String).result" outgoing="_S9q6hRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6kBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6kRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_S9q6khwQEeiwC7KEKP2RMQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_S9q6iBwQEeiwC7KEKP2RMQ" outgoing="_S9q6gxwQEeiwC7KEKP2RMQ _S9q6hBwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_S9q6kxwQEeiwC7KEKP2RMQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_S9q6hBwQEeiwC7KEKP2RMQ _S9q6hRwQEeiwC7KEKP2RMQ" outgoing="_S9q6hhwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9q6hRwQEeiwC7KEKP2RMQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_S9q6lBwQEeiwC7KEKP2RMQ" name="CastExpression@1b63f7bb.inputElement" incoming="_S9q5yxwQEeiwC7KEKP2RMQ" outgoing="_S9q6iBwQEeiwC7KEKP2RMQ" regionAsInput="_S9q6ghwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_S9q6lRwQEeiwC7KEKP2RMQ" name="CastExpression@1b63f7bb.outputElement" incoming="_S9q6iRwQEeiwC7KEKP2RMQ" outgoing="_S9q6fxwQEeiwC7KEKP2RMQ" regionAsOutput="_S9q6ghwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_S9q6lhwQEeiwC7KEKP2RMQ" name="IfStatement@4c114515" incoming="_S9q56xwQEeiwC7KEKP2RMQ" outgoing="_S9q57BwQEeiwC7KEKP2RMQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6lxwQEeiwC7KEKP2RMQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6mBwQEeiwC7KEKP2RMQ" target="_S9q6nxwQEeiwC7KEKP2RMQ" source="_S9q6mRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6mRwQEeiwC7KEKP2RMQ" name="Operands(EqualityExpression@47854e15)" outgoing="_S9q6mBwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q6mhwQEeiwC7KEKP2RMQ" name="Value(null)">
                  <result xmi:id="_S9q6mxwQEeiwC7KEKP2RMQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6nBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6nRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_S9q6nhwQEeiwC7KEKP2RMQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6nxwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)" incoming="_S9q6mBwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9q6oBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9q55xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6oRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6ohwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <result xmi:id="_S9q6oxwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6pBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6pRwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6phwQEeiwC7KEKP2RMQ" name="ExpressionStatement@7a4f9ddf">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6pxwQEeiwC7KEKP2RMQ" target="_S9q6qhwQEeiwC7KEKP2RMQ" source="_S9q62RwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6qBwQEeiwC7KEKP2RMQ" target="_S9q6qRwQEeiwC7KEKP2RMQ" source="_S9q6rRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6qRwQEeiwC7KEKP2RMQ" name="Call(Write)" incoming="_S9q6qBwQEeiwC7KEKP2RMQ" behavior="_S9riNhwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9q6qhwQEeiwC7KEKP2RMQ" name="Call(Write).argument(value)" incoming="_S9q6pxwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6qxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6rBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6rRwQEeiwC7KEKP2RMQ" name="Tuple@d450419" outgoing="_S9q6qBwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6rhwQEeiwC7KEKP2RMQ" target="_S9q6yRwQEeiwC7KEKP2RMQ" source="_S9q6txwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6rxwQEeiwC7KEKP2RMQ" target="_S9q6zBwQEeiwC7KEKP2RMQ" source="_S9q6wBwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6sBwQEeiwC7KEKP2RMQ" target="_S9q6wxwQEeiwC7KEKP2RMQ" source="_S9q6thwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6sRwQEeiwC7KEKP2RMQ" target="_S9q6wxwQEeiwC7KEKP2RMQ" source="_S9q6uxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6shwQEeiwC7KEKP2RMQ" target="_S9q63RwQEeiwC7KEKP2RMQ" source="_S9q6xRwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6sxwQEeiwC7KEKP2RMQ" target="_S9q64BwQEeiwC7KEKP2RMQ" source="_S9q60xwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6tBwQEeiwC7KEKP2RMQ" target="_S9q61xwQEeiwC7KEKP2RMQ" source="_S9q6wxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q6tRwQEeiwC7KEKP2RMQ" target="_S9q61xwQEeiwC7KEKP2RMQ" source="_S9q60hwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q6thwQEeiwC7KEKP2RMQ" name="Value(&quot;&quot;&quot;)" outgoing="_S9q6sBwQEeiwC7KEKP2RMQ">
                  <result xmi:id="_S9q6txwQEeiwC7KEKP2RMQ" name="Value(&quot;&quot;&quot;).result" outgoing="_S9q6rhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6uBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6uRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9q6uhwQEeiwC7KEKP2RMQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6uxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889)" outgoing="_S9q6sRwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6vBwQEeiwC7KEKP2RMQ" target="_S9q6wBwQEeiwC7KEKP2RMQ" source="_S9q6vRwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeInput xmi:id="_S9q6vRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889).input" incoming="_S9q56BwQEeiwC7KEKP2RMQ" outgoing="_S9q6vBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6vhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6vxwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_S9q6wBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889).output" incoming="_S9q6vBwQEeiwC7KEKP2RMQ" outgoing="_S9q6rxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6wRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6whwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6wxwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9q6sBwQEeiwC7KEKP2RMQ _S9q6sRwQEeiwC7KEKP2RMQ" outgoing="_S9q6tBwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6xBwQEeiwC7KEKP2RMQ" target="_S9q6xRwQEeiwC7KEKP2RMQ" source="_S9q6zxwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeOutput xmi:id="_S9q6xRwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9q6xBwQEeiwC7KEKP2RMQ" outgoing="_S9q6shwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6xhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6xxwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q6yBwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                    <argument xmi:id="_S9q6yRwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9q6rhwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6yhwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6yxwQEeiwC7KEKP2RMQ" value="1"/>
                    </argument>
                    <argument xmi:id="_S9q6zBwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9q6rxwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6zRwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6zhwQEeiwC7KEKP2RMQ" value="1"/>
                    </argument>
                    <result xmi:id="_S9q6zxwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9q6xBwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q60BwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q60RwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q60hwQEeiwC7KEKP2RMQ" name="Value(&quot;&quot;&quot;)" outgoing="_S9q6tRwQEeiwC7KEKP2RMQ">
                  <result xmi:id="_S9q60xwQEeiwC7KEKP2RMQ" name="Value(&quot;&quot;&quot;).result" outgoing="_S9q6sxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q61BwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q61RwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9q61hwQEeiwC7KEKP2RMQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q61xwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9q6tBwQEeiwC7KEKP2RMQ _S9q6tRwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q62BwQEeiwC7KEKP2RMQ" target="_S9q62RwQEeiwC7KEKP2RMQ" source="_S9q64xwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeOutput xmi:id="_S9q62RwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9q62BwQEeiwC7KEKP2RMQ" outgoing="_S9q6pxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q62hwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q62xwQEeiwC7KEKP2RMQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q63BwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                    <argument xmi:id="_S9q63RwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9q6shwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q63hwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q63xwQEeiwC7KEKP2RMQ" value="1"/>
                    </argument>
                    <argument xmi:id="_S9q64BwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9q6sxwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q64RwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q64hwQEeiwC7KEKP2RMQ" value="1"/>
                    </argument>
                    <result xmi:id="_S9q64xwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9q62BwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q65BwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q65RwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q65hwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q65xwQEeiwC7KEKP2RMQ" target="_S9q66xwQEeiwC7KEKP2RMQ" source="_S9q66BwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q66BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q5zBwQEeiwC7KEKP2RMQ" outgoing="_S9q65xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q66RwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q66hwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q66xwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q65xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q67BwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q67RwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q67hwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q67xwQEeiwC7KEKP2RMQ" target="_S9q68xwQEeiwC7KEKP2RMQ" source="_S9q68BwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q68BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889).input" incoming="_S9q56RwQEeiwC7KEKP2RMQ" outgoing="_S9q67xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q68RwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q68hwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q68xwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889).output" incoming="_S9q67xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q69BwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q69RwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q69hwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q69xwQEeiwC7KEKP2RMQ" target="_S9q6-xwQEeiwC7KEKP2RMQ" source="_S9q6-BwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q6-BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).input" incoming="_S9q5zRwQEeiwC7KEKP2RMQ" outgoing="_S9q69xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6-RwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6-hwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q6-xwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).output" incoming="_S9q69xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q6_BwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q6_RwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q6_hwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q6_xwQEeiwC7KEKP2RMQ" target="_S9q7AxwQEeiwC7KEKP2RMQ" source="_S9q7ABwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q7ABwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).input" incoming="_S9q5zhwQEeiwC7KEKP2RMQ" outgoing="_S9q6_xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7ARwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7AhwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q7AxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).output" incoming="_S9q6_xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7BBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7BRwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q7BhwQEeiwC7KEKP2RMQ" name="Value(true)">
              <result xmi:id="_S9q7BxwQEeiwC7KEKP2RMQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7CBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7CRwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_S9q7ChwQEeiwC7KEKP2RMQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7CxwQEeiwC7KEKP2RMQ" name="ExpressionStatement@617ca5ae">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7DBwQEeiwC7KEKP2RMQ" target="_S9q7DxwQEeiwC7KEKP2RMQ" source="_S9q7PxwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7DRwQEeiwC7KEKP2RMQ" target="_S9q7DhwQEeiwC7KEKP2RMQ" source="_S9q7EhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q7DhwQEeiwC7KEKP2RMQ" name="Call(Write)" incoming="_S9q7DRwQEeiwC7KEKP2RMQ" behavior="_S9riNhwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9q7DxwQEeiwC7KEKP2RMQ" name="Call(Write).argument(value)" incoming="_S9q7DBwQEeiwC7KEKP2RMQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7EBwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7ERwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7EhwQEeiwC7KEKP2RMQ" name="Tuple@52df8c67" outgoing="_S9q7DRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7ExwQEeiwC7KEKP2RMQ" target="_S9q7JxwQEeiwC7KEKP2RMQ" source="_S9q7HxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7FBwQEeiwC7KEKP2RMQ" target="_S9q7JhwQEeiwC7KEKP2RMQ" source="_S9q7HhwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7FRwQEeiwC7KEKP2RMQ" target="_S9q7MhwQEeiwC7KEKP2RMQ" source="_S9q7HxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7FhwQEeiwC7KEKP2RMQ" target="_S9q7PhwQEeiwC7KEKP2RMQ" source="_S9q7PRwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7FxwQEeiwC7KEKP2RMQ" target="_S9q7PhwQEeiwC7KEKP2RMQ" source="_S9q7KhwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7GBwQEeiwC7KEKP2RMQ" target="_S9q7LRwQEeiwC7KEKP2RMQ" source="_S9q7PhwQEeiwC7KEKP2RMQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q7GRwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7GhwQEeiwC7KEKP2RMQ" target="_S9q7MxwQEeiwC7KEKP2RMQ" source="_S9q7PhwQEeiwC7KEKP2RMQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9q7GxwQEeiwC7KEKP2RMQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7HBwQEeiwC7KEKP2RMQ" target="_S9q7PxwQEeiwC7KEKP2RMQ" source="_S9q7LxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7HRwQEeiwC7KEKP2RMQ" target="_S9q7PxwQEeiwC7KEKP2RMQ" source="_S9q7NRwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7HhwQEeiwC7KEKP2RMQ" name="Operands(EqualityExpression@55c1b754)" outgoing="_S9q7FBwQEeiwC7KEKP2RMQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_S9q7HxwQEeiwC7KEKP2RMQ" name="Fork('')@d98934c" incoming="_S9q5zxwQEeiwC7KEKP2RMQ" outgoing="_S9q7ExwQEeiwC7KEKP2RMQ _S9q7FRwQEeiwC7KEKP2RMQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7IBwQEeiwC7KEKP2RMQ" name="RightHandSide@2510ade2"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q7IRwQEeiwC7KEKP2RMQ" name="Value(null)">
                    <result xmi:id="_S9q7IhwQEeiwC7KEKP2RMQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7IxwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7JBwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_S9q7JRwQEeiwC7KEKP2RMQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q7JhwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)" incoming="_S9q7FBwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9q7JxwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9q7ExwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7KBwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7KRwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <result xmi:id="_S9q7KhwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9q7FxwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7KxwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7LBwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7LRwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@16a4c330.operand2" incoming="_S9q7GBwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7LhwQEeiwC7KEKP2RMQ" target="_S9q7LxwQEeiwC7KEKP2RMQ" source="_S9q7MhwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeOutput xmi:id="_S9q7LxwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@16a4c330.operand2.result" incoming="_S9q7LhwQEeiwC7KEKP2RMQ" outgoing="_S9q7HBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7MBwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7MRwQEeiwC7KEKP2RMQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_S9q7MhwQEeiwC7KEKP2RMQ" name="Merge(Fork('')@d98934c)" incoming="_S9q7FRwQEeiwC7KEKP2RMQ" outgoing="_S9q7LhwQEeiwC7KEKP2RMQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7MxwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@16a4c330.operand3" incoming="_S9q7GhwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7NBwQEeiwC7KEKP2RMQ" target="_S9q7NRwQEeiwC7KEKP2RMQ" source="_S9q7ORwQEeiwC7KEKP2RMQ"/>
                  <structuredNodeOutput xmi:id="_S9q7NRwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@16a4c330.operand3.result" incoming="_S9q7NBwQEeiwC7KEKP2RMQ" outgoing="_S9q7HRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7NhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7NxwQEeiwC7KEKP2RMQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q7OBwQEeiwC7KEKP2RMQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_S9q7ORwQEeiwC7KEKP2RMQ" name="Value(&quot;null&quot;).result" outgoing="_S9q7NBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7OhwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7OxwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_S9q7PBwQEeiwC7KEKP2RMQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_S9q7PRwQEeiwC7KEKP2RMQ" name="Initial(NullCoalescingExpression@16a4c330)" outgoing="_S9q7FhwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_S9q7PhwQEeiwC7KEKP2RMQ" name="Decision(NullCoalescingExpression@16a4c330)" incoming="_S9q7FhwQEeiwC7KEKP2RMQ _S9q7FxwQEeiwC7KEKP2RMQ" outgoing="_S9q7GBwQEeiwC7KEKP2RMQ _S9q7GhwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9q7FxwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_S9q7PxwQEeiwC7KEKP2RMQ" name="Merge(NullCoalescingExpression@16a4c330.result)" incoming="_S9q7HBwQEeiwC7KEKP2RMQ _S9q7HRwQEeiwC7KEKP2RMQ" outgoing="_S9q7DBwQEeiwC7KEKP2RMQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7QBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7QRwQEeiwC7KEKP2RMQ" target="_S9q7RRwQEeiwC7KEKP2RMQ" source="_S9q7QhwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q7QhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q50BwQEeiwC7KEKP2RMQ" outgoing="_S9q7QRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7QxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7RBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q7RRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q7QRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7RhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7RxwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7SBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7SRwQEeiwC7KEKP2RMQ" target="_S9q7TRwQEeiwC7KEKP2RMQ" source="_S9q7ShwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q7ShwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889).input" incoming="_S9q56hwQEeiwC7KEKP2RMQ" outgoing="_S9q7SRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7SxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7TBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q7TRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)@795ae889).output" incoming="_S9q7SRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7ThwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7TxwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7UBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7URwQEeiwC7KEKP2RMQ" target="_S9q7VRwQEeiwC7KEKP2RMQ" source="_S9q7UhwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q7UhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).input" incoming="_S9q50RwQEeiwC7KEKP2RMQ" outgoing="_S9q7URwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7UxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7VBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q7VRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).output" incoming="_S9q7URwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7VhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7VxwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7WBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7WRwQEeiwC7KEKP2RMQ" target="_S9q7XRwQEeiwC7KEKP2RMQ" source="_S9q7WhwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q7WhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).input" incoming="_S9q50hwQEeiwC7KEKP2RMQ" outgoing="_S9q7WRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7WxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7XBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q7XRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).output" incoming="_S9q7WRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7XhwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7XxwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_S9q7YBwQEeiwC7KEKP2RMQ" body="_S9q6phwQEeiwC7KEKP2RMQ _S9q65hwQEeiwC7KEKP2RMQ _S9q67hwQEeiwC7KEKP2RMQ _S9q69hwQEeiwC7KEKP2RMQ _S9q6_hwQEeiwC7KEKP2RMQ" bodyOutput="_S9q66xwQEeiwC7KEKP2RMQ _S9q68xwQEeiwC7KEKP2RMQ _S9q6-xwQEeiwC7KEKP2RMQ _S9q7AxwQEeiwC7KEKP2RMQ" decider="_S9q6oxwQEeiwC7KEKP2RMQ" successorClause="_S9q7YRwQEeiwC7KEKP2RMQ" test="_S9q6lxwQEeiwC7KEKP2RMQ"/>
            <clause xmi:id="_S9q7YRwQEeiwC7KEKP2RMQ" body="_S9q7CxwQEeiwC7KEKP2RMQ _S9q7QBwQEeiwC7KEKP2RMQ _S9q7SBwQEeiwC7KEKP2RMQ _S9q7UBwQEeiwC7KEKP2RMQ _S9q7WBwQEeiwC7KEKP2RMQ" bodyOutput="_S9q7RRwQEeiwC7KEKP2RMQ _S9q7TRwQEeiwC7KEKP2RMQ _S9q7VRwQEeiwC7KEKP2RMQ _S9q7XRwQEeiwC7KEKP2RMQ" decider="_S9q7BxwQEeiwC7KEKP2RMQ" predecessorClause="_S9q7YBwQEeiwC7KEKP2RMQ" test="_S9q7BhwQEeiwC7KEKP2RMQ"/>
            <result xmi:id="_S9q7YhwQEeiwC7KEKP2RMQ" name="IfStatement@4c114515.result(label)" outgoing="_S9q54xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7YxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7ZBwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <result xmi:id="_S9q7ZRwQEeiwC7KEKP2RMQ" name="IfStatement@4c114515.result(s)" outgoing="_S9q55BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7ZhwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7ZxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <result xmi:id="_S9q7aBwQEeiwC7KEKP2RMQ" name="IfStatement@4c114515.result(value2)" outgoing="_S9q55RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7aRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7ahwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <result xmi:id="_S9q7axwQEeiwC7KEKP2RMQ" name="IfStatement@4c114515.result(value1)" outgoing="_S9q55hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7bBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7bRwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_S9q7bhwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9q54xwQEeiwC7KEKP2RMQ" outgoing="_S9q57RwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_S9q7bxwQEeiwC7KEKP2RMQ" name="Fork(s)" incoming="_S9q55BwQEeiwC7KEKP2RMQ" outgoing="_S9q57hwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_S9q7cBwQEeiwC7KEKP2RMQ" name="Fork(value2)" incoming="_S9q55RwQEeiwC7KEKP2RMQ" outgoing="_S9q57xwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_S9q7cRwQEeiwC7KEKP2RMQ" name="Fork(value1)" incoming="_S9q55hwQEeiwC7KEKP2RMQ" outgoing="_S9q58BwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7chwQEeiwC7KEKP2RMQ" name="ExpressionStatement@17cec9ef" incoming="_S9q57BwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7cxwQEeiwC7KEKP2RMQ" target="_S9q7dhwQEeiwC7KEKP2RMQ" source="_S9q7fhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7dBwQEeiwC7KEKP2RMQ" target="_S9q7dRwQEeiwC7KEKP2RMQ" source="_S9q7fBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q7dRwQEeiwC7KEKP2RMQ" name="Call(WriteLine)" incoming="_S9q7dBwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9q7dhwQEeiwC7KEKP2RMQ" name="Call(WriteLine).argument(value)" incoming="_S9q7cxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7dxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7eBwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9q7eRwQEeiwC7KEKP2RMQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7ehwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7exwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7fBwQEeiwC7KEKP2RMQ" name="Tuple@372ed32d" outgoing="_S9q7dBwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q7fRwQEeiwC7KEKP2RMQ" name="Value(&quot;&quot;)">
                <result xmi:id="_S9q7fhwQEeiwC7KEKP2RMQ" name="Value(&quot;&quot;).result" outgoing="_S9q7cxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7fxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7gBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S9q7gRwQEeiwC7KEKP2RMQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7ghwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7gxwQEeiwC7KEKP2RMQ" target="_S9q7hxwQEeiwC7KEKP2RMQ" source="_S9q7hBwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7hBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q57RwQEeiwC7KEKP2RMQ" outgoing="_S9q7gxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7hRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7hhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7hxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q7gxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7iBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7iRwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7ihwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7ixwQEeiwC7KEKP2RMQ" target="_S9q7jxwQEeiwC7KEKP2RMQ" source="_S9q7jBwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7jBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)).input" incoming="_S9q57hwQEeiwC7KEKP2RMQ" outgoing="_S9q7ixwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7jRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7jhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7jxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(s)).output" incoming="_S9q7ixwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7kBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7kRwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7khwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7kxwQEeiwC7KEKP2RMQ" target="_S9q7lxwQEeiwC7KEKP2RMQ" source="_S9q7lBwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7lBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).input" incoming="_S9q57xwQEeiwC7KEKP2RMQ" outgoing="_S9q7kxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7lRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7lhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7lxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).output" incoming="_S9q7kxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7mBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7mRwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7mhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7mxwQEeiwC7KEKP2RMQ" target="_S9q7nxwQEeiwC7KEKP2RMQ" source="_S9q7nBwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7nBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).input" incoming="_S9q58BwQEeiwC7KEKP2RMQ" outgoing="_S9q7mxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7nRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7nhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7nxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).output" incoming="_S9q7mxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7oBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7oRwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q7ohwQEeiwC7KEKP2RMQ" name="Value(true)">
            <result xmi:id="_S9q7oxwQEeiwC7KEKP2RMQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7pBwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7pRwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_S9q7phwQEeiwC7KEKP2RMQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7pxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7qBwQEeiwC7KEKP2RMQ" target="_S9q7rBwQEeiwC7KEKP2RMQ" source="_S9q7qRwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7qRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q50xwQEeiwC7KEKP2RMQ" outgoing="_S9q7qBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7qhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7qxwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7rBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q7qBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7rRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7rhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q7rxwQEeiwC7KEKP2RMQ" name="Value(null)">
            <result xmi:id="_S9q7sBwQEeiwC7KEKP2RMQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7sRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7shwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_S9q7sxwQEeiwC7KEKP2RMQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7tBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7tRwQEeiwC7KEKP2RMQ" target="_S9q7uRwQEeiwC7KEKP2RMQ" source="_S9q7thwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7thwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).input" incoming="_S9q51BwQEeiwC7KEKP2RMQ" outgoing="_S9q7tRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7txwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7uBwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7uRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value2)).output" incoming="_S9q7tRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7uhwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7uxwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7vBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7vRwQEeiwC7KEKP2RMQ" target="_S9q7wRwQEeiwC7KEKP2RMQ" source="_S9q7vhwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9q7vhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).input" incoming="_S9q51RwQEeiwC7KEKP2RMQ" outgoing="_S9q7vRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7vxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7wBwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9q7wRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(value1)).output" incoming="_S9q7vRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7whwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7wxwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_S9q7xBwQEeiwC7KEKP2RMQ" body="_S9q6PhwQEeiwC7KEKP2RMQ _S9q6fhwQEeiwC7KEKP2RMQ _S9q6lhwQEeiwC7KEKP2RMQ _S9q7chwQEeiwC7KEKP2RMQ _S9q7ghwQEeiwC7KEKP2RMQ _S9q7ihwQEeiwC7KEKP2RMQ _S9q7khwQEeiwC7KEKP2RMQ _S9q7mhwQEeiwC7KEKP2RMQ" bodyOutput="_S9q7hxwQEeiwC7KEKP2RMQ _S9q7jxwQEeiwC7KEKP2RMQ _S9q7lxwQEeiwC7KEKP2RMQ _S9q7nxwQEeiwC7KEKP2RMQ" decider="_S9q6OxwQEeiwC7KEKP2RMQ" successorClause="_S9q7xRwQEeiwC7KEKP2RMQ" test="_S9q58RwQEeiwC7KEKP2RMQ"/>
          <clause xmi:id="_S9q7xRwQEeiwC7KEKP2RMQ" body="_S9q7pxwQEeiwC7KEKP2RMQ _S9q7rxwQEeiwC7KEKP2RMQ _S9q7tBwQEeiwC7KEKP2RMQ _S9q7vBwQEeiwC7KEKP2RMQ" bodyOutput="_S9q7rBwQEeiwC7KEKP2RMQ _S9q7sBwQEeiwC7KEKP2RMQ _S9q7uRwQEeiwC7KEKP2RMQ _S9q7wRwQEeiwC7KEKP2RMQ" decider="_S9q7oxwQEeiwC7KEKP2RMQ" predecessorClause="_S9q7xBwQEeiwC7KEKP2RMQ" test="_S9q7ohwQEeiwC7KEKP2RMQ"/>
          <result xmi:id="_S9q7xhwQEeiwC7KEKP2RMQ" name="IfStatement@71d65f01.result(label)" outgoing="_S9q53RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7xxwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7yBwQEeiwC7KEKP2RMQ" value="1"/>
          </result>
          <result xmi:id="_S9q7yRwQEeiwC7KEKP2RMQ" name="IfStatement@71d65f01.result(s)" outgoing="_S9q53hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7yhwQEeiwC7KEKP2RMQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7yxwQEeiwC7KEKP2RMQ" value="1"/>
          </result>
          <result xmi:id="_S9q7zBwQEeiwC7KEKP2RMQ" name="IfStatement@71d65f01.result(value2)" outgoing="_S9q53xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7zRwQEeiwC7KEKP2RMQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q7zhwQEeiwC7KEKP2RMQ" value="1"/>
          </result>
          <result xmi:id="_S9q7zxwQEeiwC7KEKP2RMQ" name="IfStatement@71d65f01.result(value1)" outgoing="_S9q54BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q70BwQEeiwC7KEKP2RMQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q70RwQEeiwC7KEKP2RMQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_S9q70hwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9q53RwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_S9q70xwQEeiwC7KEKP2RMQ" name="Fork(s)" incoming="_S9q53hwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_S9q71BwQEeiwC7KEKP2RMQ" name="Fork(value2)" incoming="_S9q53xwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_S9q71RwQEeiwC7KEKP2RMQ" name="Fork(value1)" incoming="_S9q54BwQEeiwC7KEKP2RMQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q51hwQEeiwC7KEKP2RMQ" name="Input(label)" outgoing="_S9q5xRwQEeiwC7KEKP2RMQ" parameter="_S9q5vBwQEeiwC7KEKP2RMQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q51xwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9q5xRwQEeiwC7KEKP2RMQ" outgoing="_S9q5yhwQEeiwC7KEKP2RMQ _S9q5zBwQEeiwC7KEKP2RMQ _S9q50BwQEeiwC7KEKP2RMQ _S9q50xwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q52BwQEeiwC7KEKP2RMQ" name="Input(value1)" outgoing="_S9q5xhwQEeiwC7KEKP2RMQ" parameter="_S9q5vxwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q52RwQEeiwC7KEKP2RMQ" name="Fork(value1)" incoming="_S9q5xhwQEeiwC7KEKP2RMQ" outgoing="_S9q5yBwQEeiwC7KEKP2RMQ _S9q5zhwQEeiwC7KEKP2RMQ _S9q50hwQEeiwC7KEKP2RMQ _S9q51RwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q52hwQEeiwC7KEKP2RMQ" name="Input(value2)" outgoing="_S9q5xxwQEeiwC7KEKP2RMQ" parameter="_S9q5whwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q52xwQEeiwC7KEKP2RMQ" name="Fork(value2)" incoming="_S9q5xxwQEeiwC7KEKP2RMQ" outgoing="_S9q5yRwQEeiwC7KEKP2RMQ _S9q5yxwQEeiwC7KEKP2RMQ _S9q5zRwQEeiwC7KEKP2RMQ _S9q5zxwQEeiwC7KEKP2RMQ _S9q50RwQEeiwC7KEKP2RMQ _S9q51BwQEeiwC7KEKP2RMQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S9q71hwQEeiwC7KEKP2RMQ" name="AssertList" visibility="public" node="_S9q78BwQEeiwC7KEKP2RMQ _S9q78RwQEeiwC7KEKP2RMQ _S9q78hwQEeiwC7KEKP2RMQ _S9q78xwQEeiwC7KEKP2RMQ _S9q79BwQEeiwC7KEKP2RMQ _S9q79RwQEeiwC7KEKP2RMQ _S9q79hwQEeiwC7KEKP2RMQ" group="_S9q79hwQEeiwC7KEKP2RMQ">
      <packageImport xmi:id="_S9q71xwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9q72BwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9q72RwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9q72hwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9q72xwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S9q73BwQEeiwC7KEKP2RMQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q73RwQEeiwC7KEKP2RMQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q73hwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S9q73xwQEeiwC7KEKP2RMQ" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q74BwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q74RwQEeiwC7KEKP2RMQ" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S9q74hwQEeiwC7KEKP2RMQ" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q74xwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q75BwQEeiwC7KEKP2RMQ" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q75RwQEeiwC7KEKP2RMQ" target="_S9q78RwQEeiwC7KEKP2RMQ" source="_S9q78BwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q75hwQEeiwC7KEKP2RMQ" target="_S9q78xwQEeiwC7KEKP2RMQ" source="_S9q78hwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q75xwQEeiwC7KEKP2RMQ" target="_S9q79RwQEeiwC7KEKP2RMQ" source="_S9q79BwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q76BwQEeiwC7KEKP2RMQ" target="_S9q8ExwQEeiwC7KEKP2RMQ" source="_S9q78RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q76RwQEeiwC7KEKP2RMQ" target="_S9q8LhwQEeiwC7KEKP2RMQ" source="_S9q78xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q76hwQEeiwC7KEKP2RMQ" target="_S9q8OhwQEeiwC7KEKP2RMQ" source="_S9q79RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q76xwQEeiwC7KEKP2RMQ" target="_S9rhGxwQEeiwC7KEKP2RMQ" source="_S9q78RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q77BwQEeiwC7KEKP2RMQ" target="_S9rhHhwQEeiwC7KEKP2RMQ" source="_S9q78xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q77RwQEeiwC7KEKP2RMQ" target="_S9rhIRwQEeiwC7KEKP2RMQ" source="_S9q79RwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q77hwQEeiwC7KEKP2RMQ" target="_S9rhVBwQEeiwC7KEKP2RMQ" source="_S9q78xwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q77xwQEeiwC7KEKP2RMQ" target="_S9rhYBwQEeiwC7KEKP2RMQ" source="_S9q79RwQEeiwC7KEKP2RMQ"/>
      <structuredNode xmi:id="_S9q79hwQEeiwC7KEKP2RMQ" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_S9q79xwQEeiwC7KEKP2RMQ" target="_S9rgEBwQEeiwC7KEKP2RMQ" source="_S9q7-BwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q7-BwQEeiwC7KEKP2RMQ" name="ExpressionStatement@1bdfa7ad" outgoing="_S9q79xwQEeiwC7KEKP2RMQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7-RwQEeiwC7KEKP2RMQ" target="_S9q7_hwQEeiwC7KEKP2RMQ" source="_S9q8GxwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7-hwQEeiwC7KEKP2RMQ" target="_S9q8ARwQEeiwC7KEKP2RMQ" source="_S9q8KhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q7-xwQEeiwC7KEKP2RMQ" target="_S9q8BBwQEeiwC7KEKP2RMQ" source="_S9q8NhwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9q7_BwQEeiwC7KEKP2RMQ" target="_S9q7_RwQEeiwC7KEKP2RMQ" source="_S9q8BxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q7_RwQEeiwC7KEKP2RMQ" name="Call(AssertEqual)" incoming="_S9q7_BwQEeiwC7KEKP2RMQ" behavior="_S9q5thwQEeiwC7KEKP2RMQ">
            <argument xmi:id="_S9q7_hwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(label)" incoming="_S9q7-RwQEeiwC7KEKP2RMQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q7_xwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8ABwQEeiwC7KEKP2RMQ" value="1"/>
            </argument>
            <argument xmi:id="_S9q8ARwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value1)" incoming="_S9q7-hwQEeiwC7KEKP2RMQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8AhwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8AxwQEeiwC7KEKP2RMQ" value="1"/>
            </argument>
            <argument xmi:id="_S9q8BBwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value2)" incoming="_S9q7-xwQEeiwC7KEKP2RMQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8BRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8BhwQEeiwC7KEKP2RMQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q8BxwQEeiwC7KEKP2RMQ" name="Tuple@57d69931" outgoing="_S9q7_BwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q8CBwQEeiwC7KEKP2RMQ" target="_S9q8HxwQEeiwC7KEKP2RMQ" source="_S9q8FhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q8CRwQEeiwC7KEKP2RMQ" target="_S9q8IhwQEeiwC7KEKP2RMQ" source="_S9q8DRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q8ChwQEeiwC7KEKP2RMQ" target="_S9q8GRwQEeiwC7KEKP2RMQ" source="_S9q8ERwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9q8CxwQEeiwC7KEKP2RMQ" target="_S9q8GRwQEeiwC7KEKP2RMQ" source="_S9q8DBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9q8DBwQEeiwC7KEKP2RMQ" name="Value(&quot;->size()&quot;)" outgoing="_S9q8CxwQEeiwC7KEKP2RMQ">
              <result xmi:id="_S9q8DRwQEeiwC7KEKP2RMQ" name="Value(&quot;->size()&quot;).result" outgoing="_S9q8CRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8DhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8DxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_S9q8EBwQEeiwC7KEKP2RMQ" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q8ERwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))" outgoing="_S9q8ChwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q8EhwQEeiwC7KEKP2RMQ" target="_S9q8FhwQEeiwC7KEKP2RMQ" source="_S9q8ExwQEeiwC7KEKP2RMQ"/>
              <structuredNodeInput xmi:id="_S9q8ExwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9q76BwQEeiwC7KEKP2RMQ" outgoing="_S9q8EhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8FBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8FRwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_S9q8FhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9q8EhwQEeiwC7KEKP2RMQ" outgoing="_S9q8CBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8FxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8GBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q8GRwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9q8ChwQEeiwC7KEKP2RMQ _S9q8CxwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q8GhwQEeiwC7KEKP2RMQ" target="_S9q8GxwQEeiwC7KEKP2RMQ" source="_S9q8JRwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9q8GxwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9q8GhwQEeiwC7KEKP2RMQ" outgoing="_S9q7-RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8HBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8HRwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q8HhwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                <argument xmi:id="_S9q8HxwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9q8CBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8IBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8IRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9q8IhwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9q8CRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8IxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8JBwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9q8JRwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9q8GhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8JhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8JxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q8KBwQEeiwC7KEKP2RMQ" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q8KRwQEeiwC7KEKP2RMQ" target="_S9q8KhwQEeiwC7KEKP2RMQ" source="_S9q8MRwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9q8KhwQEeiwC7KEKP2RMQ" name="Output(Call(Size).result())" incoming="_S9q8KRwQEeiwC7KEKP2RMQ" outgoing="_S9q7-hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8KxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8LBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q8LRwQEeiwC7KEKP2RMQ" name="Call(Size)">
                <argument xmi:id="_S9q8LhwQEeiwC7KEKP2RMQ" name="Call(Size).argument(seq)" incoming="_S9q76RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8LxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8MBwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <result xmi:id="_S9q8MRwQEeiwC7KEKP2RMQ" name="Call(Size).result()" outgoing="_S9q8KRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8MhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8MxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9q8NBwQEeiwC7KEKP2RMQ" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9q8NRwQEeiwC7KEKP2RMQ" target="_S9q8NhwQEeiwC7KEKP2RMQ" source="_S9q8PRwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9q8NhwQEeiwC7KEKP2RMQ" name="Output(Call(Size).result())" incoming="_S9q8NRwQEeiwC7KEKP2RMQ" outgoing="_S9q7-xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8NxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8OBwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9q8ORwQEeiwC7KEKP2RMQ" name="Call(Size)">
                <argument xmi:id="_S9q8OhwQEeiwC7KEKP2RMQ" name="Call(Size).argument(seq)" incoming="_S9q76hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8OxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8PBwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <result xmi:id="_S9q8PRwQEeiwC7KEKP2RMQ" name="Call(Size).result()" outgoing="_S9q8NRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9q8PhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9q8PxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgEBwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4" incoming="_S9q79xwQEeiwC7KEKP2RMQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgERwQEeiwC7KEKP2RMQ" target="_S9rhdRwQEeiwC7KEKP2RMQ" source="_S9rhSRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgEhwQEeiwC7KEKP2RMQ" target="_S9rhJxwQEeiwC7KEKP2RMQ" source="_S9rhkBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgExwQEeiwC7KEKP2RMQ" target="_S9rhKhwQEeiwC7KEKP2RMQ" source="_S9rhjBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgFBwQEeiwC7KEKP2RMQ" target="_S9rhJBwQEeiwC7KEKP2RMQ" source="_S9rhdRwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgFRwQEeiwC7KEKP2RMQ" target="_S9rgFhwQEeiwC7KEKP2RMQ" source="_S9rhPxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:LoopNode" xmi:id="_S9rgFhwQEeiwC7KEKP2RMQ" name="Loop(ForStatement@46615af4)" incoming="_S9rgFRwQEeiwC7KEKP2RMQ" bodyOutput="_S9rgQxwQEeiwC7KEKP2RMQ _S9rgRhwQEeiwC7KEKP2RMQ _S9rgSRwQEeiwC7KEKP2RMQ _S9rhARwQEeiwC7KEKP2RMQ _S9rg6hwQEeiwC7KEKP2RMQ _S9rg9xwQEeiwC7KEKP2RMQ" bodyPart="_S9rgPRwQEeiwC7KEKP2RMQ _S9rgPhwQEeiwC7KEKP2RMQ _S9rg-hwQEeiwC7KEKP2RMQ _S9rhBBwQEeiwC7KEKP2RMQ" decider="_S9rgOhwQEeiwC7KEKP2RMQ" isTestedFirst="true" test="_S9rgMxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgFxwQEeiwC7KEKP2RMQ" target="_S9rgLRwQEeiwC7KEKP2RMQ" source="_S9rhCRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgGBwQEeiwC7KEKP2RMQ" target="_S9rgLhwQEeiwC7KEKP2RMQ" source="_S9rhDBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgGRwQEeiwC7KEKP2RMQ" target="_S9rgLxwQEeiwC7KEKP2RMQ" source="_S9rhDxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgGhwQEeiwC7KEKP2RMQ" target="_S9rgMBwQEeiwC7KEKP2RMQ" source="_S9rhEhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgGxwQEeiwC7KEKP2RMQ" target="_S9rgMRwQEeiwC7KEKP2RMQ" source="_S9rhFRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgHBwQEeiwC7KEKP2RMQ" target="_S9rgMhwQEeiwC7KEKP2RMQ" source="_S9rhGBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgHRwQEeiwC7KEKP2RMQ" target="_S9rgNBwQEeiwC7KEKP2RMQ" source="_S9rgMRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgHhwQEeiwC7KEKP2RMQ" target="_S9rgNxwQEeiwC7KEKP2RMQ" source="_S9rgMhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgHxwQEeiwC7KEKP2RMQ" target="_S9rgPhwQEeiwC7KEKP2RMQ" source="_S9rgPRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgIBwQEeiwC7KEKP2RMQ" target="_S9rgjBwQEeiwC7KEKP2RMQ" source="_S9rgMBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgIRwQEeiwC7KEKP2RMQ" target="_S9rgvxwQEeiwC7KEKP2RMQ" source="_S9rgMBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgIhwQEeiwC7KEKP2RMQ" target="_S9rgyhwQEeiwC7KEKP2RMQ" source="_S9rgMBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgIxwQEeiwC7KEKP2RMQ" target="_S9rg-xwQEeiwC7KEKP2RMQ" source="_S9rgMBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgJBwQEeiwC7KEKP2RMQ" target="_S9rg_hwQEeiwC7KEKP2RMQ" source="_S9rhBRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgJRwQEeiwC7KEKP2RMQ" target="_S9rg5BwQEeiwC7KEKP2RMQ" source="_S9rgMRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgJhwQEeiwC7KEKP2RMQ" target="_S9rg9BwQEeiwC7KEKP2RMQ" source="_S9rgMhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgJxwQEeiwC7KEKP2RMQ" target="_S9rgcRwQEeiwC7KEKP2RMQ" source="_S9rgLRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgKBwQEeiwC7KEKP2RMQ" target="_S9rgthwQEeiwC7KEKP2RMQ" source="_S9rgLhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgKRwQEeiwC7KEKP2RMQ" target="_S9rgwRwQEeiwC7KEKP2RMQ" source="_S9rgLxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgKhwQEeiwC7KEKP2RMQ" target="_S9rgzRwQEeiwC7KEKP2RMQ" source="_S9rgLRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgKxwQEeiwC7KEKP2RMQ" target="_S9rg1RwQEeiwC7KEKP2RMQ" source="_S9rgLhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgLBwQEeiwC7KEKP2RMQ" target="_S9rg3RwQEeiwC7KEKP2RMQ" source="_S9rgLxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rgLRwQEeiwC7KEKP2RMQ" name="Fork(ForStatement@46615af4.loopVariable(label))" incoming="_S9rgFxwQEeiwC7KEKP2RMQ" outgoing="_S9rgJxwQEeiwC7KEKP2RMQ _S9rgKhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rgLhwQEeiwC7KEKP2RMQ" name="Fork(ForStatement@46615af4.loopVariable(list))" incoming="_S9rgGBwQEeiwC7KEKP2RMQ" outgoing="_S9rgKBwQEeiwC7KEKP2RMQ _S9rgKxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rgLxwQEeiwC7KEKP2RMQ" name="Fork(ForStatement@46615af4.loopVariable(expected))" incoming="_S9rgGRwQEeiwC7KEKP2RMQ" outgoing="_S9rgKRwQEeiwC7KEKP2RMQ _S9rgLBwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rgMBwQEeiwC7KEKP2RMQ" name="Fork(ForStatement@46615af4.loopVariable(i))" incoming="_S9rgGhwQEeiwC7KEKP2RMQ" outgoing="_S9rgIBwQEeiwC7KEKP2RMQ _S9rgIRwQEeiwC7KEKP2RMQ _S9rgIhwQEeiwC7KEKP2RMQ _S9rgIxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rgMRwQEeiwC7KEKP2RMQ" name="Fork(ForStatement@46615af4.loopVariable(counter))" incoming="_S9rgGxwQEeiwC7KEKP2RMQ" outgoing="_S9rgHRwQEeiwC7KEKP2RMQ _S9rgJRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rgMhwQEeiwC7KEKP2RMQ" name="Fork(ForStatement@46615af4.loopVariable(upper))" incoming="_S9rgHBwQEeiwC7KEKP2RMQ" outgoing="_S9rgHhwQEeiwC7KEKP2RMQ _S9rgJhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgMxwQEeiwC7KEKP2RMQ" name="Call(&lt;=)">
              <argument xmi:id="_S9rgNBwQEeiwC7KEKP2RMQ" name="Call(&lt;=).argument(x)" incoming="_S9rgHRwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgNRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgNhwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <argument xmi:id="_S9rgNxwQEeiwC7KEKP2RMQ" name="Call(&lt;=).argument(y)" incoming="_S9rgHhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgOBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgORwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rgOhwQEeiwC7KEKP2RMQ" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgOxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgPBwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgPRwQEeiwC7KEKP2RMQ" name="Values(ForStatement@46615af4)" outgoing="_S9rgHxwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgPhwQEeiwC7KEKP2RMQ" name="Body(ForStatement@46615af4)" incoming="_S9rgHxwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgPxwQEeiwC7KEKP2RMQ" target="_S9rgQxwQEeiwC7KEKP2RMQ" source="_S9rg0BwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgQBwQEeiwC7KEKP2RMQ" target="_S9rgRhwQEeiwC7KEKP2RMQ" source="_S9rg2BwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgQRwQEeiwC7KEKP2RMQ" target="_S9rgSRwQEeiwC7KEKP2RMQ" source="_S9rg4BwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgQhwQEeiwC7KEKP2RMQ" target="_S9rg5xwQEeiwC7KEKP2RMQ" source="_S9rg7hwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9rgQxwQEeiwC7KEKP2RMQ" name="label" incoming="_S9rgPxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgRBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgRRwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_S9rgRhwQEeiwC7KEKP2RMQ" name="list" incoming="_S9rgQBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgRxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgSBwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_S9rgSRwQEeiwC7KEKP2RMQ" name="expected" incoming="_S9rgQRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgShwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgSxwQEeiwC7KEKP2RMQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgTBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@32944dff">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgTRwQEeiwC7KEKP2RMQ" target="_S9rgUhwQEeiwC7KEKP2RMQ" source="_S9rgqBwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgThwQEeiwC7KEKP2RMQ" target="_S9rgVRwQEeiwC7KEKP2RMQ" source="_S9rgvBwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgTxwQEeiwC7KEKP2RMQ" target="_S9rgWBwQEeiwC7KEKP2RMQ" source="_S9rgxxwQEeiwC7KEKP2RMQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgUBwQEeiwC7KEKP2RMQ" target="_S9rgURwQEeiwC7KEKP2RMQ" source="_S9rgWxwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgURwQEeiwC7KEKP2RMQ" name="Call(AssertEqual)" incoming="_S9rgUBwQEeiwC7KEKP2RMQ" behavior="_S9q5thwQEeiwC7KEKP2RMQ">
                  <argument xmi:id="_S9rgUhwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(label)" incoming="_S9rgTRwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgUxwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgVBwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <argument xmi:id="_S9rgVRwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value1)" incoming="_S9rgThwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgVhwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgVxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <argument xmi:id="_S9rgWBwQEeiwC7KEKP2RMQ" name="Call(AssertEqual).argument(value2)" incoming="_S9rgTxwQEeiwC7KEKP2RMQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgWRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgWhwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgWxwQEeiwC7KEKP2RMQ" name="Tuple@7a74f34d" outgoing="_S9rgUBwQEeiwC7KEKP2RMQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgXBwQEeiwC7KEKP2RMQ" target="_S9rgfRwQEeiwC7KEKP2RMQ" source="_S9rgdBwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgXRwQEeiwC7KEKP2RMQ" target="_S9rggBwQEeiwC7KEKP2RMQ" source="_S9rgaxwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgXhwQEeiwC7KEKP2RMQ" target="_S9rgdxwQEeiwC7KEKP2RMQ" source="_S9rgbxwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgXxwQEeiwC7KEKP2RMQ" target="_S9rgdxwQEeiwC7KEKP2RMQ" source="_S9rgahwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgYBwQEeiwC7KEKP2RMQ" target="_S9rgmBwQEeiwC7KEKP2RMQ" source="_S9rgeRwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgYRwQEeiwC7KEKP2RMQ" target="_S9rgmxwQEeiwC7KEKP2RMQ" source="_S9rgiBwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgYhwQEeiwC7KEKP2RMQ" target="_S9rgkhwQEeiwC7KEKP2RMQ" source="_S9rgdxwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgYxwQEeiwC7KEKP2RMQ" target="_S9rgkhwQEeiwC7KEKP2RMQ" source="_S9rghhwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgZBwQEeiwC7KEKP2RMQ" target="_S9rgrBwQEeiwC7KEKP2RMQ" source="_S9rglBwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgZRwQEeiwC7KEKP2RMQ" target="_S9rgrxwQEeiwC7KEKP2RMQ" source="_S9rgohwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgZhwQEeiwC7KEKP2RMQ" target="_S9rgphwQEeiwC7KEKP2RMQ" source="_S9rgkhwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_S9rgZxwQEeiwC7KEKP2RMQ" target="_S9rgphwQEeiwC7KEKP2RMQ" source="_S9rgoRwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgaBwQEeiwC7KEKP2RMQ" target="_S9rguRwQEeiwC7KEKP2RMQ" source="_S9rgvxwQEeiwC7KEKP2RMQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgaRwQEeiwC7KEKP2RMQ" target="_S9rgxBwQEeiwC7KEKP2RMQ" source="_S9rgyhwQEeiwC7KEKP2RMQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rgahwQEeiwC7KEKP2RMQ" name="Value(&quot;[&quot;)" outgoing="_S9rgXxwQEeiwC7KEKP2RMQ">
                    <result xmi:id="_S9rgaxwQEeiwC7KEKP2RMQ" name="Value(&quot;[&quot;).result" outgoing="_S9rgXRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgbBwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgbRwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_S9rgbhwQEeiwC7KEKP2RMQ" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgbxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))" outgoing="_S9rgXhwQEeiwC7KEKP2RMQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgcBwQEeiwC7KEKP2RMQ" target="_S9rgdBwQEeiwC7KEKP2RMQ" source="_S9rgcRwQEeiwC7KEKP2RMQ"/>
                    <structuredNodeInput xmi:id="_S9rgcRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9rgJxwQEeiwC7KEKP2RMQ" outgoing="_S9rgcBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgchwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgcxwQEeiwC7KEKP2RMQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_S9rgdBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9rgcBwQEeiwC7KEKP2RMQ" outgoing="_S9rgXBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgdRwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgdhwQEeiwC7KEKP2RMQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgdxwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9rgXhwQEeiwC7KEKP2RMQ _S9rgXxwQEeiwC7KEKP2RMQ" outgoing="_S9rgYhwQEeiwC7KEKP2RMQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgeBwQEeiwC7KEKP2RMQ" target="_S9rgeRwQEeiwC7KEKP2RMQ" source="_S9rggxwQEeiwC7KEKP2RMQ"/>
                    <structuredNodeOutput xmi:id="_S9rgeRwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9rgeBwQEeiwC7KEKP2RMQ" outgoing="_S9rgYBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgehwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgexwQEeiwC7KEKP2RMQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgfBwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                      <argument xmi:id="_S9rgfRwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9rgXBwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgfhwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgfxwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <argument xmi:id="_S9rggBwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9rgXRwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rggRwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgghwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <result xmi:id="_S9rggxwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9rgeBwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rghBwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rghRwQEeiwC7KEKP2RMQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rghhwQEeiwC7KEKP2RMQ" name="Node(Call(ToString))" outgoing="_S9rgYxwQEeiwC7KEKP2RMQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rghxwQEeiwC7KEKP2RMQ" target="_S9rgiBwQEeiwC7KEKP2RMQ" source="_S9rgjxwQEeiwC7KEKP2RMQ"/>
                    <structuredNodeOutput xmi:id="_S9rgiBwQEeiwC7KEKP2RMQ" name="Output(Call(ToString).result(result))" incoming="_S9rghxwQEeiwC7KEKP2RMQ" outgoing="_S9rgYRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgiRwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgihwQEeiwC7KEKP2RMQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgixwQEeiwC7KEKP2RMQ" name="Call(ToString)">
                      <argument xmi:id="_S9rgjBwQEeiwC7KEKP2RMQ" name="Call(ToString).argument(x)" incoming="_S9rgIBwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgjRwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgjhwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <result xmi:id="_S9rgjxwQEeiwC7KEKP2RMQ" name="Call(ToString).result(result)" outgoing="_S9rghxwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgkBwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgkRwQEeiwC7KEKP2RMQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgkhwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9rgYhwQEeiwC7KEKP2RMQ _S9rgYxwQEeiwC7KEKP2RMQ" outgoing="_S9rgZhwQEeiwC7KEKP2RMQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgkxwQEeiwC7KEKP2RMQ" target="_S9rglBwQEeiwC7KEKP2RMQ" source="_S9rgnhwQEeiwC7KEKP2RMQ"/>
                    <structuredNodeOutput xmi:id="_S9rglBwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9rgkxwQEeiwC7KEKP2RMQ" outgoing="_S9rgZBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rglRwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rglhwQEeiwC7KEKP2RMQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rglxwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                      <argument xmi:id="_S9rgmBwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9rgYBwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgmRwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgmhwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <argument xmi:id="_S9rgmxwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9rgYRwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgnBwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgnRwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <result xmi:id="_S9rgnhwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9rgkxwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgnxwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgoBwQEeiwC7KEKP2RMQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rgoRwQEeiwC7KEKP2RMQ" name="Value(&quot;]&quot;)" outgoing="_S9rgZxwQEeiwC7KEKP2RMQ">
                    <result xmi:id="_S9rgohwQEeiwC7KEKP2RMQ" name="Value(&quot;]&quot;).result" outgoing="_S9rgZRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgoxwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgpBwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_S9rgpRwQEeiwC7KEKP2RMQ" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgphwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9rgZhwQEeiwC7KEKP2RMQ _S9rgZxwQEeiwC7KEKP2RMQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgpxwQEeiwC7KEKP2RMQ" target="_S9rgqBwQEeiwC7KEKP2RMQ" source="_S9rgshwQEeiwC7KEKP2RMQ"/>
                    <structuredNodeOutput xmi:id="_S9rgqBwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9rgpxwQEeiwC7KEKP2RMQ" outgoing="_S9rgTRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgqRwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgqhwQEeiwC7KEKP2RMQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgqxwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                      <argument xmi:id="_S9rgrBwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9rgZBwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgrRwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgrhwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <argument xmi:id="_S9rgrxwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9rgZRwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgsBwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgsRwQEeiwC7KEKP2RMQ" value="1"/>
                      </argument>
                      <result xmi:id="_S9rgshwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9rgpxwQEeiwC7KEKP2RMQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgsxwQEeiwC7KEKP2RMQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgtBwQEeiwC7KEKP2RMQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgtRwQEeiwC7KEKP2RMQ" name="Call(At)">
                    <argument xmi:id="_S9rgthwQEeiwC7KEKP2RMQ" name="Call(At).argument(seq)" incoming="_S9rgKBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgtxwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rguBwQEeiwC7KEKP2RMQ" value="*"/>
                    </argument>
                    <argument xmi:id="_S9rguRwQEeiwC7KEKP2RMQ" name="Call(At).argument(index)" incoming="_S9rgaBwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rguhwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rguxwQEeiwC7KEKP2RMQ" value="1"/>
                    </argument>
                    <result xmi:id="_S9rgvBwQEeiwC7KEKP2RMQ" name="Call(At).result()" outgoing="_S9rgThwQEeiwC7KEKP2RMQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgvRwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgvhwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_S9rgvxwQEeiwC7KEKP2RMQ" name="Fork(Call(At).argument(index))" incoming="_S9rgIRwQEeiwC7KEKP2RMQ" outgoing="_S9rgaBwQEeiwC7KEKP2RMQ"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rgwBwQEeiwC7KEKP2RMQ" name="Call(At)">
                    <argument xmi:id="_S9rgwRwQEeiwC7KEKP2RMQ" name="Call(At).argument(seq)" incoming="_S9rgKRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgwhwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgwxwQEeiwC7KEKP2RMQ" value="*"/>
                    </argument>
                    <argument xmi:id="_S9rgxBwQEeiwC7KEKP2RMQ" name="Call(At).argument(index)" incoming="_S9rgaRwQEeiwC7KEKP2RMQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgxRwQEeiwC7KEKP2RMQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgxhwQEeiwC7KEKP2RMQ" value="1"/>
                    </argument>
                    <result xmi:id="_S9rgxxwQEeiwC7KEKP2RMQ" name="Call(At).result()" outgoing="_S9rgTxwQEeiwC7KEKP2RMQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgyBwQEeiwC7KEKP2RMQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgyRwQEeiwC7KEKP2RMQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_S9rgyhwQEeiwC7KEKP2RMQ" name="Fork(Call(At).argument(index))" incoming="_S9rgIhwQEeiwC7KEKP2RMQ" outgoing="_S9rgaRwQEeiwC7KEKP2RMQ"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rgyxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rgzBwQEeiwC7KEKP2RMQ" target="_S9rg0BwQEeiwC7KEKP2RMQ" source="_S9rgzRwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9rgzRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9rgKhwQEeiwC7KEKP2RMQ" outgoing="_S9rgzBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rgzhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rgzxwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9rg0BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9rgzBwQEeiwC7KEKP2RMQ" outgoing="_S9rgPxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg0RwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg0hwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rg0xwQEeiwC7KEKP2RMQ" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rg1BwQEeiwC7KEKP2RMQ" target="_S9rg2BwQEeiwC7KEKP2RMQ" source="_S9rg1RwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9rg1RwQEeiwC7KEKP2RMQ" name="Passthru(Fork(list)).input" incoming="_S9rgKxwQEeiwC7KEKP2RMQ" outgoing="_S9rg1BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg1hwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg1xwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9rg2BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(list)).output" incoming="_S9rg1BwQEeiwC7KEKP2RMQ" outgoing="_S9rgQBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg2RwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg2hwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rg2xwQEeiwC7KEKP2RMQ" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rg3BwQEeiwC7KEKP2RMQ" target="_S9rg4BwQEeiwC7KEKP2RMQ" source="_S9rg3RwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9rg3RwQEeiwC7KEKP2RMQ" name="Passthru(Fork(expected)).input" incoming="_S9rgLBwQEeiwC7KEKP2RMQ" outgoing="_S9rg3BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg3hwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg3xwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9rg4BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(expected)).output" incoming="_S9rg3BwQEeiwC7KEKP2RMQ" outgoing="_S9rgQRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg4RwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg4hwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rg4xwQEeiwC7KEKP2RMQ" name="Call(+)">
                <argument xmi:id="_S9rg5BwQEeiwC7KEKP2RMQ" name="Call(+).argument(x)" incoming="_S9rgJRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg5RwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg5hwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9rg5xwQEeiwC7KEKP2RMQ" name="Call(+).argument(y)" incoming="_S9rgQhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg6BwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg6RwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9rg6hwQEeiwC7KEKP2RMQ" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg6xwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg7BwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rg7RwQEeiwC7KEKP2RMQ" name="Value(1)">
                <result xmi:id="_S9rg7hwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9rgQhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg7xwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg8BwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_S9rg8RwQEeiwC7KEKP2RMQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rg8hwQEeiwC7KEKP2RMQ" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rg8xwQEeiwC7KEKP2RMQ" target="_S9rg9xwQEeiwC7KEKP2RMQ" source="_S9rg9BwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9rg9BwQEeiwC7KEKP2RMQ" name="Passthru(upper).input" incoming="_S9rgJhwQEeiwC7KEKP2RMQ" outgoing="_S9rg8xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg9RwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg9hwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9rg9xwQEeiwC7KEKP2RMQ" name="Passthru(upper).output" incoming="_S9rg8xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg-BwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg-RwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rg-hwQEeiwC7KEKP2RMQ" name="Call(+)">
              <argument xmi:id="_S9rg-xwQEeiwC7KEKP2RMQ" name="Call(+).argument(x)" incoming="_S9rgIxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg_BwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rg_RwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <argument xmi:id="_S9rg_hwQEeiwC7KEKP2RMQ" name="Call(+).argument(y)" incoming="_S9rgJBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rg_xwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhABwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rhARwQEeiwC7KEKP2RMQ" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhAhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhAxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rhBBwQEeiwC7KEKP2RMQ" name="Value(1)">
              <result xmi:id="_S9rhBRwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9rgJBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhBhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhBxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9rhCBwQEeiwC7KEKP2RMQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_S9rhCRwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariable(label)" outgoing="_S9rgFxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhChwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhCxwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_S9rhDBwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariable(list)" outgoing="_S9rgGBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhDRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhDhwQEeiwC7KEKP2RMQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_S9rhDxwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariable(expected)" outgoing="_S9rgGRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhEBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhERwQEeiwC7KEKP2RMQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_S9rhEhwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariable(i)" outgoing="_S9rgGhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhExwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhFBwQEeiwC7KEKP2RMQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_S9rhFRwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariable(counter)" outgoing="_S9rgGxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhFhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhFxwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_S9rhGBwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariable(upper)" outgoing="_S9rgHBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhGRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhGhwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_S9rhGxwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariableInput(label)" incoming="_S9q76xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhHBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhHRwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_S9rhHhwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariableInput(list)" incoming="_S9q77BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhHxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhIBwQEeiwC7KEKP2RMQ" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_S9rhIRwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariableInput(expected)" incoming="_S9q77RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhIhwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhIxwQEeiwC7KEKP2RMQ" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_S9rhJBwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariableInput(i)" incoming="_S9rgFBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhJRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhJhwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_S9rhJxwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariableInput(counter)" incoming="_S9rgEhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhKBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhKRwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_S9rhKhwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.loopVariableInput(upper)" incoming="_S9rgExwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhKxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhLBwQEeiwC7KEKP2RMQ" value="1"/>
            </loopVariableInput>
            <result xmi:id="_S9rhLRwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhLhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhLxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <result xmi:id="_S9rhMBwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhMRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhMhwQEeiwC7KEKP2RMQ" value="*"/>
            </result>
            <result xmi:id="_S9rhMxwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhNBwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhNRwQEeiwC7KEKP2RMQ" value="*"/>
            </result>
            <result xmi:id="_S9rhNhwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhNxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhOBwQEeiwC7KEKP2RMQ" value="*"/>
            </result>
            <result xmi:id="_S9rhORwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhOhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhOxwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <result xmi:id="_S9rhPBwQEeiwC7KEKP2RMQ" name="ForStatement@46615af4.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhPRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhPhwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rhPxwQEeiwC7KEKP2RMQ" name="LoopVariables(ForStatement@46615af4)" outgoing="_S9rgFRwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhQBwQEeiwC7KEKP2RMQ" target="_S9rhbBwQEeiwC7KEKP2RMQ" source="_S9rhUBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhQRwQEeiwC7KEKP2RMQ" target="_S9rhbxwQEeiwC7KEKP2RMQ" source="_S9rhXBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9rhQhwQEeiwC7KEKP2RMQ" target="_S9rhaxwQEeiwC7KEKP2RMQ" source="_S9rhTRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9rhQxwQEeiwC7KEKP2RMQ" target="_S9rhZhwQEeiwC7KEKP2RMQ" source="_S9rhTRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhRBwQEeiwC7KEKP2RMQ" target="_S9rhdxwQEeiwC7KEKP2RMQ" source="_S9rhaBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhRRwQEeiwC7KEKP2RMQ" target="_S9rhehwQEeiwC7KEKP2RMQ" source="_S9rhdRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhRhwQEeiwC7KEKP2RMQ" target="_S9rhhhwQEeiwC7KEKP2RMQ" source="_S9rhfRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhRxwQEeiwC7KEKP2RMQ" target="_S9rhiRwQEeiwC7KEKP2RMQ" source="_S9rhgRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rhSBwQEeiwC7KEKP2RMQ" name="Value(1)">
              <result xmi:id="_S9rhSRwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9rgERwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhShwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhSxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9rhTBwQEeiwC7KEKP2RMQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rhTRwQEeiwC7KEKP2RMQ" name="Tuple@56ac39b8" outgoing="_S9rhQhwQEeiwC7KEKP2RMQ _S9rhQxwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rhThwQEeiwC7KEKP2RMQ" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhTxwQEeiwC7KEKP2RMQ" target="_S9rhUBwQEeiwC7KEKP2RMQ" source="_S9rhVxwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9rhUBwQEeiwC7KEKP2RMQ" name="Output(Call(Size).result())" incoming="_S9rhTxwQEeiwC7KEKP2RMQ" outgoing="_S9rhQBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhURwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhUhwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rhUxwQEeiwC7KEKP2RMQ" name="Call(Size)">
                  <argument xmi:id="_S9rhVBwQEeiwC7KEKP2RMQ" name="Call(Size).argument(seq)" incoming="_S9q77hwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhVRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhVhwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <result xmi:id="_S9rhVxwQEeiwC7KEKP2RMQ" name="Call(Size).result()" outgoing="_S9rhTxwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhWBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhWRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rhWhwQEeiwC7KEKP2RMQ" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhWxwQEeiwC7KEKP2RMQ" target="_S9rhXBwQEeiwC7KEKP2RMQ" source="_S9rhYxwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9rhXBwQEeiwC7KEKP2RMQ" name="Output(Call(Size).result())" incoming="_S9rhWxwQEeiwC7KEKP2RMQ" outgoing="_S9rhQRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhXRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhXhwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rhXxwQEeiwC7KEKP2RMQ" name="Call(Size)">
                  <argument xmi:id="_S9rhYBwQEeiwC7KEKP2RMQ" name="Call(Size).argument(seq)" incoming="_S9q77xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhYRwQEeiwC7KEKP2RMQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhYhwQEeiwC7KEKP2RMQ" value="*"/>
                  </argument>
                  <result xmi:id="_S9rhYxwQEeiwC7KEKP2RMQ" name="Call(Size).result()" outgoing="_S9rhWxwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhZBwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhZRwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rhZhwQEeiwC7KEKP2RMQ" name="Node(Call(Min))" incoming="_S9rhQxwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhZxwQEeiwC7KEKP2RMQ" target="_S9rhaBwQEeiwC7KEKP2RMQ" source="_S9rhchwQEeiwC7KEKP2RMQ"/>
              <structuredNodeOutput xmi:id="_S9rhaBwQEeiwC7KEKP2RMQ" name="Output(Call(Min).result(result))" incoming="_S9rhZxwQEeiwC7KEKP2RMQ" outgoing="_S9rhRBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhaRwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhahwQEeiwC7KEKP2RMQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rhaxwQEeiwC7KEKP2RMQ" name="Call(Min)" incoming="_S9rhQhwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9rhbBwQEeiwC7KEKP2RMQ" name="Call(Min).argument(x)" incoming="_S9rhQBwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhbRwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhbhwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <argument xmi:id="_S9rhbxwQEeiwC7KEKP2RMQ" name="Call(Min).argument(y)" incoming="_S9rhQRwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhcBwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhcRwQEeiwC7KEKP2RMQ" value="1"/>
                </argument>
                <result xmi:id="_S9rhchwQEeiwC7KEKP2RMQ" name="Call(Min).result(result)" outgoing="_S9rhZxwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhcxwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhdBwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rhdRwQEeiwC7KEKP2RMQ" name="Fork(Value(1).result)" incoming="_S9rgERwQEeiwC7KEKP2RMQ" outgoing="_S9rgFBwQEeiwC7KEKP2RMQ _S9rhRRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rhdhwQEeiwC7KEKP2RMQ" name="Call(-)">
              <argument xmi:id="_S9rhdxwQEeiwC7KEKP2RMQ" name="Call(-).argument(x)" incoming="_S9rhRBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rheBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rheRwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <argument xmi:id="_S9rhehwQEeiwC7KEKP2RMQ" name="Call(-).argument(y)" incoming="_S9rhRRwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhexwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhfBwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rhfRwQEeiwC7KEKP2RMQ" name="Call(-).result(result)" outgoing="_S9rhRhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhfhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhfxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rhgBwQEeiwC7KEKP2RMQ" name="Value(1)">
              <result xmi:id="_S9rhgRwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9rhRxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhghwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhgxwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9rhhBwQEeiwC7KEKP2RMQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rhhRwQEeiwC7KEKP2RMQ" name="Call(+)">
              <argument xmi:id="_S9rhhhwQEeiwC7KEKP2RMQ" name="Call(+).argument(x)" incoming="_S9rhRhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhhxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhiBwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <argument xmi:id="_S9rhiRwQEeiwC7KEKP2RMQ" name="Call(+).argument(y)" incoming="_S9rhRxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhihwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhixwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rhjBwQEeiwC7KEKP2RMQ" name="Call(+).result(result)" outgoing="_S9rgExwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhjRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhjhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rhjxwQEeiwC7KEKP2RMQ" name="Value(1)">
              <result xmi:id="_S9rhkBwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9rgEhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhkRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhkhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_S9rhkxwQEeiwC7KEKP2RMQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q78BwQEeiwC7KEKP2RMQ" name="Input(label)" outgoing="_S9q75RwQEeiwC7KEKP2RMQ" parameter="_S9q73BwQEeiwC7KEKP2RMQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q78RwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9q75RwQEeiwC7KEKP2RMQ" outgoing="_S9q76BwQEeiwC7KEKP2RMQ _S9q76xwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q78hwQEeiwC7KEKP2RMQ" name="Input(list)" outgoing="_S9q75hwQEeiwC7KEKP2RMQ" parameter="_S9q73xwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q78xwQEeiwC7KEKP2RMQ" name="Fork(list)" incoming="_S9q75hwQEeiwC7KEKP2RMQ" outgoing="_S9q76RwQEeiwC7KEKP2RMQ _S9q77hwQEeiwC7KEKP2RMQ _S9q77BwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9q79BwQEeiwC7KEKP2RMQ" name="Input(expected)" outgoing="_S9q75xwQEeiwC7KEKP2RMQ" parameter="_S9q74hwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S9q79RwQEeiwC7KEKP2RMQ" name="Fork(expected)" incoming="_S9q75xwQEeiwC7KEKP2RMQ" outgoing="_S9q76hwQEeiwC7KEKP2RMQ _S9q77xwQEeiwC7KEKP2RMQ _S9q77RwQEeiwC7KEKP2RMQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S9rhlBwQEeiwC7KEKP2RMQ" name="AssertTrue" visibility="public" node="_S9rhqBwQEeiwC7KEKP2RMQ _S9rhqRwQEeiwC7KEKP2RMQ _S9rhqhwQEeiwC7KEKP2RMQ _S9rhqxwQEeiwC7KEKP2RMQ _S9rhrBwQEeiwC7KEKP2RMQ" group="_S9rhrBwQEeiwC7KEKP2RMQ">
      <packageImport xmi:id="_S9rhlRwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9rhlhwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9rhlxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9rhmBwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9rhmRwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S9rhmhwQEeiwC7KEKP2RMQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhmxwQEeiwC7KEKP2RMQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhnBwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_S9rhnRwQEeiwC7KEKP2RMQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhnhwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhnxwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhoBwQEeiwC7KEKP2RMQ" target="_S9rhqRwQEeiwC7KEKP2RMQ" source="_S9rhqBwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhoRwQEeiwC7KEKP2RMQ" target="_S9rhqxwQEeiwC7KEKP2RMQ" source="_S9rhqhwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhohwQEeiwC7KEKP2RMQ" target="_S9rhyhwQEeiwC7KEKP2RMQ" source="_S9rhqxwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhoxwQEeiwC7KEKP2RMQ" target="_S9rh8hwQEeiwC7KEKP2RMQ" source="_S9rhqRwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhpBwQEeiwC7KEKP2RMQ" target="_S9riCRwQEeiwC7KEKP2RMQ" source="_S9rhqxwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhpRwQEeiwC7KEKP2RMQ" target="_S9riERwQEeiwC7KEKP2RMQ" source="_S9rhqRwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhphwQEeiwC7KEKP2RMQ" target="_S9riHhwQEeiwC7KEKP2RMQ" source="_S9rhqxwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhpxwQEeiwC7KEKP2RMQ" target="_S9riJhwQEeiwC7KEKP2RMQ" source="_S9rhqRwQEeiwC7KEKP2RMQ"/>
      <structuredNode xmi:id="_S9rhrBwQEeiwC7KEKP2RMQ" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhrRwQEeiwC7KEKP2RMQ" target="_S9riNBwQEeiwC7KEKP2RMQ" source="_S9riLhwQEeiwC7KEKP2RMQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhrhwQEeiwC7KEKP2RMQ" target="_S9riNRwQEeiwC7KEKP2RMQ" source="_S9riMRwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_S9rhrxwQEeiwC7KEKP2RMQ" name="IfStatement@5b79e206">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rhsBwQEeiwC7KEKP2RMQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhsRwQEeiwC7KEKP2RMQ" target="_S9rhwRwQEeiwC7KEKP2RMQ" source="_S9rhyhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhshwQEeiwC7KEKP2RMQ" target="_S9rhzBwQEeiwC7KEKP2RMQ" source="_S9rhyhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhsxwQEeiwC7KEKP2RMQ" target="_S9rh0hwQEeiwC7KEKP2RMQ" source="_S9rhzxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhtBwQEeiwC7KEKP2RMQ" target="_S9rh0xwQEeiwC7KEKP2RMQ" source="_S9rhxBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhtRwQEeiwC7KEKP2RMQ" target="_S9rh1BwQEeiwC7KEKP2RMQ" source="_S9rh0hwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhthwQEeiwC7KEKP2RMQ" target="_S9rh1BwQEeiwC7KEKP2RMQ" source="_S9rh0hwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhtxwQEeiwC7KEKP2RMQ" target="_S9rh0xwQEeiwC7KEKP2RMQ" source="_S9rh1BwQEeiwC7KEKP2RMQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9rhuBwQEeiwC7KEKP2RMQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhuRwQEeiwC7KEKP2RMQ" target="_S9rhxxwQEeiwC7KEKP2RMQ" source="_S9rhvBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rhuhwQEeiwC7KEKP2RMQ" target="_S9rh1hwQEeiwC7KEKP2RMQ" source="_S9rh0xwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rhuxwQEeiwC7KEKP2RMQ" name="Value(true)">
              <result xmi:id="_S9rhvBwQEeiwC7KEKP2RMQ" name="Value(true).result" outgoing="_S9rhuRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhvRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhvhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_S9rhvxwQEeiwC7KEKP2RMQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_S9rhwBwQEeiwC7KEKP2RMQ" name="Test(==)">
              <first xmi:id="_S9rhwRwQEeiwC7KEKP2RMQ" name="Test(==).first" incoming="_S9rhsRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhwhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhwxwQEeiwC7KEKP2RMQ" value="1"/>
              </first>
              <result xmi:id="_S9rhxBwQEeiwC7KEKP2RMQ" name="Test(==).result" outgoing="_S9rhtBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhxRwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhxhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <second xmi:id="_S9rhxxwQEeiwC7KEKP2RMQ" name="Test(==).second" incoming="_S9rhuRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhyBwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhyRwQEeiwC7KEKP2RMQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rhyhwQEeiwC7KEKP2RMQ" name="Fork(Fork(condition))" incoming="_S9rhohwQEeiwC7KEKP2RMQ" outgoing="_S9rhsRwQEeiwC7KEKP2RMQ _S9rhshwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rhyxwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)">
              <argument xmi:id="_S9rhzBwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9rhshwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rhzRwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rhzhwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <result xmi:id="_S9rhzxwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9rhsxwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh0BwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh0RwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rh0hwQEeiwC7KEKP2RMQ" name="Fork(Call(NotEmpty).result())" incoming="_S9rhsxwQEeiwC7KEKP2RMQ" outgoing="_S9rhtRwQEeiwC7KEKP2RMQ _S9rhthwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_S9rh0xwQEeiwC7KEKP2RMQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_S9rhtBwQEeiwC7KEKP2RMQ _S9rhtxwQEeiwC7KEKP2RMQ" outgoing="_S9rhuhwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_S9rh1BwQEeiwC7KEKP2RMQ" name="Decision(Call(NotEmpty).result())" incoming="_S9rhtRwQEeiwC7KEKP2RMQ _S9rhthwQEeiwC7KEKP2RMQ" outgoing="_S9rhtxwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9rhthwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rh1RwQEeiwC7KEKP2RMQ" name="Call(Not)">
              <argument xmi:id="_S9rh1hwQEeiwC7KEKP2RMQ" name="Call(Not).argument(x)" incoming="_S9rhuhwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh1xwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh2BwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rh2RwQEeiwC7KEKP2RMQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh2hwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh2xwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rh3BwQEeiwC7KEKP2RMQ" name="ExpressionStatement@c3dbbff">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rh3RwQEeiwC7KEKP2RMQ" target="_S9rh4BwQEeiwC7KEKP2RMQ" source="_S9rh-hwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9rh3hwQEeiwC7KEKP2RMQ" target="_S9rh3xwQEeiwC7KEKP2RMQ" source="_S9rh5hwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rh3xwQEeiwC7KEKP2RMQ" name="Call(WriteLine)" incoming="_S9rh3hwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9rh4BwQEeiwC7KEKP2RMQ" name="Call(WriteLine).argument(value)" incoming="_S9rh3RwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh4RwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh4hwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rh4xwQEeiwC7KEKP2RMQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh5BwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh5RwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rh5hwQEeiwC7KEKP2RMQ" name="Tuple@7e8b077c" outgoing="_S9rh3hwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rh5xwQEeiwC7KEKP2RMQ" target="_S9rh_hwQEeiwC7KEKP2RMQ" source="_S9rh7BwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rh6BwQEeiwC7KEKP2RMQ" target="_S9riARwQEeiwC7KEKP2RMQ" source="_S9rh9RwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9rh6RwQEeiwC7KEKP2RMQ" target="_S9rh-BwQEeiwC7KEKP2RMQ" source="_S9rh6xwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9rh6hwQEeiwC7KEKP2RMQ" target="_S9rh-BwQEeiwC7KEKP2RMQ" source="_S9rh8BwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rh6xwQEeiwC7KEKP2RMQ" name="Value(&quot;FAILED: &quot;)" outgoing="_S9rh6RwQEeiwC7KEKP2RMQ">
                <result xmi:id="_S9rh7BwQEeiwC7KEKP2RMQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_S9rh5xwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh7RwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh7hwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_S9rh7xwQEeiwC7KEKP2RMQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rh8BwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))" outgoing="_S9rh6hwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rh8RwQEeiwC7KEKP2RMQ" target="_S9rh9RwQEeiwC7KEKP2RMQ" source="_S9rh8hwQEeiwC7KEKP2RMQ"/>
                <structuredNodeInput xmi:id="_S9rh8hwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9rhoxwQEeiwC7KEKP2RMQ" outgoing="_S9rh8RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh8xwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh9BwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_S9rh9RwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9rh8RwQEeiwC7KEKP2RMQ" outgoing="_S9rh6BwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh9hwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh9xwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rh-BwQEeiwC7KEKP2RMQ" name="Node(Call(Concat))" incoming="_S9rh6RwQEeiwC7KEKP2RMQ _S9rh6hwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rh-RwQEeiwC7KEKP2RMQ" target="_S9rh-hwQEeiwC7KEKP2RMQ" source="_S9riBBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9rh-hwQEeiwC7KEKP2RMQ" name="Output(Call(Concat).result(result))" incoming="_S9rh-RwQEeiwC7KEKP2RMQ" outgoing="_S9rh3RwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh-xwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rh_BwQEeiwC7KEKP2RMQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rh_RwQEeiwC7KEKP2RMQ" name="Call(Concat)">
                  <argument xmi:id="_S9rh_hwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(x)" incoming="_S9rh5xwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rh_xwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riABwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <argument xmi:id="_S9riARwQEeiwC7KEKP2RMQ" name="Call(Concat).argument(y)" incoming="_S9rh6BwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riAhwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riAxwQEeiwC7KEKP2RMQ" value="1"/>
                  </argument>
                  <result xmi:id="_S9riBBwQEeiwC7KEKP2RMQ" name="Call(Concat).result(result)" outgoing="_S9rh-RwQEeiwC7KEKP2RMQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riBRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riBhwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riBxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riCBwQEeiwC7KEKP2RMQ" target="_S9riDBwQEeiwC7KEKP2RMQ" source="_S9riCRwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9riCRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(condition)).input" incoming="_S9rhpBwQEeiwC7KEKP2RMQ" outgoing="_S9riCBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riChwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riCxwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9riDBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(condition)).output" incoming="_S9riCBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riDRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riDhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riDxwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riEBwQEeiwC7KEKP2RMQ" target="_S9riFBwQEeiwC7KEKP2RMQ" source="_S9riERwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9riERwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9rhpRwQEeiwC7KEKP2RMQ" outgoing="_S9riEBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riEhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riExwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9riFBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9riEBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riFRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riFhwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9riFxwQEeiwC7KEKP2RMQ" name="Value(true)">
            <result xmi:id="_S9riGBwQEeiwC7KEKP2RMQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riGRwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riGhwQEeiwC7KEKP2RMQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_S9riGxwQEeiwC7KEKP2RMQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riHBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riHRwQEeiwC7KEKP2RMQ" target="_S9riIRwQEeiwC7KEKP2RMQ" source="_S9riHhwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9riHhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(condition)).input" incoming="_S9rhphwQEeiwC7KEKP2RMQ" outgoing="_S9riHRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riHxwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riIBwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9riIRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(condition)).output" incoming="_S9riHRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riIhwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riIxwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riJBwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riJRwQEeiwC7KEKP2RMQ" target="_S9riKRwQEeiwC7KEKP2RMQ" source="_S9riJhwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9riJhwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).input" incoming="_S9rhpxwQEeiwC7KEKP2RMQ" outgoing="_S9riJRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riJxwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riKBwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_S9riKRwQEeiwC7KEKP2RMQ" name="Passthru(Fork(label)).output" incoming="_S9riJRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riKhwQEeiwC7KEKP2RMQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riKxwQEeiwC7KEKP2RMQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_S9riLBwQEeiwC7KEKP2RMQ" body="_S9rh3BwQEeiwC7KEKP2RMQ _S9riBxwQEeiwC7KEKP2RMQ _S9riDxwQEeiwC7KEKP2RMQ" bodyOutput="_S9riDBwQEeiwC7KEKP2RMQ _S9riFBwQEeiwC7KEKP2RMQ" decider="_S9rh2RwQEeiwC7KEKP2RMQ" successorClause="_S9riLRwQEeiwC7KEKP2RMQ" test="_S9rhsBwQEeiwC7KEKP2RMQ"/>
          <clause xmi:id="_S9riLRwQEeiwC7KEKP2RMQ" body="_S9riHBwQEeiwC7KEKP2RMQ _S9riJBwQEeiwC7KEKP2RMQ" bodyOutput="_S9riIRwQEeiwC7KEKP2RMQ _S9riKRwQEeiwC7KEKP2RMQ" decider="_S9riGBwQEeiwC7KEKP2RMQ" predecessorClause="_S9riLBwQEeiwC7KEKP2RMQ" test="_S9riFxwQEeiwC7KEKP2RMQ"/>
          <result xmi:id="_S9riLhwQEeiwC7KEKP2RMQ" name="IfStatement@5b79e206.result(condition)" outgoing="_S9rhrRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riLxwQEeiwC7KEKP2RMQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riMBwQEeiwC7KEKP2RMQ" value="1"/>
          </result>
          <result xmi:id="_S9riMRwQEeiwC7KEKP2RMQ" name="IfStatement@5b79e206.result(label)" outgoing="_S9rhrhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riMhwQEeiwC7KEKP2RMQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riMxwQEeiwC7KEKP2RMQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_S9riNBwQEeiwC7KEKP2RMQ" name="Fork(condition)" incoming="_S9rhrRwQEeiwC7KEKP2RMQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_S9riNRwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9rhrhwQEeiwC7KEKP2RMQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9rhqBwQEeiwC7KEKP2RMQ" name="Input(label)" outgoing="_S9rhoBwQEeiwC7KEKP2RMQ" parameter="_S9rhmhwQEeiwC7KEKP2RMQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_S9rhqRwQEeiwC7KEKP2RMQ" name="Fork(label)" incoming="_S9rhoBwQEeiwC7KEKP2RMQ" outgoing="_S9rhoxwQEeiwC7KEKP2RMQ _S9rhpRwQEeiwC7KEKP2RMQ _S9rhpxwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9rhqhwQEeiwC7KEKP2RMQ" name="Input(condition)" outgoing="_S9rhoRwQEeiwC7KEKP2RMQ" parameter="_S9rhnRwQEeiwC7KEKP2RMQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_S9rhqxwQEeiwC7KEKP2RMQ" name="Fork(condition)" incoming="_S9rhoRwQEeiwC7KEKP2RMQ" outgoing="_S9rhohwQEeiwC7KEKP2RMQ _S9rhpBwQEeiwC7KEKP2RMQ _S9rhphwQEeiwC7KEKP2RMQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_S9riNhwQEeiwC7KEKP2RMQ" name="Write" visibility="public" node="_S9riQRwQEeiwC7KEKP2RMQ _S9riQhwQEeiwC7KEKP2RMQ _S9riQxwQEeiwC7KEKP2RMQ" group="_S9riQxwQEeiwC7KEKP2RMQ">
      <packageImport xmi:id="_S9riNxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_S9riOBwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_S9riORwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_S9riOhwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_S9riOxwQEeiwC7KEKP2RMQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_S9riPBwQEeiwC7KEKP2RMQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riPRwQEeiwC7KEKP2RMQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riPhwQEeiwC7KEKP2RMQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riPxwQEeiwC7KEKP2RMQ" target="_S9riQhwQEeiwC7KEKP2RMQ" source="_S9riQRwQEeiwC7KEKP2RMQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riQBwQEeiwC7KEKP2RMQ" target="_S9riTBwQEeiwC7KEKP2RMQ" source="_S9riQhwQEeiwC7KEKP2RMQ"/>
      <structuredNode xmi:id="_S9riQxwQEeiwC7KEKP2RMQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riRBwQEeiwC7KEKP2RMQ" name="ExpressionStatement@4c4222e6">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riRRwQEeiwC7KEKP2RMQ" target="_S9rihxwQEeiwC7KEKP2RMQ" source="_S9rilBwQEeiwC7KEKP2RMQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_S9riRhwQEeiwC7KEKP2RMQ" target="_S9riRxwQEeiwC7KEKP2RMQ" source="_S9riiBwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_S9riRxwQEeiwC7KEKP2RMQ" name="Collect(Call(write))" incoming="_S9riRhwQEeiwC7KEKP2RMQ" mode="parallel" inputElement="_S9rihxwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riSBwQEeiwC7KEKP2RMQ" target="_S9riUBwQEeiwC7KEKP2RMQ" source="_S9rihhwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riSRwQEeiwC7KEKP2RMQ" target="_S9riZhwQEeiwC7KEKP2RMQ" source="_S9riTBwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9riShwQEeiwC7KEKP2RMQ" target="_S9riTxwQEeiwC7KEKP2RMQ" source="_S9riWRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riSxwQEeiwC7KEKP2RMQ" target="_S9riVhwQEeiwC7KEKP2RMQ" source="_S9rihxwQEeiwC7KEKP2RMQ"/>
            <structuredNodeInput xmi:id="_S9riTBwQEeiwC7KEKP2RMQ" name="Collect(Call(write)).input(Fork(value))" incoming="_S9riQBwQEeiwC7KEKP2RMQ" outgoing="_S9riSRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riTRwQEeiwC7KEKP2RMQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riThwQEeiwC7KEKP2RMQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_S9riTxwQEeiwC7KEKP2RMQ" name="Call(write)" incoming="_S9riShwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9riUBwQEeiwC7KEKP2RMQ" name="Call(write).argument(value)" incoming="_S9riSBwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riURwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riUhwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9riUxwQEeiwC7KEKP2RMQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riVBwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riVRwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_S9riVhwQEeiwC7KEKP2RMQ" name="Call(write).target" incoming="_S9riSxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riVxwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riWBwQEeiwC7KEKP2RMQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riWRwQEeiwC7KEKP2RMQ" name="Tuple@5d4427c4" outgoing="_S9riShwQEeiwC7KEKP2RMQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riWhwQEeiwC7KEKP2RMQ" target="_S9ribhwQEeiwC7KEKP2RMQ" source="_S9riZhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9riWxwQEeiwC7KEKP2RMQ" target="_S9ribRwQEeiwC7KEKP2RMQ" source="_S9riZRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riXBwQEeiwC7KEKP2RMQ" target="_S9rieRwQEeiwC7KEKP2RMQ" source="_S9riZhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9riXRwQEeiwC7KEKP2RMQ" target="_S9rihRwQEeiwC7KEKP2RMQ" source="_S9rihBwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riXhwQEeiwC7KEKP2RMQ" target="_S9rihRwQEeiwC7KEKP2RMQ" source="_S9ricRwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9riXxwQEeiwC7KEKP2RMQ" target="_S9ridBwQEeiwC7KEKP2RMQ" source="_S9rihRwQEeiwC7KEKP2RMQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9riYBwQEeiwC7KEKP2RMQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_S9riYRwQEeiwC7KEKP2RMQ" target="_S9riehwQEeiwC7KEKP2RMQ" source="_S9rihRwQEeiwC7KEKP2RMQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_S9riYhwQEeiwC7KEKP2RMQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riYxwQEeiwC7KEKP2RMQ" target="_S9rihhwQEeiwC7KEKP2RMQ" source="_S9ridhwQEeiwC7KEKP2RMQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riZBwQEeiwC7KEKP2RMQ" target="_S9rihhwQEeiwC7KEKP2RMQ" source="_S9rifBwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riZRwQEeiwC7KEKP2RMQ" name="Operands(EqualityExpression@67efb873)" outgoing="_S9riWxwQEeiwC7KEKP2RMQ">
                <node xmi:type="uml:ForkNode" xmi:id="_S9riZhwQEeiwC7KEKP2RMQ" name="Fork('')@3d0f37ba" incoming="_S9riSRwQEeiwC7KEKP2RMQ" outgoing="_S9riWhwQEeiwC7KEKP2RMQ _S9riXBwQEeiwC7KEKP2RMQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riZxwQEeiwC7KEKP2RMQ" name="RightHandSide@7dcb9f54"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9riaBwQEeiwC7KEKP2RMQ" name="Value(null)">
                  <result xmi:id="_S9riaRwQEeiwC7KEKP2RMQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9riahwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9riaxwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_S9ribBwQEeiwC7KEKP2RMQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9ribRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty)" incoming="_S9riWxwQEeiwC7KEKP2RMQ">
                <argument xmi:id="_S9ribhwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).argument(seq)" incoming="_S9riWhwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9ribxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9ricBwQEeiwC7KEKP2RMQ" value="*"/>
                </argument>
                <result xmi:id="_S9ricRwQEeiwC7KEKP2RMQ" name="Call(NotEmpty).result()" outgoing="_S9riXhwQEeiwC7KEKP2RMQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9richwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9ricxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9ridBwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@429e2818.operand2" incoming="_S9riXxwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9ridRwQEeiwC7KEKP2RMQ" target="_S9ridhwQEeiwC7KEKP2RMQ" source="_S9rieRwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9ridhwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@429e2818.operand2.result" incoming="_S9ridRwQEeiwC7KEKP2RMQ" outgoing="_S9riYxwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9ridxwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rieBwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_S9rieRwQEeiwC7KEKP2RMQ" name="Merge(Fork('')@3d0f37ba)" incoming="_S9riXBwQEeiwC7KEKP2RMQ" outgoing="_S9ridRwQEeiwC7KEKP2RMQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riehwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@429e2818.operand3" incoming="_S9riYRwQEeiwC7KEKP2RMQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riexwQEeiwC7KEKP2RMQ" target="_S9rifBwQEeiwC7KEKP2RMQ" source="_S9rigBwQEeiwC7KEKP2RMQ"/>
                <structuredNodeOutput xmi:id="_S9rifBwQEeiwC7KEKP2RMQ" name="NullCoalescingExpression@429e2818.operand3.result" incoming="_S9riexwQEeiwC7KEKP2RMQ" outgoing="_S9riZBwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rifRwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rifhwQEeiwC7KEKP2RMQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rifxwQEeiwC7KEKP2RMQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_S9rigBwQEeiwC7KEKP2RMQ" name="Value(&quot;null&quot;).result" outgoing="_S9riexwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rigRwQEeiwC7KEKP2RMQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9righwQEeiwC7KEKP2RMQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_S9rigxwQEeiwC7KEKP2RMQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_S9rihBwQEeiwC7KEKP2RMQ" name="Initial(NullCoalescingExpression@429e2818)" outgoing="_S9riXRwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_S9rihRwQEeiwC7KEKP2RMQ" name="Decision(NullCoalescingExpression@429e2818)" incoming="_S9riXRwQEeiwC7KEKP2RMQ _S9riXhwQEeiwC7KEKP2RMQ" outgoing="_S9riXxwQEeiwC7KEKP2RMQ _S9riYRwQEeiwC7KEKP2RMQ" decisionInputFlow="_S9riXhwQEeiwC7KEKP2RMQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_S9rihhwQEeiwC7KEKP2RMQ" name="Merge(NullCoalescingExpression@429e2818.result)" incoming="_S9riYxwQEeiwC7KEKP2RMQ _S9riZBwQEeiwC7KEKP2RMQ" outgoing="_S9riSBwQEeiwC7KEKP2RMQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_S9rihxwQEeiwC7KEKP2RMQ" name="Collect(Call(write)).inputElement" incoming="_S9riRRwQEeiwC7KEKP2RMQ" outgoing="_S9riSxwQEeiwC7KEKP2RMQ" regionAsInput="_S9riRxwQEeiwC7KEKP2RMQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9riiBwQEeiwC7KEKP2RMQ" name="Feature(Call(At).result())" outgoing="_S9riRhwQEeiwC7KEKP2RMQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riiRwQEeiwC7KEKP2RMQ" target="_S9rijhwQEeiwC7KEKP2RMQ" source="_S9rimRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9riihwQEeiwC7KEKP2RMQ" target="_S9rioRwQEeiwC7KEKP2RMQ" source="_S9rinRwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_S9riixwQEeiwC7KEKP2RMQ" target="_S9rijRwQEeiwC7KEKP2RMQ" source="_S9rilxwQEeiwC7KEKP2RMQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_S9rijBwQEeiwC7KEKP2RMQ" target="_S9rikRwQEeiwC7KEKP2RMQ" source="_S9rioRwQEeiwC7KEKP2RMQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_S9rijRwQEeiwC7KEKP2RMQ" name="Call(At)" incoming="_S9riixwQEeiwC7KEKP2RMQ">
              <argument xmi:id="_S9rijhwQEeiwC7KEKP2RMQ" name="Call(At).argument(seq)" incoming="_S9riiRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rijxwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rikBwQEeiwC7KEKP2RMQ" value="*"/>
              </argument>
              <argument xmi:id="_S9rikRwQEeiwC7KEKP2RMQ" name="Call(At).argument(index)" incoming="_S9rijBwQEeiwC7KEKP2RMQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rikhwQEeiwC7KEKP2RMQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rikxwQEeiwC7KEKP2RMQ" value="1"/>
              </argument>
              <result xmi:id="_S9rilBwQEeiwC7KEKP2RMQ" name="Call(At).result()" outgoing="_S9riRRwQEeiwC7KEKP2RMQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rilRwQEeiwC7KEKP2RMQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rilhwQEeiwC7KEKP2RMQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_S9rilxwQEeiwC7KEKP2RMQ" name="Tuple@27fc244e" outgoing="_S9riixwQEeiwC7KEKP2RMQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_S9rimBwQEeiwC7KEKP2RMQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_S9rimRwQEeiwC7KEKP2RMQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_S9riiRwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rimhwQEeiwC7KEKP2RMQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rimxwQEeiwC7KEKP2RMQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_S9rinBwQEeiwC7KEKP2RMQ" name="Value(1)">
                <result xmi:id="_S9rinRwQEeiwC7KEKP2RMQ" name="Value(1).result" outgoing="_S9riihwQEeiwC7KEKP2RMQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_S9rinhwQEeiwC7KEKP2RMQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_S9rinxwQEeiwC7KEKP2RMQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_S9rioBwQEeiwC7KEKP2RMQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_S9rioRwQEeiwC7KEKP2RMQ" name="Fork(Call(At).argument(index))" incoming="_S9riihwQEeiwC7KEKP2RMQ" outgoing="_S9rijBwQEeiwC7KEKP2RMQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_S9riQRwQEeiwC7KEKP2RMQ" name="Input(value)" outgoing="_S9riPxwQEeiwC7KEKP2RMQ" parameter="_S9riPBwQEeiwC7KEKP2RMQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_S9riQhwQEeiwC7KEKP2RMQ" name="Fork(value)" incoming="_S9riPxwQEeiwC7KEKP2RMQ" outgoing="_S9riQBwQEeiwC7KEKP2RMQ"/>
    </packagedElement>
    <profileApplication xmi:id="_S9riohwQEeiwC7KEKP2RMQ">
      <eAnnotations xmi:id="_S9rioxwQEeiwC7KEKP2RMQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_S9ripBwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9q5ShwQEeiwC7KEKP2RMQ"/>
  <l2:Create xmi:id="_S9ripRwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qUPxwQEeiwC7KEKP2RMQ"/>
  <l2:Destroy xmi:id="_S9riphwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qUWRwQEeiwC7KEKP2RMQ"/>
  <l2:Create xmi:id="_S9ripxwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qWIBwQEeiwC7KEKP2RMQ"/>
  <l2:Destroy xmi:id="_S9riqBwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qVGBwQEeiwC7KEKP2RMQ"/>
  <l2:Create xmi:id="_S9sHIBwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qVERwQEeiwC7KEKP2RMQ"/>
  <l2:Destroy xmi:id="_S9sHIRwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9q5ThwQEeiwC7KEKP2RMQ"/>
  <l2:Destroy xmi:id="_S9sHIhwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qWHhwQEeiwC7KEKP2RMQ"/>
  <l2:Create xmi:id="_S9sHIxwQEeiwC7KEKP2RMQ" base_BehavioralFeature="_S9qUOxwQEeiwC7KEKP2RMQ"/>
</xmi:XMI>

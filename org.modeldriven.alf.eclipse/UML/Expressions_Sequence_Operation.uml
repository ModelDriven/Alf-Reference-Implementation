<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_3lbkYLSpEem4MK7Gf1Ez8w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_3lbkYbSpEem4MK7Gf1Ez8w" name="Expressions_Sequence_Operation" visibility="public">
      <packageImport xmi:id="_3lbkYrSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lbkY7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lbkZLSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lbkZbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lbkZrSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_3lbkZ7SpEem4MK7Gf1Ez8w" general="_3lcMT7SpEem4MK7Gf1Ez8w"/>
      <ownedAttribute xmi:id="_3lbkaLSpEem4MK7Gf1Ez8w" name="Expressions_Sequence_Operation$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkabSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkarSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lbka7SpEem4MK7Gf1Ez8w" name="Expressions_Sequence_Operation$method$1" visibility="private" specification="_3lcLcbSpEem4MK7Gf1Ez8w" node="_3lbkcLSpEem4MK7Gf1Ez8w _3lbkcbSpEem4MK7Gf1Ez8w" group="_3lbkcbSpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lbkbLSpEem4MK7Gf1Ez8w" name="" type="_3lbkYbSpEem4MK7Gf1Ez8w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkbbSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkbrSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkb7SpEem4MK7Gf1Ez8w" target="_3lbkcLSpEem4MK7Gf1Ez8w" source="_3lbkmrSpEem4MK7Gf1Ez8w"/>
        <structuredNode xmi:id="_3lbkcbSpEem4MK7Gf1Ez8w" name="Body(Expressions_Sequence_Operation$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkcrSpEem4MK7Gf1Ez8w" target="_3lbkmrSpEem4MK7Gf1Ez8w" source="_3lbkl7SpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbkc7SpEem4MK7Gf1Ez8w" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbkdLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@58c77d6c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkdbSpEem4MK7Gf1Ez8w" target="_3lbkjbSpEem4MK7Gf1Ez8w" source="_3lbke7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkdrSpEem4MK7Gf1Ez8w" target="_3lbkjLSpEem4MK7Gf1Ez8w" source="_3lbkebSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkd7SpEem4MK7Gf1Ez8w" target="_3lbkhrSpEem4MK7Gf1Ez8w" source="_3lbkgLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkeLSpEem4MK7Gf1Ez8w" target="_3lbkg7SpEem4MK7Gf1Ez8w" source="_3lbkebSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbkebSpEem4MK7Gf1Ez8w" name="Tuple@26bb0094" outgoing="_3lbkdrSpEem4MK7Gf1Ez8w _3lbkeLSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbkerSpEem4MK7Gf1Ez8w" name="Value(null)">
                  <result xmi:id="_3lbke7SpEem4MK7Gf1Ez8w" name="Value(null).result" outgoing="_3lbkdbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkfLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkfbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_3lbkfrSpEem4MK7Gf1Ez8w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3lbkf7SpEem4MK7Gf1Ez8w" name="ReadSelf">
                <result xmi:id="_3lbkgLSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lbkd7SpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkgbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkgrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbkg7SpEem4MK7Gf1Ez8w" name="Node(Call(run))" incoming="_3lbkeLSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkhLSpEem4MK7Gf1Ez8w" target="_3lbkibSpEem4MK7Gf1Ez8w" source="_3lbkkLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkhbSpEem4MK7Gf1Ez8w" target="_3lbkk7SpEem4MK7Gf1Ez8w" source="_3lbkhrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lbkhrSpEem4MK7Gf1Ez8w" name="Input(Call(run).target)" incoming="_3lbkd7SpEem4MK7Gf1Ez8w" outgoing="_3lbkhbSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkh7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkiLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lbkibSpEem4MK7Gf1Ez8w" name="Output(Call(run).result())" incoming="_3lbkhLSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkirSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbki7SpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_3lbkjLSpEem4MK7Gf1Ez8w" name="Call(run)" incoming="_3lbkdrSpEem4MK7Gf1Ez8w" operation="_3lcLdbSpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lbkjbSpEem4MK7Gf1Ez8w" name="Call(run).argument(tester)" incoming="_3lbkdbSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkjrSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkj7SpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbkkLSpEem4MK7Gf1Ez8w" name="Call(run).result()" outgoing="_3lbkhLSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkkbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkkrSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <target xmi:id="_3lbkk7SpEem4MK7Gf1Ez8w" name="Call(run).target" incoming="_3lbkhbSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbklLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbklbSpEem4MK7Gf1Ez8w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3lbklrSpEem4MK7Gf1Ez8w" name="ReadSelf">
            <result xmi:id="_3lbkl7SpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lbkcrSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkmLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkmbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lbkmrSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lbkcrSpEem4MK7Gf1Ez8w" outgoing="_3lbkb7SpEem4MK7Gf1Ez8w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbkcLSpEem4MK7Gf1Ez8w" name="Return" incoming="_3lbkb7SpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" parameter="_3lbkbLSpEem4MK7Gf1Ez8w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lbkm7SpEem4MK7Gf1Ez8w" name="run$method$1" visibility="private" specification="_3lcLdbSpEem4MK7Gf1Ez8w" node="_3lbkpbSpEem4MK7Gf1Ez8w _3lbkprSpEem4MK7Gf1Ez8w _3lbkp7SpEem4MK7Gf1Ez8w _3lbkqLSpEem4MK7Gf1Ez8w" group="_3lbkqLSpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lbknLSpEem4MK7Gf1Ez8w" name="tester" type="_3lcNYbSpEem4MK7Gf1Ez8w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbknbSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbknrSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lbkn7SpEem4MK7Gf1Ez8w" name="" type="_3lbkYbSpEem4MK7Gf1Ez8w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkoLSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkobSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkorSpEem4MK7Gf1Ez8w" target="_3lbkprSpEem4MK7Gf1Ez8w" source="_3lbkpbSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbko7SpEem4MK7Gf1Ez8w" target="_3lbkp7SpEem4MK7Gf1Ez8w" source="_3lblmrSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkpLSpEem4MK7Gf1Ez8w" target="_3lblo7SpEem4MK7Gf1Ez8w" source="_3lbkprSpEem4MK7Gf1Ez8w"/>
        <structuredNode xmi:id="_3lbkqLSpEem4MK7Gf1Ez8w" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkqbSpEem4MK7Gf1Ez8w" target="_3lblmrSpEem4MK7Gf1Ez8w" source="_3lbll7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkqrSpEem4MK7Gf1Ez8w" target="_3lblqrSpEem4MK7Gf1Ez8w" source="_3lblmrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkq7SpEem4MK7Gf1Ez8w" target="_3lbktbSpEem4MK7Gf1Ez8w" source="_3lblqbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkrLSpEem4MK7Gf1Ez8w" target="_3lblqbSpEem4MK7Gf1Ez8w" source="_3lblm7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkrbSpEem4MK7Gf1Ez8w" target="_3lblrrSpEem4MK7Gf1Ez8w" source="_3lblmrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkrrSpEem4MK7Gf1Ez8w" target="_3lbltbSpEem4MK7Gf1Ez8w" source="_3lblsbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkr7SpEem4MK7Gf1Ez8w" target="_3lblwbSpEem4MK7Gf1Ez8w" source="_3lbluLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbksLSpEem4MK7Gf1Ez8w" target="_3lblx7SpEem4MK7Gf1Ez8w" source="_3lblvLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbksbSpEem4MK7Gf1Ez8w" target="_3lbly7SpEem4MK7Gf1Ez8w" source="_3lblyrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbksrSpEem4MK7Gf1Ez8w" target="_3lbly7SpEem4MK7Gf1Ez8w" source="_3lblxLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbks7SpEem4MK7Gf1Ez8w" target="_3lblm7SpEem4MK7Gf1Ez8w" source="_3lbly7SpEem4MK7Gf1Ez8w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lbktLSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbktbSpEem4MK7Gf1Ez8w" name="Body" incoming="_3lbkq7SpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbktrSpEem4MK7Gf1Ez8w" target="_3lbk8rSpEem4MK7Gf1Ez8w" source="_3lbk5bSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkt7SpEem4MK7Gf1Ez8w" target="_3lbk67SpEem4MK7Gf1Ez8w" source="_3lbkw7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkuLSpEem4MK7Gf1Ez8w" target="_3lblArSpEem4MK7Gf1Ez8w" source="_3lbk5rSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkubSpEem4MK7Gf1Ez8w" target="_3lbk-7SpEem4MK7Gf1Ez8w" source="_3lbk67SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkurSpEem4MK7Gf1Ez8w" target="_3lblE7SpEem4MK7Gf1Ez8w" source="_3lbk57SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbku7SpEem4MK7Gf1Ez8w" target="_3lblC7SpEem4MK7Gf1Ez8w" source="_3lbk-7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkvLSpEem4MK7Gf1Ez8w" target="_3lblLLSpEem4MK7Gf1Ez8w" source="_3lbk6LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkvbSpEem4MK7Gf1Ez8w" target="_3lblJLSpEem4MK7Gf1Ez8w" source="_3lblC7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkvrSpEem4MK7Gf1Ez8w" target="_3lblU7SpEem4MK7Gf1Ez8w" source="_3lbk6bSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkv7SpEem4MK7Gf1Ez8w" target="_3lblPbSpEem4MK7Gf1Ez8w" source="_3lblJLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkwLSpEem4MK7Gf1Ez8w" target="_3lblbbSpEem4MK7Gf1Ez8w" source="_3lbk6rSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkwbSpEem4MK7Gf1Ez8w" target="_3lblZbSpEem4MK7Gf1Ez8w" source="_3lblPbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbkwrSpEem4MK7Gf1Ez8w" target="_3lbljLSpEem4MK7Gf1Ez8w" source="_3lblZbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbkw7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@3641c99a" outgoing="_3lbkt7SpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkxLSpEem4MK7Gf1Ez8w" target="_3lbk5bSpEem4MK7Gf1Ez8w" source="_3lbkzLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkxbSpEem4MK7Gf1Ez8w" target="_3lbk5rSpEem4MK7Gf1Ez8w" source="_3lbkz7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkxrSpEem4MK7Gf1Ez8w" target="_3lbk57SpEem4MK7Gf1Ez8w" source="_3lbk0rSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkx7SpEem4MK7Gf1Ez8w" target="_3lbk6LSpEem4MK7Gf1Ez8w" source="_3lbk1bSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkyLSpEem4MK7Gf1Ez8w" target="_3lbk6bSpEem4MK7Gf1Ez8w" source="_3lbk2LSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkybSpEem4MK7Gf1Ez8w" target="_3lbk6rSpEem4MK7Gf1Ez8w" source="_3lbk27SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbkyrSpEem4MK7Gf1Ez8w" target="_3lbk3rSpEem4MK7Gf1Ez8w" source="_3lbk4rSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_3lbky7SpEem4MK7Gf1Ez8w" name="Call(test)" operation="_3lcLfLSpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lbkzLSpEem4MK7Gf1Ez8w" name="Call(test).result(notEmpty)" outgoing="_3lbkxLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbkzbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbkzrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <result xmi:id="_3lbkz7SpEem4MK7Gf1Ez8w" name="Call(test).result(includes)" outgoing="_3lbkxbSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk0LSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk0bSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <result xmi:id="_3lbk0rSpEem4MK7Gf1Ez8w" name="Call(test).result(m)" outgoing="_3lbkxrSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk07SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk1LSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <result xmi:id="_3lbk1bSpEem4MK7Gf1Ez8w" name="Call(test).result(n)" outgoing="_3lbkx7SpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk1rSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk17SpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <result xmi:id="_3lbk2LSpEem4MK7Gf1Ez8w" name="Call(test).result(customers)" outgoing="_3lbkyLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk2bSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk2rSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <result xmi:id="_3lbk27SpEem4MK7Gf1Ez8w" name="Call(test).result(list)" outgoing="_3lbkybSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk3LSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk3bSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <target xmi:id="_3lbk3rSpEem4MK7Gf1Ez8w" name="Call(test).target" incoming="_3lbkyrSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk37SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk4LSpEem4MK7Gf1Ez8w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3lbk4bSpEem4MK7Gf1Ez8w" name="ReadSelf">
                <result xmi:id="_3lbk4rSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lbkyrSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk47SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk5LSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_3lbk5bSpEem4MK7Gf1Ez8w" name="Fork(notEmpty)@392f31cc" incoming="_3lbkxLSpEem4MK7Gf1Ez8w" outgoing="_3lbktrSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3lbk5rSpEem4MK7Gf1Ez8w" name="Fork(includes)@a8de89d" incoming="_3lbkxbSpEem4MK7Gf1Ez8w" outgoing="_3lbkuLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3lbk57SpEem4MK7Gf1Ez8w" name="Fork(m)@18aa5a71" incoming="_3lbkxrSpEem4MK7Gf1Ez8w" outgoing="_3lbkurSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3lbk6LSpEem4MK7Gf1Ez8w" name="Fork(n)@584bb9f9" incoming="_3lbkx7SpEem4MK7Gf1Ez8w" outgoing="_3lbkvLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3lbk6bSpEem4MK7Gf1Ez8w" name="Fork(customers)@741f8c5c" incoming="_3lbkyLSpEem4MK7Gf1Ez8w" outgoing="_3lbkvrSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3lbk6rSpEem4MK7Gf1Ez8w" name="Fork(list)@11335b42" incoming="_3lbkybSpEem4MK7Gf1Ez8w" outgoing="_3lbkwLSpEem4MK7Gf1Ez8w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbk67SpEem4MK7Gf1Ez8w" name="ExpressionStatement@68088485" incoming="_3lbkt7SpEem4MK7Gf1Ez8w" outgoing="_3lbkubSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbk7LSpEem4MK7Gf1Ez8w" target="_3lbk77SpEem4MK7Gf1Ez8w" source="_3lbk97SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbk7bSpEem4MK7Gf1Ez8w" target="_3lbk7rSpEem4MK7Gf1Ez8w" source="_3lbk9bSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbk7rSpEem4MK7Gf1Ez8w" name="Call(AssertFalse)" incoming="_3lbk7bSpEem4MK7Gf1Ez8w" behavior="_3lcN87SpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbk77SpEem4MK7Gf1Ez8w" name="Call(AssertFalse).argument(label)" incoming="_3lbk7LSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk8LSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk8bSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lbk8rSpEem4MK7Gf1Ez8w" name="Call(AssertFalse).argument(condition)" incoming="_3lbktrSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk87SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk9LSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbk9bSpEem4MK7Gf1Ez8w" name="Tuple@6758e37b" outgoing="_3lbk7bSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbk9rSpEem4MK7Gf1Ez8w" name="Value(&quot;notEmpty&quot;)">
                  <result xmi:id="_3lbk97SpEem4MK7Gf1Ez8w" name="Value(&quot;notEmpty&quot;).result" outgoing="_3lbk7LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbk-LSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbk-bSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lbk-rSpEem4MK7Gf1Ez8w" value="notEmpty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbk-7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@49fcdfa3" incoming="_3lbkubSpEem4MK7Gf1Ez8w" outgoing="_3lbku7SpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbk_LSpEem4MK7Gf1Ez8w" target="_3lbk_7SpEem4MK7Gf1Ez8w" source="_3lblB7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbk_bSpEem4MK7Gf1Ez8w" target="_3lbk_rSpEem4MK7Gf1Ez8w" source="_3lblBbSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbk_rSpEem4MK7Gf1Ez8w" name="Call(AssertFalse)" incoming="_3lbk_bSpEem4MK7Gf1Ez8w" behavior="_3lcN87SpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbk_7SpEem4MK7Gf1Ez8w" name="Call(AssertFalse).argument(label)" incoming="_3lbk_LSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblALSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblAbSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblArSpEem4MK7Gf1Ez8w" name="Call(AssertFalse).argument(condition)" incoming="_3lbkuLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblA7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblBLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblBbSpEem4MK7Gf1Ez8w" name="Tuple@10622e6b" outgoing="_3lbk_bSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblBrSpEem4MK7Gf1Ez8w" name="Value(&quot;includes&quot;)">
                  <result xmi:id="_3lblB7SpEem4MK7Gf1Ez8w" name="Value(&quot;includes&quot;).result" outgoing="_3lbk_LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblCLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblCbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lblCrSpEem4MK7Gf1Ez8w" value="includes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblC7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@15e6f71d" incoming="_3lbku7SpEem4MK7Gf1Ez8w" outgoing="_3lbkvbSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblDLSpEem4MK7Gf1Ez8w" target="_3lblELSpEem4MK7Gf1Ez8w" source="_3lblG7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblDbSpEem4MK7Gf1Ez8w" target="_3lblFrSpEem4MK7Gf1Ez8w" source="_3lblILSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lblDrSpEem4MK7Gf1Ez8w" target="_3lblD7SpEem4MK7Gf1Ez8w" source="_3lblGbSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lblD7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual)" incoming="_3lblDrSpEem4MK7Gf1Ez8w" behavior="_3lcOWLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lblELSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(label)" incoming="_3lblDLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblEbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblErSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblE7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value1)" incoming="_3lbkurSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblFLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblFbSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblFrSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value2)" incoming="_3lblDbSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblF7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblGLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblGbSpEem4MK7Gf1Ez8w" name="Tuple@12468244" outgoing="_3lblDrSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblGrSpEem4MK7Gf1Ez8w" name="Value(&quot;m&quot;)">
                  <result xmi:id="_3lblG7SpEem4MK7Gf1Ez8w" name="Value(&quot;m&quot;).result" outgoing="_3lblDLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblHLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblHbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lblHrSpEem4MK7Gf1Ez8w" value="m">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblH7SpEem4MK7Gf1Ez8w" name="Value(3)">
                  <result xmi:id="_3lblILSpEem4MK7Gf1Ez8w" name="Value(3).result" outgoing="_3lblDbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblIbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblIrSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_3lblI7SpEem4MK7Gf1Ez8w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblJLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@69d1e129" incoming="_3lbkvbSpEem4MK7Gf1Ez8w" outgoing="_3lbkv7SpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblJbSpEem4MK7Gf1Ez8w" target="_3lblKbSpEem4MK7Gf1Ez8w" source="_3lblNLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblJrSpEem4MK7Gf1Ez8w" target="_3lblL7SpEem4MK7Gf1Ez8w" source="_3lblObSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lblJ7SpEem4MK7Gf1Ez8w" target="_3lblKLSpEem4MK7Gf1Ez8w" source="_3lblMrSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lblKLSpEem4MK7Gf1Ez8w" name="Call(AssertEqual)" incoming="_3lblJ7SpEem4MK7Gf1Ez8w" behavior="_3lcOWLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lblKbSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(label)" incoming="_3lblJbSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblKrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblK7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblLLSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value1)" incoming="_3lbkvLSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblLbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblLrSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblL7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value2)" incoming="_3lblJrSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblMLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblMbSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblMrSpEem4MK7Gf1Ez8w" name="Tuple@6265ff7" outgoing="_3lblJ7SpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblM7SpEem4MK7Gf1Ez8w" name="Value(&quot;n&quot;)">
                  <result xmi:id="_3lblNLSpEem4MK7Gf1Ez8w" name="Value(&quot;n&quot;).result" outgoing="_3lblJbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblNbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblNrSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lblN7SpEem4MK7Gf1Ez8w" value="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblOLSpEem4MK7Gf1Ez8w" name="Value(3)">
                  <result xmi:id="_3lblObSpEem4MK7Gf1Ez8w" name="Value(3).result" outgoing="_3lblJrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblOrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblO7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_3lblPLSpEem4MK7Gf1Ez8w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblPbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@8418a64" incoming="_3lbkv7SpEem4MK7Gf1Ez8w" outgoing="_3lbkwbSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblPrSpEem4MK7Gf1Ez8w" target="_3lblQ7SpEem4MK7Gf1Ez8w" source="_3lblT7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblP7SpEem4MK7Gf1Ez8w" target="_3lblRrSpEem4MK7Gf1Ez8w" source="_3lblX7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblQLSpEem4MK7Gf1Ez8w" target="_3lblSbSpEem4MK7Gf1Ez8w" source="_3lblYbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lblQbSpEem4MK7Gf1Ez8w" target="_3lblQrSpEem4MK7Gf1Ez8w" source="_3lblTLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lblQrSpEem4MK7Gf1Ez8w" name="Call(AssertList)" incoming="_3lblQbSpEem4MK7Gf1Ez8w" behavior="_3lczeLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lblQ7SpEem4MK7Gf1Ez8w" name="Call(AssertList).argument(label)" incoming="_3lblPrSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblRLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblRbSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblRrSpEem4MK7Gf1Ez8w" name="Call(AssertList).argument(list)" incoming="_3lblP7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblR7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblSLSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lblSbSpEem4MK7Gf1Ez8w" name="Call(AssertList).argument(expected)" incoming="_3lblQLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblSrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblS7SpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblTLSpEem4MK7Gf1Ez8w" name="Tuple@5d15fec8" outgoing="_3lblQbSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblTbSpEem4MK7Gf1Ez8w" target="_3lblXrSpEem4MK7Gf1Ez8w" source="_3lblU7SpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblTrSpEem4MK7Gf1Ez8w" name="Value(&quot;customers.name&quot;)">
                  <result xmi:id="_3lblT7SpEem4MK7Gf1Ez8w" name="Value(&quot;customers.name&quot;).result" outgoing="_3lblPrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblULSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblUbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lblUrSpEem4MK7Gf1Ez8w" value="customers.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3lblU7SpEem4MK7Gf1Ez8w" name="Fork(Fork(customers)@741f8c5c)" incoming="_3lbkvrSpEem4MK7Gf1Ez8w" outgoing="_3lblTbSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_3lblVLSpEem4MK7Gf1Ez8w" name="Collect(Read(name))" mode="parallel" outputElement="_3lblX7SpEem4MK7Gf1Ez8w" inputElement="_3lblXrSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblVbSpEem4MK7Gf1Ez8w" target="_3lblWLSpEem4MK7Gf1Ez8w" source="_3lblXrSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblVrSpEem4MK7Gf1Ez8w" target="_3lblX7SpEem4MK7Gf1Ez8w" source="_3lblW7SpEem4MK7Gf1Ez8w"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lblV7SpEem4MK7Gf1Ez8w" name="Read(name)" structuralFeature="_3lcLlLSpEem4MK7Gf1Ez8w">
                    <object xmi:id="_3lblWLSpEem4MK7Gf1Ez8w" name="Read(name).object" incoming="_3lblVbSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblWbSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblWrSpEem4MK7Gf1Ez8w" value="1"/>
                    </object>
                    <result xmi:id="_3lblW7SpEem4MK7Gf1Ez8w" name="Read(name).result" outgoing="_3lblVrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblXLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblXbSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3lblXrSpEem4MK7Gf1Ez8w" name="Collect(Read(name)).inputElement" incoming="_3lblTbSpEem4MK7Gf1Ez8w" outgoing="_3lblVbSpEem4MK7Gf1Ez8w" regionAsInput="_3lblVLSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3lblX7SpEem4MK7Gf1Ez8w" name="Collect(Read(name)).outputElement" incoming="_3lblVrSpEem4MK7Gf1Ez8w" outgoing="_3lblP7SpEem4MK7Gf1Ez8w" regionAsOutput="_3lblVLSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblYLSpEem4MK7Gf1Ez8w" name="Value(&quot;C&quot;)">
                  <result xmi:id="_3lblYbSpEem4MK7Gf1Ez8w" name="Value(&quot;C&quot;).result" outgoing="_3lblQLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblYrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblY7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lblZLSpEem4MK7Gf1Ez8w" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblZbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@46a26b70" incoming="_3lbkwbSpEem4MK7Gf1Ez8w" outgoing="_3lbkwrSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblZrSpEem4MK7Gf1Ez8w" target="_3lblarSpEem4MK7Gf1Ez8w" source="_3lbldbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblZ7SpEem4MK7Gf1Ez8w" target="_3lblcLSpEem4MK7Gf1Ez8w" source="_3lblfbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lblaLSpEem4MK7Gf1Ez8w" target="_3lblabSpEem4MK7Gf1Ez8w" source="_3lblc7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lblabSpEem4MK7Gf1Ez8w" name="Call(AssertList)" incoming="_3lblaLSpEem4MK7Gf1Ez8w" behavior="_3lczeLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lblarSpEem4MK7Gf1Ez8w" name="Call(AssertList).argument(label)" incoming="_3lblZrSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbla7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblbLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lblbbSpEem4MK7Gf1Ez8w" name="Call(AssertList).argument(list)" incoming="_3lbkwLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblbrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblb7SpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lblcLSpEem4MK7Gf1Ez8w" name="Call(AssertList).argument(expected)" incoming="_3lblZ7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblcbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblcrSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblc7SpEem4MK7Gf1Ez8w" name="Tuple@2d8491b3" outgoing="_3lblaLSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbldLSpEem4MK7Gf1Ez8w" name="Value(&quot;list&quot;)">
                  <result xmi:id="_3lbldbSpEem4MK7Gf1Ez8w" name="Value(&quot;list&quot;).result" outgoing="_3lblZrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbldrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbld7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lbleLSpEem4MK7Gf1Ez8w" value="list">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblebSpEem4MK7Gf1Ez8w" name="SequenceConstructionExpression@59e2249">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lblerSpEem4MK7Gf1Ez8w" target="_3lblhrSpEem4MK7Gf1Ez8w" source="_3lblgLSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lble7SpEem4MK7Gf1Ez8w" target="_3lblfbSpEem4MK7Gf1Ez8w" source="_3lblgrSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblfLSpEem4MK7Gf1Ez8w" target="_3lblfbSpEem4MK7Gf1Ez8w" source="_3lbliLSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeOutput xmi:id="_3lblfbSpEem4MK7Gf1Ez8w" name="SequenceConstructionExpression@59e2249.output" incoming="_3lble7SpEem4MK7Gf1Ez8w _3lblfLSpEem4MK7Gf1Ez8w" outgoing="_3lblZ7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblfrSpEem4MK7Gf1Ez8w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblf7SpEem4MK7Gf1Ez8w" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblgLSpEem4MK7Gf1Ez8w" name="SequenceExpressionList@59155368#1" outgoing="_3lblerSpEem4MK7Gf1Ez8w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblgbSpEem4MK7Gf1Ez8w" name="Value(&quot;Blah&quot;)">
                      <result xmi:id="_3lblgrSpEem4MK7Gf1Ez8w" name="Value(&quot;Blah&quot;).result" outgoing="_3lble7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblg7SpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblhLSpEem4MK7Gf1Ez8w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_3lblhbSpEem4MK7Gf1Ez8w" value="Blah">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblhrSpEem4MK7Gf1Ez8w" name="SequenceExpressionList@59155368#2" incoming="_3lblerSpEem4MK7Gf1Ez8w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblh7SpEem4MK7Gf1Ez8w" name="Value(1)">
                      <result xmi:id="_3lbliLSpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lblfLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblibSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblirSpEem4MK7Gf1Ez8w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_3lbli7SpEem4MK7Gf1Ez8w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbljLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@570f022f" incoming="_3lbkwrSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbljbSpEem4MK7Gf1Ez8w" target="_3lblj7SpEem4MK7Gf1Ez8w" source="_3lblk7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_3lbljrSpEem4MK7Gf1Ez8w" name="Call(done)" operation="_3lcNVbSpEem4MK7Gf1Ez8w">
                <target xmi:id="_3lblj7SpEem4MK7Gf1Ez8w" name="Call(done).target" incoming="_3lbljbSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblkLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblkbSpEem4MK7Gf1Ez8w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3lblkrSpEem4MK7Gf1Ez8w" name="ReadSelf">
                <result xmi:id="_3lblk7SpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lbljbSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbllLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbllbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3lbllrSpEem4MK7Gf1Ez8w" name="ReadSelf">
            <result xmi:id="_3lbll7SpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lbkqbSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblmLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblmbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lblmrSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lbkqbSpEem4MK7Gf1Ez8w" outgoing="_3lbko7SpEem4MK7Gf1Ez8w _3lbkqrSpEem4MK7Gf1Ez8w _3lbkrbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblm7SpEem4MK7Gf1Ez8w" name="Super" incoming="_3lbks7SpEem4MK7Gf1Ez8w" outgoing="_3lbkrLSpEem4MK7Gf1Ez8w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblnLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@16a432f8">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lblnbSpEem4MK7Gf1Ez8w" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lblnrSpEem4MK7Gf1Ez8w" target="_3lbln7SpEem4MK7Gf1Ez8w" source="_3lblprSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbln7SpEem4MK7Gf1Ez8w" name="Output(Call(Test$method$1).result())" incoming="_3lblnrSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbloLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblobSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lblorSpEem4MK7Gf1Ez8w" name="Call(Test$method$1)" behavior="_3lcMdLSpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lblo7SpEem4MK7Gf1Ez8w" name="Call(Test$method$1).argument(tester)" incoming="_3lbkpLSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblpLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblpbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lblprSpEem4MK7Gf1Ez8w" name="Call(Test$method$1).result()" outgoing="_3lblnrSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblp7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblqLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_3lblqbSpEem4MK7Gf1Ez8w" name="Call(Expressions_Sequence_Operation$initialization$1)" incoming="_3lbkrLSpEem4MK7Gf1Ez8w" outgoing="_3lbkq7SpEem4MK7Gf1Ez8w" operation="_3lcLcLSpEem4MK7Gf1Ez8w">
            <target xmi:id="_3lblqrSpEem4MK7Gf1Ez8w" name="Call(Expressions_Sequence_Operation$initialization$1).target" incoming="_3lbkqrSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblq7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblrLSpEem4MK7Gf1Ez8w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lblrbSpEem4MK7Gf1Ez8w" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_3lbkaLSpEem4MK7Gf1Ez8w">
            <object xmi:id="_3lblrrSpEem4MK7Gf1Ez8w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_3lbkrbSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblr7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblsLSpEem4MK7Gf1Ez8w" value="1"/>
            </object>
            <result xmi:id="_3lblsbSpEem4MK7Gf1Ez8w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_3lbkrrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblsrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbls7SpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbltLSpEem4MK7Gf1Ez8w" name="Call(ListSize)">
            <argument xmi:id="_3lbltbSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lbkrrSpEem4MK7Gf1Ez8w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbltrSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblt7SpEem4MK7Gf1Ez8w" value="*"/>
            </argument>
            <result xmi:id="_3lbluLSpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lbkr7SpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblubSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblurSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lblu7SpEem4MK7Gf1Ez8w" name="Value(0)">
            <result xmi:id="_3lblvLSpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lbksLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblvbSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblvrSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3lblv7SpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3lblwLSpEem4MK7Gf1Ez8w" name="Test(Size==0)">
            <first xmi:id="_3lblwbSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lbkr7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblwrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblw7SpEem4MK7Gf1Ez8w" value="1"/>
            </first>
            <result xmi:id="_3lblxLSpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lbksrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblxbSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblxrSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <second xmi:id="_3lblx7SpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lbksLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblyLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblybSpEem4MK7Gf1Ez8w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3lblyrSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lbksbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3lbly7SpEem4MK7Gf1Ez8w" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_3lbksbSpEem4MK7Gf1Ez8w _3lbksrSpEem4MK7Gf1Ez8w" outgoing="_3lbks7SpEem4MK7Gf1Ez8w" decisionInputFlow="_3lbksrSpEem4MK7Gf1Ez8w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbkpbSpEem4MK7Gf1Ez8w" name="Input(tester)" outgoing="_3lbkorSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" parameter="_3lbknLSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3lbkprSpEem4MK7Gf1Ez8w" name="Fork(tester)" incoming="_3lbkorSpEem4MK7Gf1Ez8w" outgoing="_3lbkpLSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbkp7SpEem4MK7Gf1Ez8w" name="Return" incoming="_3lbko7SpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" parameter="_3lbkn7SpEem4MK7Gf1Ez8w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lblzLSpEem4MK7Gf1Ez8w" name="test$method$1" visibility="private" specification="_3lcLfLSpEem4MK7Gf1Ez8w" node="_3lbl5bSpEem4MK7Gf1Ez8w _3lbl5rSpEem4MK7Gf1Ez8w _3lbl57SpEem4MK7Gf1Ez8w _3lbl6LSpEem4MK7Gf1Ez8w _3lbl6bSpEem4MK7Gf1Ez8w _3lbl6rSpEem4MK7Gf1Ez8w _3lbl67SpEem4MK7Gf1Ez8w" group="_3lbl67SpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lblzbSpEem4MK7Gf1Ez8w" name="notEmpty" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lblzrSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lblz7SpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lbl0LSpEem4MK7Gf1Ez8w" name="includes" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbl0bSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbl0rSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lbl07SpEem4MK7Gf1Ez8w" name="m" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbl1LSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbl1bSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lbl1rSpEem4MK7Gf1Ez8w" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbl17SpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbl2LSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lbl2bSpEem4MK7Gf1Ez8w" name="customers" type="_3lcLkLSpEem4MK7Gf1Ez8w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbl2rSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbl27SpEem4MK7Gf1Ez8w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lbl3LSpEem4MK7Gf1Ez8w" name="list" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbl3bSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbl3rSpEem4MK7Gf1Ez8w" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl37SpEem4MK7Gf1Ez8w" target="_3lbl5bSpEem4MK7Gf1Ez8w" source="_3lbmGLSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl4LSpEem4MK7Gf1Ez8w" target="_3lbl5rSpEem4MK7Gf1Ez8w" source="_3lbmG7SpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl4bSpEem4MK7Gf1Ez8w" target="_3lbl57SpEem4MK7Gf1Ez8w" source="_3lbmHrSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl4rSpEem4MK7Gf1Ez8w" target="_3lbl6LSpEem4MK7Gf1Ez8w" source="_3lbmIbSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl47SpEem4MK7Gf1Ez8w" target="_3lbl6bSpEem4MK7Gf1Ez8w" source="_3lbmJLSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl5LSpEem4MK7Gf1Ez8w" target="_3lbl6rSpEem4MK7Gf1Ez8w" source="_3lbmJ7SpEem4MK7Gf1Ez8w"/>
        <structuredNode xmi:id="_3lbl67SpEem4MK7Gf1Ez8w" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl7LSpEem4MK7Gf1Ez8w" target="_3lbmTbSpEem4MK7Gf1Ez8w" source="_3lbmKrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl7bSpEem4MK7Gf1Ez8w" target="_3lbmYLSpEem4MK7Gf1Ez8w" source="_3lbmT7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl7rSpEem4MK7Gf1Ez8w" target="_3lbmVrSpEem4MK7Gf1Ez8w" source="_3lbmTbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl77SpEem4MK7Gf1Ez8w" target="_3lbmcLSpEem4MK7Gf1Ez8w" source="_3lbmT7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl8LSpEem4MK7Gf1Ez8w" target="_3lbmc7SpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl8bSpEem4MK7Gf1Ez8w" target="_3lbmZrSpEem4MK7Gf1Ez8w" source="_3lbmVrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl8rSpEem4MK7Gf1Ez8w" target="_3lbmg7SpEem4MK7Gf1Ez8w" source="_3lbmT7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl87SpEem4MK7Gf1Ez8w" target="_3lbmhrSpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl9LSpEem4MK7Gf1Ez8w" target="_3lbmebSpEem4MK7Gf1Ez8w" source="_3lbmZrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl9bSpEem4MK7Gf1Ez8w" target="_3lbmt7SpEem4MK7Gf1Ez8w" source="_3lbme7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl9rSpEem4MK7Gf1Ez8w" target="_3lbmjLSpEem4MK7Gf1Ez8w" source="_3lbmebSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl97SpEem4MK7Gf1Ez8w" target="_3lbm7LSpEem4MK7Gf1Ez8w" source="_3lbmwLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl-LSpEem4MK7Gf1Ez8w" target="_3lbmwbSpEem4MK7Gf1Ez8w" source="_3lbmjLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl-bSpEem4MK7Gf1Ez8w" target="_3lbm_rSpEem4MK7Gf1Ez8w" source="_3lbm9bSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl-rSpEem4MK7Gf1Ez8w" target="_3lbnAbSpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl-7SpEem4MK7Gf1Ez8w" target="_3lbm9rSpEem4MK7Gf1Ez8w" source="_3lbmwbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl_LSpEem4MK7Gf1Ez8w" target="_3lbnGbSpEem4MK7Gf1Ez8w" source="_3lbnB7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbl_bSpEem4MK7Gf1Ez8w" target="_3lbnCLSpEem4MK7Gf1Ez8w" source="_3lbm9rSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl_rSpEem4MK7Gf1Ez8w" target="_3lbnK7SpEem4MK7Gf1Ez8w" source="_3lbnIrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbl_7SpEem4MK7Gf1Ez8w" target="_3lbnLrSpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmALSpEem4MK7Gf1Ez8w" target="_3lbnI7SpEem4MK7Gf1Ez8w" source="_3lbnCLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmAbSpEem4MK7Gf1Ez8w" target="_3lbnNbSpEem4MK7Gf1Ez8w" source="_3lbnI7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmArSpEem4MK7Gf1Ez8w" target="_3lbnTbSpEem4MK7Gf1Ez8w" source="_3lbnNbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmA7SpEem4MK7Gf1Ez8w" target="_3lbnZbSpEem4MK7Gf1Ez8w" source="_3lbnTbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmBLSpEem4MK7Gf1Ez8w" target="_3lbnc7SpEem4MK7Gf1Ez8w" source="_3lbnZbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmBbSpEem4MK7Gf1Ez8w" target="_3lbnhbSpEem4MK7Gf1Ez8w" source="_3lbnerSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmBrSpEem4MK7Gf1Ez8w" target="_3lbniLSpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmB7SpEem4MK7Gf1Ez8w" target="_3lbne7SpEem4MK7Gf1Ez8w" source="_3lbnc7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmCLSpEem4MK7Gf1Ez8w" target="_3lbnlrSpEem4MK7Gf1Ez8w" source="_3lbnfbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmCbSpEem4MK7Gf1Ez8w" target="_3lbnmbSpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmCrSpEem4MK7Gf1Ez8w" target="_3lbnjrSpEem4MK7Gf1Ez8w" source="_3lbne7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmC7SpEem4MK7Gf1Ez8w" target="_3lbnsbSpEem4MK7Gf1Ez8w" source="_3lbnn7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmDLSpEem4MK7Gf1Ez8w" target="_3lbnoLSpEem4MK7Gf1Ez8w" source="_3lbnjrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmDbSpEem4MK7Gf1Ez8w" target="_3lbnzLSpEem4MK7Gf1Ez8w" source="_3lbnurSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmDrSpEem4MK7Gf1Ez8w" target="_3lbnu7SpEem4MK7Gf1Ez8w" source="_3lbnoLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmD7SpEem4MK7Gf1Ez8w" target="_3lbn3rSpEem4MK7Gf1Ez8w" source="_3lbn1bSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmELSpEem4MK7Gf1Ez8w" target="_3lbn4bSpEem4MK7Gf1Ez8w" source="_3lbmLLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmEbSpEem4MK7Gf1Ez8w" target="_3lbn1rSpEem4MK7Gf1Ez8w" source="_3lbnu7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmErSpEem4MK7Gf1Ez8w" target="_3lbmGLSpEem4MK7Gf1Ez8w" source="_3lbmWLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmE7SpEem4MK7Gf1Ez8w" target="_3lbmG7SpEem4MK7Gf1Ez8w" source="_3lbmaLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmFLSpEem4MK7Gf1Ez8w" target="_3lbmHrSpEem4MK7Gf1Ez8w" source="_3lbnN7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmFbSpEem4MK7Gf1Ez8w" target="_3lbmIbSpEem4MK7Gf1Ez8w" source="_3lbnT7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmFrSpEem4MK7Gf1Ez8w" target="_3lbmJLSpEem4MK7Gf1Ez8w" source="_3lbnNLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmF7SpEem4MK7Gf1Ez8w" target="_3lbmJ7SpEem4MK7Gf1Ez8w" source="_3lbn57SpEem4MK7Gf1Ez8w"/>
          <structuredNodeOutput xmi:id="_3lbmGLSpEem4MK7Gf1Ez8w" name="Output(notEmpty)" incoming="_3lbmErSpEem4MK7Gf1Ez8w" outgoing="_3lbl37SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmGbSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmGrSpEem4MK7Gf1Ez8w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3lbmG7SpEem4MK7Gf1Ez8w" name="Output(includes)" incoming="_3lbmE7SpEem4MK7Gf1Ez8w" outgoing="_3lbl4LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmHLSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmHbSpEem4MK7Gf1Ez8w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3lbmHrSpEem4MK7Gf1Ez8w" name="Output(m)" incoming="_3lbmFLSpEem4MK7Gf1Ez8w" outgoing="_3lbl4bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmH7SpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmILSpEem4MK7Gf1Ez8w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3lbmIbSpEem4MK7Gf1Ez8w" name="Output(n)" incoming="_3lbmFbSpEem4MK7Gf1Ez8w" outgoing="_3lbl4rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmIrSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmI7SpEem4MK7Gf1Ez8w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3lbmJLSpEem4MK7Gf1Ez8w" name="Output(customers)" incoming="_3lbmFrSpEem4MK7Gf1Ez8w" outgoing="_3lbl47SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmJbSpEem4MK7Gf1Ez8w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmJrSpEem4MK7Gf1Ez8w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3lbmJ7SpEem4MK7Gf1Ez8w" name="Output(list)" incoming="_3lbmF7SpEem4MK7Gf1Ez8w" outgoing="_3lbl5LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmKLSpEem4MK7Gf1Ez8w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmKbSpEem4MK7Gf1Ez8w" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmKrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@31196f6" outgoing="_3lbl7LSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmK7SpEem4MK7Gf1Ez8w" target="_3lbmLLSpEem4MK7Gf1Ez8w" source="_3lbmP7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbmLLSpEem4MK7Gf1Ez8w" name="Fork(customer)@4f2fb060" incoming="_3lbmK7SpEem4MK7Gf1Ez8w" outgoing="_3lbl8LSpEem4MK7Gf1Ez8w _3lbl87SpEem4MK7Gf1Ez8w _3lbl-rSpEem4MK7Gf1Ez8w _3lbl_7SpEem4MK7Gf1Ez8w _3lbmBrSpEem4MK7Gf1Ez8w _3lbmCbSpEem4MK7Gf1Ez8w _3lbmELSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmLbSpEem4MK7Gf1Ez8w" name="RightHandSide@6352ac78">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmLrSpEem4MK7Gf1Ez8w" target="_3lbmTLSpEem4MK7Gf1Ez8w" source="_3lbmNLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmL7SpEem4MK7Gf1Ez8w" target="_3lbmSbSpEem4MK7Gf1Ez8w" source="_3lbmTLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmMLSpEem4MK7Gf1Ez8w" target="_3lbmQ7SpEem4MK7Gf1Ez8w" source="_3lbmObSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmMbSpEem4MK7Gf1Ez8w" target="_3lbmPbSpEem4MK7Gf1Ez8w" source="_3lbmN7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmMrSpEem4MK7Gf1Ez8w" target="_3lbmPbSpEem4MK7Gf1Ez8w" source="_3lbmM7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_3lbmM7SpEem4MK7Gf1Ez8w" name="Create(Customer)" outgoing="_3lbmMrSpEem4MK7Gf1Ez8w" classifier="_3lcLkLSpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lbmNLSpEem4MK7Gf1Ez8w" name="Create(Customer).result" outgoing="_3lbmLrSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmNbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmNrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmN7SpEem4MK7Gf1Ez8w" name="Tuple@70fe3951" outgoing="_3lbmMbSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbmOLSpEem4MK7Gf1Ez8w" name="Value(&quot;A&quot;)">
                  <result xmi:id="_3lbmObSpEem4MK7Gf1Ez8w" name="Value(&quot;A&quot;).result" outgoing="_3lbmMLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmOrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmO7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lbmPLSpEem4MK7Gf1Ez8w" value="A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmPbSpEem4MK7Gf1Ez8w" name="Node(Call(Customer))" incoming="_3lbmMrSpEem4MK7Gf1Ez8w _3lbmMbSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmPrSpEem4MK7Gf1Ez8w" target="_3lbmP7SpEem4MK7Gf1Ez8w" source="_3lbmTLSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbmP7SpEem4MK7Gf1Ez8w" name="Output(Fork(Create(Customer).result))" incoming="_3lbmPrSpEem4MK7Gf1Ez8w" outgoing="_3lbmK7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmQLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmQbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_3lbmQrSpEem4MK7Gf1Ez8w" name="Call(Customer)" operation="_3lcMR7SpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lbmQ7SpEem4MK7Gf1Ez8w" name="Call(Customer).argument(name)" incoming="_3lbmMLSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmRLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmRbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbmRrSpEem4MK7Gf1Ez8w" name="Call(Customer).result()" type="_3lcLkLSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmR7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmSLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <target xmi:id="_3lbmSbSpEem4MK7Gf1Ez8w" name="Call(Customer).target" incoming="_3lbmL7SpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmSrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmS7SpEem4MK7Gf1Ez8w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3lbmTLSpEem4MK7Gf1Ez8w" name="Fork(Create(Customer).result)" incoming="_3lbmLrSpEem4MK7Gf1Ez8w" outgoing="_3lbmL7SpEem4MK7Gf1Ez8w _3lbmPrSpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmTbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@3b66a480" incoming="_3lbl7LSpEem4MK7Gf1Ez8w" outgoing="_3lbl7rSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmTrSpEem4MK7Gf1Ez8w" target="_3lbmT7SpEem4MK7Gf1Ez8w" source="_3lbmUrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbmT7SpEem4MK7Gf1Ez8w" name="Fork(customers)@2039f7e8" incoming="_3lbmTrSpEem4MK7Gf1Ez8w" outgoing="_3lbl7bSpEem4MK7Gf1Ez8w _3lbl77SpEem4MK7Gf1Ez8w _3lbl8rSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmULSpEem4MK7Gf1Ez8w" name="RightHandSide@5d0700be">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbmUbSpEem4MK7Gf1Ez8w" name="Value(null)">
                <result xmi:id="_3lbmUrSpEem4MK7Gf1Ez8w" name="Value(null).result" outgoing="_3lbmTrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmU7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmVLSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_3lbmVbSpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmVrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@7bfcf72e" incoming="_3lbl7rSpEem4MK7Gf1Ez8w" outgoing="_3lbl8bSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmV7SpEem4MK7Gf1Ez8w" target="_3lbmWLSpEem4MK7Gf1Ez8w" source="_3lbmXLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbmWLSpEem4MK7Gf1Ez8w" name="Fork(notEmpty)@524a6d54" incoming="_3lbmV7SpEem4MK7Gf1Ez8w" outgoing="_3lbmErSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmWbSpEem4MK7Gf1Ez8w" name="RightHandSide@7de56636">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmWrSpEem4MK7Gf1Ez8w" name="Node(Call(NotEmpty))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmW7SpEem4MK7Gf1Ez8w" target="_3lbmXLSpEem4MK7Gf1Ez8w" source="_3lbmY7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbmXLSpEem4MK7Gf1Ez8w" name="Output(Call(NotEmpty).result())" incoming="_3lbmW7SpEem4MK7Gf1Ez8w" outgoing="_3lbmV7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmXbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmXrSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbmX7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty)">
                  <argument xmi:id="_3lbmYLSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lbl7bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmYbSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmYrSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <result xmi:id="_3lbmY7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lbmW7SpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmZLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmZbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmZrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@116753e6" incoming="_3lbl8bSpEem4MK7Gf1Ez8w" outgoing="_3lbl9LSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmZ7SpEem4MK7Gf1Ez8w" target="_3lbmaLSpEem4MK7Gf1Ez8w" source="_3lbmbLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbmaLSpEem4MK7Gf1Ez8w" name="Fork(includes)@afc08d4" incoming="_3lbmZ7SpEem4MK7Gf1Ez8w" outgoing="_3lbmE7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmabSpEem4MK7Gf1Ez8w" name="RightHandSide@cf74e25">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmarSpEem4MK7Gf1Ez8w" name="Node(Call(Includes))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbma7SpEem4MK7Gf1Ez8w" target="_3lbmbLSpEem4MK7Gf1Ez8w" source="_3lbmdrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbmbLSpEem4MK7Gf1Ez8w" name="Output(Call(Includes).result())" incoming="_3lbma7SpEem4MK7Gf1Ez8w" outgoing="_3lbmZ7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmbbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmbrSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbmb7SpEem4MK7Gf1Ez8w" name="Call(Includes)">
                  <argument xmi:id="_3lbmcLSpEem4MK7Gf1Ez8w" name="Call(Includes).argument(seq)" incoming="_3lbl77SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmcbSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmcrSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <argument xmi:id="_3lbmc7SpEem4MK7Gf1Ez8w" name="Call(Includes).argument(element)" incoming="_3lbl8LSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmdLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmdbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbmdrSpEem4MK7Gf1Ez8w" name="Call(Includes).result()" outgoing="_3lbma7SpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmd7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmeLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Includes"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmebSpEem4MK7Gf1Ez8w" name="ExpressionStatement@425fd47a" incoming="_3lbl9LSpEem4MK7Gf1Ez8w" outgoing="_3lbl9rSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmerSpEem4MK7Gf1Ez8w" target="_3lbme7SpEem4MK7Gf1Ez8w" source="_3lbmf7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbme7SpEem4MK7Gf1Ez8w" name="Fork(customers)@7bd01bfd" incoming="_3lbmerSpEem4MK7Gf1Ez8w" outgoing="_3lbl9bSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmfLSpEem4MK7Gf1Ez8w" name="RightHandSide@5df041">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmfbSpEem4MK7Gf1Ez8w" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmfrSpEem4MK7Gf1Ez8w" target="_3lbmf7SpEem4MK7Gf1Ez8w" source="_3lbmibSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbmf7SpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbmfrSpEem4MK7Gf1Ez8w" outgoing="_3lbmerSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmgLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmgbSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbmgrSpEem4MK7Gf1Ez8w" name="Call(Including)">
                  <argument xmi:id="_3lbmg7SpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbl8rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmhLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmhbSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <argument xmi:id="_3lbmhrSpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbl87SpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmh7SpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmiLSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbmibSpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbmfrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmirSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmi7SpEem4MK7Gf1Ez8w" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmjLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@1da44fcd" incoming="_3lbl9rSpEem4MK7Gf1Ez8w" outgoing="_3lbl-LSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmjbSpEem4MK7Gf1Ez8w" target="_3lbmurSpEem4MK7Gf1Ez8w" source="_3lbmo7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmjrSpEem4MK7Gf1Ez8w" target="_3lbmtrSpEem4MK7Gf1Ez8w" source="_3lbmkbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmj7SpEem4MK7Gf1Ez8w" target="_3lbmwLSpEem4MK7Gf1Ez8w" source="_3lbmvbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmkLSpEem4MK7Gf1Ez8w" target="_3lbmsbSpEem4MK7Gf1Ez8w" source="_3lbmkbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmkbSpEem4MK7Gf1Ez8w" name="Tuple@3c4768e" outgoing="_3lbmjrSpEem4MK7Gf1Ez8w _3lbmkLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmkrSpEem4MK7Gf1Ez8w" target="_3lbmsLSpEem4MK7Gf1Ez8w" source="_3lbmmLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmk7SpEem4MK7Gf1Ez8w" target="_3lbmrbSpEem4MK7Gf1Ez8w" source="_3lbmsLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmlLSpEem4MK7Gf1Ez8w" target="_3lbmp7SpEem4MK7Gf1Ez8w" source="_3lbmnbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmlbSpEem4MK7Gf1Ez8w" target="_3lbmobSpEem4MK7Gf1Ez8w" source="_3lbmm7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmlrSpEem4MK7Gf1Ez8w" target="_3lbmobSpEem4MK7Gf1Ez8w" source="_3lbml7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_3lbml7SpEem4MK7Gf1Ez8w" name="Create(Customer)" outgoing="_3lbmlrSpEem4MK7Gf1Ez8w" classifier="_3lcLkLSpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lbmmLSpEem4MK7Gf1Ez8w" name="Create(Customer).result" outgoing="_3lbmkrSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmmbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmmrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmm7SpEem4MK7Gf1Ez8w" name="Tuple@29587a56" outgoing="_3lbmlbSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbmnLSpEem4MK7Gf1Ez8w" name="Value(&quot;B&quot;)">
                  <result xmi:id="_3lbmnbSpEem4MK7Gf1Ez8w" name="Value(&quot;B&quot;).result" outgoing="_3lbmlLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmnrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmn7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lbmoLSpEem4MK7Gf1Ez8w" value="B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmobSpEem4MK7Gf1Ez8w" name="Node(Call(Customer))" incoming="_3lbmlrSpEem4MK7Gf1Ez8w _3lbmlbSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmorSpEem4MK7Gf1Ez8w" target="_3lbmo7SpEem4MK7Gf1Ez8w" source="_3lbmsLSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbmo7SpEem4MK7Gf1Ez8w" name="Output(Fork(Create(Customer).result))" incoming="_3lbmorSpEem4MK7Gf1Ez8w" outgoing="_3lbmjbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmpLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmpbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_3lbmprSpEem4MK7Gf1Ez8w" name="Call(Customer)" operation="_3lcMR7SpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lbmp7SpEem4MK7Gf1Ez8w" name="Call(Customer).argument(name)" incoming="_3lbmlLSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmqLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmqbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbmqrSpEem4MK7Gf1Ez8w" name="Call(Customer).result()" type="_3lcLkLSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmq7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmrLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <target xmi:id="_3lbmrbSpEem4MK7Gf1Ez8w" name="Call(Customer).target" incoming="_3lbmk7SpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmrrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmr7SpEem4MK7Gf1Ez8w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3lbmsLSpEem4MK7Gf1Ez8w" name="Fork(Create(Customer).result)" incoming="_3lbmkrSpEem4MK7Gf1Ez8w" outgoing="_3lbmk7SpEem4MK7Gf1Ez8w _3lbmorSpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmsbSpEem4MK7Gf1Ez8w" name="Node(Call(Including))" incoming="_3lbmkLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmsrSpEem4MK7Gf1Ez8w" target="_3lbms7SpEem4MK7Gf1Ez8w" source="_3lbmvbSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbms7SpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbmsrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmtLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmtbSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbmtrSpEem4MK7Gf1Ez8w" name="Call(Including)" incoming="_3lbmjrSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbmt7SpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbl9bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmuLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmubSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbmurSpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbmjbSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmu7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmvLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbmvbSpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbmj7SpEem4MK7Gf1Ez8w _3lbmsrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmvrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmv7SpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbmwLSpEem4MK7Gf1Ez8w" name="Fork(customers)@94701b4" incoming="_3lbmj7SpEem4MK7Gf1Ez8w" outgoing="_3lbl97SpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmwbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@24a4f640" incoming="_3lbl-LSpEem4MK7Gf1Ez8w" outgoing="_3lbl-7SpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmwrSpEem4MK7Gf1Ez8w" target="_3lbm77SpEem4MK7Gf1Ez8w" source="_3lbm2LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmw7SpEem4MK7Gf1Ez8w" target="_3lbm67SpEem4MK7Gf1Ez8w" source="_3lbmxrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmxLSpEem4MK7Gf1Ez8w" target="_3lbm9bSpEem4MK7Gf1Ez8w" source="_3lbm8rSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmxbSpEem4MK7Gf1Ez8w" target="_3lbm5rSpEem4MK7Gf1Ez8w" source="_3lbmxrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbmxrSpEem4MK7Gf1Ez8w" name="Tuple@7b0eeb99" outgoing="_3lbmw7SpEem4MK7Gf1Ez8w _3lbmxbSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmx7SpEem4MK7Gf1Ez8w" target="_3lbm5bSpEem4MK7Gf1Ez8w" source="_3lbmzbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmyLSpEem4MK7Gf1Ez8w" target="_3lbm4rSpEem4MK7Gf1Ez8w" source="_3lbm5bSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbmybSpEem4MK7Gf1Ez8w" target="_3lbm3LSpEem4MK7Gf1Ez8w" source="_3lbm0rSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmyrSpEem4MK7Gf1Ez8w" target="_3lbm1rSpEem4MK7Gf1Ez8w" source="_3lbm0LSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbmy7SpEem4MK7Gf1Ez8w" target="_3lbm1rSpEem4MK7Gf1Ez8w" source="_3lbmzLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_3lbmzLSpEem4MK7Gf1Ez8w" name="Create(Customer)" outgoing="_3lbmy7SpEem4MK7Gf1Ez8w" classifier="_3lcLkLSpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lbmzbSpEem4MK7Gf1Ez8w" name="Create(Customer).result" outgoing="_3lbmx7SpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbmzrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbmz7SpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbm0LSpEem4MK7Gf1Ez8w" name="Tuple@2026bf1f" outgoing="_3lbmyrSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbm0bSpEem4MK7Gf1Ez8w" name="Value(&quot;C&quot;)">
                  <result xmi:id="_3lbm0rSpEem4MK7Gf1Ez8w" name="Value(&quot;C&quot;).result" outgoing="_3lbmybSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm07SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm1LSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lbm1bSpEem4MK7Gf1Ez8w" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbm1rSpEem4MK7Gf1Ez8w" name="Node(Call(Customer))" incoming="_3lbmy7SpEem4MK7Gf1Ez8w _3lbmyrSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbm17SpEem4MK7Gf1Ez8w" target="_3lbm2LSpEem4MK7Gf1Ez8w" source="_3lbm5bSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbm2LSpEem4MK7Gf1Ez8w" name="Output(Fork(Create(Customer).result))" incoming="_3lbm17SpEem4MK7Gf1Ez8w" outgoing="_3lbmwrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm2bSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm2rSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_3lbm27SpEem4MK7Gf1Ez8w" name="Call(Customer)" operation="_3lcMR7SpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lbm3LSpEem4MK7Gf1Ez8w" name="Call(Customer).argument(name)" incoming="_3lbmybSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm3bSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm3rSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbm37SpEem4MK7Gf1Ez8w" name="Call(Customer).result()" type="_3lcLkLSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm4LSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm4bSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <target xmi:id="_3lbm4rSpEem4MK7Gf1Ez8w" name="Call(Customer).target" incoming="_3lbmyLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm47SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm5LSpEem4MK7Gf1Ez8w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3lbm5bSpEem4MK7Gf1Ez8w" name="Fork(Create(Customer).result)" incoming="_3lbmx7SpEem4MK7Gf1Ez8w" outgoing="_3lbmyLSpEem4MK7Gf1Ez8w _3lbm17SpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbm5rSpEem4MK7Gf1Ez8w" name="Node(Call(Including))" incoming="_3lbmxbSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbm57SpEem4MK7Gf1Ez8w" target="_3lbm6LSpEem4MK7Gf1Ez8w" source="_3lbm8rSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbm6LSpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbm57SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm6bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm6rSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbm67SpEem4MK7Gf1Ez8w" name="Call(Including)" incoming="_3lbmw7SpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbm7LSpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbl97SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm7bSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm7rSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbm77SpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbmwrSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm8LSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm8bSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbm8rSpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbmxLSpEem4MK7Gf1Ez8w _3lbm57SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm87SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm9LSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbm9bSpEem4MK7Gf1Ez8w" name="Fork(customers)@31aae6d9" incoming="_3lbmxLSpEem4MK7Gf1Ez8w" outgoing="_3lbl-bSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbm9rSpEem4MK7Gf1Ez8w" name="ExpressionStatement@4af7290c" incoming="_3lbl-7SpEem4MK7Gf1Ez8w" outgoing="_3lbl_bSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbm97SpEem4MK7Gf1Ez8w" target="_3lbnB7SpEem4MK7Gf1Ez8w" source="_3lbnBLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbm-LSpEem4MK7Gf1Ez8w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbm-bSpEem4MK7Gf1Ez8w" target="_3lbm-rSpEem4MK7Gf1Ez8w" source="_3lbnBLSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbm-rSpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbm-bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm-7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbm_LSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbm_bSpEem4MK7Gf1Ez8w" name="Call(Including)">
                <argument xmi:id="_3lbm_rSpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbl-bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbm_7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnALSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbnAbSpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbl-rSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnArSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnA7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbnBLSpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbm97SpEem4MK7Gf1Ez8w _3lbm-bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnBbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnBrSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnB7SpEem4MK7Gf1Ez8w" name="Fork(customers)@4c64e6ee" incoming="_3lbm97SpEem4MK7Gf1Ez8w" outgoing="_3lbl_LSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnCLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@113e7109" incoming="_3lbl_bSpEem4MK7Gf1Ez8w" outgoing="_3lbmALSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnCbSpEem4MK7Gf1Ez8w" target="_3lbnHLSpEem4MK7Gf1Ez8w" source="_3lbnD7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnCrSpEem4MK7Gf1Ez8w" target="_3lbnGLSpEem4MK7Gf1Ez8w" source="_3lbnDbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnC7SpEem4MK7Gf1Ez8w" target="_3lbnIrSpEem4MK7Gf1Ez8w" source="_3lbnH7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnDLSpEem4MK7Gf1Ez8w" target="_3lbnE7SpEem4MK7Gf1Ez8w" source="_3lbnDbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnDbSpEem4MK7Gf1Ez8w" name="Tuple@79761963" outgoing="_3lbnCrSpEem4MK7Gf1Ez8w _3lbnDLSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbnDrSpEem4MK7Gf1Ez8w" name="Value(2)">
                <result xmi:id="_3lbnD7SpEem4MK7Gf1Ez8w" name="Value(2).result" outgoing="_3lbnCbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnELSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnEbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3lbnErSpEem4MK7Gf1Ez8w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnE7SpEem4MK7Gf1Ez8w" name="Node(Call(ExcludeAt))" incoming="_3lbnDLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnFLSpEem4MK7Gf1Ez8w" target="_3lbnFbSpEem4MK7Gf1Ez8w" source="_3lbnH7SpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbnFbSpEem4MK7Gf1Ez8w" name="Output(Call(ExcludeAt).result())" incoming="_3lbnFLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnFrSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnF7SpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnGLSpEem4MK7Gf1Ez8w" name="Call(ExcludeAt)" incoming="_3lbnCrSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbnGbSpEem4MK7Gf1Ez8w" name="Call(ExcludeAt).argument(seq)" incoming="_3lbl_LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnGrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnG7SpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbnHLSpEem4MK7Gf1Ez8w" name="Call(ExcludeAt).argument(index)" incoming="_3lbnCbSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnHbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnHrSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbnH7SpEem4MK7Gf1Ez8w" name="Call(ExcludeAt).result()" outgoing="_3lbnC7SpEem4MK7Gf1Ez8w _3lbnFLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnILSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnIbSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnIrSpEem4MK7Gf1Ez8w" name="Fork(customers)@1e8c68c2" incoming="_3lbnC7SpEem4MK7Gf1Ez8w" outgoing="_3lbl_rSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnI7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@a90340b" incoming="_3lbmALSpEem4MK7Gf1Ez8w" outgoing="_3lbmAbSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnJLSpEem4MK7Gf1Ez8w" target="_3lbnNLSpEem4MK7Gf1Ez8w" source="_3lbnMbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnJbSpEem4MK7Gf1Ez8w" name="Node(Call(Excluding))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnJrSpEem4MK7Gf1Ez8w" target="_3lbnJ7SpEem4MK7Gf1Ez8w" source="_3lbnMbSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbnJ7SpEem4MK7Gf1Ez8w" name="Output(Call(Excluding).result())" incoming="_3lbnJrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnKLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnKbSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnKrSpEem4MK7Gf1Ez8w" name="Call(Excluding)">
                <argument xmi:id="_3lbnK7SpEem4MK7Gf1Ez8w" name="Call(Excluding).argument(seq)" incoming="_3lbl_rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnLLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnLbSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbnLrSpEem4MK7Gf1Ez8w" name="Call(Excluding).argument(element)" incoming="_3lbl_7SpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnL7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnMLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbnMbSpEem4MK7Gf1Ez8w" name="Call(Excluding).result()" outgoing="_3lbnJLSpEem4MK7Gf1Ez8w _3lbnJrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnMrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnM7SpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Excluding"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnNLSpEem4MK7Gf1Ez8w" name="Fork(customers)@22a97a1e" incoming="_3lbnJLSpEem4MK7Gf1Ez8w" outgoing="_3lbmFrSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnNbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@19ae7230" incoming="_3lbmAbSpEem4MK7Gf1Ez8w" outgoing="_3lbmArSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnNrSpEem4MK7Gf1Ez8w" target="_3lbnN7SpEem4MK7Gf1Ez8w" source="_3lbnQ7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnN7SpEem4MK7Gf1Ez8w" name="Fork(m)@47f2d424" incoming="_3lbnNrSpEem4MK7Gf1Ez8w" outgoing="_3lbmFLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnOLSpEem4MK7Gf1Ez8w" name="RightHandSide@5a9d81be">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnObSpEem4MK7Gf1Ez8w" target="_3lbnR7SpEem4MK7Gf1Ez8w" source="_3lbnPrSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnOrSpEem4MK7Gf1Ez8w" target="_3lbnRrSpEem4MK7Gf1Ez8w" source="_3lbnPLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnO7SpEem4MK7Gf1Ez8w" target="_3lbnQbSpEem4MK7Gf1Ez8w" source="_3lbnPLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnPLSpEem4MK7Gf1Ez8w" name="Tuple@4e1f0fdf" outgoing="_3lbnOrSpEem4MK7Gf1Ez8w _3lbnO7SpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_3lbnPbSpEem4MK7Gf1Ez8w" name="ReadExtent(Customer)" classifier="_3lcLkLSpEem4MK7Gf1Ez8w">
                  <result xmi:id="_3lbnPrSpEem4MK7Gf1Ez8w" name="ReadExtent(Customer).result" outgoing="_3lbnObSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnP7SpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnQLSpEem4MK7Gf1Ez8w" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnQbSpEem4MK7Gf1Ez8w" name="Node(Call(Size))" incoming="_3lbnO7SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnQrSpEem4MK7Gf1Ez8w" target="_3lbnQ7SpEem4MK7Gf1Ez8w" source="_3lbnSrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbnQ7SpEem4MK7Gf1Ez8w" name="Output(Call(Size).result())" incoming="_3lbnQrSpEem4MK7Gf1Ez8w" outgoing="_3lbnNrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnRLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnRbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnRrSpEem4MK7Gf1Ez8w" name="Call(Size)" incoming="_3lbnOrSpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lbnR7SpEem4MK7Gf1Ez8w" name="Call(Size).argument(seq)" incoming="_3lbnObSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnSLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnSbSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <result xmi:id="_3lbnSrSpEem4MK7Gf1Ez8w" name="Call(Size).result()" outgoing="_3lbnQrSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnS7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnTLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnTbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@80d5142" incoming="_3lbmArSpEem4MK7Gf1Ez8w" outgoing="_3lbmA7SpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnTrSpEem4MK7Gf1Ez8w" target="_3lbnT7SpEem4MK7Gf1Ez8w" source="_3lbnW7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnT7SpEem4MK7Gf1Ez8w" name="Fork(n)@515c243c" incoming="_3lbnTrSpEem4MK7Gf1Ez8w" outgoing="_3lbmFbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnULSpEem4MK7Gf1Ez8w" name="RightHandSide@2d1cc76e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnUbSpEem4MK7Gf1Ez8w" target="_3lbnX7SpEem4MK7Gf1Ez8w" source="_3lbnVrSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnUrSpEem4MK7Gf1Ez8w" target="_3lbnXrSpEem4MK7Gf1Ez8w" source="_3lbnVLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnU7SpEem4MK7Gf1Ez8w" target="_3lbnWbSpEem4MK7Gf1Ez8w" source="_3lbnVLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnVLSpEem4MK7Gf1Ez8w" name="Tuple@7962743e" outgoing="_3lbnUrSpEem4MK7Gf1Ez8w _3lbnU7SpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_3lbnVbSpEem4MK7Gf1Ez8w" name="ReadExtent(Customer)" classifier="_3lcLkLSpEem4MK7Gf1Ez8w">
                  <result xmi:id="_3lbnVrSpEem4MK7Gf1Ez8w" name="ReadExtent(Customer).result" outgoing="_3lbnUbSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnV7SpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnWLSpEem4MK7Gf1Ez8w" value="*"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnWbSpEem4MK7Gf1Ez8w" name="Node(Call(Size))" incoming="_3lbnU7SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnWrSpEem4MK7Gf1Ez8w" target="_3lbnW7SpEem4MK7Gf1Ez8w" source="_3lbnYrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbnW7SpEem4MK7Gf1Ez8w" name="Output(Call(Size).result())" incoming="_3lbnWrSpEem4MK7Gf1Ez8w" outgoing="_3lbnTrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnXLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnXbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnXrSpEem4MK7Gf1Ez8w" name="Call(Size)" incoming="_3lbnUrSpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lbnX7SpEem4MK7Gf1Ez8w" name="Call(Size).argument(seq)" incoming="_3lbnUbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnYLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnYbSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <result xmi:id="_3lbnYrSpEem4MK7Gf1Ez8w" name="Call(Size).result()" outgoing="_3lbnWrSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnY7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnZLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnZbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@10f1006d" incoming="_3lbmA7SpEem4MK7Gf1Ez8w" outgoing="_3lbmBLSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnZrSpEem4MK7Gf1Ez8w" target="_3lbnZ7SpEem4MK7Gf1Ez8w" source="_3lbna7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnZ7SpEem4MK7Gf1Ez8w" name="Fork(list)@520822f3" incoming="_3lbnZrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnaLSpEem4MK7Gf1Ez8w" name="RightHandSide@39b00b5e">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnabSpEem4MK7Gf1Ez8w" name="SequenceConstructionExpression@39b00b5e">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnarSpEem4MK7Gf1Ez8w" target="_3lbna7SpEem4MK7Gf1Ez8w" source="_3lbnb7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbna7SpEem4MK7Gf1Ez8w" name="SequenceConstructionExpression@39b00b5e.output" incoming="_3lbnarSpEem4MK7Gf1Ez8w" outgoing="_3lbnZrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnbLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnbbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbnbrSpEem4MK7Gf1Ez8w" name="Value(&quot;x&quot;)">
                  <result xmi:id="_3lbnb7SpEem4MK7Gf1Ez8w" name="Value(&quot;x&quot;).result" outgoing="_3lbnarSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbncLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbncbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lbncrSpEem4MK7Gf1Ez8w" value="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnc7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@4a027798" incoming="_3lbmBLSpEem4MK7Gf1Ez8w" outgoing="_3lbmB7SpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbndLSpEem4MK7Gf1Ez8w" target="_3lbnerSpEem4MK7Gf1Ez8w" source="_3lbndrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbndbSpEem4MK7Gf1Ez8w" name="Value(null)">
              <result xmi:id="_3lbndrSpEem4MK7Gf1Ez8w" name="Value(null).result" outgoing="_3lbndLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnd7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbneLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralNull" xmi:id="_3lbnebSpEem4MK7Gf1Ez8w"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnerSpEem4MK7Gf1Ez8w" name="Fork(list)@2e56b485" incoming="_3lbndLSpEem4MK7Gf1Ez8w" outgoing="_3lbmBbSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbne7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@7998bfe4" incoming="_3lbmB7SpEem4MK7Gf1Ez8w" outgoing="_3lbmCrSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnfLSpEem4MK7Gf1Ez8w" target="_3lbnfbSpEem4MK7Gf1Ez8w" source="_3lbngbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnfbSpEem4MK7Gf1Ez8w" name="Fork(list)@49396c78" incoming="_3lbnfLSpEem4MK7Gf1Ez8w" outgoing="_3lbmCLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnfrSpEem4MK7Gf1Ez8w" name="RightHandSide@3c037419">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnf7SpEem4MK7Gf1Ez8w" name="Node(Call(Including))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbngLSpEem4MK7Gf1Ez8w" target="_3lbngbSpEem4MK7Gf1Ez8w" source="_3lbni7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lbngbSpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbngLSpEem4MK7Gf1Ez8w" outgoing="_3lbnfLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbngrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbng7SpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnhLSpEem4MK7Gf1Ez8w" name="Call(Including)">
                  <argument xmi:id="_3lbnhbSpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbmBbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnhrSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnh7SpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <argument xmi:id="_3lbniLSpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbmBrSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnibSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnirSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lbni7SpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbngLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnjLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnjbSpEem4MK7Gf1Ez8w" value="*"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnjrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@55365b65" incoming="_3lbmCrSpEem4MK7Gf1Ez8w" outgoing="_3lbmDLSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnj7SpEem4MK7Gf1Ez8w" target="_3lbnn7SpEem4MK7Gf1Ez8w" source="_3lbnnLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnkLSpEem4MK7Gf1Ez8w" name="Node(Call(Including))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnkbSpEem4MK7Gf1Ez8w" target="_3lbnkrSpEem4MK7Gf1Ez8w" source="_3lbnnLSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbnkrSpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbnkbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnk7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnlLSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnlbSpEem4MK7Gf1Ez8w" name="Call(Including)">
                <argument xmi:id="_3lbnlrSpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbmCLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnl7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnmLSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbnmbSpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbmCbSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnmrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnm7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbnnLSpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbnj7SpEem4MK7Gf1Ez8w _3lbnkbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnnbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnnrSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnn7SpEem4MK7Gf1Ez8w" name="Fork(list)@64a134bb" incoming="_3lbnj7SpEem4MK7Gf1Ez8w" outgoing="_3lbmC7SpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnoLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@1f6a5bab" incoming="_3lbmDLSpEem4MK7Gf1Ez8w" outgoing="_3lbmDrSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnobSpEem4MK7Gf1Ez8w" target="_3lbntLSpEem4MK7Gf1Ez8w" source="_3lbnp7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnorSpEem4MK7Gf1Ez8w" target="_3lbnsLSpEem4MK7Gf1Ez8w" source="_3lbnpbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbno7SpEem4MK7Gf1Ez8w" target="_3lbnurSpEem4MK7Gf1Ez8w" source="_3lbnt7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnpLSpEem4MK7Gf1Ez8w" target="_3lbnq7SpEem4MK7Gf1Ez8w" source="_3lbnpbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnpbSpEem4MK7Gf1Ez8w" name="Tuple@6717483" outgoing="_3lbnorSpEem4MK7Gf1Ez8w _3lbnpLSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbnprSpEem4MK7Gf1Ez8w" name="Value(&quot;Blah&quot;)">
                <result xmi:id="_3lbnp7SpEem4MK7Gf1Ez8w" name="Value(&quot;Blah&quot;).result" outgoing="_3lbnobSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnqLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnqbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3lbnqrSpEem4MK7Gf1Ez8w" value="Blah">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnq7SpEem4MK7Gf1Ez8w" name="Node(Call(Including))" incoming="_3lbnpLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnrLSpEem4MK7Gf1Ez8w" target="_3lbnrbSpEem4MK7Gf1Ez8w" source="_3lbnt7SpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbnrbSpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbnrLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnrrSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnr7SpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbnsLSpEem4MK7Gf1Ez8w" name="Call(Including)" incoming="_3lbnorSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbnsbSpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbmC7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnsrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbns7SpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbntLSpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbnobSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbntbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbntrSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbnt7SpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbno7SpEem4MK7Gf1Ez8w _3lbnrLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnuLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnubSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbnurSpEem4MK7Gf1Ez8w" name="Fork(list)@391d2de8" incoming="_3lbno7SpEem4MK7Gf1Ez8w" outgoing="_3lbmDbSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnu7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@604c77d5" incoming="_3lbmDrSpEem4MK7Gf1Ez8w" outgoing="_3lbmEbSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnvLSpEem4MK7Gf1Ez8w" target="_3lbnz7SpEem4MK7Gf1Ez8w" source="_3lbnwrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnvbSpEem4MK7Gf1Ez8w" target="_3lbny7SpEem4MK7Gf1Ez8w" source="_3lbnwLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnvrSpEem4MK7Gf1Ez8w" target="_3lbn1bSpEem4MK7Gf1Ez8w" source="_3lbn0rSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbnv7SpEem4MK7Gf1Ez8w" target="_3lbnxrSpEem4MK7Gf1Ez8w" source="_3lbnwLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnwLSpEem4MK7Gf1Ez8w" name="Tuple@6bc145ea" outgoing="_3lbnvbSpEem4MK7Gf1Ez8w _3lbnv7SpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lbnwbSpEem4MK7Gf1Ez8w" name="Value(1)">
                <result xmi:id="_3lbnwrSpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lbnvLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnw7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnxLSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3lbnxbSpEem4MK7Gf1Ez8w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbnxrSpEem4MK7Gf1Ez8w" name="Node(Call(Including))" incoming="_3lbnv7SpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbnx7SpEem4MK7Gf1Ez8w" target="_3lbnyLSpEem4MK7Gf1Ez8w" source="_3lbn0rSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbnyLSpEem4MK7Gf1Ez8w" name="Output(Call(Including).result())" incoming="_3lbnx7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnybSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnyrSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbny7SpEem4MK7Gf1Ez8w" name="Call(Including)" incoming="_3lbnvbSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lbnzLSpEem4MK7Gf1Ez8w" name="Call(Including).argument(seq)" incoming="_3lbmDbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbnzbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbnzrSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbnz7SpEem4MK7Gf1Ez8w" name="Call(Including).argument(element)" incoming="_3lbnvLSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn0LSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn0bSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lbn0rSpEem4MK7Gf1Ez8w" name="Call(Including).result()" outgoing="_3lbnvrSpEem4MK7Gf1Ez8w _3lbnx7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn07SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn1LSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbn1bSpEem4MK7Gf1Ez8w" name="Fork(list)@72324f19" incoming="_3lbnvrSpEem4MK7Gf1Ez8w" outgoing="_3lbmD7SpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbn1rSpEem4MK7Gf1Ez8w" name="ExpressionStatement@60dae8f4" incoming="_3lbmEbSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn17SpEem4MK7Gf1Ez8w" target="_3lbn57SpEem4MK7Gf1Ez8w" source="_3lbn5LSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbn2LSpEem4MK7Gf1Ez8w" name="Node(Call(Difference))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn2bSpEem4MK7Gf1Ez8w" target="_3lbn2rSpEem4MK7Gf1Ez8w" source="_3lbn5LSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lbn2rSpEem4MK7Gf1Ez8w" name="Output(Call(Difference).result())" incoming="_3lbn2bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn27SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn3LSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lbn3bSpEem4MK7Gf1Ez8w" name="Call(Difference)">
                <argument xmi:id="_3lbn3rSpEem4MK7Gf1Ez8w" name="Call(Difference).argument(seq1)" incoming="_3lbmD7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn37SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn4LSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <argument xmi:id="_3lbn4bSpEem4MK7Gf1Ez8w" name="Call(Difference).argument(seq2)" incoming="_3lbmELSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn4rSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn47SpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <result xmi:id="_3lbn5LSpEem4MK7Gf1Ez8w" name="Call(Difference).result()" outgoing="_3lbn17SpEem4MK7Gf1Ez8w _3lbn2bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn5bSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn5rSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Difference"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lbn57SpEem4MK7Gf1Ez8w" name="Fork(list)@12de75f8" incoming="_3lbn17SpEem4MK7Gf1Ez8w" outgoing="_3lbmF7SpEem4MK7Gf1Ez8w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbl5bSpEem4MK7Gf1Ez8w" name="Output(notEmpty)" incoming="_3lbl37SpEem4MK7Gf1Ez8w" parameter="_3lblzbSpEem4MK7Gf1Ez8w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbl5rSpEem4MK7Gf1Ez8w" name="Output(includes)" incoming="_3lbl4LSpEem4MK7Gf1Ez8w" parameter="_3lbl0LSpEem4MK7Gf1Ez8w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbl57SpEem4MK7Gf1Ez8w" name="Output(m)" incoming="_3lbl4bSpEem4MK7Gf1Ez8w" parameter="_3lbl07SpEem4MK7Gf1Ez8w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbl6LSpEem4MK7Gf1Ez8w" name="Output(n)" incoming="_3lbl4rSpEem4MK7Gf1Ez8w" parameter="_3lbl1rSpEem4MK7Gf1Ez8w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbl6bSpEem4MK7Gf1Ez8w" name="Output(customers)" incoming="_3lbl47SpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" parameter="_3lbl2bSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lbl6rSpEem4MK7Gf1Ez8w" name="Output(list)" incoming="_3lbl5LSpEem4MK7Gf1Ez8w" parameter="_3lbl3LSpEem4MK7Gf1Ez8w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lbn6LSpEem4MK7Gf1Ez8w" name="destroy$method$1" visibility="private" specification="_3lcLj7SpEem4MK7Gf1Ez8w" node="_3lbn6bSpEem4MK7Gf1Ez8w" group="_3lbn6bSpEem4MK7Gf1Ez8w">
        <structuredNode xmi:id="_3lbn6bSpEem4MK7Gf1Ez8w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lbn6rSpEem4MK7Gf1Ez8w" name="Expressions_Sequence_Operation$initialization$1" visibility="private" specification="_3lcLcLSpEem4MK7Gf1Ez8w" node="_3lbn67SpEem4MK7Gf1Ez8w" group="_3lbn67SpEem4MK7Gf1Ez8w">
        <structuredNode xmi:id="_3lbn67SpEem4MK7Gf1Ez8w" name="Body(Expressions_Sequence_Operation$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn7LSpEem4MK7Gf1Ez8w" target="_3lbn-7SpEem4MK7Gf1Ez8w" source="_3lbn-LSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn7bSpEem4MK7Gf1Ez8w" target="_3lbn_7SpEem4MK7Gf1Ez8w" source="_3lbn-7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn7rSpEem4MK7Gf1Ez8w" target="_3lboDLSpEem4MK7Gf1Ez8w" source="_3lbn-7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn77SpEem4MK7Gf1Ez8w" target="_3lboG7SpEem4MK7Gf1Ez8w" source="_3lbn-7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn8LSpEem4MK7Gf1Ez8w" target="_3lboIrSpEem4MK7Gf1Ez8w" source="_3lboHrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn8bSpEem4MK7Gf1Ez8w" target="_3lboLrSpEem4MK7Gf1Ez8w" source="_3lboJbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn8rSpEem4MK7Gf1Ez8w" target="_3lboNLSpEem4MK7Gf1Ez8w" source="_3lboKbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbn87SpEem4MK7Gf1Ez8w" target="_3lboOLSpEem4MK7Gf1Ez8w" source="_3lboN7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lbn9LSpEem4MK7Gf1Ez8w" target="_3lboOLSpEem4MK7Gf1Ez8w" source="_3lboMbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lbn9bSpEem4MK7Gf1Ez8w" target="_3lbn_LSpEem4MK7Gf1Ez8w" source="_3lboOLSpEem4MK7Gf1Ez8w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lbn9rSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3lbn97SpEem4MK7Gf1Ez8w" name="ReadSelf">
            <result xmi:id="_3lbn-LSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lbn7LSpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lbn-bSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lbn-rSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lbn-7SpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lbn7LSpEem4MK7Gf1Ez8w" outgoing="_3lbn7bSpEem4MK7Gf1Ez8w _3lbn7rSpEem4MK7Gf1Ez8w _3lbn77SpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lbn_LSpEem4MK7Gf1Ez8w" name="Initialization" incoming="_3lbn9bSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lbn_bSpEem4MK7Gf1Ez8w" target="_3lboArSpEem4MK7Gf1Ez8w" source="_3lbn_rSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3lbn_rSpEem4MK7Gf1Ez8w" name="Call(Test$initialization$1)" outgoing="_3lbn_bSpEem4MK7Gf1Ez8w" operation="_3lcNU7SpEem4MK7Gf1Ez8w">
              <target xmi:id="_3lbn_7SpEem4MK7Gf1Ez8w" name="Call(Test$initialization$1).target" incoming="_3lbn7bSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboALSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboAbSpEem4MK7Gf1Ez8w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lboArSpEem4MK7Gf1Ez8w" name="Set(initializationFlag)" incoming="_3lbn_bSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lboA7SpEem4MK7Gf1Ez8w" target="_3lboGbSpEem4MK7Gf1Ez8w" source="_3lboBbSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lboBLSpEem4MK7Gf1Ez8w" name="Value(true)">
                <result xmi:id="_3lboBbSpEem4MK7Gf1Ez8w" name="Value(true).result" outgoing="_3lboA7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboBrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboB7SpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3lboCLSpEem4MK7Gf1Ez8w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3lboCbSpEem4MK7Gf1Ez8w" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1))" inputElement="_3lboGbSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lboCrSpEem4MK7Gf1Ez8w" target="_3lboFrSpEem4MK7Gf1Ez8w" source="_3lboGbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lboC7SpEem4MK7Gf1Ez8w" target="_3lboELSpEem4MK7Gf1Ez8w" source="_3lboDLSpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lboDLSpEem4MK7Gf1Ez8w" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3lbn7rSpEem4MK7Gf1Ez8w" outgoing="_3lboC7SpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboDbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboDrSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3lboD7SpEem4MK7Gf1Ez8w" name="Write(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_3lbkaLSpEem4MK7Gf1Ez8w">
                  <object xmi:id="_3lboELSpEem4MK7Gf1Ez8w" name="Write(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_3lboC7SpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboEbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboErSpEem4MK7Gf1Ez8w" value="1"/>
                  </object>
                  <result xmi:id="_3lboE7SpEem4MK7Gf1Ez8w" name="Write(Expressions_Sequence_Operation$initializationFlag$1).result" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboFLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboFbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:id="_3lboFrSpEem4MK7Gf1Ez8w" name="Write(Expressions_Sequence_Operation$initializationFlag$1).value" incoming="_3lboCrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboF7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboGLSpEem4MK7Gf1Ez8w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3lboGbSpEem4MK7Gf1Ez8w" name="Iterate(Write(Expressions_Sequence_Operation$initializationFlag$1)).inputElement" incoming="_3lboA7SpEem4MK7Gf1Ez8w" outgoing="_3lboCrSpEem4MK7Gf1Ez8w" regionAsInput="_3lboCbSpEem4MK7Gf1Ez8w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lboGrSpEem4MK7Gf1Ez8w" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_3lbkaLSpEem4MK7Gf1Ez8w">
            <object xmi:id="_3lboG7SpEem4MK7Gf1Ez8w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_3lbn77SpEem4MK7Gf1Ez8w" type="_3lbkYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboHLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboHbSpEem4MK7Gf1Ez8w" value="1"/>
            </object>
            <result xmi:id="_3lboHrSpEem4MK7Gf1Ez8w" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_3lbn8LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboH7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboILSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lboIbSpEem4MK7Gf1Ez8w" name="Call(ListSize)">
            <argument xmi:id="_3lboIrSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lbn8LSpEem4MK7Gf1Ez8w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboI7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboJLSpEem4MK7Gf1Ez8w" value="*"/>
            </argument>
            <result xmi:id="_3lboJbSpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lbn8bSpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboJrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboJ7SpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lboKLSpEem4MK7Gf1Ez8w" name="Value(0)">
            <result xmi:id="_3lboKbSpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lbn8rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboKrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboK7SpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3lboLLSpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3lboLbSpEem4MK7Gf1Ez8w" name="Test(Size==0)">
            <first xmi:id="_3lboLrSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lbn8bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboL7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboMLSpEem4MK7Gf1Ez8w" value="1"/>
            </first>
            <result xmi:id="_3lboMbSpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lbn9LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboMrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboM7SpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <second xmi:id="_3lboNLSpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lbn8rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lboNbSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lboNrSpEem4MK7Gf1Ez8w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3lboN7SpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lbn87SpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3lboOLSpEem4MK7Gf1Ez8w" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_3lbn87SpEem4MK7Gf1Ez8w _3lbn9LSpEem4MK7Gf1Ez8w" outgoing="_3lbn9bSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lbn9LSpEem4MK7Gf1Ez8w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_3lcLcLSpEem4MK7Gf1Ez8w" name="Expressions_Sequence_Operation$initialization$1" visibility="protected" method="_3lbn6rSpEem4MK7Gf1Ez8w"/>
      <ownedOperation xmi:id="_3lcLcbSpEem4MK7Gf1Ez8w" name="Expressions_Sequence_Operation" visibility="public" method="_3lbka7SpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcLcrSpEem4MK7Gf1Ez8w" name="" visibility="package" type="_3lbkYbSpEem4MK7Gf1Ez8w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLc7SpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLdLSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3lcLdbSpEem4MK7Gf1Ez8w" name="run" visibility="public" method="_3lbkm7SpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcLdrSpEem4MK7Gf1Ez8w" name="tester" visibility="package" type="_3lcNYbSpEem4MK7Gf1Ez8w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLd7SpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLeLSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcLebSpEem4MK7Gf1Ez8w" name="" visibility="package" type="_3lbkYbSpEem4MK7Gf1Ez8w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLerSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLe7SpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3lcLfLSpEem4MK7Gf1Ez8w" name="test" visibility="package" method="_3lblzLSpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcLfbSpEem4MK7Gf1Ez8w" name="notEmpty" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLfrSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLf7SpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcLgLSpEem4MK7Gf1Ez8w" name="includes" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLgbSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLgrSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcLg7SpEem4MK7Gf1Ez8w" name="m" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLhLSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLhbSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcLhrSpEem4MK7Gf1Ez8w" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLh7SpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLiLSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcLibSpEem4MK7Gf1Ez8w" name="customers" visibility="package" type="_3lcLkLSpEem4MK7Gf1Ez8w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLirSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLi7SpEem4MK7Gf1Ez8w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcLjLSpEem4MK7Gf1Ez8w" name="list" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLjbSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLjrSpEem4MK7Gf1Ez8w" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3lcLj7SpEem4MK7Gf1Ez8w" name="destroy" visibility="public" method="_3lbn6LSpEem4MK7Gf1Ez8w" redefinedOperation="_3lcNVLSpEem4MK7Gf1Ez8w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_3lcLkLSpEem4MK7Gf1Ez8w" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_3lcLkbSpEem4MK7Gf1Ez8w" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLkrSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLk7SpEem4MK7Gf1Ez8w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_3lcLlLSpEem4MK7Gf1Ez8w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLlbSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLlrSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcLl7SpEem4MK7Gf1Ez8w" name="Customer$method$1" visibility="private" specification="_3lcMR7SpEem4MK7Gf1Ez8w" node="_3lcLobSpEem4MK7Gf1Ez8w _3lcLorSpEem4MK7Gf1Ez8w _3lcLo7SpEem4MK7Gf1Ez8w _3lcLpLSpEem4MK7Gf1Ez8w" group="_3lcLpLSpEem4MK7Gf1Ez8w">
          <ownedParameter xmi:id="_3lcLmLSpEem4MK7Gf1Ez8w" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLmbSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLmrSpEem4MK7Gf1Ez8w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_3lcLm7SpEem4MK7Gf1Ez8w" name="" type="_3lcLkLSpEem4MK7Gf1Ez8w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLnLSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLnbSpEem4MK7Gf1Ez8w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLnrSpEem4MK7Gf1Ez8w" target="_3lcLorSpEem4MK7Gf1Ez8w" source="_3lcLobSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLn7SpEem4MK7Gf1Ez8w" target="_3lcLwrSpEem4MK7Gf1Ez8w" source="_3lcLorSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLoLSpEem4MK7Gf1Ez8w" target="_3lcLo7SpEem4MK7Gf1Ez8w" source="_3lcL17SpEem4MK7Gf1Ez8w"/>
          <structuredNode xmi:id="_3lcLpLSpEem4MK7Gf1Ez8w" name="Body(Customer$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLpbSpEem4MK7Gf1Ez8w" target="_3lcL17SpEem4MK7Gf1Ez8w" source="_3lcL1LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLprSpEem4MK7Gf1Ez8w" target="_3lcL2bSpEem4MK7Gf1Ez8w" source="_3lcL17SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcLp7SpEem4MK7Gf1Ez8w" target="_3lcLsLSpEem4MK7Gf1Ez8w" source="_3lcL2LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLqLSpEem4MK7Gf1Ez8w" target="_3lcL3bSpEem4MK7Gf1Ez8w" source="_3lcL17SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLqbSpEem4MK7Gf1Ez8w" target="_3lcL5LSpEem4MK7Gf1Ez8w" source="_3lcL4LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLqrSpEem4MK7Gf1Ez8w" target="_3lcL8LSpEem4MK7Gf1Ez8w" source="_3lcL57SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLq7SpEem4MK7Gf1Ez8w" target="_3lcL9rSpEem4MK7Gf1Ez8w" source="_3lcL67SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcLrLSpEem4MK7Gf1Ez8w" target="_3lcL-rSpEem4MK7Gf1Ez8w" source="_3lcL-bSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLrbSpEem4MK7Gf1Ez8w" target="_3lcL-rSpEem4MK7Gf1Ez8w" source="_3lcL87SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcLrrSpEem4MK7Gf1Ez8w" target="_3lcL2LSpEem4MK7Gf1Ez8w" source="_3lcL-rSpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcLr7SpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcLsLSpEem4MK7Gf1Ez8w" name="Body" incoming="_3lcLp7SpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcLsbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@31a7fdb2">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLsrSpEem4MK7Gf1Ez8w" target="_3lcLvLSpEem4MK7Gf1Ez8w" source="_3lcLuLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLs7SpEem4MK7Gf1Ez8w" target="_3lcLxbSpEem4MK7Gf1Ez8w" source="_3lcLwrSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLtLSpEem4MK7Gf1Ez8w" target="_3lcLybSpEem4MK7Gf1Ez8w" source="_3lcLv7SpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcLtbSpEem4MK7Gf1Ez8w" target="_3lcLtrSpEem4MK7Gf1Ez8w" source="_3lcL0rSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcLtrSpEem4MK7Gf1Ez8w" name="Expression(LeftHandSide@5468ba4f)" incoming="_3lcLtbSpEem4MK7Gf1Ez8w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcLt7SpEem4MK7Gf1Ez8w" name="ReadSelf">
                    <result xmi:id="_3lcLuLSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcLsrSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLubSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLurSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_3lcLu7SpEem4MK7Gf1Ez8w" name="Clear(name)" structuralFeature="_3lcLlLSpEem4MK7Gf1Ez8w">
                  <object xmi:id="_3lcLvLSpEem4MK7Gf1Ez8w" name="Clear(name).object" incoming="_3lcLsrSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLvbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLvrSpEem4MK7Gf1Ez8w" value="1"/>
                  </object>
                  <result xmi:id="_3lcLv7SpEem4MK7Gf1Ez8w" name="Clear(name).result" outgoing="_3lcLtLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLwLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLwbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3lcLwrSpEem4MK7Gf1Ez8w" name="Fork(LeftHandSide@5468ba4f)" incoming="_3lcLn7SpEem4MK7Gf1Ez8w" outgoing="_3lcLs7SpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcLw7SpEem4MK7Gf1Ez8w" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcLxLSpEem4MK7Gf1Ez8w" target="_3lcLz7SpEem4MK7Gf1Ez8w" source="_3lcLxbSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeInput xmi:id="_3lcLxbSpEem4MK7Gf1Ez8w" name="WriteAll(Customer::name).input(Customer::name)" incoming="_3lcLs7SpEem4MK7Gf1Ez8w" outgoing="_3lcLxLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLxrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLx7SpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3lcLyLSpEem4MK7Gf1Ez8w" name="Write(name)" structuralFeature="_3lcLlLSpEem4MK7Gf1Ez8w" isReplaceAll="true">
                    <object xmi:id="_3lcLybSpEem4MK7Gf1Ez8w" name="Write(name).object" incoming="_3lcLtLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLyrSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLy7SpEem4MK7Gf1Ez8w" value="1"/>
                    </object>
                    <result xmi:id="_3lcLzLSpEem4MK7Gf1Ez8w" name="Write(name).result" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcLzbSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcLzrSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:id="_3lcLz7SpEem4MK7Gf1Ez8w" name="Write(name).value" incoming="_3lcLxLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL0LSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL0bSpEem4MK7Gf1Ez8w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcL0rSpEem4MK7Gf1Ez8w" name="RightHandSide@3a532f5c" outgoing="_3lcLtbSpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcL07SpEem4MK7Gf1Ez8w" name="ReadSelf">
              <result xmi:id="_3lcL1LSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcLpbSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL1bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL1rSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcL17SpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcLpbSpEem4MK7Gf1Ez8w" outgoing="_3lcLoLSpEem4MK7Gf1Ez8w _3lcLprSpEem4MK7Gf1Ez8w _3lcLqLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3lcL2LSpEem4MK7Gf1Ez8w" name="Call(Customer$initialization$1)" incoming="_3lcLrrSpEem4MK7Gf1Ez8w" outgoing="_3lcLp7SpEem4MK7Gf1Ez8w" operation="_3lcMRrSpEem4MK7Gf1Ez8w">
              <target xmi:id="_3lcL2bSpEem4MK7Gf1Ez8w" name="Call(Customer$initialization$1).target" incoming="_3lcLprSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL2rSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL27SpEem4MK7Gf1Ez8w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcL3LSpEem4MK7Gf1Ez8w" name="Read(Customer$initializationFlag$1)" structuralFeature="_3lcLkbSpEem4MK7Gf1Ez8w">
              <object xmi:id="_3lcL3bSpEem4MK7Gf1Ez8w" name="Read(Customer$initializationFlag$1).object" incoming="_3lcLqLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL3rSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL37SpEem4MK7Gf1Ez8w" value="1"/>
              </object>
              <result xmi:id="_3lcL4LSpEem4MK7Gf1Ez8w" name="Read(Customer$initializationFlag$1).result" outgoing="_3lcLqbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL4bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL4rSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcL47SpEem4MK7Gf1Ez8w" name="Call(ListSize)">
              <argument xmi:id="_3lcL5LSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lcLqbSpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL5bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL5rSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcL57SpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lcLqrSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL6LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL6bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcL6rSpEem4MK7Gf1Ez8w" name="Value(0)">
              <result xmi:id="_3lcL67SpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lcLq7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL7LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL7bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lcL7rSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcL77SpEem4MK7Gf1Ez8w" name="Test(Size==0)">
              <first xmi:id="_3lcL8LSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lcLqrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL8bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL8rSpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lcL87SpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lcLrbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL9LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL9bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lcL9rSpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lcLq7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcL97SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcL-LSpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3lcL-bSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lcLrLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcL-rSpEem4MK7Gf1Ez8w" name="Decision(Test(Customer$initializationFlag$1))" incoming="_3lcLrLSpEem4MK7Gf1Ez8w _3lcLrbSpEem4MK7Gf1Ez8w" outgoing="_3lcLrrSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcLrbSpEem4MK7Gf1Ez8w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcLobSpEem4MK7Gf1Ez8w" name="Input(name)" outgoing="_3lcLnrSpEem4MK7Gf1Ez8w" parameter="_3lcLmLSpEem4MK7Gf1Ez8w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lcLorSpEem4MK7Gf1Ez8w" name="Fork(name)" incoming="_3lcLnrSpEem4MK7Gf1Ez8w" outgoing="_3lcLn7SpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcLo7SpEem4MK7Gf1Ez8w" name="Return" incoming="_3lcLoLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" parameter="_3lcLm7SpEem4MK7Gf1Ez8w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcL-7SpEem4MK7Gf1Ez8w" name="destroy$method$1" visibility="private" specification="_3lcMTrSpEem4MK7Gf1Ez8w" node="_3lcL_LSpEem4MK7Gf1Ez8w" group="_3lcL_LSpEem4MK7Gf1Ez8w">
          <structuredNode xmi:id="_3lcL_LSpEem4MK7Gf1Ez8w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcL_bSpEem4MK7Gf1Ez8w" name="Customer$initialization$1" visibility="private" specification="_3lcMRrSpEem4MK7Gf1Ez8w" node="_3lcL_rSpEem4MK7Gf1Ez8w" group="_3lcL_rSpEem4MK7Gf1Ez8w">
          <structuredNode xmi:id="_3lcL_rSpEem4MK7Gf1Ez8w" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcL_7SpEem4MK7Gf1Ez8w" target="_3lcMDbSpEem4MK7Gf1Ez8w" source="_3lcMCrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMALSpEem4MK7Gf1Ez8w" target="_3lcMGbSpEem4MK7Gf1Ez8w" source="_3lcMDbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMAbSpEem4MK7Gf1Ez8w" target="_3lcMKLSpEem4MK7Gf1Ez8w" source="_3lcMDbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMArSpEem4MK7Gf1Ez8w" target="_3lcML7SpEem4MK7Gf1Ez8w" source="_3lcMK7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMA7SpEem4MK7Gf1Ez8w" target="_3lcMO7SpEem4MK7Gf1Ez8w" source="_3lcMMrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMBLSpEem4MK7Gf1Ez8w" target="_3lcMQbSpEem4MK7Gf1Ez8w" source="_3lcMNrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMBbSpEem4MK7Gf1Ez8w" target="_3lcMRbSpEem4MK7Gf1Ez8w" source="_3lcMRLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMBrSpEem4MK7Gf1Ez8w" target="_3lcMRbSpEem4MK7Gf1Ez8w" source="_3lcMPrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMB7SpEem4MK7Gf1Ez8w" target="_3lcMDrSpEem4MK7Gf1Ez8w" source="_3lcMRbSpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcMCLSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcMCbSpEem4MK7Gf1Ez8w" name="ReadSelf">
              <result xmi:id="_3lcMCrSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcL_7SpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMC7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMDLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcMDbSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcL_7SpEem4MK7Gf1Ez8w" outgoing="_3lcMALSpEem4MK7Gf1Ez8w _3lcMAbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMDrSpEem4MK7Gf1Ez8w" name="Initialization" incoming="_3lcMB7SpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMD7SpEem4MK7Gf1Ez8w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMELSpEem4MK7Gf1Ez8w" target="_3lcMJrSpEem4MK7Gf1Ez8w" source="_3lcMErSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcMEbSpEem4MK7Gf1Ez8w" name="Value(true)">
                  <result xmi:id="_3lcMErSpEem4MK7Gf1Ez8w" name="Value(true).result" outgoing="_3lcMELSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcME7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMFLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_3lcMFbSpEem4MK7Gf1Ez8w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_3lcMFrSpEem4MK7Gf1Ez8w" name="Iterate(Write(Customer$initializationFlag$1))" inputElement="_3lcMJrSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMF7SpEem4MK7Gf1Ez8w" target="_3lcMI7SpEem4MK7Gf1Ez8w" source="_3lcMJrSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMGLSpEem4MK7Gf1Ez8w" target="_3lcMHbSpEem4MK7Gf1Ez8w" source="_3lcMGbSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeInput xmi:id="_3lcMGbSpEem4MK7Gf1Ez8w" name="Iterate(Write(Customer$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3lcMALSpEem4MK7Gf1Ez8w" outgoing="_3lcMGLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMGrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMG7SpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3lcMHLSpEem4MK7Gf1Ez8w" name="Write(Customer$initializationFlag$1)" structuralFeature="_3lcLkbSpEem4MK7Gf1Ez8w">
                    <object xmi:id="_3lcMHbSpEem4MK7Gf1Ez8w" name="Write(Customer$initializationFlag$1).object" incoming="_3lcMGLSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMHrSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMH7SpEem4MK7Gf1Ez8w" value="1"/>
                    </object>
                    <result xmi:id="_3lcMILSpEem4MK7Gf1Ez8w" name="Write(Customer$initializationFlag$1).result" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMIbSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMIrSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:id="_3lcMI7SpEem4MK7Gf1Ez8w" name="Write(Customer$initializationFlag$1).value" incoming="_3lcMF7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMJLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMJbSpEem4MK7Gf1Ez8w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3lcMJrSpEem4MK7Gf1Ez8w" name="Iterate(Write(Customer$initializationFlag$1)).inputElement" incoming="_3lcMELSpEem4MK7Gf1Ez8w" outgoing="_3lcMF7SpEem4MK7Gf1Ez8w" regionAsInput="_3lcMFrSpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcMJ7SpEem4MK7Gf1Ez8w" name="Read(Customer$initializationFlag$1)" structuralFeature="_3lcLkbSpEem4MK7Gf1Ez8w">
              <object xmi:id="_3lcMKLSpEem4MK7Gf1Ez8w" name="Read(Customer$initializationFlag$1).object" incoming="_3lcMAbSpEem4MK7Gf1Ez8w" type="_3lcLkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMKbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMKrSpEem4MK7Gf1Ez8w" value="1"/>
              </object>
              <result xmi:id="_3lcMK7SpEem4MK7Gf1Ez8w" name="Read(Customer$initializationFlag$1).result" outgoing="_3lcMArSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMLLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMLbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcMLrSpEem4MK7Gf1Ez8w" name="Call(ListSize)">
              <argument xmi:id="_3lcML7SpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lcMArSpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMMLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMMbSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcMMrSpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lcMA7SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMM7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMNLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcMNbSpEem4MK7Gf1Ez8w" name="Value(0)">
              <result xmi:id="_3lcMNrSpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lcMBLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMN7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMOLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lcMObSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcMOrSpEem4MK7Gf1Ez8w" name="Test(Size==0)">
              <first xmi:id="_3lcMO7SpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lcMA7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMPLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMPbSpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lcMPrSpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lcMBrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMP7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMQLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lcMQbSpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lcMBLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMQrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMQ7SpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3lcMRLSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lcMBbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcMRbSpEem4MK7Gf1Ez8w" name="Decision(Test(Customer$initializationFlag$1))" incoming="_3lcMBbSpEem4MK7Gf1Ez8w _3lcMBrSpEem4MK7Gf1Ez8w" outgoing="_3lcMB7SpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcMBrSpEem4MK7Gf1Ez8w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_3lcMRrSpEem4MK7Gf1Ez8w" name="Customer$initialization$1" visibility="protected" method="_3lcL_bSpEem4MK7Gf1Ez8w"/>
        <ownedOperation xmi:id="_3lcMR7SpEem4MK7Gf1Ez8w" name="Customer" visibility="public" method="_3lcLl7SpEem4MK7Gf1Ez8w">
          <ownedParameter xmi:id="_3lcMSLSpEem4MK7Gf1Ez8w" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMSbSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMSrSpEem4MK7Gf1Ez8w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_3lcMS7SpEem4MK7Gf1Ez8w" name="" visibility="package" type="_3lcLkLSpEem4MK7Gf1Ez8w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMTLSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMTbSpEem4MK7Gf1Ez8w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_3lcMTrSpEem4MK7Gf1Ez8w" name="destroy" visibility="public" method="_3lcL-7SpEem4MK7Gf1Ez8w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3lcMT7SpEem4MK7Gf1Ez8w" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_3lcMULSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lcMUbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lcMUrSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lcMU7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lcMVLSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_3lcMVbSpEem4MK7Gf1Ez8w" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMVrSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMV7SpEem4MK7Gf1Ez8w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_3lcMWLSpEem4MK7Gf1Ez8w" name="tester" visibility="private" type="_3lcNYbSpEem4MK7Gf1Ez8w">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMWbSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMWrSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcMW7SpEem4MK7Gf1Ez8w" name="destroy$method$1" visibility="private" specification="_3lcNVLSpEem4MK7Gf1Ez8w" node="_3lcMXLSpEem4MK7Gf1Ez8w" group="_3lcMXLSpEem4MK7Gf1Ez8w">
        <structuredNode xmi:id="_3lcMXLSpEem4MK7Gf1Ez8w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcMXbSpEem4MK7Gf1Ez8w" name="done$method$1" visibility="private" specification="_3lcNVbSpEem4MK7Gf1Ez8w" node="_3lcMXrSpEem4MK7Gf1Ez8w" group="_3lcMXrSpEem4MK7Gf1Ez8w">
        <structuredNode xmi:id="_3lcMXrSpEem4MK7Gf1Ez8w" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMX7SpEem4MK7Gf1Ez8w" name="ExpressionStatement@1d94e289">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMYLSpEem4MK7Gf1Ez8w" target="_3lcMZLSpEem4MK7Gf1Ez8w" source="_3lcMbLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMYbSpEem4MK7Gf1Ez8w" target="_3lcMY7SpEem4MK7Gf1Ez8w" source="_3lcMarSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMYrSpEem4MK7Gf1Ez8w" target="_3lcMZ7SpEem4MK7Gf1Ez8w" source="_3lcMcbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3lcMY7SpEem4MK7Gf1Ez8w" name="Call(done)" incoming="_3lcMYbSpEem4MK7Gf1Ez8w" operation="_3lcNXbSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lcMZLSpEem4MK7Gf1Ez8w" name="Call(done).argument(message)" incoming="_3lcMYLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMZbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMZrSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <target xmi:id="_3lcMZ7SpEem4MK7Gf1Ez8w" name="Call(done).target" incoming="_3lcMYrSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMaLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMabSpEem4MK7Gf1Ez8w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMarSpEem4MK7Gf1Ez8w" name="Tuple@19d8c453" outgoing="_3lcMYbSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcMa7SpEem4MK7Gf1Ez8w" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_3lcMbLSpEem4MK7Gf1Ez8w" name="Value(&quot;Done.&quot;).result" outgoing="_3lcMYLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMbbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMbrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3lcMb7SpEem4MK7Gf1Ez8w" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcMcLSpEem4MK7Gf1Ez8w" name="ReadSelf">
              <result xmi:id="_3lcMcbSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcMYrSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMcrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMc7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcMdLSpEem4MK7Gf1Ez8w" name="Test$method$1" visibility="private" specification="_3lcNVrSpEem4MK7Gf1Ez8w" node="_3lcMfrSpEem4MK7Gf1Ez8w _3lcMf7SpEem4MK7Gf1Ez8w _3lcMgLSpEem4MK7Gf1Ez8w _3lcMgbSpEem4MK7Gf1Ez8w" group="_3lcMgbSpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcMdbSpEem4MK7Gf1Ez8w" name="tester" type="_3lcNYbSpEem4MK7Gf1Ez8w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMdrSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMd7SpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcMeLSpEem4MK7Gf1Ez8w" name="" type="_3lcMT7SpEem4MK7Gf1Ez8w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMebSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMerSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMe7SpEem4MK7Gf1Ez8w" target="_3lcMf7SpEem4MK7Gf1Ez8w" source="_3lcMfrSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMfLSpEem4MK7Gf1Ez8w" target="_3lcMn7SpEem4MK7Gf1Ez8w" source="_3lcMf7SpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMfbSpEem4MK7Gf1Ez8w" target="_3lcMgLSpEem4MK7Gf1Ez8w" source="_3lcMu7SpEem4MK7Gf1Ez8w"/>
        <structuredNode xmi:id="_3lcMgbSpEem4MK7Gf1Ez8w" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMgrSpEem4MK7Gf1Ez8w" target="_3lcMu7SpEem4MK7Gf1Ez8w" source="_3lcMuLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMg7SpEem4MK7Gf1Ez8w" target="_3lcMvbSpEem4MK7Gf1Ez8w" source="_3lcMu7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMhLSpEem4MK7Gf1Ez8w" target="_3lcMjbSpEem4MK7Gf1Ez8w" source="_3lcMvLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMhbSpEem4MK7Gf1Ez8w" target="_3lcMwbSpEem4MK7Gf1Ez8w" source="_3lcMu7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMhrSpEem4MK7Gf1Ez8w" target="_3lcMyLSpEem4MK7Gf1Ez8w" source="_3lcMxLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMh7SpEem4MK7Gf1Ez8w" target="_3lcM1LSpEem4MK7Gf1Ez8w" source="_3lcMy7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMiLSpEem4MK7Gf1Ez8w" target="_3lcM2rSpEem4MK7Gf1Ez8w" source="_3lcMz7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMibSpEem4MK7Gf1Ez8w" target="_3lcM3rSpEem4MK7Gf1Ez8w" source="_3lcM3bSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMirSpEem4MK7Gf1Ez8w" target="_3lcM3rSpEem4MK7Gf1Ez8w" source="_3lcM17SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMi7SpEem4MK7Gf1Ez8w" target="_3lcMvLSpEem4MK7Gf1Ez8w" source="_3lcM3rSpEem4MK7Gf1Ez8w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcMjLSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMjbSpEem4MK7Gf1Ez8w" name="Body" incoming="_3lcMhLSpEem4MK7Gf1Ez8w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMjrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@cccaab6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMj7SpEem4MK7Gf1Ez8w" target="_3lcMmbSpEem4MK7Gf1Ez8w" source="_3lcMlbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMkLSpEem4MK7Gf1Ez8w" target="_3lcMorSpEem4MK7Gf1Ez8w" source="_3lcMn7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMkbSpEem4MK7Gf1Ez8w" target="_3lcMqLSpEem4MK7Gf1Ez8w" source="_3lcMnLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcMkrSpEem4MK7Gf1Ez8w" target="_3lcMk7SpEem4MK7Gf1Ez8w" source="_3lcMtrSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMk7SpEem4MK7Gf1Ez8w" name="Expression(LeftHandSide@51374836)" incoming="_3lcMkrSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcMlLSpEem4MK7Gf1Ez8w" name="ReadSelf">
                  <result xmi:id="_3lcMlbSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcMj7SpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMlrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMl7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_3lcMmLSpEem4MK7Gf1Ez8w" name="Clear(tester)" structuralFeature="_3lcMWLSpEem4MK7Gf1Ez8w">
                <object xmi:id="_3lcMmbSpEem4MK7Gf1Ez8w" name="Clear(tester).object" incoming="_3lcMj7SpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMmrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMm7SpEem4MK7Gf1Ez8w" value="1"/>
                </object>
                <result xmi:id="_3lcMnLSpEem4MK7Gf1Ez8w" name="Clear(tester).result" outgoing="_3lcMkbSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMnbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMnrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_3lcMn7SpEem4MK7Gf1Ez8w" name="Fork(LeftHandSide@51374836)" incoming="_3lcMfLSpEem4MK7Gf1Ez8w" outgoing="_3lcMkLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMoLSpEem4MK7Gf1Ez8w" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMobSpEem4MK7Gf1Ez8w" target="_3lcMtbSpEem4MK7Gf1Ez8w" source="_3lcMorSpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lcMorSpEem4MK7Gf1Ez8w" name="WriteAll(Test::tester).input(Test::tester)" incoming="_3lcMkLSpEem4MK7Gf1Ez8w" outgoing="_3lcMobSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMo7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMpLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_3lcMpbSpEem4MK7Gf1Ez8w" name="Iterate(Write(tester))" inputElement="_3lcMtbSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMprSpEem4MK7Gf1Ez8w" target="_3lcMsrSpEem4MK7Gf1Ez8w" source="_3lcMtbSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcMp7SpEem4MK7Gf1Ez8w" target="_3lcMrLSpEem4MK7Gf1Ez8w" source="_3lcMqLSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeInput xmi:id="_3lcMqLSpEem4MK7Gf1Ez8w" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_3lcMkbSpEem4MK7Gf1Ez8w" outgoing="_3lcMp7SpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMqbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMqrSpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3lcMq7SpEem4MK7Gf1Ez8w" name="Write(tester)" structuralFeature="_3lcMWLSpEem4MK7Gf1Ez8w">
                    <object xmi:id="_3lcMrLSpEem4MK7Gf1Ez8w" name="Write(tester).object" incoming="_3lcMp7SpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMrbSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMrrSpEem4MK7Gf1Ez8w" value="1"/>
                    </object>
                    <result xmi:id="_3lcMr7SpEem4MK7Gf1Ez8w" name="Write(tester).result" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMsLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMsbSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:id="_3lcMsrSpEem4MK7Gf1Ez8w" name="Write(tester).value" incoming="_3lcMprSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMs7SpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMtLSpEem4MK7Gf1Ez8w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3lcMtbSpEem4MK7Gf1Ez8w" name="Iterate(Write(tester)).inputElement" incoming="_3lcMobSpEem4MK7Gf1Ez8w" outgoing="_3lcMprSpEem4MK7Gf1Ez8w" regionAsInput="_3lcMpbSpEem4MK7Gf1Ez8w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcMtrSpEem4MK7Gf1Ez8w" name="RightHandSide@50701d48" outgoing="_3lcMkrSpEem4MK7Gf1Ez8w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcMt7SpEem4MK7Gf1Ez8w" name="ReadSelf">
            <result xmi:id="_3lcMuLSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcMgrSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMubSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMurSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lcMu7SpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcMgrSpEem4MK7Gf1Ez8w" outgoing="_3lcMfbSpEem4MK7Gf1Ez8w _3lcMg7SpEem4MK7Gf1Ez8w _3lcMhbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_3lcMvLSpEem4MK7Gf1Ez8w" name="Call(Test$initialization$1)" incoming="_3lcMi7SpEem4MK7Gf1Ez8w" outgoing="_3lcMhLSpEem4MK7Gf1Ez8w" operation="_3lcNU7SpEem4MK7Gf1Ez8w">
            <target xmi:id="_3lcMvbSpEem4MK7Gf1Ez8w" name="Call(Test$initialization$1).target" incoming="_3lcMg7SpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMvrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMv7SpEem4MK7Gf1Ez8w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcMwLSpEem4MK7Gf1Ez8w" name="Read(Test$initializationFlag$1)" structuralFeature="_3lcMVbSpEem4MK7Gf1Ez8w">
            <object xmi:id="_3lcMwbSpEem4MK7Gf1Ez8w" name="Read(Test$initializationFlag$1).object" incoming="_3lcMhbSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMwrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMw7SpEem4MK7Gf1Ez8w" value="1"/>
            </object>
            <result xmi:id="_3lcMxLSpEem4MK7Gf1Ez8w" name="Read(Test$initializationFlag$1).result" outgoing="_3lcMhrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMxbSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMxrSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcMx7SpEem4MK7Gf1Ez8w" name="Call(ListSize)">
            <argument xmi:id="_3lcMyLSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lcMhrSpEem4MK7Gf1Ez8w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMybSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMyrSpEem4MK7Gf1Ez8w" value="*"/>
            </argument>
            <result xmi:id="_3lcMy7SpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lcMh7SpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcMzLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcMzbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcMzrSpEem4MK7Gf1Ez8w" name="Value(0)">
            <result xmi:id="_3lcMz7SpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lcMiLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM0LSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM0bSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3lcM0rSpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcM07SpEem4MK7Gf1Ez8w" name="Test(Size==0)">
            <first xmi:id="_3lcM1LSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lcMh7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM1bSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM1rSpEem4MK7Gf1Ez8w" value="1"/>
            </first>
            <result xmi:id="_3lcM17SpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lcMirSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM2LSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM2bSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <second xmi:id="_3lcM2rSpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lcMiLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM27SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM3LSpEem4MK7Gf1Ez8w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3lcM3bSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lcMibSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3lcM3rSpEem4MK7Gf1Ez8w" name="Decision(Test(Test$initializationFlag$1))" incoming="_3lcMibSpEem4MK7Gf1Ez8w _3lcMirSpEem4MK7Gf1Ez8w" outgoing="_3lcMi7SpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcMirSpEem4MK7Gf1Ez8w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcMfrSpEem4MK7Gf1Ez8w" name="Input(tester)" outgoing="_3lcMe7SpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" parameter="_3lcMdbSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3lcMf7SpEem4MK7Gf1Ez8w" name="Fork(tester)" incoming="_3lcMe7SpEem4MK7Gf1Ez8w" outgoing="_3lcMfLSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcMgLSpEem4MK7Gf1Ez8w" name="Return" incoming="_3lcMfbSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" parameter="_3lcMeLSpEem4MK7Gf1Ez8w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcM37SpEem4MK7Gf1Ez8w" name="done$method$2" visibility="private" specification="_3lcNXbSpEem4MK7Gf1Ez8w" node="_3lcM5bSpEem4MK7Gf1Ez8w _3lcM5rSpEem4MK7Gf1Ez8w _3lcM57SpEem4MK7Gf1Ez8w" group="_3lcM57SpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcM4LSpEem4MK7Gf1Ez8w" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM4bSpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM4rSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcM47SpEem4MK7Gf1Ez8w" target="_3lcM5rSpEem4MK7Gf1Ez8w" source="_3lcM5bSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcM5LSpEem4MK7Gf1Ez8w" target="_3lcM67SpEem4MK7Gf1Ez8w" source="_3lcM5rSpEem4MK7Gf1Ez8w"/>
        <structuredNode xmi:id="_3lcM57SpEem4MK7Gf1Ez8w" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcM6LSpEem4MK7Gf1Ez8w" target="_3lcM8bSpEem4MK7Gf1Ez8w" source="_3lcM6bSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcM6bSpEem4MK7Gf1Ez8w" name="ExpressionStatement@44df3cae" outgoing="_3lcM6LSpEem4MK7Gf1Ez8w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcM6rSpEem4MK7Gf1Ez8w" name="Call(WriteLine)">
              <argument xmi:id="_3lcM67SpEem4MK7Gf1Ez8w" name="Call(WriteLine).argument(value)" incoming="_3lcM5LSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM7LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM7bSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lcM7rSpEem4MK7Gf1Ez8w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM77SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM8LSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcM8bSpEem4MK7Gf1Ez8w" name="ExpressionStatement@4f86d1a2" incoming="_3lcM6LSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcM8rSpEem4MK7Gf1Ez8w" target="_3lcM-rSpEem4MK7Gf1Ez8w" source="_3lcNBrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcM87SpEem4MK7Gf1Ez8w" target="_3lcM9LSpEem4MK7Gf1Ez8w" source="_3lcM-7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_3lcM9LSpEem4MK7Gf1Ez8w" name="Collect(SendSignal(Continue))" incoming="_3lcM87SpEem4MK7Gf1Ez8w" mode="parallel" inputElement="_3lcM-rSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcM9bSpEem4MK7Gf1Ez8w" target="_3lcM97SpEem4MK7Gf1Ez8w" source="_3lcM-rSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_3lcM9rSpEem4MK7Gf1Ez8w" name="SendSignal(Continue)" signal="_3lcN8bSpEem4MK7Gf1Ez8w">
                <target xmi:id="_3lcM97SpEem4MK7Gf1Ez8w" name="SendSignal(Continue).target" incoming="_3lcM9bSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcM-LSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcM-bSpEem4MK7Gf1Ez8w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_3lcM-rSpEem4MK7Gf1Ez8w" name="Collect(SendSignal(Continue)).inputElement" incoming="_3lcM8rSpEem4MK7Gf1Ez8w" outgoing="_3lcM9bSpEem4MK7Gf1Ez8w" regionAsInput="_3lcM9LSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcM-7SpEem4MK7Gf1Ez8w" name="Feature(Read(tester).result)" outgoing="_3lcM87SpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcM_LSpEem4MK7Gf1Ez8w" target="_3lcNCbSpEem4MK7Gf1Ez8w" source="_3lcM_7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcM_bSpEem4MK7Gf1Ez8w" target="_3lcNA7SpEem4MK7Gf1Ez8w" source="_3lcNCbSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcM_rSpEem4MK7Gf1Ez8w" name="ReadSelf">
                <result xmi:id="_3lcM_7SpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcM_LSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNALSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNAbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcNArSpEem4MK7Gf1Ez8w" name="Read(tester)" structuralFeature="_3lcMWLSpEem4MK7Gf1Ez8w">
                <object xmi:id="_3lcNA7SpEem4MK7Gf1Ez8w" name="Read(tester).object" incoming="_3lcM_bSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNBLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNBbSpEem4MK7Gf1Ez8w" value="1"/>
                </object>
                <result xmi:id="_3lcNBrSpEem4MK7Gf1Ez8w" name="Read(tester).result" outgoing="_3lcM8rSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNB7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNCLSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_3lcNCbSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcM_LSpEem4MK7Gf1Ez8w" outgoing="_3lcM_bSpEem4MK7Gf1Ez8w"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcM5bSpEem4MK7Gf1Ez8w" name="Input(message)" outgoing="_3lcM47SpEem4MK7Gf1Ez8w" parameter="_3lcM4LSpEem4MK7Gf1Ez8w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_3lcM5rSpEem4MK7Gf1Ez8w" name="Fork(message)" incoming="_3lcM47SpEem4MK7Gf1Ez8w" outgoing="_3lcM5LSpEem4MK7Gf1Ez8w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcNCrSpEem4MK7Gf1Ez8w" name="Test$initialization$1" visibility="private" specification="_3lcNU7SpEem4MK7Gf1Ez8w" node="_3lcNC7SpEem4MK7Gf1Ez8w" group="_3lcNC7SpEem4MK7Gf1Ez8w">
        <structuredNode xmi:id="_3lcNC7SpEem4MK7Gf1Ez8w" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNDLSpEem4MK7Gf1Ez8w" target="_3lcNGrSpEem4MK7Gf1Ez8w" source="_3lcNF7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNDbSpEem4MK7Gf1Ez8w" target="_3lcNJrSpEem4MK7Gf1Ez8w" source="_3lcNGrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNDrSpEem4MK7Gf1Ez8w" target="_3lcNNbSpEem4MK7Gf1Ez8w" source="_3lcNGrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcND7SpEem4MK7Gf1Ez8w" target="_3lcNPLSpEem4MK7Gf1Ez8w" source="_3lcNOLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNELSpEem4MK7Gf1Ez8w" target="_3lcNSLSpEem4MK7Gf1Ez8w" source="_3lcNP7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNEbSpEem4MK7Gf1Ez8w" target="_3lcNTrSpEem4MK7Gf1Ez8w" source="_3lcNQ7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNErSpEem4MK7Gf1Ez8w" target="_3lcNUrSpEem4MK7Gf1Ez8w" source="_3lcNUbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNE7SpEem4MK7Gf1Ez8w" target="_3lcNUrSpEem4MK7Gf1Ez8w" source="_3lcNS7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNFLSpEem4MK7Gf1Ez8w" target="_3lcNG7SpEem4MK7Gf1Ez8w" source="_3lcNUrSpEem4MK7Gf1Ez8w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcNFbSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcNFrSpEem4MK7Gf1Ez8w" name="ReadSelf">
            <result xmi:id="_3lcNF7SpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcNDLSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNGLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNGbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lcNGrSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcNDLSpEem4MK7Gf1Ez8w" outgoing="_3lcNDbSpEem4MK7Gf1Ez8w _3lcNDrSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcNG7SpEem4MK7Gf1Ez8w" name="Initialization" incoming="_3lcNFLSpEem4MK7Gf1Ez8w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcNHLSpEem4MK7Gf1Ez8w" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNHbSpEem4MK7Gf1Ez8w" target="_3lcNM7SpEem4MK7Gf1Ez8w" source="_3lcNH7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcNHrSpEem4MK7Gf1Ez8w" name="Value(true)">
                <result xmi:id="_3lcNH7SpEem4MK7Gf1Ez8w" name="Value(true).result" outgoing="_3lcNHbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNILSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNIbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3lcNIrSpEem4MK7Gf1Ez8w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3lcNI7SpEem4MK7Gf1Ez8w" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_3lcNM7SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNJLSpEem4MK7Gf1Ez8w" target="_3lcNMLSpEem4MK7Gf1Ez8w" source="_3lcNM7SpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNJbSpEem4MK7Gf1Ez8w" target="_3lcNKrSpEem4MK7Gf1Ez8w" source="_3lcNJrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lcNJrSpEem4MK7Gf1Ez8w" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3lcNDbSpEem4MK7Gf1Ez8w" outgoing="_3lcNJbSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNJ7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNKLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3lcNKbSpEem4MK7Gf1Ez8w" name="Write(Test$initializationFlag$1)" structuralFeature="_3lcMVbSpEem4MK7Gf1Ez8w">
                  <object xmi:id="_3lcNKrSpEem4MK7Gf1Ez8w" name="Write(Test$initializationFlag$1).object" incoming="_3lcNJbSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNK7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNLLSpEem4MK7Gf1Ez8w" value="1"/>
                  </object>
                  <result xmi:id="_3lcNLbSpEem4MK7Gf1Ez8w" name="Write(Test$initializationFlag$1).result" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNLrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNL7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:id="_3lcNMLSpEem4MK7Gf1Ez8w" name="Write(Test$initializationFlag$1).value" incoming="_3lcNJLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNMbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNMrSpEem4MK7Gf1Ez8w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3lcNM7SpEem4MK7Gf1Ez8w" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_3lcNHbSpEem4MK7Gf1Ez8w" outgoing="_3lcNJLSpEem4MK7Gf1Ez8w" regionAsInput="_3lcNI7SpEem4MK7Gf1Ez8w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcNNLSpEem4MK7Gf1Ez8w" name="Read(Test$initializationFlag$1)" structuralFeature="_3lcMVbSpEem4MK7Gf1Ez8w">
            <object xmi:id="_3lcNNbSpEem4MK7Gf1Ez8w" name="Read(Test$initializationFlag$1).object" incoming="_3lcNDrSpEem4MK7Gf1Ez8w" type="_3lcMT7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNNrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNN7SpEem4MK7Gf1Ez8w" value="1"/>
            </object>
            <result xmi:id="_3lcNOLSpEem4MK7Gf1Ez8w" name="Read(Test$initializationFlag$1).result" outgoing="_3lcND7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNObSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNOrSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcNO7SpEem4MK7Gf1Ez8w" name="Call(ListSize)">
            <argument xmi:id="_3lcNPLSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lcND7SpEem4MK7Gf1Ez8w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNPbSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNPrSpEem4MK7Gf1Ez8w" value="*"/>
            </argument>
            <result xmi:id="_3lcNP7SpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lcNELSpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNQLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNQbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcNQrSpEem4MK7Gf1Ez8w" name="Value(0)">
            <result xmi:id="_3lcNQ7SpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lcNEbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNRLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNRbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3lcNRrSpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcNR7SpEem4MK7Gf1Ez8w" name="Test(Size==0)">
            <first xmi:id="_3lcNSLSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lcNELSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNSbSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNSrSpEem4MK7Gf1Ez8w" value="1"/>
            </first>
            <result xmi:id="_3lcNS7SpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lcNE7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNTLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNTbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <second xmi:id="_3lcNTrSpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lcNEbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNT7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNULSpEem4MK7Gf1Ez8w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3lcNUbSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lcNErSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3lcNUrSpEem4MK7Gf1Ez8w" name="Decision(Test(Test$initializationFlag$1))" incoming="_3lcNErSpEem4MK7Gf1Ez8w _3lcNE7SpEem4MK7Gf1Ez8w" outgoing="_3lcNFLSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcNE7SpEem4MK7Gf1Ez8w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_3lcNU7SpEem4MK7Gf1Ez8w" name="Test$initialization$1" visibility="protected" method="_3lcNCrSpEem4MK7Gf1Ez8w"/>
      <ownedOperation xmi:id="_3lcNVLSpEem4MK7Gf1Ez8w" name="destroy" visibility="public" method="_3lcMW7SpEem4MK7Gf1Ez8w"/>
      <ownedOperation xmi:id="_3lcNVbSpEem4MK7Gf1Ez8w" name="done" visibility="public" method="_3lcMXbSpEem4MK7Gf1Ez8w"/>
      <ownedOperation xmi:id="_3lcNVrSpEem4MK7Gf1Ez8w" name="Test" visibility="protected" method="_3lcMdLSpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcNV7SpEem4MK7Gf1Ez8w" name="tester" visibility="package" type="_3lcNYbSpEem4MK7Gf1Ez8w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNWLSpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNWbSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3lcNWrSpEem4MK7Gf1Ez8w" name="" visibility="package" type="_3lcMT7SpEem4MK7Gf1Ez8w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNW7SpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNXLSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3lcNXbSpEem4MK7Gf1Ez8w" name="done" visibility="public" method="_3lcM37SpEem4MK7Gf1Ez8w">
        <ownedParameter xmi:id="_3lcNXrSpEem4MK7Gf1Ez8w" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNX7SpEem4MK7Gf1Ez8w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNYLSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_3lcNYbSpEem4MK7Gf1Ez8w" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_3lcNYrSpEem4MK7Gf1Ez8w" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNY7SpEem4MK7Gf1Ez8w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNZLSpEem4MK7Gf1Ez8w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcNZbSpEem4MK7Gf1Ez8w" name="Tester$method$1" visibility="private" specification="_3lcN7LSpEem4MK7Gf1Ez8w" node="_3lcNarSpEem4MK7Gf1Ez8w _3lcNa7SpEem4MK7Gf1Ez8w" group="_3lcNa7SpEem4MK7Gf1Ez8w">
          <ownedParameter xmi:id="_3lcNZrSpEem4MK7Gf1Ez8w" name="" type="_3lcNYbSpEem4MK7Gf1Ez8w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNZ7SpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNaLSpEem4MK7Gf1Ez8w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNabSpEem4MK7Gf1Ez8w" target="_3lcNarSpEem4MK7Gf1Ez8w" source="_3lcNfLSpEem4MK7Gf1Ez8w"/>
          <structuredNode xmi:id="_3lcNa7SpEem4MK7Gf1Ez8w" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNbLSpEem4MK7Gf1Ez8w" target="_3lcNfLSpEem4MK7Gf1Ez8w" source="_3lcNebSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNbbSpEem4MK7Gf1Ez8w" target="_3lcNfrSpEem4MK7Gf1Ez8w" source="_3lcNfLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNbrSpEem4MK7Gf1Ez8w" target="_3lcNd7SpEem4MK7Gf1Ez8w" source="_3lcNfbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNb7SpEem4MK7Gf1Ez8w" target="_3lcNgrSpEem4MK7Gf1Ez8w" source="_3lcNfLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNcLSpEem4MK7Gf1Ez8w" target="_3lcNibSpEem4MK7Gf1Ez8w" source="_3lcNhbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNcbSpEem4MK7Gf1Ez8w" target="_3lcNlbSpEem4MK7Gf1Ez8w" source="_3lcNjLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNcrSpEem4MK7Gf1Ez8w" target="_3lcNm7SpEem4MK7Gf1Ez8w" source="_3lcNkLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNc7SpEem4MK7Gf1Ez8w" target="_3lcNn7SpEem4MK7Gf1Ez8w" source="_3lcNnrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNdLSpEem4MK7Gf1Ez8w" target="_3lcNn7SpEem4MK7Gf1Ez8w" source="_3lcNmLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNdbSpEem4MK7Gf1Ez8w" target="_3lcNfbSpEem4MK7Gf1Ez8w" source="_3lcNn7SpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcNdrSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcNd7SpEem4MK7Gf1Ez8w" name="Body" incoming="_3lcNbrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcNeLSpEem4MK7Gf1Ez8w" name="ReadSelf">
              <result xmi:id="_3lcNebSpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcNbLSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNerSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNe7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcNfLSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcNbLSpEem4MK7Gf1Ez8w" outgoing="_3lcNabSpEem4MK7Gf1Ez8w _3lcNbbSpEem4MK7Gf1Ez8w _3lcNb7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3lcNfbSpEem4MK7Gf1Ez8w" name="Call(Tester$initialization$1)" incoming="_3lcNdbSpEem4MK7Gf1Ez8w" outgoing="_3lcNbrSpEem4MK7Gf1Ez8w" operation="_3lcN67SpEem4MK7Gf1Ez8w">
              <target xmi:id="_3lcNfrSpEem4MK7Gf1Ez8w" name="Call(Tester$initialization$1).target" incoming="_3lcNbbSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNf7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNgLSpEem4MK7Gf1Ez8w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcNgbSpEem4MK7Gf1Ez8w" name="Read(Tester$initializationFlag$1)" structuralFeature="_3lcNYrSpEem4MK7Gf1Ez8w">
              <object xmi:id="_3lcNgrSpEem4MK7Gf1Ez8w" name="Read(Tester$initializationFlag$1).object" incoming="_3lcNb7SpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNg7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNhLSpEem4MK7Gf1Ez8w" value="1"/>
              </object>
              <result xmi:id="_3lcNhbSpEem4MK7Gf1Ez8w" name="Read(Tester$initializationFlag$1).result" outgoing="_3lcNcLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNhrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNh7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcNiLSpEem4MK7Gf1Ez8w" name="Call(ListSize)">
              <argument xmi:id="_3lcNibSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lcNcLSpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNirSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNi7SpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcNjLSpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lcNcbSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNjbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNjrSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcNj7SpEem4MK7Gf1Ez8w" name="Value(0)">
              <result xmi:id="_3lcNkLSpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lcNcrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNkbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNkrSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lcNk7SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcNlLSpEem4MK7Gf1Ez8w" name="Test(Size==0)">
              <first xmi:id="_3lcNlbSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lcNcbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNlrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNl7SpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lcNmLSpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lcNdLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNmbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNmrSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lcNm7SpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lcNcrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNnLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNnbSpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3lcNnrSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lcNc7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcNn7SpEem4MK7Gf1Ez8w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_3lcNc7SpEem4MK7Gf1Ez8w _3lcNdLSpEem4MK7Gf1Ez8w" outgoing="_3lcNdbSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcNdLSpEem4MK7Gf1Ez8w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcNarSpEem4MK7Gf1Ez8w" name="Return" incoming="_3lcNabSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" parameter="_3lcNZrSpEem4MK7Gf1Ez8w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcNoLSpEem4MK7Gf1Ez8w" name="destroy$method$1" visibility="private" specification="_3lcN8LSpEem4MK7Gf1Ez8w" node="_3lcNobSpEem4MK7Gf1Ez8w" group="_3lcNobSpEem4MK7Gf1Ez8w">
          <structuredNode xmi:id="_3lcNobSpEem4MK7Gf1Ez8w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3lcNorSpEem4MK7Gf1Ez8w" name="Tester$initialization$1" visibility="private" specification="_3lcN67SpEem4MK7Gf1Ez8w" node="_3lcNo7SpEem4MK7Gf1Ez8w" group="_3lcNo7SpEem4MK7Gf1Ez8w">
          <structuredNode xmi:id="_3lcNo7SpEem4MK7Gf1Ez8w" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNpLSpEem4MK7Gf1Ez8w" target="_3lcNsrSpEem4MK7Gf1Ez8w" source="_3lcNr7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNpbSpEem4MK7Gf1Ez8w" target="_3lcNvrSpEem4MK7Gf1Ez8w" source="_3lcNsrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNprSpEem4MK7Gf1Ez8w" target="_3lcNzbSpEem4MK7Gf1Ez8w" source="_3lcNsrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNp7SpEem4MK7Gf1Ez8w" target="_3lcN1LSpEem4MK7Gf1Ez8w" source="_3lcN0LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNqLSpEem4MK7Gf1Ez8w" target="_3lcN4LSpEem4MK7Gf1Ez8w" source="_3lcN17SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNqbSpEem4MK7Gf1Ez8w" target="_3lcN5rSpEem4MK7Gf1Ez8w" source="_3lcN27SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNqrSpEem4MK7Gf1Ez8w" target="_3lcN6rSpEem4MK7Gf1Ez8w" source="_3lcN6bSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNq7SpEem4MK7Gf1Ez8w" target="_3lcN6rSpEem4MK7Gf1Ez8w" source="_3lcN47SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcNrLSpEem4MK7Gf1Ez8w" target="_3lcNs7SpEem4MK7Gf1Ez8w" source="_3lcN6rSpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcNrbSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3lcNrrSpEem4MK7Gf1Ez8w" name="ReadSelf">
              <result xmi:id="_3lcNr7SpEem4MK7Gf1Ez8w" name="ReadSelf.result" outgoing="_3lcNpLSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNsLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNsbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcNsrSpEem4MK7Gf1Ez8w" name="Fork(ReadSelf.result)" incoming="_3lcNpLSpEem4MK7Gf1Ez8w" outgoing="_3lcNpbSpEem4MK7Gf1Ez8w _3lcNprSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcNs7SpEem4MK7Gf1Ez8w" name="Initialization" incoming="_3lcNrLSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcNtLSpEem4MK7Gf1Ez8w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNtbSpEem4MK7Gf1Ez8w" target="_3lcNy7SpEem4MK7Gf1Ez8w" source="_3lcNt7SpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcNtrSpEem4MK7Gf1Ez8w" name="Value(true)">
                  <result xmi:id="_3lcNt7SpEem4MK7Gf1Ez8w" name="Value(true).result" outgoing="_3lcNtbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNuLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNubSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_3lcNurSpEem4MK7Gf1Ez8w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_3lcNu7SpEem4MK7Gf1Ez8w" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_3lcNy7SpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNvLSpEem4MK7Gf1Ez8w" target="_3lcNyLSpEem4MK7Gf1Ez8w" source="_3lcNy7SpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcNvbSpEem4MK7Gf1Ez8w" target="_3lcNwrSpEem4MK7Gf1Ez8w" source="_3lcNvrSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeInput xmi:id="_3lcNvrSpEem4MK7Gf1Ez8w" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3lcNpbSpEem4MK7Gf1Ez8w" outgoing="_3lcNvbSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNv7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNwLSpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3lcNwbSpEem4MK7Gf1Ez8w" name="Write(Tester$initializationFlag$1)" structuralFeature="_3lcNYrSpEem4MK7Gf1Ez8w">
                    <object xmi:id="_3lcNwrSpEem4MK7Gf1Ez8w" name="Write(Tester$initializationFlag$1).object" incoming="_3lcNvbSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNw7SpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNxLSpEem4MK7Gf1Ez8w" value="1"/>
                    </object>
                    <result xmi:id="_3lcNxbSpEem4MK7Gf1Ez8w" name="Write(Tester$initializationFlag$1).result" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNxrSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNx7SpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:id="_3lcNyLSpEem4MK7Gf1Ez8w" name="Write(Tester$initializationFlag$1).value" incoming="_3lcNvLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNybSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNyrSpEem4MK7Gf1Ez8w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3lcNy7SpEem4MK7Gf1Ez8w" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_3lcNtbSpEem4MK7Gf1Ez8w" outgoing="_3lcNvLSpEem4MK7Gf1Ez8w" regionAsInput="_3lcNu7SpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3lcNzLSpEem4MK7Gf1Ez8w" name="Read(Tester$initializationFlag$1)" structuralFeature="_3lcNYrSpEem4MK7Gf1Ez8w">
              <object xmi:id="_3lcNzbSpEem4MK7Gf1Ez8w" name="Read(Tester$initializationFlag$1).object" incoming="_3lcNprSpEem4MK7Gf1Ez8w" type="_3lcNYbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcNzrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcNz7SpEem4MK7Gf1Ez8w" value="1"/>
              </object>
              <result xmi:id="_3lcN0LSpEem4MK7Gf1Ez8w" name="Read(Tester$initializationFlag$1).result" outgoing="_3lcNp7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN0bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN0rSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcN07SpEem4MK7Gf1Ez8w" name="Call(ListSize)">
              <argument xmi:id="_3lcN1LSpEem4MK7Gf1Ez8w" name="Call(ListSize).argument(list)" incoming="_3lcNp7SpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN1bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN1rSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcN17SpEem4MK7Gf1Ez8w" name="Call(ListSize).result(result)" outgoing="_3lcNqLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN2LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN2bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcN2rSpEem4MK7Gf1Ez8w" name="Value(0)">
              <result xmi:id="_3lcN27SpEem4MK7Gf1Ez8w" name="Value(0).result" outgoing="_3lcNqbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN3LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN3bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lcN3rSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcN37SpEem4MK7Gf1Ez8w" name="Test(Size==0)">
              <first xmi:id="_3lcN4LSpEem4MK7Gf1Ez8w" name="Test(Size==0).first" incoming="_3lcNqLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN4bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN4rSpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lcN47SpEem4MK7Gf1Ez8w" name="Test(Size==0).result" outgoing="_3lcNq7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN5LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN5bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lcN5rSpEem4MK7Gf1Ez8w" name="Test(Size==0).second" incoming="_3lcNqbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN57SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN6LSpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3lcN6bSpEem4MK7Gf1Ez8w" name="InitialNode" outgoing="_3lcNqrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcN6rSpEem4MK7Gf1Ez8w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_3lcNqrSpEem4MK7Gf1Ez8w _3lcNq7SpEem4MK7Gf1Ez8w" outgoing="_3lcNrLSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcNq7SpEem4MK7Gf1Ez8w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_3lcN67SpEem4MK7Gf1Ez8w" name="Tester$initialization$1" visibility="protected" method="_3lcNorSpEem4MK7Gf1Ez8w"/>
        <ownedOperation xmi:id="_3lcN7LSpEem4MK7Gf1Ez8w" name="Tester" visibility="public" method="_3lcNZbSpEem4MK7Gf1Ez8w">
          <ownedParameter xmi:id="_3lcN7bSpEem4MK7Gf1Ez8w" name="" visibility="package" type="_3lcNYbSpEem4MK7Gf1Ez8w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN7rSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN77SpEem4MK7Gf1Ez8w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_3lcN8LSpEem4MK7Gf1Ez8w" name="destroy" visibility="public" method="_3lcNoLSpEem4MK7Gf1Ez8w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_3lcN8bSpEem4MK7Gf1Ez8w" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_3lcN8rSpEem4MK7Gf1Ez8w" name="Continue" signal="_3lcN8bSpEem4MK7Gf1Ez8w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3lcN87SpEem4MK7Gf1Ez8w" name="AssertFalse" visibility="public" node="_3lcOBLSpEem4MK7Gf1Ez8w _3lcOBbSpEem4MK7Gf1Ez8w _3lcOBrSpEem4MK7Gf1Ez8w _3lcOB7SpEem4MK7Gf1Ez8w _3lcOCLSpEem4MK7Gf1Ez8w" group="_3lcOCLSpEem4MK7Gf1Ez8w">
      <elementImport xmi:id="_3lcN9LSpEem4MK7Gf1Ez8w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_3lcN9bSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lcN9rSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lcN97SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lcN-LSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lcN-bSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3lcN-rSpEem4MK7Gf1Ez8w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN-7SpEem4MK7Gf1Ez8w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN_LSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3lcN_bSpEem4MK7Gf1Ez8w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcN_rSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcN_7SpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOALSpEem4MK7Gf1Ez8w" target="_3lcOBbSpEem4MK7Gf1Ez8w" source="_3lcOBLSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOAbSpEem4MK7Gf1Ez8w" target="_3lcOB7SpEem4MK7Gf1Ez8w" source="_3lcOBrSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOArSpEem4MK7Gf1Ez8w" target="_3lcOKbSpEem4MK7Gf1Ez8w" source="_3lcOBbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOA7SpEem4MK7Gf1Ez8w" target="_3lcOTbSpEem4MK7Gf1Ez8w" source="_3lcOB7SpEem4MK7Gf1Ez8w"/>
      <structuredNode xmi:id="_3lcOCLSpEem4MK7Gf1Ez8w" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcOCbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@3f06d7">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOCrSpEem4MK7Gf1Ez8w" target="_3lcODrSpEem4MK7Gf1Ez8w" source="_3lcOMbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOC7SpEem4MK7Gf1Ez8w" target="_3lcOEbSpEem4MK7Gf1Ez8w" source="_3lcOVrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcODLSpEem4MK7Gf1Ez8w" target="_3lcODbSpEem4MK7Gf1Ez8w" source="_3lcOFLSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcODbSpEem4MK7Gf1Ez8w" name="Call(AssertTrue)" incoming="_3lcODLSpEem4MK7Gf1Ez8w" behavior="_3lc1ZrSpEem4MK7Gf1Ez8w">
            <argument xmi:id="_3lcODrSpEem4MK7Gf1Ez8w" name="Call(AssertTrue).argument(label)" incoming="_3lcOCrSpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOD7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOELSpEem4MK7Gf1Ez8w" value="1"/>
            </argument>
            <argument xmi:id="_3lcOEbSpEem4MK7Gf1Ez8w" name="Call(AssertTrue).argument(condition)" incoming="_3lcOC7SpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOErSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOE7SpEem4MK7Gf1Ez8w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcOFLSpEem4MK7Gf1Ez8w" name="Tuple@b75c04e" outgoing="_3lcODLSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOFbSpEem4MK7Gf1Ez8w" target="_3lcONbSpEem4MK7Gf1Ez8w" source="_3lcOI7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOFrSpEem4MK7Gf1Ez8w" target="_3lcOOLSpEem4MK7Gf1Ez8w" source="_3lcOLLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOF7SpEem4MK7Gf1Ez8w" target="_3lcOL7SpEem4MK7Gf1Ez8w" source="_3lcOIrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOGLSpEem4MK7Gf1Ez8w" target="_3lcOL7SpEem4MK7Gf1Ez8w" source="_3lcOJ7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOGbSpEem4MK7Gf1Ez8w" target="_3lcORLSpEem4MK7Gf1Ez8w" source="_3lcOTbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOGrSpEem4MK7Gf1Ez8w" target="_3lcOT7SpEem4MK7Gf1Ez8w" source="_3lcOTbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOG7SpEem4MK7Gf1Ez8w" target="_3lcOVbSpEem4MK7Gf1Ez8w" source="_3lcOUrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOHLSpEem4MK7Gf1Ez8w" target="_3lcOVrSpEem4MK7Gf1Ez8w" source="_3lcOR7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOHbSpEem4MK7Gf1Ez8w" target="_3lcOV7SpEem4MK7Gf1Ez8w" source="_3lcOVbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOHrSpEem4MK7Gf1Ez8w" target="_3lcOV7SpEem4MK7Gf1Ez8w" source="_3lcOVbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOH7SpEem4MK7Gf1Ez8w" target="_3lcOVrSpEem4MK7Gf1Ez8w" source="_3lcOV7SpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcOILSpEem4MK7Gf1Ez8w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOIbSpEem4MK7Gf1Ez8w" target="_3lcOSrSpEem4MK7Gf1Ez8w" source="_3lcOP7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcOIrSpEem4MK7Gf1Ez8w" name="Value(&quot;! &quot;)" outgoing="_3lcOF7SpEem4MK7Gf1Ez8w">
              <result xmi:id="_3lcOI7SpEem4MK7Gf1Ez8w" name="Value(&quot;! &quot;).result" outgoing="_3lcOFbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOJLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOJbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3lcOJrSpEem4MK7Gf1Ez8w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcOJ7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))" outgoing="_3lcOGLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOKLSpEem4MK7Gf1Ez8w" target="_3lcOLLSpEem4MK7Gf1Ez8w" source="_3lcOKbSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcOKbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcOArSpEem4MK7Gf1Ez8w" outgoing="_3lcOKLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOKrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOK7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcOLLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lcOKLSpEem4MK7Gf1Ez8w" outgoing="_3lcOFrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOLbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOLrSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcOL7SpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lcOF7SpEem4MK7Gf1Ez8w _3lcOGLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOMLSpEem4MK7Gf1Ez8w" target="_3lcOMbSpEem4MK7Gf1Ez8w" source="_3lcOO7SpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lcOMbSpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lcOMLSpEem4MK7Gf1Ez8w" outgoing="_3lcOCrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOMrSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOM7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcONLSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                <argument xmi:id="_3lcONbSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lcOFbSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcONrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcON7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lcOOLSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lcOFrSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOObSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOOrSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lcOO7SpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lcOMLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOPLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOPbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcOPrSpEem4MK7Gf1Ez8w" name="Value(false)">
              <result xmi:id="_3lcOP7SpEem4MK7Gf1Ez8w" name="Value(false).result" outgoing="_3lcOIbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOQLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOQbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_3lcOQrSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcOQ7SpEem4MK7Gf1Ez8w" name="Test(==)">
              <first xmi:id="_3lcORLSpEem4MK7Gf1Ez8w" name="Test(==).first" incoming="_3lcOGbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcORbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcORrSpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lcOR7SpEem4MK7Gf1Ez8w" name="Test(==).result" outgoing="_3lcOHLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOSLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOSbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lcOSrSpEem4MK7Gf1Ez8w" name="Test(==).second" incoming="_3lcOIbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOS7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOTLSpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcOTbSpEem4MK7Gf1Ez8w" name="Fork(Fork(condition))" incoming="_3lcOA7SpEem4MK7Gf1Ez8w" outgoing="_3lcOGbSpEem4MK7Gf1Ez8w _3lcOGrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcOTrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty)">
              <argument xmi:id="_3lcOT7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lcOGrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOULSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOUbSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcOUrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lcOG7SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOU7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOVLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcOVbSpEem4MK7Gf1Ez8w" name="Fork(Call(NotEmpty).result())" incoming="_3lcOG7SpEem4MK7Gf1Ez8w" outgoing="_3lcOHbSpEem4MK7Gf1Ez8w _3lcOHrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_3lcOVrSpEem4MK7Gf1Ez8w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_3lcOHLSpEem4MK7Gf1Ez8w _3lcOH7SpEem4MK7Gf1Ez8w" outgoing="_3lcOC7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcOV7SpEem4MK7Gf1Ez8w" name="Decision(Call(NotEmpty).result())" incoming="_3lcOHbSpEem4MK7Gf1Ez8w _3lcOHrSpEem4MK7Gf1Ez8w" outgoing="_3lcOH7SpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcOHrSpEem4MK7Gf1Ez8w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcOBLSpEem4MK7Gf1Ez8w" name="Input(label)" outgoing="_3lcOALSpEem4MK7Gf1Ez8w" parameter="_3lcN-rSpEem4MK7Gf1Ez8w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3lcOBbSpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lcOALSpEem4MK7Gf1Ez8w" outgoing="_3lcOArSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcOBrSpEem4MK7Gf1Ez8w" name="Input(condition)" outgoing="_3lcOAbSpEem4MK7Gf1Ez8w" parameter="_3lcN_bSpEem4MK7Gf1Ez8w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3lcOB7SpEem4MK7Gf1Ez8w" name="Fork(condition)" incoming="_3lcOAbSpEem4MK7Gf1Ez8w" outgoing="_3lcOA7SpEem4MK7Gf1Ez8w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3lcOWLSpEem4MK7Gf1Ez8w" name="AssertEqual" visibility="public" node="_3lcOeLSpEem4MK7Gf1Ez8w _3lcOebSpEem4MK7Gf1Ez8w _3lcOerSpEem4MK7Gf1Ez8w _3lcOe7SpEem4MK7Gf1Ez8w _3lcOfLSpEem4MK7Gf1Ez8w _3lcOfbSpEem4MK7Gf1Ez8w _3lcOfrSpEem4MK7Gf1Ez8w" group="_3lcOfrSpEem4MK7Gf1Ez8w">
      <packageImport xmi:id="_3lcOWbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lcOWrSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lcOW7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lcOXLSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lcOXbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3lcOXrSpEem4MK7Gf1Ez8w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOX7SpEem4MK7Gf1Ez8w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOYLSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3lcOYbSpEem4MK7Gf1Ez8w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOYrSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOY7SpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3lcOZLSpEem4MK7Gf1Ez8w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOZbSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOZrSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOZ7SpEem4MK7Gf1Ez8w" target="_3lcOebSpEem4MK7Gf1Ez8w" source="_3lcOeLSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOaLSpEem4MK7Gf1Ez8w" target="_3lcOe7SpEem4MK7Gf1Ez8w" source="_3lcOerSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOabSpEem4MK7Gf1Ez8w" target="_3lcOfbSpEem4MK7Gf1Ez8w" source="_3lcOfLSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOarSpEem4MK7Gf1Ez8w" target="_3lcOtbSpEem4MK7Gf1Ez8w" source="_3lcOe7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOa7SpEem4MK7Gf1Ez8w" target="_3lcOvbSpEem4MK7Gf1Ez8w" source="_3lcOfbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcObLSpEem4MK7Gf1Ez8w" target="_3lcO97SpEem4MK7Gf1Ez8w" source="_3lcOebSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcObbSpEem4MK7Gf1Ez8w" target="_3lcPNrSpEem4MK7Gf1Ez8w" source="_3lcOfbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcObrSpEem4MK7Gf1Ez8w" target="_3lcyirSpEem4MK7Gf1Ez8w" source="_3lcOebSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOb7SpEem4MK7Gf1Ez8w" target="_3lcymrSpEem4MK7Gf1Ez8w" source="_3lcOfbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOcLSpEem4MK7Gf1Ez8w" target="_3lcyorSpEem4MK7Gf1Ez8w" source="_3lcOe7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOcbSpEem4MK7Gf1Ez8w" target="_3lcywbSpEem4MK7Gf1Ez8w" source="_3lcOfbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOcrSpEem4MK7Gf1Ez8w" target="_3lcy5LSpEem4MK7Gf1Ez8w" source="_3lcOebSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOc7SpEem4MK7Gf1Ez8w" target="_3lcy9LSpEem4MK7Gf1Ez8w" source="_3lcOfbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOdLSpEem4MK7Gf1Ez8w" target="_3lcy_LSpEem4MK7Gf1Ez8w" source="_3lcOe7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOdbSpEem4MK7Gf1Ez8w" target="_3lczS7SpEem4MK7Gf1Ez8w" source="_3lcOebSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOdrSpEem4MK7Gf1Ez8w" target="_3lczWLSpEem4MK7Gf1Ez8w" source="_3lcOfbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOd7SpEem4MK7Gf1Ez8w" target="_3lczYLSpEem4MK7Gf1Ez8w" source="_3lcOe7SpEem4MK7Gf1Ez8w"/>
      <structuredNode xmi:id="_3lcOfrSpEem4MK7Gf1Ez8w" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOf7SpEem4MK7Gf1Ez8w" target="_3lczdLSpEem4MK7Gf1Ez8w" source="_3lczaLSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOgLSpEem4MK7Gf1Ez8w" target="_3lczdbSpEem4MK7Gf1Ez8w" source="_3lcza7SpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOgbSpEem4MK7Gf1Ez8w" target="_3lczdrSpEem4MK7Gf1Ez8w" source="_3lczbrSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOgrSpEem4MK7Gf1Ez8w" target="_3lczd7SpEem4MK7Gf1Ez8w" source="_3lczcbSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_3lcOg7SpEem4MK7Gf1Ez8w" name="IfStatement@1df5e38e">
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOhLSpEem4MK7Gf1Ez8w" target="_3lcPILSpEem4MK7Gf1Ez8w" source="_3lcO4LSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOhbSpEem4MK7Gf1Ez8w" target="_3lczELSpEem4MK7Gf1Ez8w" source="_3lczBLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOhrSpEem4MK7Gf1Ez8w" target="_3lczEbSpEem4MK7Gf1Ez8w" source="_3lczB7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOh7SpEem4MK7Gf1Ez8w" target="_3lczErSpEem4MK7Gf1Ez8w" source="_3lczCrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOiLSpEem4MK7Gf1Ez8w" target="_3lczE7SpEem4MK7Gf1Ez8w" source="_3lczDbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOibSpEem4MK7Gf1Ez8w" target="_3lcPQrSpEem4MK7Gf1Ez8w" source="_3lcPIrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOirSpEem4MK7Gf1Ez8w" target="_3lcPX7SpEem4MK7Gf1Ez8w" source="_3lcPIrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOi7SpEem4MK7Gf1Ez8w" target="_3lcykrSpEem4MK7Gf1Ez8w" source="_3lcPIrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOjLSpEem4MK7Gf1Ez8w" target="_3lcy7LSpEem4MK7Gf1Ez8w" source="_3lcPIrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOjbSpEem4MK7Gf1Ez8w" target="_3lcPOLSpEem4MK7Gf1Ez8w" source="_3lcPILSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOjrSpEem4MK7Gf1Ez8w" target="_3lczFLSpEem4MK7Gf1Ez8w" source="_3lcPOLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOj7SpEem4MK7Gf1Ez8w" target="_3lczJrSpEem4MK7Gf1Ez8w" source="_3lczELSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOkLSpEem4MK7Gf1Ez8w" target="_3lczLrSpEem4MK7Gf1Ez8w" source="_3lczEbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOkbSpEem4MK7Gf1Ez8w" target="_3lczNrSpEem4MK7Gf1Ez8w" source="_3lczErSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOkrSpEem4MK7Gf1Ez8w" target="_3lczPrSpEem4MK7Gf1Ez8w" source="_3lczE7SpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcOk7SpEem4MK7Gf1Ez8w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOlLSpEem4MK7Gf1Ez8w" target="_3lcOrLSpEem4MK7Gf1Ez8w" source="_3lcOtbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOlbSpEem4MK7Gf1Ez8w" target="_3lcOt7SpEem4MK7Gf1Ez8w" source="_3lcOtbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOlrSpEem4MK7Gf1Ez8w" target="_3lcOsrSpEem4MK7Gf1Ez8w" source="_3lcOvbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOl7SpEem4MK7Gf1Ez8w" target="_3lcOv7SpEem4MK7Gf1Ez8w" source="_3lcOvbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOmLSpEem4MK7Gf1Ez8w" target="_3lcOxrSpEem4MK7Gf1Ez8w" source="_3lcOurSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOmbSpEem4MK7Gf1Ez8w" target="_3lcOx7SpEem4MK7Gf1Ez8w" source="_3lcOwrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOmrSpEem4MK7Gf1Ez8w" target="_3lcOybSpEem4MK7Gf1Ez8w" source="_3lcOxrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOm7SpEem4MK7Gf1Ez8w" target="_3lcO0LSpEem4MK7Gf1Ez8w" source="_3lcOx7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOnLSpEem4MK7Gf1Ez8w" target="_3lcO1rSpEem4MK7Gf1Ez8w" source="_3lcOx7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOnbSpEem4MK7Gf1Ez8w" target="_3lcOq7SpEem4MK7Gf1Ez8w" source="_3lcO1rSpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcOnrSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOn7SpEem4MK7Gf1Ez8w" target="_3lcOyLSpEem4MK7Gf1Ez8w" source="_3lcO1rSpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcOoLSpEem4MK7Gf1Ez8w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOobSpEem4MK7Gf1Ez8w" target="_3lcO17SpEem4MK7Gf1Ez8w" source="_3lcOxbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOorSpEem4MK7Gf1Ez8w" target="_3lcO17SpEem4MK7Gf1Ez8w" source="_3lcOxrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOo7SpEem4MK7Gf1Ez8w" target="_3lcO1rSpEem4MK7Gf1Ez8w" source="_3lcO17SpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcOpLSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcOpbSpEem4MK7Gf1Ez8w" target="_3lcOz7SpEem4MK7Gf1Ez8w" source="_3lcO17SpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcOprSpEem4MK7Gf1Ez8w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOp7SpEem4MK7Gf1Ez8w" target="_3lcO2LSpEem4MK7Gf1Ez8w" source="_3lcOr7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOqLSpEem4MK7Gf1Ez8w" target="_3lcO2LSpEem4MK7Gf1Ez8w" source="_3lcOzLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOqbSpEem4MK7Gf1Ez8w" target="_3lcO2LSpEem4MK7Gf1Ez8w" source="_3lcO07SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcOqrSpEem4MK7Gf1Ez8w" target="_3lcO2rSpEem4MK7Gf1Ez8w" source="_3lcO2LSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lcOq7SpEem4MK7Gf1Ez8w" name="Test(==)" incoming="_3lcOnbSpEem4MK7Gf1Ez8w">
              <first xmi:id="_3lcOrLSpEem4MK7Gf1Ez8w" name="Test(==).first" incoming="_3lcOlLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOrbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOrrSpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lcOr7SpEem4MK7Gf1Ez8w" name="Test(==).result" outgoing="_3lcOp7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOsLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOsbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lcOsrSpEem4MK7Gf1Ez8w" name="Test(==).second" incoming="_3lcOlrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOs7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOtLSpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcOtbSpEem4MK7Gf1Ez8w" name="Fork(Fork(value1))" incoming="_3lcOarSpEem4MK7Gf1Ez8w" outgoing="_3lcOlLSpEem4MK7Gf1Ez8w _3lcOlbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcOtrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty)">
              <argument xmi:id="_3lcOt7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lcOlbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOuLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOubSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcOurSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lcOmLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOu7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOvLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcOvbSpEem4MK7Gf1Ez8w" name="Fork(Fork(value2))" incoming="_3lcOa7SpEem4MK7Gf1Ez8w" outgoing="_3lcOlrSpEem4MK7Gf1Ez8w _3lcOl7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcOvrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty)">
              <argument xmi:id="_3lcOv7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lcOl7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOwLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOwbSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lcOwrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lcOmbSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOw7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOxLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3lcOxbSpEem4MK7Gf1Ez8w" name="Initial(Test(==))" outgoing="_3lcOobSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcOxrSpEem4MK7Gf1Ez8w" name="Fork(Call(NotEmpty).result())" incoming="_3lcOmLSpEem4MK7Gf1Ez8w" outgoing="_3lcOmrSpEem4MK7Gf1Ez8w _3lcOorSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcOx7SpEem4MK7Gf1Ez8w" name="Fork(Call(NotEmpty).result())" incoming="_3lcOmbSpEem4MK7Gf1Ez8w" outgoing="_3lcOm7SpEem4MK7Gf1Ez8w _3lcOnLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcOyLSpEem4MK7Gf1Ez8w" name="Call(Not)" incoming="_3lcOn7SpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lcOybSpEem4MK7Gf1Ez8w" name="Call(Not).argument(x)" incoming="_3lcOmrSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOyrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOy7SpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lcOzLSpEem4MK7Gf1Ez8w" name="Call(Not).result(result)" outgoing="_3lcOqLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcOzbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcOzrSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcOz7SpEem4MK7Gf1Ez8w" name="Call(Not)" incoming="_3lcOpbSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lcO0LSpEem4MK7Gf1Ez8w" name="Call(Not).argument(x)" incoming="_3lcOm7SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO0bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO0rSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lcO07SpEem4MK7Gf1Ez8w" name="Call(Not).result(result)" outgoing="_3lcOqbSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO1LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO1bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcO1rSpEem4MK7Gf1Ez8w" name="Decision(Call(NotEmpty).result())" incoming="_3lcOnLSpEem4MK7Gf1Ez8w _3lcOo7SpEem4MK7Gf1Ez8w" outgoing="_3lcOnbSpEem4MK7Gf1Ez8w _3lcOn7SpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcOnLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lcO17SpEem4MK7Gf1Ez8w" name="Decision(Call(NotEmpty).result())" incoming="_3lcOobSpEem4MK7Gf1Ez8w _3lcOorSpEem4MK7Gf1Ez8w" outgoing="_3lcOo7SpEem4MK7Gf1Ez8w _3lcOpbSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcOorSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_3lcO2LSpEem4MK7Gf1Ez8w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_3lcOp7SpEem4MK7Gf1Ez8w _3lcOqLSpEem4MK7Gf1Ez8w _3lcOqbSpEem4MK7Gf1Ez8w" outgoing="_3lcOqrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcO2bSpEem4MK7Gf1Ez8w" name="Call(Not)">
              <argument xmi:id="_3lcO2rSpEem4MK7Gf1Ez8w" name="Call(Not).argument(x)" incoming="_3lcOqrSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO27SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO3LSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lcO3bSpEem4MK7Gf1Ez8w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO3rSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO37SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcO4LSpEem4MK7Gf1Ez8w" name="ExpressionStatement@3934a176" outgoing="_3lcOhLSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO4bSpEem4MK7Gf1Ez8w" target="_3lcO5LSpEem4MK7Gf1Ez8w" source="_3lcPE7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcO4rSpEem4MK7Gf1Ez8w" target="_3lcO47SpEem4MK7Gf1Ez8w" source="_3lcO57SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcO47SpEem4MK7Gf1Ez8w" name="Call(Write)" incoming="_3lcO4rSpEem4MK7Gf1Ez8w" behavior="_3lc2CLSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lcO5LSpEem4MK7Gf1Ez8w" name="Call(Write).argument(value)" incoming="_3lcO4bSpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO5bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO5rSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcO57SpEem4MK7Gf1Ez8w" name="Tuple@1e4e76b2" outgoing="_3lcO4rSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO6LSpEem4MK7Gf1Ez8w" target="_3lcPA7SpEem4MK7Gf1Ez8w" source="_3lcO8bSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO6bSpEem4MK7Gf1Ez8w" target="_3lcPBrSpEem4MK7Gf1Ez8w" source="_3lcO-rSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcO6rSpEem4MK7Gf1Ez8w" target="_3lcO_bSpEem4MK7Gf1Ez8w" source="_3lcO8LSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcO67SpEem4MK7Gf1Ez8w" target="_3lcO_bSpEem4MK7Gf1Ez8w" source="_3lcO9bSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO7LSpEem4MK7Gf1Ez8w" target="_3lcPF7SpEem4MK7Gf1Ez8w" source="_3lcO_7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO7bSpEem4MK7Gf1Ez8w" target="_3lcPGrSpEem4MK7Gf1Ez8w" source="_3lcPDbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcO7rSpEem4MK7Gf1Ez8w" target="_3lcPEbSpEem4MK7Gf1Ez8w" source="_3lcO_bSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcO77SpEem4MK7Gf1Ez8w" target="_3lcPEbSpEem4MK7Gf1Ez8w" source="_3lcPDLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcO8LSpEem4MK7Gf1Ez8w" name="Value(&quot;FAILED: &quot;)" outgoing="_3lcO6rSpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lcO8bSpEem4MK7Gf1Ez8w" name="Value(&quot;FAILED: &quot;).result" outgoing="_3lcO6LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO8rSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO87SpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3lcO9LSpEem4MK7Gf1Ez8w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcO9bSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))" outgoing="_3lcO67SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO9rSpEem4MK7Gf1Ez8w" target="_3lcO-rSpEem4MK7Gf1Ez8w" source="_3lcO97SpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lcO97SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcObLSpEem4MK7Gf1Ez8w" outgoing="_3lcO9rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO-LSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO-bSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lcO-rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lcO9rSpEem4MK7Gf1Ez8w" outgoing="_3lcO6bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcO-7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcO_LSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcO_bSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lcO6rSpEem4MK7Gf1Ez8w _3lcO67SpEem4MK7Gf1Ez8w" outgoing="_3lcO7rSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcO_rSpEem4MK7Gf1Ez8w" target="_3lcO_7SpEem4MK7Gf1Ez8w" source="_3lcPCbSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lcO_7SpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lcO_rSpEem4MK7Gf1Ez8w" outgoing="_3lcO7LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPALSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPAbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcPArSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                  <argument xmi:id="_3lcPA7SpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lcO6LSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPBLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPBbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <argument xmi:id="_3lcPBrSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lcO6bSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPB7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPCLSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lcPCbSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lcO_rSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPCrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPC7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcPDLSpEem4MK7Gf1Ez8w" name="Value(&quot;==&quot;)" outgoing="_3lcO77SpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lcPDbSpEem4MK7Gf1Ez8w" name="Value(&quot;==&quot;).result" outgoing="_3lcO7bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPDrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPD7SpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3lcPELSpEem4MK7Gf1Ez8w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPEbSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lcO7rSpEem4MK7Gf1Ez8w _3lcO77SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPErSpEem4MK7Gf1Ez8w" target="_3lcPE7SpEem4MK7Gf1Ez8w" source="_3lcPHbSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lcPE7SpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lcPErSpEem4MK7Gf1Ez8w" outgoing="_3lcO4bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPFLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPFbSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcPFrSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                  <argument xmi:id="_3lcPF7SpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lcO7LSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPGLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPGbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <argument xmi:id="_3lcPGrSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lcO7bSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPG7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPHLSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lcPHbSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lcPErSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPHrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPH7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPILSpEem4MK7Gf1Ez8w" name="ExpressionStatement@12ef1ef8" incoming="_3lcOhLSpEem4MK7Gf1Ez8w" outgoing="_3lcOjbSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPIbSpEem4MK7Gf1Ez8w" target="_3lcPIrSpEem4MK7Gf1Ez8w" source="_3lcPN7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcPIrSpEem4MK7Gf1Ez8w" name="Fork(s)@3be6f8dd" incoming="_3lcPIbSpEem4MK7Gf1Ez8w" outgoing="_3lcOibSpEem4MK7Gf1Ez8w _3lcOirSpEem4MK7Gf1Ez8w _3lcOi7SpEem4MK7Gf1Ez8w _3lcOjLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPI7SpEem4MK7Gf1Ez8w" name="RightHandSide@1feacca8">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3lcPJLSpEem4MK7Gf1Ez8w" name="CastExpression@1feacca8" mode="parallel" outputElement="_3lcPN7SpEem4MK7Gf1Ez8w" inputElement="_3lcPNrSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPJbSpEem4MK7Gf1Ez8w" target="_3lcPLrSpEem4MK7Gf1Ez8w" source="_3lcPNLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPJrSpEem4MK7Gf1Ez8w" target="_3lcPNbSpEem4MK7Gf1Ez8w" source="_3lcPNLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPJ7SpEem4MK7Gf1Ez8w" target="_3lcPNbSpEem4MK7Gf1Ez8w" source="_3lcPMbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPKLSpEem4MK7Gf1Ez8w" target="_3lcPLLSpEem4MK7Gf1Ez8w" source="_3lcPNbSpEem4MK7Gf1Ez8w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcPKbSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPKrSpEem4MK7Gf1Ez8w" target="_3lcPNLSpEem4MK7Gf1Ez8w" source="_3lcPNrSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPK7SpEem4MK7Gf1Ez8w" target="_3lcPN7SpEem4MK7Gf1Ez8w" source="_3lcPLLSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_3lcPLLSpEem4MK7Gf1Ez8w" name="Merge(CastExpression@1feacca8.operand)" incoming="_3lcPKLSpEem4MK7Gf1Ez8w" outgoing="_3lcPK7SpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_3lcPLbSpEem4MK7Gf1Ez8w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_3lcPLrSpEem4MK7Gf1Ez8w" name="ReadIsClassifiedObject(String).object" incoming="_3lcPJbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPL7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPMLSpEem4MK7Gf1Ez8w" value="1"/>
                  </object>
                  <result xmi:id="_3lcPMbSpEem4MK7Gf1Ez8w" name="ReadIsClassifiedObject(String).result" outgoing="_3lcPJ7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPMrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPM7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3lcPNLSpEem4MK7Gf1Ez8w" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_3lcPKrSpEem4MK7Gf1Ez8w" outgoing="_3lcPJbSpEem4MK7Gf1Ez8w _3lcPJrSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_3lcPNbSpEem4MK7Gf1Ez8w" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_3lcPJrSpEem4MK7Gf1Ez8w _3lcPJ7SpEem4MK7Gf1Ez8w" outgoing="_3lcPKLSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcPJ7SpEem4MK7Gf1Ez8w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3lcPNrSpEem4MK7Gf1Ez8w" name="CastExpression@1feacca8.inputElement" incoming="_3lcObbSpEem4MK7Gf1Ez8w" outgoing="_3lcPKrSpEem4MK7Gf1Ez8w" regionAsInput="_3lcPJLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3lcPN7SpEem4MK7Gf1Ez8w" name="CastExpression@1feacca8.outputElement" incoming="_3lcPK7SpEem4MK7Gf1Ez8w" outgoing="_3lcPIbSpEem4MK7Gf1Ez8w" regionAsOutput="_3lcPJLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_3lcPOLSpEem4MK7Gf1Ez8w" name="IfStatement@1fee34f3" incoming="_3lcOjbSpEem4MK7Gf1Ez8w" outgoing="_3lcOjrSpEem4MK7Gf1Ez8w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPObSpEem4MK7Gf1Ez8w" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcPOrSpEem4MK7Gf1Ez8w" target="_3lcPQbSpEem4MK7Gf1Ez8w" source="_3lcPO7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPO7SpEem4MK7Gf1Ez8w" name="Operands(EqualityExpression@ebd58a5)" outgoing="_3lcPOrSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcPPLSpEem4MK7Gf1Ez8w" name="Value(null)">
                  <result xmi:id="_3lcPPbSpEem4MK7Gf1Ez8w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPPrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPP7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_3lcPQLSpEem4MK7Gf1Ez8w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcPQbSpEem4MK7Gf1Ez8w" name="Call(NotEmpty)" incoming="_3lcPOrSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lcPQrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lcOibSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPQ7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPRLSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <result xmi:id="_3lcPRbSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPRrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPR7SpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPSLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@54e48043">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPSbSpEem4MK7Gf1Ez8w" target="_3lcPTLSpEem4MK7Gf1Ez8w" source="_3lcPe7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcPSrSpEem4MK7Gf1Ez8w" target="_3lcPS7SpEem4MK7Gf1Ez8w" source="_3lcPT7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcPS7SpEem4MK7Gf1Ez8w" name="Call(Write)" incoming="_3lcPSrSpEem4MK7Gf1Ez8w" behavior="_3lc2CLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lcPTLSpEem4MK7Gf1Ez8w" name="Call(Write).argument(value)" incoming="_3lcPSbSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPTbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPTrSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPT7SpEem4MK7Gf1Ez8w" name="Tuple@310fbc24" outgoing="_3lcPSrSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPULSpEem4MK7Gf1Ez8w" target="_3lcPa7SpEem4MK7Gf1Ez8w" source="_3lcPWbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPUbSpEem4MK7Gf1Ez8w" target="_3lcPbrSpEem4MK7Gf1Ez8w" source="_3lcPYrSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcPUrSpEem4MK7Gf1Ez8w" target="_3lcPZbSpEem4MK7Gf1Ez8w" source="_3lcPWLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcPU7SpEem4MK7Gf1Ez8w" target="_3lcPZbSpEem4MK7Gf1Ez8w" source="_3lcPXbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPVLSpEem4MK7Gf1Ez8w" target="_3lcPf7SpEem4MK7Gf1Ez8w" source="_3lcPZ7SpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPVbSpEem4MK7Gf1Ez8w" target="_3lcygrSpEem4MK7Gf1Ez8w" source="_3lcPdbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcPVrSpEem4MK7Gf1Ez8w" target="_3lcPebSpEem4MK7Gf1Ez8w" source="_3lcPZbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcPV7SpEem4MK7Gf1Ez8w" target="_3lcPebSpEem4MK7Gf1Ez8w" source="_3lcPdLSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcPWLSpEem4MK7Gf1Ez8w" name="Value(&quot;&quot;&quot;)" outgoing="_3lcPUrSpEem4MK7Gf1Ez8w">
                  <result xmi:id="_3lcPWbSpEem4MK7Gf1Ez8w" name="Value(&quot;&quot;&quot;).result" outgoing="_3lcPULSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPWrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPW7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lcPXLSpEem4MK7Gf1Ez8w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPXbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd)" outgoing="_3lcPU7SpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPXrSpEem4MK7Gf1Ez8w" target="_3lcPYrSpEem4MK7Gf1Ez8w" source="_3lcPX7SpEem4MK7Gf1Ez8w"/>
                  <structuredNodeInput xmi:id="_3lcPX7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd).input" incoming="_3lcOirSpEem4MK7Gf1Ez8w" outgoing="_3lcPXrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPYLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPYbSpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_3lcPYrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd).output" incoming="_3lcPXrSpEem4MK7Gf1Ez8w" outgoing="_3lcPUbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPY7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPZLSpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPZbSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lcPUrSpEem4MK7Gf1Ez8w _3lcPU7SpEem4MK7Gf1Ez8w" outgoing="_3lcPVrSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPZrSpEem4MK7Gf1Ez8w" target="_3lcPZ7SpEem4MK7Gf1Ez8w" source="_3lcPcbSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeOutput xmi:id="_3lcPZ7SpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lcPZrSpEem4MK7Gf1Ez8w" outgoing="_3lcPVLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPaLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPabSpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcParSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                    <argument xmi:id="_3lcPa7SpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lcPULSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPbLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPbbSpEem4MK7Gf1Ez8w" value="1"/>
                    </argument>
                    <argument xmi:id="_3lcPbrSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lcPUbSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPb7SpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPcLSpEem4MK7Gf1Ez8w" value="1"/>
                    </argument>
                    <result xmi:id="_3lcPcbSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lcPZrSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPcrSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPc7SpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcPdLSpEem4MK7Gf1Ez8w" name="Value(&quot;&quot;&quot;)" outgoing="_3lcPV7SpEem4MK7Gf1Ez8w">
                  <result xmi:id="_3lcPdbSpEem4MK7Gf1Ez8w" name="Value(&quot;&quot;&quot;).result" outgoing="_3lcPVbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPdrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPd7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lcPeLSpEem4MK7Gf1Ez8w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcPebSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lcPVrSpEem4MK7Gf1Ez8w _3lcPV7SpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcPerSpEem4MK7Gf1Ez8w" target="_3lcPe7SpEem4MK7Gf1Ez8w" source="_3lcyhbSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeOutput xmi:id="_3lcPe7SpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lcPerSpEem4MK7Gf1Ez8w" outgoing="_3lcPSbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcPfLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcPfbSpEem4MK7Gf1Ez8w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcPfrSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                    <argument xmi:id="_3lcPf7SpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lcPVLSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcygLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcygbSpEem4MK7Gf1Ez8w" value="1"/>
                    </argument>
                    <argument xmi:id="_3lcygrSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lcPVbSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyg7SpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyhLSpEem4MK7Gf1Ez8w" value="1"/>
                    </argument>
                    <result xmi:id="_3lcyhbSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lcPerSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyhrSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyh7SpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcyiLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyibSpEem4MK7Gf1Ez8w" target="_3lcyjbSpEem4MK7Gf1Ez8w" source="_3lcyirSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcyirSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcObrSpEem4MK7Gf1Ez8w" outgoing="_3lcyibSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyi7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyjLSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcyjbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lcyibSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyjrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyj7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcykLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcykbSpEem4MK7Gf1Ez8w" target="_3lcylbSpEem4MK7Gf1Ez8w" source="_3lcykrSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcykrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd).input" incoming="_3lcOi7SpEem4MK7Gf1Ez8w" outgoing="_3lcykbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyk7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcylLSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcylbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd).output" incoming="_3lcykbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcylrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyl7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcymLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcymbSpEem4MK7Gf1Ez8w" target="_3lcynbSpEem4MK7Gf1Ez8w" source="_3lcymrSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcymrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).input" incoming="_3lcOb7SpEem4MK7Gf1Ez8w" outgoing="_3lcymbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcym7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcynLSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcynbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).output" incoming="_3lcymbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcynrSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyn7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcyoLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyobSpEem4MK7Gf1Ez8w" target="_3lcypbSpEem4MK7Gf1Ez8w" source="_3lcyorSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcyorSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).input" incoming="_3lcOcLSpEem4MK7Gf1Ez8w" outgoing="_3lcyobSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyo7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcypLSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcypbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).output" incoming="_3lcyobSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyprSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyp7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcyqLSpEem4MK7Gf1Ez8w" name="Value(true)">
              <result xmi:id="_3lcyqbSpEem4MK7Gf1Ez8w" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyqrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyq7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_3lcyrLSpEem4MK7Gf1Ez8w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcyrbSpEem4MK7Gf1Ez8w" name="ExpressionStatement@401c7914">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyrrSpEem4MK7Gf1Ez8w" target="_3lcysbSpEem4MK7Gf1Ez8w" source="_3lcy4bSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lcyr7SpEem4MK7Gf1Ez8w" target="_3lcysLSpEem4MK7Gf1Ez8w" source="_3lcytLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcysLSpEem4MK7Gf1Ez8w" name="Call(Write)" incoming="_3lcyr7SpEem4MK7Gf1Ez8w" behavior="_3lc2CLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lcysbSpEem4MK7Gf1Ez8w" name="Call(Write).argument(value)" incoming="_3lcyrrSpEem4MK7Gf1Ez8w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcysrSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcys7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcytLSpEem4MK7Gf1Ez8w" name="Tuple@5a3a5e0f" outgoing="_3lcyr7SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcytbSpEem4MK7Gf1Ez8w" target="_3lcyybSpEem4MK7Gf1Ez8w" source="_3lcywbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcytrSpEem4MK7Gf1Ez8w" target="_3lcyyLSpEem4MK7Gf1Ez8w" source="_3lcywLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyt7SpEem4MK7Gf1Ez8w" target="_3lcy1LSpEem4MK7Gf1Ez8w" source="_3lcywbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcyuLSpEem4MK7Gf1Ez8w" target="_3lcy4LSpEem4MK7Gf1Ez8w" source="_3lcy37SpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyubSpEem4MK7Gf1Ez8w" target="_3lcy4LSpEem4MK7Gf1Ez8w" source="_3lcyzLSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcyurSpEem4MK7Gf1Ez8w" target="_3lcyz7SpEem4MK7Gf1Ez8w" source="_3lcy4LSpEem4MK7Gf1Ez8w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcyu7SpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lcyvLSpEem4MK7Gf1Ez8w" target="_3lcy1bSpEem4MK7Gf1Ez8w" source="_3lcy4LSpEem4MK7Gf1Ez8w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lcyvbSpEem4MK7Gf1Ez8w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyvrSpEem4MK7Gf1Ez8w" target="_3lcy4bSpEem4MK7Gf1Ez8w" source="_3lcy0bSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcyv7SpEem4MK7Gf1Ez8w" target="_3lcy4bSpEem4MK7Gf1Ez8w" source="_3lcy17SpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcywLSpEem4MK7Gf1Ez8w" name="Operands(EqualityExpression@4f5c28cc)" outgoing="_3lcytrSpEem4MK7Gf1Ez8w">
                  <node xmi:type="uml:ForkNode" xmi:id="_3lcywbSpEem4MK7Gf1Ez8w" name="Fork('')@1a5633a1" incoming="_3lcOcbSpEem4MK7Gf1Ez8w" outgoing="_3lcytbSpEem4MK7Gf1Ez8w _3lcyt7SpEem4MK7Gf1Ez8w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcywrSpEem4MK7Gf1Ez8w" name="RightHandSide@63e7c422"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcyw7SpEem4MK7Gf1Ez8w" name="Value(null)">
                    <result xmi:id="_3lcyxLSpEem4MK7Gf1Ez8w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyxbSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyxrSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_3lcyx7SpEem4MK7Gf1Ez8w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcyyLSpEem4MK7Gf1Ez8w" name="Call(NotEmpty)" incoming="_3lcytrSpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lcyybSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lcytbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyyrSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyy7SpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <result xmi:id="_3lcyzLSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lcyubSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcyzbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcyzrSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcyz7SpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@208242ed.operand2" incoming="_3lcyurSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcy0LSpEem4MK7Gf1Ez8w" target="_3lcy0bSpEem4MK7Gf1Ez8w" source="_3lcy1LSpEem4MK7Gf1Ez8w"/>
                  <structuredNodeOutput xmi:id="_3lcy0bSpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@208242ed.operand2.result" incoming="_3lcy0LSpEem4MK7Gf1Ez8w" outgoing="_3lcyvrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy0rSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy07SpEem4MK7Gf1Ez8w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_3lcy1LSpEem4MK7Gf1Ez8w" name="Merge(Fork('')@1a5633a1)" incoming="_3lcyt7SpEem4MK7Gf1Ez8w" outgoing="_3lcy0LSpEem4MK7Gf1Ez8w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcy1bSpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@208242ed.operand3" incoming="_3lcyvLSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcy1rSpEem4MK7Gf1Ez8w" target="_3lcy17SpEem4MK7Gf1Ez8w" source="_3lcy27SpEem4MK7Gf1Ez8w"/>
                  <structuredNodeOutput xmi:id="_3lcy17SpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@208242ed.operand3.result" incoming="_3lcy1rSpEem4MK7Gf1Ez8w" outgoing="_3lcyv7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy2LSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy2bSpEem4MK7Gf1Ez8w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lcy2rSpEem4MK7Gf1Ez8w" name="Value(&quot;null&quot;)">
                    <result xmi:id="_3lcy27SpEem4MK7Gf1Ez8w" name="Value(&quot;null&quot;).result" outgoing="_3lcy1rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy3LSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy3bSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_3lcy3rSpEem4MK7Gf1Ez8w" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_3lcy37SpEem4MK7Gf1Ez8w" name="Initial(NullCoalescingExpression@208242ed)" outgoing="_3lcyuLSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_3lcy4LSpEem4MK7Gf1Ez8w" name="Decision(NullCoalescingExpression@208242ed)" incoming="_3lcyuLSpEem4MK7Gf1Ez8w _3lcyubSpEem4MK7Gf1Ez8w" outgoing="_3lcyurSpEem4MK7Gf1Ez8w _3lcyvLSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lcyubSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_3lcy4bSpEem4MK7Gf1Ez8w" name="Merge(NullCoalescingExpression@208242ed.result)" incoming="_3lcyvrSpEem4MK7Gf1Ez8w _3lcyv7SpEem4MK7Gf1Ez8w" outgoing="_3lcyrrSpEem4MK7Gf1Ez8w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcy4rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcy47SpEem4MK7Gf1Ez8w" target="_3lcy57SpEem4MK7Gf1Ez8w" source="_3lcy5LSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcy5LSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcOcrSpEem4MK7Gf1Ez8w" outgoing="_3lcy47SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy5bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy5rSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcy57SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lcy47SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy6LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy6bSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcy6rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcy67SpEem4MK7Gf1Ez8w" target="_3lcy77SpEem4MK7Gf1Ez8w" source="_3lcy7LSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcy7LSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd).input" incoming="_3lcOjLSpEem4MK7Gf1Ez8w" outgoing="_3lcy67SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy7bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy7rSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcy77SpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)@3be6f8dd).output" incoming="_3lcy67SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy8LSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy8bSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcy8rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcy87SpEem4MK7Gf1Ez8w" target="_3lcy97SpEem4MK7Gf1Ez8w" source="_3lcy9LSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcy9LSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).input" incoming="_3lcOc7SpEem4MK7Gf1Ez8w" outgoing="_3lcy87SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy9bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy9rSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcy97SpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).output" incoming="_3lcy87SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy-LSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy-bSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcy-rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcy-7SpEem4MK7Gf1Ez8w" target="_3lcy_7SpEem4MK7Gf1Ez8w" source="_3lcy_LSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcy_LSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).input" incoming="_3lcOdLSpEem4MK7Gf1Ez8w" outgoing="_3lcy-7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcy_bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcy_rSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lcy_7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).output" incoming="_3lcy-7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczALSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczAbSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_3lczArSpEem4MK7Gf1Ez8w" body="_3lcPSLSpEem4MK7Gf1Ez8w _3lcyiLSpEem4MK7Gf1Ez8w _3lcykLSpEem4MK7Gf1Ez8w _3lcymLSpEem4MK7Gf1Ez8w _3lcyoLSpEem4MK7Gf1Ez8w" bodyOutput="_3lcyjbSpEem4MK7Gf1Ez8w _3lcylbSpEem4MK7Gf1Ez8w _3lcynbSpEem4MK7Gf1Ez8w _3lcypbSpEem4MK7Gf1Ez8w" decider="_3lcPRbSpEem4MK7Gf1Ez8w" successorClause="_3lczA7SpEem4MK7Gf1Ez8w" test="_3lcPObSpEem4MK7Gf1Ez8w"/>
            <clause xmi:id="_3lczA7SpEem4MK7Gf1Ez8w" body="_3lcyrbSpEem4MK7Gf1Ez8w _3lcy4rSpEem4MK7Gf1Ez8w _3lcy6rSpEem4MK7Gf1Ez8w _3lcy8rSpEem4MK7Gf1Ez8w _3lcy-rSpEem4MK7Gf1Ez8w" bodyOutput="_3lcy57SpEem4MK7Gf1Ez8w _3lcy77SpEem4MK7Gf1Ez8w _3lcy97SpEem4MK7Gf1Ez8w _3lcy_7SpEem4MK7Gf1Ez8w" decider="_3lcyqbSpEem4MK7Gf1Ez8w" predecessorClause="_3lczArSpEem4MK7Gf1Ez8w" test="_3lcyqLSpEem4MK7Gf1Ez8w"/>
            <result xmi:id="_3lczBLSpEem4MK7Gf1Ez8w" name="IfStatement@1fee34f3.result(label)" outgoing="_3lcOhbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczBbSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczBrSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <result xmi:id="_3lczB7SpEem4MK7Gf1Ez8w" name="IfStatement@1fee34f3.result(s)" outgoing="_3lcOhrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczCLSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczCbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <result xmi:id="_3lczCrSpEem4MK7Gf1Ez8w" name="IfStatement@1fee34f3.result(value2)" outgoing="_3lcOh7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczC7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczDLSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <result xmi:id="_3lczDbSpEem4MK7Gf1Ez8w" name="IfStatement@1fee34f3.result(value1)" outgoing="_3lcOiLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczDrSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczD7SpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3lczELSpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lcOhbSpEem4MK7Gf1Ez8w" outgoing="_3lcOj7SpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_3lczEbSpEem4MK7Gf1Ez8w" name="Fork(s)" incoming="_3lcOhrSpEem4MK7Gf1Ez8w" outgoing="_3lcOkLSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_3lczErSpEem4MK7Gf1Ez8w" name="Fork(value2)" incoming="_3lcOh7SpEem4MK7Gf1Ez8w" outgoing="_3lcOkbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_3lczE7SpEem4MK7Gf1Ez8w" name="Fork(value1)" incoming="_3lcOiLSpEem4MK7Gf1Ez8w" outgoing="_3lcOkrSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczFLSpEem4MK7Gf1Ez8w" name="ExpressionStatement@2155ea92" incoming="_3lcOjrSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczFbSpEem4MK7Gf1Ez8w" target="_3lczGLSpEem4MK7Gf1Ez8w" source="_3lczILSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lczFrSpEem4MK7Gf1Ez8w" target="_3lczF7SpEem4MK7Gf1Ez8w" source="_3lczHrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lczF7SpEem4MK7Gf1Ez8w" name="Call(WriteLine)" incoming="_3lczFrSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lczGLSpEem4MK7Gf1Ez8w" name="Call(WriteLine).argument(value)" incoming="_3lczFbSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczGbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczGrSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lczG7SpEem4MK7Gf1Ez8w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczHLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczHbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczHrSpEem4MK7Gf1Ez8w" name="Tuple@65369abc" outgoing="_3lczFrSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lczH7SpEem4MK7Gf1Ez8w" name="Value(&quot;&quot;)">
                <result xmi:id="_3lczILSpEem4MK7Gf1Ez8w" name="Value(&quot;&quot;).result" outgoing="_3lczFbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczIbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczIrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3lczI7SpEem4MK7Gf1Ez8w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczJLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczJbSpEem4MK7Gf1Ez8w" target="_3lczKbSpEem4MK7Gf1Ez8w" source="_3lczJrSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczJrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcOj7SpEem4MK7Gf1Ez8w" outgoing="_3lczJbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczJ7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczKLSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczKbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lczJbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczKrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczK7SpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczLLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczLbSpEem4MK7Gf1Ez8w" target="_3lczMbSpEem4MK7Gf1Ez8w" source="_3lczLrSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczLrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)).input" incoming="_3lcOkLSpEem4MK7Gf1Ez8w" outgoing="_3lczLbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczL7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczMLSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczMbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(s)).output" incoming="_3lczLbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczMrSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczM7SpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczNLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczNbSpEem4MK7Gf1Ez8w" target="_3lczObSpEem4MK7Gf1Ez8w" source="_3lczNrSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczNrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).input" incoming="_3lcOkbSpEem4MK7Gf1Ez8w" outgoing="_3lczNbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczN7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczOLSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczObSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).output" incoming="_3lczNbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczOrSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczO7SpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczPLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczPbSpEem4MK7Gf1Ez8w" target="_3lczQbSpEem4MK7Gf1Ez8w" source="_3lczPrSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczPrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).input" incoming="_3lcOkrSpEem4MK7Gf1Ez8w" outgoing="_3lczPbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczP7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczQLSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczQbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).output" incoming="_3lczPbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczQrSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczQ7SpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lczRLSpEem4MK7Gf1Ez8w" name="Value(true)">
            <result xmi:id="_3lczRbSpEem4MK7Gf1Ez8w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczRrSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczR7SpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_3lczSLSpEem4MK7Gf1Ez8w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczSbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczSrSpEem4MK7Gf1Ez8w" target="_3lczTrSpEem4MK7Gf1Ez8w" source="_3lczS7SpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczS7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcOdbSpEem4MK7Gf1Ez8w" outgoing="_3lczSrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczTLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczTbSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczTrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lczSrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczT7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczULSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lczUbSpEem4MK7Gf1Ez8w" name="Value(null)">
            <result xmi:id="_3lczUrSpEem4MK7Gf1Ez8w" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczU7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczVLSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_3lczVbSpEem4MK7Gf1Ez8w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczVrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczV7SpEem4MK7Gf1Ez8w" target="_3lczW7SpEem4MK7Gf1Ez8w" source="_3lczWLSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczWLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).input" incoming="_3lcOdrSpEem4MK7Gf1Ez8w" outgoing="_3lczV7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczWbSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczWrSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczW7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(value2)).output" incoming="_3lczV7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczXLSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczXbSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczXrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczX7SpEem4MK7Gf1Ez8w" target="_3lczY7SpEem4MK7Gf1Ez8w" source="_3lczYLSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lczYLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).input" incoming="_3lcOd7SpEem4MK7Gf1Ez8w" outgoing="_3lczX7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczYbSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczYrSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lczY7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(value1)).output" incoming="_3lczX7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczZLSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczZbSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_3lczZrSpEem4MK7Gf1Ez8w" body="_3lcO4LSpEem4MK7Gf1Ez8w _3lcPILSpEem4MK7Gf1Ez8w _3lcPOLSpEem4MK7Gf1Ez8w _3lczFLSpEem4MK7Gf1Ez8w _3lczJLSpEem4MK7Gf1Ez8w _3lczLLSpEem4MK7Gf1Ez8w _3lczNLSpEem4MK7Gf1Ez8w _3lczPLSpEem4MK7Gf1Ez8w" bodyOutput="_3lczKbSpEem4MK7Gf1Ez8w _3lczMbSpEem4MK7Gf1Ez8w _3lczObSpEem4MK7Gf1Ez8w _3lczQbSpEem4MK7Gf1Ez8w" decider="_3lcO3bSpEem4MK7Gf1Ez8w" successorClause="_3lczZ7SpEem4MK7Gf1Ez8w" test="_3lcOk7SpEem4MK7Gf1Ez8w"/>
          <clause xmi:id="_3lczZ7SpEem4MK7Gf1Ez8w" body="_3lczSbSpEem4MK7Gf1Ez8w _3lczUbSpEem4MK7Gf1Ez8w _3lczVrSpEem4MK7Gf1Ez8w _3lczXrSpEem4MK7Gf1Ez8w" bodyOutput="_3lczTrSpEem4MK7Gf1Ez8w _3lczUrSpEem4MK7Gf1Ez8w _3lczW7SpEem4MK7Gf1Ez8w _3lczY7SpEem4MK7Gf1Ez8w" decider="_3lczRbSpEem4MK7Gf1Ez8w" predecessorClause="_3lczZrSpEem4MK7Gf1Ez8w" test="_3lczRLSpEem4MK7Gf1Ez8w"/>
          <result xmi:id="_3lczaLSpEem4MK7Gf1Ez8w" name="IfStatement@1df5e38e.result(label)" outgoing="_3lcOf7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczabSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczarSpEem4MK7Gf1Ez8w" value="1"/>
          </result>
          <result xmi:id="_3lcza7SpEem4MK7Gf1Ez8w" name="IfStatement@1df5e38e.result(s)" outgoing="_3lcOgLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczbLSpEem4MK7Gf1Ez8w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczbbSpEem4MK7Gf1Ez8w" value="1"/>
          </result>
          <result xmi:id="_3lczbrSpEem4MK7Gf1Ez8w" name="IfStatement@1df5e38e.result(value2)" outgoing="_3lcOgbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczb7SpEem4MK7Gf1Ez8w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczcLSpEem4MK7Gf1Ez8w" value="1"/>
          </result>
          <result xmi:id="_3lczcbSpEem4MK7Gf1Ez8w" name="IfStatement@1df5e38e.result(value1)" outgoing="_3lcOgrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczcrSpEem4MK7Gf1Ez8w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczc7SpEem4MK7Gf1Ez8w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_3lczdLSpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lcOf7SpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3lczdbSpEem4MK7Gf1Ez8w" name="Fork(s)" incoming="_3lcOgLSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3lczdrSpEem4MK7Gf1Ez8w" name="Fork(value2)" incoming="_3lcOgbSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3lczd7SpEem4MK7Gf1Ez8w" name="Fork(value1)" incoming="_3lcOgrSpEem4MK7Gf1Ez8w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcOeLSpEem4MK7Gf1Ez8w" name="Input(label)" outgoing="_3lcOZ7SpEem4MK7Gf1Ez8w" parameter="_3lcOXrSpEem4MK7Gf1Ez8w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3lcOebSpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lcOZ7SpEem4MK7Gf1Ez8w" outgoing="_3lcObLSpEem4MK7Gf1Ez8w _3lcObrSpEem4MK7Gf1Ez8w _3lcOcrSpEem4MK7Gf1Ez8w _3lcOdbSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcOerSpEem4MK7Gf1Ez8w" name="Input(value1)" outgoing="_3lcOaLSpEem4MK7Gf1Ez8w" parameter="_3lcOYbSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3lcOe7SpEem4MK7Gf1Ez8w" name="Fork(value1)" incoming="_3lcOaLSpEem4MK7Gf1Ez8w" outgoing="_3lcOarSpEem4MK7Gf1Ez8w _3lcOcLSpEem4MK7Gf1Ez8w _3lcOdLSpEem4MK7Gf1Ez8w _3lcOd7SpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lcOfLSpEem4MK7Gf1Ez8w" name="Input(value2)" outgoing="_3lcOabSpEem4MK7Gf1Ez8w" parameter="_3lcOZLSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3lcOfbSpEem4MK7Gf1Ez8w" name="Fork(value2)" incoming="_3lcOabSpEem4MK7Gf1Ez8w" outgoing="_3lcOa7SpEem4MK7Gf1Ez8w _3lcObbSpEem4MK7Gf1Ez8w _3lcOb7SpEem4MK7Gf1Ez8w _3lcOcbSpEem4MK7Gf1Ez8w _3lcOc7SpEem4MK7Gf1Ez8w _3lcOdrSpEem4MK7Gf1Ez8w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3lczeLSpEem4MK7Gf1Ez8w" name="AssertList" visibility="public" node="_3lczkrSpEem4MK7Gf1Ez8w _3lczk7SpEem4MK7Gf1Ez8w _3lczlLSpEem4MK7Gf1Ez8w _3lczlbSpEem4MK7Gf1Ez8w _3lczlrSpEem4MK7Gf1Ez8w _3lczl7SpEem4MK7Gf1Ez8w _3lczmLSpEem4MK7Gf1Ez8w" group="_3lczmLSpEem4MK7Gf1Ez8w">
      <packageImport xmi:id="_3lczebSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lczerSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lcze7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lczfLSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lczfbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3lczfrSpEem4MK7Gf1Ez8w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczf7SpEem4MK7Gf1Ez8w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczgLSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3lczgbSpEem4MK7Gf1Ez8w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczgrSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczg7SpEem4MK7Gf1Ez8w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3lczhLSpEem4MK7Gf1Ez8w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczhbSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczhrSpEem4MK7Gf1Ez8w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczh7SpEem4MK7Gf1Ez8w" target="_3lczk7SpEem4MK7Gf1Ez8w" source="_3lczkrSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcziLSpEem4MK7Gf1Ez8w" target="_3lczlbSpEem4MK7Gf1Ez8w" source="_3lczlLSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczibSpEem4MK7Gf1Ez8w" target="_3lczl7SpEem4MK7Gf1Ez8w" source="_3lczlrSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczirSpEem4MK7Gf1Ez8w" target="_3lcztbSpEem4MK7Gf1Ez8w" source="_3lczk7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczi7SpEem4MK7Gf1Ez8w" target="_3lcz0LSpEem4MK7Gf1Ez8w" source="_3lczlbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczjLSpEem4MK7Gf1Ez8w" target="_3lcz3LSpEem4MK7Gf1Ez8w" source="_3lczl7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczjbSpEem4MK7Gf1Ez8w" target="_3lc07bSpEem4MK7Gf1Ez8w" source="_3lczk7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczjrSpEem4MK7Gf1Ez8w" target="_3lc08LSpEem4MK7Gf1Ez8w" source="_3lczlbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczj7SpEem4MK7Gf1Ez8w" target="_3lc087SpEem4MK7Gf1Ez8w" source="_3lczl7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczkLSpEem4MK7Gf1Ez8w" target="_3lc1JrSpEem4MK7Gf1Ez8w" source="_3lczlbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczkbSpEem4MK7Gf1Ez8w" target="_3lc1MrSpEem4MK7Gf1Ez8w" source="_3lczl7SpEem4MK7Gf1Ez8w"/>
      <structuredNode xmi:id="_3lczmLSpEem4MK7Gf1Ez8w" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_3lczmbSpEem4MK7Gf1Ez8w" target="_3lcz4rSpEem4MK7Gf1Ez8w" source="_3lczmrSpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczmrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@2e72f32a" outgoing="_3lczmbSpEem4MK7Gf1Ez8w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczm7SpEem4MK7Gf1Ez8w" target="_3lczoLSpEem4MK7Gf1Ez8w" source="_3lczvbSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcznLSpEem4MK7Gf1Ez8w" target="_3lczo7SpEem4MK7Gf1Ez8w" source="_3lczzLSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcznbSpEem4MK7Gf1Ez8w" target="_3lczprSpEem4MK7Gf1Ez8w" source="_3lcz2LSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcznrSpEem4MK7Gf1Ez8w" target="_3lczn7SpEem4MK7Gf1Ez8w" source="_3lczqbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lczn7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual)" incoming="_3lcznrSpEem4MK7Gf1Ez8w" behavior="_3lcOWLSpEem4MK7Gf1Ez8w">
            <argument xmi:id="_3lczoLSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(label)" incoming="_3lczm7SpEem4MK7Gf1Ez8w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczobSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczorSpEem4MK7Gf1Ez8w" value="1"/>
            </argument>
            <argument xmi:id="_3lczo7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value1)" incoming="_3lcznLSpEem4MK7Gf1Ez8w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczpLSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczpbSpEem4MK7Gf1Ez8w" value="1"/>
            </argument>
            <argument xmi:id="_3lczprSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value2)" incoming="_3lcznbSpEem4MK7Gf1Ez8w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczp7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczqLSpEem4MK7Gf1Ez8w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczqbSpEem4MK7Gf1Ez8w" name="Tuple@3fb371d0" outgoing="_3lcznrSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczqrSpEem4MK7Gf1Ez8w" target="_3lczwbSpEem4MK7Gf1Ez8w" source="_3lczuLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczq7SpEem4MK7Gf1Ez8w" target="_3lczxLSpEem4MK7Gf1Ez8w" source="_3lczr7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lczrLSpEem4MK7Gf1Ez8w" target="_3lczu7SpEem4MK7Gf1Ez8w" source="_3lczs7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lczrbSpEem4MK7Gf1Ez8w" target="_3lczu7SpEem4MK7Gf1Ez8w" source="_3lczrrSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lczrrSpEem4MK7Gf1Ez8w" name="Value(&quot;->size()&quot;)" outgoing="_3lczrbSpEem4MK7Gf1Ez8w">
              <result xmi:id="_3lczr7SpEem4MK7Gf1Ez8w" name="Value(&quot;->size()&quot;).result" outgoing="_3lczq7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczsLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczsbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3lczsrSpEem4MK7Gf1Ez8w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczs7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))" outgoing="_3lczrLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcztLSpEem4MK7Gf1Ez8w" target="_3lczuLSpEem4MK7Gf1Ez8w" source="_3lcztbSpEem4MK7Gf1Ez8w"/>
              <structuredNodeInput xmi:id="_3lcztbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lczirSpEem4MK7Gf1Ez8w" outgoing="_3lcztLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcztrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczt7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3lczuLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lcztLSpEem4MK7Gf1Ez8w" outgoing="_3lczqrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczubSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczurSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczu7SpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lczrLSpEem4MK7Gf1Ez8w _3lczrbSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczvLSpEem4MK7Gf1Ez8w" target="_3lczvbSpEem4MK7Gf1Ez8w" source="_3lczx7SpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lczvbSpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lczvLSpEem4MK7Gf1Ez8w" outgoing="_3lczm7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczvrSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczv7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lczwLSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                <argument xmi:id="_3lczwbSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lczqrSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczwrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczw7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lczxLSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lczq7SpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczxbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczxrSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lczx7SpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lczvLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczyLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczybSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lczyrSpEem4MK7Gf1Ez8w" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lczy7SpEem4MK7Gf1Ez8w" target="_3lczzLSpEem4MK7Gf1Ez8w" source="_3lcz07SpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lczzLSpEem4MK7Gf1Ez8w" name="Output(Call(Size).result())" incoming="_3lczy7SpEem4MK7Gf1Ez8w" outgoing="_3lcznLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lczzbSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lczzrSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lczz7SpEem4MK7Gf1Ez8w" name="Call(Size)">
                <argument xmi:id="_3lcz0LSpEem4MK7Gf1Ez8w" name="Call(Size).argument(seq)" incoming="_3lczi7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcz0bSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcz0rSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <result xmi:id="_3lcz07SpEem4MK7Gf1Ez8w" name="Call(Size).result()" outgoing="_3lczy7SpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcz1LSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcz1bSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcz1rSpEem4MK7Gf1Ez8w" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz17SpEem4MK7Gf1Ez8w" target="_3lcz2LSpEem4MK7Gf1Ez8w" source="_3lcz37SpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lcz2LSpEem4MK7Gf1Ez8w" name="Output(Call(Size).result())" incoming="_3lcz17SpEem4MK7Gf1Ez8w" outgoing="_3lcznbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcz2bSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcz2rSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lcz27SpEem4MK7Gf1Ez8w" name="Call(Size)">
                <argument xmi:id="_3lcz3LSpEem4MK7Gf1Ez8w" name="Call(Size).argument(seq)" incoming="_3lczjLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcz3bSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcz3rSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <result xmi:id="_3lcz37SpEem4MK7Gf1Ez8w" name="Call(Size).result()" outgoing="_3lcz17SpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lcz4LSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lcz4bSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lcz4rSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72" incoming="_3lczmbSpEem4MK7Gf1Ez8w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz47SpEem4MK7Gf1Ez8w" target="_3lc1R7SpEem4MK7Gf1Ez8w" source="_3lc1G7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz5LSpEem4MK7Gf1Ez8w" target="_3lc0-bSpEem4MK7Gf1Ez8w" source="_3lc1YrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz5bSpEem4MK7Gf1Ez8w" target="_3lc0_LSpEem4MK7Gf1Ez8w" source="_3lc1XrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz5rSpEem4MK7Gf1Ez8w" target="_3lc09rSpEem4MK7Gf1Ez8w" source="_3lc1R7SpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lcz57SpEem4MK7Gf1Ez8w" target="_3lcz6LSpEem4MK7Gf1Ez8w" source="_3lc1EbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:LoopNode" xmi:id="_3lcz6LSpEem4MK7Gf1Ez8w" name="Loop(ForStatement@47843c72)" incoming="_3lcz57SpEem4MK7Gf1Ez8w" bodyOutput="_3lc0FbSpEem4MK7Gf1Ez8w _3lc0GLSpEem4MK7Gf1Ez8w _3lc0G7SpEem4MK7Gf1Ez8w _3lc007SpEem4MK7Gf1Ez8w _3lc0vLSpEem4MK7Gf1Ez8w _3lc0ybSpEem4MK7Gf1Ez8w" bodyPart="_3lc0D7SpEem4MK7Gf1Ez8w _3lc0ELSpEem4MK7Gf1Ez8w _3lc0zLSpEem4MK7Gf1Ez8w _3lc01rSpEem4MK7Gf1Ez8w" decider="_3lc0DLSpEem4MK7Gf1Ez8w" isTestedFirst="true" test="_3lc0BbSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz6bSpEem4MK7Gf1Ez8w" target="_3lcz_7SpEem4MK7Gf1Ez8w" source="_3lc027SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz6rSpEem4MK7Gf1Ez8w" target="_3lc0ALSpEem4MK7Gf1Ez8w" source="_3lc03rSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz67SpEem4MK7Gf1Ez8w" target="_3lc0AbSpEem4MK7Gf1Ez8w" source="_3lc04bSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz7LSpEem4MK7Gf1Ez8w" target="_3lc0ArSpEem4MK7Gf1Ez8w" source="_3lc05LSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz7bSpEem4MK7Gf1Ez8w" target="_3lc0A7SpEem4MK7Gf1Ez8w" source="_3lc057SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz7rSpEem4MK7Gf1Ez8w" target="_3lc0BLSpEem4MK7Gf1Ez8w" source="_3lc06rSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz77SpEem4MK7Gf1Ez8w" target="_3lc0BrSpEem4MK7Gf1Ez8w" source="_3lc0A7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz8LSpEem4MK7Gf1Ez8w" target="_3lc0CbSpEem4MK7Gf1Ez8w" source="_3lc0BLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lcz8bSpEem4MK7Gf1Ez8w" target="_3lc0ELSpEem4MK7Gf1Ez8w" source="_3lc0D7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz8rSpEem4MK7Gf1Ez8w" target="_3lc0XrSpEem4MK7Gf1Ez8w" source="_3lc0ArSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz87SpEem4MK7Gf1Ez8w" target="_3lc0kbSpEem4MK7Gf1Ez8w" source="_3lc0ArSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz9LSpEem4MK7Gf1Ez8w" target="_3lc0nLSpEem4MK7Gf1Ez8w" source="_3lc0ArSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz9bSpEem4MK7Gf1Ez8w" target="_3lc0zbSpEem4MK7Gf1Ez8w" source="_3lc0ArSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz9rSpEem4MK7Gf1Ez8w" target="_3lc00LSpEem4MK7Gf1Ez8w" source="_3lc017SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz97SpEem4MK7Gf1Ez8w" target="_3lc0trSpEem4MK7Gf1Ez8w" source="_3lc0A7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz-LSpEem4MK7Gf1Ez8w" target="_3lc0xrSpEem4MK7Gf1Ez8w" source="_3lc0BLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz-bSpEem4MK7Gf1Ez8w" target="_3lc0Q7SpEem4MK7Gf1Ez8w" source="_3lcz_7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz-rSpEem4MK7Gf1Ez8w" target="_3lc0iLSpEem4MK7Gf1Ez8w" source="_3lc0ALSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz-7SpEem4MK7Gf1Ez8w" target="_3lc0k7SpEem4MK7Gf1Ez8w" source="_3lc0AbSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz_LSpEem4MK7Gf1Ez8w" target="_3lc0n7SpEem4MK7Gf1Ez8w" source="_3lcz_7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz_bSpEem4MK7Gf1Ez8w" target="_3lc0p7SpEem4MK7Gf1Ez8w" source="_3lc0ALSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lcz_rSpEem4MK7Gf1Ez8w" target="_3lc0r7SpEem4MK7Gf1Ez8w" source="_3lc0AbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lcz_7SpEem4MK7Gf1Ez8w" name="Fork(ForStatement@47843c72.loopVariable(label))" incoming="_3lcz6bSpEem4MK7Gf1Ez8w" outgoing="_3lcz-bSpEem4MK7Gf1Ez8w _3lcz_LSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc0ALSpEem4MK7Gf1Ez8w" name="Fork(ForStatement@47843c72.loopVariable(list))" incoming="_3lcz6rSpEem4MK7Gf1Ez8w" outgoing="_3lcz-rSpEem4MK7Gf1Ez8w _3lcz_bSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc0AbSpEem4MK7Gf1Ez8w" name="Fork(ForStatement@47843c72.loopVariable(expected))" incoming="_3lcz67SpEem4MK7Gf1Ez8w" outgoing="_3lcz-7SpEem4MK7Gf1Ez8w _3lcz_rSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc0ArSpEem4MK7Gf1Ez8w" name="Fork(ForStatement@47843c72.loopVariable(i))" incoming="_3lcz7LSpEem4MK7Gf1Ez8w" outgoing="_3lcz8rSpEem4MK7Gf1Ez8w _3lcz87SpEem4MK7Gf1Ez8w _3lcz9LSpEem4MK7Gf1Ez8w _3lcz9bSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc0A7SpEem4MK7Gf1Ez8w" name="Fork(ForStatement@47843c72.loopVariable(counter))" incoming="_3lcz7bSpEem4MK7Gf1Ez8w" outgoing="_3lcz77SpEem4MK7Gf1Ez8w _3lcz97SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc0BLSpEem4MK7Gf1Ez8w" name="Fork(ForStatement@47843c72.loopVariable(upper))" incoming="_3lcz7rSpEem4MK7Gf1Ez8w" outgoing="_3lcz8LSpEem4MK7Gf1Ez8w _3lcz-LSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0BbSpEem4MK7Gf1Ez8w" name="Call(&lt;=)">
              <argument xmi:id="_3lc0BrSpEem4MK7Gf1Ez8w" name="Call(&lt;=).argument(x)" incoming="_3lcz77SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0B7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0CLSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <argument xmi:id="_3lc0CbSpEem4MK7Gf1Ez8w" name="Call(&lt;=).argument(y)" incoming="_3lcz8LSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0CrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0C7SpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc0DLSpEem4MK7Gf1Ez8w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0DbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0DrSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0D7SpEem4MK7Gf1Ez8w" name="Values(ForStatement@47843c72)" outgoing="_3lcz8bSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0ELSpEem4MK7Gf1Ez8w" name="Body(ForStatement@47843c72)" incoming="_3lcz8bSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0EbSpEem4MK7Gf1Ez8w" target="_3lc0FbSpEem4MK7Gf1Ez8w" source="_3lc0orSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0ErSpEem4MK7Gf1Ez8w" target="_3lc0GLSpEem4MK7Gf1Ez8w" source="_3lc0qrSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0E7SpEem4MK7Gf1Ez8w" target="_3lc0G7SpEem4MK7Gf1Ez8w" source="_3lc0srSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0FLSpEem4MK7Gf1Ez8w" target="_3lc0ubSpEem4MK7Gf1Ez8w" source="_3lc0wLSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lc0FbSpEem4MK7Gf1Ez8w" name="label" incoming="_3lc0EbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0FrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0F7SpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_3lc0GLSpEem4MK7Gf1Ez8w" name="list" incoming="_3lc0ErSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0GbSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0GrSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_3lc0G7SpEem4MK7Gf1Ez8w" name="expected" incoming="_3lc0E7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0HLSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0HbSpEem4MK7Gf1Ez8w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0HrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@8561ac8">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0H7SpEem4MK7Gf1Ez8w" target="_3lc0JLSpEem4MK7Gf1Ez8w" source="_3lc0erSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0ILSpEem4MK7Gf1Ez8w" target="_3lc0J7SpEem4MK7Gf1Ez8w" source="_3lc0jrSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0IbSpEem4MK7Gf1Ez8w" target="_3lc0KrSpEem4MK7Gf1Ez8w" source="_3lc0mbSpEem4MK7Gf1Ez8w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0IrSpEem4MK7Gf1Ez8w" target="_3lc0I7SpEem4MK7Gf1Ez8w" source="_3lc0LbSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0I7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual)" incoming="_3lc0IrSpEem4MK7Gf1Ez8w" behavior="_3lcOWLSpEem4MK7Gf1Ez8w">
                  <argument xmi:id="_3lc0JLSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(label)" incoming="_3lc0H7SpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0JbSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0JrSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <argument xmi:id="_3lc0J7SpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value1)" incoming="_3lc0ILSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0KLSpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0KbSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <argument xmi:id="_3lc0KrSpEem4MK7Gf1Ez8w" name="Call(AssertEqual).argument(value2)" incoming="_3lc0IbSpEem4MK7Gf1Ez8w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0K7SpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0LLSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0LbSpEem4MK7Gf1Ez8w" name="Tuple@ca7776c" outgoing="_3lc0IrSpEem4MK7Gf1Ez8w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0LrSpEem4MK7Gf1Ez8w" target="_3lc0T7SpEem4MK7Gf1Ez8w" source="_3lc0RrSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0L7SpEem4MK7Gf1Ez8w" target="_3lc0UrSpEem4MK7Gf1Ez8w" source="_3lc0PbSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0MLSpEem4MK7Gf1Ez8w" target="_3lc0SbSpEem4MK7Gf1Ez8w" source="_3lc0QbSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0MbSpEem4MK7Gf1Ez8w" target="_3lc0SbSpEem4MK7Gf1Ez8w" source="_3lc0PLSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0MrSpEem4MK7Gf1Ez8w" target="_3lc0arSpEem4MK7Gf1Ez8w" source="_3lc0S7SpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0M7SpEem4MK7Gf1Ez8w" target="_3lc0bbSpEem4MK7Gf1Ez8w" source="_3lc0WrSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0NLSpEem4MK7Gf1Ez8w" target="_3lc0ZLSpEem4MK7Gf1Ez8w" source="_3lc0SbSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0NbSpEem4MK7Gf1Ez8w" target="_3lc0ZLSpEem4MK7Gf1Ez8w" source="_3lc0WLSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0NrSpEem4MK7Gf1Ez8w" target="_3lc0frSpEem4MK7Gf1Ez8w" source="_3lc0ZrSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0N7SpEem4MK7Gf1Ez8w" target="_3lc0gbSpEem4MK7Gf1Ez8w" source="_3lc0dLSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0OLSpEem4MK7Gf1Ez8w" target="_3lc0eLSpEem4MK7Gf1Ez8w" source="_3lc0ZLSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_3lc0ObSpEem4MK7Gf1Ez8w" target="_3lc0eLSpEem4MK7Gf1Ez8w" source="_3lc0c7SpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0OrSpEem4MK7Gf1Ez8w" target="_3lc0i7SpEem4MK7Gf1Ez8w" source="_3lc0kbSpEem4MK7Gf1Ez8w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0O7SpEem4MK7Gf1Ez8w" target="_3lc0lrSpEem4MK7Gf1Ez8w" source="_3lc0nLSpEem4MK7Gf1Ez8w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc0PLSpEem4MK7Gf1Ez8w" name="Value(&quot;[&quot;)" outgoing="_3lc0MbSpEem4MK7Gf1Ez8w">
                    <result xmi:id="_3lc0PbSpEem4MK7Gf1Ez8w" name="Value(&quot;[&quot;).result" outgoing="_3lc0L7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0PrSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0P7SpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_3lc0QLSpEem4MK7Gf1Ez8w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0QbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))" outgoing="_3lc0MLSpEem4MK7Gf1Ez8w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0QrSpEem4MK7Gf1Ez8w" target="_3lc0RrSpEem4MK7Gf1Ez8w" source="_3lc0Q7SpEem4MK7Gf1Ez8w"/>
                    <structuredNodeInput xmi:id="_3lc0Q7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcz-bSpEem4MK7Gf1Ez8w" outgoing="_3lc0QrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0RLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0RbSpEem4MK7Gf1Ez8w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_3lc0RrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lc0QrSpEem4MK7Gf1Ez8w" outgoing="_3lc0LrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0R7SpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0SLSpEem4MK7Gf1Ez8w" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0SbSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lc0MLSpEem4MK7Gf1Ez8w _3lc0MbSpEem4MK7Gf1Ez8w" outgoing="_3lc0NLSpEem4MK7Gf1Ez8w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0SrSpEem4MK7Gf1Ez8w" target="_3lc0S7SpEem4MK7Gf1Ez8w" source="_3lc0VbSpEem4MK7Gf1Ez8w"/>
                    <structuredNodeOutput xmi:id="_3lc0S7SpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lc0SrSpEem4MK7Gf1Ez8w" outgoing="_3lc0MrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0TLSpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0TbSpEem4MK7Gf1Ez8w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0TrSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                      <argument xmi:id="_3lc0T7SpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lc0LrSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0ULSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0UbSpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <argument xmi:id="_3lc0UrSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lc0L7SpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0U7SpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0VLSpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <result xmi:id="_3lc0VbSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lc0SrSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0VrSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0V7SpEem4MK7Gf1Ez8w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0WLSpEem4MK7Gf1Ez8w" name="Node(Call(ToString))" outgoing="_3lc0NbSpEem4MK7Gf1Ez8w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0WbSpEem4MK7Gf1Ez8w" target="_3lc0WrSpEem4MK7Gf1Ez8w" source="_3lc0YbSpEem4MK7Gf1Ez8w"/>
                    <structuredNodeOutput xmi:id="_3lc0WrSpEem4MK7Gf1Ez8w" name="Output(Call(ToString).result(result))" incoming="_3lc0WbSpEem4MK7Gf1Ez8w" outgoing="_3lc0M7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0W7SpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0XLSpEem4MK7Gf1Ez8w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0XbSpEem4MK7Gf1Ez8w" name="Call(ToString)">
                      <argument xmi:id="_3lc0XrSpEem4MK7Gf1Ez8w" name="Call(ToString).argument(x)" incoming="_3lcz8rSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0X7SpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0YLSpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <result xmi:id="_3lc0YbSpEem4MK7Gf1Ez8w" name="Call(ToString).result(result)" outgoing="_3lc0WbSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0YrSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0Y7SpEem4MK7Gf1Ez8w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0ZLSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lc0NLSpEem4MK7Gf1Ez8w _3lc0NbSpEem4MK7Gf1Ez8w" outgoing="_3lc0OLSpEem4MK7Gf1Ez8w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0ZbSpEem4MK7Gf1Ez8w" target="_3lc0ZrSpEem4MK7Gf1Ez8w" source="_3lc0cLSpEem4MK7Gf1Ez8w"/>
                    <structuredNodeOutput xmi:id="_3lc0ZrSpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lc0ZbSpEem4MK7Gf1Ez8w" outgoing="_3lc0NrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0Z7SpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0aLSpEem4MK7Gf1Ez8w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0abSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                      <argument xmi:id="_3lc0arSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lc0MrSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0a7SpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0bLSpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <argument xmi:id="_3lc0bbSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lc0M7SpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0brSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0b7SpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <result xmi:id="_3lc0cLSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lc0ZbSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0cbSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0crSpEem4MK7Gf1Ez8w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc0c7SpEem4MK7Gf1Ez8w" name="Value(&quot;]&quot;)" outgoing="_3lc0ObSpEem4MK7Gf1Ez8w">
                    <result xmi:id="_3lc0dLSpEem4MK7Gf1Ez8w" name="Value(&quot;]&quot;).result" outgoing="_3lc0N7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0dbSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0drSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_3lc0d7SpEem4MK7Gf1Ez8w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0eLSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lc0OLSpEem4MK7Gf1Ez8w _3lc0ObSpEem4MK7Gf1Ez8w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0ebSpEem4MK7Gf1Ez8w" target="_3lc0erSpEem4MK7Gf1Ez8w" source="_3lc0hLSpEem4MK7Gf1Ez8w"/>
                    <structuredNodeOutput xmi:id="_3lc0erSpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lc0ebSpEem4MK7Gf1Ez8w" outgoing="_3lc0H7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0e7SpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0fLSpEem4MK7Gf1Ez8w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0fbSpEem4MK7Gf1Ez8w" name="Call(Concat)">
                      <argument xmi:id="_3lc0frSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lc0NrSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0f7SpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0gLSpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <argument xmi:id="_3lc0gbSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lc0N7SpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0grSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0g7SpEem4MK7Gf1Ez8w" value="1"/>
                      </argument>
                      <result xmi:id="_3lc0hLSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lc0ebSpEem4MK7Gf1Ez8w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0hbSpEem4MK7Gf1Ez8w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0hrSpEem4MK7Gf1Ez8w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0h7SpEem4MK7Gf1Ez8w" name="Call(At)">
                    <argument xmi:id="_3lc0iLSpEem4MK7Gf1Ez8w" name="Call(At).argument(seq)" incoming="_3lcz-rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0ibSpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0irSpEem4MK7Gf1Ez8w" value="*"/>
                    </argument>
                    <argument xmi:id="_3lc0i7SpEem4MK7Gf1Ez8w" name="Call(At).argument(index)" incoming="_3lc0OrSpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0jLSpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0jbSpEem4MK7Gf1Ez8w" value="1"/>
                    </argument>
                    <result xmi:id="_3lc0jrSpEem4MK7Gf1Ez8w" name="Call(At).result()" outgoing="_3lc0ILSpEem4MK7Gf1Ez8w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0j7SpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0kLSpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_3lc0kbSpEem4MK7Gf1Ez8w" name="Fork(Call(At).argument(index))" incoming="_3lcz87SpEem4MK7Gf1Ez8w" outgoing="_3lc0OrSpEem4MK7Gf1Ez8w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0krSpEem4MK7Gf1Ez8w" name="Call(At)">
                    <argument xmi:id="_3lc0k7SpEem4MK7Gf1Ez8w" name="Call(At).argument(seq)" incoming="_3lcz-7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0lLSpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0lbSpEem4MK7Gf1Ez8w" value="*"/>
                    </argument>
                    <argument xmi:id="_3lc0lrSpEem4MK7Gf1Ez8w" name="Call(At).argument(index)" incoming="_3lc0O7SpEem4MK7Gf1Ez8w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0l7SpEem4MK7Gf1Ez8w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0mLSpEem4MK7Gf1Ez8w" value="1"/>
                    </argument>
                    <result xmi:id="_3lc0mbSpEem4MK7Gf1Ez8w" name="Call(At).result()" outgoing="_3lc0IbSpEem4MK7Gf1Ez8w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0mrSpEem4MK7Gf1Ez8w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0m7SpEem4MK7Gf1Ez8w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_3lc0nLSpEem4MK7Gf1Ez8w" name="Fork(Call(At).argument(index))" incoming="_3lcz9LSpEem4MK7Gf1Ez8w" outgoing="_3lc0O7SpEem4MK7Gf1Ez8w"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0nbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0nrSpEem4MK7Gf1Ez8w" target="_3lc0orSpEem4MK7Gf1Ez8w" source="_3lc0n7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lc0n7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lcz_LSpEem4MK7Gf1Ez8w" outgoing="_3lc0nrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0oLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0obSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lc0orSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lc0nrSpEem4MK7Gf1Ez8w" outgoing="_3lc0EbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0o7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0pLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0pbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0prSpEem4MK7Gf1Ez8w" target="_3lc0qrSpEem4MK7Gf1Ez8w" source="_3lc0p7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lc0p7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(list)).input" incoming="_3lcz_bSpEem4MK7Gf1Ez8w" outgoing="_3lc0prSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0qLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0qbSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lc0qrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(list)).output" incoming="_3lc0prSpEem4MK7Gf1Ez8w" outgoing="_3lc0ErSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0q7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0rLSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0rbSpEem4MK7Gf1Ez8w" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0rrSpEem4MK7Gf1Ez8w" target="_3lc0srSpEem4MK7Gf1Ez8w" source="_3lc0r7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lc0r7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(expected)).input" incoming="_3lcz_rSpEem4MK7Gf1Ez8w" outgoing="_3lc0rrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0sLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0sbSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lc0srSpEem4MK7Gf1Ez8w" name="Passthru(Fork(expected)).output" incoming="_3lc0rrSpEem4MK7Gf1Ez8w" outgoing="_3lc0E7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0s7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0tLSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0tbSpEem4MK7Gf1Ez8w" name="Call(+)">
                <argument xmi:id="_3lc0trSpEem4MK7Gf1Ez8w" name="Call(+).argument(x)" incoming="_3lcz97SpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0t7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0uLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lc0ubSpEem4MK7Gf1Ez8w" name="Call(+).argument(y)" incoming="_3lc0FLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0urSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0u7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lc0vLSpEem4MK7Gf1Ez8w" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0vbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0vrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc0v7SpEem4MK7Gf1Ez8w" name="Value(1)">
                <result xmi:id="_3lc0wLSpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lc0FLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0wbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0wrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3lc0w7SpEem4MK7Gf1Ez8w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc0xLSpEem4MK7Gf1Ez8w" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc0xbSpEem4MK7Gf1Ez8w" target="_3lc0ybSpEem4MK7Gf1Ez8w" source="_3lc0xrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lc0xrSpEem4MK7Gf1Ez8w" name="Passthru(upper).input" incoming="_3lcz-LSpEem4MK7Gf1Ez8w" outgoing="_3lc0xbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0x7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0yLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lc0ybSpEem4MK7Gf1Ez8w" name="Passthru(upper).output" incoming="_3lc0xbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0yrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0y7SpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc0zLSpEem4MK7Gf1Ez8w" name="Call(+)">
              <argument xmi:id="_3lc0zbSpEem4MK7Gf1Ez8w" name="Call(+).argument(x)" incoming="_3lcz9bSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0zrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0z7SpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <argument xmi:id="_3lc00LSpEem4MK7Gf1Ez8w" name="Call(+).argument(y)" incoming="_3lcz9rSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc00bSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc00rSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc007SpEem4MK7Gf1Ez8w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc01LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc01bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc01rSpEem4MK7Gf1Ez8w" name="Value(1)">
              <result xmi:id="_3lc017SpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lcz9rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc02LSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc02bSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lc02rSpEem4MK7Gf1Ez8w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_3lc027SpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariable(label)" outgoing="_3lcz6bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc03LSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc03bSpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_3lc03rSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariable(list)" outgoing="_3lcz6rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc037SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc04LSpEem4MK7Gf1Ez8w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_3lc04bSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariable(expected)" outgoing="_3lcz67SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc04rSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc047SpEem4MK7Gf1Ez8w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_3lc05LSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariable(i)" outgoing="_3lcz7LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc05bSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc05rSpEem4MK7Gf1Ez8w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_3lc057SpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariable(counter)" outgoing="_3lcz7bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc06LSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc06bSpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_3lc06rSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariable(upper)" outgoing="_3lcz7rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc067SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc07LSpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_3lc07bSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariableInput(label)" incoming="_3lczjbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc07rSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc077SpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_3lc08LSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariableInput(list)" incoming="_3lczjrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc08bSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc08rSpEem4MK7Gf1Ez8w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_3lc087SpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariableInput(expected)" incoming="_3lczj7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc09LSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc09bSpEem4MK7Gf1Ez8w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_3lc09rSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariableInput(i)" incoming="_3lcz5rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc097SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0-LSpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_3lc0-bSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariableInput(counter)" incoming="_3lcz5LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0-rSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0-7SpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_3lc0_LSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.loopVariableInput(upper)" incoming="_3lcz5bSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc0_bSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc0_rSpEem4MK7Gf1Ez8w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_3lc0_7SpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1ALSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1AbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <result xmi:id="_3lc1ArSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1A7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1BLSpEem4MK7Gf1Ez8w" value="*"/>
            </result>
            <result xmi:id="_3lc1BbSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1BrSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1B7SpEem4MK7Gf1Ez8w" value="*"/>
            </result>
            <result xmi:id="_3lc1CLSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1CbSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1CrSpEem4MK7Gf1Ez8w" value="*"/>
            </result>
            <result xmi:id="_3lc1C7SpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1DLSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1DbSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <result xmi:id="_3lc1DrSpEem4MK7Gf1Ez8w" name="ForStatement@47843c72.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1D7SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1ELSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1EbSpEem4MK7Gf1Ez8w" name="LoopVariables(ForStatement@47843c72)" outgoing="_3lcz57SpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1ErSpEem4MK7Gf1Ez8w" target="_3lc1PrSpEem4MK7Gf1Ez8w" source="_3lc1IrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1E7SpEem4MK7Gf1Ez8w" target="_3lc1QbSpEem4MK7Gf1Ez8w" source="_3lc1LrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lc1FLSpEem4MK7Gf1Ez8w" target="_3lc1PbSpEem4MK7Gf1Ez8w" source="_3lc1H7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lc1FbSpEem4MK7Gf1Ez8w" target="_3lc1OLSpEem4MK7Gf1Ez8w" source="_3lc1H7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1FrSpEem4MK7Gf1Ez8w" target="_3lc1SbSpEem4MK7Gf1Ez8w" source="_3lc1OrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1F7SpEem4MK7Gf1Ez8w" target="_3lc1TLSpEem4MK7Gf1Ez8w" source="_3lc1R7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1GLSpEem4MK7Gf1Ez8w" target="_3lc1WLSpEem4MK7Gf1Ez8w" source="_3lc1T7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1GbSpEem4MK7Gf1Ez8w" target="_3lc1W7SpEem4MK7Gf1Ez8w" source="_3lc1U7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc1GrSpEem4MK7Gf1Ez8w" name="Value(1)">
              <result xmi:id="_3lc1G7SpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lcz47SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1HLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1HbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lc1HrSpEem4MK7Gf1Ez8w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1H7SpEem4MK7Gf1Ez8w" name="Tuple@4e251c8" outgoing="_3lc1FLSpEem4MK7Gf1Ez8w _3lc1FbSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1ILSpEem4MK7Gf1Ez8w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1IbSpEem4MK7Gf1Ez8w" target="_3lc1IrSpEem4MK7Gf1Ez8w" source="_3lc1KbSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lc1IrSpEem4MK7Gf1Ez8w" name="Output(Call(Size).result())" incoming="_3lc1IbSpEem4MK7Gf1Ez8w" outgoing="_3lc1ErSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1I7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1JLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1JbSpEem4MK7Gf1Ez8w" name="Call(Size)">
                  <argument xmi:id="_3lc1JrSpEem4MK7Gf1Ez8w" name="Call(Size).argument(seq)" incoming="_3lczkLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1J7SpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1KLSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <result xmi:id="_3lc1KbSpEem4MK7Gf1Ez8w" name="Call(Size).result()" outgoing="_3lc1IbSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1KrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1K7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1LLSpEem4MK7Gf1Ez8w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1LbSpEem4MK7Gf1Ez8w" target="_3lc1LrSpEem4MK7Gf1Ez8w" source="_3lc1NbSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lc1LrSpEem4MK7Gf1Ez8w" name="Output(Call(Size).result())" incoming="_3lc1LbSpEem4MK7Gf1Ez8w" outgoing="_3lc1E7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1L7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1MLSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1MbSpEem4MK7Gf1Ez8w" name="Call(Size)">
                  <argument xmi:id="_3lc1MrSpEem4MK7Gf1Ez8w" name="Call(Size).argument(seq)" incoming="_3lczkbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1M7SpEem4MK7Gf1Ez8w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1NLSpEem4MK7Gf1Ez8w" value="*"/>
                  </argument>
                  <result xmi:id="_3lc1NbSpEem4MK7Gf1Ez8w" name="Call(Size).result()" outgoing="_3lc1LbSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1NrSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1N7SpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1OLSpEem4MK7Gf1Ez8w" name="Node(Call(Min))" incoming="_3lc1FbSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1ObSpEem4MK7Gf1Ez8w" target="_3lc1OrSpEem4MK7Gf1Ez8w" source="_3lc1RLSpEem4MK7Gf1Ez8w"/>
              <structuredNodeOutput xmi:id="_3lc1OrSpEem4MK7Gf1Ez8w" name="Output(Call(Min).result(result))" incoming="_3lc1ObSpEem4MK7Gf1Ez8w" outgoing="_3lc1FrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1O7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1PLSpEem4MK7Gf1Ez8w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1PbSpEem4MK7Gf1Ez8w" name="Call(Min)" incoming="_3lc1FLSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lc1PrSpEem4MK7Gf1Ez8w" name="Call(Min).argument(x)" incoming="_3lc1ErSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1P7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1QLSpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <argument xmi:id="_3lc1QbSpEem4MK7Gf1Ez8w" name="Call(Min).argument(y)" incoming="_3lc1E7SpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1QrSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1Q7SpEem4MK7Gf1Ez8w" value="1"/>
                </argument>
                <result xmi:id="_3lc1RLSpEem4MK7Gf1Ez8w" name="Call(Min).result(result)" outgoing="_3lc1ObSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1RbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1RrSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc1R7SpEem4MK7Gf1Ez8w" name="Fork(Value(1).result)" incoming="_3lcz47SpEem4MK7Gf1Ez8w" outgoing="_3lcz5rSpEem4MK7Gf1Ez8w _3lc1F7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1SLSpEem4MK7Gf1Ez8w" name="Call(-)">
              <argument xmi:id="_3lc1SbSpEem4MK7Gf1Ez8w" name="Call(-).argument(x)" incoming="_3lc1FrSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1SrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1S7SpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <argument xmi:id="_3lc1TLSpEem4MK7Gf1Ez8w" name="Call(-).argument(y)" incoming="_3lc1F7SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1TbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1TrSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc1T7SpEem4MK7Gf1Ez8w" name="Call(-).result(result)" outgoing="_3lc1GLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1ULSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1UbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc1UrSpEem4MK7Gf1Ez8w" name="Value(1)">
              <result xmi:id="_3lc1U7SpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lc1GbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1VLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1VbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lc1VrSpEem4MK7Gf1Ez8w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1V7SpEem4MK7Gf1Ez8w" name="Call(+)">
              <argument xmi:id="_3lc1WLSpEem4MK7Gf1Ez8w" name="Call(+).argument(x)" incoming="_3lc1GLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1WbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1WrSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <argument xmi:id="_3lc1W7SpEem4MK7Gf1Ez8w" name="Call(+).argument(y)" incoming="_3lc1GbSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1XLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1XbSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc1XrSpEem4MK7Gf1Ez8w" name="Call(+).result(result)" outgoing="_3lcz5bSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1X7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1YLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc1YbSpEem4MK7Gf1Ez8w" name="Value(1)">
              <result xmi:id="_3lc1YrSpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lcz5LSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1Y7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1ZLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3lc1ZbSpEem4MK7Gf1Ez8w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lczkrSpEem4MK7Gf1Ez8w" name="Input(label)" outgoing="_3lczh7SpEem4MK7Gf1Ez8w" parameter="_3lczfrSpEem4MK7Gf1Ez8w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3lczk7SpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lczh7SpEem4MK7Gf1Ez8w" outgoing="_3lczirSpEem4MK7Gf1Ez8w _3lczjbSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lczlLSpEem4MK7Gf1Ez8w" name="Input(list)" outgoing="_3lcziLSpEem4MK7Gf1Ez8w" parameter="_3lczgbSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3lczlbSpEem4MK7Gf1Ez8w" name="Fork(list)" incoming="_3lcziLSpEem4MK7Gf1Ez8w" outgoing="_3lczi7SpEem4MK7Gf1Ez8w _3lczkLSpEem4MK7Gf1Ez8w _3lczjrSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lczlrSpEem4MK7Gf1Ez8w" name="Input(expected)" outgoing="_3lczibSpEem4MK7Gf1Ez8w" parameter="_3lczhLSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3lczl7SpEem4MK7Gf1Ez8w" name="Fork(expected)" incoming="_3lczibSpEem4MK7Gf1Ez8w" outgoing="_3lczjLSpEem4MK7Gf1Ez8w _3lczkbSpEem4MK7Gf1Ez8w _3lczj7SpEem4MK7Gf1Ez8w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3lc1ZrSpEem4MK7Gf1Ez8w" name="AssertTrue" visibility="public" node="_3lc1erSpEem4MK7Gf1Ez8w _3lc1e7SpEem4MK7Gf1Ez8w _3lc1fLSpEem4MK7Gf1Ez8w _3lc1fbSpEem4MK7Gf1Ez8w _3lc1frSpEem4MK7Gf1Ez8w" group="_3lc1frSpEem4MK7Gf1Ez8w">
      <packageImport xmi:id="_3lc1Z7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lc1aLSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lc1abSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lc1arSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lc1a7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3lc1bLSpEem4MK7Gf1Ez8w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1bbSpEem4MK7Gf1Ez8w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1brSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3lc1b7SpEem4MK7Gf1Ez8w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1cLSpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1cbSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1crSpEem4MK7Gf1Ez8w" target="_3lc1e7SpEem4MK7Gf1Ez8w" source="_3lc1erSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1c7SpEem4MK7Gf1Ez8w" target="_3lc1fbSpEem4MK7Gf1Ez8w" source="_3lc1fLSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1dLSpEem4MK7Gf1Ez8w" target="_3lc1nLSpEem4MK7Gf1Ez8w" source="_3lc1fbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1dbSpEem4MK7Gf1Ez8w" target="_3lc1xLSpEem4MK7Gf1Ez8w" source="_3lc1e7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1drSpEem4MK7Gf1Ez8w" target="_3lc127SpEem4MK7Gf1Ez8w" source="_3lc1fbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1d7SpEem4MK7Gf1Ez8w" target="_3lc147SpEem4MK7Gf1Ez8w" source="_3lc1e7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1eLSpEem4MK7Gf1Ez8w" target="_3lc18LSpEem4MK7Gf1Ez8w" source="_3lc1fbSpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1ebSpEem4MK7Gf1Ez8w" target="_3lc1-LSpEem4MK7Gf1Ez8w" source="_3lc1e7SpEem4MK7Gf1Ez8w"/>
      <structuredNode xmi:id="_3lc1frSpEem4MK7Gf1Ez8w" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1f7SpEem4MK7Gf1Ez8w" target="_3lc2BrSpEem4MK7Gf1Ez8w" source="_3lc2ALSpEem4MK7Gf1Ez8w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1gLSpEem4MK7Gf1Ez8w" target="_3lc2B7SpEem4MK7Gf1Ez8w" source="_3lc2A7SpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_3lc1gbSpEem4MK7Gf1Ez8w" name="IfStatement@5630321f">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1grSpEem4MK7Gf1Ez8w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1g7SpEem4MK7Gf1Ez8w" target="_3lc1k7SpEem4MK7Gf1Ez8w" source="_3lc1nLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1hLSpEem4MK7Gf1Ez8w" target="_3lc1nrSpEem4MK7Gf1Ez8w" source="_3lc1nLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1hbSpEem4MK7Gf1Ez8w" target="_3lc1pLSpEem4MK7Gf1Ez8w" source="_3lc1obSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1hrSpEem4MK7Gf1Ez8w" target="_3lc1pbSpEem4MK7Gf1Ez8w" source="_3lc1lrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1h7SpEem4MK7Gf1Ez8w" target="_3lc1prSpEem4MK7Gf1Ez8w" source="_3lc1pLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1iLSpEem4MK7Gf1Ez8w" target="_3lc1prSpEem4MK7Gf1Ez8w" source="_3lc1pLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1ibSpEem4MK7Gf1Ez8w" target="_3lc1pbSpEem4MK7Gf1Ez8w" source="_3lc1prSpEem4MK7Gf1Ez8w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lc1irSpEem4MK7Gf1Ez8w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1i7SpEem4MK7Gf1Ez8w" target="_3lc1mbSpEem4MK7Gf1Ez8w" source="_3lc1jrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1jLSpEem4MK7Gf1Ez8w" target="_3lc1qLSpEem4MK7Gf1Ez8w" source="_3lc1pbSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc1jbSpEem4MK7Gf1Ez8w" name="Value(true)">
              <result xmi:id="_3lc1jrSpEem4MK7Gf1Ez8w" name="Value(true).result" outgoing="_3lc1i7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1j7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1kLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_3lc1kbSpEem4MK7Gf1Ez8w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3lc1krSpEem4MK7Gf1Ez8w" name="Test(==)">
              <first xmi:id="_3lc1k7SpEem4MK7Gf1Ez8w" name="Test(==).first" incoming="_3lc1g7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1lLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1lbSpEem4MK7Gf1Ez8w" value="1"/>
              </first>
              <result xmi:id="_3lc1lrSpEem4MK7Gf1Ez8w" name="Test(==).result" outgoing="_3lc1hrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1l7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1mLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <second xmi:id="_3lc1mbSpEem4MK7Gf1Ez8w" name="Test(==).second" incoming="_3lc1i7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1mrSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1m7SpEem4MK7Gf1Ez8w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc1nLSpEem4MK7Gf1Ez8w" name="Fork(Fork(condition))" incoming="_3lc1dLSpEem4MK7Gf1Ez8w" outgoing="_3lc1g7SpEem4MK7Gf1Ez8w _3lc1hLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1nbSpEem4MK7Gf1Ez8w" name="Call(NotEmpty)">
              <argument xmi:id="_3lc1nrSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lc1hLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1n7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1oLSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <result xmi:id="_3lc1obSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lc1hbSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1orSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1o7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc1pLSpEem4MK7Gf1Ez8w" name="Fork(Call(NotEmpty).result())" incoming="_3lc1hbSpEem4MK7Gf1Ez8w" outgoing="_3lc1h7SpEem4MK7Gf1Ez8w _3lc1iLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_3lc1pbSpEem4MK7Gf1Ez8w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_3lc1hrSpEem4MK7Gf1Ez8w _3lc1ibSpEem4MK7Gf1Ez8w" outgoing="_3lc1jLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3lc1prSpEem4MK7Gf1Ez8w" name="Decision(Call(NotEmpty).result())" incoming="_3lc1h7SpEem4MK7Gf1Ez8w _3lc1iLSpEem4MK7Gf1Ez8w" outgoing="_3lc1ibSpEem4MK7Gf1Ez8w" decisionInputFlow="_3lc1iLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1p7SpEem4MK7Gf1Ez8w" name="Call(Not)">
              <argument xmi:id="_3lc1qLSpEem4MK7Gf1Ez8w" name="Call(Not).argument(x)" incoming="_3lc1jLSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1qbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1qrSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc1q7SpEem4MK7Gf1Ez8w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1rLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1rbSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1rrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@6e14116d">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1r7SpEem4MK7Gf1Ez8w" target="_3lc1srSpEem4MK7Gf1Ez8w" source="_3lc1zLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lc1sLSpEem4MK7Gf1Ez8w" target="_3lc1sbSpEem4MK7Gf1Ez8w" source="_3lc1uLSpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1sbSpEem4MK7Gf1Ez8w" name="Call(WriteLine)" incoming="_3lc1sLSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lc1srSpEem4MK7Gf1Ez8w" name="Call(WriteLine).argument(value)" incoming="_3lc1r7SpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1s7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1tLSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc1tbSpEem4MK7Gf1Ez8w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1trSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1t7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1uLSpEem4MK7Gf1Ez8w" name="Tuple@c56d414" outgoing="_3lc1sLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1ubSpEem4MK7Gf1Ez8w" target="_3lc10LSpEem4MK7Gf1Ez8w" source="_3lc1vrSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1urSpEem4MK7Gf1Ez8w" target="_3lc107SpEem4MK7Gf1Ez8w" source="_3lc1x7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lc1u7SpEem4MK7Gf1Ez8w" target="_3lc1yrSpEem4MK7Gf1Ez8w" source="_3lc1vbSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lc1vLSpEem4MK7Gf1Ez8w" target="_3lc1yrSpEem4MK7Gf1Ez8w" source="_3lc1wrSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc1vbSpEem4MK7Gf1Ez8w" name="Value(&quot;FAILED: &quot;)" outgoing="_3lc1u7SpEem4MK7Gf1Ez8w">
                <result xmi:id="_3lc1vrSpEem4MK7Gf1Ez8w" name="Value(&quot;FAILED: &quot;).result" outgoing="_3lc1ubSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1v7SpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1wLSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3lc1wbSpEem4MK7Gf1Ez8w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1wrSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))" outgoing="_3lc1vLSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1w7SpEem4MK7Gf1Ez8w" target="_3lc1x7SpEem4MK7Gf1Ez8w" source="_3lc1xLSpEem4MK7Gf1Ez8w"/>
                <structuredNodeInput xmi:id="_3lc1xLSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lc1dbSpEem4MK7Gf1Ez8w" outgoing="_3lc1w7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1xbSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1xrSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3lc1x7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lc1w7SpEem4MK7Gf1Ez8w" outgoing="_3lc1urSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1yLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1ybSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc1yrSpEem4MK7Gf1Ez8w" name="Node(Call(Concat))" incoming="_3lc1u7SpEem4MK7Gf1Ez8w _3lc1vLSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc1y7SpEem4MK7Gf1Ez8w" target="_3lc1zLSpEem4MK7Gf1Ez8w" source="_3lc11rSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lc1zLSpEem4MK7Gf1Ez8w" name="Output(Call(Concat).result(result))" incoming="_3lc1y7SpEem4MK7Gf1Ez8w" outgoing="_3lc1r7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1zbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1zrSpEem4MK7Gf1Ez8w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc1z7SpEem4MK7Gf1Ez8w" name="Call(Concat)">
                  <argument xmi:id="_3lc10LSpEem4MK7Gf1Ez8w" name="Call(Concat).argument(x)" incoming="_3lc1ubSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc10bSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc10rSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <argument xmi:id="_3lc107SpEem4MK7Gf1Ez8w" name="Call(Concat).argument(y)" incoming="_3lc1urSpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc11LSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc11bSpEem4MK7Gf1Ez8w" value="1"/>
                  </argument>
                  <result xmi:id="_3lc11rSpEem4MK7Gf1Ez8w" name="Call(Concat).result(result)" outgoing="_3lc1y7SpEem4MK7Gf1Ez8w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc117SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc12LSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc12bSpEem4MK7Gf1Ez8w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc12rSpEem4MK7Gf1Ez8w" target="_3lc13rSpEem4MK7Gf1Ez8w" source="_3lc127SpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lc127SpEem4MK7Gf1Ez8w" name="Passthru(Fork(condition)).input" incoming="_3lc1drSpEem4MK7Gf1Ez8w" outgoing="_3lc12rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc13LSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc13bSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lc13rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(condition)).output" incoming="_3lc12rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc137SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc14LSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc14bSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc14rSpEem4MK7Gf1Ez8w" target="_3lc15rSpEem4MK7Gf1Ez8w" source="_3lc147SpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lc147SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lc1d7SpEem4MK7Gf1Ez8w" outgoing="_3lc14rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc15LSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc15bSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lc15rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lc14rSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc157SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc16LSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc16bSpEem4MK7Gf1Ez8w" name="Value(true)">
            <result xmi:id="_3lc16rSpEem4MK7Gf1Ez8w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc167SpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc17LSpEem4MK7Gf1Ez8w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_3lc17bSpEem4MK7Gf1Ez8w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc17rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc177SpEem4MK7Gf1Ez8w" target="_3lc187SpEem4MK7Gf1Ez8w" source="_3lc18LSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lc18LSpEem4MK7Gf1Ez8w" name="Passthru(Fork(condition)).input" incoming="_3lc1eLSpEem4MK7Gf1Ez8w" outgoing="_3lc177SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc18bSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc18rSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lc187SpEem4MK7Gf1Ez8w" name="Passthru(Fork(condition)).output" incoming="_3lc177SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc19LSpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc19bSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc19rSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc197SpEem4MK7Gf1Ez8w" target="_3lc1-7SpEem4MK7Gf1Ez8w" source="_3lc1-LSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lc1-LSpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).input" incoming="_3lc1ebSpEem4MK7Gf1Ez8w" outgoing="_3lc197SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1-bSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1-rSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3lc1-7SpEem4MK7Gf1Ez8w" name="Passthru(Fork(label)).output" incoming="_3lc197SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc1_LSpEem4MK7Gf1Ez8w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc1_bSpEem4MK7Gf1Ez8w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_3lc1_rSpEem4MK7Gf1Ez8w" body="_3lc1rrSpEem4MK7Gf1Ez8w _3lc12bSpEem4MK7Gf1Ez8w _3lc14bSpEem4MK7Gf1Ez8w" bodyOutput="_3lc13rSpEem4MK7Gf1Ez8w _3lc15rSpEem4MK7Gf1Ez8w" decider="_3lc1q7SpEem4MK7Gf1Ez8w" successorClause="_3lc1_7SpEem4MK7Gf1Ez8w" test="_3lc1grSpEem4MK7Gf1Ez8w"/>
          <clause xmi:id="_3lc1_7SpEem4MK7Gf1Ez8w" body="_3lc17rSpEem4MK7Gf1Ez8w _3lc19rSpEem4MK7Gf1Ez8w" bodyOutput="_3lc187SpEem4MK7Gf1Ez8w _3lc1-7SpEem4MK7Gf1Ez8w" decider="_3lc16rSpEem4MK7Gf1Ez8w" predecessorClause="_3lc1_rSpEem4MK7Gf1Ez8w" test="_3lc16bSpEem4MK7Gf1Ez8w"/>
          <result xmi:id="_3lc2ALSpEem4MK7Gf1Ez8w" name="IfStatement@5630321f.result(condition)" outgoing="_3lc1f7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2AbSpEem4MK7Gf1Ez8w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2ArSpEem4MK7Gf1Ez8w" value="1"/>
          </result>
          <result xmi:id="_3lc2A7SpEem4MK7Gf1Ez8w" name="IfStatement@5630321f.result(label)" outgoing="_3lc1gLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2BLSpEem4MK7Gf1Ez8w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2BbSpEem4MK7Gf1Ez8w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_3lc2BrSpEem4MK7Gf1Ez8w" name="Fork(condition)" incoming="_3lc1f7SpEem4MK7Gf1Ez8w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3lc2B7SpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lc1gLSpEem4MK7Gf1Ez8w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lc1erSpEem4MK7Gf1Ez8w" name="Input(label)" outgoing="_3lc1crSpEem4MK7Gf1Ez8w" parameter="_3lc1bLSpEem4MK7Gf1Ez8w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3lc1e7SpEem4MK7Gf1Ez8w" name="Fork(label)" incoming="_3lc1crSpEem4MK7Gf1Ez8w" outgoing="_3lc1dbSpEem4MK7Gf1Ez8w _3lc1d7SpEem4MK7Gf1Ez8w _3lc1ebSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lc1fLSpEem4MK7Gf1Ez8w" name="Input(condition)" outgoing="_3lc1c7SpEem4MK7Gf1Ez8w" parameter="_3lc1b7SpEem4MK7Gf1Ez8w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3lc1fbSpEem4MK7Gf1Ez8w" name="Fork(condition)" incoming="_3lc1c7SpEem4MK7Gf1Ez8w" outgoing="_3lc1dLSpEem4MK7Gf1Ez8w _3lc1drSpEem4MK7Gf1Ez8w _3lc1eLSpEem4MK7Gf1Ez8w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3lc2CLSpEem4MK7Gf1Ez8w" name="Write" visibility="public" node="_3lc2E7SpEem4MK7Gf1Ez8w _3lc2FLSpEem4MK7Gf1Ez8w _3lc2FbSpEem4MK7Gf1Ez8w" group="_3lc2FbSpEem4MK7Gf1Ez8w">
      <packageImport xmi:id="_3lc2CbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3lc2CrSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3lc2C7SpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3lc2DLSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3lc2DbSpEem4MK7Gf1Ez8w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3lc2DrSpEem4MK7Gf1Ez8w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2D7SpEem4MK7Gf1Ez8w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2ELSpEem4MK7Gf1Ez8w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2EbSpEem4MK7Gf1Ez8w" target="_3lc2FLSpEem4MK7Gf1Ez8w" source="_3lc2E7SpEem4MK7Gf1Ez8w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2ErSpEem4MK7Gf1Ez8w" target="_3lc2HrSpEem4MK7Gf1Ez8w" source="_3lc2FLSpEem4MK7Gf1Ez8w"/>
      <structuredNode xmi:id="_3lc2FbSpEem4MK7Gf1Ez8w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2FrSpEem4MK7Gf1Ez8w" name="ExpressionStatement@50d2a5b0">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2F7SpEem4MK7Gf1Ez8w" target="_3lc2WbSpEem4MK7Gf1Ez8w" source="_3lc2ZrSpEem4MK7Gf1Ez8w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2GLSpEem4MK7Gf1Ez8w" target="_3lc2GbSpEem4MK7Gf1Ez8w" source="_3lc2WrSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_3lc2GbSpEem4MK7Gf1Ez8w" name="Collect(Call(write))" incoming="_3lc2GLSpEem4MK7Gf1Ez8w" mode="parallel" inputElement="_3lc2WbSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2GrSpEem4MK7Gf1Ez8w" target="_3lc2IrSpEem4MK7Gf1Ez8w" source="_3lc2WLSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2G7SpEem4MK7Gf1Ez8w" target="_3lc2OLSpEem4MK7Gf1Ez8w" source="_3lc2HrSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2HLSpEem4MK7Gf1Ez8w" target="_3lc2IbSpEem4MK7Gf1Ez8w" source="_3lc2K7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2HbSpEem4MK7Gf1Ez8w" target="_3lc2KLSpEem4MK7Gf1Ez8w" source="_3lc2WbSpEem4MK7Gf1Ez8w"/>
            <structuredNodeInput xmi:id="_3lc2HrSpEem4MK7Gf1Ez8w" name="Collect(Call(write)).input(Fork(value))" incoming="_3lc2ErSpEem4MK7Gf1Ez8w" outgoing="_3lc2G7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2H7SpEem4MK7Gf1Ez8w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2ILSpEem4MK7Gf1Ez8w" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3lc2IbSpEem4MK7Gf1Ez8w" name="Call(write)" incoming="_3lc2HLSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lc2IrSpEem4MK7Gf1Ez8w" name="Call(write).argument(value)" incoming="_3lc2GrSpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2I7SpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2JLSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc2JbSpEem4MK7Gf1Ez8w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2JrSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2J7SpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_3lc2KLSpEem4MK7Gf1Ez8w" name="Call(write).target" incoming="_3lc2HbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2KbSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2KrSpEem4MK7Gf1Ez8w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2K7SpEem4MK7Gf1Ez8w" name="Tuple@fac1d9c" outgoing="_3lc2HLSpEem4MK7Gf1Ez8w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2LLSpEem4MK7Gf1Ez8w" target="_3lc2QLSpEem4MK7Gf1Ez8w" source="_3lc2OLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2LbSpEem4MK7Gf1Ez8w" target="_3lc2P7SpEem4MK7Gf1Ez8w" source="_3lc2N7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2LrSpEem4MK7Gf1Ez8w" target="_3lc2S7SpEem4MK7Gf1Ez8w" source="_3lc2OLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2L7SpEem4MK7Gf1Ez8w" target="_3lc2V7SpEem4MK7Gf1Ez8w" source="_3lc2VrSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2MLSpEem4MK7Gf1Ez8w" target="_3lc2V7SpEem4MK7Gf1Ez8w" source="_3lc2Q7SpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2MbSpEem4MK7Gf1Ez8w" target="_3lc2RrSpEem4MK7Gf1Ez8w" source="_3lc2V7SpEem4MK7Gf1Ez8w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lc2MrSpEem4MK7Gf1Ez8w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2M7SpEem4MK7Gf1Ez8w" target="_3lc2TLSpEem4MK7Gf1Ez8w" source="_3lc2V7SpEem4MK7Gf1Ez8w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_3lc2NLSpEem4MK7Gf1Ez8w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2NbSpEem4MK7Gf1Ez8w" target="_3lc2WLSpEem4MK7Gf1Ez8w" source="_3lc2SLSpEem4MK7Gf1Ez8w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2NrSpEem4MK7Gf1Ez8w" target="_3lc2WLSpEem4MK7Gf1Ez8w" source="_3lc2TrSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2N7SpEem4MK7Gf1Ez8w" name="Operands(EqualityExpression@43816fdc)" outgoing="_3lc2LbSpEem4MK7Gf1Ez8w">
                <node xmi:type="uml:ForkNode" xmi:id="_3lc2OLSpEem4MK7Gf1Ez8w" name="Fork('')@65935c8f" incoming="_3lc2G7SpEem4MK7Gf1Ez8w" outgoing="_3lc2LLSpEem4MK7Gf1Ez8w _3lc2LrSpEem4MK7Gf1Ez8w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2ObSpEem4MK7Gf1Ez8w" name="RightHandSide@83e196f"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc2OrSpEem4MK7Gf1Ez8w" name="Value(null)">
                  <result xmi:id="_3lc2O7SpEem4MK7Gf1Ez8w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2PLSpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2PbSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_3lc2PrSpEem4MK7Gf1Ez8w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc2P7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty)" incoming="_3lc2LbSpEem4MK7Gf1Ez8w">
                <argument xmi:id="_3lc2QLSpEem4MK7Gf1Ez8w" name="Call(NotEmpty).argument(seq)" incoming="_3lc2LLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2QbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2QrSpEem4MK7Gf1Ez8w" value="*"/>
                </argument>
                <result xmi:id="_3lc2Q7SpEem4MK7Gf1Ez8w" name="Call(NotEmpty).result()" outgoing="_3lc2MLSpEem4MK7Gf1Ez8w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2RLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2RbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2RrSpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@2f078808.operand2" incoming="_3lc2MbSpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2R7SpEem4MK7Gf1Ez8w" target="_3lc2SLSpEem4MK7Gf1Ez8w" source="_3lc2S7SpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lc2SLSpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@2f078808.operand2.result" incoming="_3lc2R7SpEem4MK7Gf1Ez8w" outgoing="_3lc2NbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2SbSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2SrSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_3lc2S7SpEem4MK7Gf1Ez8w" name="Merge(Fork('')@65935c8f)" incoming="_3lc2LrSpEem4MK7Gf1Ez8w" outgoing="_3lc2R7SpEem4MK7Gf1Ez8w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2TLSpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@2f078808.operand3" incoming="_3lc2M7SpEem4MK7Gf1Ez8w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2TbSpEem4MK7Gf1Ez8w" target="_3lc2TrSpEem4MK7Gf1Ez8w" source="_3lc2UrSpEem4MK7Gf1Ez8w"/>
                <structuredNodeOutput xmi:id="_3lc2TrSpEem4MK7Gf1Ez8w" name="NullCoalescingExpression@2f078808.operand3.result" incoming="_3lc2TbSpEem4MK7Gf1Ez8w" outgoing="_3lc2NrSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2T7SpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2ULSpEem4MK7Gf1Ez8w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc2UbSpEem4MK7Gf1Ez8w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_3lc2UrSpEem4MK7Gf1Ez8w" name="Value(&quot;null&quot;).result" outgoing="_3lc2TbSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2U7SpEem4MK7Gf1Ez8w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2VLSpEem4MK7Gf1Ez8w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3lc2VbSpEem4MK7Gf1Ez8w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_3lc2VrSpEem4MK7Gf1Ez8w" name="Initial(NullCoalescingExpression@2f078808)" outgoing="_3lc2L7SpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_3lc2V7SpEem4MK7Gf1Ez8w" name="Decision(NullCoalescingExpression@2f078808)" incoming="_3lc2L7SpEem4MK7Gf1Ez8w _3lc2MLSpEem4MK7Gf1Ez8w" outgoing="_3lc2MbSpEem4MK7Gf1Ez8w _3lc2M7SpEem4MK7Gf1Ez8w" decisionInputFlow="_3lc2MLSpEem4MK7Gf1Ez8w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_3lc2WLSpEem4MK7Gf1Ez8w" name="Merge(NullCoalescingExpression@2f078808.result)" incoming="_3lc2NbSpEem4MK7Gf1Ez8w _3lc2NrSpEem4MK7Gf1Ez8w" outgoing="_3lc2GrSpEem4MK7Gf1Ez8w"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_3lc2WbSpEem4MK7Gf1Ez8w" name="Collect(Call(write)).inputElement" incoming="_3lc2F7SpEem4MK7Gf1Ez8w" outgoing="_3lc2HbSpEem4MK7Gf1Ez8w" regionAsInput="_3lc2GbSpEem4MK7Gf1Ez8w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2WrSpEem4MK7Gf1Ez8w" name="Feature(Call(At).result())" outgoing="_3lc2GLSpEem4MK7Gf1Ez8w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2W7SpEem4MK7Gf1Ez8w" target="_3lc2YLSpEem4MK7Gf1Ez8w" source="_3lc2a7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2XLSpEem4MK7Gf1Ez8w" target="_3lc2c7SpEem4MK7Gf1Ez8w" source="_3lc2b7SpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3lc2XbSpEem4MK7Gf1Ez8w" target="_3lc2X7SpEem4MK7Gf1Ez8w" source="_3lc2abSpEem4MK7Gf1Ez8w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3lc2XrSpEem4MK7Gf1Ez8w" target="_3lc2Y7SpEem4MK7Gf1Ez8w" source="_3lc2c7SpEem4MK7Gf1Ez8w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3lc2X7SpEem4MK7Gf1Ez8w" name="Call(At)" incoming="_3lc2XbSpEem4MK7Gf1Ez8w">
              <argument xmi:id="_3lc2YLSpEem4MK7Gf1Ez8w" name="Call(At).argument(seq)" incoming="_3lc2W7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2YbSpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2YrSpEem4MK7Gf1Ez8w" value="*"/>
              </argument>
              <argument xmi:id="_3lc2Y7SpEem4MK7Gf1Ez8w" name="Call(At).argument(index)" incoming="_3lc2XrSpEem4MK7Gf1Ez8w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2ZLSpEem4MK7Gf1Ez8w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2ZbSpEem4MK7Gf1Ez8w" value="1"/>
              </argument>
              <result xmi:id="_3lc2ZrSpEem4MK7Gf1Ez8w" name="Call(At).result()" outgoing="_3lc2F7SpEem4MK7Gf1Ez8w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2Z7SpEem4MK7Gf1Ez8w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2aLSpEem4MK7Gf1Ez8w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3lc2abSpEem4MK7Gf1Ez8w" name="Tuple@27915bb6" outgoing="_3lc2XbSpEem4MK7Gf1Ez8w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_3lc2arSpEem4MK7Gf1Ez8w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_3lc2a7SpEem4MK7Gf1Ez8w" name="ReadExtent(StandardOutputChannel).result" outgoing="_3lc2W7SpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2bLSpEem4MK7Gf1Ez8w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2bbSpEem4MK7Gf1Ez8w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3lc2brSpEem4MK7Gf1Ez8w" name="Value(1)">
                <result xmi:id="_3lc2b7SpEem4MK7Gf1Ez8w" name="Value(1).result" outgoing="_3lc2XLSpEem4MK7Gf1Ez8w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lc2cLSpEem4MK7Gf1Ez8w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3lc2cbSpEem4MK7Gf1Ez8w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3lc2crSpEem4MK7Gf1Ez8w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3lc2c7SpEem4MK7Gf1Ez8w" name="Fork(Call(At).argument(index))" incoming="_3lc2XLSpEem4MK7Gf1Ez8w" outgoing="_3lc2XrSpEem4MK7Gf1Ez8w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3lc2E7SpEem4MK7Gf1Ez8w" name="Input(value)" outgoing="_3lc2EbSpEem4MK7Gf1Ez8w" parameter="_3lc2DrSpEem4MK7Gf1Ez8w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3lc2FLSpEem4MK7Gf1Ez8w" name="Fork(value)" incoming="_3lc2EbSpEem4MK7Gf1Ez8w" outgoing="_3lc2ErSpEem4MK7Gf1Ez8w"/>
    </packagedElement>
    <profileApplication xmi:id="_3lc2dLSpEem4MK7Gf1Ez8w">
      <eAnnotations xmi:id="_3lc2dbSpEem4MK7Gf1Ez8w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_3ldZkLSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcMR7SpEem4MK7Gf1Ez8w"/>
  <l2:Create xmi:id="_3ldZkbSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcNVrSpEem4MK7Gf1Ez8w"/>
  <l2:Destroy xmi:id="_3ldZkrSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcLj7SpEem4MK7Gf1Ez8w"/>
  <l2:Destroy xmi:id="_3ldZk7SpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcN8LSpEem4MK7Gf1Ez8w"/>
  <l2:Create xmi:id="_3ldZlLSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcLdbSpEem4MK7Gf1Ez8w"/>
  <l2:Destroy xmi:id="_3ldZlbSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcMTrSpEem4MK7Gf1Ez8w"/>
  <l2:Create xmi:id="_3ldZlrSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcLcbSpEem4MK7Gf1Ez8w"/>
  <l2:Create xmi:id="_3ldZl7SpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcN7LSpEem4MK7Gf1Ez8w"/>
  <l2:Destroy xmi:id="_3ldZmLSpEem4MK7Gf1Ez8w" base_BehavioralFeature="_3lcNVLSpEem4MK7Gf1Ez8w"/>
</xmi:XMI>

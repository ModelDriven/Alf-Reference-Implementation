<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_fu0XQB0pEeWc_bgA3BryYw" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_fu0XQR0pEeWc_bgA3BryYw" name="AssertFalse" node="_fu0XUh0pEeWc_bgA3BryYw _fu0XUx0pEeWc_bgA3BryYw _fu0XVB0pEeWc_bgA3BryYw _fu0XVR0pEeWc_bgA3BryYw _fu0XVh0pEeWc_bgA3BryYw" group="_fu0XVh0pEeWc_bgA3BryYw">
    <elementImport xmi:id="_fu0XQh0pEeWc_bgA3BryYw" alias="" visibility="private">
      <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
    </elementImport>
    <packageImport xmi:id="_fu0XQx0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_fu0XRB0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_fu0XRR0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_fu0XRh0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_fu0XRx0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_fu0XSB0pEeWc_bgA3BryYw" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XSR0pEeWc_bgA3BryYw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XSh0pEeWc_bgA3BryYw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_fu0XSx0pEeWc_bgA3BryYw" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XTB0pEeWc_bgA3BryYw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XTR0pEeWc_bgA3BryYw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XTh0pEeWc_bgA3BryYw" target="_fu0XUx0pEeWc_bgA3BryYw" source="_fu0XUh0pEeWc_bgA3BryYw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XTx0pEeWc_bgA3BryYw" target="_fu0XVR0pEeWc_bgA3BryYw" source="_fu0XVB0pEeWc_bgA3BryYw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XUB0pEeWc_bgA3BryYw" target="_fu0Xdh0pEeWc_bgA3BryYw" source="_fu0XUx0pEeWc_bgA3BryYw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XUR0pEeWc_bgA3BryYw" target="_fu0Xix0pEeWc_bgA3BryYw" source="_fu0XVR0pEeWc_bgA3BryYw"/>
    <structuredNode xmi:id="_fu0XVh0pEeWc_bgA3BryYw" name="Body(AssertFalse)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_fu0XVx0pEeWc_bgA3BryYw" name="ExpressionStatement@29e83049">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XWB0pEeWc_bgA3BryYw" target="_fu0XXB0pEeWc_bgA3BryYw" source="_fu0XeR0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XWR0pEeWc_bgA3BryYw" target="_fu0XXx0pEeWc_bgA3BryYw" source="_fu0XlB0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_fu0XWh0pEeWc_bgA3BryYw" target="_fu0XWx0pEeWc_bgA3BryYw" source="_fu0XYh0pEeWc_bgA3BryYw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0XWx0pEeWc_bgA3BryYw" name="Call(AssertTrue)" incoming="_fu0XWh0pEeWc_bgA3BryYw" behavior="_fu0Xlh0pEeWc_bgA3BryYw">
          <argument xmi:id="_fu0XXB0pEeWc_bgA3BryYw" name="Call(AssertTrue).argument(label)" incoming="_fu0XWB0pEeWc_bgA3BryYw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XXR0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XXh0pEeWc_bgA3BryYw" value="1"/>
          </argument>
          <argument xmi:id="_fu0XXx0pEeWc_bgA3BryYw" name="Call(AssertTrue).argument(condition)" incoming="_fu0XWR0pEeWc_bgA3BryYw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XYB0pEeWc_bgA3BryYw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XYR0pEeWc_bgA3BryYw" value="1"/>
          </argument>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_fu0XYh0pEeWc_bgA3BryYw" name="Tuple@2a58eab5" outgoing="_fu0XWh0pEeWc_bgA3BryYw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XYx0pEeWc_bgA3BryYw" target="_fu0Xcx0pEeWc_bgA3BryYw" source="_fu0Xbh0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XZB0pEeWc_bgA3BryYw" target="_fu0Xgh0pEeWc_bgA3BryYw" source="_fu0Xix0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XZR0pEeWc_bgA3BryYw" target="_fu0XjR0pEeWc_bgA3BryYw" source="_fu0Xix0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XZh0pEeWc_bgA3BryYw" target="_fu0Xkx0pEeWc_bgA3BryYw" source="_fu0XkB0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XZx0pEeWc_bgA3BryYw" target="_fu0XlB0pEeWc_bgA3BryYw" source="_fu0XhR0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XaB0pEeWc_bgA3BryYw" target="_fu0XlR0pEeWc_bgA3BryYw" source="_fu0Xkx0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XaR0pEeWc_bgA3BryYw" target="_fu0XlR0pEeWc_bgA3BryYw" source="_fu0Xkx0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0Xah0pEeWc_bgA3BryYw" target="_fu0XlB0pEeWc_bgA3BryYw" source="_fu0XlR0pEeWc_bgA3BryYw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_fu0Xax0pEeWc_bgA3BryYw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XbB0pEeWc_bgA3BryYw" target="_fu0XiB0pEeWc_bgA3BryYw" source="_fu0XfR0pEeWc_bgA3BryYw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fu0XbR0pEeWc_bgA3BryYw" name="Value(&quot;! &quot;)">
            <result xmi:id="_fu0Xbh0pEeWc_bgA3BryYw" name="Value(&quot;! &quot;).result" outgoing="_fu0XYx0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xbx0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XcB0pEeWc_bgA3BryYw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralString" xmi:id="_fu0XcR0pEeWc_bgA3BryYw" value="! ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0Xch0pEeWc_bgA3BryYw" name="Call(Concat)">
            <argument xmi:id="_fu0Xcx0pEeWc_bgA3BryYw" name="Call(Concat).argument(x)" incoming="_fu0XYx0pEeWc_bgA3BryYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XdB0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XdR0pEeWc_bgA3BryYw" value="1"/>
            </argument>
            <argument xmi:id="_fu0Xdh0pEeWc_bgA3BryYw" name="Call(Concat).argument(y)" incoming="_fu0XUB0pEeWc_bgA3BryYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xdx0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XeB0pEeWc_bgA3BryYw" value="1"/>
            </argument>
            <result xmi:id="_fu0XeR0pEeWc_bgA3BryYw" name="Call(Concat).result(result)" outgoing="_fu0XWB0pEeWc_bgA3BryYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xeh0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xex0pEeWc_bgA3BryYw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fu0XfB0pEeWc_bgA3BryYw" name="Value(false)">
            <result xmi:id="_fu0XfR0pEeWc_bgA3BryYw" name="Value(false).result" outgoing="_fu0XbB0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xfh0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xfx0pEeWc_bgA3BryYw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_fu0XgB0pEeWc_bgA3BryYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_fu0XgR0pEeWc_bgA3BryYw" name="Test(==)">
            <first xmi:id="_fu0Xgh0pEeWc_bgA3BryYw" name="Test(==).first" incoming="_fu0XZB0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xgx0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XhB0pEeWc_bgA3BryYw" value="1"/>
            </first>
            <result xmi:id="_fu0XhR0pEeWc_bgA3BryYw" name="Test(==).result" outgoing="_fu0XZx0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xhh0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xhx0pEeWc_bgA3BryYw" value="1"/>
            </result>
            <second xmi:id="_fu0XiB0pEeWc_bgA3BryYw" name="Test(==).second" incoming="_fu0XbB0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XiR0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xih0pEeWc_bgA3BryYw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_fu0Xix0pEeWc_bgA3BryYw" name="Fork(Fork(condition))" incoming="_fu0XUR0pEeWc_bgA3BryYw" outgoing="_fu0XZB0pEeWc_bgA3BryYw _fu0XZR0pEeWc_bgA3BryYw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0XjB0pEeWc_bgA3BryYw" name="Call(NotEmpty)">
            <argument xmi:id="_fu0XjR0pEeWc_bgA3BryYw" name="Call(NotEmpty).argument(seq)" incoming="_fu0XZR0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xjh0pEeWc_bgA3BryYw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xjx0pEeWc_bgA3BryYw" value="*"/>
            </argument>
            <result xmi:id="_fu0XkB0pEeWc_bgA3BryYw" name="Call(NotEmpty).result()" outgoing="_fu0XZh0pEeWc_bgA3BryYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XkR0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xkh0pEeWc_bgA3BryYw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_fu0Xkx0pEeWc_bgA3BryYw" name="Fork(Call(NotEmpty).result())" incoming="_fu0XZh0pEeWc_bgA3BryYw" outgoing="_fu0XaB0pEeWc_bgA3BryYw _fu0XaR0pEeWc_bgA3BryYw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_fu0XlB0pEeWc_bgA3BryYw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_fu0XZx0pEeWc_bgA3BryYw _fu0Xah0pEeWc_bgA3BryYw" outgoing="_fu0XWR0pEeWc_bgA3BryYw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_fu0XlR0pEeWc_bgA3BryYw" name="Decision(Call(NotEmpty).result())" incoming="_fu0XaB0pEeWc_bgA3BryYw _fu0XaR0pEeWc_bgA3BryYw" outgoing="_fu0Xah0pEeWc_bgA3BryYw" decisionInputFlow="_fu0XaR0pEeWc_bgA3BryYw"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_fu0XUh0pEeWc_bgA3BryYw" name="Input(label)" outgoing="_fu0XTh0pEeWc_bgA3BryYw" parameter="_fu0XSB0pEeWc_bgA3BryYw">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_fu0XUx0pEeWc_bgA3BryYw" name="Fork(label)" incoming="_fu0XTh0pEeWc_bgA3BryYw" outgoing="_fu0XUB0pEeWc_bgA3BryYw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_fu0XVB0pEeWc_bgA3BryYw" name="Input(condition)" outgoing="_fu0XTx0pEeWc_bgA3BryYw" parameter="_fu0XSx0pEeWc_bgA3BryYw">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_fu0XVR0pEeWc_bgA3BryYw" name="Fork(condition)" incoming="_fu0XTx0pEeWc_bgA3BryYw" outgoing="_fu0XUR0pEeWc_bgA3BryYw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_fu0Xlh0pEeWc_bgA3BryYw" name="AssertTrue" node="_fu0Xph0pEeWc_bgA3BryYw _fu0Xpx0pEeWc_bgA3BryYw _fu0XqB0pEeWc_bgA3BryYw _fu0XqR0pEeWc_bgA3BryYw _fu0Xqh0pEeWc_bgA3BryYw" group="_fu0Xqh0pEeWc_bgA3BryYw">
    <packageImport xmi:id="_fu0Xlx0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_fu0XmB0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_fu0XmR0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_fu0Xmh0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_fu0Xmx0pEeWc_bgA3BryYw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_fu0XnB0pEeWc_bgA3BryYw" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XnR0pEeWc_bgA3BryYw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xnh0pEeWc_bgA3BryYw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_fu0Xnx0pEeWc_bgA3BryYw" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XoB0pEeWc_bgA3BryYw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XoR0pEeWc_bgA3BryYw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0Xoh0pEeWc_bgA3BryYw" target="_fu0Xpx0pEeWc_bgA3BryYw" source="_fu0Xph0pEeWc_bgA3BryYw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0Xox0pEeWc_bgA3BryYw" target="_fu0XqR0pEeWc_bgA3BryYw" source="_fu0XqB0pEeWc_bgA3BryYw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XpB0pEeWc_bgA3BryYw" target="_fu0XxR0pEeWc_bgA3BryYw" source="_fu0XqR0pEeWc_bgA3BryYw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XpR0pEeWc_bgA3BryYw" target="_fu0X7B0pEeWc_bgA3BryYw" source="_fu0Xpx0pEeWc_bgA3BryYw"/>
    <structuredNode xmi:id="_fu0Xqh0pEeWc_bgA3BryYw" name="Body(AssertTrue)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_fu0Xqx0pEeWc_bgA3BryYw" name="IfStatement@699d4a7c">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XrB0pEeWc_bgA3BryYw" target="_fu0XvB0pEeWc_bgA3BryYw" source="_fu0XxR0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XrR0pEeWc_bgA3BryYw" target="_fu0Xxx0pEeWc_bgA3BryYw" source="_fu0XxR0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0Xrh0pEeWc_bgA3BryYw" target="_fu0XzR0pEeWc_bgA3BryYw" source="_fu0Xyh0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0Xrx0pEeWc_bgA3BryYw" target="_fu0Xzh0pEeWc_bgA3BryYw" source="_fu0Xvx0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XsB0pEeWc_bgA3BryYw" target="_fu0Xzx0pEeWc_bgA3BryYw" source="_fu0XzR0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XsR0pEeWc_bgA3BryYw" target="_fu0Xzx0pEeWc_bgA3BryYw" source="_fu0XzR0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0Xsh0pEeWc_bgA3BryYw" target="_fu0Xzh0pEeWc_bgA3BryYw" source="_fu0Xzx0pEeWc_bgA3BryYw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_fu0Xsx0pEeWc_bgA3BryYw" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XtB0pEeWc_bgA3BryYw" target="_fu0Xwh0pEeWc_bgA3BryYw" source="_fu0Xtx0pEeWc_bgA3BryYw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0XtR0pEeWc_bgA3BryYw" target="_fu0X0R0pEeWc_bgA3BryYw" source="_fu0Xzh0pEeWc_bgA3BryYw"/>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fu0Xth0pEeWc_bgA3BryYw" name="Value(true)">
          <result xmi:id="_fu0Xtx0pEeWc_bgA3BryYw" name="Value(true).result" outgoing="_fu0XtB0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XuB0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XuR0pEeWc_bgA3BryYw" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_fu0Xuh0pEeWc_bgA3BryYw" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_fu0Xux0pEeWc_bgA3BryYw" name="Test(==)">
          <first xmi:id="_fu0XvB0pEeWc_bgA3BryYw" name="Test(==).first" incoming="_fu0XrB0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XvR0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0Xvh0pEeWc_bgA3BryYw" value="1"/>
          </first>
          <result xmi:id="_fu0Xvx0pEeWc_bgA3BryYw" name="Test(==).result" outgoing="_fu0Xrx0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XwB0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XwR0pEeWc_bgA3BryYw" value="1"/>
          </result>
          <second xmi:id="_fu0Xwh0pEeWc_bgA3BryYw" name="Test(==).second" incoming="_fu0XtB0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xwx0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XxB0pEeWc_bgA3BryYw" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_fu0XxR0pEeWc_bgA3BryYw" name="Fork(Fork(condition))" incoming="_fu0XpB0pEeWc_bgA3BryYw" outgoing="_fu0XrB0pEeWc_bgA3BryYw _fu0XrR0pEeWc_bgA3BryYw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0Xxh0pEeWc_bgA3BryYw" name="Call(NotEmpty)">
          <argument xmi:id="_fu0Xxx0pEeWc_bgA3BryYw" name="Call(NotEmpty).argument(seq)" incoming="_fu0XrR0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0XyB0pEeWc_bgA3BryYw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XyR0pEeWc_bgA3BryYw" value="*"/>
          </argument>
          <result xmi:id="_fu0Xyh0pEeWc_bgA3BryYw" name="Call(NotEmpty).result()" outgoing="_fu0Xrh0pEeWc_bgA3BryYw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0Xyx0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0XzB0pEeWc_bgA3BryYw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_fu0XzR0pEeWc_bgA3BryYw" name="Fork(Call(NotEmpty).result())" incoming="_fu0Xrh0pEeWc_bgA3BryYw" outgoing="_fu0XsB0pEeWc_bgA3BryYw _fu0XsR0pEeWc_bgA3BryYw"/>
        <node xmi:type="uml:MergeNode" xmi:id="_fu0Xzh0pEeWc_bgA3BryYw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_fu0Xrx0pEeWc_bgA3BryYw _fu0Xsh0pEeWc_bgA3BryYw" outgoing="_fu0XtR0pEeWc_bgA3BryYw"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_fu0Xzx0pEeWc_bgA3BryYw" name="Decision(Call(NotEmpty).result())" incoming="_fu0XsB0pEeWc_bgA3BryYw _fu0XsR0pEeWc_bgA3BryYw" outgoing="_fu0Xsh0pEeWc_bgA3BryYw" decisionInputFlow="_fu0XsR0pEeWc_bgA3BryYw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0X0B0pEeWc_bgA3BryYw" name="Call(Not)">
          <argument xmi:id="_fu0X0R0pEeWc_bgA3BryYw" name="Call(Not).argument(x)" incoming="_fu0XtR0pEeWc_bgA3BryYw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X0h0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X0x0pEeWc_bgA3BryYw" value="1"/>
          </argument>
          <result xmi:id="_fu0X1B0pEeWc_bgA3BryYw" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X1R0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X1h0pEeWc_bgA3BryYw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_fu0X1x0pEeWc_bgA3BryYw" name="ExpressionStatement@4dee8226">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0X2B0pEeWc_bgA3BryYw" target="_fu0X2x0pEeWc_bgA3BryYw" source="_fu0X7x0pEeWc_bgA3BryYw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_fu0X2R0pEeWc_bgA3BryYw" target="_fu0X2h0pEeWc_bgA3BryYw" source="_fu0X4R0pEeWc_bgA3BryYw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0X2h0pEeWc_bgA3BryYw" name="Call(WriteLine)" incoming="_fu0X2R0pEeWc_bgA3BryYw">
            <argument xmi:id="_fu0X2x0pEeWc_bgA3BryYw" name="Call(WriteLine).argument(value)" incoming="_fu0X2B0pEeWc_bgA3BryYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X3B0pEeWc_bgA3BryYw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X3R0pEeWc_bgA3BryYw" value="1"/>
            </argument>
            <result xmi:id="_fu0X3h0pEeWc_bgA3BryYw" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X3x0pEeWc_bgA3BryYw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X4B0pEeWc_bgA3BryYw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_fu0X4R0pEeWc_bgA3BryYw" name="Tuple@7ba913d7" outgoing="_fu0X2R0pEeWc_bgA3BryYw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_fu0X4h0pEeWc_bgA3BryYw" target="_fu0X6R0pEeWc_bgA3BryYw" source="_fu0X5B0pEeWc_bgA3BryYw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fu0X4x0pEeWc_bgA3BryYw" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_fu0X5B0pEeWc_bgA3BryYw" name="Value(&quot;FAILED: &quot;).result" outgoing="_fu0X4h0pEeWc_bgA3BryYw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X5R0pEeWc_bgA3BryYw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X5h0pEeWc_bgA3BryYw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_fu0X5x0pEeWc_bgA3BryYw" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_fu0X6B0pEeWc_bgA3BryYw" name="Call(Concat)">
              <argument xmi:id="_fu0X6R0pEeWc_bgA3BryYw" name="Call(Concat).argument(x)" incoming="_fu0X4h0pEeWc_bgA3BryYw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X6h0pEeWc_bgA3BryYw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X6x0pEeWc_bgA3BryYw" value="1"/>
              </argument>
              <argument xmi:id="_fu0X7B0pEeWc_bgA3BryYw" name="Call(Concat).argument(y)" incoming="_fu0XpR0pEeWc_bgA3BryYw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X7R0pEeWc_bgA3BryYw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X7h0pEeWc_bgA3BryYw" value="1"/>
              </argument>
              <result xmi:id="_fu0X7x0pEeWc_bgA3BryYw" name="Call(Concat).result(result)" outgoing="_fu0X2B0pEeWc_bgA3BryYw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X8B0pEeWc_bgA3BryYw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X8R0pEeWc_bgA3BryYw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fu0X8h0pEeWc_bgA3BryYw" name="Value(true)">
          <result xmi:id="_fu0X8x0pEeWc_bgA3BryYw" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fu0X9B0pEeWc_bgA3BryYw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fu0X9R0pEeWc_bgA3BryYw" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_fu0X9h0pEeWc_bgA3BryYw" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_fu0X9x0pEeWc_bgA3BryYw" body="_fu0X1x0pEeWc_bgA3BryYw" decider="_fu0X1B0pEeWc_bgA3BryYw" successorClause="_fu0X-B0pEeWc_bgA3BryYw" test="_fu0Xth0pEeWc_bgA3BryYw _fu0Xux0pEeWc_bgA3BryYw _fu0Xxh0pEeWc_bgA3BryYw _fu0X0B0pEeWc_bgA3BryYw"/>
        <clause xmi:id="_fu0X-B0pEeWc_bgA3BryYw" decider="_fu0X8x0pEeWc_bgA3BryYw" predecessorClause="_fu0X9x0pEeWc_bgA3BryYw" test="_fu0X8h0pEeWc_bgA3BryYw"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_fu0Xph0pEeWc_bgA3BryYw" name="Input(label)" outgoing="_fu0Xoh0pEeWc_bgA3BryYw" parameter="_fu0XnB0pEeWc_bgA3BryYw">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_fu0Xpx0pEeWc_bgA3BryYw" name="Fork(label)" incoming="_fu0Xoh0pEeWc_bgA3BryYw" outgoing="_fu0XpR0pEeWc_bgA3BryYw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_fu0XqB0pEeWc_bgA3BryYw" name="Input(condition)" outgoing="_fu0Xox0pEeWc_bgA3BryYw" parameter="_fu0Xnx0pEeWc_bgA3BryYw">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_fu0XqR0pEeWc_bgA3BryYw" name="Fork(condition)" incoming="_fu0Xox0pEeWc_bgA3BryYw" outgoing="_fu0XpB0pEeWc_bgA3BryYw"/>
  </packagedElement>
  <profileApplication xmi:id="_fu0X-R0pEeWc_bgA3BryYw">
    <eAnnotations xmi:id="_fu0X-h0pEeWc_bgA3BryYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

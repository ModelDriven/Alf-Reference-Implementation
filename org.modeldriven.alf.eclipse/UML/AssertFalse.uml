<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_y8UMAJKyEeSxfoZP3kXR8Q" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_y8UMAZKyEeSxfoZP3kXR8Q" name="AssertFalse" node="_y8UMEpKyEeSxfoZP3kXR8Q _y8UME5KyEeSxfoZP3kXR8Q _y8UMFJKyEeSxfoZP3kXR8Q _y8UMFZKyEeSxfoZP3kXR8Q _y8UMFpKyEeSxfoZP3kXR8Q" group="_y8UMFpKyEeSxfoZP3kXR8Q">
    <elementImport xmi:id="_y8UMApKyEeSxfoZP3kXR8Q" alias="" visibility="private">
      <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
    </elementImport>
    <packageImport xmi:id="_y8UMA5KyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_y8UMBJKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_y8UMBZKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_y8UMBpKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_y8UMB5KyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_y8UMCJKyEeSxfoZP3kXR8Q" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMCZKyEeSxfoZP3kXR8Q" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMCpKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_y8UMC5KyEeSxfoZP3kXR8Q" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMDJKyEeSxfoZP3kXR8Q"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMDZKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMDpKyEeSxfoZP3kXR8Q" target="_y8UME5KyEeSxfoZP3kXR8Q" source="_y8UMEpKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMD5KyEeSxfoZP3kXR8Q" target="_y8UMFZKyEeSxfoZP3kXR8Q" source="_y8UMFJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMEJKyEeSxfoZP3kXR8Q" target="_y8UMNpKyEeSxfoZP3kXR8Q" source="_y8UME5KyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMEZKyEeSxfoZP3kXR8Q" target="_y8UMS5KyEeSxfoZP3kXR8Q" source="_y8UMFZKyEeSxfoZP3kXR8Q"/>
    <structuredNode xmi:id="_y8UMFpKyEeSxfoZP3kXR8Q" name="Body(AssertFalse)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_y8UMF5KyEeSxfoZP3kXR8Q" name="ExpressionStatement@4a161412">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMGJKyEeSxfoZP3kXR8Q" target="_y8UMHJKyEeSxfoZP3kXR8Q" source="_y8UMOZKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMGZKyEeSxfoZP3kXR8Q" target="_y8UMH5KyEeSxfoZP3kXR8Q" source="_y8UMVJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_y8UMGpKyEeSxfoZP3kXR8Q" target="_y8UMG5KyEeSxfoZP3kXR8Q" source="_y8UMIpKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UMG5KyEeSxfoZP3kXR8Q" name="Call(AssertTrue)" incoming="_y8UMGpKyEeSxfoZP3kXR8Q" behavior="_y8UMVpKyEeSxfoZP3kXR8Q">
          <argument xmi:id="_y8UMHJKyEeSxfoZP3kXR8Q" name="Call(AssertTrue).argument(label)" incoming="_y8UMGJKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMHZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMHpKyEeSxfoZP3kXR8Q" value="1"/>
          </argument>
          <argument xmi:id="_y8UMH5KyEeSxfoZP3kXR8Q" name="Call(AssertTrue).argument(condition)" incoming="_y8UMGZKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMIJKyEeSxfoZP3kXR8Q"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMIZKyEeSxfoZP3kXR8Q" value="1"/>
          </argument>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_y8UMIpKyEeSxfoZP3kXR8Q" name="Tuple@57b4de6b" outgoing="_y8UMGpKyEeSxfoZP3kXR8Q">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMI5KyEeSxfoZP3kXR8Q" target="_y8UMM5KyEeSxfoZP3kXR8Q" source="_y8UMLpKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMJJKyEeSxfoZP3kXR8Q" target="_y8UMQpKyEeSxfoZP3kXR8Q" source="_y8UMS5KyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMJZKyEeSxfoZP3kXR8Q" target="_y8UMTZKyEeSxfoZP3kXR8Q" source="_y8UMS5KyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMJpKyEeSxfoZP3kXR8Q" target="_y8UMU5KyEeSxfoZP3kXR8Q" source="_y8UMUJKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMJ5KyEeSxfoZP3kXR8Q" target="_y8UMVJKyEeSxfoZP3kXR8Q" source="_y8UMRZKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMKJKyEeSxfoZP3kXR8Q" target="_y8UMVZKyEeSxfoZP3kXR8Q" source="_y8UMU5KyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMKZKyEeSxfoZP3kXR8Q" target="_y8UMVZKyEeSxfoZP3kXR8Q" source="_y8UMU5KyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMKpKyEeSxfoZP3kXR8Q" target="_y8UMVJKyEeSxfoZP3kXR8Q" source="_y8UMVZKyEeSxfoZP3kXR8Q">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_y8UMK5KyEeSxfoZP3kXR8Q" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMLJKyEeSxfoZP3kXR8Q" target="_y8UMSJKyEeSxfoZP3kXR8Q" source="_y8UMPZKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y8UMLZKyEeSxfoZP3kXR8Q" name="Value(&quot;! &quot;)">
            <result xmi:id="_y8UMLpKyEeSxfoZP3kXR8Q" name="Value(&quot;! &quot;).result" outgoing="_y8UMI5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UML5KyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMMJKyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <value xmi:type="uml:LiteralString" xmi:id="_y8UMMZKyEeSxfoZP3kXR8Q" value="! ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UMMpKyEeSxfoZP3kXR8Q" name="Call(Concat)">
            <argument xmi:id="_y8UMM5KyEeSxfoZP3kXR8Q" name="Call(Concat).argument(x)" incoming="_y8UMI5KyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMNJKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMNZKyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
            <argument xmi:id="_y8UMNpKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(y)" incoming="_y8UMEJKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMN5KyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMOJKyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
            <result xmi:id="_y8UMOZKyEeSxfoZP3kXR8Q" name="Call(Concat).result(result)" outgoing="_y8UMGJKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMOpKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMO5KyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y8UMPJKyEeSxfoZP3kXR8Q" name="Value(false)">
            <result xmi:id="_y8UMPZKyEeSxfoZP3kXR8Q" name="Value(false).result" outgoing="_y8UMLJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMPpKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMP5KyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_y8UMQJKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_y8UMQZKyEeSxfoZP3kXR8Q" name="Test(==)">
            <first xmi:id="_y8UMQpKyEeSxfoZP3kXR8Q" name="Test(==).first" incoming="_y8UMJJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMQ5KyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMRJKyEeSxfoZP3kXR8Q" value="1"/>
            </first>
            <result xmi:id="_y8UMRZKyEeSxfoZP3kXR8Q" name="Test(==).result" outgoing="_y8UMJ5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMRpKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMR5KyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <second xmi:id="_y8UMSJKyEeSxfoZP3kXR8Q" name="Test(==).second" incoming="_y8UMLJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMSZKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMSpKyEeSxfoZP3kXR8Q" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_y8UMS5KyEeSxfoZP3kXR8Q" name="Fork(Fork(condition))" incoming="_y8UMEZKyEeSxfoZP3kXR8Q" outgoing="_y8UMJJKyEeSxfoZP3kXR8Q _y8UMJZKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UMTJKyEeSxfoZP3kXR8Q" name="Call(NotEmpty)">
            <argument xmi:id="_y8UMTZKyEeSxfoZP3kXR8Q" name="Call(NotEmpty).argument(seq)" incoming="_y8UMJZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMTpKyEeSxfoZP3kXR8Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMT5KyEeSxfoZP3kXR8Q" value="*"/>
            </argument>
            <result xmi:id="_y8UMUJKyEeSxfoZP3kXR8Q" name="Call(NotEmpty).result()" outgoing="_y8UMJpKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMUZKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMUpKyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_y8UMU5KyEeSxfoZP3kXR8Q" name="Fork(Call(NotEmpty).result())" incoming="_y8UMJpKyEeSxfoZP3kXR8Q" outgoing="_y8UMKJKyEeSxfoZP3kXR8Q _y8UMKZKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:MergeNode" xmi:id="_y8UMVJKyEeSxfoZP3kXR8Q" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_y8UMJ5KyEeSxfoZP3kXR8Q _y8UMKpKyEeSxfoZP3kXR8Q" outgoing="_y8UMGZKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_y8UMVZKyEeSxfoZP3kXR8Q" name="Decision(Call(NotEmpty).result())" incoming="_y8UMKJKyEeSxfoZP3kXR8Q _y8UMKZKyEeSxfoZP3kXR8Q" outgoing="_y8UMKpKyEeSxfoZP3kXR8Q" decisionInputFlow="_y8UMKZKyEeSxfoZP3kXR8Q"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y8UMEpKyEeSxfoZP3kXR8Q" name="Input(label)" outgoing="_y8UMDpKyEeSxfoZP3kXR8Q" parameter="_y8UMCJKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y8UME5KyEeSxfoZP3kXR8Q" name="Fork(label)" incoming="_y8UMDpKyEeSxfoZP3kXR8Q" outgoing="_y8UMEJKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y8UMFJKyEeSxfoZP3kXR8Q" name="Input(condition)" outgoing="_y8UMD5KyEeSxfoZP3kXR8Q" parameter="_y8UMC5KyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y8UMFZKyEeSxfoZP3kXR8Q" name="Fork(condition)" incoming="_y8UMD5KyEeSxfoZP3kXR8Q" outgoing="_y8UMEZKyEeSxfoZP3kXR8Q"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_y8UMVpKyEeSxfoZP3kXR8Q" name="AssertTrue" node="_y8UMZpKyEeSxfoZP3kXR8Q _y8UMZ5KyEeSxfoZP3kXR8Q _y8UMaJKyEeSxfoZP3kXR8Q _y8UMaZKyEeSxfoZP3kXR8Q _y8UMapKyEeSxfoZP3kXR8Q" group="_y8UMapKyEeSxfoZP3kXR8Q">
    <packageImport xmi:id="_y8UMV5KyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_y8UMWJKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_y8UMWZKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_y8UMWpKyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_y8UMW5KyEeSxfoZP3kXR8Q" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_y8UMXJKyEeSxfoZP3kXR8Q" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMXZKyEeSxfoZP3kXR8Q" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMXpKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_y8UMX5KyEeSxfoZP3kXR8Q" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UMYJKyEeSxfoZP3kXR8Q"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UMYZKyEeSxfoZP3kXR8Q" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMYpKyEeSxfoZP3kXR8Q" target="_y8UMZ5KyEeSxfoZP3kXR8Q" source="_y8UMZpKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMY5KyEeSxfoZP3kXR8Q" target="_y8UMaZKyEeSxfoZP3kXR8Q" source="_y8UMaJKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMZJKyEeSxfoZP3kXR8Q" target="_y8UzJpKyEeSxfoZP3kXR8Q" source="_y8UMaZKyEeSxfoZP3kXR8Q"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMZZKyEeSxfoZP3kXR8Q" target="_y8UzTZKyEeSxfoZP3kXR8Q" source="_y8UMZ5KyEeSxfoZP3kXR8Q"/>
    <structuredNode xmi:id="_y8UMapKyEeSxfoZP3kXR8Q" name="Body(AssertTrue)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_y8UMa5KyEeSxfoZP3kXR8Q" name="IfStatement@1614c1e2">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMbJKyEeSxfoZP3kXR8Q" target="_y8UzHZKyEeSxfoZP3kXR8Q" source="_y8UzJpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMbZKyEeSxfoZP3kXR8Q" target="_y8UzKJKyEeSxfoZP3kXR8Q" source="_y8UzJpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UMbpKyEeSxfoZP3kXR8Q" target="_y8UzLpKyEeSxfoZP3kXR8Q" source="_y8UzK5KyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzEJKyEeSxfoZP3kXR8Q" target="_y8UzL5KyEeSxfoZP3kXR8Q" source="_y8UzIJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzEZKyEeSxfoZP3kXR8Q" target="_y8UzMJKyEeSxfoZP3kXR8Q" source="_y8UzLpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzEpKyEeSxfoZP3kXR8Q" target="_y8UzMJKyEeSxfoZP3kXR8Q" source="_y8UzLpKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzE5KyEeSxfoZP3kXR8Q" target="_y8UzL5KyEeSxfoZP3kXR8Q" source="_y8UzMJKyEeSxfoZP3kXR8Q">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_y8UzFJKyEeSxfoZP3kXR8Q" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzFZKyEeSxfoZP3kXR8Q" target="_y8UzI5KyEeSxfoZP3kXR8Q" source="_y8UzGJKyEeSxfoZP3kXR8Q"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzFpKyEeSxfoZP3kXR8Q" target="_y8UzMpKyEeSxfoZP3kXR8Q" source="_y8UzL5KyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y8UzF5KyEeSxfoZP3kXR8Q" name="Value(true)">
          <result xmi:id="_y8UzGJKyEeSxfoZP3kXR8Q" name="Value(true).result" outgoing="_y8UzFZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzGZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzGpKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_y8UzG5KyEeSxfoZP3kXR8Q" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_y8UzHJKyEeSxfoZP3kXR8Q" name="Test(==)">
          <first xmi:id="_y8UzHZKyEeSxfoZP3kXR8Q" name="Test(==).first" incoming="_y8UMbJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzHpKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzH5KyEeSxfoZP3kXR8Q" value="1"/>
          </first>
          <result xmi:id="_y8UzIJKyEeSxfoZP3kXR8Q" name="Test(==).result" outgoing="_y8UzEJKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzIZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzIpKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <second xmi:id="_y8UzI5KyEeSxfoZP3kXR8Q" name="Test(==).second" incoming="_y8UzFZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzJJKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzJZKyEeSxfoZP3kXR8Q" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_y8UzJpKyEeSxfoZP3kXR8Q" name="Fork(Fork(condition))" incoming="_y8UMZJKyEeSxfoZP3kXR8Q" outgoing="_y8UMbJKyEeSxfoZP3kXR8Q _y8UMbZKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UzJ5KyEeSxfoZP3kXR8Q" name="Call(NotEmpty)">
          <argument xmi:id="_y8UzKJKyEeSxfoZP3kXR8Q" name="Call(NotEmpty).argument(seq)" incoming="_y8UMbZKyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzKZKyEeSxfoZP3kXR8Q"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzKpKyEeSxfoZP3kXR8Q" value="*"/>
          </argument>
          <result xmi:id="_y8UzK5KyEeSxfoZP3kXR8Q" name="Call(NotEmpty).result()" outgoing="_y8UMbpKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzLJKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzLZKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_y8UzLpKyEeSxfoZP3kXR8Q" name="Fork(Call(NotEmpty).result())" incoming="_y8UMbpKyEeSxfoZP3kXR8Q" outgoing="_y8UzEZKyEeSxfoZP3kXR8Q _y8UzEpKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:MergeNode" xmi:id="_y8UzL5KyEeSxfoZP3kXR8Q" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_y8UzEJKyEeSxfoZP3kXR8Q _y8UzE5KyEeSxfoZP3kXR8Q" outgoing="_y8UzFpKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_y8UzMJKyEeSxfoZP3kXR8Q" name="Decision(Call(NotEmpty).result())" incoming="_y8UzEZKyEeSxfoZP3kXR8Q _y8UzEpKyEeSxfoZP3kXR8Q" outgoing="_y8UzE5KyEeSxfoZP3kXR8Q" decisionInputFlow="_y8UzEpKyEeSxfoZP3kXR8Q"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UzMZKyEeSxfoZP3kXR8Q" name="Call(Not)">
          <argument xmi:id="_y8UzMpKyEeSxfoZP3kXR8Q" name="Call(Not).argument(x)" incoming="_y8UzFpKyEeSxfoZP3kXR8Q">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzM5KyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzNJKyEeSxfoZP3kXR8Q" value="1"/>
          </argument>
          <result xmi:id="_y8UzNZKyEeSxfoZP3kXR8Q" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzNpKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzN5KyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_y8UzOJKyEeSxfoZP3kXR8Q" name="ExpressionStatement@15b81ee6">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzOZKyEeSxfoZP3kXR8Q" target="_y8UzPJKyEeSxfoZP3kXR8Q" source="_y8UzUJKyEeSxfoZP3kXR8Q"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_y8UzOpKyEeSxfoZP3kXR8Q" target="_y8UzO5KyEeSxfoZP3kXR8Q" source="_y8UzQpKyEeSxfoZP3kXR8Q"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UzO5KyEeSxfoZP3kXR8Q" name="Call(WriteLine)" incoming="_y8UzOpKyEeSxfoZP3kXR8Q">
            <argument xmi:id="_y8UzPJKyEeSxfoZP3kXR8Q" name="Call(WriteLine).argument(value)" incoming="_y8UzOZKyEeSxfoZP3kXR8Q">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzPZKyEeSxfoZP3kXR8Q" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzPpKyEeSxfoZP3kXR8Q" value="1"/>
            </argument>
            <result xmi:id="_y8UzP5KyEeSxfoZP3kXR8Q" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzQJKyEeSxfoZP3kXR8Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzQZKyEeSxfoZP3kXR8Q" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_y8UzQpKyEeSxfoZP3kXR8Q" name="Tuple@76416019" outgoing="_y8UzOpKyEeSxfoZP3kXR8Q">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_y8UzQ5KyEeSxfoZP3kXR8Q" target="_y8UzSpKyEeSxfoZP3kXR8Q" source="_y8UzRZKyEeSxfoZP3kXR8Q"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y8UzRJKyEeSxfoZP3kXR8Q" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_y8UzRZKyEeSxfoZP3kXR8Q" name="Value(&quot;FAILED: &quot;).result" outgoing="_y8UzQ5KyEeSxfoZP3kXR8Q" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzRpKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzR5KyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_y8UzSJKyEeSxfoZP3kXR8Q" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_y8UzSZKyEeSxfoZP3kXR8Q" name="Call(Concat)">
              <argument xmi:id="_y8UzSpKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(x)" incoming="_y8UzQ5KyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzS5KyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzTJKyEeSxfoZP3kXR8Q" value="1"/>
              </argument>
              <argument xmi:id="_y8UzTZKyEeSxfoZP3kXR8Q" name="Call(Concat).argument(y)" incoming="_y8UMZZKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzTpKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzT5KyEeSxfoZP3kXR8Q" value="1"/>
              </argument>
              <result xmi:id="_y8UzUJKyEeSxfoZP3kXR8Q" name="Call(Concat).result(result)" outgoing="_y8UzOZKyEeSxfoZP3kXR8Q">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzUZKyEeSxfoZP3kXR8Q" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzUpKyEeSxfoZP3kXR8Q" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_y8UzU5KyEeSxfoZP3kXR8Q" name="Value(true)">
          <result xmi:id="_y8UzVJKyEeSxfoZP3kXR8Q" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y8UzVZKyEeSxfoZP3kXR8Q" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8UzVpKyEeSxfoZP3kXR8Q" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_y8UzV5KyEeSxfoZP3kXR8Q" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_y8UzWJKyEeSxfoZP3kXR8Q" body="_y8UzOJKyEeSxfoZP3kXR8Q" decider="_y8UzNZKyEeSxfoZP3kXR8Q" successorClause="_y8UzWZKyEeSxfoZP3kXR8Q" test="_y8UzF5KyEeSxfoZP3kXR8Q _y8UzHJKyEeSxfoZP3kXR8Q _y8UzJ5KyEeSxfoZP3kXR8Q _y8UzMZKyEeSxfoZP3kXR8Q"/>
        <clause xmi:id="_y8UzWZKyEeSxfoZP3kXR8Q" decider="_y8UzVJKyEeSxfoZP3kXR8Q" predecessorClause="_y8UzWJKyEeSxfoZP3kXR8Q" test="_y8UzU5KyEeSxfoZP3kXR8Q"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y8UMZpKyEeSxfoZP3kXR8Q" name="Input(label)" outgoing="_y8UMYpKyEeSxfoZP3kXR8Q" parameter="_y8UMXJKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y8UMZ5KyEeSxfoZP3kXR8Q" name="Fork(label)" incoming="_y8UMYpKyEeSxfoZP3kXR8Q" outgoing="_y8UMZZKyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_y8UMaJKyEeSxfoZP3kXR8Q" name="Input(condition)" outgoing="_y8UMY5KyEeSxfoZP3kXR8Q" parameter="_y8UMX5KyEeSxfoZP3kXR8Q"/>
    <node xmi:type="uml:ForkNode" xmi:id="_y8UMaZKyEeSxfoZP3kXR8Q" name="Fork(condition)" incoming="_y8UMY5KyEeSxfoZP3kXR8Q" outgoing="_y8UMZJKyEeSxfoZP3kXR8Q"/>
  </packagedElement>
  <profileApplication xmi:id="_y8UzWpKyEeSxfoZP3kXR8Q">
    <eAnnotations xmi:id="_y8UzW5KyEeSxfoZP3kXR8Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

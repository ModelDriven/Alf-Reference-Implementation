<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_RLvNcOYNEeWt6-AQEw3bRw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_RLvNceYNEeWt6-AQEw3bRw" name="Statements_Accept" visibility="public">
      <packageImport xmi:id="_RLvNcuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLvNc-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLvNdOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLvNdeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLvNduYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_RLvNd-YNEeWt6-AQEw3bRw" general="_RLwdpeYNEeWt6-AQEw3bRw"/>
      <ownedAttribute xmi:id="_RLvNeOYNEeWt6-AQEw3bRw" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNeeYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNeuYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvNe-YNEeWt6-AQEw3bRw" name="Statements_Accept$method$1" specification="_RLvOaOYNEeWt6-AQEw3bRw" node="_RLvNgOYNEeWt6-AQEw3bRw _RLvNgeYNEeWt6-AQEw3bRw" group="_RLvNgeYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLvNfOYNEeWt6-AQEw3bRw" name="" type="_RLvNceYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNfeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNfuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNf-YNEeWt6-AQEw3bRw" target="_RLvNgOYNEeWt6-AQEw3bRw" source="_RLvNoOYNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RLvNgeYNEeWt6-AQEw3bRw" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNguYNEeWt6-AQEw3bRw" target="_RLvNoOYNEeWt6-AQEw3bRw" source="_RLvNneYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvNg-YNEeWt6-AQEw3bRw" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvNhOYNEeWt6-AQEw3bRw" name="ExpressionStatement@18add43d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNheYNEeWt6-AQEw3bRw" target="_RLvNieYNEeWt6-AQEw3bRw" source="_RLvNlOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNhuYNEeWt6-AQEw3bRw" target="_RLvNiOYNEeWt6-AQEw3bRw" source="_RLvNkuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNh-YNEeWt6-AQEw3bRw" target="_RLvNj-YNEeWt6-AQEw3bRw" source="_RLvNmeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RLvNiOYNEeWt6-AQEw3bRw" name="Call(run)" incoming="_RLvNhuYNEeWt6-AQEw3bRw" operation="_RLvObOYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLvNieYNEeWt6-AQEw3bRw" name="Call(run).argument(tester)" incoming="_RLvNheYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNiuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNi-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RLvNjOYNEeWt6-AQEw3bRw" name="Call(run).result()" type="_RLvNceYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNjeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNjuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <target xmi:id="_RLvNj-YNEeWt6-AQEw3bRw" name="Call(run).target" incoming="_RLvNh-YNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNkOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNkeYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvNkuYNEeWt6-AQEw3bRw" name="Tuple@63daad96" outgoing="_RLvNhuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvNk-YNEeWt6-AQEw3bRw" name="Value(null)">
                  <result xmi:id="_RLvNlOYNEeWt6-AQEw3bRw" name="Value(null).result" outgoing="_RLvNheYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNleYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNluYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_RLvNl-YNEeWt6-AQEw3bRw"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvNmOYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RLvNmeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvNh-YNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNmuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNm-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvNnOYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLvNneYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvNguYNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNnuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNn-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLvNoOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLvNguYNEeWt6-AQEw3bRw" outgoing="_RLvNf-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLvNgOYNEeWt6-AQEw3bRw" name="Return" incoming="_RLvNf-YNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" parameter="_RLvNfOYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvNoeYNEeWt6-AQEw3bRw" name="run$method$1" specification="_RLvObOYNEeWt6-AQEw3bRw" node="_RLvNreYNEeWt6-AQEw3bRw _RLvNsOYNEeWt6-AQEw3bRw _RLvNruYNEeWt6-AQEw3bRw _RLvNtuYNEeWt6-AQEw3bRw _RLvNr-YNEeWt6-AQEw3bRw" group="_RLvNsOYNEeWt6-AQEw3bRw _RLvNtuYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLvNouYNEeWt6-AQEw3bRw" name="tester" type="_RLwenuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNo-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNpOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RLvNpeYNEeWt6-AQEw3bRw" name="" type="_RLvNceYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNpuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNp-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNqOYNEeWt6-AQEw3bRw" target="_RLvNsuYNEeWt6-AQEw3bRw" source="_RLvNreYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNqeYNEeWt6-AQEw3bRw" target="_RLvNruYNEeWt6-AQEw3bRw" source="_RLvN8OYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNquYNEeWt6-AQEw3bRw" target="_RLvN9OYNEeWt6-AQEw3bRw" source="_RLvNteYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNq-YNEeWt6-AQEw3bRw" target="_RLvNr-YNEeWt6-AQEw3bRw" source="_RLvNsOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNrOYNEeWt6-AQEw3bRw" target="_RLvNtuYNEeWt6-AQEw3bRw" source="_RLvNr-YNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RLvNsOYNEeWt6-AQEw3bRw" name="Node(Input(tester))" outgoing="_RLvNq-YNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNseYNEeWt6-AQEw3bRw" target="_RLvNteYNEeWt6-AQEw3bRw" source="_RLvNsuYNEeWt6-AQEw3bRw"/>
          <structuredNodeInput xmi:id="_RLvNsuYNEeWt6-AQEw3bRw" name="Input(tester)" incoming="_RLvNqOYNEeWt6-AQEw3bRw" outgoing="_RLvNseYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNs-YNEeWt6-AQEw3bRw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNtOYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_RLvNteYNEeWt6-AQEw3bRw" name="Fork(tester)" incoming="_RLvNseYNEeWt6-AQEw3bRw" outgoing="_RLvNquYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <structuredNode xmi:id="_RLvNtuYNEeWt6-AQEw3bRw" name="Body(run$method$1)" incoming="_RLvNrOYNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNt-YNEeWt6-AQEw3bRw" target="_RLvN8OYNEeWt6-AQEw3bRw" source="_RLvN7eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNuOYNEeWt6-AQEw3bRw" target="_RLvN--YNEeWt6-AQEw3bRw" source="_RLvN8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNueYNEeWt6-AQEw3bRw" target="_RLvNw-YNEeWt6-AQEw3bRw" source="_RLvN-uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNuuYNEeWt6-AQEw3bRw" target="_RLvN-uYNEeWt6-AQEw3bRw" source="_RLvN8eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNu-YNEeWt6-AQEw3bRw" target="_RLvN_-YNEeWt6-AQEw3bRw" source="_RLvN8OYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNvOYNEeWt6-AQEw3bRw" target="_RLvOBuYNEeWt6-AQEw3bRw" source="_RLvOAuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNveYNEeWt6-AQEw3bRw" target="_RLvOEuYNEeWt6-AQEw3bRw" source="_RLvOCeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNvuYNEeWt6-AQEw3bRw" target="_RLvOGOYNEeWt6-AQEw3bRw" source="_RLvODeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNv-YNEeWt6-AQEw3bRw" target="_RLvOHOYNEeWt6-AQEw3bRw" source="_RLvOG-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNwOYNEeWt6-AQEw3bRw" target="_RLvOHOYNEeWt6-AQEw3bRw" source="_RLvOFeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNweYNEeWt6-AQEw3bRw" target="_RLvN8eYNEeWt6-AQEw3bRw" source="_RLvOHOYNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvNwuYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvNw-YNEeWt6-AQEw3bRw" name="Body" incoming="_RLvNueYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvNxOYNEeWt6-AQEw3bRw" name="ExpressionStatement@1f2165de">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNxeYNEeWt6-AQEw3bRw" target="_RLvNx-YNEeWt6-AQEw3bRw" source="_RLvN0eYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLvNxuYNEeWt6-AQEw3bRw" name="SendSignal(Start)" signal="_RLwdkuYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLvNx-YNEeWt6-AQEw3bRw" name="SendSignal(Start).target" incoming="_RLvNxeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvNyOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvNyeYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvNyuYNEeWt6-AQEw3bRw" name="InstanceCreationExpression@20d03f91">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNy-YNEeWt6-AQEw3bRw" target="_RLvN2-YNEeWt6-AQEw3bRw" source="_RLvN3-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNzOYNEeWt6-AQEw3bRw" target="_RLvN1eYNEeWt6-AQEw3bRw" source="_RLvN5OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLvNzeYNEeWt6-AQEw3bRw" target="_RLvN1OYNEeWt6-AQEw3bRw" source="_RLvN4uYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNzuYNEeWt6-AQEw3bRw" target="_RLvN5-YNEeWt6-AQEw3bRw" source="_RLvN2OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvNz-YNEeWt6-AQEw3bRw" target="_RLvN6eYNEeWt6-AQEw3bRw" source="_RLvN5-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvN0OYNEeWt6-AQEw3bRw" target="_RLvN0eYNEeWt6-AQEw3bRw" source="_RLvN5-YNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RLvN0eYNEeWt6-AQEw3bRw" name="Output(Call(TestRunner).result())" incoming="_RLvN0OYNEeWt6-AQEw3bRw" outgoing="_RLvNxeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN0uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN0-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_RLvN1OYNEeWt6-AQEw3bRw" name="Call(TestRunner)" incoming="_RLvNzeYNEeWt6-AQEw3bRw" operation="_RLwdhuYNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RLvN1eYNEeWt6-AQEw3bRw" name="Call(TestRunner).argument(outer)" incoming="_RLvNzOYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN1uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN1-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLvN2OYNEeWt6-AQEw3bRw" name="Call(TestRunner).result()" outgoing="_RLvNzuYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN2eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN2uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <target xmi:id="_RLvN2-YNEeWt6-AQEw3bRw" name="Call(TestRunner).target" incoming="_RLvNy-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN3OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN3eYNEeWt6-AQEw3bRw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_RLvN3uYNEeWt6-AQEw3bRw" name="Create(TestRunner)" classifier="_RLv4Q-YNEeWt6-AQEw3bRw">
                  <result xmi:id="_RLvN3-YNEeWt6-AQEw3bRw" name="Create(TestRunner).result" outgoing="_RLvNy-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN4OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN4eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvN4uYNEeWt6-AQEw3bRw" name="Tuple@4b8eb464" outgoing="_RLvNzeYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvN4-YNEeWt6-AQEw3bRw" name="ReadSelf">
                    <result xmi:id="_RLvN5OYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvNzOYNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN5eYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN5uYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLvN5-YNEeWt6-AQEw3bRw" name="Fork(Call(TestRunner).result())" incoming="_RLvNzuYNEeWt6-AQEw3bRw" outgoing="_RLvNz-YNEeWt6-AQEw3bRw _RLvN0OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_RLvN6OYNEeWt6-AQEw3bRw" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_RLvN6eYNEeWt6-AQEw3bRw" name="Start(TestRunner).object" incoming="_RLvNz-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN6uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN6-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvN7OYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLvN7eYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvNt-YNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN7uYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN7-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLvN8OYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLvNt-YNEeWt6-AQEw3bRw" outgoing="_RLvNqeYNEeWt6-AQEw3bRw _RLvNuOYNEeWt6-AQEw3bRw _RLvNu-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvN8eYNEeWt6-AQEw3bRw" name="Super" incoming="_RLvNweYNEeWt6-AQEw3bRw" outgoing="_RLvNuuYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvN8uYNEeWt6-AQEw3bRw" name="ExpressionStatement@53cab5ff">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLvN8-YNEeWt6-AQEw3bRw" name="Call(Test$method$1)" behavior="_RLwdseYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLvN9OYNEeWt6-AQEw3bRw" name="Call(Test$method$1).argument(tester)" incoming="_RLvNquYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN9eYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN9uYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RLvN9-YNEeWt6-AQEw3bRw" name="Call(Test$method$1).result()" type="_RLwdpeYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN-OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN-eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RLvN-uYNEeWt6-AQEw3bRw" name="Call(Statements_Accept$initialization$1)" incoming="_RLvNuuYNEeWt6-AQEw3bRw" outgoing="_RLvNueYNEeWt6-AQEw3bRw" operation="_RLvOZ-YNEeWt6-AQEw3bRw">
            <target xmi:id="_RLvN--YNEeWt6-AQEw3bRw" name="Call(Statements_Accept$initialization$1).target" incoming="_RLvNuOYNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvN_OYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvN_eYNEeWt6-AQEw3bRw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLvN_uYNEeWt6-AQEw3bRw" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_RLvNeOYNEeWt6-AQEw3bRw">
            <object xmi:id="_RLvN_-YNEeWt6-AQEw3bRw" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_RLvNu-YNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOAOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOAeYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RLvOAuYNEeWt6-AQEw3bRw" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_RLvNvOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOA-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOBOYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLvOBeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RLvOBuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLvNvOYNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOB-YNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOCOYNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RLvOCeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLvNveYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOCuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOC-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvODOYNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RLvODeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLvNvuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvODuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOD-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RLvOEOYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RLvOEeYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RLvOEuYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLvNveYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOE-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOFOYNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RLvOFeYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLvNwOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOFuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOF-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RLvOGOYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLvNvuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOGeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOGuYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RLvOG-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLvNv-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RLvOHOYNEeWt6-AQEw3bRw" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_RLvNv-YNEeWt6-AQEw3bRw _RLvNwOYNEeWt6-AQEw3bRw" outgoing="_RLvNweYNEeWt6-AQEw3bRw" decisionInputFlow="_RLvNwOYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLvNreYNEeWt6-AQEw3bRw" name="Input(tester)" outgoing="_RLvNqOYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" parameter="_RLvNouYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLvNruYNEeWt6-AQEw3bRw" name="Return" incoming="_RLvNqeYNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" parameter="_RLvNpeYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:JoinNode" xmi:id="_RLvNr-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLvNq-YNEeWt6-AQEw3bRw" outgoing="_RLvNrOYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvOHeYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLvOc-YNEeWt6-AQEw3bRw" node="_RLvOHuYNEeWt6-AQEw3bRw" group="_RLvOHuYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLvOHuYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvOH-YNEeWt6-AQEw3bRw" name="Statements_Accept$initialization$1" specification="_RLvOZ-YNEeWt6-AQEw3bRw" node="_RLvOIOYNEeWt6-AQEw3bRw" group="_RLvOIOYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLvOIOYNEeWt6-AQEw3bRw" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOIeYNEeWt6-AQEw3bRw" target="_RLvOMOYNEeWt6-AQEw3bRw" source="_RLvOLeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOIuYNEeWt6-AQEw3bRw" target="_RLvONOYNEeWt6-AQEw3bRw" source="_RLvOMOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOI-YNEeWt6-AQEw3bRw" target="_RLvOP-YNEeWt6-AQEw3bRw" source="_RLvOMOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOJOYNEeWt6-AQEw3bRw" target="_RLvOSeYNEeWt6-AQEw3bRw" source="_RLvOMOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOJeYNEeWt6-AQEw3bRw" target="_RLvOUOYNEeWt6-AQEw3bRw" source="_RLvOTOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOJuYNEeWt6-AQEw3bRw" target="_RLvOXOYNEeWt6-AQEw3bRw" source="_RLvOU-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOJ-YNEeWt6-AQEw3bRw" target="_RLvOYuYNEeWt6-AQEw3bRw" source="_RLvOV-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOKOYNEeWt6-AQEw3bRw" target="_RLvOZuYNEeWt6-AQEw3bRw" source="_RLvOZeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOKeYNEeWt6-AQEw3bRw" target="_RLvOZuYNEeWt6-AQEw3bRw" source="_RLvOX-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOKuYNEeWt6-AQEw3bRw" target="_RLvOMeYNEeWt6-AQEw3bRw" source="_RLvOZuYNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvOK-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvOLOYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLvOLeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvOIeYNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOLuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOL-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLvOMOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLvOIeYNEeWt6-AQEw3bRw" outgoing="_RLvOIuYNEeWt6-AQEw3bRw _RLvOI-YNEeWt6-AQEw3bRw _RLvOJOYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvOMeYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLvOKuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOMuYNEeWt6-AQEw3bRw" target="_RLvON-YNEeWt6-AQEw3bRw" source="_RLvOM-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLvOM-YNEeWt6-AQEw3bRw" name="Call(Test$initialization$1)" outgoing="_RLvOMuYNEeWt6-AQEw3bRw" operation="_RLwelOYNEeWt6-AQEw3bRw">
              <target xmi:id="_RLvONOYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1).target" incoming="_RLvOIuYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvONeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvONuYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvON-YNEeWt6-AQEw3bRw" name="Set(initializationFlag)" incoming="_RLvOMuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOOOYNEeWt6-AQEw3bRw" target="_RLvOReYNEeWt6-AQEw3bRw" source="_RLvOOuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvOOeYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RLvOOuYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLvOOOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOO-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOPOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RLvOPeYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLvOPuYNEeWt6-AQEw3bRw" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_RLvNeOYNEeWt6-AQEw3bRw" isReplaceAll="true">
                <object xmi:id="_RLvOP-YNEeWt6-AQEw3bRw" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_RLvOI-YNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOQOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOQeYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLvOQuYNEeWt6-AQEw3bRw" name="Write(Statements_Accept$initializationFlag$1).result" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOQ-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOROYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:id="_RLvOReYNEeWt6-AQEw3bRw" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_RLvOOOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvORuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOR-YNEeWt6-AQEw3bRw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLvOSOYNEeWt6-AQEw3bRw" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_RLvNeOYNEeWt6-AQEw3bRw">
            <object xmi:id="_RLvOSeYNEeWt6-AQEw3bRw" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_RLvOJOYNEeWt6-AQEw3bRw" type="_RLvNceYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOSuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOS-YNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RLvOTOYNEeWt6-AQEw3bRw" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_RLvOJeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOTeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOTuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLvOT-YNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RLvOUOYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLvOJeYNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOUeYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOUuYNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RLvOU-YNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLvOJuYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOVOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOVeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvOVuYNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RLvOV-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLvOJ-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOWOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOWeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RLvOWuYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RLvOW-YNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RLvOXOYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLvOJuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOXeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOXuYNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RLvOX-YNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLvOKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOYOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOYeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RLvOYuYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLvOJ-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOY-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOZOYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RLvOZeYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLvOKOYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RLvOZuYNEeWt6-AQEw3bRw" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_RLvOKOYNEeWt6-AQEw3bRw _RLvOKeYNEeWt6-AQEw3bRw" outgoing="_RLvOKuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLvOKeYNEeWt6-AQEw3bRw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RLvOZ-YNEeWt6-AQEw3bRw" name="Statements_Accept$initialization$1" visibility="protected" method="_RLvOH-YNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RLvOaOYNEeWt6-AQEw3bRw" name="Statements_Accept" visibility="public" method="_RLvNe-YNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLvOaeYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLvNceYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOauYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOa-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RLvObOYNEeWt6-AQEw3bRw" name="run" visibility="public" method="_RLvNoeYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLvObeYNEeWt6-AQEw3bRw" name="tester" visibility="package" type="_RLwenuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvObuYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOb-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RLvOcOYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLvNceYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOceYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOcuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RLvOc-YNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLvOHeYNEeWt6-AQEw3bRw" redefinedOperation="_RLweneYNEeWt6-AQEw3bRw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RLvOdOYNEeWt6-AQEw3bRw" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_RLvOdeYNEeWt6-AQEw3bRw" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOduYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOd-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvOeOYNEeWt6-AQEw3bRw" name="Super$method$1" specification="_RLvO-OYNEeWt6-AQEw3bRw" node="_RLvOfeYNEeWt6-AQEw3bRw _RLvOfuYNEeWt6-AQEw3bRw" group="_RLvOfuYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLvOeeYNEeWt6-AQEw3bRw" name="" type="_RLvOdOYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOeuYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOe-YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOfOYNEeWt6-AQEw3bRw" target="_RLvOfeYNEeWt6-AQEw3bRw" source="_RLvOj-YNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RLvOfuYNEeWt6-AQEw3bRw" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOf-YNEeWt6-AQEw3bRw" target="_RLvOj-YNEeWt6-AQEw3bRw" source="_RLvOjOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOgOYNEeWt6-AQEw3bRw" target="_RLvOkeYNEeWt6-AQEw3bRw" source="_RLvOj-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOgeYNEeWt6-AQEw3bRw" target="_RLvOiuYNEeWt6-AQEw3bRw" source="_RLvOkOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOguYNEeWt6-AQEw3bRw" target="_RLvOleYNEeWt6-AQEw3bRw" source="_RLvOj-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOg-YNEeWt6-AQEw3bRw" target="_RLvOnOYNEeWt6-AQEw3bRw" source="_RLvOmOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOhOYNEeWt6-AQEw3bRw" target="_RLvOqOYNEeWt6-AQEw3bRw" source="_RLvOn-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOheYNEeWt6-AQEw3bRw" target="_RLvOruYNEeWt6-AQEw3bRw" source="_RLvOo-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOhuYNEeWt6-AQEw3bRw" target="_RLvOsuYNEeWt6-AQEw3bRw" source="_RLvOseYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOh-YNEeWt6-AQEw3bRw" target="_RLvOsuYNEeWt6-AQEw3bRw" source="_RLvOq-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOiOYNEeWt6-AQEw3bRw" target="_RLvOkOYNEeWt6-AQEw3bRw" source="_RLvOsuYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvOieYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvOiuYNEeWt6-AQEw3bRw" name="Body" incoming="_RLvOgeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvOi-YNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLvOjOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvOf-YNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOjeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOjuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLvOj-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLvOf-YNEeWt6-AQEw3bRw" outgoing="_RLvOfOYNEeWt6-AQEw3bRw _RLvOgOYNEeWt6-AQEw3bRw _RLvOguYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLvOkOYNEeWt6-AQEw3bRw" name="Call(Super$initialization$1)" incoming="_RLvOiOYNEeWt6-AQEw3bRw" outgoing="_RLvOgeYNEeWt6-AQEw3bRw" operation="_RLvO9-YNEeWt6-AQEw3bRw">
              <target xmi:id="_RLvOkeYNEeWt6-AQEw3bRw" name="Call(Super$initialization$1).target" incoming="_RLvOgOYNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOkuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOk-YNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLvOlOYNEeWt6-AQEw3bRw" name="Read(Super$initializationFlag$1)" structuralFeature="_RLvOdeYNEeWt6-AQEw3bRw">
              <object xmi:id="_RLvOleYNEeWt6-AQEw3bRw" name="Read(Super$initializationFlag$1).object" incoming="_RLvOguYNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOluYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOl-YNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLvOmOYNEeWt6-AQEw3bRw" name="Read(Super$initializationFlag$1).result" outgoing="_RLvOg-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOmeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOmuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLvOm-YNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLvOnOYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLvOg-YNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOneYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOnuYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLvOn-YNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLvOhOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOoOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOoeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvOouYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLvOo-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLvOheYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOpOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOpeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLvOpuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLvOp-YNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLvOqOYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLvOhOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOqeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOquYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLvOq-YNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLvOh-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOrOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOreYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLvOruYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLvOheYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOr-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOsOYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLvOseYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLvOhuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLvOsuYNEeWt6-AQEw3bRw" name="Decision(Test(Super$initializationFlag$1))" incoming="_RLvOhuYNEeWt6-AQEw3bRw _RLvOh-YNEeWt6-AQEw3bRw" outgoing="_RLvOiOYNEeWt6-AQEw3bRw" decisionInputFlow="_RLvOh-YNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLvOfeYNEeWt6-AQEw3bRw" name="Return" incoming="_RLvOfOYNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" parameter="_RLvOeeYNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvOs-YNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLvO_OYNEeWt6-AQEw3bRw" node="_RLvOtOYNEeWt6-AQEw3bRw" group="_RLvOtOYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLvOtOYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvOteYNEeWt6-AQEw3bRw" name="Super$initialization$1" specification="_RLvO9-YNEeWt6-AQEw3bRw" node="_RLvOtuYNEeWt6-AQEw3bRw" group="_RLvOtuYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLvOtuYNEeWt6-AQEw3bRw" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOt-YNEeWt6-AQEw3bRw" target="_RLvOxeYNEeWt6-AQEw3bRw" source="_RLvOwuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOuOYNEeWt6-AQEw3bRw" target="_RLvOz-YNEeWt6-AQEw3bRw" source="_RLvOxeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOueYNEeWt6-AQEw3bRw" target="_RLvO2eYNEeWt6-AQEw3bRw" source="_RLvOxeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOuuYNEeWt6-AQEw3bRw" target="_RLvO4OYNEeWt6-AQEw3bRw" source="_RLvO3OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOu-YNEeWt6-AQEw3bRw" target="_RLvO7OYNEeWt6-AQEw3bRw" source="_RLvO4-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOvOYNEeWt6-AQEw3bRw" target="_RLvO8uYNEeWt6-AQEw3bRw" source="_RLvO5-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOveYNEeWt6-AQEw3bRw" target="_RLvO9uYNEeWt6-AQEw3bRw" source="_RLvO9eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOvuYNEeWt6-AQEw3bRw" target="_RLvO9uYNEeWt6-AQEw3bRw" source="_RLvO7-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvOv-YNEeWt6-AQEw3bRw" target="_RLvOxuYNEeWt6-AQEw3bRw" source="_RLvO9uYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvOwOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvOweYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLvOwuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvOt-YNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOw-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOxOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLvOxeYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLvOt-YNEeWt6-AQEw3bRw" outgoing="_RLvOuOYNEeWt6-AQEw3bRw _RLvOueYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvOxuYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLvOv-YNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvOx-YNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvOyOYNEeWt6-AQEw3bRw" target="_RLvO1eYNEeWt6-AQEw3bRw" source="_RLvOyuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvOyeYNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RLvOyuYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLvOyOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvOy-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvOzOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RLvOzeYNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLvOzuYNEeWt6-AQEw3bRw" name="Write(Super$initializationFlag$1)" structuralFeature="_RLvOdeYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLvOz-YNEeWt6-AQEw3bRw" name="Write(Super$initializationFlag$1).object" incoming="_RLvOuOYNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO0OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO0eYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLvO0uYNEeWt6-AQEw3bRw" name="Write(Super$initializationFlag$1).result" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO0-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO1OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLvO1eYNEeWt6-AQEw3bRw" name="Write(Super$initializationFlag$1).value" incoming="_RLvOyOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO1uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO1-YNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLvO2OYNEeWt6-AQEw3bRw" name="Read(Super$initializationFlag$1)" structuralFeature="_RLvOdeYNEeWt6-AQEw3bRw">
              <object xmi:id="_RLvO2eYNEeWt6-AQEw3bRw" name="Read(Super$initializationFlag$1).object" incoming="_RLvOueYNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO2uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO2-YNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLvO3OYNEeWt6-AQEw3bRw" name="Read(Super$initializationFlag$1).result" outgoing="_RLvOuuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO3eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO3uYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLvO3-YNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLvO4OYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLvOuuYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO4eYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO4uYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLvO4-YNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLvOu-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO5OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO5eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvO5uYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLvO5-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLvOvOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO6OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO6eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLvO6uYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLvO6-YNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLvO7OYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLvOu-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO7eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO7uYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLvO7-YNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLvOvuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO8OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO8eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLvO8uYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLvOvOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO8-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO9OYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLvO9eYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLvOveYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLvO9uYNEeWt6-AQEw3bRw" name="Decision(Test(Super$initializationFlag$1))" incoming="_RLvOveYNEeWt6-AQEw3bRw _RLvOvuYNEeWt6-AQEw3bRw" outgoing="_RLvOv-YNEeWt6-AQEw3bRw" decisionInputFlow="_RLvOvuYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RLvO9-YNEeWt6-AQEw3bRw" name="Super$initialization$1" visibility="protected" method="_RLvOteYNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RLvO-OYNEeWt6-AQEw3bRw" name="Super" visibility="public" method="_RLvOeOYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLvO-eYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLvOdOYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO-uYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvO--YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RLvO_OYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLvOs-YNEeWt6-AQEw3bRw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RLvO_eYNEeWt6-AQEw3bRw" name="SignalNewArrival" visibility="public">
          <ownedAttribute xmi:id="_RLvO_uYNEeWt6-AQEw3bRw" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvO_-YNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPAOYNEeWt6-AQEw3bRw" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RLvPAeYNEeWt6-AQEw3bRw" name="SignalTermination" visibility="public"/>
        <ownedReception xmi:id="_RLvPAuYNEeWt6-AQEw3bRw" name="SignalTermination" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RLvPA-YNEeWt6-AQEw3bRw" name="MyTest" visibility="private" classifierBehavior="_RLvPI-YNEeWt6-AQEw3bRw" isActive="true">
        <generalization xmi:id="_RLvPBOYNEeWt6-AQEw3bRw" general="_RLvOdOYNEeWt6-AQEw3bRw"/>
        <ownedAttribute xmi:id="_RLvPBeYNEeWt6-AQEw3bRw" name="MyTest$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPBuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPB-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPCOYNEeWt6-AQEw3bRw" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPCeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPCuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPC-YNEeWt6-AQEw3bRw" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPDOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPDeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPDuYNEeWt6-AQEw3bRw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPD-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPEOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPEeYNEeWt6-AQEw3bRw" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPEuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPE-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPFOYNEeWt6-AQEw3bRw" name="arrival" visibility="public" type="_RLvO_eYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPFeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPFuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPF-YNEeWt6-AQEw3bRw" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPGOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPGeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPGuYNEeWt6-AQEw3bRw" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPG-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPHOYNEeWt6-AQEw3bRw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPHeYNEeWt6-AQEw3bRw" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPHuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPH-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLvPIOYNEeWt6-AQEw3bRw" name="tester" visibility="public" type="_RLv4Q-YNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPIeYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPIuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLvPI-YNEeWt6-AQEw3bRw" name="MyTest$classifierBehavior$1" visibility="private" isActive="true" node="_RLvPJOYNEeWt6-AQEw3bRw" group="_RLvPJOYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLvPJOYNEeWt6-AQEw3bRw" name="Body(MyTest$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPJeYNEeWt6-AQEw3bRw" target="_RLvPXuYNEeWt6-AQEw3bRw" source="_RLvPReYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPJuYNEeWt6-AQEw3bRw" target="_RLvPTeYNEeWt6-AQEw3bRw" source="_RLvPQuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPJ-YNEeWt6-AQEw3bRw" target="_RLvPb-YNEeWt6-AQEw3bRw" source="_RLvPTeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPKOYNEeWt6-AQEw3bRw" target="_RLvPtuYNEeWt6-AQEw3bRw" source="_RLv0keYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPKeYNEeWt6-AQEw3bRw" target="_RLvPwOYNEeWt6-AQEw3bRw" source="_RLv0keYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPKuYNEeWt6-AQEw3bRw" target="_RLvPueYNEeWt6-AQEw3bRw" source="_RLvPceYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPK-YNEeWt6-AQEw3bRw" target="_RLv0iuYNEeWt6-AQEw3bRw" source="_RLv0keYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPLOYNEeWt6-AQEw3bRw" target="_RLvPeOYNEeWt6-AQEw3bRw" source="_RLvPb-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPLeYNEeWt6-AQEw3bRw" target="_RLv0q-YNEeWt6-AQEw3bRw" source="_RLv0kuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPLuYNEeWt6-AQEw3bRw" target="_RLv0muYNEeWt6-AQEw3bRw" source="_RLvPeOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPL-YNEeWt6-AQEw3bRw" target="_RLv0vOYNEeWt6-AQEw3bRw" source="_RLv0muYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPMOYNEeWt6-AQEw3bRw" target="_RLv0weYNEeWt6-AQEw3bRw" source="_RLv0vOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPMeYNEeWt6-AQEw3bRw" target="_RLv03OYNEeWt6-AQEw3bRw" source="_RLv0xOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPMuYNEeWt6-AQEw3bRw" target="_RLv0y-YNEeWt6-AQEw3bRw" source="_RLv0weYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPM-YNEeWt6-AQEw3bRw" target="_RLv1seYNEeWt6-AQEw3bRw" source="_RLv0kuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPNOYNEeWt6-AQEw3bRw" target="_RLv1tOYNEeWt6-AQEw3bRw" source="_RLv0xOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPNeYNEeWt6-AQEw3bRw" target="_RLv1t-YNEeWt6-AQEw3bRw" source="_RLvPReYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPNuYNEeWt6-AQEw3bRw" target="_RLv07eYNEeWt6-AQEw3bRw" source="_RLv0y-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPN-YNEeWt6-AQEw3bRw" target="_RLv2q-YNEeWt6-AQEw3bRw" source="_RLv0kuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPOOYNEeWt6-AQEw3bRw" target="_RLv2w-YNEeWt6-AQEw3bRw" source="_RLv2uuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPOeYNEeWt6-AQEw3bRw" target="_RLv2seYNEeWt6-AQEw3bRw" source="_RLv0xOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPOuYNEeWt6-AQEw3bRw" target="_RLv2tOYNEeWt6-AQEw3bRw" source="_RLvPReYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPO-YNEeWt6-AQEw3bRw" target="_RLv2EeYNEeWt6-AQEw3bRw" source="_RLv2MOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPPOYNEeWt6-AQEw3bRw" target="_RLv2A-YNEeWt6-AQEw3bRw" source="_RLv07eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPPeYNEeWt6-AQEw3bRw" target="_RLv2xOYNEeWt6-AQEw3bRw" source="_RLv2A-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPPuYNEeWt6-AQEw3bRw" target="_RLv3LeYNEeWt6-AQEw3bRw" source="_RLv2xOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPP-YNEeWt6-AQEw3bRw" target="_RLv3SOYNEeWt6-AQEw3bRw" source="_RLv3MOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPQOYNEeWt6-AQEw3bRw" target="_RLv3N-YNEeWt6-AQEw3bRw" source="_RLv3LeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPQeYNEeWt6-AQEw3bRw" target="_RLv3WeYNEeWt6-AQEw3bRw" source="_RLv3N-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPQuYNEeWt6-AQEw3bRw" name="AcceptStatement@75648764" outgoing="_RLvPJuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPQ-YNEeWt6-AQEw3bRw" target="_RLvPRuYNEeWt6-AQEw3bRw" source="_RLvPTOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPROYNEeWt6-AQEw3bRw" target="_RLvPReYNEeWt6-AQEw3bRw" source="_RLvPR-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLvPReYNEeWt6-AQEw3bRw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_RLvPROYNEeWt6-AQEw3bRw" outgoing="_RLvPJeYNEeWt6-AQEw3bRw _RLvPNeYNEeWt6-AQEw3bRw _RLvPOuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLvPRuYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_RLvPQ-YNEeWt6-AQEw3bRw">
                <result xmi:id="_RLvPR-YNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_RLvPROYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPSOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPSeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <trigger xmi:id="_RLvPSuYNEeWt6-AQEw3bRw" event="_RLwdluYNEeWt6-AQEw3bRw"/>
                <trigger xmi:id="_RLvPS-YNEeWt6-AQEw3bRw" event="_RLwdl-YNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLvPTOYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_RLvPQ-YNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPTeYNEeWt6-AQEw3bRw" name="ExpressionStatement@3d5faedc" incoming="_RLvPJuYNEeWt6-AQEw3bRw" outgoing="_RLvPJ-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPTuYNEeWt6-AQEw3bRw" target="_RLvPWOYNEeWt6-AQEw3bRw" source="_RLvPVOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPT-YNEeWt6-AQEw3bRw" target="_RLvPYeYNEeWt6-AQEw3bRw" source="_RLvPXuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPUOYNEeWt6-AQEw3bRw" target="_RLvPZeYNEeWt6-AQEw3bRw" source="_RLvPW-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPUeYNEeWt6-AQEw3bRw" target="_RLvPUuYNEeWt6-AQEw3bRw" source="_RLvPbuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPUuYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@23972a76)" incoming="_RLvPUeYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvPU-YNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RLvPVOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvPTuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPVeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPVuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLvPV-YNEeWt6-AQEw3bRw" name="Clear(sig)" structuralFeature="_RLvPCOYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLvPWOYNEeWt6-AQEw3bRw" name="Clear(sig).object" incoming="_RLvPTuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPWeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPWuYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLvPW-YNEeWt6-AQEw3bRw" name="Clear(sig).result" outgoing="_RLvPUOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPXOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPXeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLvPXuYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@23972a76)" incoming="_RLvPJeYNEeWt6-AQEw3bRw" outgoing="_RLvPT-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPX-YNEeWt6-AQEw3bRw" name="WriteAll(MyTest::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPYOYNEeWt6-AQEw3bRw" target="_RLvPa-YNEeWt6-AQEw3bRw" source="_RLvPYeYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLvPYeYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::sig).input(MyTest::sig)" incoming="_RLvPT-YNEeWt6-AQEw3bRw" outgoing="_RLvPYOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPYuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPY-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLvPZOYNEeWt6-AQEw3bRw" name="Write(sig)" structuralFeature="_RLvPCOYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLvPZeYNEeWt6-AQEw3bRw" name="Write(sig).object" incoming="_RLvPUOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPZuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPZ-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLvPaOYNEeWt6-AQEw3bRw" name="Write(sig).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPaeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPauYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLvPa-YNEeWt6-AQEw3bRw" name="Write(sig).value" incoming="_RLvPYOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPbOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPbeYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPbuYNEeWt6-AQEw3bRw" name="RightHandSide@670bde4b" outgoing="_RLvPUeYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPb-YNEeWt6-AQEw3bRw" name="ExpressionStatement@1f1bb290" incoming="_RLvPJ-YNEeWt6-AQEw3bRw" outgoing="_RLvPLOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPcOYNEeWt6-AQEw3bRw" target="_RLvPceYNEeWt6-AQEw3bRw" source="_RLvPdOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLvPceYNEeWt6-AQEw3bRw" name="Fork(terminate)@16d86930" incoming="_RLvPcOYNEeWt6-AQEw3bRw" outgoing="_RLvPKuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPcuYNEeWt6-AQEw3bRw" name="RightHandSide@59e1da07">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLvPc-YNEeWt6-AQEw3bRw" name="Value(false)">
                  <result xmi:id="_RLvPdOYNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RLvPcOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPdeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPduYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RLvPd-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPeOYNEeWt6-AQEw3bRw" name="AcceptStatement@ddd5541" incoming="_RLvPLOYNEeWt6-AQEw3bRw" outgoing="_RLvPLuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPeeYNEeWt6-AQEw3bRw" target="_RLvPxuYNEeWt6-AQEw3bRw" source="_RLvPw-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPeuYNEeWt6-AQEw3bRw" target="_RLvPiuYNEeWt6-AQEw3bRw" source="_RLvPxuYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvPe-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPfOYNEeWt6-AQEw3bRw" target="_RLvPh-YNEeWt6-AQEw3bRw" source="_RLvPvOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPfeYNEeWt6-AQEw3bRw" target="_RLv0kOYNEeWt6-AQEw3bRw" source="_RLv0jeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPfuYNEeWt6-AQEw3bRw" target="_RLvPx-YNEeWt6-AQEw3bRw" source="_RLv0kOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvPf-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPgOYNEeWt6-AQEw3bRw" target="_RLvPxuYNEeWt6-AQEw3bRw" source="_RLv0kOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLvPgeYNEeWt6-AQEw3bRw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPguYNEeWt6-AQEw3bRw" target="_RLvPh-YNEeWt6-AQEw3bRw" source="_RLv0guYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPg-YNEeWt6-AQEw3bRw" target="_RLv0kuYNEeWt6-AQEw3bRw" source="_RLvPh-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPhOYNEeWt6-AQEw3bRw" target="_RLv0k-YNEeWt6-AQEw3bRw" source="_RLv0meYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPheYNEeWt6-AQEw3bRw" target="_RLv0kOYNEeWt6-AQEw3bRw" source="_RLv0k-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPhuYNEeWt6-AQEw3bRw" target="_RLv0keYNEeWt6-AQEw3bRw" source="_RLv0lOYNEeWt6-AQEw3bRw"/>
              <structuredNodeOutput xmi:id="_RLvPh-YNEeWt6-AQEw3bRw" name="AcceptStatement@ddd5541.output(terminate)" incoming="_RLvPfOYNEeWt6-AQEw3bRw _RLvPguYNEeWt6-AQEw3bRw" outgoing="_RLvPg-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPiOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPieYNEeWt6-AQEw3bRw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPiuYNEeWt6-AQEw3bRw" name="AcceptBlock(SignalNewArrival)" incoming="_RLvPeuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPi-YNEeWt6-AQEw3bRw" name="ExpressionStatement@5f2ab9e7">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPjOYNEeWt6-AQEw3bRw" target="_RLvPl-YNEeWt6-AQEw3bRw" source="_RLvPk-YNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPjeYNEeWt6-AQEw3bRw" target="_RLvPoOYNEeWt6-AQEw3bRw" source="_RLvPneYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPjuYNEeWt6-AQEw3bRw" target="_RLvPpOYNEeWt6-AQEw3bRw" source="_RLvPmuYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPj-YNEeWt6-AQEw3bRw" target="_RLvPneYNEeWt6-AQEw3bRw" source="_RLvPs-YNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RLvPkOYNEeWt6-AQEw3bRw" target="_RLvPkeYNEeWt6-AQEw3bRw" source="_RLvPreYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPkeYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@1cb13141)" incoming="_RLvPkOYNEeWt6-AQEw3bRw">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_RLvPkuYNEeWt6-AQEw3bRw" name="ReadSelf">
                      <result xmi:id="_RLvPk-YNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLvPjOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPlOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPleYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLvPluYNEeWt6-AQEw3bRw" name="Clear(name)" structuralFeature="_RLvPDuYNEeWt6-AQEw3bRw">
                    <object xmi:id="_RLvPl-YNEeWt6-AQEw3bRw" name="Clear(name).object" incoming="_RLvPjOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPmOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPmeYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLvPmuYNEeWt6-AQEw3bRw" name="Clear(name).result" outgoing="_RLvPjuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPm-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPnOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RLvPneYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@1cb13141)" incoming="_RLvPj-YNEeWt6-AQEw3bRw" outgoing="_RLvPjeYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPnuYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPn-YNEeWt6-AQEw3bRw" target="_RLvPquYNEeWt6-AQEw3bRw" source="_RLvPoOYNEeWt6-AQEw3bRw"/>
                    <structuredNodeInput xmi:id="_RLvPoOYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::name).input(MyTest::name)" incoming="_RLvPjeYNEeWt6-AQEw3bRw" outgoing="_RLvPn-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPoeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPouYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLvPo-YNEeWt6-AQEw3bRw" name="Write(name)" structuralFeature="_RLvPDuYNEeWt6-AQEw3bRw" isReplaceAll="true">
                      <object xmi:id="_RLvPpOYNEeWt6-AQEw3bRw" name="Write(name).object" incoming="_RLvPjuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPpeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPpuYNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RLvPp-YNEeWt6-AQEw3bRw" name="Write(name).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPqOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPqeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:id="_RLvPquYNEeWt6-AQEw3bRw" name="Write(name).value" incoming="_RLvPn-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPq-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPrOYNEeWt6-AQEw3bRw" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPreYNEeWt6-AQEw3bRw" name="RightHandSide@60ae3ff" outgoing="_RLvPkOYNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPruYNEeWt6-AQEw3bRw" target="_RLvPsOYNEeWt6-AQEw3bRw" source="_RLvPtuYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLvPr-YNEeWt6-AQEw3bRw" name="Read(name)" structuralFeature="_RLvO_uYNEeWt6-AQEw3bRw">
                      <object xmi:id="_RLvPsOYNEeWt6-AQEw3bRw" name="Read(name).object" incoming="_RLvPruYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPseYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPsuYNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RLvPs-YNEeWt6-AQEw3bRw" name="Read(name).result" outgoing="_RLvPj-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPtOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPteYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLvPtuYNEeWt6-AQEw3bRw" name="Fork()" incoming="_RLvPKOYNEeWt6-AQEw3bRw" outgoing="_RLvPruYNEeWt6-AQEw3bRw"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPt-YNEeWt6-AQEw3bRw" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLvPuOYNEeWt6-AQEw3bRw" target="_RLvPvOYNEeWt6-AQEw3bRw" source="_RLvPueYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLvPueYNEeWt6-AQEw3bRw" name="Passthru(terminate).input" incoming="_RLvPKuYNEeWt6-AQEw3bRw" outgoing="_RLvPuOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPuuYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPu-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RLvPvOYNEeWt6-AQEw3bRw" name="Passthru(terminate).output" incoming="_RLvPuOYNEeWt6-AQEw3bRw" outgoing="_RLvPfOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPveYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPvuYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLvPv-YNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_RLvO_eYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLvPwOYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_RLvPKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPweYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPwuYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLvPw-YNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_RLvPeeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLvPxOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLvPxeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_RLvPxuYNEeWt6-AQEw3bRw" name="Decision(Test(SignalNewArrival))" incoming="_RLvPeeYNEeWt6-AQEw3bRw _RLvPgOYNEeWt6-AQEw3bRw" outgoing="_RLvPeuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLvPeeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLvPx-YNEeWt6-AQEw3bRw" name="AcceptBlock(SignalTermination)" incoming="_RLvPfuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0gOYNEeWt6-AQEw3bRw" name="ExpressionStatement@588c0dcf">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0geYNEeWt6-AQEw3bRw" target="_RLv0guYNEeWt6-AQEw3bRw" source="_RLv0heYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_RLv0guYNEeWt6-AQEw3bRw" name="Fork(terminate)@64c9c803" incoming="_RLv0geYNEeWt6-AQEw3bRw" outgoing="_RLvPguYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0g-YNEeWt6-AQEw3bRw" name="RightHandSide@7b6a70a6">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv0hOYNEeWt6-AQEw3bRw" name="Value(true)">
                      <result xmi:id="_RLv0heYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLv0geYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0huYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0h-YNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_RLv0iOYNEeWt6-AQEw3bRw" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLv0ieYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_RLvPAeYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLv0iuYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_RLvPK-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0i-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0jOYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLv0jeYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_RLvPfeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0juYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0j-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_RLv0kOYNEeWt6-AQEw3bRw" name="Decision(Test(SignalTermination))" incoming="_RLvPfeYNEeWt6-AQEw3bRw _RLvPheYNEeWt6-AQEw3bRw" outgoing="_RLvPfuYNEeWt6-AQEw3bRw _RLvPgOYNEeWt6-AQEw3bRw" decisionInputFlow="_RLvPfeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv0keYNEeWt6-AQEw3bRw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_RLvPhuYNEeWt6-AQEw3bRw" outgoing="_RLvPKOYNEeWt6-AQEw3bRw _RLvPKeYNEeWt6-AQEw3bRw _RLvPK-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv0kuYNEeWt6-AQEw3bRw" name="Fork(terminate)" incoming="_RLvPg-YNEeWt6-AQEw3bRw" outgoing="_RLvPLeYNEeWt6-AQEw3bRw _RLvPM-YNEeWt6-AQEw3bRw _RLvPN-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv0k-YNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_RLvPhOYNEeWt6-AQEw3bRw" outgoing="_RLvPheYNEeWt6-AQEw3bRw">
                <result xmi:id="_RLv0lOYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_RLvPhuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0leYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0luYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <trigger xmi:id="_RLv0l-YNEeWt6-AQEw3bRw" event="_RLwdmOYNEeWt6-AQEw3bRw"/>
                <trigger xmi:id="_RLv0mOYNEeWt6-AQEw3bRw" event="_RLwdmeYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLv0meYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_RLvPhOYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0muYNEeWt6-AQEw3bRw" name="ExpressionStatement@687d00f" incoming="_RLvPLuYNEeWt6-AQEw3bRw" outgoing="_RLvPL-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0m-YNEeWt6-AQEw3bRw" target="_RLv0peYNEeWt6-AQEw3bRw" source="_RLv0oeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0nOYNEeWt6-AQEw3bRw" target="_RLv0ruYNEeWt6-AQEw3bRw" source="_RLv0q-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0neYNEeWt6-AQEw3bRw" target="_RLv0suYNEeWt6-AQEw3bRw" source="_RLv0qOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv0nuYNEeWt6-AQEw3bRw" target="_RLv0n-YNEeWt6-AQEw3bRw" source="_RLv0u-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0n-YNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@73a29d67)" incoming="_RLv0nuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv0oOYNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RLv0oeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv0m-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0ouYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0o-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv0pOYNEeWt6-AQEw3bRw" name="Clear(terminate)" structuralFeature="_RLvPEeYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLv0peYNEeWt6-AQEw3bRw" name="Clear(terminate).object" incoming="_RLv0m-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0puYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0p-YNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLv0qOYNEeWt6-AQEw3bRw" name="Clear(terminate).result" outgoing="_RLv0neYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0qeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0quYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv0q-YNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@73a29d67)" incoming="_RLvPLeYNEeWt6-AQEw3bRw" outgoing="_RLv0nOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0rOYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0reYNEeWt6-AQEw3bRw" target="_RLv0uOYNEeWt6-AQEw3bRw" source="_RLv0ruYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLv0ruYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::terminate).input(MyTest::terminate)" incoming="_RLv0nOYNEeWt6-AQEw3bRw" outgoing="_RLv0reYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0r-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0sOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv0seYNEeWt6-AQEw3bRw" name="Write(terminate)" structuralFeature="_RLvPEeYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLv0suYNEeWt6-AQEw3bRw" name="Write(terminate).object" incoming="_RLv0neYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0s-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0tOYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv0teYNEeWt6-AQEw3bRw" name="Write(terminate).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0tuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0t-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLv0uOYNEeWt6-AQEw3bRw" name="Write(terminate).value" incoming="_RLv0reYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0ueYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0uuYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0u-YNEeWt6-AQEw3bRw" name="RightHandSide@6bc044c6" outgoing="_RLv0nuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0vOYNEeWt6-AQEw3bRw" name="AcceptStatement@15163ed3" incoming="_RLvPL-YNEeWt6-AQEw3bRw" outgoing="_RLvPMOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv0veYNEeWt6-AQEw3bRw" target="_RLv0vuYNEeWt6-AQEw3bRw" source="_RLv0wOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv0vuYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival)" incoming="_RLv0veYNEeWt6-AQEw3bRw">
                <trigger xmi:id="_RLv0v-YNEeWt6-AQEw3bRw" event="_RLwdmuYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLv0wOYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival))" outgoing="_RLv0veYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0weYNEeWt6-AQEw3bRw" name="AcceptStatement@7c70c1ab" incoming="_RLvPMOYNEeWt6-AQEw3bRw" outgoing="_RLvPMuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv0wuYNEeWt6-AQEw3bRw" target="_RLv0xeYNEeWt6-AQEw3bRw" source="_RLv0yuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0w-YNEeWt6-AQEw3bRw" target="_RLv0xOYNEeWt6-AQEw3bRw" source="_RLv0xuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv0xOYNEeWt6-AQEw3bRw" name="Fork(Accept(SignalNewArrival).result)" incoming="_RLv0w-YNEeWt6-AQEw3bRw" outgoing="_RLvPMeYNEeWt6-AQEw3bRw _RLvPNOYNEeWt6-AQEw3bRw _RLvPOeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv0xeYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival)" incoming="_RLv0wuYNEeWt6-AQEw3bRw">
                <result xmi:id="_RLv0xuYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival).result" outgoing="_RLv0w-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv0x-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv0yOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <trigger xmi:id="_RLv0yeYNEeWt6-AQEw3bRw" event="_RLwdm-YNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLv0yuYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival))" outgoing="_RLv0wuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv0y-YNEeWt6-AQEw3bRw" name="ExpressionStatement@655ba766" incoming="_RLvPMuYNEeWt6-AQEw3bRw" outgoing="_RLvPNuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0zOYNEeWt6-AQEw3bRw" target="_RLv01uYNEeWt6-AQEw3bRw" source="_RLv00uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0zeYNEeWt6-AQEw3bRw" target="_RLv03-YNEeWt6-AQEw3bRw" source="_RLv03OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0zuYNEeWt6-AQEw3bRw" target="_RLv04-YNEeWt6-AQEw3bRw" source="_RLv02eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv0z-YNEeWt6-AQEw3bRw" target="_RLv00OYNEeWt6-AQEw3bRw" source="_RLv07OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv00OYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@127d23d3)" incoming="_RLv0z-YNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv00eYNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RLv00uYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv0zOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv00-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv01OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv01eYNEeWt6-AQEw3bRw" name="Clear(arrival)" structuralFeature="_RLvPFOYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLv01uYNEeWt6-AQEw3bRw" name="Clear(arrival).object" incoming="_RLv0zOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv01-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv02OYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLv02eYNEeWt6-AQEw3bRw" name="Clear(arrival).result" outgoing="_RLv0zuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv02uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv02-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv03OYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@127d23d3)" incoming="_RLvPMeYNEeWt6-AQEw3bRw" outgoing="_RLv0zeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv03eYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv03uYNEeWt6-AQEw3bRw" target="_RLv06eYNEeWt6-AQEw3bRw" source="_RLv03-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLv03-YNEeWt6-AQEw3bRw" name="WriteAll(MyTest::arrival).input(MyTest::arrival)" incoming="_RLv0zeYNEeWt6-AQEw3bRw" outgoing="_RLv03uYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv04OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv04eYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv04uYNEeWt6-AQEw3bRw" name="Write(arrival)" structuralFeature="_RLvPFOYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLv04-YNEeWt6-AQEw3bRw" name="Write(arrival).object" incoming="_RLv0zuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv05OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv05eYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv05uYNEeWt6-AQEw3bRw" name="Write(arrival).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv05-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv06OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLv06eYNEeWt6-AQEw3bRw" name="Write(arrival).value" incoming="_RLv03uYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv06uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv06-YNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv07OYNEeWt6-AQEw3bRw" name="RightHandSide@4979a38f" outgoing="_RLv0z-YNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv07eYNEeWt6-AQEw3bRw" name="ForStatement@c83615f" incoming="_RLvPNuYNEeWt6-AQEw3bRw" outgoing="_RLvPPOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv07uYNEeWt6-AQEw3bRw" target="_RLv15OYNEeWt6-AQEw3bRw" source="_RLv12-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv07-YNEeWt6-AQEw3bRw" target="_RLv1veYNEeWt6-AQEw3bRw" source="_RLv1_-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv08OYNEeWt6-AQEw3bRw" target="_RLv1wOYNEeWt6-AQEw3bRw" source="_RLv1--YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv08eYNEeWt6-AQEw3bRw" target="_RLv1uuYNEeWt6-AQEw3bRw" source="_RLv15OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv08uYNEeWt6-AQEw3bRw" target="_RLv08-YNEeWt6-AQEw3bRw" source="_RLv11eYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:LoopNode" xmi:id="_RLv08-YNEeWt6-AQEw3bRw" name="Loop(ForStatement@c83615f)" incoming="_RLv08uYNEeWt6-AQEw3bRw" bodyOutput="_RLv1HeYNEeWt6-AQEw3bRw _RLv1IOYNEeWt6-AQEw3bRw _RLv1I-YNEeWt6-AQEw3bRw _RLv1l-YNEeWt6-AQEw3bRw _RLv1gOYNEeWt6-AQEw3bRw _RLv1jeYNEeWt6-AQEw3bRw" bodyPart="_RLv1FeYNEeWt6-AQEw3bRw _RLv1FuYNEeWt6-AQEw3bRw _RLv1kOYNEeWt6-AQEw3bRw _RLv1muYNEeWt6-AQEw3bRw" decider="_RLv1EuYNEeWt6-AQEw3bRw" isTestedFirst="true" test="_RLv1C-YNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv09OYNEeWt6-AQEw3bRw" target="_RLv1BeYNEeWt6-AQEw3bRw" source="_RLv1n-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv09eYNEeWt6-AQEw3bRw" target="_RLv1BuYNEeWt6-AQEw3bRw" source="_RLv1ouYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv09uYNEeWt6-AQEw3bRw" target="_RLv1B-YNEeWt6-AQEw3bRw" source="_RLv1peYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv09-YNEeWt6-AQEw3bRw" target="_RLv1COYNEeWt6-AQEw3bRw" source="_RLv1qOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0-OYNEeWt6-AQEw3bRw" target="_RLv1CeYNEeWt6-AQEw3bRw" source="_RLv1q-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0-eYNEeWt6-AQEw3bRw" target="_RLv1CuYNEeWt6-AQEw3bRw" source="_RLv1ruYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0-uYNEeWt6-AQEw3bRw" target="_RLv1DOYNEeWt6-AQEw3bRw" source="_RLv1CeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0--YNEeWt6-AQEw3bRw" target="_RLv1D-YNEeWt6-AQEw3bRw" source="_RLv1CuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv0_OYNEeWt6-AQEw3bRw" target="_RLv1FuYNEeWt6-AQEw3bRw" source="_RLv1FeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0_eYNEeWt6-AQEw3bRw" target="_RLv1QeYNEeWt6-AQEw3bRw" source="_RLv1COYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0_uYNEeWt6-AQEw3bRw" target="_RLv1keYNEeWt6-AQEw3bRw" source="_RLv1COYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv0_-YNEeWt6-AQEw3bRw" target="_RLv1lOYNEeWt6-AQEw3bRw" source="_RLv1m-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1AOYNEeWt6-AQEw3bRw" target="_RLv1euYNEeWt6-AQEw3bRw" source="_RLv1CeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1AeYNEeWt6-AQEw3bRw" target="_RLv1iuYNEeWt6-AQEw3bRw" source="_RLv1CuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1AuYNEeWt6-AQEw3bRw" target="_RLv1Y-YNEeWt6-AQEw3bRw" source="_RLv1BeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1A-YNEeWt6-AQEw3bRw" target="_RLv1a-YNEeWt6-AQEw3bRw" source="_RLv1BuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1BOYNEeWt6-AQEw3bRw" target="_RLv1c-YNEeWt6-AQEw3bRw" source="_RLv1B-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv1BeYNEeWt6-AQEw3bRw" name="Fork(ForStatement@c83615f.loopVariable(terminate))" incoming="_RLv09OYNEeWt6-AQEw3bRw" outgoing="_RLv1AuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv1BuYNEeWt6-AQEw3bRw" name="Fork(ForStatement@c83615f.loopVariable(arrival3))" incoming="_RLv09eYNEeWt6-AQEw3bRw" outgoing="_RLv1A-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv1B-YNEeWt6-AQEw3bRw" name="Fork(ForStatement@c83615f.loopVariable(sig))" incoming="_RLv09uYNEeWt6-AQEw3bRw" outgoing="_RLv1BOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv1COYNEeWt6-AQEw3bRw" name="Fork(ForStatement@c83615f.loopVariable(i))" incoming="_RLv09-YNEeWt6-AQEw3bRw" outgoing="_RLv0_eYNEeWt6-AQEw3bRw _RLv0_uYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv1CeYNEeWt6-AQEw3bRw" name="Fork(ForStatement@c83615f.loopVariable(counter))" incoming="_RLv0-OYNEeWt6-AQEw3bRw" outgoing="_RLv0-uYNEeWt6-AQEw3bRw _RLv1AOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv1CuYNEeWt6-AQEw3bRw" name="Fork(ForStatement@c83615f.loopVariable(upper))" incoming="_RLv0-eYNEeWt6-AQEw3bRw" outgoing="_RLv0--YNEeWt6-AQEw3bRw _RLv1AeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv1C-YNEeWt6-AQEw3bRw" name="Call(&lt;=)">
                  <argument xmi:id="_RLv1DOYNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(x)" incoming="_RLv0-uYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1DeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1DuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RLv1D-YNEeWt6-AQEw3bRw" name="Call(&lt;=).argument(y)" incoming="_RLv0--YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1EOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1EeYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLv1EuYNEeWt6-AQEw3bRw" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1E-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1FOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1FeYNEeWt6-AQEw3bRw" name="Values(ForStatement@c83615f)" outgoing="_RLv0_OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1FuYNEeWt6-AQEw3bRw" name="Body(ForStatement@c83615f)" incoming="_RLv0_OYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1F-YNEeWt6-AQEw3bRw" target="_RLv1HeYNEeWt6-AQEw3bRw" source="_RLv1ZuYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1GOYNEeWt6-AQEw3bRw" target="_RLv1IOYNEeWt6-AQEw3bRw" source="_RLv1buYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1GeYNEeWt6-AQEw3bRw" target="_RLv1I-YNEeWt6-AQEw3bRw" source="_RLv1duYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1GuYNEeWt6-AQEw3bRw" target="_RLv1X-YNEeWt6-AQEw3bRw" source="_RLv1KeYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RLv1G-YNEeWt6-AQEw3bRw" target="_RLv1MeYNEeWt6-AQEw3bRw" source="_RLv1JuYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1HOYNEeWt6-AQEw3bRw" target="_RLv1feYNEeWt6-AQEw3bRw" source="_RLv1hOYNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RLv1HeYNEeWt6-AQEw3bRw" name="terminate" incoming="_RLv1F-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1HuYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1H-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_RLv1IOYNEeWt6-AQEw3bRw" name="arrival3" incoming="_RLv1GOYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1IeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1IuYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_RLv1I-YNEeWt6-AQEw3bRw" name="sig" incoming="_RLv1GeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1JOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1JeYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1JuYNEeWt6-AQEw3bRw" name="AcceptStatement@3d046c7" outgoing="_RLv1G-YNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_RLv1J-YNEeWt6-AQEw3bRw" target="_RLv1KuYNEeWt6-AQEw3bRw" source="_RLv1MOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1KOYNEeWt6-AQEw3bRw" target="_RLv1KeYNEeWt6-AQEw3bRw" source="_RLv1K-YNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLv1KeYNEeWt6-AQEw3bRw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_RLv1KOYNEeWt6-AQEw3bRw" outgoing="_RLv1GuYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv1KuYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_RLv1J-YNEeWt6-AQEw3bRw">
                      <result xmi:id="_RLv1K-YNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_RLv1KOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1LOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1LeYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <trigger xmi:id="_RLv1LuYNEeWt6-AQEw3bRw" event="_RLwdnOYNEeWt6-AQEw3bRw"/>
                      <trigger xmi:id="_RLv1L-YNEeWt6-AQEw3bRw" event="_RLwdneYNEeWt6-AQEw3bRw"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_RLv1MOYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_RLv1J-YNEeWt6-AQEw3bRw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1MeYNEeWt6-AQEw3bRw" name="ExpressionStatement@5a56f351" incoming="_RLv1G-YNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_RLv1MuYNEeWt6-AQEw3bRw" target="_RLv1P-YNEeWt6-AQEw3bRw" source="_RLv1OuYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1M-YNEeWt6-AQEw3bRw" target="_RLv1R-YNEeWt6-AQEw3bRw" source="_RLv1ROYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1NOYNEeWt6-AQEw3bRw" target="_RLv1SeYNEeWt6-AQEw3bRw" source="_RLv1POYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1NeYNEeWt6-AQEw3bRw" target="_RLv1T-YNEeWt6-AQEw3bRw" source="_RLv1R-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1NuYNEeWt6-AQEw3bRw" target="_RLv1U-YNEeWt6-AQEw3bRw" source="_RLv1TOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1N-YNEeWt6-AQEw3bRw" target="_RLv1XOYNEeWt6-AQEw3bRw" source="_RLv1R-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1OOYNEeWt6-AQEw3bRw" target="_RLv1WeYNEeWt6-AQEw3bRw" source="_RLv1X-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_RLv1OeYNEeWt6-AQEw3bRw" target="_RLv1OuYNEeWt6-AQEw3bRw" source="_RLv1YOYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1OuYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@715fe514)" incoming="_RLv1OeYNEeWt6-AQEw3bRw" outgoing="_RLv1MuYNEeWt6-AQEw3bRw">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv1O-YNEeWt6-AQEw3bRw" name="ReadSelf">
                        <result xmi:id="_RLv1POYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv1NOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1PeYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1PuYNEeWt6-AQEw3bRw" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1P-YNEeWt6-AQEw3bRw" name="Index(LeftHandSide@715fe514)" incoming="_RLv1MuYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv1QOYNEeWt6-AQEw3bRw" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_RLv1QeYNEeWt6-AQEw3bRw" name="Call(ToUnlimitedNatural).argument(x)" incoming="_RLv0_eYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1QuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1Q-YNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <result xmi:id="_RLv1ROYNEeWt6-AQEw3bRw" name="Call(ToUnlimitedNatural).result(result)" outgoing="_RLv1M-YNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1ReYNEeWt6-AQEw3bRw"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1RuYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLv1R-YNEeWt6-AQEw3bRw" name="Fork(Call(ToUnlimitedNatural).result(result))" incoming="_RLv1M-YNEeWt6-AQEw3bRw" outgoing="_RLv1NeYNEeWt6-AQEw3bRw _RLv1N-YNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_RLv1SOYNEeWt6-AQEw3bRw" name="Remove(signals)" structuralFeature="_RLvPGuYNEeWt6-AQEw3bRw">
                      <object xmi:id="_RLv1SeYNEeWt6-AQEw3bRw" name="Remove(signals).object" incoming="_RLv1NOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1SuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1S-YNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RLv1TOYNEeWt6-AQEw3bRw" name="Remove(signals).result" outgoing="_RLv1NuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1TeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1TuYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <removeAt xmi:id="_RLv1T-YNEeWt6-AQEw3bRw" name="Remove(signals).removeAt" incoming="_RLv1NeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1UOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1UeYNEeWt6-AQEw3bRw" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv1UuYNEeWt6-AQEw3bRw" name="Write(signals)" structuralFeature="_RLvPGuYNEeWt6-AQEw3bRw">
                      <object xmi:id="_RLv1U-YNEeWt6-AQEw3bRw" name="Write(signals).object" incoming="_RLv1NuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1VOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1VeYNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RLv1VuYNEeWt6-AQEw3bRw" name="Write(signals).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1V-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1WOYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:id="_RLv1WeYNEeWt6-AQEw3bRw" name="Write(signals).value" incoming="_RLv1OOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1WuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1W-YNEeWt6-AQEw3bRw" value="1"/>
                      </value>
                      <insertAt xmi:id="_RLv1XOYNEeWt6-AQEw3bRw" name="Write(signals).insertAt" incoming="_RLv1N-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1XeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1XuYNEeWt6-AQEw3bRw" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLv1X-YNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@715fe514)" incoming="_RLv1GuYNEeWt6-AQEw3bRw" outgoing="_RLv1OOYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1YOYNEeWt6-AQEw3bRw" name="RightHandSide@183ea8d" outgoing="_RLv1OeYNEeWt6-AQEw3bRw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1YeYNEeWt6-AQEw3bRw" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1YuYNEeWt6-AQEw3bRw" target="_RLv1ZuYNEeWt6-AQEw3bRw" source="_RLv1Y-YNEeWt6-AQEw3bRw"/>
                    <structuredNodeInput xmi:id="_RLv1Y-YNEeWt6-AQEw3bRw" name="Passthru(Fork(terminate)).input" incoming="_RLv1AuYNEeWt6-AQEw3bRw" outgoing="_RLv1YuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1ZOYNEeWt6-AQEw3bRw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1ZeYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_RLv1ZuYNEeWt6-AQEw3bRw" name="Passthru(Fork(terminate)).output" incoming="_RLv1YuYNEeWt6-AQEw3bRw" outgoing="_RLv1F-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1Z-YNEeWt6-AQEw3bRw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1aOYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1aeYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1auYNEeWt6-AQEw3bRw" target="_RLv1buYNEeWt6-AQEw3bRw" source="_RLv1a-YNEeWt6-AQEw3bRw"/>
                    <structuredNodeInput xmi:id="_RLv1a-YNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_RLv1A-YNEeWt6-AQEw3bRw" outgoing="_RLv1auYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1bOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1beYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_RLv1buYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_RLv1auYNEeWt6-AQEw3bRw" outgoing="_RLv1GOYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1b-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1cOYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1ceYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1cuYNEeWt6-AQEw3bRw" target="_RLv1duYNEeWt6-AQEw3bRw" source="_RLv1c-YNEeWt6-AQEw3bRw"/>
                    <structuredNodeInput xmi:id="_RLv1c-YNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_RLv1BOYNEeWt6-AQEw3bRw" outgoing="_RLv1cuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1dOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1deYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_RLv1duYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_RLv1cuYNEeWt6-AQEw3bRw" outgoing="_RLv1GeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1d-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1eOYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv1eeYNEeWt6-AQEw3bRw" name="Call(+)">
                    <argument xmi:id="_RLv1euYNEeWt6-AQEw3bRw" name="Call(+).argument(x)" incoming="_RLv1AOYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1e-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1fOYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <argument xmi:id="_RLv1feYNEeWt6-AQEw3bRw" name="Call(+).argument(y)" incoming="_RLv1HOYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1fuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1f-YNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RLv1gOYNEeWt6-AQEw3bRw" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1geYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1guYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv1g-YNEeWt6-AQEw3bRw" name="Value(1)">
                    <result xmi:id="_RLv1hOYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv1HOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1heYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1huYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RLv1h-YNEeWt6-AQEw3bRw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv1iOYNEeWt6-AQEw3bRw" name="Passthru(upper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv1ieYNEeWt6-AQEw3bRw" target="_RLv1jeYNEeWt6-AQEw3bRw" source="_RLv1iuYNEeWt6-AQEw3bRw"/>
                    <structuredNodeInput xmi:id="_RLv1iuYNEeWt6-AQEw3bRw" name="Passthru(upper).input" incoming="_RLv1AeYNEeWt6-AQEw3bRw" outgoing="_RLv1ieYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1i-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1jOYNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_RLv1jeYNEeWt6-AQEw3bRw" name="Passthru(upper).output" incoming="_RLv1ieYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1juYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1j-YNEeWt6-AQEw3bRw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv1kOYNEeWt6-AQEw3bRw" name="Call(+)">
                  <argument xmi:id="_RLv1keYNEeWt6-AQEw3bRw" name="Call(+).argument(x)" incoming="_RLv0_uYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1kuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1k-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RLv1lOYNEeWt6-AQEw3bRw" name="Call(+).argument(y)" incoming="_RLv0_-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1leYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1luYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLv1l-YNEeWt6-AQEw3bRw" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1mOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1meYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv1muYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RLv1m-YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv0_-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1nOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1neYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLv1nuYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <loopVariable xmi:id="_RLv1n-YNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariable(terminate)" outgoing="_RLv09OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1oOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1oeYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_RLv1ouYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariable(arrival3)" outgoing="_RLv09eYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1o-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1pOYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_RLv1peYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariable(sig)" outgoing="_RLv09uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1puYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1p-YNEeWt6-AQEw3bRw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_RLv1qOYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariable(i)" outgoing="_RLv09-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1qeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1quYNEeWt6-AQEw3bRw" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_RLv1q-YNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariable(counter)" outgoing="_RLv0-OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1rOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1reYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_RLv1ruYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariable(upper)" outgoing="_RLv0-eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1r-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1sOYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_RLv1seYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariableInput(terminate)" incoming="_RLvPM-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1suYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1s-YNEeWt6-AQEw3bRw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_RLv1tOYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariableInput(arrival3)" incoming="_RLvPNOYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1teYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1tuYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_RLv1t-YNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariableInput(sig)" incoming="_RLvPNeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1uOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1ueYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_RLv1uuYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariableInput(i)" incoming="_RLv08eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1u-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1vOYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_RLv1veYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariableInput(counter)" incoming="_RLv07-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1vuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1v-YNEeWt6-AQEw3bRw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_RLv1wOYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.loopVariableInput(upper)" incoming="_RLv08OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1weYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1wuYNEeWt6-AQEw3bRw" value="1"/>
                </loopVariableInput>
                <result xmi:id="_RLv1w-YNEeWt6-AQEw3bRw" name="ForStatement@c83615f.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1xOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1xeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RLv1xuYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.result(arrival3)" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1x-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1yOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RLv1yeYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1yuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1y-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RLv1zOYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1zeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1zuYNEeWt6-AQEw3bRw" value="*"/>
                </result>
                <result xmi:id="_RLv1z-YNEeWt6-AQEw3bRw" name="ForStatement@c83615f.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv10OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv10eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <result xmi:id="_RLv10uYNEeWt6-AQEw3bRw" name="ForStatement@c83615f.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv10-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv11OYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv11eYNEeWt6-AQEw3bRw" name="LoopVariables(ForStatement@c83615f)" outgoing="_RLv08uYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv11uYNEeWt6-AQEw3bRw" target="_RLv15uYNEeWt6-AQEw3bRw" source="_RLv14OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv11-YNEeWt6-AQEw3bRw" target="_RLv16eYNEeWt6-AQEw3bRw" source="_RLv15OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv12OYNEeWt6-AQEw3bRw" target="_RLv19eYNEeWt6-AQEw3bRw" source="_RLv17OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv12eYNEeWt6-AQEw3bRw" target="_RLv1-OYNEeWt6-AQEw3bRw" source="_RLv18OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv12uYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RLv12-YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv07uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv13OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv13eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLv13uYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv13-YNEeWt6-AQEw3bRw" name="Value(2)">
                  <result xmi:id="_RLv14OYNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RLv11uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv14eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv14uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLv14-YNEeWt6-AQEw3bRw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv15OYNEeWt6-AQEw3bRw" name="Fork(Value(1).result)" incoming="_RLv07uYNEeWt6-AQEw3bRw" outgoing="_RLv08eYNEeWt6-AQEw3bRw _RLv11-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv15eYNEeWt6-AQEw3bRw" name="Call(-)">
                  <argument xmi:id="_RLv15uYNEeWt6-AQEw3bRw" name="Call(-).argument(x)" incoming="_RLv11uYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv15-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv16OYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RLv16eYNEeWt6-AQEw3bRw" name="Call(-).argument(y)" incoming="_RLv11-YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv16uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv16-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLv17OYNEeWt6-AQEw3bRw" name="Call(-).result(result)" outgoing="_RLv12OYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv17eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv17uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv17-YNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RLv18OYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv12eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv18eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv18uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLv18-YNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv19OYNEeWt6-AQEw3bRw" name="Call(+)">
                  <argument xmi:id="_RLv19eYNEeWt6-AQEw3bRw" name="Call(+).argument(x)" incoming="_RLv12OYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv19uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv19-YNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <argument xmi:id="_RLv1-OYNEeWt6-AQEw3bRw" name="Call(+).argument(y)" incoming="_RLv12eYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1-eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1-uYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLv1--YNEeWt6-AQEw3bRw" name="Call(+).result(result)" outgoing="_RLv08OYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv1_OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv1_eYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv1_uYNEeWt6-AQEw3bRw" name="Value(1)">
                  <result xmi:id="_RLv1_-YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv07-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2AOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2AeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLv2AuYNEeWt6-AQEw3bRw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_RLv2A-YNEeWt6-AQEw3bRw" name="DoStatement@1106efd4" incoming="_RLvPPOYNEeWt6-AQEw3bRw" outgoing="_RLvPPeYNEeWt6-AQEw3bRw" bodyOutput="_RLv2H-YNEeWt6-AQEw3bRw _RLv2IuYNEeWt6-AQEw3bRw _RLv2JeYNEeWt6-AQEw3bRw _RLv2KOYNEeWt6-AQEw3bRw" bodyPart="_RLv2F-YNEeWt6-AQEw3bRw" decider="_RLv2FOYNEeWt6-AQEw3bRw" test="_RLv2D-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2BOYNEeWt6-AQEw3bRw" target="_RLv2C-YNEeWt6-AQEw3bRw" source="_RLv2n-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2BeYNEeWt6-AQEw3bRw" target="_RLv2DOYNEeWt6-AQEw3bRw" source="_RLv2ouYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2BuYNEeWt6-AQEw3bRw" target="_RLv2DeYNEeWt6-AQEw3bRw" source="_RLv2peYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2B-YNEeWt6-AQEw3bRw" target="_RLv2DuYNEeWt6-AQEw3bRw" source="_RLv2qOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2COYNEeWt6-AQEw3bRw" target="_RLv2geYNEeWt6-AQEw3bRw" source="_RLv2C-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2CeYNEeWt6-AQEw3bRw" target="_RLv2keYNEeWt6-AQEw3bRw" source="_RLv2DeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2CuYNEeWt6-AQEw3bRw" target="_RLv2meYNEeWt6-AQEw3bRw" source="_RLv2DuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv2C-YNEeWt6-AQEw3bRw" name="Fork(DoStatement@1106efd4.loopVariable(terminate))" incoming="_RLv2BOYNEeWt6-AQEw3bRw" outgoing="_RLv2COYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv2DOYNEeWt6-AQEw3bRw" name="Fork(DoStatement@1106efd4.loopVariable(s))" incoming="_RLv2BeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv2DeYNEeWt6-AQEw3bRw" name="Fork(DoStatement@1106efd4.loopVariable(arrival3))" incoming="_RLv2BuYNEeWt6-AQEw3bRw" outgoing="_RLv2CeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv2DuYNEeWt6-AQEw3bRw" name="Fork(DoStatement@1106efd4.loopVariable(sig))" incoming="_RLv2B-YNEeWt6-AQEw3bRw" outgoing="_RLv2CuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2D-YNEeWt6-AQEw3bRw" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2EOYNEeWt6-AQEw3bRw" target="_RLv2FOYNEeWt6-AQEw3bRw" source="_RLv2EeYNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLv2EeYNEeWt6-AQEw3bRw" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_RLvPO-YNEeWt6-AQEw3bRw" outgoing="_RLv2EOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2EuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2E-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_RLv2FOYNEeWt6-AQEw3bRw" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_RLv2EOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2FeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2FuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2F-YNEeWt6-AQEw3bRw" name="BodyPart(DoStatement@1106efd4)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2GOYNEeWt6-AQEw3bRw" target="_RLv2H-YNEeWt6-AQEw3bRw" source="_RLv2hOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2GeYNEeWt6-AQEw3bRw" target="_RLv2IuYNEeWt6-AQEw3bRw" source="_RLv2jOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2GuYNEeWt6-AQEw3bRw" target="_RLv2JeYNEeWt6-AQEw3bRw" source="_RLv2lOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2G-YNEeWt6-AQEw3bRw" target="_RLv2KOYNEeWt6-AQEw3bRw" source="_RLv2nOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2HOYNEeWt6-AQEw3bRw" target="_RLv2LeYNEeWt6-AQEw3bRw" source="_RLv2OOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2HeYNEeWt6-AQEw3bRw" target="_RLv2K-YNEeWt6-AQEw3bRw" source="_RLv2M-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2HuYNEeWt6-AQEw3bRw" target="_RLv2ieYNEeWt6-AQEw3bRw" source="_RLv2OOYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RLv2H-YNEeWt6-AQEw3bRw" name="terminate" incoming="_RLv2GOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2IOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2IeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_RLv2IuYNEeWt6-AQEw3bRw" name="s" incoming="_RLv2GeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2I-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2JOYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_RLv2JeYNEeWt6-AQEw3bRw" name="arrival3" incoming="_RLv2GuYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2JuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2J-YNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_RLv2KOYNEeWt6-AQEw3bRw" name="sig" incoming="_RLv2G-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2KeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2KuYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2K-YNEeWt6-AQEw3bRw" name="Condition(DoStatement@1106efd4)" incoming="_RLv2HeYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLv2LOYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_RLvO_eYNEeWt6-AQEw3bRw" isDirect="true">
                    <object xmi:id="_RLv2LeYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_RLv2HOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2LuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2L-YNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLv2MOYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_RLvPO-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2MeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2MuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2M-YNEeWt6-AQEw3bRw" name="Body(DoStatement@1106efd4)" outgoing="_RLv2HeYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2NOYNEeWt6-AQEw3bRw" target="_RLv2QOYNEeWt6-AQEw3bRw" source="_RLv2NeYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2NeYNEeWt6-AQEw3bRw" name="AcceptStatement@7e6296c8" outgoing="_RLv2NOYNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2NuYNEeWt6-AQEw3bRw" target="_RLv2OeYNEeWt6-AQEw3bRw" source="_RLv2P-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2N-YNEeWt6-AQEw3bRw" target="_RLv2OOYNEeWt6-AQEw3bRw" source="_RLv2OuYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLv2OOYNEeWt6-AQEw3bRw" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_RLv2N-YNEeWt6-AQEw3bRw" outgoing="_RLv2HOYNEeWt6-AQEw3bRw _RLv2HuYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv2OeYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination)" incoming="_RLv2NuYNEeWt6-AQEw3bRw">
                      <result xmi:id="_RLv2OuYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_RLv2N-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2O-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2POYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <trigger xmi:id="_RLv2PeYNEeWt6-AQEw3bRw" event="_RLwdnuYNEeWt6-AQEw3bRw"/>
                      <trigger xmi:id="_RLv2PuYNEeWt6-AQEw3bRw" event="_RLwdn-YNEeWt6-AQEw3bRw"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_RLv2P-YNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_RLv2NuYNEeWt6-AQEw3bRw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2QOYNEeWt6-AQEw3bRw" name="ExpressionStatement@4cb1203b" incoming="_RLv2NOYNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2QeYNEeWt6-AQEw3bRw" target="_RLv2TeYNEeWt6-AQEw3bRw" source="_RLv2VOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2QuYNEeWt6-AQEw3bRw" target="_RLv2aOYNEeWt6-AQEw3bRw" source="_RLv2ZuYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2Q-YNEeWt6-AQEw3bRw" target="_RLv2ceYNEeWt6-AQEw3bRw" source="_RLv2buYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2ROYNEeWt6-AQEw3bRw" target="_RLv2deYNEeWt6-AQEw3bRw" source="_RLv2a-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2ReYNEeWt6-AQEw3bRw" target="_RLv2buYNEeWt6-AQEw3bRw" source="_RLv2UOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2RuYNEeWt6-AQEw3bRw" target="_RLv2Z-YNEeWt6-AQEw3bRw" source="_RLv2WOYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2R-YNEeWt6-AQEw3bRw" target="_RLv2fuYNEeWt6-AQEw3bRw" source="_RLv2Y-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2SOYNEeWt6-AQEw3bRw" target="_RLv2SuYNEeWt6-AQEw3bRw" source="_RLv2fuYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv2SeYNEeWt6-AQEw3bRw" name="Call(+)">
                      <argument xmi:id="_RLv2SuYNEeWt6-AQEw3bRw" name="Call(+).argument(x)" incoming="_RLv2SOYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2S-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2TOYNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <argument xmi:id="_RLv2TeYNEeWt6-AQEw3bRw" name="Call(+).argument(y)" incoming="_RLv2QeYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2TuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2T-YNEeWt6-AQEw3bRw" value="1"/>
                      </argument>
                      <result xmi:id="_RLv2UOYNEeWt6-AQEw3bRw" name="Call(+).result(result)" outgoing="_RLv2ReYNEeWt6-AQEw3bRw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2UeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2UuYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv2U-YNEeWt6-AQEw3bRw" name="Value(1)">
                      <result xmi:id="_RLv2VOYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv2QeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2VeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2VuYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_RLv2V-YNEeWt6-AQEw3bRw" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2WOYNEeWt6-AQEw3bRw" name="RightHandSide@427baf49" outgoing="_RLv2RuYNEeWt6-AQEw3bRw">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2WeYNEeWt6-AQEw3bRw" target="_RLv2ZuYNEeWt6-AQEw3bRw" source="_RLv2XOYNEeWt6-AQEw3bRw"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2WuYNEeWt6-AQEw3bRw" target="_RLv2YOYNEeWt6-AQEw3bRw" source="_RLv2ZuYNEeWt6-AQEw3bRw"/>
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv2W-YNEeWt6-AQEw3bRw" name="ReadSelf">
                        <result xmi:id="_RLv2XOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv2WeYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2XeYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2XuYNEeWt6-AQEw3bRw" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv2X-YNEeWt6-AQEw3bRw" name="Read(count)" structuralFeature="_RLvPF-YNEeWt6-AQEw3bRw">
                        <object xmi:id="_RLv2YOYNEeWt6-AQEw3bRw" name="Read(count).object" incoming="_RLv2WuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2YeYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2YuYNEeWt6-AQEw3bRw" value="1"/>
                        </object>
                        <result xmi:id="_RLv2Y-YNEeWt6-AQEw3bRw" name="Read(count).result" outgoing="_RLv2R-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2ZOYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2ZeYNEeWt6-AQEw3bRw" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_RLv2ZuYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLv2WeYNEeWt6-AQEw3bRw" outgoing="_RLv2WuYNEeWt6-AQEw3bRw _RLv2QuYNEeWt6-AQEw3bRw"/>
                    </node>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv2Z-YNEeWt6-AQEw3bRw" name="Clear(count)" incoming="_RLv2RuYNEeWt6-AQEw3bRw" structuralFeature="_RLvPF-YNEeWt6-AQEw3bRw">
                      <object xmi:id="_RLv2aOYNEeWt6-AQEw3bRw" name="Clear(count).object" incoming="_RLv2QuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2aeYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2auYNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RLv2a-YNEeWt6-AQEw3bRw" name="Clear(count).result" outgoing="_RLv2ROYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2bOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2beYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLv2buYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@427baf49)" incoming="_RLv2ReYNEeWt6-AQEw3bRw" outgoing="_RLv2Q-YNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2b-YNEeWt6-AQEw3bRw" name="WriteAll(MyTest::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2cOYNEeWt6-AQEw3bRw" target="_RLv2e-YNEeWt6-AQEw3bRw" source="_RLv2ceYNEeWt6-AQEw3bRw"/>
                      <structuredNodeInput xmi:id="_RLv2ceYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::count).input(MyTest::count)" incoming="_RLv2Q-YNEeWt6-AQEw3bRw" outgoing="_RLv2cOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2cuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2c-YNEeWt6-AQEw3bRw" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv2dOYNEeWt6-AQEw3bRw" name="Write(count)" structuralFeature="_RLvPF-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                        <object xmi:id="_RLv2deYNEeWt6-AQEw3bRw" name="Write(count).object" incoming="_RLv2ROYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2duYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2d-YNEeWt6-AQEw3bRw" value="1"/>
                        </object>
                        <result xmi:id="_RLv2eOYNEeWt6-AQEw3bRw" name="Write(count).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2eeYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2euYNEeWt6-AQEw3bRw" value="1"/>
                        </result>
                        <value xmi:id="_RLv2e-YNEeWt6-AQEw3bRw" name="Write(count).value" incoming="_RLv2cOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2fOYNEeWt6-AQEw3bRw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2feYNEeWt6-AQEw3bRw" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLv2fuYNEeWt6-AQEw3bRw" name="Fork(Read(count).result)" incoming="_RLv2R-YNEeWt6-AQEw3bRw" outgoing="_RLv2SOYNEeWt6-AQEw3bRw"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2f-YNEeWt6-AQEw3bRw" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2gOYNEeWt6-AQEw3bRw" target="_RLv2hOYNEeWt6-AQEw3bRw" source="_RLv2geYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv2geYNEeWt6-AQEw3bRw" name="Passthru(Fork(terminate)).input" incoming="_RLv2COYNEeWt6-AQEw3bRw" outgoing="_RLv2gOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2guYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2g-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RLv2hOYNEeWt6-AQEw3bRw" name="Passthru(Fork(terminate)).output" incoming="_RLv2gOYNEeWt6-AQEw3bRw" outgoing="_RLv2GOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2heYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2huYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2h-YNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2iOYNEeWt6-AQEw3bRw" target="_RLv2jOYNEeWt6-AQEw3bRw" source="_RLv2ieYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv2ieYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_RLv2HuYNEeWt6-AQEw3bRw" outgoing="_RLv2iOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2iuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2i-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RLv2jOYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_RLv2iOYNEeWt6-AQEw3bRw" outgoing="_RLv2GeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2jeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2juYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2j-YNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2kOYNEeWt6-AQEw3bRw" target="_RLv2lOYNEeWt6-AQEw3bRw" source="_RLv2keYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv2keYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_RLv2CeYNEeWt6-AQEw3bRw" outgoing="_RLv2kOYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2kuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2k-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RLv2lOYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_RLv2kOYNEeWt6-AQEw3bRw" outgoing="_RLv2GuYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2leYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2luYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2l-YNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv2mOYNEeWt6-AQEw3bRw" target="_RLv2nOYNEeWt6-AQEw3bRw" source="_RLv2meYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv2meYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_RLv2CuYNEeWt6-AQEw3bRw" outgoing="_RLv2mOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2muYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2m-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_RLv2nOYNEeWt6-AQEw3bRw" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_RLv2mOYNEeWt6-AQEw3bRw" outgoing="_RLv2G-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2neYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2nuYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_RLv2n-YNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariable(terminate)" outgoing="_RLv2BOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2oOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2oeYNEeWt6-AQEw3bRw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_RLv2ouYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariable(s)" outgoing="_RLv2BeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2o-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2pOYNEeWt6-AQEw3bRw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_RLv2peYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariable(arrival3)" outgoing="_RLv2BuYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2puYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2p-YNEeWt6-AQEw3bRw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_RLv2qOYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariable(sig)" outgoing="_RLv2B-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2qeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2quYNEeWt6-AQEw3bRw" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_RLv2q-YNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariableInput(terminate)" incoming="_RLvPN-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2rOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2reYNEeWt6-AQEw3bRw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_RLv2ruYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2r-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2sOYNEeWt6-AQEw3bRw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_RLv2seYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariableInput(arrival3)" incoming="_RLvPOeYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2suYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2s-YNEeWt6-AQEw3bRw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_RLv2tOYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.loopVariableInput(sig)" incoming="_RLvPOuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2teYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2tuYNEeWt6-AQEw3bRw" value="1"/>
              </loopVariableInput>
              <result xmi:id="_RLv2t-YNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2uOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2ueYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <result xmi:id="_RLv2uuYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.result(s)" outgoing="_RLvPOOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2u-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2vOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <result xmi:id="_RLv2veYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.result(arrival3)" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2vuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2v-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <result xmi:id="_RLv2wOYNEeWt6-AQEw3bRw" name="DoStatement@1106efd4.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2weYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2wuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLv2w-YNEeWt6-AQEw3bRw" name="Fork(s)" incoming="_RLvPOOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_RLv2xOYNEeWt6-AQEw3bRw" name="IfStatement@734ec905" incoming="_RLvPPeYNEeWt6-AQEw3bRw" outgoing="_RLvPPuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2xeYNEeWt6-AQEw3bRw" target="_RLv20eYNEeWt6-AQEw3bRw" source="_RLv2zOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2xuYNEeWt6-AQEw3bRw" target="_RLv3A-YNEeWt6-AQEw3bRw" source="_RLv2_uYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv2x-YNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RLv2yOYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2yeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2yuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RLv2y-YNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2zOYNEeWt6-AQEw3bRw" name="AcceptStatement@6b184bcd" outgoing="_RLv2xeYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2zeYNEeWt6-AQEw3bRw" target="_RLv2zuYNEeWt6-AQEw3bRw" source="_RLv20OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv2zuYNEeWt6-AQEw3bRw" name="Accept(SignalNewArrival)" incoming="_RLv2zeYNEeWt6-AQEw3bRw">
                  <trigger xmi:id="_RLv2z-YNEeWt6-AQEw3bRw" event="_RLwdoOYNEeWt6-AQEw3bRw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RLv20OYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalNewArrival))" outgoing="_RLv2zeYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv20eYNEeWt6-AQEw3bRw" name="ExpressionStatement@25c8d6ed" incoming="_RLv2xeYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv20uYNEeWt6-AQEw3bRw" target="_RLv23eYNEeWt6-AQEw3bRw" source="_RLv22eYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv20-YNEeWt6-AQEw3bRw" target="_RLv25uYNEeWt6-AQEw3bRw" source="_RLv24-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv21OYNEeWt6-AQEw3bRw" target="_RLv26uYNEeWt6-AQEw3bRw" source="_RLv24OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv21eYNEeWt6-AQEw3bRw" target="_RLv24-YNEeWt6-AQEw3bRw" source="_RLv29eYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv21uYNEeWt6-AQEw3bRw" target="_RLv21-YNEeWt6-AQEw3bRw" source="_RLv28-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv21-YNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@67b20d1)" incoming="_RLv21uYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv22OYNEeWt6-AQEw3bRw" name="ReadSelf">
                    <result xmi:id="_RLv22eYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv20uYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv22uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv22-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv23OYNEeWt6-AQEw3bRw" name="Clear(flag)" structuralFeature="_RLvPHeYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv23eYNEeWt6-AQEw3bRw" name="Clear(flag).object" incoming="_RLv20uYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv23uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv23-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv24OYNEeWt6-AQEw3bRw" name="Clear(flag).result" outgoing="_RLv21OYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv24eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv24uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv24-YNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@67b20d1)" incoming="_RLv21eYNEeWt6-AQEw3bRw" outgoing="_RLv20-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv25OYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv25eYNEeWt6-AQEw3bRw" target="_RLv28OYNEeWt6-AQEw3bRw" source="_RLv25uYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv25uYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_RLv20-YNEeWt6-AQEw3bRw" outgoing="_RLv25eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv25-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv26OYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv26eYNEeWt6-AQEw3bRw" name="Write(flag)" structuralFeature="_RLvPHeYNEeWt6-AQEw3bRw" isReplaceAll="true">
                    <object xmi:id="_RLv26uYNEeWt6-AQEw3bRw" name="Write(flag).object" incoming="_RLv21OYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv26-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv27OYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLv27eYNEeWt6-AQEw3bRw" name="Write(flag).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv27uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv27-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RLv28OYNEeWt6-AQEw3bRw" name="Write(flag).value" incoming="_RLv25eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv28eYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv28uYNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv28-YNEeWt6-AQEw3bRw" name="RightHandSide@38836acd" outgoing="_RLv21uYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv29OYNEeWt6-AQEw3bRw" name="Value(true)">
                    <result xmi:id="_RLv29eYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLv21eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv29uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv29-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_RLv2-OYNEeWt6-AQEw3bRw" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv2-eYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RLv2-uYNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv2--YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv2_OYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RLv2_eYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv2_uYNEeWt6-AQEw3bRw" name="AcceptStatement@2e10891b" outgoing="_RLv2xuYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv2_-YNEeWt6-AQEw3bRw" target="_RLv3AOYNEeWt6-AQEw3bRw" source="_RLv3AuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv3AOYNEeWt6-AQEw3bRw" name="Accept(SignalTermination)" incoming="_RLv2_-YNEeWt6-AQEw3bRw">
                  <trigger xmi:id="_RLv3AeYNEeWt6-AQEw3bRw" event="_RLwdoeYNEeWt6-AQEw3bRw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RLv3AuYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalTermination))" outgoing="_RLv2_-YNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3A-YNEeWt6-AQEw3bRw" name="ExpressionStatement@46643098" incoming="_RLv2xuYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3BOYNEeWt6-AQEw3bRw" target="_RLv3D-YNEeWt6-AQEw3bRw" source="_RLv3C-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3BeYNEeWt6-AQEw3bRw" target="_RLv3GOYNEeWt6-AQEw3bRw" source="_RLv3FeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3BuYNEeWt6-AQEw3bRw" target="_RLv3HOYNEeWt6-AQEw3bRw" source="_RLv3EuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3B-YNEeWt6-AQEw3bRw" target="_RLv3FeYNEeWt6-AQEw3bRw" source="_RLv3J-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3COYNEeWt6-AQEw3bRw" target="_RLv3CeYNEeWt6-AQEw3bRw" source="_RLv3JeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3CeYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@14ded434)" incoming="_RLv3COYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv3CuYNEeWt6-AQEw3bRw" name="ReadSelf">
                    <result xmi:id="_RLv3C-YNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv3BOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3DOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3DeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv3DuYNEeWt6-AQEw3bRw" name="Clear(flag)" structuralFeature="_RLvPHeYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv3D-YNEeWt6-AQEw3bRw" name="Clear(flag).object" incoming="_RLv3BOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3EOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3EeYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv3EuYNEeWt6-AQEw3bRw" name="Clear(flag).result" outgoing="_RLv3BuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3E-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3FOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv3FeYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@14ded434)" incoming="_RLv3B-YNEeWt6-AQEw3bRw" outgoing="_RLv3BeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3FuYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3F-YNEeWt6-AQEw3bRw" target="_RLv3IuYNEeWt6-AQEw3bRw" source="_RLv3GOYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv3GOYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_RLv3BeYNEeWt6-AQEw3bRw" outgoing="_RLv3F-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3GeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3GuYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv3G-YNEeWt6-AQEw3bRw" name="Write(flag)" structuralFeature="_RLvPHeYNEeWt6-AQEw3bRw" isReplaceAll="true">
                    <object xmi:id="_RLv3HOYNEeWt6-AQEw3bRw" name="Write(flag).object" incoming="_RLv3BuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3HeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3HuYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLv3H-YNEeWt6-AQEw3bRw" name="Write(flag).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3IOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3IeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RLv3IuYNEeWt6-AQEw3bRw" name="Write(flag).value" incoming="_RLv3F-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3I-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3JOYNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3JeYNEeWt6-AQEw3bRw" name="RightHandSide@13e8924f" outgoing="_RLv3COYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv3JuYNEeWt6-AQEw3bRw" name="Value(false)">
                    <result xmi:id="_RLv3J-YNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RLv3B-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3KOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3KeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_RLv3KuYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <clause xmi:id="_RLv3K-YNEeWt6-AQEw3bRw" body="_RLv2zOYNEeWt6-AQEw3bRw _RLv20eYNEeWt6-AQEw3bRw" decider="_RLv2yOYNEeWt6-AQEw3bRw" successorClause="_RLv3LOYNEeWt6-AQEw3bRw" test="_RLv2x-YNEeWt6-AQEw3bRw"/>
              <clause xmi:id="_RLv3LOYNEeWt6-AQEw3bRw" body="_RLv2_uYNEeWt6-AQEw3bRw _RLv3A-YNEeWt6-AQEw3bRw" decider="_RLv2-uYNEeWt6-AQEw3bRw" predecessorClause="_RLv3K-YNEeWt6-AQEw3bRw" test="_RLv2-eYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3LeYNEeWt6-AQEw3bRw" name="AcceptStatement@5dbe3491" incoming="_RLvPPuYNEeWt6-AQEw3bRw" outgoing="_RLvPQOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3LuYNEeWt6-AQEw3bRw" target="_RLv3MeYNEeWt6-AQEw3bRw" source="_RLv3NuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3L-YNEeWt6-AQEw3bRw" target="_RLv3MOYNEeWt6-AQEw3bRw" source="_RLv3MuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv3MOYNEeWt6-AQEw3bRw" name="Fork(Accept(SignalTermination).result)" incoming="_RLv3L-YNEeWt6-AQEw3bRw" outgoing="_RLvPP-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv3MeYNEeWt6-AQEw3bRw" name="Accept(SignalTermination)" incoming="_RLv3LuYNEeWt6-AQEw3bRw">
                <result xmi:id="_RLv3MuYNEeWt6-AQEw3bRw" name="Accept(SignalTermination).result" outgoing="_RLv3L-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3M-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3NOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <trigger xmi:id="_RLv3NeYNEeWt6-AQEw3bRw" event="_RLwdouYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLv3NuYNEeWt6-AQEw3bRw" name="Initial(Accept(SignalTermination))" outgoing="_RLv3LuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3N-YNEeWt6-AQEw3bRw" name="ExpressionStatement@18eaaaa" incoming="_RLvPQOYNEeWt6-AQEw3bRw" outgoing="_RLvPQeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3OOYNEeWt6-AQEw3bRw" target="_RLv3QuYNEeWt6-AQEw3bRw" source="_RLv3PuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3OeYNEeWt6-AQEw3bRw" target="_RLv3S-YNEeWt6-AQEw3bRw" source="_RLv3SOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3OuYNEeWt6-AQEw3bRw" target="_RLv3T-YNEeWt6-AQEw3bRw" source="_RLv3ReYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3O-YNEeWt6-AQEw3bRw" target="_RLv3POYNEeWt6-AQEw3bRw" source="_RLv3WOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3POYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@2050d11c)" incoming="_RLv3O-YNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv3PeYNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RLv3PuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv3OOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3P-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3QOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv3QeYNEeWt6-AQEw3bRw" name="Clear(sig1)" structuralFeature="_RLvPC-YNEeWt6-AQEw3bRw">
                <object xmi:id="_RLv3QuYNEeWt6-AQEw3bRw" name="Clear(sig1).object" incoming="_RLv3OOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3Q-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3ROYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLv3ReYNEeWt6-AQEw3bRw" name="Clear(sig1).result" outgoing="_RLv3OuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3RuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3R-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv3SOYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@2050d11c)" incoming="_RLvPP-YNEeWt6-AQEw3bRw" outgoing="_RLv3OeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3SeYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3SuYNEeWt6-AQEw3bRw" target="_RLv3VeYNEeWt6-AQEw3bRw" source="_RLv3S-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLv3S-YNEeWt6-AQEw3bRw" name="WriteAll(MyTest::sig1).input(MyTest::sig1)" incoming="_RLv3OeYNEeWt6-AQEw3bRw" outgoing="_RLv3SuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3TOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3TeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv3TuYNEeWt6-AQEw3bRw" name="Write(sig1)" structuralFeature="_RLvPC-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLv3T-YNEeWt6-AQEw3bRw" name="Write(sig1).object" incoming="_RLv3OuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3UOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3UeYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv3UuYNEeWt6-AQEw3bRw" name="Write(sig1).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3U-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3VOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLv3VeYNEeWt6-AQEw3bRw" name="Write(sig1).value" incoming="_RLv3SuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3VuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3V-YNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3WOYNEeWt6-AQEw3bRw" name="RightHandSide@2d97a8de" outgoing="_RLv3O-YNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3WeYNEeWt6-AQEw3bRw" name="ExpressionStatement@4464784f" incoming="_RLvPQeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3WuYNEeWt6-AQEw3bRw" target="_RLv3XuYNEeWt6-AQEw3bRw" source="_RLv3aeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3W-YNEeWt6-AQEw3bRw" target="_RLv3bOYNEeWt6-AQEw3bRw" source="_RLv3YuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3XOYNEeWt6-AQEw3bRw" target="_RLv3ZuYNEeWt6-AQEw3bRw" source="_RLv3bOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLv3XeYNEeWt6-AQEw3bRw" name="SendSignal(Continue)" signal="_RLwdk-YNEeWt6-AQEw3bRw">
                <target xmi:id="_RLv3XuYNEeWt6-AQEw3bRw" name="SendSignal(Continue).target" incoming="_RLv3WuYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3X-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3YOYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv3YeYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RLv3YuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv3W-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3Y-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3ZOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv3ZeYNEeWt6-AQEw3bRw" name="Read(tester)" structuralFeature="_RLvPIOYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLv3ZuYNEeWt6-AQEw3bRw" name="Read(tester).object" incoming="_RLv3XOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3Z-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3aOYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLv3aeYNEeWt6-AQEw3bRw" name="Read(tester).result" outgoing="_RLv3WuYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3auYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3a-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv3bOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLv3W-YNEeWt6-AQEw3bRw" outgoing="_RLv3XOYNEeWt6-AQEw3bRw"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLv3beYNEeWt6-AQEw3bRw" name="MyTest$method$1" specification="_RLv4N-YNEeWt6-AQEw3bRw" node="_RLv3eeYNEeWt6-AQEw3bRw _RLv3fOYNEeWt6-AQEw3bRw _RLv3euYNEeWt6-AQEw3bRw _RLv3guYNEeWt6-AQEw3bRw _RLv3e-YNEeWt6-AQEw3bRw" group="_RLv3fOYNEeWt6-AQEw3bRw _RLv3guYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLv3buYNEeWt6-AQEw3bRw" name="tester" type="_RLv4Q-YNEeWt6-AQEw3bRw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3b-YNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3cOYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RLv3ceYNEeWt6-AQEw3bRw" name="" type="_RLvPA-YNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3cuYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3c-YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3dOYNEeWt6-AQEw3bRw" target="_RLv3fuYNEeWt6-AQEw3bRw" source="_RLv3eeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3deYNEeWt6-AQEw3bRw" target="_RLv3oOYNEeWt6-AQEw3bRw" source="_RLv3geYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3duYNEeWt6-AQEw3bRw" target="_RLv3euYNEeWt6-AQEw3bRw" source="_RLv3teYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3d-YNEeWt6-AQEw3bRw" target="_RLv3e-YNEeWt6-AQEw3bRw" source="_RLv3fOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3eOYNEeWt6-AQEw3bRw" target="_RLv3guYNEeWt6-AQEw3bRw" source="_RLv3e-YNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RLv3fOYNEeWt6-AQEw3bRw" name="Node(Input(tester))" outgoing="_RLv3d-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3feYNEeWt6-AQEw3bRw" target="_RLv3geYNEeWt6-AQEw3bRw" source="_RLv3fuYNEeWt6-AQEw3bRw"/>
            <structuredNodeInput xmi:id="_RLv3fuYNEeWt6-AQEw3bRw" name="Input(tester)" incoming="_RLv3dOYNEeWt6-AQEw3bRw" outgoing="_RLv3feYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3f-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3gOYNEeWt6-AQEw3bRw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_RLv3geYNEeWt6-AQEw3bRw" name="Fork(tester)" incoming="_RLv3feYNEeWt6-AQEw3bRw" outgoing="_RLv3deYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <structuredNode xmi:id="_RLv3guYNEeWt6-AQEw3bRw" name="Body(MyTest$method$1)" incoming="_RLv3eOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3g-YNEeWt6-AQEw3bRw" target="_RLv3teYNEeWt6-AQEw3bRw" source="_RLv3suYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3hOYNEeWt6-AQEw3bRw" target="_RLv3t-YNEeWt6-AQEw3bRw" source="_RLv3teYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3heYNEeWt6-AQEw3bRw" target="_RLv3juYNEeWt6-AQEw3bRw" source="_RLv3tuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3huYNEeWt6-AQEw3bRw" target="_RLv3u-YNEeWt6-AQEw3bRw" source="_RLv3teYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3h-YNEeWt6-AQEw3bRw" target="_RLv3wuYNEeWt6-AQEw3bRw" source="_RLv3vuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3iOYNEeWt6-AQEw3bRw" target="_RLv3zuYNEeWt6-AQEw3bRw" source="_RLv3xeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3ieYNEeWt6-AQEw3bRw" target="_RLv31OYNEeWt6-AQEw3bRw" source="_RLv3yeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3iuYNEeWt6-AQEw3bRw" target="_RLv32OYNEeWt6-AQEw3bRw" source="_RLv31-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3i-YNEeWt6-AQEw3bRw" target="_RLv32OYNEeWt6-AQEw3bRw" source="_RLv30eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3jOYNEeWt6-AQEw3bRw" target="_RLv3tuYNEeWt6-AQEw3bRw" source="_RLv32OYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLv3jeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3juYNEeWt6-AQEw3bRw" name="Body" incoming="_RLv3heYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3j-YNEeWt6-AQEw3bRw" name="ExpressionStatement@15d2942">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3kOYNEeWt6-AQEw3bRw" target="_RLv3muYNEeWt6-AQEw3bRw" source="_RLv3luYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3keYNEeWt6-AQEw3bRw" target="_RLv3o-YNEeWt6-AQEw3bRw" source="_RLv3oOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3kuYNEeWt6-AQEw3bRw" target="_RLv3p-YNEeWt6-AQEw3bRw" source="_RLv3neYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv3k-YNEeWt6-AQEw3bRw" target="_RLv3lOYNEeWt6-AQEw3bRw" source="_RLv3sOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3lOYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@5521f33f)" incoming="_RLv3k-YNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv3leYNEeWt6-AQEw3bRw" name="ReadSelf">
                    <result xmi:id="_RLv3luYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv3kOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3l-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3mOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLv3meYNEeWt6-AQEw3bRw" name="Clear(tester)" structuralFeature="_RLvPIOYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv3muYNEeWt6-AQEw3bRw" name="Clear(tester).object" incoming="_RLv3kOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3m-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3nOYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv3neYNEeWt6-AQEw3bRw" name="Clear(tester).result" outgoing="_RLv3kuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3nuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3n-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv3oOYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@5521f33f)" incoming="_RLv3deYNEeWt6-AQEw3bRw" outgoing="_RLv3keYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3oeYNEeWt6-AQEw3bRw" name="WriteAll(MyTest::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv3ouYNEeWt6-AQEw3bRw" target="_RLv3reYNEeWt6-AQEw3bRw" source="_RLv3o-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLv3o-YNEeWt6-AQEw3bRw" name="WriteAll(MyTest::tester).input(MyTest::tester)" incoming="_RLv3keYNEeWt6-AQEw3bRw" outgoing="_RLv3ouYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3pOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3peYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv3puYNEeWt6-AQEw3bRw" name="Write(tester)" structuralFeature="_RLvPIOYNEeWt6-AQEw3bRw" isReplaceAll="true">
                    <object xmi:id="_RLv3p-YNEeWt6-AQEw3bRw" name="Write(tester).object" incoming="_RLv3kuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3qOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3qeYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLv3quYNEeWt6-AQEw3bRw" name="Write(tester).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3q-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3rOYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RLv3reYNEeWt6-AQEw3bRw" name="Write(tester).value" incoming="_RLv3ouYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3ruYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3r-YNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv3sOYNEeWt6-AQEw3bRw" name="RightHandSide@13ffccbe" outgoing="_RLv3k-YNEeWt6-AQEw3bRw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv3seYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLv3suYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv3g-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3s-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3tOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLv3teYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLv3g-YNEeWt6-AQEw3bRw" outgoing="_RLv3duYNEeWt6-AQEw3bRw _RLv3hOYNEeWt6-AQEw3bRw _RLv3huYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLv3tuYNEeWt6-AQEw3bRw" name="Call(MyTest$initialization$1)" incoming="_RLv3jOYNEeWt6-AQEw3bRw" outgoing="_RLv3heYNEeWt6-AQEw3bRw" operation="_RLv4NuYNEeWt6-AQEw3bRw">
              <target xmi:id="_RLv3t-YNEeWt6-AQEw3bRw" name="Call(MyTest$initialization$1).target" incoming="_RLv3hOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3uOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3ueYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv3uuYNEeWt6-AQEw3bRw" name="Read(MyTest$initializationFlag$1)" structuralFeature="_RLvPBeYNEeWt6-AQEw3bRw">
              <object xmi:id="_RLv3u-YNEeWt6-AQEw3bRw" name="Read(MyTest$initializationFlag$1).object" incoming="_RLv3huYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3vOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3veYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLv3vuYNEeWt6-AQEw3bRw" name="Read(MyTest$initializationFlag$1).result" outgoing="_RLv3h-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3v-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3wOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv3weYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLv3wuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLv3h-YNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3w-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3xOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLv3xeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLv3iOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3xuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3x-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv3yOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLv3yeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLv3ieYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3yuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3y-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLv3zOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLv3zeYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLv3zuYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLv3iOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3z-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv30OYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLv30eYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLv3i-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv30uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv30-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLv31OYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLv3ieYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv31eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv31uYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLv31-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLv3iuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLv32OYNEeWt6-AQEw3bRw" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_RLv3iuYNEeWt6-AQEw3bRw _RLv3i-YNEeWt6-AQEw3bRw" outgoing="_RLv3jOYNEeWt6-AQEw3bRw" decisionInputFlow="_RLv3i-YNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLv3eeYNEeWt6-AQEw3bRw" name="Input(tester)" outgoing="_RLv3dOYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" parameter="_RLv3buYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLv3euYNEeWt6-AQEw3bRw" name="Return" incoming="_RLv3duYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" parameter="_RLv3ceYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:JoinNode" xmi:id="_RLv3e-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLv3d-YNEeWt6-AQEw3bRw" outgoing="_RLv3eOYNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLv32eYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLv4PuYNEeWt6-AQEw3bRw" node="_RLv32uYNEeWt6-AQEw3bRw" group="_RLv32uYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLv32uYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLv32-YNEeWt6-AQEw3bRw" name="MyTest$initialization$1" specification="_RLv4NuYNEeWt6-AQEw3bRw" node="_RLv33OYNEeWt6-AQEw3bRw" group="_RLv33OYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLv33OYNEeWt6-AQEw3bRw" name="Body(MyTest$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv33eYNEeWt6-AQEw3bRw" target="_RLv37eYNEeWt6-AQEw3bRw" source="_RLv36uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv33uYNEeWt6-AQEw3bRw" target="_RLv38uYNEeWt6-AQEw3bRw" source="_RLv37eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv33-YNEeWt6-AQEw3bRw" target="_RLv3_eYNEeWt6-AQEw3bRw" source="_RLv37eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv34OYNEeWt6-AQEw3bRw" target="_RLv4DuYNEeWt6-AQEw3bRw" source="_RLv37eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv34eYNEeWt6-AQEw3bRw" target="_RLv4GOYNEeWt6-AQEw3bRw" source="_RLv37eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv34uYNEeWt6-AQEw3bRw" target="_RLv4H-YNEeWt6-AQEw3bRw" source="_RLv4G-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv34-YNEeWt6-AQEw3bRw" target="_RLv4K-YNEeWt6-AQEw3bRw" source="_RLv4IuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv35OYNEeWt6-AQEw3bRw" target="_RLv4MeYNEeWt6-AQEw3bRw" source="_RLv4JuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv35eYNEeWt6-AQEw3bRw" target="_RLv4NeYNEeWt6-AQEw3bRw" source="_RLv4NOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv35uYNEeWt6-AQEw3bRw" target="_RLv4NeYNEeWt6-AQEw3bRw" source="_RLv4LuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv35-YNEeWt6-AQEw3bRw" target="_RLv37uYNEeWt6-AQEw3bRw" source="_RLv4NeYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLv36OYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv36eYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLv36uYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv33eYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv36-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv37OYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLv37eYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLv33eYNEeWt6-AQEw3bRw" outgoing="_RLv33uYNEeWt6-AQEw3bRw _RLv33-YNEeWt6-AQEw3bRw _RLv34OYNEeWt6-AQEw3bRw _RLv34eYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv37uYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLv35-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv37-YNEeWt6-AQEw3bRw" target="_RLv39eYNEeWt6-AQEw3bRw" source="_RLv38eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv38OYNEeWt6-AQEw3bRw" target="_RLv4BuYNEeWt6-AQEw3bRw" source="_RLv39eYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RLv38eYNEeWt6-AQEw3bRw" name="Call(Super$initialization$1)" outgoing="_RLv37-YNEeWt6-AQEw3bRw" operation="_RLvO9-YNEeWt6-AQEw3bRw">
                <target xmi:id="_RLv38uYNEeWt6-AQEw3bRw" name="Call(Super$initialization$1).target" incoming="_RLv33uYNEeWt6-AQEw3bRw" type="_RLvOdOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv38-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv39OYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv39eYNEeWt6-AQEw3bRw" name="Initialize(count)" incoming="_RLv37-YNEeWt6-AQEw3bRw" outgoing="_RLv38OYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv39uYNEeWt6-AQEw3bRw" target="_RLv4A-YNEeWt6-AQEw3bRw" source="_RLv3-OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv39-YNEeWt6-AQEw3bRw" name="Value(0)">
                  <result xmi:id="_RLv3-OYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLv39uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3-eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3-uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLv3--YNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv3_OYNEeWt6-AQEw3bRw" name="Write(count)" structuralFeature="_RLvPF-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLv3_eYNEeWt6-AQEw3bRw" name="Write(count).object" incoming="_RLv33-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv3_uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv3_-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv4AOYNEeWt6-AQEw3bRw" name="Write(count).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4AeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4AuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLv4A-YNEeWt6-AQEw3bRw" name="Write(count).value" incoming="_RLv39uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4BOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4BeYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4BuYNEeWt6-AQEw3bRw" name="Set(initializationFlag)" incoming="_RLv38OYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4B-YNEeWt6-AQEw3bRw" target="_RLv4FOYNEeWt6-AQEw3bRw" source="_RLv4CeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv4COYNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RLv4CeYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLv4B-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4CuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4C-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RLv4DOYNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLv4DeYNEeWt6-AQEw3bRw" name="Write(MyTest$initializationFlag$1)" structuralFeature="_RLvPBeYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLv4DuYNEeWt6-AQEw3bRw" name="Write(MyTest$initializationFlag$1).object" incoming="_RLv34OYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4D-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4EOYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv4EeYNEeWt6-AQEw3bRw" name="Write(MyTest$initializationFlag$1).result" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4EuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4E-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLv4FOYNEeWt6-AQEw3bRw" name="Write(MyTest$initializationFlag$1).value" incoming="_RLv4B-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4FeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4FuYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv4F-YNEeWt6-AQEw3bRw" name="Read(MyTest$initializationFlag$1)" structuralFeature="_RLvPBeYNEeWt6-AQEw3bRw">
              <object xmi:id="_RLv4GOYNEeWt6-AQEw3bRw" name="Read(MyTest$initializationFlag$1).object" incoming="_RLv34eYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4GeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4GuYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLv4G-YNEeWt6-AQEw3bRw" name="Read(MyTest$initializationFlag$1).result" outgoing="_RLv34uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4HOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4HeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv4HuYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLv4H-YNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLv34uYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4IOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4IeYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLv4IuYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLv34-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4I-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4JOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv4JeYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLv4JuYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLv35OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4J-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4KOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLv4KeYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLv4KuYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLv4K-YNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLv34-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4LOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4LeYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLv4LuYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLv35uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4L-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4MOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLv4MeYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLv35OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4MuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4M-YNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLv4NOYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLv35eYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLv4NeYNEeWt6-AQEw3bRw" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_RLv35eYNEeWt6-AQEw3bRw _RLv35uYNEeWt6-AQEw3bRw" outgoing="_RLv35-YNEeWt6-AQEw3bRw" decisionInputFlow="_RLv35uYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RLv4NuYNEeWt6-AQEw3bRw" name="MyTest$initialization$1" visibility="protected" method="_RLv32-YNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RLv4N-YNEeWt6-AQEw3bRw" name="MyTest" visibility="public" method="_RLv3beYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLv4OOYNEeWt6-AQEw3bRw" name="tester" visibility="package" type="_RLv4Q-YNEeWt6-AQEw3bRw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4OeYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4OuYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RLv4O-YNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLvPA-YNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4POYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4PeYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RLv4PuYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLv32eYNEeWt6-AQEw3bRw" redefinedOperation="_RLvO_OYNEeWt6-AQEw3bRw"/>
        <ownedReception xmi:id="_RLv4P-YNEeWt6-AQEw3bRw" name="SignalNewArrival" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLv4QOYNEeWt6-AQEw3bRw" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4QeYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4QuYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedReception>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RLv4Q-YNEeWt6-AQEw3bRw" name="TestRunner" visibility="public" classifierBehavior="_RLv4SuYNEeWt6-AQEw3bRw" isActive="true">
        <ownedAttribute xmi:id="_RLv4ROYNEeWt6-AQEw3bRw" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4ReYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4RuYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RLv4R-YNEeWt6-AQEw3bRw" name="outer" visibility="private" type="_RLwdpeYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4SOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4SeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLv4SuYNEeWt6-AQEw3bRw" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_RLv4S-YNEeWt6-AQEw3bRw" group="_RLv4S-YNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLv4S-YNEeWt6-AQEw3bRw" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4TOYNEeWt6-AQEw3bRw" target="_RLv4ZuYNEeWt6-AQEw3bRw" source="_RLv4YeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4TeYNEeWt6-AQEw3bRw" target="_RLv4deYNEeWt6-AQEw3bRw" source="_RLv4ZuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4TuYNEeWt6-AQEw3bRw" target="_RLv4lOYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4T-YNEeWt6-AQEw3bRw" target="_RLv4euYNEeWt6-AQEw3bRw" source="_RLv4deYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4UOYNEeWt6-AQEw3bRw" target="_RLv4ueYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4UeYNEeWt6-AQEw3bRw" target="_RLv4nOYNEeWt6-AQEw3bRw" source="_RLv4euYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4UuYNEeWt6-AQEw3bRw" target="_RLv42OYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4U-YNEeWt6-AQEw3bRw" target="_RLv4v-YNEeWt6-AQEw3bRw" source="_RLv4nOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4VOYNEeWt6-AQEw3bRw" target="_RLv4-OYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4VeYNEeWt6-AQEw3bRw" target="_RLv42eYNEeWt6-AQEw3bRw" source="_RLv4v-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4VuYNEeWt6-AQEw3bRw" target="_RLv5L-YNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4V-YNEeWt6-AQEw3bRw" target="_RLv5BuYNEeWt6-AQEw3bRw" source="_RLv42eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4WOYNEeWt6-AQEw3bRw" target="_RLv5ZuYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4WeYNEeWt6-AQEw3bRw" target="_RLv5PeYNEeWt6-AQEw3bRw" source="_RLv5BuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4WuYNEeWt6-AQEw3bRw" target="_RLwbouYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4W-YNEeWt6-AQEw3bRw" target="_RLv5dOYNEeWt6-AQEw3bRw" source="_RLv5PeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4XOYNEeWt6-AQEw3bRw" target="_RLwbweYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4XeYNEeWt6-AQEw3bRw" target="_RLwbqOYNEeWt6-AQEw3bRw" source="_RLv5dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4XuYNEeWt6-AQEw3bRw" target="_RLwb3OYNEeWt6-AQEw3bRw" source="_RLv4dOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4X-YNEeWt6-AQEw3bRw" target="_RLwbwuYNEeWt6-AQEw3bRw" source="_RLwbqOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4YOYNEeWt6-AQEw3bRw" target="_RLwb5OYNEeWt6-AQEw3bRw" source="_RLwbwuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4YeYNEeWt6-AQEw3bRw" name="AcceptStatement@3a9ef884" outgoing="_RLv4TOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4YuYNEeWt6-AQEw3bRw" target="_RLv4Y-YNEeWt6-AQEw3bRw" source="_RLv4ZeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv4Y-YNEeWt6-AQEw3bRw" name="Accept(Start)" incoming="_RLv4YuYNEeWt6-AQEw3bRw">
                <trigger xmi:id="_RLv4ZOYNEeWt6-AQEw3bRw" event="_RLwdo-YNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLv4ZeYNEeWt6-AQEw3bRw" name="Initial(Accept(Start))" outgoing="_RLv4YuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4ZuYNEeWt6-AQEw3bRw" name="ExpressionStatement@7bc07922" incoming="_RLv4TOYNEeWt6-AQEw3bRw" outgoing="_RLv4TeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4Z-YNEeWt6-AQEw3bRw" target="_RLv4dOYNEeWt6-AQEw3bRw" source="_RLv4auYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4aOYNEeWt6-AQEw3bRw" target="_RLv4beYNEeWt6-AQEw3bRw" source="_RLv4ceYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RLv4aeYNEeWt6-AQEw3bRw" name="Call(run)" operation="_RLwdjeYNEeWt6-AQEw3bRw">
                <result xmi:id="_RLv4auYNEeWt6-AQEw3bRw" name="Call(run).result(test)" outgoing="_RLv4Z-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4a-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4bOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <target xmi:id="_RLv4beYNEeWt6-AQEw3bRw" name="Call(run).target" incoming="_RLv4aOYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4buYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4b-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RLv4cOYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RLv4ceYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLv4aOYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4cuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4c-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLv4dOYNEeWt6-AQEw3bRw" name="Fork(test)@5d1375fc" incoming="_RLv4Z-YNEeWt6-AQEw3bRw" outgoing="_RLv4TuYNEeWt6-AQEw3bRw _RLv4UOYNEeWt6-AQEw3bRw _RLv4UuYNEeWt6-AQEw3bRw _RLv4VOYNEeWt6-AQEw3bRw _RLv4VuYNEeWt6-AQEw3bRw _RLv4WOYNEeWt6-AQEw3bRw _RLv4WuYNEeWt6-AQEw3bRw _RLv4XOYNEeWt6-AQEw3bRw _RLv4XuYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4deYNEeWt6-AQEw3bRw" name="AcceptStatement@542f0d89" incoming="_RLv4TeYNEeWt6-AQEw3bRw" outgoing="_RLv4T-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4duYNEeWt6-AQEw3bRw" target="_RLv4d-YNEeWt6-AQEw3bRw" source="_RLv4eeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_RLv4d-YNEeWt6-AQEw3bRw" name="Accept(Continue)" incoming="_RLv4duYNEeWt6-AQEw3bRw">
                <trigger xmi:id="_RLv4eOYNEeWt6-AQEw3bRw" event="_RLwdpOYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLv4eeYNEeWt6-AQEw3bRw" name="Initial(Accept(Continue))" outgoing="_RLv4duYNEeWt6-AQEw3bRw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4euYNEeWt6-AQEw3bRw" name="ExpressionStatement@6e192bb" incoming="_RLv4T-YNEeWt6-AQEw3bRw" outgoing="_RLv4UeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4e-YNEeWt6-AQEw3bRw" target="_RLv4f-YNEeWt6-AQEw3bRw" source="_RLv4ieYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4fOYNEeWt6-AQEw3bRw" target="_RLv4guYNEeWt6-AQEw3bRw" source="_RLv4meYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4feYNEeWt6-AQEw3bRw" target="_RLv4fuYNEeWt6-AQEw3bRw" source="_RLv4heYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv4fuYNEeWt6-AQEw3bRw" name="Call(AssertTrue)" incoming="_RLv4feYNEeWt6-AQEw3bRw" behavior="_RLxC_-YNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv4f-YNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(label)" incoming="_RLv4e-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4gOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4geYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv4guYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(condition)" incoming="_RLv4fOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4g-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4hOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4heYNEeWt6-AQEw3bRw" name="Tuple@79516836" outgoing="_RLv4feYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4huYNEeWt6-AQEw3bRw" target="_RLv4juYNEeWt6-AQEw3bRw" source="_RLv4lOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4h-YNEeWt6-AQEw3bRw" target="_RLv4luYNEeWt6-AQEw3bRw" source="_RLv4keYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv4iOYNEeWt6-AQEw3bRw" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_RLv4ieYNEeWt6-AQEw3bRw" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_RLv4e-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4iuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4i-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv4jOYNEeWt6-AQEw3bRw" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv4jeYNEeWt6-AQEw3bRw" name="Read(sig)" structuralFeature="_RLvPCOYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv4juYNEeWt6-AQEw3bRw" name="Read(sig).object" incoming="_RLv4huYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4j-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4kOYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv4keYNEeWt6-AQEw3bRw" name="Read(sig).result" outgoing="_RLv4h-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4kuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4k-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv4lOYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4TuYNEeWt6-AQEw3bRw" outgoing="_RLv4huYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLv4leYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_RLvPAeYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv4luYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_RLv4h-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4l-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4mOYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv4meYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_RLv4fOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4muYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4m-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4nOYNEeWt6-AQEw3bRw" name="ExpressionStatement@19ffbb6" incoming="_RLv4UeYNEeWt6-AQEw3bRw" outgoing="_RLv4U-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4neYNEeWt6-AQEw3bRw" target="_RLv4ouYNEeWt6-AQEw3bRw" source="_RLv4ruYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4nuYNEeWt6-AQEw3bRw" target="_RLv4peYNEeWt6-AQEw3bRw" source="_RLv4tuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4n-YNEeWt6-AQEw3bRw" target="_RLv4qOYNEeWt6-AQEw3bRw" source="_RLv4u-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4oOYNEeWt6-AQEw3bRw" target="_RLv4oeYNEeWt6-AQEw3bRw" source="_RLv4q-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv4oeYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RLv4oOYNEeWt6-AQEw3bRw" behavior="_RLxDceYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv4ouYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RLv4neYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4o-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4pOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv4peYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RLv4nuYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4puYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4p-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv4qOYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RLv4n-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4qeYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4quYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4q-YNEeWt6-AQEw3bRw" name="Tuple@4339ea9e" outgoing="_RLv4oOYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4rOYNEeWt6-AQEw3bRw" target="_RLv4s-YNEeWt6-AQEw3bRw" source="_RLv4ueYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv4reYNEeWt6-AQEw3bRw" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_RLv4ruYNEeWt6-AQEw3bRw" name="Value(&quot;test.name&quot;).result" outgoing="_RLv4neYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4r-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4sOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv4seYNEeWt6-AQEw3bRw" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv4suYNEeWt6-AQEw3bRw" name="Read(name)" structuralFeature="_RLvPDuYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv4s-YNEeWt6-AQEw3bRw" name="Read(name).object" incoming="_RLv4rOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4tOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4teYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv4tuYNEeWt6-AQEw3bRw" name="Read(name).result" outgoing="_RLv4nuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4t-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4uOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv4ueYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4UOYNEeWt6-AQEw3bRw" outgoing="_RLv4rOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv4uuYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_RLv4u-YNEeWt6-AQEw3bRw" name="Value(&quot;Arrival1&quot;).result" outgoing="_RLv4n-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4vOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4veYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv4vuYNEeWt6-AQEw3bRw" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4v-YNEeWt6-AQEw3bRw" name="ExpressionStatement@68ab0b3a" incoming="_RLv4U-YNEeWt6-AQEw3bRw" outgoing="_RLv4VeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4wOYNEeWt6-AQEw3bRw" target="_RLv4xOYNEeWt6-AQEw3bRw" source="_RLv4zeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4weYNEeWt6-AQEw3bRw" target="_RLv4x-YNEeWt6-AQEw3bRw" source="_RLv41eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv4wuYNEeWt6-AQEw3bRw" target="_RLv4w-YNEeWt6-AQEw3bRw" source="_RLv4yuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv4w-YNEeWt6-AQEw3bRw" name="Call(AssertFalse)" incoming="_RLv4wuYNEeWt6-AQEw3bRw" behavior="_RLxEseYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv4xOYNEeWt6-AQEw3bRw" name="Call(AssertFalse).argument(label)" incoming="_RLv4wOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4xeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4xuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv4x-YNEeWt6-AQEw3bRw" name="Call(AssertFalse).argument(condition)" incoming="_RLv4weYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4yOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4yeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv4yuYNEeWt6-AQEw3bRw" name="Tuple@3a80820f" outgoing="_RLv4wuYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv4y-YNEeWt6-AQEw3bRw" target="_RLv40uYNEeWt6-AQEw3bRw" source="_RLv42OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv4zOYNEeWt6-AQEw3bRw" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_RLv4zeYNEeWt6-AQEw3bRw" name="Value(&quot;test.terminate&quot;).result" outgoing="_RLv4wOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4zuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4z-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv40OYNEeWt6-AQEw3bRw" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv40eYNEeWt6-AQEw3bRw" name="Read(terminate)" structuralFeature="_RLvPEeYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv40uYNEeWt6-AQEw3bRw" name="Read(terminate).object" incoming="_RLv4y-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv40-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv41OYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv41eYNEeWt6-AQEw3bRw" name="Read(terminate).result" outgoing="_RLv4weYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv41uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv41-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv42OYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4UuYNEeWt6-AQEw3bRw" outgoing="_RLv4y-YNEeWt6-AQEw3bRw"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv42eYNEeWt6-AQEw3bRw" name="ExpressionStatement@1bf9ca0b" incoming="_RLv4VeYNEeWt6-AQEw3bRw" outgoing="_RLv4V-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv42uYNEeWt6-AQEw3bRw" target="_RLv43-YNEeWt6-AQEw3bRw" source="_RLv47eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv42-YNEeWt6-AQEw3bRw" target="_RLv44uYNEeWt6-AQEw3bRw" source="_RLv4_eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv43OYNEeWt6-AQEw3bRw" target="_RLv45eYNEeWt6-AQEw3bRw" source="_RLv5AuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv43eYNEeWt6-AQEw3bRw" target="_RLv43uYNEeWt6-AQEw3bRw" source="_RLv46OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv43uYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RLv43eYNEeWt6-AQEw3bRw" behavior="_RLxDceYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv43-YNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RLv42uYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv44OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv44eYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv44uYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RLv42-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv44-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv45OYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv45eYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RLv43OYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv45uYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv45-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv46OYNEeWt6-AQEw3bRw" name="Tuple@639b0cc9" outgoing="_RLv43eYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv46eYNEeWt6-AQEw3bRw" target="_RLv48uYNEeWt6-AQEw3bRw" source="_RLv4-OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv46uYNEeWt6-AQEw3bRw" target="_RLv5AOYNEeWt6-AQEw3bRw" source="_RLv49eYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv46-YNEeWt6-AQEw3bRw" target="_RLv4-uYNEeWt6-AQEw3bRw" source="_RLv5AOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv47OYNEeWt6-AQEw3bRw" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_RLv47eYNEeWt6-AQEw3bRw" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_RLv42uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv47uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv47-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv48OYNEeWt6-AQEw3bRw" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv48eYNEeWt6-AQEw3bRw" name="Read(arrival)" structuralFeature="_RLvPFOYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv48uYNEeWt6-AQEw3bRw" name="Read(arrival).object" incoming="_RLv46eYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv48-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv49OYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv49eYNEeWt6-AQEw3bRw" name="Read(arrival).result" outgoing="_RLv46uYNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv49uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv49-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv4-OYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4VOYNEeWt6-AQEw3bRw" outgoing="_RLv46eYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv4-eYNEeWt6-AQEw3bRw" name="Read(name)" structuralFeature="_RLvO_uYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLv4-uYNEeWt6-AQEw3bRw" name="Read(name).object" incoming="_RLv46-YNEeWt6-AQEw3bRw" type="_RLvO_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4--YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4_OYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv4_eYNEeWt6-AQEw3bRw" name="Read(name).result" outgoing="_RLv42-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv4_uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv4_-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv5AOYNEeWt6-AQEw3bRw" name="Fork(Read(arrival).result)" incoming="_RLv46uYNEeWt6-AQEw3bRw" outgoing="_RLv46-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv5AeYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_RLv5AuYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival3&quot;).result" outgoing="_RLv43OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5A-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5BOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv5BeYNEeWt6-AQEw3bRw" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5BuYNEeWt6-AQEw3bRw" name="ExpressionStatement@7c7794c6" incoming="_RLv4V-YNEeWt6-AQEw3bRw" outgoing="_RLv4WeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5B-YNEeWt6-AQEw3bRw" target="_RLv5C-YNEeWt6-AQEw3bRw" source="_RLv5GOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5COYNEeWt6-AQEw3bRw" target="_RLv5DuYNEeWt6-AQEw3bRw" source="_RLv5OuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv5CeYNEeWt6-AQEw3bRw" target="_RLv5CuYNEeWt6-AQEw3bRw" source="_RLv5EeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv5CuYNEeWt6-AQEw3bRw" name="Call(AssertTrue)" incoming="_RLv5CeYNEeWt6-AQEw3bRw" behavior="_RLxC_-YNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv5C-YNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(label)" incoming="_RLv5B-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5DOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5DeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv5DuYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(condition)" incoming="_RLv5COYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5D-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5EOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5EeYNEeWt6-AQEw3bRw" name="Tuple@281c753e" outgoing="_RLv5CeYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5EuYNEeWt6-AQEw3bRw" target="_RLv5HeYNEeWt6-AQEw3bRw" source="_RLv5LOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5E-YNEeWt6-AQEw3bRw" target="_RLv5NeYNEeWt6-AQEw3bRw" source="_RLv5MeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv5FOYNEeWt6-AQEw3bRw" target="_RLv5HOYNEeWt6-AQEw3bRw" source="_RLv5JuYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5FeYNEeWt6-AQEw3bRw" target="_RLv5IOYNEeWt6-AQEw3bRw" source="_RLv5NeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5FuYNEeWt6-AQEw3bRw" target="_RLv5N-YNEeWt6-AQEw3bRw" source="_RLv5I-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv5F-YNEeWt6-AQEw3bRw" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_RLv5GOYNEeWt6-AQEw3bRw" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_RLv5B-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5GeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5GuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv5G-YNEeWt6-AQEw3bRw" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv5HOYNEeWt6-AQEw3bRw" name="Call(At)" incoming="_RLv5FOYNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RLv5HeYNEeWt6-AQEw3bRw" name="Call(At).argument(seq)" incoming="_RLv5EuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5HuYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5H-YNEeWt6-AQEw3bRw" value="*"/>
                  </argument>
                  <argument xmi:id="_RLv5IOYNEeWt6-AQEw3bRw" name="Call(At).argument(index)" incoming="_RLv5FeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5IeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5IuYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLv5I-YNEeWt6-AQEw3bRw" name="Call(At).result()" outgoing="_RLv5FuYNEeWt6-AQEw3bRw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5JOYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5JeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5JuYNEeWt6-AQEw3bRw" name="Tuple@dc1573d" outgoing="_RLv5FOYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5J-YNEeWt6-AQEw3bRw" target="_RLv5KeYNEeWt6-AQEw3bRw" source="_RLv5L-YNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv5KOYNEeWt6-AQEw3bRw" name="Read(signals)" structuralFeature="_RLvPGuYNEeWt6-AQEw3bRw">
                    <object xmi:id="_RLv5KeYNEeWt6-AQEw3bRw" name="Read(signals).object" incoming="_RLv5J-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5KuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5K-YNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLv5LOYNEeWt6-AQEw3bRw" name="Read(signals).result" outgoing="_RLv5EuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5LeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5LuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RLv5L-YNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4VuYNEeWt6-AQEw3bRw" outgoing="_RLv5J-YNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv5MOYNEeWt6-AQEw3bRw" name="Value(1)">
                    <result xmi:id="_RLv5MeYNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLv5E-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5MuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5M-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RLv5NOYNEeWt6-AQEw3bRw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv5NeYNEeWt6-AQEw3bRw" name="Fork(Call(At).argument(index))" incoming="_RLv5E-YNEeWt6-AQEw3bRw" outgoing="_RLv5FeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLv5NuYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_RLvO_eYNEeWt6-AQEw3bRw" isDirect="true">
                  <object xmi:id="_RLv5N-YNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_RLv5FuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5OOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5OeYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv5OuYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_RLv5COYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5O-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5POYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5PeYNEeWt6-AQEw3bRw" name="ExpressionStatement@a344a4d" incoming="_RLv4WeYNEeWt6-AQEw3bRw" outgoing="_RLv4W-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5PuYNEeWt6-AQEw3bRw" target="_RLv5QuYNEeWt6-AQEw3bRw" source="_RLv5T-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5P-YNEeWt6-AQEw3bRw" target="_RLv5ReYNEeWt6-AQEw3bRw" source="_RLv5ceYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv5QOYNEeWt6-AQEw3bRw" target="_RLv5QeYNEeWt6-AQEw3bRw" source="_RLv5SOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv5QeYNEeWt6-AQEw3bRw" name="Call(AssertTrue)" incoming="_RLv5QOYNEeWt6-AQEw3bRw" behavior="_RLxC_-YNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv5QuYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(label)" incoming="_RLv5PuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5Q-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5ROYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv5ReYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(condition)" incoming="_RLv5P-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5RuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5R-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5SOYNEeWt6-AQEw3bRw" name="Tuple@432a944e" outgoing="_RLv5QOYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5SeYNEeWt6-AQEw3bRw" target="_RLv5VOYNEeWt6-AQEw3bRw" source="_RLv5Y-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5SuYNEeWt6-AQEw3bRw" target="_RLv5bOYNEeWt6-AQEw3bRw" source="_RLv5aOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLv5S-YNEeWt6-AQEw3bRw" target="_RLv5U-YNEeWt6-AQEw3bRw" source="_RLv5XeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5TOYNEeWt6-AQEw3bRw" target="_RLv5V-YNEeWt6-AQEw3bRw" source="_RLv5bOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5TeYNEeWt6-AQEw3bRw" target="_RLv5buYNEeWt6-AQEw3bRw" source="_RLv5WuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv5TuYNEeWt6-AQEw3bRw" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_RLv5T-YNEeWt6-AQEw3bRw" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_RLv5PuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5UOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5UeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLv5UuYNEeWt6-AQEw3bRw" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv5U-YNEeWt6-AQEw3bRw" name="Call(At)" incoming="_RLv5S-YNEeWt6-AQEw3bRw">
                  <argument xmi:id="_RLv5VOYNEeWt6-AQEw3bRw" name="Call(At).argument(seq)" incoming="_RLv5SeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5VeYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5VuYNEeWt6-AQEw3bRw" value="*"/>
                  </argument>
                  <argument xmi:id="_RLv5V-YNEeWt6-AQEw3bRw" name="Call(At).argument(index)" incoming="_RLv5TOYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5WOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5WeYNEeWt6-AQEw3bRw" value="1"/>
                  </argument>
                  <result xmi:id="_RLv5WuYNEeWt6-AQEw3bRw" name="Call(At).result()" outgoing="_RLv5TeYNEeWt6-AQEw3bRw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5W-YNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5XOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5XeYNEeWt6-AQEw3bRw" name="Tuple@d9181b5" outgoing="_RLv5S-YNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5XuYNEeWt6-AQEw3bRw" target="_RLv5YOYNEeWt6-AQEw3bRw" source="_RLv5ZuYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLv5X-YNEeWt6-AQEw3bRw" name="Read(signals)" structuralFeature="_RLvPGuYNEeWt6-AQEw3bRw">
                    <object xmi:id="_RLv5YOYNEeWt6-AQEw3bRw" name="Read(signals).object" incoming="_RLv5XuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5YeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5YuYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLv5Y-YNEeWt6-AQEw3bRw" name="Read(signals).result" outgoing="_RLv5SeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5ZOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5ZeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RLv5ZuYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4WOYNEeWt6-AQEw3bRw" outgoing="_RLv5XuYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLv5Z-YNEeWt6-AQEw3bRw" name="Value(2)">
                    <result xmi:id="_RLv5aOYNEeWt6-AQEw3bRw" name="Value(2).result" outgoing="_RLv5SuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5aeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5auYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RLv5a-YNEeWt6-AQEw3bRw" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLv5bOYNEeWt6-AQEw3bRw" name="Fork(Call(At).argument(index))" incoming="_RLv5SuYNEeWt6-AQEw3bRw" outgoing="_RLv5TOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLv5beYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_RLvPAeYNEeWt6-AQEw3bRw" isDirect="true">
                  <object xmi:id="_RLv5buYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_RLv5TeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5b-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5cOYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLv5ceYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_RLv5P-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5cuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5c-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLv5dOYNEeWt6-AQEw3bRw" name="ExpressionStatement@1eaf8a9f" incoming="_RLv4W-YNEeWt6-AQEw3bRw" outgoing="_RLv4XeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5deYNEeWt6-AQEw3bRw" target="_RLv5euYNEeWt6-AQEw3bRw" source="_RLwbl-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5duYNEeWt6-AQEw3bRw" target="_RLv5feYNEeWt6-AQEw3bRw" source="_RLwbn-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLv5d-YNEeWt6-AQEw3bRw" target="_RLwbkeYNEeWt6-AQEw3bRw" source="_RLwbpOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLv5eOYNEeWt6-AQEw3bRw" target="_RLv5eeYNEeWt6-AQEw3bRw" source="_RLwblOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLv5eeYNEeWt6-AQEw3bRw" name="Call(AssertEqual)" incoming="_RLv5eOYNEeWt6-AQEw3bRw" behavior="_RLxDceYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLv5euYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(label)" incoming="_RLv5deYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5e-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLv5fOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLv5feYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value1)" incoming="_RLv5duYNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLv5fuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbkOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLwbkeYNEeWt6-AQEw3bRw" name="Call(AssertEqual).argument(value2)" incoming="_RLv5d-YNEeWt6-AQEw3bRw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbkuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbk-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwblOYNEeWt6-AQEw3bRw" name="Tuple@6e271f38" outgoing="_RLv5eOYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbleYNEeWt6-AQEw3bRw" target="_RLwbnOYNEeWt6-AQEw3bRw" source="_RLwbouYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwbluYNEeWt6-AQEw3bRw" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_RLwbl-YNEeWt6-AQEw3bRw" name="Value(&quot;test.count&quot;).result" outgoing="_RLv5deYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbmOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbmeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwbmuYNEeWt6-AQEw3bRw" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwbm-YNEeWt6-AQEw3bRw" name="Read(count)" structuralFeature="_RLvPF-YNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLwbnOYNEeWt6-AQEw3bRw" name="Read(count).object" incoming="_RLwbleYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbneYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbnuYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwbn-YNEeWt6-AQEw3bRw" name="Read(count).result" outgoing="_RLv5duYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwboOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwboeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLwbouYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4WuYNEeWt6-AQEw3bRw" outgoing="_RLwbleYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwbo-YNEeWt6-AQEw3bRw" name="Value(3)">
                  <result xmi:id="_RLwbpOYNEeWt6-AQEw3bRw" name="Value(3).result" outgoing="_RLv5d-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbpeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbpuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RLwbp-YNEeWt6-AQEw3bRw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwbqOYNEeWt6-AQEw3bRw" name="ExpressionStatement@6a59383" incoming="_RLv4XeYNEeWt6-AQEw3bRw" outgoing="_RLv4X-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbqeYNEeWt6-AQEw3bRw" target="_RLwbreYNEeWt6-AQEw3bRw" source="_RLwbtuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbquYNEeWt6-AQEw3bRw" target="_RLwbsOYNEeWt6-AQEw3bRw" source="_RLwbvuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwbq-YNEeWt6-AQEw3bRw" target="_RLwbrOYNEeWt6-AQEw3bRw" source="_RLwbs-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwbrOYNEeWt6-AQEw3bRw" name="Call(AssertTrue)" incoming="_RLwbq-YNEeWt6-AQEw3bRw" behavior="_RLxC_-YNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwbreYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(label)" incoming="_RLwbqeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbruYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbr-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLwbsOYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(condition)" incoming="_RLwbquYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbseYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbsuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwbs-YNEeWt6-AQEw3bRw" name="Tuple@28e66ecc" outgoing="_RLwbq-YNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbtOYNEeWt6-AQEw3bRw" target="_RLwbu-YNEeWt6-AQEw3bRw" source="_RLwbweYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwbteYNEeWt6-AQEw3bRw" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_RLwbtuYNEeWt6-AQEw3bRw" name="Value(&quot;test.flag&quot;).result" outgoing="_RLwbqeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbt-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbuOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwbueYNEeWt6-AQEw3bRw" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwbuuYNEeWt6-AQEw3bRw" name="Read(flag)" structuralFeature="_RLvPHeYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLwbu-YNEeWt6-AQEw3bRw" name="Read(flag).object" incoming="_RLwbtOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbvOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbveYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwbvuYNEeWt6-AQEw3bRw" name="Read(flag).result" outgoing="_RLwbquYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbv-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbwOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLwbweYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4XOYNEeWt6-AQEw3bRw" outgoing="_RLwbtOYNEeWt6-AQEw3bRw"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwbwuYNEeWt6-AQEw3bRw" name="ExpressionStatement@5bf526fb" incoming="_RLv4X-YNEeWt6-AQEw3bRw" outgoing="_RLv4YOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbw-YNEeWt6-AQEw3bRw" target="_RLwbx-YNEeWt6-AQEw3bRw" source="_RLwb0eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbxOYNEeWt6-AQEw3bRw" target="_RLwbyuYNEeWt6-AQEw3bRw" source="_RLwb4eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwbxeYNEeWt6-AQEw3bRw" target="_RLwbxuYNEeWt6-AQEw3bRw" source="_RLwbzeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwbxuYNEeWt6-AQEw3bRw" name="Call(AssertTrue)" incoming="_RLwbxeYNEeWt6-AQEw3bRw" behavior="_RLxC_-YNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwbx-YNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(label)" incoming="_RLwbw-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwbyOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbyeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLwbyuYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(condition)" incoming="_RLwbxOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwby-YNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwbzOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwbzeYNEeWt6-AQEw3bRw" name="Tuple@21291c76" outgoing="_RLwbxeYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbzuYNEeWt6-AQEw3bRw" target="_RLwb1uYNEeWt6-AQEw3bRw" source="_RLwb3OYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwbz-YNEeWt6-AQEw3bRw" target="_RLwb3uYNEeWt6-AQEw3bRw" source="_RLwb2eYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwb0OYNEeWt6-AQEw3bRw" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_RLwb0eYNEeWt6-AQEw3bRw" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_RLwbw-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb0uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb0-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwb1OYNEeWt6-AQEw3bRw" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwb1eYNEeWt6-AQEw3bRw" name="Read(sig1)" structuralFeature="_RLvPC-YNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLwb1uYNEeWt6-AQEw3bRw" name="Read(sig1).object" incoming="_RLwbzuYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb1-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb2OYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwb2eYNEeWt6-AQEw3bRw" name="Read(sig1).result" outgoing="_RLwbz-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb2uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb2-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLwb3OYNEeWt6-AQEw3bRw" name="Fork(Fork(test)@5d1375fc)" incoming="_RLv4XuYNEeWt6-AQEw3bRw" outgoing="_RLwbzuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLwb3eYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination)" classifier="_RLvPAeYNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLwb3uYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_RLwbz-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb3-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb4OYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwb4eYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_RLwbxOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb4uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb4-YNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwb5OYNEeWt6-AQEw3bRw" name="ExpressionStatement@6bb37d4f" incoming="_RLv4YOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwb5eYNEeWt6-AQEw3bRw" target="_RLwb6eYNEeWt6-AQEw3bRw" source="_RLwb9OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwb5uYNEeWt6-AQEw3bRw" target="_RLwb9-YNEeWt6-AQEw3bRw" source="_RLwb7eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwb5-YNEeWt6-AQEw3bRw" target="_RLwb8eYNEeWt6-AQEw3bRw" source="_RLwb9-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_RLwb6OYNEeWt6-AQEw3bRw" name="Call(done)" operation="_RLwenOYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwb6eYNEeWt6-AQEw3bRw" name="Call(done).target" incoming="_RLwb5eYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb6uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb6-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwb7OYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RLwb7eYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwb5uYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb7uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb7-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwb8OYNEeWt6-AQEw3bRw" name="Read(outer)" structuralFeature="_RLv4R-YNEeWt6-AQEw3bRw">
                <object xmi:id="_RLwb8eYNEeWt6-AQEw3bRw" name="Read(outer).object" incoming="_RLwb5-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb8uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb8-YNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLwb9OYNEeWt6-AQEw3bRw" name="Read(outer).result" outgoing="_RLwb5eYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb9eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb9uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLwb9-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwb5uYNEeWt6-AQEw3bRw" outgoing="_RLwb5-YNEeWt6-AQEw3bRw"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwb-OYNEeWt6-AQEw3bRw" name="TestRunner$method$1" specification="_RLwdhuYNEeWt6-AQEw3bRw" node="_RLwcBOYNEeWt6-AQEw3bRw _RLwcB-YNEeWt6-AQEw3bRw _RLwcBeYNEeWt6-AQEw3bRw _RLwcDeYNEeWt6-AQEw3bRw _RLwcBuYNEeWt6-AQEw3bRw" group="_RLwcB-YNEeWt6-AQEw3bRw _RLwcDeYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLwb-eYNEeWt6-AQEw3bRw" name="outer" type="_RLwdpeYNEeWt6-AQEw3bRw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb-uYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb--YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RLwb_OYNEeWt6-AQEw3bRw" name="" type="_RLv4Q-YNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwb_eYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwb_uYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwb_-YNEeWt6-AQEw3bRw" target="_RLwcCeYNEeWt6-AQEw3bRw" source="_RLwcBOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcAOYNEeWt6-AQEw3bRw" target="_RLwcK-YNEeWt6-AQEw3bRw" source="_RLwcDOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcAeYNEeWt6-AQEw3bRw" target="_RLwcBeYNEeWt6-AQEw3bRw" source="_RLwcQOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcAuYNEeWt6-AQEw3bRw" target="_RLwcBuYNEeWt6-AQEw3bRw" source="_RLwcB-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcA-YNEeWt6-AQEw3bRw" target="_RLwcDeYNEeWt6-AQEw3bRw" source="_RLwcBuYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RLwcB-YNEeWt6-AQEw3bRw" name="Node(Input(outer))" outgoing="_RLwcAuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcCOYNEeWt6-AQEw3bRw" target="_RLwcDOYNEeWt6-AQEw3bRw" source="_RLwcCeYNEeWt6-AQEw3bRw"/>
            <structuredNodeInput xmi:id="_RLwcCeYNEeWt6-AQEw3bRw" name="Input(outer)" incoming="_RLwb_-YNEeWt6-AQEw3bRw" outgoing="_RLwcCOYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcCuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcC-YNEeWt6-AQEw3bRw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_RLwcDOYNEeWt6-AQEw3bRw" name="Fork(outer)" incoming="_RLwcCOYNEeWt6-AQEw3bRw" outgoing="_RLwcAOYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <structuredNode xmi:id="_RLwcDeYNEeWt6-AQEw3bRw" name="Body(TestRunner$method$1)" incoming="_RLwcA-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcDuYNEeWt6-AQEw3bRw" target="_RLwcQOYNEeWt6-AQEw3bRw" source="_RLwcPeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcD-YNEeWt6-AQEw3bRw" target="_RLwcQuYNEeWt6-AQEw3bRw" source="_RLwcQOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcEOYNEeWt6-AQEw3bRw" target="_RLwcGeYNEeWt6-AQEw3bRw" source="_RLwcQeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcEeYNEeWt6-AQEw3bRw" target="_RLwcRuYNEeWt6-AQEw3bRw" source="_RLwcQOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcEuYNEeWt6-AQEw3bRw" target="_RLwcTeYNEeWt6-AQEw3bRw" source="_RLwcSeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcE-YNEeWt6-AQEw3bRw" target="_RLwcWeYNEeWt6-AQEw3bRw" source="_RLwcUOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcFOYNEeWt6-AQEw3bRw" target="_RLwcX-YNEeWt6-AQEw3bRw" source="_RLwcVOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcFeYNEeWt6-AQEw3bRw" target="_RLwcY-YNEeWt6-AQEw3bRw" source="_RLwcYuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcFuYNEeWt6-AQEw3bRw" target="_RLwcY-YNEeWt6-AQEw3bRw" source="_RLwcXOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcF-YNEeWt6-AQEw3bRw" target="_RLwcQeYNEeWt6-AQEw3bRw" source="_RLwcY-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwcGOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcGeYNEeWt6-AQEw3bRw" name="Body" incoming="_RLwcEOYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcGuYNEeWt6-AQEw3bRw" name="ExpressionStatement@2bde681c">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcG-YNEeWt6-AQEw3bRw" target="_RLwcJeYNEeWt6-AQEw3bRw" source="_RLwcIeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcHOYNEeWt6-AQEw3bRw" target="_RLwcLuYNEeWt6-AQEw3bRw" source="_RLwcK-YNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcHeYNEeWt6-AQEw3bRw" target="_RLwcMuYNEeWt6-AQEw3bRw" source="_RLwcKOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcHuYNEeWt6-AQEw3bRw" target="_RLwcH-YNEeWt6-AQEw3bRw" source="_RLwcO-YNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcH-YNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@43b077a)" incoming="_RLwcHuYNEeWt6-AQEw3bRw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwcIOYNEeWt6-AQEw3bRw" name="ReadSelf">
                    <result xmi:id="_RLwcIeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwcG-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcIuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcI-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLwcJOYNEeWt6-AQEw3bRw" name="Clear(outer)" structuralFeature="_RLv4R-YNEeWt6-AQEw3bRw">
                  <object xmi:id="_RLwcJeYNEeWt6-AQEw3bRw" name="Clear(outer).object" incoming="_RLwcG-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcJuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcJ-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwcKOYNEeWt6-AQEw3bRw" name="Clear(outer).result" outgoing="_RLwcHeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcKeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcKuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RLwcK-YNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@43b077a)" incoming="_RLwcAOYNEeWt6-AQEw3bRw" outgoing="_RLwcHOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcLOYNEeWt6-AQEw3bRw" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcLeYNEeWt6-AQEw3bRw" target="_RLwcOOYNEeWt6-AQEw3bRw" source="_RLwcLuYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLwcLuYNEeWt6-AQEw3bRw" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_RLwcHOYNEeWt6-AQEw3bRw" outgoing="_RLwcLeYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcL-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcMOYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwcMeYNEeWt6-AQEw3bRw" name="Write(outer)" structuralFeature="_RLv4R-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                    <object xmi:id="_RLwcMuYNEeWt6-AQEw3bRw" name="Write(outer).object" incoming="_RLwcHeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcM-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcNOYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLwcNeYNEeWt6-AQEw3bRw" name="Write(outer).result" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcNuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcN-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RLwcOOYNEeWt6-AQEw3bRw" name="Write(outer).value" incoming="_RLwcLeYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcOeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcOuYNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcO-YNEeWt6-AQEw3bRw" name="RightHandSide@796dad71" outgoing="_RLwcHuYNEeWt6-AQEw3bRw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwcPOYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLwcPeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwcDuYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcPuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcP-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLwcQOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwcDuYNEeWt6-AQEw3bRw" outgoing="_RLwcAeYNEeWt6-AQEw3bRw _RLwcD-YNEeWt6-AQEw3bRw _RLwcEeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLwcQeYNEeWt6-AQEw3bRw" name="Call(TestRunner$initialization$1)" incoming="_RLwcF-YNEeWt6-AQEw3bRw" outgoing="_RLwcEOYNEeWt6-AQEw3bRw" operation="_RLwdheYNEeWt6-AQEw3bRw">
              <target xmi:id="_RLwcQuYNEeWt6-AQEw3bRw" name="Call(TestRunner$initialization$1).target" incoming="_RLwcD-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcQ-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcROYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwcReYNEeWt6-AQEw3bRw" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_RLv4ROYNEeWt6-AQEw3bRw">
              <object xmi:id="_RLwcRuYNEeWt6-AQEw3bRw" name="Read(TestRunner$initializationFlag$1).object" incoming="_RLwcEeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcR-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcSOYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLwcSeYNEeWt6-AQEw3bRw" name="Read(TestRunner$initializationFlag$1).result" outgoing="_RLwcEuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcSuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcS-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwcTOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLwcTeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwcEuYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcTuYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcT-YNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLwcUOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwcE-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcUeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcUuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwcU-YNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLwcVOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwcFOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcVeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcVuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLwcV-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLwcWOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLwcWeYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwcE-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcWuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcW-YNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLwcXOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwcFuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcXeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcXuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLwcX-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwcFOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcYOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcYeYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLwcYuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwcFeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLwcY-YNEeWt6-AQEw3bRw" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_RLwcFeYNEeWt6-AQEw3bRw _RLwcFuYNEeWt6-AQEw3bRw" outgoing="_RLwcF-YNEeWt6-AQEw3bRw" decisionInputFlow="_RLwcFuYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwcBOYNEeWt6-AQEw3bRw" name="Input(outer)" outgoing="_RLwb_-YNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" parameter="_RLwb-eYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwcBeYNEeWt6-AQEw3bRw" name="Return" incoming="_RLwcAeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" parameter="_RLwb_OYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:JoinNode" xmi:id="_RLwcBuYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLwcAuYNEeWt6-AQEw3bRw" outgoing="_RLwcA-YNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwcZOYNEeWt6-AQEw3bRw" name="run$method$1" specification="_RLwdjeYNEeWt6-AQEw3bRw" node="_RLwcaeYNEeWt6-AQEw3bRw _RLwcauYNEeWt6-AQEw3bRw" group="_RLwcauYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLwcZeYNEeWt6-AQEw3bRw" name="test" type="_RLvPA-YNEeWt6-AQEw3bRw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcZuYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcZ-YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcaOYNEeWt6-AQEw3bRw" target="_RLwcaeYNEeWt6-AQEw3bRw" source="_RLwchOYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RLwcauYNEeWt6-AQEw3bRw" name="Body(run$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwca-YNEeWt6-AQEw3bRw" target="_RLwcr-YNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcbOYNEeWt6-AQEw3bRw" target="_RLwcreYNEeWt6-AQEw3bRw" source="_RLwch-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcbeYNEeWt6-AQEw3bRw" target="_RLwcueYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcbuYNEeWt6-AQEw3bRw" target="_RLwcsuYNEeWt6-AQEw3bRw" source="_RLwcreYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcb-YNEeWt6-AQEw3bRw" target="_RLwcyeYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwccOYNEeWt6-AQEw3bRw" target="_RLwcwuYNEeWt6-AQEw3bRw" source="_RLwcsuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcceYNEeWt6-AQEw3bRw" target="_RLwc2eYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwccuYNEeWt6-AQEw3bRw" target="_RLwc0uYNEeWt6-AQEw3bRw" source="_RLwcwuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcc-YNEeWt6-AQEw3bRw" target="_RLwc6eYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcdOYNEeWt6-AQEw3bRw" target="_RLwc4uYNEeWt6-AQEw3bRw" source="_RLwc0uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcdeYNEeWt6-AQEw3bRw" target="_RLwc9OYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcduYNEeWt6-AQEw3bRw" target="_RLwc8uYNEeWt6-AQEw3bRw" source="_RLwc4uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcd-YNEeWt6-AQEw3bRw" target="_RLwc_uYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwceOYNEeWt6-AQEw3bRw" target="_RLwc9-YNEeWt6-AQEw3bRw" source="_RLwc8uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwceeYNEeWt6-AQEw3bRw" target="_RLwdDuYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwceuYNEeWt6-AQEw3bRw" target="_RLwdB-YNEeWt6-AQEw3bRw" source="_RLwc9-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwce-YNEeWt6-AQEw3bRw" target="_RLwdGeYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcfOYNEeWt6-AQEw3bRw" target="_RLwdF-YNEeWt6-AQEw3bRw" source="_RLwdB-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcfeYNEeWt6-AQEw3bRw" target="_RLwdI-YNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcfuYNEeWt6-AQEw3bRw" target="_RLwdHOYNEeWt6-AQEw3bRw" source="_RLwdF-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcf-YNEeWt6-AQEw3bRw" target="_RLwdM-YNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcgOYNEeWt6-AQEw3bRw" target="_RLwdLOYNEeWt6-AQEw3bRw" source="_RLwdHOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcgeYNEeWt6-AQEw3bRw" target="_RLwdPuYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcguYNEeWt6-AQEw3bRw" target="_RLwdPOYNEeWt6-AQEw3bRw" source="_RLwdLOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcg-YNEeWt6-AQEw3bRw" target="_RLwchOYNEeWt6-AQEw3bRw" source="_RLwcieYNEeWt6-AQEw3bRw"/>
            <structuredNodeOutput xmi:id="_RLwchOYNEeWt6-AQEw3bRw" name="Output(test)" incoming="_RLwcg-YNEeWt6-AQEw3bRw" outgoing="_RLwcaOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcheYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwchuYNEeWt6-AQEw3bRw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwch-YNEeWt6-AQEw3bRw" name="ExpressionStatement@50c1be06" outgoing="_RLwcbOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwciOYNEeWt6-AQEw3bRw" target="_RLwcieYNEeWt6-AQEw3bRw" source="_RLwckuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_RLwcieYNEeWt6-AQEw3bRw" name="Fork(test)@51442969" incoming="_RLwciOYNEeWt6-AQEw3bRw" outgoing="_RLwca-YNEeWt6-AQEw3bRw _RLwcbeYNEeWt6-AQEw3bRw _RLwcb-YNEeWt6-AQEw3bRw _RLwcceYNEeWt6-AQEw3bRw _RLwcc-YNEeWt6-AQEw3bRw _RLwcdeYNEeWt6-AQEw3bRw _RLwcd-YNEeWt6-AQEw3bRw _RLwceeYNEeWt6-AQEw3bRw _RLwce-YNEeWt6-AQEw3bRw _RLwcfeYNEeWt6-AQEw3bRw _RLwcf-YNEeWt6-AQEw3bRw _RLwcgeYNEeWt6-AQEw3bRw _RLwcg-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwciuYNEeWt6-AQEw3bRw" name="RightHandSide@5eaec9e2">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwci-YNEeWt6-AQEw3bRw" name="InstanceCreationExpression@5eaec9e2">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcjOYNEeWt6-AQEw3bRw" target="_RLwcnOYNEeWt6-AQEw3bRw" source="_RLwcoOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcjeYNEeWt6-AQEw3bRw" target="_RLwcluYNEeWt6-AQEw3bRw" source="_RLwcpeYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcjuYNEeWt6-AQEw3bRw" target="_RLwcleYNEeWt6-AQEw3bRw" source="_RLwco-YNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcj-YNEeWt6-AQEw3bRw" target="_RLwcqOYNEeWt6-AQEw3bRw" source="_RLwcmeYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwckOYNEeWt6-AQEw3bRw" target="_RLwcquYNEeWt6-AQEw3bRw" source="_RLwcqOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwckeYNEeWt6-AQEw3bRw" target="_RLwckuYNEeWt6-AQEw3bRw" source="_RLwcqOYNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RLwckuYNEeWt6-AQEw3bRw" name="Output(Call(MyTest).result())" incoming="_RLwckeYNEeWt6-AQEw3bRw" outgoing="_RLwciOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwck-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwclOYNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_RLwcleYNEeWt6-AQEw3bRw" name="Call(MyTest)" incoming="_RLwcjuYNEeWt6-AQEw3bRw" operation="_RLv4N-YNEeWt6-AQEw3bRw">
                    <argument xmi:id="_RLwcluYNEeWt6-AQEw3bRw" name="Call(MyTest).argument(tester)" incoming="_RLwcjeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcl-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcmOYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RLwcmeYNEeWt6-AQEw3bRw" name="Call(MyTest).result()" outgoing="_RLwcj-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcmuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcm-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <target xmi:id="_RLwcnOYNEeWt6-AQEw3bRw" name="Call(MyTest).target" incoming="_RLwcjOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcneYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcnuYNEeWt6-AQEw3bRw" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_RLwcn-YNEeWt6-AQEw3bRw" name="Create(MyTest)" classifier="_RLvPA-YNEeWt6-AQEw3bRw">
                    <result xmi:id="_RLwcoOYNEeWt6-AQEw3bRw" name="Create(MyTest).result" outgoing="_RLwcjOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcoeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcouYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwco-YNEeWt6-AQEw3bRw" name="Tuple@4e5a93e7" outgoing="_RLwcjuYNEeWt6-AQEw3bRw">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwcpOYNEeWt6-AQEw3bRw" name="ReadSelf">
                      <result xmi:id="_RLwcpeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwcjeYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcpuYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcp-YNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RLwcqOYNEeWt6-AQEw3bRw" name="Fork(Call(MyTest).result())" incoming="_RLwcj-YNEeWt6-AQEw3bRw" outgoing="_RLwckOYNEeWt6-AQEw3bRw _RLwckeYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_RLwcqeYNEeWt6-AQEw3bRw" name="Start(MyTest)" isSynchronous="false">
                    <object xmi:id="_RLwcquYNEeWt6-AQEw3bRw" name="Start(MyTest).object" incoming="_RLwckOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcq-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcrOYNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcreYNEeWt6-AQEw3bRw" name="ExpressionStatement@3da28c19" incoming="_RLwcbOYNEeWt6-AQEw3bRw" outgoing="_RLwcbuYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwcruYNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination)" signal="_RLvPAeYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwcr-YNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination).target" incoming="_RLwca-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcsOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcseYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcsuYNEeWt6-AQEw3bRw" name="ExpressionStatement@14504eb6" incoming="_RLwcbuYNEeWt6-AQEw3bRw" outgoing="_RLwccOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcs-YNEeWt6-AQEw3bRw" target="_RLwctuYNEeWt6-AQEw3bRw" source="_RLwcvuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwctOYNEeWt6-AQEw3bRw" target="_RLwcteYNEeWt6-AQEw3bRw" source="_RLwcvOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwcteYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwctOYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwctuYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwcs-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwct-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcuOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwcueYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcbeYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcuuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcu-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcvOYNEeWt6-AQEw3bRw" name="Tuple@5fd92036" outgoing="_RLwctOYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwcveYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_RLwcvuYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival1&quot;).result" outgoing="_RLwcs-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcv-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcwOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwcweYNEeWt6-AQEw3bRw" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwcwuYNEeWt6-AQEw3bRw" name="ExpressionStatement@54fc73d" incoming="_RLwccOYNEeWt6-AQEw3bRw" outgoing="_RLwccuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwcw-YNEeWt6-AQEw3bRw" target="_RLwcxuYNEeWt6-AQEw3bRw" source="_RLwczuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwcxOYNEeWt6-AQEw3bRw" target="_RLwcxeYNEeWt6-AQEw3bRw" source="_RLwczOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwcxeYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwcxOYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwcxuYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwcw-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcx-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcyOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwcyeYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcb-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcyuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwcy-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwczOYNEeWt6-AQEw3bRw" name="Tuple@53f1fe88" outgoing="_RLwcxOYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwczeYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_RLwczuYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival2&quot;).result" outgoing="_RLwcw-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwcz-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc0OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwc0eYNEeWt6-AQEw3bRw" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwc0uYNEeWt6-AQEw3bRw" name="ExpressionStatement@116018c1" incoming="_RLwccuYNEeWt6-AQEw3bRw" outgoing="_RLwcdOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwc0-YNEeWt6-AQEw3bRw" target="_RLwc1uYNEeWt6-AQEw3bRw" source="_RLwc3uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwc1OYNEeWt6-AQEw3bRw" target="_RLwc1eYNEeWt6-AQEw3bRw" source="_RLwc3OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwc1eYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwc1OYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwc1uYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwc0-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc1-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc2OYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwc2eYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcceYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc2uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc2-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwc3OYNEeWt6-AQEw3bRw" name="Tuple@7801254c" outgoing="_RLwc1OYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwc3eYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_RLwc3uYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival3&quot;).result" outgoing="_RLwc0-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc3-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc4OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwc4eYNEeWt6-AQEw3bRw" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwc4uYNEeWt6-AQEw3bRw" name="ExpressionStatement@4b688b4" incoming="_RLwcdOYNEeWt6-AQEw3bRw" outgoing="_RLwcduYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwc4-YNEeWt6-AQEw3bRw" target="_RLwc5uYNEeWt6-AQEw3bRw" source="_RLwc7uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwc5OYNEeWt6-AQEw3bRw" target="_RLwc5eYNEeWt6-AQEw3bRw" source="_RLwc7OYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwc5eYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwc5OYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwc5uYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwc4-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc5-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc6OYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwc6eYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcc-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc6uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc6-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwc7OYNEeWt6-AQEw3bRw" name="Tuple@62d2c032" outgoing="_RLwc5OYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwc7eYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_RLwc7uYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival4&quot;).result" outgoing="_RLwc4-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc7-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc8OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwc8eYNEeWt6-AQEw3bRw" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwc8uYNEeWt6-AQEw3bRw" name="ExpressionStatement@3b201fe5" incoming="_RLwcduYNEeWt6-AQEw3bRw" outgoing="_RLwceOYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwc8-YNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination)" signal="_RLvPAeYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwc9OYNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination).target" incoming="_RLwcdeYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc9eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc9uYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwc9-YNEeWt6-AQEw3bRw" name="ExpressionStatement@b71ed4c" incoming="_RLwceOYNEeWt6-AQEw3bRw" outgoing="_RLwceuYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwc-OYNEeWt6-AQEw3bRw" target="_RLwc--YNEeWt6-AQEw3bRw" source="_RLwdA-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwc-eYNEeWt6-AQEw3bRw" target="_RLwc-uYNEeWt6-AQEw3bRw" source="_RLwdAeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwc-uYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwc-eYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwc--YNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwc-OYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc_OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwc_eYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwc_uYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcd-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwc_-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdAOYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdAeYNEeWt6-AQEw3bRw" name="Tuple@6575a730" outgoing="_RLwc-eYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwdAuYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_RLwdA-YNEeWt6-AQEw3bRw" name="Value(&quot;Arrival5&quot;).result" outgoing="_RLwc-OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdBOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdBeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwdBuYNEeWt6-AQEw3bRw" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdB-YNEeWt6-AQEw3bRw" name="ExpressionStatement@35a0a901" incoming="_RLwceuYNEeWt6-AQEw3bRw" outgoing="_RLwcfOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdCOYNEeWt6-AQEw3bRw" target="_RLwdC-YNEeWt6-AQEw3bRw" source="_RLwdE-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdCeYNEeWt6-AQEw3bRw" target="_RLwdCuYNEeWt6-AQEw3bRw" source="_RLwdEeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwdCuYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwdCeYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwdC-YNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwdCOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdDOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdDeYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwdDuYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwceeYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdD-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdEOYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdEeYNEeWt6-AQEw3bRw" name="Tuple@763e8d6" outgoing="_RLwdCeYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwdEuYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_RLwdE-YNEeWt6-AQEw3bRw" name="Value(&quot;Arrival6&quot;).result" outgoing="_RLwdCOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdFOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdFeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwdFuYNEeWt6-AQEw3bRw" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdF-YNEeWt6-AQEw3bRw" name="ExpressionStatement@38f6636f" incoming="_RLwcfOYNEeWt6-AQEw3bRw" outgoing="_RLwcfuYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwdGOYNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination)" signal="_RLvPAeYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwdGeYNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination).target" incoming="_RLwce-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdGuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdG-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdHOYNEeWt6-AQEw3bRw" name="ExpressionStatement@30cadc2d" incoming="_RLwcfuYNEeWt6-AQEw3bRw" outgoing="_RLwcgOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdHeYNEeWt6-AQEw3bRw" target="_RLwdIOYNEeWt6-AQEw3bRw" source="_RLwdKOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdHuYNEeWt6-AQEw3bRw" target="_RLwdH-YNEeWt6-AQEw3bRw" source="_RLwdJuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwdH-YNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwdHuYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwdIOYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwdHeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdIeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdIuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwdI-YNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcfeYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdJOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdJeYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdJuYNEeWt6-AQEw3bRw" name="Tuple@6c1b80a" outgoing="_RLwdHuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwdJ-YNEeWt6-AQEw3bRw" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_RLwdKOYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival7&quot;).result" outgoing="_RLwdHeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdKeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdKuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwdK-YNEeWt6-AQEw3bRw" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdLOYNEeWt6-AQEw3bRw" name="ExpressionStatement@27c708b3" incoming="_RLwcgOYNEeWt6-AQEw3bRw" outgoing="_RLwcguYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdLeYNEeWt6-AQEw3bRw" target="_RLwdMOYNEeWt6-AQEw3bRw" source="_RLwdOOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdLuYNEeWt6-AQEw3bRw" target="_RLwdL-YNEeWt6-AQEw3bRw" source="_RLwdNuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwdL-YNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival)" incoming="_RLwdLuYNEeWt6-AQEw3bRw" signal="_RLvO_eYNEeWt6-AQEw3bRw">
                <argument xmi:id="_RLwdMOYNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).argument(name)" incoming="_RLwdLeYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdMeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdMuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <target xmi:id="_RLwdM-YNEeWt6-AQEw3bRw" name="SendSignal(SignalNewArrival).target" incoming="_RLwcf-YNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdNOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdNeYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdNuYNEeWt6-AQEw3bRw" name="Tuple@5cfaa93d" outgoing="_RLwdLuYNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwdN-YNEeWt6-AQEw3bRw" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_RLwdOOYNEeWt6-AQEw3bRw" name="Value(&quot;Arrival8&quot;).result" outgoing="_RLwdLeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdOeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdOuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLwdO-YNEeWt6-AQEw3bRw" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdPOYNEeWt6-AQEw3bRw" name="ExpressionStatement@4fbbf959" incoming="_RLwcguYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwdPeYNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination)" signal="_RLvPAeYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwdPuYNEeWt6-AQEw3bRw" name="SendSignal(SignalTermination).target" incoming="_RLwcgeYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdP-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdQOYNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwcaeYNEeWt6-AQEw3bRw" name="Output(test)" incoming="_RLwcaOYNEeWt6-AQEw3bRw" type="_RLvPA-YNEeWt6-AQEw3bRw" parameter="_RLwcZeYNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwdQeYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLwdkeYNEeWt6-AQEw3bRw" node="_RLwdQuYNEeWt6-AQEw3bRw" group="_RLwdQuYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLwdQuYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwdQ-YNEeWt6-AQEw3bRw" name="TestRunner$initialization$1" specification="_RLwdheYNEeWt6-AQEw3bRw" node="_RLwdROYNEeWt6-AQEw3bRw" group="_RLwdROYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLwdROYNEeWt6-AQEw3bRw" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdReYNEeWt6-AQEw3bRw" target="_RLwdU-YNEeWt6-AQEw3bRw" source="_RLwdUOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdRuYNEeWt6-AQEw3bRw" target="_RLwdXeYNEeWt6-AQEw3bRw" source="_RLwdU-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdR-YNEeWt6-AQEw3bRw" target="_RLwdZ-YNEeWt6-AQEw3bRw" source="_RLwdU-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdSOYNEeWt6-AQEw3bRw" target="_RLwdbuYNEeWt6-AQEw3bRw" source="_RLwdauYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdSeYNEeWt6-AQEw3bRw" target="_RLwdeuYNEeWt6-AQEw3bRw" source="_RLwdceYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdSuYNEeWt6-AQEw3bRw" target="_RLwdgOYNEeWt6-AQEw3bRw" source="_RLwddeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdS-YNEeWt6-AQEw3bRw" target="_RLwdhOYNEeWt6-AQEw3bRw" source="_RLwdg-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdTOYNEeWt6-AQEw3bRw" target="_RLwdhOYNEeWt6-AQEw3bRw" source="_RLwdfeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdTeYNEeWt6-AQEw3bRw" target="_RLwdVOYNEeWt6-AQEw3bRw" source="_RLwdhOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwdTuYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwdT-YNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLwdUOYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwdReYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdUeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdUuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLwdU-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwdReYNEeWt6-AQEw3bRw" outgoing="_RLwdRuYNEeWt6-AQEw3bRw _RLwdR-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdVOYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLwdTeYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwdVeYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdVuYNEeWt6-AQEw3bRw" target="_RLwdY-YNEeWt6-AQEw3bRw" source="_RLwdWOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwdV-YNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RLwdWOYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLwdVuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdWeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdWuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RLwdW-YNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwdXOYNEeWt6-AQEw3bRw" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_RLv4ROYNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLwdXeYNEeWt6-AQEw3bRw" name="Write(TestRunner$initializationFlag$1).object" incoming="_RLwdRuYNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdXuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdX-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwdYOYNEeWt6-AQEw3bRw" name="Write(TestRunner$initializationFlag$1).result" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdYeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdYuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLwdY-YNEeWt6-AQEw3bRw" name="Write(TestRunner$initializationFlag$1).value" incoming="_RLwdVuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdZOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdZeYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwdZuYNEeWt6-AQEw3bRw" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_RLv4ROYNEeWt6-AQEw3bRw">
              <object xmi:id="_RLwdZ-YNEeWt6-AQEw3bRw" name="Read(TestRunner$initializationFlag$1).object" incoming="_RLwdR-YNEeWt6-AQEw3bRw" type="_RLv4Q-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdaOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdaeYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLwdauYNEeWt6-AQEw3bRw" name="Read(TestRunner$initializationFlag$1).result" outgoing="_RLwdSOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwda-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdbOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwdbeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLwdbuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwdSOYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdb-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdcOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLwdceYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwdSeYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdcuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdc-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwddOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLwddeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwdSuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdduYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdd-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLwdeOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLwdeeYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLwdeuYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwdSeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwde-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdfOYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLwdfeYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwdTOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdfuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdf-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLwdgOYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwdSuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdgeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdguYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLwdg-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwdS-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLwdhOYNEeWt6-AQEw3bRw" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_RLwdS-YNEeWt6-AQEw3bRw _RLwdTOYNEeWt6-AQEw3bRw" outgoing="_RLwdTeYNEeWt6-AQEw3bRw" decisionInputFlow="_RLwdTOYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RLwdheYNEeWt6-AQEw3bRw" name="TestRunner$initialization$1" visibility="protected" method="_RLwdQ-YNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RLwdhuYNEeWt6-AQEw3bRw" name="TestRunner" visibility="public" method="_RLwb-OYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLwdh-YNEeWt6-AQEw3bRw" name="outer" visibility="package" type="_RLwdpeYNEeWt6-AQEw3bRw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdiOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdieYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RLwdiuYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLv4Q-YNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdi-YNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdjOYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RLwdjeYNEeWt6-AQEw3bRw" name="run" visibility="private" method="_RLwcZOYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLwdjuYNEeWt6-AQEw3bRw" name="test" visibility="package" type="_RLvPA-YNEeWt6-AQEw3bRw" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdj-YNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdkOYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RLwdkeYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLwdQeYNEeWt6-AQEw3bRw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RLwdkuYNEeWt6-AQEw3bRw" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RLwdk-YNEeWt6-AQEw3bRw" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_RLwdlOYNEeWt6-AQEw3bRw" name="Start" signal="_RLwdkuYNEeWt6-AQEw3bRw"/>
        <ownedReception xmi:id="_RLwdleYNEeWt6-AQEw3bRw" name="Continue" signal="_RLwdk-YNEeWt6-AQEw3bRw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdluYNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdl-YNEeWt6-AQEw3bRw" name="Event(SignalTermination)" visibility="public" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdmOYNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdmeYNEeWt6-AQEw3bRw" name="Event(SignalTermination)" visibility="public" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdmuYNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdm-YNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdnOYNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdneYNEeWt6-AQEw3bRw" name="Event(SignalTermination)" visibility="public" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdnuYNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdn-YNEeWt6-AQEw3bRw" name="Event(SignalTermination)" visibility="public" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdoOYNEeWt6-AQEw3bRw" name="Event(SignalNewArrival)" visibility="public" signal="_RLvO_eYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdoeYNEeWt6-AQEw3bRw" name="Event(SignalTermination)" visibility="public" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdouYNEeWt6-AQEw3bRw" name="Event(SignalTermination)" visibility="public" signal="_RLvPAeYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdo-YNEeWt6-AQEw3bRw" name="Event(Start)" visibility="public" signal="_RLwdkuYNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_RLwdpOYNEeWt6-AQEw3bRw" name="Event(Continue)" visibility="public" signal="_RLwdk-YNEeWt6-AQEw3bRw"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_RLwdpeYNEeWt6-AQEw3bRw" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_RLwdpuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLwdp-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLwdqOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLwdqeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLwdquYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RLwdq-YNEeWt6-AQEw3bRw" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdrOYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdreYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RLwdruYNEeWt6-AQEw3bRw" name="tester" visibility="private" type="_RLwenuYNEeWt6-AQEw3bRw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdr-YNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdsOYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwdseYNEeWt6-AQEw3bRw" name="Test$method$1" specification="_RLweleYNEeWt6-AQEw3bRw" node="_RLwdveYNEeWt6-AQEw3bRw _RLwdwOYNEeWt6-AQEw3bRw _RLwdvuYNEeWt6-AQEw3bRw _RLwdxuYNEeWt6-AQEw3bRw _RLwdv-YNEeWt6-AQEw3bRw" group="_RLwdwOYNEeWt6-AQEw3bRw _RLwdxuYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLwdsuYNEeWt6-AQEw3bRw" name="tester" type="_RLwenuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwds-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdtOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RLwdteYNEeWt6-AQEw3bRw" name="" type="_RLwdpeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdtuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdt-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwduOYNEeWt6-AQEw3bRw" target="_RLwdwuYNEeWt6-AQEw3bRw" source="_RLwdveYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdueYNEeWt6-AQEw3bRw" target="_RLwd5OYNEeWt6-AQEw3bRw" source="_RLwdxeYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwduuYNEeWt6-AQEw3bRw" target="_RLwdvuYNEeWt6-AQEw3bRw" source="_RLweAOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdu-YNEeWt6-AQEw3bRw" target="_RLwdv-YNEeWt6-AQEw3bRw" source="_RLwdwOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdvOYNEeWt6-AQEw3bRw" target="_RLwdxuYNEeWt6-AQEw3bRw" source="_RLwdv-YNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RLwdwOYNEeWt6-AQEw3bRw" name="Node(Input(tester))" outgoing="_RLwdu-YNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdweYNEeWt6-AQEw3bRw" target="_RLwdxeYNEeWt6-AQEw3bRw" source="_RLwdwuYNEeWt6-AQEw3bRw"/>
          <structuredNodeInput xmi:id="_RLwdwuYNEeWt6-AQEw3bRw" name="Input(tester)" incoming="_RLwduOYNEeWt6-AQEw3bRw" outgoing="_RLwdweYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwdw-YNEeWt6-AQEw3bRw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwdxOYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_RLwdxeYNEeWt6-AQEw3bRw" name="Fork(tester)" incoming="_RLwdweYNEeWt6-AQEw3bRw" outgoing="_RLwdueYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <structuredNode xmi:id="_RLwdxuYNEeWt6-AQEw3bRw" name="Body(Test$method$1)" incoming="_RLwdvOYNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdx-YNEeWt6-AQEw3bRw" target="_RLweAOYNEeWt6-AQEw3bRw" source="_RLwd_eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdyOYNEeWt6-AQEw3bRw" target="_RLweAuYNEeWt6-AQEw3bRw" source="_RLweAOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdyeYNEeWt6-AQEw3bRw" target="_RLwd0uYNEeWt6-AQEw3bRw" source="_RLweAeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdyuYNEeWt6-AQEw3bRw" target="_RLweBuYNEeWt6-AQEw3bRw" source="_RLweAOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdy-YNEeWt6-AQEw3bRw" target="_RLweDeYNEeWt6-AQEw3bRw" source="_RLweCeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdzOYNEeWt6-AQEw3bRw" target="_RLweGeYNEeWt6-AQEw3bRw" source="_RLweEOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdzeYNEeWt6-AQEw3bRw" target="_RLweH-YNEeWt6-AQEw3bRw" source="_RLweFOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwdzuYNEeWt6-AQEw3bRw" target="_RLweI-YNEeWt6-AQEw3bRw" source="_RLweIuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwdz-YNEeWt6-AQEw3bRw" target="_RLweI-YNEeWt6-AQEw3bRw" source="_RLweHOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwd0OYNEeWt6-AQEw3bRw" target="_RLweAeYNEeWt6-AQEw3bRw" source="_RLweI-YNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwd0eYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwd0uYNEeWt6-AQEw3bRw" name="Body" incoming="_RLwdyeYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwd0-YNEeWt6-AQEw3bRw" name="ExpressionStatement@1b1c55d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwd1OYNEeWt6-AQEw3bRw" target="_RLwd3uYNEeWt6-AQEw3bRw" source="_RLwd2uYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwd1eYNEeWt6-AQEw3bRw" target="_RLwd5-YNEeWt6-AQEw3bRw" source="_RLwd5OYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwd1uYNEeWt6-AQEw3bRw" target="_RLwd7eYNEeWt6-AQEw3bRw" source="_RLwd4eYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwd1-YNEeWt6-AQEw3bRw" target="_RLwd2OYNEeWt6-AQEw3bRw" source="_RLwd--YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwd2OYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@39f2b03a)" incoming="_RLwd1-YNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwd2eYNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RLwd2uYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwd1OYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd2-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd3OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLwd3eYNEeWt6-AQEw3bRw" name="Clear(tester)" structuralFeature="_RLwdruYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLwd3uYNEeWt6-AQEw3bRw" name="Clear(tester).object" incoming="_RLwd1OYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd3-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd4OYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLwd4eYNEeWt6-AQEw3bRw" name="Clear(tester).result" outgoing="_RLwd1uYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd4uYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd4-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLwd5OYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@39f2b03a)" incoming="_RLwdueYNEeWt6-AQEw3bRw" outgoing="_RLwd1eYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwd5eYNEeWt6-AQEw3bRw" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwd5uYNEeWt6-AQEw3bRw" target="_RLwd-uYNEeWt6-AQEw3bRw" source="_RLwd5-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLwd5-YNEeWt6-AQEw3bRw" name="WriteAll(Test::tester).input(Test::tester)" incoming="_RLwd1eYNEeWt6-AQEw3bRw" outgoing="_RLwd5uYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd6OYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd6eYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_RLwd6uYNEeWt6-AQEw3bRw" name="Iterate(Write(tester))" inputElement="_RLwd-uYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwd6-YNEeWt6-AQEw3bRw" target="_RLwd9-YNEeWt6-AQEw3bRw" source="_RLwd-uYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwd7OYNEeWt6-AQEw3bRw" target="_RLwd8eYNEeWt6-AQEw3bRw" source="_RLwd7eYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLwd7eYNEeWt6-AQEw3bRw" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_RLwd1uYNEeWt6-AQEw3bRw" outgoing="_RLwd7OYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd7uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd7-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwd8OYNEeWt6-AQEw3bRw" name="Write(tester)" structuralFeature="_RLwdruYNEeWt6-AQEw3bRw">
                    <object xmi:id="_RLwd8eYNEeWt6-AQEw3bRw" name="Write(tester).object" incoming="_RLwd7OYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd8uYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd8-YNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLwd9OYNEeWt6-AQEw3bRw" name="Write(tester).result" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd9eYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd9uYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RLwd9-YNEeWt6-AQEw3bRw" name="Write(tester).value" incoming="_RLwd6-YNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd-OYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd-eYNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RLwd-uYNEeWt6-AQEw3bRw" name="Iterate(Write(tester)).inputElement" incoming="_RLwd5uYNEeWt6-AQEw3bRw" outgoing="_RLwd6-YNEeWt6-AQEw3bRw" regionAsInput="_RLwd6uYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwd--YNEeWt6-AQEw3bRw" name="RightHandSide@69d8553d" outgoing="_RLwd1-YNEeWt6-AQEw3bRw"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwd_OYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLwd_eYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwdx-YNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwd_uYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwd_-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLweAOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwdx-YNEeWt6-AQEw3bRw" outgoing="_RLwduuYNEeWt6-AQEw3bRw _RLwdyOYNEeWt6-AQEw3bRw _RLwdyuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RLweAeYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1)" incoming="_RLwd0OYNEeWt6-AQEw3bRw" outgoing="_RLwdyeYNEeWt6-AQEw3bRw" operation="_RLwelOYNEeWt6-AQEw3bRw">
            <target xmi:id="_RLweAuYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1).target" incoming="_RLwdyOYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweA-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweBOYNEeWt6-AQEw3bRw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLweBeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1)" structuralFeature="_RLwdq-YNEeWt6-AQEw3bRw">
            <object xmi:id="_RLweBuYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).object" incoming="_RLwdyuYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweB-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweCOYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RLweCeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).result" outgoing="_RLwdy-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweCuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweC-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLweDOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RLweDeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwdy-YNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweDuYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweD-YNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RLweEOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwdzOYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweEeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweEuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLweE-YNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RLweFOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwdzeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweFeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweFuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RLweF-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RLweGOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RLweGeYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwdzOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweGuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweG-YNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RLweHOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwdz-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweHeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweHuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RLweH-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwdzeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweIOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweIeYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RLweIuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwdzuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RLweI-YNEeWt6-AQEw3bRw" name="Decision(Test(Test$initializationFlag$1))" incoming="_RLwdzuYNEeWt6-AQEw3bRw _RLwdz-YNEeWt6-AQEw3bRw" outgoing="_RLwd0OYNEeWt6-AQEw3bRw" decisionInputFlow="_RLwdz-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwdveYNEeWt6-AQEw3bRw" name="Input(tester)" outgoing="_RLwduOYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" parameter="_RLwdsuYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwdvuYNEeWt6-AQEw3bRw" name="Return" incoming="_RLwduuYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" parameter="_RLwdteYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:JoinNode" xmi:id="_RLwdv-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLwdu-YNEeWt6-AQEw3bRw" outgoing="_RLwdvOYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLweJOYNEeWt6-AQEw3bRw" name="done$method$1" specification="_RLwenOYNEeWt6-AQEw3bRw" node="_RLweJeYNEeWt6-AQEw3bRw" group="_RLweJeYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLweJeYNEeWt6-AQEw3bRw" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLweJuYNEeWt6-AQEw3bRw" target="_RLweN-YNEeWt6-AQEw3bRw" source="_RLweJ-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLweJ-YNEeWt6-AQEw3bRw" name="ExpressionStatement@6f103b4a" outgoing="_RLweJuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweKOYNEeWt6-AQEw3bRw" target="_RLweK-YNEeWt6-AQEw3bRw" source="_RLweM-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLweKeYNEeWt6-AQEw3bRw" target="_RLweKuYNEeWt6-AQEw3bRw" source="_RLweMeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLweKuYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RLweKeYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLweK-YNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RLweKOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweLOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweLeYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLweLuYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweL-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweMOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLweMeYNEeWt6-AQEw3bRw" name="Tuple@1caf5d4" outgoing="_RLweKeYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLweMuYNEeWt6-AQEw3bRw" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_RLweM-YNEeWt6-AQEw3bRw" name="Value(&quot;Done.&quot;).result" outgoing="_RLweKOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweNOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweNeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RLweNuYNEeWt6-AQEw3bRw" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLweN-YNEeWt6-AQEw3bRw" name="ExpressionStatement@2f4313fa" incoming="_RLweJuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweOOYNEeWt6-AQEw3bRw" target="_RLweQOYNEeWt6-AQEw3bRw" source="_RLweTOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLweOeYNEeWt6-AQEw3bRw" target="_RLweOuYNEeWt6-AQEw3bRw" source="_RLweQeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_RLweOuYNEeWt6-AQEw3bRw" name="Collect(SendSignal(Continue))" incoming="_RLweOeYNEeWt6-AQEw3bRw" mode="parallel" inputElement="_RLweQOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweO-YNEeWt6-AQEw3bRw" target="_RLwePeYNEeWt6-AQEw3bRw" source="_RLweQOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwePOYNEeWt6-AQEw3bRw" name="SendSignal(Continue)" signal="_RLwfJ-YNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwePeYNEeWt6-AQEw3bRw" name="SendSignal(Continue).target" incoming="_RLweO-YNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwePuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweP-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_RLweQOYNEeWt6-AQEw3bRw" name="Collect(SendSignal(Continue)).inputElement" incoming="_RLweOOYNEeWt6-AQEw3bRw" outgoing="_RLweO-YNEeWt6-AQEw3bRw" regionAsInput="_RLweOuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLweQeYNEeWt6-AQEw3bRw" name="Feature(Read(tester).result)" outgoing="_RLweOeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweQuYNEeWt6-AQEw3bRw" target="_RLweT-YNEeWt6-AQEw3bRw" source="_RLweReYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweQ-YNEeWt6-AQEw3bRw" target="_RLweSeYNEeWt6-AQEw3bRw" source="_RLweT-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RLweROYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RLweReYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLweQuYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweRuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweR-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLweSOYNEeWt6-AQEw3bRw" name="Read(tester)" structuralFeature="_RLwdruYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLweSeYNEeWt6-AQEw3bRw" name="Read(tester).object" incoming="_RLweQ-YNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweSuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweS-YNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLweTOYNEeWt6-AQEw3bRw" name="Read(tester).result" outgoing="_RLweOOYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweTeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweTuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLweT-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLweQuYNEeWt6-AQEw3bRw" outgoing="_RLweQ-YNEeWt6-AQEw3bRw"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLweUOYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLweneYNEeWt6-AQEw3bRw" node="_RLweUeYNEeWt6-AQEw3bRw" group="_RLweUeYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLweUeYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLweUuYNEeWt6-AQEw3bRw" name="Test$initialization$1" specification="_RLwelOYNEeWt6-AQEw3bRw" node="_RLweU-YNEeWt6-AQEw3bRw" group="_RLweU-YNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLweU-YNEeWt6-AQEw3bRw" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweVOYNEeWt6-AQEw3bRw" target="_RLweYuYNEeWt6-AQEw3bRw" source="_RLweX-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweVeYNEeWt6-AQEw3bRw" target="_RLwebOYNEeWt6-AQEw3bRw" source="_RLweYuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweVuYNEeWt6-AQEw3bRw" target="_RLweduYNEeWt6-AQEw3bRw" source="_RLweYuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweV-YNEeWt6-AQEw3bRw" target="_RLwefeYNEeWt6-AQEw3bRw" source="_RLweeeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweWOYNEeWt6-AQEw3bRw" target="_RLweieYNEeWt6-AQEw3bRw" source="_RLwegOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweWeYNEeWt6-AQEw3bRw" target="_RLwej-YNEeWt6-AQEw3bRw" source="_RLwehOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLweWuYNEeWt6-AQEw3bRw" target="_RLwek-YNEeWt6-AQEw3bRw" source="_RLwekuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweW-YNEeWt6-AQEw3bRw" target="_RLwek-YNEeWt6-AQEw3bRw" source="_RLwejOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLweXOYNEeWt6-AQEw3bRw" target="_RLweY-YNEeWt6-AQEw3bRw" source="_RLwek-YNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLweXeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLweXuYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLweX-YNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLweVOYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweYOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweYeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLweYuYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLweVOYNEeWt6-AQEw3bRw" outgoing="_RLweVeYNEeWt6-AQEw3bRw _RLweVuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLweY-YNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLweXOYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLweZOYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweZeYNEeWt6-AQEw3bRw" target="_RLwecuYNEeWt6-AQEw3bRw" source="_RLweZ-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLweZuYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RLweZ-YNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLweZeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweaOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweaeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RLweauYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwea-YNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1)" structuralFeature="_RLwdq-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                <object xmi:id="_RLwebOYNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).object" incoming="_RLweVeYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwebeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwebuYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLweb-YNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).result" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwecOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweceYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:id="_RLwecuYNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).value" incoming="_RLweZeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwec-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwedOYNEeWt6-AQEw3bRw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwedeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1)" structuralFeature="_RLwdq-YNEeWt6-AQEw3bRw">
            <object xmi:id="_RLweduYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).object" incoming="_RLweVuYNEeWt6-AQEw3bRw" type="_RLwdpeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwed-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweeOYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RLweeeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).result" outgoing="_RLweV-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweeuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwee-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwefOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RLwefeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLweV-YNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwefuYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwef-YNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RLwegOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLweWOYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwegeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweguYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLweg-YNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RLwehOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLweWeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweheYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwehuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RLweh-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RLweiOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RLweieYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLweWOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweiuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwei-YNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RLwejOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLweW-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwejeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwejuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RLwej-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLweWeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwekOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwekeYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RLwekuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLweWuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RLwek-YNEeWt6-AQEw3bRw" name="Decision(Test(Test$initializationFlag$1))" incoming="_RLweWuYNEeWt6-AQEw3bRw _RLweW-YNEeWt6-AQEw3bRw" outgoing="_RLweXOYNEeWt6-AQEw3bRw" decisionInputFlow="_RLweW-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RLwelOYNEeWt6-AQEw3bRw" name="Test$initialization$1" visibility="protected" method="_RLweUuYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RLweleYNEeWt6-AQEw3bRw" name="Test" visibility="protected" method="_RLwdseYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLweluYNEeWt6-AQEw3bRw" name="tester" visibility="package" type="_RLwenuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwel-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwemOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RLwemeYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLwdpeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwemuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwem-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RLwenOYNEeWt6-AQEw3bRw" name="done" visibility="public" method="_RLweJOYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RLweneYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLweUOYNEeWt6-AQEw3bRw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RLwenuYNEeWt6-AQEw3bRw" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_RLwen-YNEeWt6-AQEw3bRw" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweoOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweoeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLweouYNEeWt6-AQEw3bRw" name="Tester$method$1" specification="_RLwfIuYNEeWt6-AQEw3bRw" node="_RLwep-YNEeWt6-AQEw3bRw _RLweqOYNEeWt6-AQEw3bRw" group="_RLweqOYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLweo-YNEeWt6-AQEw3bRw" name="" type="_RLwenuYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwepOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwepeYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwepuYNEeWt6-AQEw3bRw" target="_RLwep-YNEeWt6-AQEw3bRw" source="_RLweueYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RLweqOYNEeWt6-AQEw3bRw" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweqeYNEeWt6-AQEw3bRw" target="_RLweueYNEeWt6-AQEw3bRw" source="_RLwetuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwequYNEeWt6-AQEw3bRw" target="_RLweu-YNEeWt6-AQEw3bRw" source="_RLweueYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLweq-YNEeWt6-AQEw3bRw" target="_RLwetOYNEeWt6-AQEw3bRw" source="_RLweuuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwerOYNEeWt6-AQEw3bRw" target="_RLwev-YNEeWt6-AQEw3bRw" source="_RLweueYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwereYNEeWt6-AQEw3bRw" target="_RLwexuYNEeWt6-AQEw3bRw" source="_RLwewuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweruYNEeWt6-AQEw3bRw" target="_RLwe0uYNEeWt6-AQEw3bRw" source="_RLweyeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwer-YNEeWt6-AQEw3bRw" target="_RLwe2OYNEeWt6-AQEw3bRw" source="_RLwezeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwesOYNEeWt6-AQEw3bRw" target="_RLwe3OYNEeWt6-AQEw3bRw" source="_RLwe2-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLweseYNEeWt6-AQEw3bRw" target="_RLwe3OYNEeWt6-AQEw3bRw" source="_RLwe1eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwesuYNEeWt6-AQEw3bRw" target="_RLweuuYNEeWt6-AQEw3bRw" source="_RLwe3OYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwes-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwetOYNEeWt6-AQEw3bRw" name="Body" incoming="_RLweq-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLweteYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLwetuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLweqeYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwet-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweuOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLweueYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLweqeYNEeWt6-AQEw3bRw" outgoing="_RLwepuYNEeWt6-AQEw3bRw _RLwequYNEeWt6-AQEw3bRw _RLwerOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLweuuYNEeWt6-AQEw3bRw" name="Call(Tester$initialization$1)" incoming="_RLwesuYNEeWt6-AQEw3bRw" outgoing="_RLweq-YNEeWt6-AQEw3bRw" operation="_RLwfIeYNEeWt6-AQEw3bRw">
              <target xmi:id="_RLweu-YNEeWt6-AQEw3bRw" name="Call(Tester$initialization$1).target" incoming="_RLwequYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwevOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweveYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwevuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1)" structuralFeature="_RLwen-YNEeWt6-AQEw3bRw">
              <object xmi:id="_RLwev-YNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).object" incoming="_RLwerOYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwewOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweweYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLwewuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).result" outgoing="_RLwereYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwew-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwexOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwexeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLwexuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwereYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwex-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLweyOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLweyeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLweruYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLweyuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwey-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwezOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLwezeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwer-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwezuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwez-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLwe0OYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLwe0eYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLwe0uYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLweruYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe0-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe1OYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLwe1eYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLweseYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe1uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe1-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLwe2OYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwer-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe2eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe2uYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLwe2-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwesOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLwe3OYNEeWt6-AQEw3bRw" name="Decision(Test(Tester$initializationFlag$1))" incoming="_RLwesOYNEeWt6-AQEw3bRw _RLweseYNEeWt6-AQEw3bRw" outgoing="_RLwesuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLweseYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwep-YNEeWt6-AQEw3bRw" name="Return" incoming="_RLwepuYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" parameter="_RLweo-YNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwe3eYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLwfJuYNEeWt6-AQEw3bRw" node="_RLwe3uYNEeWt6-AQEw3bRw" group="_RLwe3uYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLwe3uYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwe3-YNEeWt6-AQEw3bRw" name="Tester$initialization$1" specification="_RLwfIeYNEeWt6-AQEw3bRw" node="_RLwe4OYNEeWt6-AQEw3bRw" group="_RLwe4OYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLwe4OYNEeWt6-AQEw3bRw" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe4eYNEeWt6-AQEw3bRw" target="_RLwe7-YNEeWt6-AQEw3bRw" source="_RLwe7OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe4uYNEeWt6-AQEw3bRw" target="_RLwe-eYNEeWt6-AQEw3bRw" source="_RLwe7-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe4-YNEeWt6-AQEw3bRw" target="_RLwfA-YNEeWt6-AQEw3bRw" source="_RLwe7-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe5OYNEeWt6-AQEw3bRw" target="_RLwfCuYNEeWt6-AQEw3bRw" source="_RLwfBuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe5eYNEeWt6-AQEw3bRw" target="_RLwfFuYNEeWt6-AQEw3bRw" source="_RLwfDeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe5uYNEeWt6-AQEw3bRw" target="_RLwfHOYNEeWt6-AQEw3bRw" source="_RLwfEeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwe5-YNEeWt6-AQEw3bRw" target="_RLwfIOYNEeWt6-AQEw3bRw" source="_RLwfH-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe6OYNEeWt6-AQEw3bRw" target="_RLwfIOYNEeWt6-AQEw3bRw" source="_RLwfGeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwe6eYNEeWt6-AQEw3bRw" target="_RLwe8OYNEeWt6-AQEw3bRw" source="_RLwfIOYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwe6uYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwe6-YNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLwe7OYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwe4eYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe7eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe7uYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLwe7-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwe4eYNEeWt6-AQEw3bRw" outgoing="_RLwe4uYNEeWt6-AQEw3bRw _RLwe4-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwe8OYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLwe6eYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwe8eYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwe8uYNEeWt6-AQEw3bRw" target="_RLwe_-YNEeWt6-AQEw3bRw" source="_RLwe9OYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwe8-YNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RLwe9OYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLwe8uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe9eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe9uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RLwe9-YNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwe-OYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1)" structuralFeature="_RLwen-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLwe-eYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).object" incoming="_RLwe4uYNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe-uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe--YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLwe_OYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).result" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwe_eYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwe_uYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLwe_-YNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).value" incoming="_RLwe8uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfAOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfAeYNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwfAuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1)" structuralFeature="_RLwen-YNEeWt6-AQEw3bRw">
              <object xmi:id="_RLwfA-YNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).object" incoming="_RLwe4-YNEeWt6-AQEw3bRw" type="_RLwenuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfBOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfBeYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLwfBuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).result" outgoing="_RLwe5OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfB-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfCOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwfCeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLwfCuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwe5OYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfC-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfDOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLwfDeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwe5eYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfDuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfD-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwfEOYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLwfEeYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwe5uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfEuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfE-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLwfFOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLwfFeYNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLwfFuYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwe5eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfF-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfGOYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLwfGeYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwe6OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfGuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfG-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLwfHOYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwe5uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfHeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfHuYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLwfH-YNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwe5-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLwfIOYNEeWt6-AQEw3bRw" name="Decision(Test(Tester$initializationFlag$1))" incoming="_RLwe5-YNEeWt6-AQEw3bRw _RLwe6OYNEeWt6-AQEw3bRw" outgoing="_RLwe6eYNEeWt6-AQEw3bRw" decisionInputFlow="_RLwe6OYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RLwfIeYNEeWt6-AQEw3bRw" name="Tester$initialization$1" visibility="protected" method="_RLwe3-YNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RLwfIuYNEeWt6-AQEw3bRw" name="Tester" visibility="public" method="_RLweouYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLwfI-YNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLwenuYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfJOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfJeYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RLwfJuYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLwe3eYNEeWt6-AQEw3bRw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RLwfJ-YNEeWt6-AQEw3bRw" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_RLwfKOYNEeWt6-AQEw3bRw" name="Continue" signal="_RLwfJ-YNEeWt6-AQEw3bRw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RLwfKeYNEeWt6-AQEw3bRw" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_RLwfKuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLwfK-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLwfLOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLwfLeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLwfLuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RLwfL-YNEeWt6-AQEw3bRw" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfMOYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfMeYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RLwfMuYNEeWt6-AQEw3bRw" name="tester" visibility="private" type="_RLwgIuYNEeWt6-AQEw3bRw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfM-YNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfNOYNEeWt6-AQEw3bRw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwfNeYNEeWt6-AQEw3bRw" name="Test$method$1" specification="_RLwgGeYNEeWt6-AQEw3bRw" node="_RLwfQeYNEeWt6-AQEw3bRw _RLwfROYNEeWt6-AQEw3bRw _RLwfQuYNEeWt6-AQEw3bRw _RLwfSuYNEeWt6-AQEw3bRw _RLwfQ-YNEeWt6-AQEw3bRw" group="_RLwfROYNEeWt6-AQEw3bRw _RLwfSuYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLwfNuYNEeWt6-AQEw3bRw" name="tester" type="_RLwgIuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfN-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfOOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RLwfOeYNEeWt6-AQEw3bRw" name="" type="_RLwfKeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfOuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfO-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfPOYNEeWt6-AQEw3bRw" target="_RLwfRuYNEeWt6-AQEw3bRw" source="_RLwfQeYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfPeYNEeWt6-AQEw3bRw" target="_RLwfaOYNEeWt6-AQEw3bRw" source="_RLwfSeYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfPuYNEeWt6-AQEw3bRw" target="_RLwfQuYNEeWt6-AQEw3bRw" source="_RLwfhOYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfP-YNEeWt6-AQEw3bRw" target="_RLwfQ-YNEeWt6-AQEw3bRw" source="_RLwfROYNEeWt6-AQEw3bRw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfQOYNEeWt6-AQEw3bRw" target="_RLwfSuYNEeWt6-AQEw3bRw" source="_RLwfQ-YNEeWt6-AQEw3bRw"/>
        <structuredNode xmi:id="_RLwfROYNEeWt6-AQEw3bRw" name="Node(Input(tester))" outgoing="_RLwfP-YNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfReYNEeWt6-AQEw3bRw" target="_RLwfSeYNEeWt6-AQEw3bRw" source="_RLwfRuYNEeWt6-AQEw3bRw"/>
          <structuredNodeInput xmi:id="_RLwfRuYNEeWt6-AQEw3bRw" name="Input(tester)" incoming="_RLwfPOYNEeWt6-AQEw3bRw" outgoing="_RLwfReYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfR-YNEeWt6-AQEw3bRw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfSOYNEeWt6-AQEw3bRw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_RLwfSeYNEeWt6-AQEw3bRw" name="Fork(tester)" incoming="_RLwfReYNEeWt6-AQEw3bRw" outgoing="_RLwfPeYNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <structuredNode xmi:id="_RLwfSuYNEeWt6-AQEw3bRw" name="Body(Test$method$1)" incoming="_RLwfQOYNEeWt6-AQEw3bRw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfS-YNEeWt6-AQEw3bRw" target="_RLwfhOYNEeWt6-AQEw3bRw" source="_RLwfgeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfTOYNEeWt6-AQEw3bRw" target="_RLwfhuYNEeWt6-AQEw3bRw" source="_RLwfhOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfTeYNEeWt6-AQEw3bRw" target="_RLwfVuYNEeWt6-AQEw3bRw" source="_RLwfheYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfTuYNEeWt6-AQEw3bRw" target="_RLwfiuYNEeWt6-AQEw3bRw" source="_RLwfhOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfT-YNEeWt6-AQEw3bRw" target="_RLwfkeYNEeWt6-AQEw3bRw" source="_RLwfjeYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfUOYNEeWt6-AQEw3bRw" target="_RLwfneYNEeWt6-AQEw3bRw" source="_RLwflOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfUeYNEeWt6-AQEw3bRw" target="_RLwfo-YNEeWt6-AQEw3bRw" source="_RLwfmOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfUuYNEeWt6-AQEw3bRw" target="_RLwfp-YNEeWt6-AQEw3bRw" source="_RLwfpuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfU-YNEeWt6-AQEw3bRw" target="_RLwfp-YNEeWt6-AQEw3bRw" source="_RLwfoOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfVOYNEeWt6-AQEw3bRw" target="_RLwfheYNEeWt6-AQEw3bRw" source="_RLwfp-YNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwfVeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfVuYNEeWt6-AQEw3bRw" name="Body" incoming="_RLwfTeYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfV-YNEeWt6-AQEw3bRw" name="ExpressionStatement@36297348">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfWOYNEeWt6-AQEw3bRw" target="_RLwfYuYNEeWt6-AQEw3bRw" source="_RLwfXuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfWeYNEeWt6-AQEw3bRw" target="_RLwfa-YNEeWt6-AQEw3bRw" source="_RLwfaOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfWuYNEeWt6-AQEw3bRw" target="_RLwfceYNEeWt6-AQEw3bRw" source="_RLwfZeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfW-YNEeWt6-AQEw3bRw" target="_RLwfXOYNEeWt6-AQEw3bRw" source="_RLwff-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfXOYNEeWt6-AQEw3bRw" name="Expression(LeftHandSide@3ef3adcf)" incoming="_RLwfW-YNEeWt6-AQEw3bRw">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwfXeYNEeWt6-AQEw3bRw" name="ReadSelf">
                  <result xmi:id="_RLwfXuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwfWOYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfX-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfYOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_RLwfYeYNEeWt6-AQEw3bRw" name="Clear(tester)" structuralFeature="_RLwfMuYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLwfYuYNEeWt6-AQEw3bRw" name="Clear(tester).object" incoming="_RLwfWOYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfY-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfZOYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLwfZeYNEeWt6-AQEw3bRw" name="Clear(tester).result" outgoing="_RLwfWuYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfZuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfZ-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLwfaOYNEeWt6-AQEw3bRw" name="Fork(LeftHandSide@3ef3adcf)" incoming="_RLwfPeYNEeWt6-AQEw3bRw" outgoing="_RLwfWeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfaeYNEeWt6-AQEw3bRw" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfauYNEeWt6-AQEw3bRw" target="_RLwffuYNEeWt6-AQEw3bRw" source="_RLwfa-YNEeWt6-AQEw3bRw"/>
                <structuredNodeInput xmi:id="_RLwfa-YNEeWt6-AQEw3bRw" name="WriteAll(Test::tester).input(Test::tester)" incoming="_RLwfWeYNEeWt6-AQEw3bRw" outgoing="_RLwfauYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfbOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfbeYNEeWt6-AQEw3bRw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_RLwfbuYNEeWt6-AQEw3bRw" name="Iterate(Write(tester))" inputElement="_RLwffuYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfb-YNEeWt6-AQEw3bRw" target="_RLwfe-YNEeWt6-AQEw3bRw" source="_RLwffuYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfcOYNEeWt6-AQEw3bRw" target="_RLwfdeYNEeWt6-AQEw3bRw" source="_RLwfceYNEeWt6-AQEw3bRw"/>
                  <structuredNodeInput xmi:id="_RLwfceYNEeWt6-AQEw3bRw" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_RLwfWuYNEeWt6-AQEw3bRw" outgoing="_RLwfcOYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfcuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfc-YNEeWt6-AQEw3bRw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwfdOYNEeWt6-AQEw3bRw" name="Write(tester)" structuralFeature="_RLwfMuYNEeWt6-AQEw3bRw">
                    <object xmi:id="_RLwfdeYNEeWt6-AQEw3bRw" name="Write(tester).object" incoming="_RLwfcOYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfduYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfd-YNEeWt6-AQEw3bRw" value="1"/>
                    </object>
                    <result xmi:id="_RLwfeOYNEeWt6-AQEw3bRw" name="Write(tester).result" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfeeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfeuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:id="_RLwfe-YNEeWt6-AQEw3bRw" name="Write(tester).value" incoming="_RLwfb-YNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwffOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwffeYNEeWt6-AQEw3bRw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RLwffuYNEeWt6-AQEw3bRw" name="Iterate(Write(tester)).inputElement" incoming="_RLwfauYNEeWt6-AQEw3bRw" outgoing="_RLwfb-YNEeWt6-AQEw3bRw" regionAsInput="_RLwfbuYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwff-YNEeWt6-AQEw3bRw" name="RightHandSide@28a5dd42" outgoing="_RLwfW-YNEeWt6-AQEw3bRw"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwfgOYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLwfgeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwfS-YNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfguYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfg-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLwfhOYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwfS-YNEeWt6-AQEw3bRw" outgoing="_RLwfPuYNEeWt6-AQEw3bRw _RLwfTOYNEeWt6-AQEw3bRw _RLwfTuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RLwfheYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1)" incoming="_RLwfVOYNEeWt6-AQEw3bRw" outgoing="_RLwfTeYNEeWt6-AQEw3bRw" operation="_RLwgGOYNEeWt6-AQEw3bRw">
            <target xmi:id="_RLwfhuYNEeWt6-AQEw3bRw" name="Call(Test$initialization$1).target" incoming="_RLwfTOYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfh-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfiOYNEeWt6-AQEw3bRw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwfieYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1)" structuralFeature="_RLwfL-YNEeWt6-AQEw3bRw">
            <object xmi:id="_RLwfiuYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).object" incoming="_RLwfTuYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfi-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfjOYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RLwfjeYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).result" outgoing="_RLwfT-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfjuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfj-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwfkOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RLwfkeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwfT-YNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfkuYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfk-YNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RLwflOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwfUOYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfleYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfluYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwfl-YNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RLwfmOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwfUeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfmeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfmuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RLwfm-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RLwfnOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RLwfneYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwfUOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfnuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfn-YNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RLwfoOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwfU-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfoeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfouYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RLwfo-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwfUeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfpOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfpeYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RLwfpuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwfUuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RLwfp-YNEeWt6-AQEw3bRw" name="Decision(Test(Test$initializationFlag$1))" incoming="_RLwfUuYNEeWt6-AQEw3bRw _RLwfU-YNEeWt6-AQEw3bRw" outgoing="_RLwfVOYNEeWt6-AQEw3bRw" decisionInputFlow="_RLwfU-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwfQeYNEeWt6-AQEw3bRw" name="Input(tester)" outgoing="_RLwfPOYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" parameter="_RLwfNuYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwfQuYNEeWt6-AQEw3bRw" name="Return" incoming="_RLwfPuYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" parameter="_RLwfOeYNEeWt6-AQEw3bRw"/>
        <node xmi:type="uml:JoinNode" xmi:id="_RLwfQ-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLwfP-YNEeWt6-AQEw3bRw" outgoing="_RLwfQOYNEeWt6-AQEw3bRw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwfqOYNEeWt6-AQEw3bRw" name="done$method$1" specification="_RLwgIOYNEeWt6-AQEw3bRw" node="_RLwfqeYNEeWt6-AQEw3bRw" group="_RLwfqeYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLwfqeYNEeWt6-AQEw3bRw" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfquYNEeWt6-AQEw3bRw" target="_RLwfu-YNEeWt6-AQEw3bRw" source="_RLwfq-YNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfq-YNEeWt6-AQEw3bRw" name="ExpressionStatement@49508d9" outgoing="_RLwfquYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfrOYNEeWt6-AQEw3bRw" target="_RLwfr-YNEeWt6-AQEw3bRw" source="_RLwft-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfreYNEeWt6-AQEw3bRw" target="_RLwfruYNEeWt6-AQEw3bRw" source="_RLwfteYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwfruYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RLwfreYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLwfr-YNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RLwfrOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfsOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfseYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLwfsuYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfs-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwftOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfteYNEeWt6-AQEw3bRw" name="Tuple@325f54f" outgoing="_RLwfreYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwftuYNEeWt6-AQEw3bRw" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_RLwft-YNEeWt6-AQEw3bRw" name="Value(&quot;Done.&quot;).result" outgoing="_RLwfrOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfuOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfueYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RLwfuuYNEeWt6-AQEw3bRw" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfu-YNEeWt6-AQEw3bRw" name="ExpressionStatement@2d17648a" incoming="_RLwfquYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfvOYNEeWt6-AQEw3bRw" target="_RLwfxOYNEeWt6-AQEw3bRw" source="_RLwf0OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwfveYNEeWt6-AQEw3bRw" target="_RLwfvuYNEeWt6-AQEw3bRw" source="_RLwfxeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_RLwfvuYNEeWt6-AQEw3bRw" name="Collect(SendSignal(Continue))" incoming="_RLwfveYNEeWt6-AQEw3bRw" mode="parallel" inputElement="_RLwfxOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfv-YNEeWt6-AQEw3bRw" target="_RLwfweYNEeWt6-AQEw3bRw" source="_RLwfxOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_RLwfwOYNEeWt6-AQEw3bRw" name="SendSignal(Continue)" signal="_RLxC_eYNEeWt6-AQEw3bRw">
                <target xmi:id="_RLwfweYNEeWt6-AQEw3bRw" name="SendSignal(Continue).target" incoming="_RLwfv-YNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfwuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfw-YNEeWt6-AQEw3bRw" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_RLwfxOYNEeWt6-AQEw3bRw" name="Collect(SendSignal(Continue)).inputElement" incoming="_RLwfvOYNEeWt6-AQEw3bRw" outgoing="_RLwfv-YNEeWt6-AQEw3bRw" regionAsInput="_RLwfvuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwfxeYNEeWt6-AQEw3bRw" name="Feature(Read(tester).result)" outgoing="_RLwfveYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfxuYNEeWt6-AQEw3bRw" target="_RLwf0-YNEeWt6-AQEw3bRw" source="_RLwfyeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwfx-YNEeWt6-AQEw3bRw" target="_RLwfzeYNEeWt6-AQEw3bRw" source="_RLwf0-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwfyOYNEeWt6-AQEw3bRw" name="ReadSelf">
                <result xmi:id="_RLwfyeYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwfxuYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfyuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfy-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwfzOYNEeWt6-AQEw3bRw" name="Read(tester)" structuralFeature="_RLwfMuYNEeWt6-AQEw3bRw">
                <object xmi:id="_RLwfzeYNEeWt6-AQEw3bRw" name="Read(tester).object" incoming="_RLwfx-YNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwfzuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwfz-YNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLwf0OYNEeWt6-AQEw3bRw" name="Read(tester).result" outgoing="_RLwfvOYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf0eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf0uYNEeWt6-AQEw3bRw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RLwf0-YNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwfxuYNEeWt6-AQEw3bRw" outgoing="_RLwfx-YNEeWt6-AQEw3bRw"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwf1OYNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLwgIeYNEeWt6-AQEw3bRw" node="_RLwf1eYNEeWt6-AQEw3bRw" group="_RLwf1eYNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLwf1eYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwf1uYNEeWt6-AQEw3bRw" name="Test$initialization$1" specification="_RLwgGOYNEeWt6-AQEw3bRw" node="_RLwf1-YNEeWt6-AQEw3bRw" group="_RLwf1-YNEeWt6-AQEw3bRw">
        <structuredNode xmi:id="_RLwf1-YNEeWt6-AQEw3bRw" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf2OYNEeWt6-AQEw3bRw" target="_RLwf5uYNEeWt6-AQEw3bRw" source="_RLwf4-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf2eYNEeWt6-AQEw3bRw" target="_RLwf8OYNEeWt6-AQEw3bRw" source="_RLwf5uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf2uYNEeWt6-AQEw3bRw" target="_RLwf-uYNEeWt6-AQEw3bRw" source="_RLwf5uYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf2-YNEeWt6-AQEw3bRw" target="_RLwgAeYNEeWt6-AQEw3bRw" source="_RLwf_eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf3OYNEeWt6-AQEw3bRw" target="_RLwgDeYNEeWt6-AQEw3bRw" source="_RLwgBOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf3eYNEeWt6-AQEw3bRw" target="_RLwgE-YNEeWt6-AQEw3bRw" source="_RLwgCOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwf3uYNEeWt6-AQEw3bRw" target="_RLwgF-YNEeWt6-AQEw3bRw" source="_RLwgFuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf3-YNEeWt6-AQEw3bRw" target="_RLwgF-YNEeWt6-AQEw3bRw" source="_RLwgEOYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLwf4OYNEeWt6-AQEw3bRw" target="_RLwf5-YNEeWt6-AQEw3bRw" source="_RLwgF-YNEeWt6-AQEw3bRw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwf4eYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwf4uYNEeWt6-AQEw3bRw" name="ReadSelf">
            <result xmi:id="_RLwf4-YNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwf2OYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf5OYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf5eYNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RLwf5uYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwf2OYNEeWt6-AQEw3bRw" outgoing="_RLwf2eYNEeWt6-AQEw3bRw _RLwf2uYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwf5-YNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLwf4OYNEeWt6-AQEw3bRw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwf6OYNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwf6eYNEeWt6-AQEw3bRw" target="_RLwf9uYNEeWt6-AQEw3bRw" source="_RLwf6-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwf6uYNEeWt6-AQEw3bRw" name="Value(true)">
                <result xmi:id="_RLwf6-YNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLwf6eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf7OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf7eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RLwf7uYNEeWt6-AQEw3bRw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLwf7-YNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1)" structuralFeature="_RLwfL-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                <object xmi:id="_RLwf8OYNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).object" incoming="_RLwf2eYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf8eYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf8uYNEeWt6-AQEw3bRw" value="1"/>
                </object>
                <result xmi:id="_RLwf8-YNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).result" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf9OYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf9eYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:id="_RLwf9uYNEeWt6-AQEw3bRw" name="Write(Test$initializationFlag$1).value" incoming="_RLwf6eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf9-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf-OYNEeWt6-AQEw3bRw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwf-eYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1)" structuralFeature="_RLwfL-YNEeWt6-AQEw3bRw">
            <object xmi:id="_RLwf-uYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).object" incoming="_RLwf2uYNEeWt6-AQEw3bRw" type="_RLwfKeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf--YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf_OYNEeWt6-AQEw3bRw" value="1"/>
            </object>
            <result xmi:id="_RLwf_eYNEeWt6-AQEw3bRw" name="Read(Test$initializationFlag$1).result" outgoing="_RLwf2-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwf_uYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwf_-YNEeWt6-AQEw3bRw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwgAOYNEeWt6-AQEw3bRw" name="Call(ListSize)">
            <argument xmi:id="_RLwgAeYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwf2-YNEeWt6-AQEw3bRw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgAuYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgA-YNEeWt6-AQEw3bRw" value="*"/>
            </argument>
            <result xmi:id="_RLwgBOYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwf3OYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgBeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgBuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLwgB-YNEeWt6-AQEw3bRw" name="Value(0)">
            <result xmi:id="_RLwgCOYNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwf3eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgCeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgCuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RLwgC-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RLwgDOYNEeWt6-AQEw3bRw" name="Test(Size==0)">
            <first xmi:id="_RLwgDeYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwf3OYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgDuYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgD-YNEeWt6-AQEw3bRw" value="1"/>
            </first>
            <result xmi:id="_RLwgEOYNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwf3-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgEeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgEuYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <second xmi:id="_RLwgE-YNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwf3eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgFOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgFeYNEeWt6-AQEw3bRw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RLwgFuYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwf3uYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RLwgF-YNEeWt6-AQEw3bRw" name="Decision(Test(Test$initializationFlag$1))" incoming="_RLwf3uYNEeWt6-AQEw3bRw _RLwf3-YNEeWt6-AQEw3bRw" outgoing="_RLwf4OYNEeWt6-AQEw3bRw" decisionInputFlow="_RLwf3-YNEeWt6-AQEw3bRw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RLwgGOYNEeWt6-AQEw3bRw" name="Test$initialization$1" visibility="protected" method="_RLwf1uYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RLwgGeYNEeWt6-AQEw3bRw" name="Test" visibility="protected" method="_RLwfNeYNEeWt6-AQEw3bRw">
        <ownedParameter xmi:id="_RLwgGuYNEeWt6-AQEw3bRw" name="tester" visibility="package" type="_RLwgIuYNEeWt6-AQEw3bRw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgG-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgHOYNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RLwgHeYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLwfKeYNEeWt6-AQEw3bRw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgHuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgH-YNEeWt6-AQEw3bRw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RLwgIOYNEeWt6-AQEw3bRw" name="done" visibility="public" method="_RLwfqOYNEeWt6-AQEw3bRw"/>
      <ownedOperation xmi:id="_RLwgIeYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLwf1OYNEeWt6-AQEw3bRw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_RLwgIuYNEeWt6-AQEw3bRw" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_RLwgI-YNEeWt6-AQEw3bRw" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgJOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgJeYNEeWt6-AQEw3bRw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLwgJuYNEeWt6-AQEw3bRw" name="Tester$method$1" specification="_RLxC-OYNEeWt6-AQEw3bRw" node="_RLwgK-YNEeWt6-AQEw3bRw _RLwgLOYNEeWt6-AQEw3bRw" group="_RLwgLOYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLwgJ-YNEeWt6-AQEw3bRw" name="" type="_RLwgIuYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgKOYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgKeYNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgKuYNEeWt6-AQEw3bRw" target="_RLwgK-YNEeWt6-AQEw3bRw" source="_RLwgPeYNEeWt6-AQEw3bRw"/>
          <structuredNode xmi:id="_RLwgLOYNEeWt6-AQEw3bRw" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgLeYNEeWt6-AQEw3bRw" target="_RLwgPeYNEeWt6-AQEw3bRw" source="_RLwgOuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgLuYNEeWt6-AQEw3bRw" target="_RLwgP-YNEeWt6-AQEw3bRw" source="_RLwgPeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwgL-YNEeWt6-AQEw3bRw" target="_RLwgOOYNEeWt6-AQEw3bRw" source="_RLwgPuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgMOYNEeWt6-AQEw3bRw" target="_RLwgQ-YNEeWt6-AQEw3bRw" source="_RLwgPeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgMeYNEeWt6-AQEw3bRw" target="_RLwgSuYNEeWt6-AQEw3bRw" source="_RLwgRuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgMuYNEeWt6-AQEw3bRw" target="_RLxCqOYNEeWt6-AQEw3bRw" source="_RLwgTeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgM-YNEeWt6-AQEw3bRw" target="_RLxCruYNEeWt6-AQEw3bRw" source="_RLxCo-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwgNOYNEeWt6-AQEw3bRw" target="_RLxCsuYNEeWt6-AQEw3bRw" source="_RLxCseYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLwgNeYNEeWt6-AQEw3bRw" target="_RLxCsuYNEeWt6-AQEw3bRw" source="_RLxCq-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLwgNuYNEeWt6-AQEw3bRw" target="_RLwgPuYNEeWt6-AQEw3bRw" source="_RLxCsuYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLwgN-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLwgOOYNEeWt6-AQEw3bRw" name="Body" incoming="_RLwgL-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLwgOeYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLwgOuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLwgLeYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgO-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgPOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLwgPeYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLwgLeYNEeWt6-AQEw3bRw" outgoing="_RLwgKuYNEeWt6-AQEw3bRw _RLwgLuYNEeWt6-AQEw3bRw _RLwgMOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLwgPuYNEeWt6-AQEw3bRw" name="Call(Tester$initialization$1)" incoming="_RLwgNuYNEeWt6-AQEw3bRw" outgoing="_RLwgL-YNEeWt6-AQEw3bRw" operation="_RLxC9-YNEeWt6-AQEw3bRw">
              <target xmi:id="_RLwgP-YNEeWt6-AQEw3bRw" name="Call(Tester$initialization$1).target" incoming="_RLwgLuYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgQOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgQeYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLwgQuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1)" structuralFeature="_RLwgI-YNEeWt6-AQEw3bRw">
              <object xmi:id="_RLwgQ-YNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).object" incoming="_RLwgMOYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgROYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgReYNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLwgRuYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).result" outgoing="_RLwgMeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgR-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgSOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLwgSeYNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLwgSuYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLwgMeYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLwgS-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLwgTOYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLwgTeYNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLwgMuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCoOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCoeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxCouYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLxCo-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLwgM-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCpOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCpeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLxCpuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLxCp-YNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLxCqOYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLwgMuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCqeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCquYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLxCq-YNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLwgNeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCrOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCreYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLxCruYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLwgM-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCr-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCsOYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLxCseYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLwgNOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLxCsuYNEeWt6-AQEw3bRw" name="Decision(Test(Tester$initializationFlag$1))" incoming="_RLwgNOYNEeWt6-AQEw3bRw _RLwgNeYNEeWt6-AQEw3bRw" outgoing="_RLwgNuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLwgNeYNEeWt6-AQEw3bRw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLwgK-YNEeWt6-AQEw3bRw" name="Return" incoming="_RLwgKuYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" parameter="_RLwgJ-YNEeWt6-AQEw3bRw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLxCs-YNEeWt6-AQEw3bRw" name="destroy$method$1" specification="_RLxC_OYNEeWt6-AQEw3bRw" node="_RLxCtOYNEeWt6-AQEw3bRw" group="_RLxCtOYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLxCtOYNEeWt6-AQEw3bRw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_RLxCteYNEeWt6-AQEw3bRw" name="Tester$initialization$1" specification="_RLxC9-YNEeWt6-AQEw3bRw" node="_RLxCtuYNEeWt6-AQEw3bRw" group="_RLxCtuYNEeWt6-AQEw3bRw">
          <structuredNode xmi:id="_RLxCtuYNEeWt6-AQEw3bRw" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCt-YNEeWt6-AQEw3bRw" target="_RLxCxeYNEeWt6-AQEw3bRw" source="_RLxCwuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCuOYNEeWt6-AQEw3bRw" target="_RLxCz-YNEeWt6-AQEw3bRw" source="_RLxCxeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCueYNEeWt6-AQEw3bRw" target="_RLxC2eYNEeWt6-AQEw3bRw" source="_RLxCxeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCuuYNEeWt6-AQEw3bRw" target="_RLxC4OYNEeWt6-AQEw3bRw" source="_RLxC3OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCu-YNEeWt6-AQEw3bRw" target="_RLxC7OYNEeWt6-AQEw3bRw" source="_RLxC4-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCvOYNEeWt6-AQEw3bRw" target="_RLxC8uYNEeWt6-AQEw3bRw" source="_RLxC5-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxCveYNEeWt6-AQEw3bRw" target="_RLxC9uYNEeWt6-AQEw3bRw" source="_RLxC9eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCvuYNEeWt6-AQEw3bRw" target="_RLxC9uYNEeWt6-AQEw3bRw" source="_RLxC7-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxCv-YNEeWt6-AQEw3bRw" target="_RLxCxuYNEeWt6-AQEw3bRw" source="_RLxC9uYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxCwOYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RLxCweYNEeWt6-AQEw3bRw" name="ReadSelf">
              <result xmi:id="_RLxCwuYNEeWt6-AQEw3bRw" name="ReadSelf.result" outgoing="_RLxCt-YNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCw-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCxOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxCxeYNEeWt6-AQEw3bRw" name="Fork(ReadSelf.result)" incoming="_RLxCt-YNEeWt6-AQEw3bRw" outgoing="_RLxCuOYNEeWt6-AQEw3bRw _RLxCueYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxCxuYNEeWt6-AQEw3bRw" name="Initialization" incoming="_RLxCv-YNEeWt6-AQEw3bRw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxCx-YNEeWt6-AQEw3bRw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxCyOYNEeWt6-AQEw3bRw" target="_RLxC1eYNEeWt6-AQEw3bRw" source="_RLxCyuYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxCyeYNEeWt6-AQEw3bRw" name="Value(true)">
                  <result xmi:id="_RLxCyuYNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLxCyOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxCy-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxCzOYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_RLxCzeYNEeWt6-AQEw3bRw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RLxCzuYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1)" structuralFeature="_RLwgI-YNEeWt6-AQEw3bRw" isReplaceAll="true">
                  <object xmi:id="_RLxCz-YNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).object" incoming="_RLxCuOYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC0OYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC0eYNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLxC0uYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).result" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC0-YNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC1OYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:id="_RLxC1eYNEeWt6-AQEw3bRw" name="Write(Tester$initializationFlag$1).value" incoming="_RLxCyOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC1uYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC1-YNEeWt6-AQEw3bRw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RLxC2OYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1)" structuralFeature="_RLwgI-YNEeWt6-AQEw3bRw">
              <object xmi:id="_RLxC2eYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).object" incoming="_RLxCueYNEeWt6-AQEw3bRw" type="_RLwgIuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC2uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC2-YNEeWt6-AQEw3bRw" value="1"/>
              </object>
              <result xmi:id="_RLxC3OYNEeWt6-AQEw3bRw" name="Read(Tester$initializationFlag$1).result" outgoing="_RLxCuuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC3eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC3uYNEeWt6-AQEw3bRw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxC3-YNEeWt6-AQEw3bRw" name="Call(ListSize)">
              <argument xmi:id="_RLxC4OYNEeWt6-AQEw3bRw" name="Call(ListSize).argument(list)" incoming="_RLxCuuYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC4eYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC4uYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLxC4-YNEeWt6-AQEw3bRw" name="Call(ListSize).result(result)" outgoing="_RLxCu-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC5OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC5eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxC5uYNEeWt6-AQEw3bRw" name="Value(0)">
              <result xmi:id="_RLxC5-YNEeWt6-AQEw3bRw" name="Value(0).result" outgoing="_RLxCvOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC6OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC6eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RLxC6uYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLxC6-YNEeWt6-AQEw3bRw" name="Test(Size==0)">
              <first xmi:id="_RLxC7OYNEeWt6-AQEw3bRw" name="Test(Size==0).first" incoming="_RLxCu-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC7eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC7uYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLxC7-YNEeWt6-AQEw3bRw" name="Test(Size==0).result" outgoing="_RLxCvuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC8OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC8eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLxC8uYNEeWt6-AQEw3bRw" name="Test(Size==0).second" incoming="_RLxCvOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC8-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC9OYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLxC9eYNEeWt6-AQEw3bRw" name="InitialNode" outgoing="_RLxCveYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLxC9uYNEeWt6-AQEw3bRw" name="Decision(Test(Tester$initializationFlag$1))" incoming="_RLxCveYNEeWt6-AQEw3bRw _RLxCvuYNEeWt6-AQEw3bRw" outgoing="_RLxCv-YNEeWt6-AQEw3bRw" decisionInputFlow="_RLxCvuYNEeWt6-AQEw3bRw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_RLxC9-YNEeWt6-AQEw3bRw" name="Tester$initialization$1" visibility="protected" method="_RLxCteYNEeWt6-AQEw3bRw"/>
        <ownedOperation xmi:id="_RLxC-OYNEeWt6-AQEw3bRw" name="Tester" visibility="public" method="_RLwgJuYNEeWt6-AQEw3bRw">
          <ownedParameter xmi:id="_RLxC-eYNEeWt6-AQEw3bRw" name="" visibility="package" type="_RLwgIuYNEeWt6-AQEw3bRw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxC-uYNEeWt6-AQEw3bRw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxC--YNEeWt6-AQEw3bRw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RLxC_OYNEeWt6-AQEw3bRw" name="destroy" visibility="public" method="_RLxCs-YNEeWt6-AQEw3bRw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_RLxC_eYNEeWt6-AQEw3bRw" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_RLxC_uYNEeWt6-AQEw3bRw" name="Continue" signal="_RLxC_eYNEeWt6-AQEw3bRw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RLxC_-YNEeWt6-AQEw3bRw" name="AssertTrue" visibility="public" node="_RLxDEuYNEeWt6-AQEw3bRw _RLxDFeYNEeWt6-AQEw3bRw _RLxDE-YNEeWt6-AQEw3bRw _RLxDG-YNEeWt6-AQEw3bRw _RLxDIeYNEeWt6-AQEw3bRw _RLxDFOYNEeWt6-AQEw3bRw" group="_RLxDFeYNEeWt6-AQEw3bRw _RLxDG-YNEeWt6-AQEw3bRw _RLxDIeYNEeWt6-AQEw3bRw">
      <packageImport xmi:id="_RLxDAOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLxDAeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLxDAuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLxDA-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLxDBOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RLxDBeYNEeWt6-AQEw3bRw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDBuYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDB-YNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RLxDCOYNEeWt6-AQEw3bRw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDCeYNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDCuYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDC-YNEeWt6-AQEw3bRw" target="_RLxDF-YNEeWt6-AQEw3bRw" source="_RLxDEuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDDOYNEeWt6-AQEw3bRw" target="_RLxDHeYNEeWt6-AQEw3bRw" source="_RLxDE-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDDeYNEeWt6-AQEw3bRw" target="_RLxDPeYNEeWt6-AQEw3bRw" source="_RLxDIOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDDuYNEeWt6-AQEw3bRw" target="_RLxDZOYNEeWt6-AQEw3bRw" source="_RLxDGuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDD-YNEeWt6-AQEw3bRw" target="_RLxDFOYNEeWt6-AQEw3bRw" source="_RLxDFeYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDEOYNEeWt6-AQEw3bRw" target="_RLxDFOYNEeWt6-AQEw3bRw" source="_RLxDG-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDEeYNEeWt6-AQEw3bRw" target="_RLxDIeYNEeWt6-AQEw3bRw" source="_RLxDFOYNEeWt6-AQEw3bRw"/>
      <structuredNode xmi:id="_RLxDFeYNEeWt6-AQEw3bRw" name="Node(Input(label))" outgoing="_RLxDD-YNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDFuYNEeWt6-AQEw3bRw" target="_RLxDGuYNEeWt6-AQEw3bRw" source="_RLxDF-YNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxDF-YNEeWt6-AQEw3bRw" name="Input(label)" incoming="_RLxDC-YNEeWt6-AQEw3bRw" outgoing="_RLxDFuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDGOYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDGeYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxDGuYNEeWt6-AQEw3bRw" name="Fork(label)" incoming="_RLxDFuYNEeWt6-AQEw3bRw" outgoing="_RLxDDuYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxDG-YNEeWt6-AQEw3bRw" name="Node(Input(condition))" outgoing="_RLxDEOYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDHOYNEeWt6-AQEw3bRw" target="_RLxDIOYNEeWt6-AQEw3bRw" source="_RLxDHeYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxDHeYNEeWt6-AQEw3bRw" name="Input(condition)" incoming="_RLxDDOYNEeWt6-AQEw3bRw" outgoing="_RLxDHOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDHuYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDH-YNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxDIOYNEeWt6-AQEw3bRw" name="Fork(condition)" incoming="_RLxDHOYNEeWt6-AQEw3bRw" outgoing="_RLxDDeYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxDIeYNEeWt6-AQEw3bRw" name="Body(AssertTrue)" incoming="_RLxDEeYNEeWt6-AQEw3bRw">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RLxDIuYNEeWt6-AQEw3bRw" name="IfStatement@181e7501">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxDI-YNEeWt6-AQEw3bRw" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDJOYNEeWt6-AQEw3bRw" target="_RLxDNOYNEeWt6-AQEw3bRw" source="_RLxDPeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDJeYNEeWt6-AQEw3bRw" target="_RLxDP-YNEeWt6-AQEw3bRw" source="_RLxDPeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDJuYNEeWt6-AQEw3bRw" target="_RLxDReYNEeWt6-AQEw3bRw" source="_RLxDQuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDJ-YNEeWt6-AQEw3bRw" target="_RLxDRuYNEeWt6-AQEw3bRw" source="_RLxDN-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDKOYNEeWt6-AQEw3bRw" target="_RLxDR-YNEeWt6-AQEw3bRw" source="_RLxDReYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDKeYNEeWt6-AQEw3bRw" target="_RLxDR-YNEeWt6-AQEw3bRw" source="_RLxDReYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDKuYNEeWt6-AQEw3bRw" target="_RLxDRuYNEeWt6-AQEw3bRw" source="_RLxDR-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxDK-YNEeWt6-AQEw3bRw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDLOYNEeWt6-AQEw3bRw" target="_RLxDOuYNEeWt6-AQEw3bRw" source="_RLxDL-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDLeYNEeWt6-AQEw3bRw" target="_RLxDSeYNEeWt6-AQEw3bRw" source="_RLxDRuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxDLuYNEeWt6-AQEw3bRw" name="Value(true)">
              <result xmi:id="_RLxDL-YNEeWt6-AQEw3bRw" name="Value(true).result" outgoing="_RLxDLOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDMOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDMeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RLxDMuYNEeWt6-AQEw3bRw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLxDM-YNEeWt6-AQEw3bRw" name="Test(==)">
              <first xmi:id="_RLxDNOYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RLxDJOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDNeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDNuYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLxDN-YNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RLxDJ-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDOOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDOeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLxDOuYNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RLxDLOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDO-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDPOYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxDPeYNEeWt6-AQEw3bRw" name="Fork(Fork(condition))" incoming="_RLxDDeYNEeWt6-AQEw3bRw" outgoing="_RLxDJOYNEeWt6-AQEw3bRw _RLxDJeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxDPuYNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
              <argument xmi:id="_RLxDP-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RLxDJeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDQOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDQeYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLxDQuYNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RLxDJuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDQ-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDROYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxDReYNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RLxDJuYNEeWt6-AQEw3bRw" outgoing="_RLxDKOYNEeWt6-AQEw3bRw _RLxDKeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RLxDRuYNEeWt6-AQEw3bRw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_RLxDJ-YNEeWt6-AQEw3bRw _RLxDKuYNEeWt6-AQEw3bRw" outgoing="_RLxDLeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLxDR-YNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RLxDKOYNEeWt6-AQEw3bRw _RLxDKeYNEeWt6-AQEw3bRw" outgoing="_RLxDKuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxDKeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxDSOYNEeWt6-AQEw3bRw" name="Call(Not)">
              <argument xmi:id="_RLxDSeYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RLxDLeYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDSuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDS-YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxDTOYNEeWt6-AQEw3bRw" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDTeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDTuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxDT-YNEeWt6-AQEw3bRw" name="ExpressionStatement@9b0040a">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDUOYNEeWt6-AQEw3bRw" target="_RLxDU-YNEeWt6-AQEw3bRw" source="_RLxDZ-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDUeYNEeWt6-AQEw3bRw" target="_RLxDUuYNEeWt6-AQEw3bRw" source="_RLxDWeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxDUuYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RLxDUeYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxDU-YNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RLxDUOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDVOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDVeYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxDVuYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDV-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDWOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxDWeYNEeWt6-AQEw3bRw" name="Tuple@6d19f259" outgoing="_RLxDUeYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDWuYNEeWt6-AQEw3bRw" target="_RLxDYeYNEeWt6-AQEw3bRw" source="_RLxDXOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxDW-YNEeWt6-AQEw3bRw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RLxDXOYNEeWt6-AQEw3bRw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RLxDWuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDXeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDXuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RLxDX-YNEeWt6-AQEw3bRw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxDYOYNEeWt6-AQEw3bRw" name="Call(Concat)">
                <argument xmi:id="_RLxDYeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RLxDWuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDYuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDY-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLxDZOYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RLxDDuYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDZeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDZuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RLxDZ-YNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RLxDUOYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDaOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDaeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxDauYNEeWt6-AQEw3bRw" name="Value(true)">
            <result xmi:id="_RLxDa-YNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDbOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDbeYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RLxDbuYNEeWt6-AQEw3bRw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RLxDb-YNEeWt6-AQEw3bRw" body="_RLxDT-YNEeWt6-AQEw3bRw" decider="_RLxDTOYNEeWt6-AQEw3bRw" successorClause="_RLxDcOYNEeWt6-AQEw3bRw" test="_RLxDI-YNEeWt6-AQEw3bRw"/>
          <clause xmi:id="_RLxDcOYNEeWt6-AQEw3bRw" decider="_RLxDa-YNEeWt6-AQEw3bRw" predecessorClause="_RLxDb-YNEeWt6-AQEw3bRw" test="_RLxDauYNEeWt6-AQEw3bRw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxDEuYNEeWt6-AQEw3bRw" name="Input(label)" outgoing="_RLxDC-YNEeWt6-AQEw3bRw" parameter="_RLxDBeYNEeWt6-AQEw3bRw">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxDE-YNEeWt6-AQEw3bRw" name="Input(condition)" outgoing="_RLxDDOYNEeWt6-AQEw3bRw" parameter="_RLxDCOYNEeWt6-AQEw3bRw">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_RLxDFOYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLxDD-YNEeWt6-AQEw3bRw _RLxDEOYNEeWt6-AQEw3bRw" outgoing="_RLxDEeYNEeWt6-AQEw3bRw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RLxDceYNEeWt6-AQEw3bRw" name="AssertEqual" visibility="public" node="_RLxDjuYNEeWt6-AQEw3bRw _RLxDkuYNEeWt6-AQEw3bRw _RLxDj-YNEeWt6-AQEw3bRw _RLxDmOYNEeWt6-AQEw3bRw _RLxDkOYNEeWt6-AQEw3bRw _RLxDnuYNEeWt6-AQEw3bRw _RLxDpOYNEeWt6-AQEw3bRw _RLxDkeYNEeWt6-AQEw3bRw" group="_RLxDkuYNEeWt6-AQEw3bRw _RLxDmOYNEeWt6-AQEw3bRw _RLxDnuYNEeWt6-AQEw3bRw _RLxDpOYNEeWt6-AQEw3bRw">
      <packageImport xmi:id="_RLxDcuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLxDc-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLxDdOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLxDdeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLxDduYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RLxDd-YNEeWt6-AQEw3bRw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDeOYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDeeYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RLxDeuYNEeWt6-AQEw3bRw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDe-YNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDfOYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RLxDfeYNEeWt6-AQEw3bRw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDfuYNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDf-YNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDgOYNEeWt6-AQEw3bRw" target="_RLxDlOYNEeWt6-AQEw3bRw" source="_RLxDjuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDgeYNEeWt6-AQEw3bRw" target="_RLxDmuYNEeWt6-AQEw3bRw" source="_RLxDj-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDguYNEeWt6-AQEw3bRw" target="_RLxDoOYNEeWt6-AQEw3bRw" source="_RLxDkOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDg-YNEeWt6-AQEw3bRw" target="_RLxDyuYNEeWt6-AQEw3bRw" source="_RLxDneYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDhOYNEeWt6-AQEw3bRw" target="_RLxD0uYNEeWt6-AQEw3bRw" source="_RLxDo-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDheYNEeWt6-AQEw3bRw" target="_RLxECeYNEeWt6-AQEw3bRw" source="_RLxDl-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDhuYNEeWt6-AQEw3bRw" target="_RLxEL-YNEeWt6-AQEw3bRw" source="_RLxDo-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDh-YNEeWt6-AQEw3bRw" target="_RLxETeYNEeWt6-AQEw3bRw" source="_RLxDo-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDiOYNEeWt6-AQEw3bRw" target="_RLxEc-YNEeWt6-AQEw3bRw" source="_RLxDo-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDieYNEeWt6-AQEw3bRw" target="_RLxEk-YNEeWt6-AQEw3bRw" source="_RLxDo-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDiuYNEeWt6-AQEw3bRw" target="_RLxDkeYNEeWt6-AQEw3bRw" source="_RLxDkuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDi-YNEeWt6-AQEw3bRw" target="_RLxDkeYNEeWt6-AQEw3bRw" source="_RLxDmOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDjOYNEeWt6-AQEw3bRw" target="_RLxDkeYNEeWt6-AQEw3bRw" source="_RLxDnuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDjeYNEeWt6-AQEw3bRw" target="_RLxDpOYNEeWt6-AQEw3bRw" source="_RLxDkeYNEeWt6-AQEw3bRw"/>
      <structuredNode xmi:id="_RLxDkuYNEeWt6-AQEw3bRw" name="Node(Input(label))" outgoing="_RLxDiuYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDk-YNEeWt6-AQEw3bRw" target="_RLxDl-YNEeWt6-AQEw3bRw" source="_RLxDlOYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxDlOYNEeWt6-AQEw3bRw" name="Input(label)" incoming="_RLxDgOYNEeWt6-AQEw3bRw" outgoing="_RLxDk-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDleYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDluYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxDl-YNEeWt6-AQEw3bRw" name="Fork(label)" incoming="_RLxDk-YNEeWt6-AQEw3bRw" outgoing="_RLxDheYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxDmOYNEeWt6-AQEw3bRw" name="Node(Input(value1))" outgoing="_RLxDi-YNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDmeYNEeWt6-AQEw3bRw" target="_RLxDneYNEeWt6-AQEw3bRw" source="_RLxDmuYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxDmuYNEeWt6-AQEw3bRw" name="Input(value1)" incoming="_RLxDgeYNEeWt6-AQEw3bRw" outgoing="_RLxDmeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDm-YNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDnOYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxDneYNEeWt6-AQEw3bRw" name="Fork(value1)" incoming="_RLxDmeYNEeWt6-AQEw3bRw" outgoing="_RLxDg-YNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxDnuYNEeWt6-AQEw3bRw" name="Node(Input(value2))" outgoing="_RLxDjOYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDn-YNEeWt6-AQEw3bRw" target="_RLxDo-YNEeWt6-AQEw3bRw" source="_RLxDoOYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxDoOYNEeWt6-AQEw3bRw" name="Input(value2)" incoming="_RLxDguYNEeWt6-AQEw3bRw" outgoing="_RLxDn-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDoeYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDouYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxDo-YNEeWt6-AQEw3bRw" name="Fork(value2)" incoming="_RLxDn-YNEeWt6-AQEw3bRw" outgoing="_RLxDhOYNEeWt6-AQEw3bRw _RLxDhuYNEeWt6-AQEw3bRw _RLxDh-YNEeWt6-AQEw3bRw _RLxDiOYNEeWt6-AQEw3bRw _RLxDieYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxDpOYNEeWt6-AQEw3bRw" name="Body(AssertEqual)" incoming="_RLxDjeYNEeWt6-AQEw3bRw">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RLxDpeYNEeWt6-AQEw3bRw" name="IfStatement@1448ef73">
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDpuYNEeWt6-AQEw3bRw" target="_RLxEHuYNEeWt6-AQEw3bRw" source="_RLxD9eYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDp-YNEeWt6-AQEw3bRw" target="_RLxEmuYNEeWt6-AQEw3bRw" source="_RLxEHuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxDqOYNEeWt6-AQEw3bRw" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDqeYNEeWt6-AQEw3bRw" target="_RLxDweYNEeWt6-AQEw3bRw" source="_RLxDyuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDquYNEeWt6-AQEw3bRw" target="_RLxDzOYNEeWt6-AQEw3bRw" source="_RLxDyuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDq-YNEeWt6-AQEw3bRw" target="_RLxDx-YNEeWt6-AQEw3bRw" source="_RLxD0uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDrOYNEeWt6-AQEw3bRw" target="_RLxD1OYNEeWt6-AQEw3bRw" source="_RLxD0uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDreYNEeWt6-AQEw3bRw" target="_RLxD2-YNEeWt6-AQEw3bRw" source="_RLxDz-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDruYNEeWt6-AQEw3bRw" target="_RLxD3OYNEeWt6-AQEw3bRw" source="_RLxD1-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDr-YNEeWt6-AQEw3bRw" target="_RLxD3uYNEeWt6-AQEw3bRw" source="_RLxD2-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDsOYNEeWt6-AQEw3bRw" target="_RLxD5eYNEeWt6-AQEw3bRw" source="_RLxD3OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDseYNEeWt6-AQEw3bRw" target="_RLxD6-YNEeWt6-AQEw3bRw" source="_RLxD3OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDsuYNEeWt6-AQEw3bRw" target="_RLxDwOYNEeWt6-AQEw3bRw" source="_RLxD6-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxDs-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDtOYNEeWt6-AQEw3bRw" target="_RLxD3eYNEeWt6-AQEw3bRw" source="_RLxD6-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxDteYNEeWt6-AQEw3bRw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDtuYNEeWt6-AQEw3bRw" target="_RLxD7OYNEeWt6-AQEw3bRw" source="_RLxD2uYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDt-YNEeWt6-AQEw3bRw" target="_RLxD7OYNEeWt6-AQEw3bRw" source="_RLxD2-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDuOYNEeWt6-AQEw3bRw" target="_RLxD6-YNEeWt6-AQEw3bRw" source="_RLxD7OYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxDueYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxDuuYNEeWt6-AQEw3bRw" target="_RLxD5OYNEeWt6-AQEw3bRw" source="_RLxD7OYNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxDu-YNEeWt6-AQEw3bRw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDvOYNEeWt6-AQEw3bRw" target="_RLxD7eYNEeWt6-AQEw3bRw" source="_RLxDxOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDveYNEeWt6-AQEw3bRw" target="_RLxD7eYNEeWt6-AQEw3bRw" source="_RLxD4eYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDvuYNEeWt6-AQEw3bRw" target="_RLxD7eYNEeWt6-AQEw3bRw" source="_RLxD6OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxDv-YNEeWt6-AQEw3bRw" target="_RLxD7-YNEeWt6-AQEw3bRw" source="_RLxD7eYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLxDwOYNEeWt6-AQEw3bRw" name="Test(==)" incoming="_RLxDsuYNEeWt6-AQEw3bRw">
              <first xmi:id="_RLxDweYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RLxDqeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDwuYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDw-YNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLxDxOYNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RLxDvOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDxeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDxuYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLxDx-YNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RLxDq-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDyOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDyeYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxDyuYNEeWt6-AQEw3bRw" name="Fork(Fork(value1))" incoming="_RLxDg-YNEeWt6-AQEw3bRw" outgoing="_RLxDqeYNEeWt6-AQEw3bRw _RLxDquYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxDy-YNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
              <argument xmi:id="_RLxDzOYNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RLxDquYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxDzeYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxDzuYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLxDz-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RLxDreYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD0OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD0eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxD0uYNEeWt6-AQEw3bRw" name="Fork(Fork(value2))" incoming="_RLxDhOYNEeWt6-AQEw3bRw" outgoing="_RLxDq-YNEeWt6-AQEw3bRw _RLxDrOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxD0-YNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
              <argument xmi:id="_RLxD1OYNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RLxDrOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD1eYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD1uYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLxD1-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RLxDruYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD2OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD2eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RLxD2uYNEeWt6-AQEw3bRw" name="Initial(Test(==))" outgoing="_RLxDtuYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxD2-YNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RLxDreYNEeWt6-AQEw3bRw" outgoing="_RLxDr-YNEeWt6-AQEw3bRw _RLxDt-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxD3OYNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RLxDruYNEeWt6-AQEw3bRw" outgoing="_RLxDsOYNEeWt6-AQEw3bRw _RLxDseYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxD3eYNEeWt6-AQEw3bRw" name="Call(Not)" incoming="_RLxDtOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxD3uYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RLxDr-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD3-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD4OYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxD4eYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RLxDveYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD4uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD4-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxD5OYNEeWt6-AQEw3bRw" name="Call(Not)" incoming="_RLxDuuYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxD5eYNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RLxDsOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD5uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD5-YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxD6OYNEeWt6-AQEw3bRw" name="Call(Not).result(result)" outgoing="_RLxDvuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD6eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD6uYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLxD6-YNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RLxDseYNEeWt6-AQEw3bRw _RLxDuOYNEeWt6-AQEw3bRw" outgoing="_RLxDsuYNEeWt6-AQEw3bRw _RLxDtOYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxDseYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLxD7OYNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RLxDtuYNEeWt6-AQEw3bRw _RLxDt-YNEeWt6-AQEw3bRw" outgoing="_RLxDuOYNEeWt6-AQEw3bRw _RLxDuuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxDt-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RLxD7eYNEeWt6-AQEw3bRw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RLxDvOYNEeWt6-AQEw3bRw _RLxDveYNEeWt6-AQEw3bRw _RLxDvuYNEeWt6-AQEw3bRw" outgoing="_RLxDv-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxD7uYNEeWt6-AQEw3bRw" name="Call(Not)">
              <argument xmi:id="_RLxD7-YNEeWt6-AQEw3bRw" name="Call(Not).argument(x)" incoming="_RLxDv-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD8OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD8eYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxD8uYNEeWt6-AQEw3bRw" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD8-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD9OYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxD9eYNEeWt6-AQEw3bRw" name="ExpressionStatement@61f6ad90" outgoing="_RLxDpuYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxD9uYNEeWt6-AQEw3bRw" target="_RLxD-eYNEeWt6-AQEw3bRw" source="_RLxEG-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxD9-YNEeWt6-AQEw3bRw" target="_RLxD-OYNEeWt6-AQEw3bRw" source="_RLxD_OYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxD-OYNEeWt6-AQEw3bRw" name="Call(Write)" incoming="_RLxD9-YNEeWt6-AQEw3bRw" behavior="_RLxFFOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxD-eYNEeWt6-AQEw3bRw" name="Call(Write).argument(value)" incoming="_RLxD9uYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxD-uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxD--YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxD_OYNEeWt6-AQEw3bRw" name="Tuple@76e0fdd0" outgoing="_RLxD9-YNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxD_eYNEeWt6-AQEw3bRw" target="_RLxEBuYNEeWt6-AQEw3bRw" source="_RLxEAeYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxD_uYNEeWt6-AQEw3bRw" target="_RLxEFeYNEeWt6-AQEw3bRw" source="_RLxEDOYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxD_-YNEeWt6-AQEw3bRw" target="_RLxEGOYNEeWt6-AQEw3bRw" source="_RLxEEOYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxEAOYNEeWt6-AQEw3bRw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RLxEAeYNEeWt6-AQEw3bRw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RLxD_eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEAuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEA-YNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RLxEBOYNEeWt6-AQEw3bRw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxEBeYNEeWt6-AQEw3bRw" name="Call(Concat)">
                <argument xmi:id="_RLxEBuYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RLxD_eYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEB-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxECOYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLxECeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RLxDheYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxECuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEC-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RLxEDOYNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RLxD_uYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEDeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEDuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxED-YNEeWt6-AQEw3bRw" name="Value(&quot;==&quot;)">
                <result xmi:id="_RLxEEOYNEeWt6-AQEw3bRw" name="Value(&quot;==&quot;).result" outgoing="_RLxD_-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEEeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEEuYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RLxEE-YNEeWt6-AQEw3bRw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxEFOYNEeWt6-AQEw3bRw" name="Call(Concat)">
                <argument xmi:id="_RLxEFeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RLxD_uYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEFuYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEF-YNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <argument xmi:id="_RLxEGOYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RLxD_-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEGeYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEGuYNEeWt6-AQEw3bRw" value="1"/>
                </argument>
                <result xmi:id="_RLxEG-YNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RLxD9uYNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEHOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEHeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEHuYNEeWt6-AQEw3bRw" name="ExpressionStatement@2b06aee" incoming="_RLxDpuYNEeWt6-AQEw3bRw" outgoing="_RLxDp-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEH-YNEeWt6-AQEw3bRw" target="_RLxEIuYNEeWt6-AQEw3bRw" source="_RLxEmeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEIOYNEeWt6-AQEw3bRw" target="_RLxEIeYNEeWt6-AQEw3bRw" source="_RLxEJeYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxEIeYNEeWt6-AQEw3bRw" name="Call(Write)" incoming="_RLxEIOYNEeWt6-AQEw3bRw" behavior="_RLxFFOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxEIuYNEeWt6-AQEw3bRw" name="Call(Write).argument(value)" incoming="_RLxEH-YNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEI-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEJOYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEJeYNEeWt6-AQEw3bRw" name="Tuple@52fed6f9" outgoing="_RLxEIOYNEeWt6-AQEw3bRw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEJuYNEeWt6-AQEw3bRw" target="_RLxEmOYNEeWt6-AQEw3bRw" source="_RLxEl-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEJ-YNEeWt6-AQEw3bRw" target="_RLxEmOYNEeWt6-AQEw3bRw" source="_RLxEMuYNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEKOYNEeWt6-AQEw3bRw" target="_RLxENeYNEeWt6-AQEw3bRw" source="_RLxEmOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxEKeYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEKuYNEeWt6-AQEw3bRw" target="_RLxEP-YNEeWt6-AQEw3bRw" source="_RLxEmOYNEeWt6-AQEw3bRw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxEK-YNEeWt6-AQEw3bRw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxELOYNEeWt6-AQEw3bRw" target="_RLxEmeYNEeWt6-AQEw3bRw" source="_RLxEN-YNEeWt6-AQEw3bRw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxELeYNEeWt6-AQEw3bRw" target="_RLxEmeYNEeWt6-AQEw3bRw" source="_RLxESeYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxELuYNEeWt6-AQEw3bRw" name="Call(IsEmpty)">
                <argument xmi:id="_RLxEL-YNEeWt6-AQEw3bRw" name="Call(IsEmpty).argument(seq)" incoming="_RLxDhuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEMOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEMeYNEeWt6-AQEw3bRw" value="*"/>
                </argument>
                <result xmi:id="_RLxEMuYNEeWt6-AQEw3bRw" name="Call(IsEmpty).result()" outgoing="_RLxEJ-YNEeWt6-AQEw3bRw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEM-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxENOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxENeYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@2eafaf48.operand2" incoming="_RLxEKOYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxENuYNEeWt6-AQEw3bRw" target="_RLxEN-YNEeWt6-AQEw3bRw" source="_RLxEO-YNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RLxEN-YNEeWt6-AQEw3bRw" name="ConditionalTestExpression@2eafaf48.operand2.result" incoming="_RLxENuYNEeWt6-AQEw3bRw" outgoing="_RLxELOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEOOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEOeYNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxEOuYNEeWt6-AQEw3bRw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_RLxEO-YNEeWt6-AQEw3bRw" name="Value(&quot;null&quot;).result" outgoing="_RLxENuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEPOYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEPeYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RLxEPuYNEeWt6-AQEw3bRw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEP-YNEeWt6-AQEw3bRw" name="ConditionalTestExpression@2eafaf48.operand3" incoming="_RLxEKuYNEeWt6-AQEw3bRw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEQOYNEeWt6-AQEw3bRw" target="_RLxEleYNEeWt6-AQEw3bRw" source="_RLxElOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEQeYNEeWt6-AQEw3bRw" target="_RLxEleYNEeWt6-AQEw3bRw" source="_RLxEUOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEQuYNEeWt6-AQEw3bRw" target="_RLxEU-YNEeWt6-AQEw3bRw" source="_RLxEleYNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxEQ-YNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEROYNEeWt6-AQEw3bRw" target="_RLxEjuYNEeWt6-AQEw3bRw" source="_RLxEleYNEeWt6-AQEw3bRw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxEReYNEeWt6-AQEw3bRw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxERuYNEeWt6-AQEw3bRw" target="_RLxEluYNEeWt6-AQEw3bRw" source="_RLxEWeYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxER-YNEeWt6-AQEw3bRw" target="_RLxEluYNEeWt6-AQEw3bRw" source="_RLxEkOYNEeWt6-AQEw3bRw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxESOYNEeWt6-AQEw3bRw" target="_RLxESeYNEeWt6-AQEw3bRw" source="_RLxEluYNEeWt6-AQEw3bRw"/>
                <structuredNodeOutput xmi:id="_RLxESeYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@2eafaf48.operand3.result" incoming="_RLxESOYNEeWt6-AQEw3bRw" outgoing="_RLxELeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxESuYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxES-YNEeWt6-AQEw3bRw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLxETOYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_RLxETeYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).object" incoming="_RLxDh-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxETuYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxET-YNEeWt6-AQEw3bRw" value="1"/>
                  </object>
                  <result xmi:id="_RLxEUOYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).result" outgoing="_RLxEQeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEUeYNEeWt6-AQEw3bRw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEUuYNEeWt6-AQEw3bRw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEU-YNEeWt6-AQEw3bRw" name="ConditionalTestExpression@7092f807.operand2" incoming="_RLxEQuYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEVOYNEeWt6-AQEw3bRw" target="_RLxEduYNEeWt6-AQEw3bRw" source="_RLxEXeYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEVeYNEeWt6-AQEw3bRw" target="_RLxEeeYNEeWt6-AQEw3bRw" source="_RLxEdOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEVuYNEeWt6-AQEw3bRw" target="_RLxEheYNEeWt6-AQEw3bRw" source="_RLxEfOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEV-YNEeWt6-AQEw3bRw" target="_RLxEiOYNEeWt6-AQEw3bRw" source="_RLxEgOYNEeWt6-AQEw3bRw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEWOYNEeWt6-AQEw3bRw" target="_RLxEWeYNEeWt6-AQEw3bRw" source="_RLxEi-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RLxEWeYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@7092f807.operand2.result" incoming="_RLxEWOYNEeWt6-AQEw3bRw" outgoing="_RLxERuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEWuYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEW-YNEeWt6-AQEw3bRw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxEXOYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RLxEXeYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;).result" outgoing="_RLxEVOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEXuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEX-YNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RLxEYOYNEeWt6-AQEw3bRw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_RLxEYeYNEeWt6-AQEw3bRw" name="CastExpression@6d4d8e91" mode="parallel" outputElement="_RLxEdOYNEeWt6-AQEw3bRw" inputElement="_RLxEc-YNEeWt6-AQEw3bRw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEYuYNEeWt6-AQEw3bRw" target="_RLxEa-YNEeWt6-AQEw3bRw" source="_RLxEceYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEY-YNEeWt6-AQEw3bRw" target="_RLxEcuYNEeWt6-AQEw3bRw" source="_RLxEceYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEZOYNEeWt6-AQEw3bRw" target="_RLxEcuYNEeWt6-AQEw3bRw" source="_RLxEbuYNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEZeYNEeWt6-AQEw3bRw" target="_RLxEaeYNEeWt6-AQEw3bRw" source="_RLxEcuYNEeWt6-AQEw3bRw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxEZuYNEeWt6-AQEw3bRw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEZ-YNEeWt6-AQEw3bRw" target="_RLxEceYNEeWt6-AQEw3bRw" source="_RLxEc-YNEeWt6-AQEw3bRw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEaOYNEeWt6-AQEw3bRw" target="_RLxEdOYNEeWt6-AQEw3bRw" source="_RLxEaeYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_RLxEaeYNEeWt6-AQEw3bRw" name="Merge(CastExpression@6d4d8e91.operand)" incoming="_RLxEZeYNEeWt6-AQEw3bRw" outgoing="_RLxEaOYNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RLxEauYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_RLxEa-YNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).object" incoming="_RLxEYuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEbOYNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEbeYNEeWt6-AQEw3bRw" value="1"/>
                      </object>
                      <result xmi:id="_RLxEbuYNEeWt6-AQEw3bRw" name="ReadIsClassifiedObject(String).result" outgoing="_RLxEZOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEb-YNEeWt6-AQEw3bRw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEcOYNEeWt6-AQEw3bRw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RLxEceYNEeWt6-AQEw3bRw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RLxEZ-YNEeWt6-AQEw3bRw" outgoing="_RLxEYuYNEeWt6-AQEw3bRw _RLxEY-YNEeWt6-AQEw3bRw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_RLxEcuYNEeWt6-AQEw3bRw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RLxEY-YNEeWt6-AQEw3bRw _RLxEZOYNEeWt6-AQEw3bRw" outgoing="_RLxEZeYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxEZOYNEeWt6-AQEw3bRw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RLxEc-YNEeWt6-AQEw3bRw" name="CastExpression@6d4d8e91.inputElement" incoming="_RLxDiOYNEeWt6-AQEw3bRw" outgoing="_RLxEZ-YNEeWt6-AQEw3bRw" regionAsInput="_RLxEYeYNEeWt6-AQEw3bRw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RLxEdOYNEeWt6-AQEw3bRw" name="CastExpression@6d4d8e91.outputElement" incoming="_RLxEaOYNEeWt6-AQEw3bRw" outgoing="_RLxEVeYNEeWt6-AQEw3bRw" regionAsOutput="_RLxEYeYNEeWt6-AQEw3bRw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxEdeYNEeWt6-AQEw3bRw" name="Call(Concat)">
                    <argument xmi:id="_RLxEduYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RLxEVOYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEd-YNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEeOYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <argument xmi:id="_RLxEeeYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RLxEVeYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEeuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEe-YNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RLxEfOYNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RLxEVuYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEfeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEfuYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxEf-YNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RLxEgOYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;&quot;).result" outgoing="_RLxEV-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEgeYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEguYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RLxEg-YNEeWt6-AQEw3bRw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxEhOYNEeWt6-AQEw3bRw" name="Call(Concat)">
                    <argument xmi:id="_RLxEheYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RLxEVuYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEhuYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEh-YNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <argument xmi:id="_RLxEiOYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RLxEV-YNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEieYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEiuYNEeWt6-AQEw3bRw" value="1"/>
                    </argument>
                    <result xmi:id="_RLxEi-YNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RLxEWOYNEeWt6-AQEw3bRw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEjOYNEeWt6-AQEw3bRw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEjeYNEeWt6-AQEw3bRw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEjuYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@7092f807.operand3" incoming="_RLxEROYNEeWt6-AQEw3bRw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEj-YNEeWt6-AQEw3bRw" target="_RLxEkOYNEeWt6-AQEw3bRw" source="_RLxEk-YNEeWt6-AQEw3bRw"/>
                  <structuredNodeOutput xmi:id="_RLxEkOYNEeWt6-AQEw3bRw" name="ConditionalTestExpression@7092f807.operand3.result" incoming="_RLxEj-YNEeWt6-AQEw3bRw" outgoing="_RLxER-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEkeYNEeWt6-AQEw3bRw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEkuYNEeWt6-AQEw3bRw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_RLxEk-YNEeWt6-AQEw3bRw" name="Merge(Fork(value2))" incoming="_RLxDieYNEeWt6-AQEw3bRw" outgoing="_RLxEj-YNEeWt6-AQEw3bRw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RLxElOYNEeWt6-AQEw3bRw" name="Initial(ConditionalTestExpression@7092f807)" outgoing="_RLxEQOYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_RLxEleYNEeWt6-AQEw3bRw" name="Decision(ConditionalTestExpression@7092f807)" incoming="_RLxEQOYNEeWt6-AQEw3bRw _RLxEQeYNEeWt6-AQEw3bRw" outgoing="_RLxEQuYNEeWt6-AQEw3bRw _RLxEROYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxEQeYNEeWt6-AQEw3bRw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RLxEluYNEeWt6-AQEw3bRw" name="Merge(ConditionalTestExpression@7092f807.result)" incoming="_RLxERuYNEeWt6-AQEw3bRw _RLxER-YNEeWt6-AQEw3bRw" outgoing="_RLxESOYNEeWt6-AQEw3bRw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RLxEl-YNEeWt6-AQEw3bRw" name="Initial(ConditionalTestExpression@2eafaf48)" outgoing="_RLxEJuYNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RLxEmOYNEeWt6-AQEw3bRw" name="Decision(ConditionalTestExpression@2eafaf48)" incoming="_RLxEJuYNEeWt6-AQEw3bRw _RLxEJ-YNEeWt6-AQEw3bRw" outgoing="_RLxEKOYNEeWt6-AQEw3bRw _RLxEKuYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxEJ-YNEeWt6-AQEw3bRw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RLxEmeYNEeWt6-AQEw3bRw" name="Merge(ConditionalTestExpression@2eafaf48.result)" incoming="_RLxELOYNEeWt6-AQEw3bRw _RLxELeYNEeWt6-AQEw3bRw" outgoing="_RLxEH-YNEeWt6-AQEw3bRw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEmuYNEeWt6-AQEw3bRw" name="ExpressionStatement@5ecb5721" incoming="_RLxDp-YNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEm-YNEeWt6-AQEw3bRw" target="_RLxEnuYNEeWt6-AQEw3bRw" source="_RLxEpuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEnOYNEeWt6-AQEw3bRw" target="_RLxEneYNEeWt6-AQEw3bRw" source="_RLxEpOYNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxEneYNEeWt6-AQEw3bRw" name="Call(WriteLine)" incoming="_RLxEnOYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxEnuYNEeWt6-AQEw3bRw" name="Call(WriteLine).argument(value)" incoming="_RLxEm-YNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEn-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEoOYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxEoeYNEeWt6-AQEw3bRw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEouYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEo-YNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxEpOYNEeWt6-AQEw3bRw" name="Tuple@76a7e6e7" outgoing="_RLxEnOYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxEpeYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;)">
                <result xmi:id="_RLxEpuYNEeWt6-AQEw3bRw" name="Value(&quot;&quot;).result" outgoing="_RLxEm-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEp-YNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEqOYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RLxEqeYNEeWt6-AQEw3bRw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxEquYNEeWt6-AQEw3bRw" name="Value(true)">
            <result xmi:id="_RLxEq-YNEeWt6-AQEw3bRw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxErOYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEreYNEeWt6-AQEw3bRw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RLxEruYNEeWt6-AQEw3bRw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RLxEr-YNEeWt6-AQEw3bRw" body="_RLxD9eYNEeWt6-AQEw3bRw _RLxEHuYNEeWt6-AQEw3bRw _RLxEmuYNEeWt6-AQEw3bRw" decider="_RLxD8uYNEeWt6-AQEw3bRw" successorClause="_RLxEsOYNEeWt6-AQEw3bRw" test="_RLxDqOYNEeWt6-AQEw3bRw"/>
          <clause xmi:id="_RLxEsOYNEeWt6-AQEw3bRw" decider="_RLxEq-YNEeWt6-AQEw3bRw" predecessorClause="_RLxEr-YNEeWt6-AQEw3bRw" test="_RLxEquYNEeWt6-AQEw3bRw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxDjuYNEeWt6-AQEw3bRw" name="Input(label)" outgoing="_RLxDgOYNEeWt6-AQEw3bRw" parameter="_RLxDd-YNEeWt6-AQEw3bRw">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxDj-YNEeWt6-AQEw3bRw" name="Input(value1)" outgoing="_RLxDgeYNEeWt6-AQEw3bRw" parameter="_RLxDeuYNEeWt6-AQEw3bRw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxDkOYNEeWt6-AQEw3bRw" name="Input(value2)" outgoing="_RLxDguYNEeWt6-AQEw3bRw" parameter="_RLxDfeYNEeWt6-AQEw3bRw"/>
      <node xmi:type="uml:JoinNode" xmi:id="_RLxDkeYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLxDiuYNEeWt6-AQEw3bRw _RLxDi-YNEeWt6-AQEw3bRw _RLxDjOYNEeWt6-AQEw3bRw" outgoing="_RLxDjeYNEeWt6-AQEw3bRw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RLxEseYNEeWt6-AQEw3bRw" name="AssertFalse" visibility="public" node="_RLxExeYNEeWt6-AQEw3bRw _RLxEyOYNEeWt6-AQEw3bRw _RLxExuYNEeWt6-AQEw3bRw _RLxEzuYNEeWt6-AQEw3bRw _RLxE1OYNEeWt6-AQEw3bRw _RLxEx-YNEeWt6-AQEw3bRw" group="_RLxEyOYNEeWt6-AQEw3bRw _RLxEzuYNEeWt6-AQEw3bRw _RLxE1OYNEeWt6-AQEw3bRw">
      <elementImport xmi:id="_RLxEsuYNEeWt6-AQEw3bRw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_RLxEs-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLxEtOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLxEteYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLxEtuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLxEt-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RLxEuOYNEeWt6-AQEw3bRw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEueYNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEuuYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RLxEu-YNEeWt6-AQEw3bRw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEvOYNEeWt6-AQEw3bRw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEveYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEvuYNEeWt6-AQEw3bRw" target="_RLxEyuYNEeWt6-AQEw3bRw" source="_RLxExeYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEv-YNEeWt6-AQEw3bRw" target="_RLxE0OYNEeWt6-AQEw3bRw" source="_RLxExuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEwOYNEeWt6-AQEw3bRw" target="_RLxE9OYNEeWt6-AQEw3bRw" source="_RLxEzeYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEweYNEeWt6-AQEw3bRw" target="_RLxFCeYNEeWt6-AQEw3bRw" source="_RLxE0-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEwuYNEeWt6-AQEw3bRw" target="_RLxEx-YNEeWt6-AQEw3bRw" source="_RLxEyOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxEw-YNEeWt6-AQEw3bRw" target="_RLxEx-YNEeWt6-AQEw3bRw" source="_RLxEzuYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxExOYNEeWt6-AQEw3bRw" target="_RLxE1OYNEeWt6-AQEw3bRw" source="_RLxEx-YNEeWt6-AQEw3bRw"/>
      <structuredNode xmi:id="_RLxEyOYNEeWt6-AQEw3bRw" name="Node(Input(label))" outgoing="_RLxEwuYNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEyeYNEeWt6-AQEw3bRw" target="_RLxEzeYNEeWt6-AQEw3bRw" source="_RLxEyuYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxEyuYNEeWt6-AQEw3bRw" name="Input(label)" incoming="_RLxEvuYNEeWt6-AQEw3bRw" outgoing="_RLxEyeYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxEy-YNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxEzOYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxEzeYNEeWt6-AQEw3bRw" name="Fork(label)" incoming="_RLxEyeYNEeWt6-AQEw3bRw" outgoing="_RLxEwOYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxEzuYNEeWt6-AQEw3bRw" name="Node(Input(condition))" outgoing="_RLxEw-YNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxEz-YNEeWt6-AQEw3bRw" target="_RLxE0-YNEeWt6-AQEw3bRw" source="_RLxE0OYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxE0OYNEeWt6-AQEw3bRw" name="Input(condition)" incoming="_RLxEv-YNEeWt6-AQEw3bRw" outgoing="_RLxEz-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE0eYNEeWt6-AQEw3bRw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE0uYNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxE0-YNEeWt6-AQEw3bRw" name="Fork(condition)" incoming="_RLxEz-YNEeWt6-AQEw3bRw" outgoing="_RLxEweYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxE1OYNEeWt6-AQEw3bRw" name="Body(AssertFalse)" incoming="_RLxExOYNEeWt6-AQEw3bRw">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxE1eYNEeWt6-AQEw3bRw" name="ExpressionStatement@706a18c8">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE1uYNEeWt6-AQEw3bRw" target="_RLxE2uYNEeWt6-AQEw3bRw" source="_RLxE9-YNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE1-YNEeWt6-AQEw3bRw" target="_RLxE3eYNEeWt6-AQEw3bRw" source="_RLxFEuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLxE2OYNEeWt6-AQEw3bRw" target="_RLxE2eYNEeWt6-AQEw3bRw" source="_RLxE4OYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxE2eYNEeWt6-AQEw3bRw" name="Call(AssertTrue)" incoming="_RLxE2OYNEeWt6-AQEw3bRw" behavior="_RLxC_-YNEeWt6-AQEw3bRw">
            <argument xmi:id="_RLxE2uYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(label)" incoming="_RLxE1uYNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE2-YNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE3OYNEeWt6-AQEw3bRw" value="1"/>
            </argument>
            <argument xmi:id="_RLxE3eYNEeWt6-AQEw3bRw" name="Call(AssertTrue).argument(condition)" incoming="_RLxE1-YNEeWt6-AQEw3bRw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE3uYNEeWt6-AQEw3bRw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE3-YNEeWt6-AQEw3bRw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxE4OYNEeWt6-AQEw3bRw" name="Tuple@1e964150" outgoing="_RLxE2OYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE4eYNEeWt6-AQEw3bRw" target="_RLxE8eYNEeWt6-AQEw3bRw" source="_RLxE7OYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE4uYNEeWt6-AQEw3bRw" target="_RLxFAOYNEeWt6-AQEw3bRw" source="_RLxFCeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE4-YNEeWt6-AQEw3bRw" target="_RLxFC-YNEeWt6-AQEw3bRw" source="_RLxFCeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE5OYNEeWt6-AQEw3bRw" target="_RLxFEeYNEeWt6-AQEw3bRw" source="_RLxFDuYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE5eYNEeWt6-AQEw3bRw" target="_RLxFEuYNEeWt6-AQEw3bRw" source="_RLxFA-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE5uYNEeWt6-AQEw3bRw" target="_RLxFE-YNEeWt6-AQEw3bRw" source="_RLxFEeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE5-YNEeWt6-AQEw3bRw" target="_RLxFE-YNEeWt6-AQEw3bRw" source="_RLxFEeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE6OYNEeWt6-AQEw3bRw" target="_RLxFEuYNEeWt6-AQEw3bRw" source="_RLxFE-YNEeWt6-AQEw3bRw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RLxE6eYNEeWt6-AQEw3bRw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxE6uYNEeWt6-AQEw3bRw" target="_RLxFBuYNEeWt6-AQEw3bRw" source="_RLxE--YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxE6-YNEeWt6-AQEw3bRw" name="Value(&quot;! &quot;)">
              <result xmi:id="_RLxE7OYNEeWt6-AQEw3bRw" name="Value(&quot;! &quot;).result" outgoing="_RLxE4eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE7eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE7uYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RLxE7-YNEeWt6-AQEw3bRw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxE8OYNEeWt6-AQEw3bRw" name="Call(Concat)">
              <argument xmi:id="_RLxE8eYNEeWt6-AQEw3bRw" name="Call(Concat).argument(x)" incoming="_RLxE4eYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE8uYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE8-YNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <argument xmi:id="_RLxE9OYNEeWt6-AQEw3bRw" name="Call(Concat).argument(y)" incoming="_RLxEwOYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE9eYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE9uYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxE9-YNEeWt6-AQEw3bRw" name="Call(Concat).result(result)" outgoing="_RLxE1uYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE-OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE-eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxE-uYNEeWt6-AQEw3bRw" name="Value(false)">
              <result xmi:id="_RLxE--YNEeWt6-AQEw3bRw" name="Value(false).result" outgoing="_RLxE6uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxE_OYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxE_eYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RLxE_uYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RLxE_-YNEeWt6-AQEw3bRw" name="Test(==)">
              <first xmi:id="_RLxFAOYNEeWt6-AQEw3bRw" name="Test(==).first" incoming="_RLxE4uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFAeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFAuYNEeWt6-AQEw3bRw" value="1"/>
              </first>
              <result xmi:id="_RLxFA-YNEeWt6-AQEw3bRw" name="Test(==).result" outgoing="_RLxE5eYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFBOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFBeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <second xmi:id="_RLxFBuYNEeWt6-AQEw3bRw" name="Test(==).second" incoming="_RLxE6uYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFB-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFCOYNEeWt6-AQEw3bRw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxFCeYNEeWt6-AQEw3bRw" name="Fork(Fork(condition))" incoming="_RLxEweYNEeWt6-AQEw3bRw" outgoing="_RLxE4uYNEeWt6-AQEw3bRw _RLxE4-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxFCuYNEeWt6-AQEw3bRw" name="Call(NotEmpty)">
              <argument xmi:id="_RLxFC-YNEeWt6-AQEw3bRw" name="Call(NotEmpty).argument(seq)" incoming="_RLxE4-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFDOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFDeYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <result xmi:id="_RLxFDuYNEeWt6-AQEw3bRw" name="Call(NotEmpty).result()" outgoing="_RLxE5OYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFD-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFEOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxFEeYNEeWt6-AQEw3bRw" name="Fork(Call(NotEmpty).result())" incoming="_RLxE5OYNEeWt6-AQEw3bRw" outgoing="_RLxE5uYNEeWt6-AQEw3bRw _RLxE5-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RLxFEuYNEeWt6-AQEw3bRw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_RLxE5eYNEeWt6-AQEw3bRw _RLxE6OYNEeWt6-AQEw3bRw" outgoing="_RLxE1-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RLxFE-YNEeWt6-AQEw3bRw" name="Decision(Call(NotEmpty).result())" incoming="_RLxE5uYNEeWt6-AQEw3bRw _RLxE5-YNEeWt6-AQEw3bRw" outgoing="_RLxE6OYNEeWt6-AQEw3bRw" decisionInputFlow="_RLxE5-YNEeWt6-AQEw3bRw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxExeYNEeWt6-AQEw3bRw" name="Input(label)" outgoing="_RLxEvuYNEeWt6-AQEw3bRw" parameter="_RLxEuOYNEeWt6-AQEw3bRw">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxExuYNEeWt6-AQEw3bRw" name="Input(condition)" outgoing="_RLxEv-YNEeWt6-AQEw3bRw" parameter="_RLxEu-YNEeWt6-AQEw3bRw">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_RLxEx-YNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLxEwuYNEeWt6-AQEw3bRw _RLxEw-YNEeWt6-AQEw3bRw" outgoing="_RLxExOYNEeWt6-AQEw3bRw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RLxFFOYNEeWt6-AQEw3bRw" name="Write" visibility="public" node="_RLxFIeYNEeWt6-AQEw3bRw _RLxFI-YNEeWt6-AQEw3bRw _RLxFKeYNEeWt6-AQEw3bRw _RLxFIuYNEeWt6-AQEw3bRw" group="_RLxFI-YNEeWt6-AQEw3bRw _RLxFKeYNEeWt6-AQEw3bRw">
      <packageImport xmi:id="_RLxFFeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RLxFFuYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RLxFF-YNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RLxFGOYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RLxFGeYNEeWt6-AQEw3bRw" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RLxFGuYNEeWt6-AQEw3bRw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFG-YNEeWt6-AQEw3bRw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFHOYNEeWt6-AQEw3bRw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFHeYNEeWt6-AQEw3bRw" target="_RLxFJeYNEeWt6-AQEw3bRw" source="_RLxFIeYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFHuYNEeWt6-AQEw3bRw" target="_RLxFMOYNEeWt6-AQEw3bRw" source="_RLxFKOYNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxFH-YNEeWt6-AQEw3bRw" target="_RLxFIuYNEeWt6-AQEw3bRw" source="_RLxFI-YNEeWt6-AQEw3bRw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_RLxFIOYNEeWt6-AQEw3bRw" target="_RLxFKeYNEeWt6-AQEw3bRw" source="_RLxFIuYNEeWt6-AQEw3bRw"/>
      <structuredNode xmi:id="_RLxFI-YNEeWt6-AQEw3bRw" name="Node(Input(value))" outgoing="_RLxFH-YNEeWt6-AQEw3bRw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFJOYNEeWt6-AQEw3bRw" target="_RLxFKOYNEeWt6-AQEw3bRw" source="_RLxFJeYNEeWt6-AQEw3bRw"/>
        <structuredNodeInput xmi:id="_RLxFJeYNEeWt6-AQEw3bRw" name="Input(value)" incoming="_RLxFHeYNEeWt6-AQEw3bRw" outgoing="_RLxFJOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFJuYNEeWt6-AQEw3bRw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFJ-YNEeWt6-AQEw3bRw" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_RLxFKOYNEeWt6-AQEw3bRw" name="Fork(value)" incoming="_RLxFJOYNEeWt6-AQEw3bRw" outgoing="_RLxFHuYNEeWt6-AQEw3bRw"/>
      </structuredNode>
      <structuredNode xmi:id="_RLxFKeYNEeWt6-AQEw3bRw" name="Body(Write)" incoming="_RLxFIOYNEeWt6-AQEw3bRw">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxFKuYNEeWt6-AQEw3bRw" name="ExpressionStatement@43b8542a">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFK-YNEeWt6-AQEw3bRw" target="_RLxFPeYNEeWt6-AQEw3bRw" source="_RLxFSuYNEeWt6-AQEw3bRw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RLxFLOYNEeWt6-AQEw3bRw" target="_RLxFLeYNEeWt6-AQEw3bRw" source="_RLxFPuYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_RLxFLeYNEeWt6-AQEw3bRw" name="Collect(Call(write))" incoming="_RLxFLOYNEeWt6-AQEw3bRw" mode="parallel" inputElement="_RLxFPeYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFLuYNEeWt6-AQEw3bRw" target="_RLxFNOYNEeWt6-AQEw3bRw" source="_RLxFMOYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFL-YNEeWt6-AQEw3bRw" target="_RLxFOuYNEeWt6-AQEw3bRw" source="_RLxFPeYNEeWt6-AQEw3bRw"/>
            <structuredNodeInput xmi:id="_RLxFMOYNEeWt6-AQEw3bRw" name="Collect(Call(write)).input(Fork(value))" incoming="_RLxFHuYNEeWt6-AQEw3bRw" outgoing="_RLxFLuYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFMeYNEeWt6-AQEw3bRw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFMuYNEeWt6-AQEw3bRw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RLxFM-YNEeWt6-AQEw3bRw" name="Call(write)">
              <argument xmi:id="_RLxFNOYNEeWt6-AQEw3bRw" name="Call(write).argument(value)" incoming="_RLxFLuYNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFNeYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFNuYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxFN-YNEeWt6-AQEw3bRw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFOOYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFOeYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_RLxFOuYNEeWt6-AQEw3bRw" name="Call(write).target" incoming="_RLxFL-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFO-YNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFPOYNEeWt6-AQEw3bRw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_RLxFPeYNEeWt6-AQEw3bRw" name="Collect(Call(write)).inputElement" incoming="_RLxFK-YNEeWt6-AQEw3bRw" outgoing="_RLxFL-YNEeWt6-AQEw3bRw" regionAsInput="_RLxFLeYNEeWt6-AQEw3bRw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxFPuYNEeWt6-AQEw3bRw" name="Feature(Call(At).result())" outgoing="_RLxFLOYNEeWt6-AQEw3bRw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFP-YNEeWt6-AQEw3bRw" target="_RLxFROYNEeWt6-AQEw3bRw" source="_RLxFT-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFQOYNEeWt6-AQEw3bRw" target="_RLxFV-YNEeWt6-AQEw3bRw" source="_RLxFU-YNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RLxFQeYNEeWt6-AQEw3bRw" target="_RLxFQ-YNEeWt6-AQEw3bRw" source="_RLxFTeYNEeWt6-AQEw3bRw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RLxFQuYNEeWt6-AQEw3bRw" target="_RLxFR-YNEeWt6-AQEw3bRw" source="_RLxFV-YNEeWt6-AQEw3bRw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RLxFQ-YNEeWt6-AQEw3bRw" name="Call(At)" incoming="_RLxFQeYNEeWt6-AQEw3bRw">
              <argument xmi:id="_RLxFROYNEeWt6-AQEw3bRw" name="Call(At).argument(seq)" incoming="_RLxFP-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFReYNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFRuYNEeWt6-AQEw3bRw" value="*"/>
              </argument>
              <argument xmi:id="_RLxFR-YNEeWt6-AQEw3bRw" name="Call(At).argument(index)" incoming="_RLxFQuYNEeWt6-AQEw3bRw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFSOYNEeWt6-AQEw3bRw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFSeYNEeWt6-AQEw3bRw" value="1"/>
              </argument>
              <result xmi:id="_RLxFSuYNEeWt6-AQEw3bRw" name="Call(At).result()" outgoing="_RLxFK-YNEeWt6-AQEw3bRw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFS-YNEeWt6-AQEw3bRw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFTOYNEeWt6-AQEw3bRw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RLxFTeYNEeWt6-AQEw3bRw" name="Tuple@4900acf3" outgoing="_RLxFQeYNEeWt6-AQEw3bRw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_RLxFTuYNEeWt6-AQEw3bRw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_RLxFT-YNEeWt6-AQEw3bRw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RLxFP-YNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFUOYNEeWt6-AQEw3bRw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFUeYNEeWt6-AQEw3bRw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RLxFUuYNEeWt6-AQEw3bRw" name="Value(1)">
                <result xmi:id="_RLxFU-YNEeWt6-AQEw3bRw" name="Value(1).result" outgoing="_RLxFQOYNEeWt6-AQEw3bRw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RLxFVOYNEeWt6-AQEw3bRw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RLxFVeYNEeWt6-AQEw3bRw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RLxFVuYNEeWt6-AQEw3bRw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RLxFV-YNEeWt6-AQEw3bRw" name="Fork(Call(At).argument(index))" incoming="_RLxFQOYNEeWt6-AQEw3bRw" outgoing="_RLxFQuYNEeWt6-AQEw3bRw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RLxFIeYNEeWt6-AQEw3bRw" name="Input(value)" outgoing="_RLxFHeYNEeWt6-AQEw3bRw" parameter="_RLxFGuYNEeWt6-AQEw3bRw"/>
      <node xmi:type="uml:JoinNode" xmi:id="_RLxFIuYNEeWt6-AQEw3bRw" name="Join(Input))" incoming="_RLxFH-YNEeWt6-AQEw3bRw" outgoing="_RLxFIOYNEeWt6-AQEw3bRw"/>
    </packagedElement>
    <profileApplication xmi:id="_RLxFWOYNEeWt6-AQEw3bRw">
      <eAnnotations xmi:id="_RLxFWeYNEeWt6-AQEw3bRw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_RLxFWuYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLvOaOYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxFW-YNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLvOc-YNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxFXOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLv4PuYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxFXeYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLxC-OYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxpsOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLwdhuYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxpseYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLvObOYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxpsuYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLv4N-YNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxps-YNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLwgGeYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxptOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLvO_OYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxpteYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLwdkeYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxptuYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLwfIuYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxpt-YNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLwgIeYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxpuOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLvO-OYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxpueYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLxC_OYNEeWt6-AQEw3bRw"/>
  <l2:Create xmi:id="_RLxpuuYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLweleYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxpu-YNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLweneYNEeWt6-AQEw3bRw"/>
  <l2:Destroy xmi:id="_RLxpvOYNEeWt6-AQEw3bRw" base_BehavioralFeature="_RLwfJuYNEeWt6-AQEw3bRw"/>
</xmi:XMI>

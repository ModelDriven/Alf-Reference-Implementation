<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_2qV1cHMaEeeoYuc64YE22w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_2qV1cXMaEeeoYuc64YE22w" name="Statements_Accept" visibility="public">
      <packageImport xmi:id="_2qV1cnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2qV1c3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2qV1dHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2qV1dXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2qV1dnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_2qV1d3MaEeeoYuc64YE22w" general="_2qXHDHMaEeeoYuc64YE22w"/>
      <ownedAttribute xmi:id="_2qV1eHMaEeeoYuc64YE22w" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1eXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1enMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV1e3MaEeeoYuc64YE22w" name="Statements_Accept$method$1" specification="_2qV2eXMaEeeoYuc64YE22w" node="_2qV1gHMaEeeoYuc64YE22w _2qV1gXMaEeeoYuc64YE22w" group="_2qV1gXMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2qV1fHMaEeeoYuc64YE22w" name="" type="_2qV1cXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1fXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1fnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1f3MaEeeoYuc64YE22w" target="_2qV1gHMaEeeoYuc64YE22w" source="_2qV1pXMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2qV1gXMaEeeoYuc64YE22w" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1gnMaEeeoYuc64YE22w" target="_2qV1pXMaEeeoYuc64YE22w" source="_2qV1onMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1g3MaEeeoYuc64YE22w" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1hHMaEeeoYuc64YE22w" name="ExpressionStatement@c473d0e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1hXMaEeeoYuc64YE22w" target="_2qV1mHMaEeeoYuc64YE22w" source="_2qV1inMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1hnMaEeeoYuc64YE22w" target="_2qV1l3MaEeeoYuc64YE22w" source="_2qV1iHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1h3MaEeeoYuc64YE22w" target="_2qV1nnMaEeeoYuc64YE22w" source="_2qV1j3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1iHMaEeeoYuc64YE22w" name="Tuple@32f31f7a" outgoing="_2qV1hnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV1iXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_2qV1inMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_2qV1hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1i3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1jHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2qV1jXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV1jnMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2qV1j3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV1h3MaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1kHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1kXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1knMaEeeoYuc64YE22w" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1k3MaEeeoYuc64YE22w" target="_2qV1lHMaEeeoYuc64YE22w" source="_2qV1m3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qV1lHMaEeeoYuc64YE22w" name="Output(Call(run).result())" incoming="_2qV1k3MaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1lXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1lnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2qV1l3MaEeeoYuc64YE22w" name="Call(run)" incoming="_2qV1hnMaEeeoYuc64YE22w" operation="_2qV2fXMaEeeoYuc64YE22w">
                  <argument xmi:id="_2qV1mHMaEeeoYuc64YE22w" name="Call(run).argument(tester)" incoming="_2qV1hXMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1mXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1mnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qV1m3MaEeeoYuc64YE22w" name="Call(run).result()" outgoing="_2qV1k3MaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1nHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1nXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_2qV1nnMaEeeoYuc64YE22w" name="Call(run).target" incoming="_2qV1h3MaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1n3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1oHMaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV1oXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2qV1onMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV1gnMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1o3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1pHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2qV1pXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qV1gnMaEeeoYuc64YE22w" outgoing="_2qV1f3MaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qV1gHMaEeeoYuc64YE22w" name="Return" incoming="_2qV1f3MaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" parameter="_2qV1fHMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV1pnMaEeeoYuc64YE22w" name="run$method$1" specification="_2qV2fXMaEeeoYuc64YE22w" node="_2qV1snMaEeeoYuc64YE22w _2qV1tXMaEeeoYuc64YE22w _2qV1s3MaEeeoYuc64YE22w _2qV1u3MaEeeoYuc64YE22w _2qV1tHMaEeeoYuc64YE22w" group="_2qV1tXMaEeeoYuc64YE22w _2qV1u3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2qV1p3MaEeeoYuc64YE22w" name="tester" type="_2qXqyXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1qHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1qXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2qV1qnMaEeeoYuc64YE22w" name="" type="_2qV1cXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1q3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1rHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1rXMaEeeoYuc64YE22w" target="_2qV1t3MaEeeoYuc64YE22w" source="_2qV1snMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1rnMaEeeoYuc64YE22w" target="_2qV1s3MaEeeoYuc64YE22w" source="_2qV1_HMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1r3MaEeeoYuc64YE22w" target="_2qV2BXMaEeeoYuc64YE22w" source="_2qV1unMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1sHMaEeeoYuc64YE22w" target="_2qV1tHMaEeeoYuc64YE22w" source="_2qV1tXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1sXMaEeeoYuc64YE22w" target="_2qV1u3MaEeeoYuc64YE22w" source="_2qV1tHMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2qV1tXMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_2qV1sHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1tnMaEeeoYuc64YE22w" target="_2qV1unMaEeeoYuc64YE22w" source="_2qV1t3MaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_2qV1t3MaEeeoYuc64YE22w" name="Input(tester)" incoming="_2qV1rXMaEeeoYuc64YE22w" outgoing="_2qV1tnMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1uHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1uXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_2qV1unMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_2qV1tnMaEeeoYuc64YE22w" outgoing="_2qV1r3MaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_2qV1u3MaEeeoYuc64YE22w" name="Body(run$method$1)" incoming="_2qV1sXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1vHMaEeeoYuc64YE22w" target="_2qV1_HMaEeeoYuc64YE22w" source="_2qV1-XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1vXMaEeeoYuc64YE22w" target="_2qV2DHMaEeeoYuc64YE22w" source="_2qV1_HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1vnMaEeeoYuc64YE22w" target="_2qV1yHMaEeeoYuc64YE22w" source="_2qV2C3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1v3MaEeeoYuc64YE22w" target="_2qV2C3MaEeeoYuc64YE22w" source="_2qV1_XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1wHMaEeeoYuc64YE22w" target="_2qV2EHMaEeeoYuc64YE22w" source="_2qV1_HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1wXMaEeeoYuc64YE22w" target="_2qV2F3MaEeeoYuc64YE22w" source="_2qV2E3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1wnMaEeeoYuc64YE22w" target="_2qV2I3MaEeeoYuc64YE22w" source="_2qV2GnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1w3MaEeeoYuc64YE22w" target="_2qV2KXMaEeeoYuc64YE22w" source="_2qV2HnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1xHMaEeeoYuc64YE22w" target="_2qV2LXMaEeeoYuc64YE22w" source="_2qV2LHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1xXMaEeeoYuc64YE22w" target="_2qV2LXMaEeeoYuc64YE22w" source="_2qV2JnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qV1xnMaEeeoYuc64YE22w" target="_2qV1_XMaEeeoYuc64YE22w" source="_2qV2LXMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV1x3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1yHMaEeeoYuc64YE22w" name="Body" incoming="_2qV1vnMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1yXMaEeeoYuc64YE22w" name="ExpressionStatement@64e58773">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV1ynMaEeeoYuc64YE22w" target="_2qV1zHMaEeeoYuc64YE22w" source="_2qV113MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qV1y3MaEeeoYuc64YE22w" name="SendSignal(Start)" signal="_2qXG-XMaEeeoYuc64YE22w">
                <target xmi:id="_2qV1zHMaEeeoYuc64YE22w" name="SendSignal(Start).target" incoming="_2qV1ynMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1zXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1znMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1z3MaEeeoYuc64YE22w" name="InstanceCreationExpression@5c2824c9">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV10HMaEeeoYuc64YE22w" target="_2qV18nMaEeeoYuc64YE22w" source="_2qV15XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV10XMaEeeoYuc64YE22w" target="_2qV14XMaEeeoYuc64YE22w" source="_2qV18nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV10nMaEeeoYuc64YE22w" target="_2qV123MaEeeoYuc64YE22w" source="_2qV16nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qV103MaEeeoYuc64YE22w" target="_2qV12nMaEeeoYuc64YE22w" source="_2qV16HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV11HMaEeeoYuc64YE22w" target="_2qV183MaEeeoYuc64YE22w" source="_2qV173MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV11XMaEeeoYuc64YE22w" target="_2qV19XMaEeeoYuc64YE22w" source="_2qV183MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV11nMaEeeoYuc64YE22w" target="_2qV113MaEeeoYuc64YE22w" source="_2qV183MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qV113MaEeeoYuc64YE22w" name="Output(Output(Fork(Create(TestRunner).result)))" incoming="_2qV11nMaEeeoYuc64YE22w" outgoing="_2qV1ynMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV12HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV12XMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2qV12nMaEeeoYuc64YE22w" name="Call(TestRunner)" incoming="_2qV103MaEeeoYuc64YE22w" operation="_2qXG7XMaEeeoYuc64YE22w">
                  <argument xmi:id="_2qV123MaEeeoYuc64YE22w" name="Call(TestRunner).argument(outer)" incoming="_2qV10nMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV13HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV13XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qV13nMaEeeoYuc64YE22w" name="Call(TestRunner).result()" type="_2qWhAXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV133MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV14HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_2qV14XMaEeeoYuc64YE22w" name="Call(TestRunner).target" incoming="_2qV10XMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV14nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV143MaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_2qV15HMaEeeoYuc64YE22w" name="Create(TestRunner)" classifier="_2qWhAXMaEeeoYuc64YE22w">
                  <result xmi:id="_2qV15XMaEeeoYuc64YE22w" name="Create(TestRunner).result" outgoing="_2qV10HMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV15nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV153MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV16HMaEeeoYuc64YE22w" name="Tuple@50932a1e" outgoing="_2qV103MaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV16XMaEeeoYuc64YE22w" name="ReadSelf">
                    <result xmi:id="_2qV16nMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV10nMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV163MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV17HMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV17XMaEeeoYuc64YE22w" name="Node(Call(TestRunner))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV17nMaEeeoYuc64YE22w" target="_2qV173MaEeeoYuc64YE22w" source="_2qV18nMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qV173MaEeeoYuc64YE22w" name="Output(Fork(Create(TestRunner).result))" incoming="_2qV17nMaEeeoYuc64YE22w" outgoing="_2qV11HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV18HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV18XMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ForkNode" xmi:id="_2qV18nMaEeeoYuc64YE22w" name="Fork(Create(TestRunner).result)" incoming="_2qV10HMaEeeoYuc64YE22w" outgoing="_2qV10XMaEeeoYuc64YE22w _2qV17nMaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qV183MaEeeoYuc64YE22w" name="Fork(Output(Fork(Create(TestRunner).result)))" incoming="_2qV11HMaEeeoYuc64YE22w" outgoing="_2qV11XMaEeeoYuc64YE22w _2qV11nMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_2qV19HMaEeeoYuc64YE22w" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_2qV19XMaEeeoYuc64YE22w" name="Start(TestRunner).object" incoming="_2qV11XMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV19nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV193MaEeeoYuc64YE22w" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV1-HMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2qV1-XMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV1vHMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV1-nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV1-3MaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2qV1_HMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qV1vHMaEeeoYuc64YE22w" outgoing="_2qV1rnMaEeeoYuc64YE22w _2qV1vXMaEeeoYuc64YE22w _2qV1wHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1_XMaEeeoYuc64YE22w" name="Super" incoming="_2qV1xnMaEeeoYuc64YE22w" outgoing="_2qV1v3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1_nMaEeeoYuc64YE22w" name="ExpressionStatement@192271a1">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV1_3MaEeeoYuc64YE22w" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2AHMaEeeoYuc64YE22w" target="_2qV2AXMaEeeoYuc64YE22w" source="_2qV2CHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qV2AXMaEeeoYuc64YE22w" name="Output(Call(Test$method$1).result())" incoming="_2qV2AHMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2AnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2A3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qV2BHMaEeeoYuc64YE22w" name="Call(Test$method$1)" behavior="_2qXHGHMaEeeoYuc64YE22w">
                  <argument xmi:id="_2qV2BXMaEeeoYuc64YE22w" name="Call(Test$method$1).argument(tester)" incoming="_2qV1r3MaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2BnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2B3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qV2CHMaEeeoYuc64YE22w" name="Call(Test$method$1).result()" outgoing="_2qV2AHMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2CXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2CnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2qV2C3MaEeeoYuc64YE22w" name="Call(Statements_Accept$initialization$1)" incoming="_2qV1v3MaEeeoYuc64YE22w" outgoing="_2qV1vnMaEeeoYuc64YE22w" operation="_2qV2eHMaEeeoYuc64YE22w">
            <target xmi:id="_2qV2DHMaEeeoYuc64YE22w" name="Call(Statements_Accept$initialization$1).target" incoming="_2qV1vXMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2DXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2DnMaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qV2D3MaEeeoYuc64YE22w" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_2qV1eHMaEeeoYuc64YE22w">
            <object xmi:id="_2qV2EHMaEeeoYuc64YE22w" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_2qV1wHMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2EXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2EnMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2qV2E3MaEeeoYuc64YE22w" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_2qV1wXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2FHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2FXMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qV2FnMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2qV2F3MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qV1wXMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2GHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2GXMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2qV2GnMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qV1wnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2G3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2HHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV2HXMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2qV2HnMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qV1w3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2H3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2IHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2qV2IXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2qV2InMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2qV2I3MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qV1wnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2JHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2JXMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2qV2JnMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qV1xXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2J3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2KHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2qV2KXMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qV1w3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2KnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2K3MaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2qV2LHMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qV1xHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2qV2LXMaEeeoYuc64YE22w" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_2qV1xHMaEeeoYuc64YE22w _2qV1xXMaEeeoYuc64YE22w" outgoing="_2qV1xnMaEeeoYuc64YE22w" decisionInputFlow="_2qV1xXMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qV1snMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_2qV1rXMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" parameter="_2qV1p3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qV1s3MaEeeoYuc64YE22w" name="Return" incoming="_2qV1rnMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" parameter="_2qV1qnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_2qV1tHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qV1sHMaEeeoYuc64YE22w" outgoing="_2qV1sXMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV2LnMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2qV2hHMaEeeoYuc64YE22w" node="_2qV2L3MaEeeoYuc64YE22w" group="_2qV2L3MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2qV2L3MaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV2MHMaEeeoYuc64YE22w" name="Statements_Accept$initialization$1" specification="_2qV2eHMaEeeoYuc64YE22w" node="_2qV2MXMaEeeoYuc64YE22w" group="_2qV2MXMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2qV2MXMaEeeoYuc64YE22w" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2MnMaEeeoYuc64YE22w" target="_2qV2QXMaEeeoYuc64YE22w" source="_2qV2PnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2M3MaEeeoYuc64YE22w" target="_2qV2RXMaEeeoYuc64YE22w" source="_2qV2QXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2NHMaEeeoYuc64YE22w" target="_2qV2UHMaEeeoYuc64YE22w" source="_2qV2QXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2NXMaEeeoYuc64YE22w" target="_2qV2WnMaEeeoYuc64YE22w" source="_2qV2QXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2NnMaEeeoYuc64YE22w" target="_2qV2YXMaEeeoYuc64YE22w" source="_2qV2XXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2N3MaEeeoYuc64YE22w" target="_2qV2bXMaEeeoYuc64YE22w" source="_2qV2ZHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2OHMaEeeoYuc64YE22w" target="_2qV2c3MaEeeoYuc64YE22w" source="_2qV2aHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2OXMaEeeoYuc64YE22w" target="_2qV2d3MaEeeoYuc64YE22w" source="_2qV2dnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2OnMaEeeoYuc64YE22w" target="_2qV2d3MaEeeoYuc64YE22w" source="_2qV2cHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2O3MaEeeoYuc64YE22w" target="_2qV2QnMaEeeoYuc64YE22w" source="_2qV2d3MaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV2PHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV2PXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2qV2PnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV2MnMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2P3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2QHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2qV2QXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qV2MnMaEeeoYuc64YE22w" outgoing="_2qV2M3MaEeeoYuc64YE22w _2qV2NHMaEeeoYuc64YE22w _2qV2NXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV2QnMaEeeoYuc64YE22w" name="Initialization" incoming="_2qV2O3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2Q3MaEeeoYuc64YE22w" target="_2qV2SHMaEeeoYuc64YE22w" source="_2qV2RHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2qV2RHMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" outgoing="_2qV2Q3MaEeeoYuc64YE22w" operation="_2qXqv3MaEeeoYuc64YE22w">
              <target xmi:id="_2qV2RXMaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_2qV2M3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2RnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2R3MaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV2SHMaEeeoYuc64YE22w" name="Set(initializationFlag)" incoming="_2qV2Q3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2SXMaEeeoYuc64YE22w" target="_2qV2VnMaEeeoYuc64YE22w" source="_2qV2S3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV2SnMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_2qV2S3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qV2SXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2THMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2TXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2qV2TnMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qV2T3MaEeeoYuc64YE22w" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_2qV1eHMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_2qV2UHMaEeeoYuc64YE22w" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_2qV2NHMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2UXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2UnMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qV2U3MaEeeoYuc64YE22w" name="Write(Statements_Accept$initializationFlag$1).result" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2VHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2VXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_2qV2VnMaEeeoYuc64YE22w" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_2qV2SXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2V3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2WHMaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qV2WXMaEeeoYuc64YE22w" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_2qV1eHMaEeeoYuc64YE22w">
            <object xmi:id="_2qV2WnMaEeeoYuc64YE22w" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_2qV2NXMaEeeoYuc64YE22w" type="_2qV1cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2W3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2XHMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2qV2XXMaEeeoYuc64YE22w" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_2qV2NnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2XnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2X3MaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qV2YHMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2qV2YXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qV2NnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2YnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2Y3MaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2qV2ZHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qV2N3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2ZXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2ZnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV2Z3MaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2qV2aHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qV2OHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2aXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2anMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2qV2a3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2qV2bHMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2qV2bXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qV2N3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2bnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2b3MaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2qV2cHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qV2OnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2cXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2cnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2qV2c3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qV2OHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2dHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2dXMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2qV2dnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qV2OXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2qV2d3MaEeeoYuc64YE22w" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_2qV2OXMaEeeoYuc64YE22w _2qV2OnMaEeeoYuc64YE22w" outgoing="_2qV2O3MaEeeoYuc64YE22w" decisionInputFlow="_2qV2OnMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2qV2eHMaEeeoYuc64YE22w" name="Statements_Accept$initialization$1" visibility="protected" method="_2qV2MHMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2qV2eXMaEeeoYuc64YE22w" name="Statements_Accept" visibility="public" method="_2qV1e3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2qV2enMaEeeoYuc64YE22w" name="" visibility="package" type="_2qV1cXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2e3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2fHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2qV2fXMaEeeoYuc64YE22w" name="run" visibility="public" method="_2qV1pnMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2qV2fnMaEeeoYuc64YE22w" name="tester" visibility="package" type="_2qXqyXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2f3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2gHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2qV2gXMaEeeoYuc64YE22w" name="" visibility="package" type="_2qV1cXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2gnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2g3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2qV2hHMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2qV2LnMaEeeoYuc64YE22w" redefinedOperation="_2qXqyHMaEeeoYuc64YE22w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2qV2hXMaEeeoYuc64YE22w" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2qV2hnMaEeeoYuc64YE22w" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2h3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2iHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV2iXMaEeeoYuc64YE22w" name="Super$method$1" specification="_2qV3CXMaEeeoYuc64YE22w" node="_2qV2jnMaEeeoYuc64YE22w _2qV2j3MaEeeoYuc64YE22w" group="_2qV2j3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qV2inMaEeeoYuc64YE22w" name="" type="_2qV2hXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2i3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2jHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2jXMaEeeoYuc64YE22w" target="_2qV2jnMaEeeoYuc64YE22w" source="_2qV2oHMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2qV2j3MaEeeoYuc64YE22w" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2kHMaEeeoYuc64YE22w" target="_2qV2oHMaEeeoYuc64YE22w" source="_2qV2nXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2kXMaEeeoYuc64YE22w" target="_2qV2onMaEeeoYuc64YE22w" source="_2qV2oHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2knMaEeeoYuc64YE22w" target="_2qV2m3MaEeeoYuc64YE22w" source="_2qV2oXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2k3MaEeeoYuc64YE22w" target="_2qV2pnMaEeeoYuc64YE22w" source="_2qV2oHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2lHMaEeeoYuc64YE22w" target="_2qV2rXMaEeeoYuc64YE22w" source="_2qV2qXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2lXMaEeeoYuc64YE22w" target="_2qV2uXMaEeeoYuc64YE22w" source="_2qV2sHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2lnMaEeeoYuc64YE22w" target="_2qV2v3MaEeeoYuc64YE22w" source="_2qV2tHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2l3MaEeeoYuc64YE22w" target="_2qV2w3MaEeeoYuc64YE22w" source="_2qV2wnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2mHMaEeeoYuc64YE22w" target="_2qV2w3MaEeeoYuc64YE22w" source="_2qV2vHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2mXMaEeeoYuc64YE22w" target="_2qV2oXMaEeeoYuc64YE22w" source="_2qV2w3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV2mnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV2m3MaEeeoYuc64YE22w" name="Body" incoming="_2qV2knMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV2nHMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qV2nXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV2kHMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2nnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2n3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qV2oHMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qV2kHMaEeeoYuc64YE22w" outgoing="_2qV2jXMaEeeoYuc64YE22w _2qV2kXMaEeeoYuc64YE22w _2qV2k3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2qV2oXMaEeeoYuc64YE22w" name="Call(Super$initialization$1)" incoming="_2qV2mXMaEeeoYuc64YE22w" outgoing="_2qV2knMaEeeoYuc64YE22w" operation="_2qV3CHMaEeeoYuc64YE22w">
              <target xmi:id="_2qV2onMaEeeoYuc64YE22w" name="Call(Super$initialization$1).target" incoming="_2qV2kXMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2o3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2pHMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qV2pXMaEeeoYuc64YE22w" name="Read(Super$initializationFlag$1)" structuralFeature="_2qV2hnMaEeeoYuc64YE22w">
              <object xmi:id="_2qV2pnMaEeeoYuc64YE22w" name="Read(Super$initializationFlag$1).object" incoming="_2qV2k3MaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2p3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2qHMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qV2qXMaEeeoYuc64YE22w" name="Read(Super$initializationFlag$1).result" outgoing="_2qV2lHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2qnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2q3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qV2rHMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qV2rXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qV2lHMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2rnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2r3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qV2sHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qV2lXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2sXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2snMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV2s3MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qV2tHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qV2lnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2tXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2tnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qV2t3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qV2uHMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qV2uXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qV2lXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2unMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2u3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qV2vHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qV2mHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2vXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2vnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qV2v3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qV2lnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2wHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2wXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qV2wnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qV2l3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qV2w3MaEeeoYuc64YE22w" name="Decision(Test(Super$initializationFlag$1))" incoming="_2qV2l3MaEeeoYuc64YE22w _2qV2mHMaEeeoYuc64YE22w" outgoing="_2qV2mXMaEeeoYuc64YE22w" decisionInputFlow="_2qV2mHMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qV2jnMaEeeoYuc64YE22w" name="Return" incoming="_2qV2jXMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" parameter="_2qV2inMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV2xHMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2qV3DXMaEeeoYuc64YE22w" node="_2qV2xXMaEeeoYuc64YE22w" group="_2qV2xXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qV2xXMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV2xnMaEeeoYuc64YE22w" name="Super$initialization$1" specification="_2qV3CHMaEeeoYuc64YE22w" node="_2qV2x3MaEeeoYuc64YE22w" group="_2qV2x3MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qV2x3MaEeeoYuc64YE22w" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2yHMaEeeoYuc64YE22w" target="_2qV21nMaEeeoYuc64YE22w" source="_2qV203MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2yXMaEeeoYuc64YE22w" target="_2qV24HMaEeeoYuc64YE22w" source="_2qV21nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2ynMaEeeoYuc64YE22w" target="_2qV26nMaEeeoYuc64YE22w" source="_2qV21nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2y3MaEeeoYuc64YE22w" target="_2qV28XMaEeeoYuc64YE22w" source="_2qV27XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2zHMaEeeoYuc64YE22w" target="_2qV2_XMaEeeoYuc64YE22w" source="_2qV29HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2zXMaEeeoYuc64YE22w" target="_2qV3A3MaEeeoYuc64YE22w" source="_2qV2-HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV2znMaEeeoYuc64YE22w" target="_2qV3B3MaEeeoYuc64YE22w" source="_2qV3BnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV2z3MaEeeoYuc64YE22w" target="_2qV3B3MaEeeoYuc64YE22w" source="_2qV3AHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV20HMaEeeoYuc64YE22w" target="_2qV213MaEeeoYuc64YE22w" source="_2qV3B3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV20XMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV20nMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qV203MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV2yHMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV21HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV21XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qV21nMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qV2yHMaEeeoYuc64YE22w" outgoing="_2qV2yXMaEeeoYuc64YE22w _2qV2ynMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV213MaEeeoYuc64YE22w" name="Initialization" incoming="_2qV20HMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV22HMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV22XMaEeeoYuc64YE22w" target="_2qV25nMaEeeoYuc64YE22w" source="_2qV223MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV22nMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_2qV223MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qV22XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV23HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV23XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2qV23nMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qV233MaEeeoYuc64YE22w" name="Write(Super$initializationFlag$1)" structuralFeature="_2qV2hnMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qV24HMaEeeoYuc64YE22w" name="Write(Super$initializationFlag$1).object" incoming="_2qV2yXMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV24XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV24nMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qV243MaEeeoYuc64YE22w" name="Write(Super$initializationFlag$1).result" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV25HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV25XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qV25nMaEeeoYuc64YE22w" name="Write(Super$initializationFlag$1).value" incoming="_2qV22XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV253MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV26HMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qV26XMaEeeoYuc64YE22w" name="Read(Super$initializationFlag$1)" structuralFeature="_2qV2hnMaEeeoYuc64YE22w">
              <object xmi:id="_2qV26nMaEeeoYuc64YE22w" name="Read(Super$initializationFlag$1).object" incoming="_2qV2ynMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV263MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV27HMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qV27XMaEeeoYuc64YE22w" name="Read(Super$initializationFlag$1).result" outgoing="_2qV2y3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV27nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV273MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qV28HMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qV28XMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qV2y3MaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV28nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV283MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qV29HMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qV2zHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV29XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV29nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV293MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qV2-HMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qV2zXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2-XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2-nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qV2-3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qV2_HMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qV2_XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qV2zHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV2_nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV2_3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qV3AHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qV2z3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3AXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3AnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qV3A3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qV2zXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3BHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3BXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qV3BnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qV2znMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qV3B3MaEeeoYuc64YE22w" name="Decision(Test(Super$initializationFlag$1))" incoming="_2qV2znMaEeeoYuc64YE22w _2qV2z3MaEeeoYuc64YE22w" outgoing="_2qV20HMaEeeoYuc64YE22w" decisionInputFlow="_2qV2z3MaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2qV3CHMaEeeoYuc64YE22w" name="Super$initialization$1" visibility="protected" method="_2qV2xnMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_2qV3CXMaEeeoYuc64YE22w" name="Super" visibility="public" method="_2qV2iXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qV3CnMaEeeoYuc64YE22w" name="" visibility="package" type="_2qV2hXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3C3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3DHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2qV3DXMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2qV2xHMaEeeoYuc64YE22w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2qV3DnMaEeeoYuc64YE22w" name="SignalNewArrival" visibility="public">
          <ownedAttribute xmi:id="_2qV3D3MaEeeoYuc64YE22w" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3EHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3EXMaEeeoYuc64YE22w" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2qV3EnMaEeeoYuc64YE22w" name="SignalTermination" visibility="public"/>
        <ownedReception xmi:id="_2qV3E3MaEeeoYuc64YE22w" name="SignalTermination" signal="_2qV3EnMaEeeoYuc64YE22w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2qV3FHMaEeeoYuc64YE22w" name="MyTest" visibility="private" classifierBehavior="_2qV3NHMaEeeoYuc64YE22w" isActive="true">
        <generalization xmi:id="_2qV3FXMaEeeoYuc64YE22w" general="_2qV2hXMaEeeoYuc64YE22w"/>
        <ownedAttribute xmi:id="_2qV3FnMaEeeoYuc64YE22w" name="MyTest$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3F3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3GHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3GXMaEeeoYuc64YE22w" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3GnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3G3MaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3HHMaEeeoYuc64YE22w" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3HXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3HnMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3H3MaEeeoYuc64YE22w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3IHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3IXMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3InMaEeeoYuc64YE22w" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3I3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3JHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3JXMaEeeoYuc64YE22w" name="arrival" visibility="public" type="_2qV3DnMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3JnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3J3MaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3KHMaEeeoYuc64YE22w" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3KXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3KnMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3K3MaEeeoYuc64YE22w" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3LHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3LXMaEeeoYuc64YE22w" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3LnMaEeeoYuc64YE22w" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3L3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3MHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qV3MXMaEeeoYuc64YE22w" name="tester" visibility="public" type="_2qWhAXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3MnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3M3MaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qV3NHMaEeeoYuc64YE22w" name="MyTest$classifierBehavior$1" visibility="private" isActive="true" node="_2qV3NXMaEeeoYuc64YE22w" group="_2qV3NXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qV3NXMaEeeoYuc64YE22w" name="Body(MyTest$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3NnMaEeeoYuc64YE22w" target="_2qV3gXMaEeeoYuc64YE22w" source="_2qV3aHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3N3MaEeeoYuc64YE22w" target="_2qV3cHMaEeeoYuc64YE22w" source="_2qV3ZXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3OHMaEeeoYuc64YE22w" target="_2qV3knMaEeeoYuc64YE22w" source="_2qV3cHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3OXMaEeeoYuc64YE22w" target="_2qWchXMaEeeoYuc64YE22w" source="_2qWcuHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3OnMaEeeoYuc64YE22w" target="_2qWcl3MaEeeoYuc64YE22w" source="_2qWcuHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3O3MaEeeoYuc64YE22w" target="_2qWciHMaEeeoYuc64YE22w" source="_2qV3aHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3PHMaEeeoYuc64YE22w" target="_2qWckHMaEeeoYuc64YE22w" source="_2qV3lHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3PXMaEeeoYuc64YE22w" target="_2qWcsXMaEeeoYuc64YE22w" source="_2qWcuHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3PnMaEeeoYuc64YE22w" target="_2qWcqnMaEeeoYuc64YE22w" source="_2qV3aHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3P3MaEeeoYuc64YE22w" target="_2qV3m3MaEeeoYuc64YE22w" source="_2qV3knMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3QHMaEeeoYuc64YE22w" target="_2qWc03MaEeeoYuc64YE22w" source="_2qWcunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3QXMaEeeoYuc64YE22w" target="_2qWcwnMaEeeoYuc64YE22w" source="_2qV3m3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3QnMaEeeoYuc64YE22w" target="_2qWc5HMaEeeoYuc64YE22w" source="_2qWcwnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3Q3MaEeeoYuc64YE22w" target="_2qWc6XMaEeeoYuc64YE22w" source="_2qWc5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3RHMaEeeoYuc64YE22w" target="_2qWdBHMaEeeoYuc64YE22w" source="_2qWc7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3RXMaEeeoYuc64YE22w" target="_2qWc83MaEeeoYuc64YE22w" source="_2qWc6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3RnMaEeeoYuc64YE22w" target="_2qWd7HMaEeeoYuc64YE22w" source="_2qWcuXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3R3MaEeeoYuc64YE22w" target="_2qWd73MaEeeoYuc64YE22w" source="_2qWcunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3SHMaEeeoYuc64YE22w" target="_2qWd8nMaEeeoYuc64YE22w" source="_2qWc7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3SXMaEeeoYuc64YE22w" target="_2qWdFXMaEeeoYuc64YE22w" source="_2qWc83MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3SnMaEeeoYuc64YE22w" target="_2qWe_3MaEeeoYuc64YE22w" source="_2qWcuXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3S3MaEeeoYuc64YE22w" target="_2qWfAnMaEeeoYuc64YE22w" source="_2qWcunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3THMaEeeoYuc64YE22w" target="_2qWfHXMaEeeoYuc64YE22w" source="_2qWfFHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3TXMaEeeoYuc64YE22w" target="_2qWfCHMaEeeoYuc64YE22w" source="_2qWc7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3TnMaEeeoYuc64YE22w" target="_2qWfC3MaEeeoYuc64YE22w" source="_2qWeFnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3T3MaEeeoYuc64YE22w" target="_2qWeVnMaEeeoYuc64YE22w" source="_2qWeeXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3UHMaEeeoYuc64YE22w" target="_2qWeRXMaEeeoYuc64YE22w" source="_2qWdFXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3UXMaEeeoYuc64YE22w" target="_2qWf5nMaEeeoYuc64YE22w" source="_2qWf13MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3UnMaEeeoYuc64YE22w" target="_2qWf53MaEeeoYuc64YE22w" source="_2qWf2nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3U3MaEeeoYuc64YE22w" target="_2qWf6HMaEeeoYuc64YE22w" source="_2qWf3XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3VHMaEeeoYuc64YE22w" target="_2qWf6XMaEeeoYuc64YE22w" source="_2qWf4HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3VXMaEeeoYuc64YE22w" target="_2qWf6nMaEeeoYuc64YE22w" source="_2qWf43MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3VnMaEeeoYuc64YE22w" target="_2qWfVXMaEeeoYuc64YE22w" source="_2qWcuXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3V3MaEeeoYuc64YE22w" target="_2qWfXXMaEeeoYuc64YE22w" source="_2qWcunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3WHMaEeeoYuc64YE22w" target="_2qWfZXMaEeeoYuc64YE22w" source="_2qWfHXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3WXMaEeeoYuc64YE22w" target="_2qWfbXMaEeeoYuc64YE22w" source="_2qWc7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3WnMaEeeoYuc64YE22w" target="_2qWfdXMaEeeoYuc64YE22w" source="_2qWeFnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3W3MaEeeoYuc64YE22w" target="_2qWfr3MaEeeoYuc64YE22w" source="_2qWcuXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3XHMaEeeoYuc64YE22w" target="_2qWft3MaEeeoYuc64YE22w" source="_2qWcunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3XXMaEeeoYuc64YE22w" target="_2qWfv3MaEeeoYuc64YE22w" source="_2qWfHXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3XnMaEeeoYuc64YE22w" target="_2qWfx3MaEeeoYuc64YE22w" source="_2qWc7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3X3MaEeeoYuc64YE22w" target="_2qWfz3MaEeeoYuc64YE22w" source="_2qWeFnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3YHMaEeeoYuc64YE22w" target="_2qWfHnMaEeeoYuc64YE22w" source="_2qWeRXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3YXMaEeeoYuc64YE22w" target="_2qWf63MaEeeoYuc64YE22w" source="_2qWfHnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3YnMaEeeoYuc64YE22w" target="_2qWgBnMaEeeoYuc64YE22w" source="_2qWf7nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3Y3MaEeeoYuc64YE22w" target="_2qWf9XMaEeeoYuc64YE22w" source="_2qWf63MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3ZHMaEeeoYuc64YE22w" target="_2qWgF3MaEeeoYuc64YE22w" source="_2qWf9XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3ZXMaEeeoYuc64YE22w" name="AcceptStatement@520f4fb" outgoing="_2qV3N3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3ZnMaEeeoYuc64YE22w" target="_2qV3aXMaEeeoYuc64YE22w" source="_2qV3b3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3Z3MaEeeoYuc64YE22w" target="_2qV3aHMaEeeoYuc64YE22w" source="_2qV3anMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qV3aHMaEeeoYuc64YE22w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_2qV3Z3MaEeeoYuc64YE22w" outgoing="_2qV3NnMaEeeoYuc64YE22w _2qV3O3MaEeeoYuc64YE22w _2qV3PnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qV3aXMaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_2qV3ZnMaEeeoYuc64YE22w">
                <result xmi:id="_2qV3anMaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_2qV3Z3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3a3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3bHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <trigger xmi:id="_2qV3bXMaEeeoYuc64YE22w" event="_2qXG_XMaEeeoYuc64YE22w"/>
                <trigger xmi:id="_2qV3bnMaEeeoYuc64YE22w" event="_2qXG_nMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qV3b3MaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_2qV3ZnMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3cHMaEeeoYuc64YE22w" name="ExpressionStatement@37f59038" incoming="_2qV3N3MaEeeoYuc64YE22w" outgoing="_2qV3OHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3cXMaEeeoYuc64YE22w" target="_2qV3e3MaEeeoYuc64YE22w" source="_2qV3d3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3cnMaEeeoYuc64YE22w" target="_2qV3hHMaEeeoYuc64YE22w" source="_2qV3gXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3c3MaEeeoYuc64YE22w" target="_2qV3iHMaEeeoYuc64YE22w" source="_2qV3fnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3dHMaEeeoYuc64YE22w" target="_2qV3dXMaEeeoYuc64YE22w" source="_2qV3kXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3dXMaEeeoYuc64YE22w" name="Expression(LeftHandSide@2ee6fe5b)" incoming="_2qV3dHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV3dnMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_2qV3d3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV3cXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3eHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3eXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qV3enMaEeeoYuc64YE22w" name="Clear(sig)" structuralFeature="_2qV3GXMaEeeoYuc64YE22w">
                <object xmi:id="_2qV3e3MaEeeoYuc64YE22w" name="Clear(sig).object" incoming="_2qV3cXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3fHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3fXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qV3fnMaEeeoYuc64YE22w" name="Clear(sig).result" outgoing="_2qV3c3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3f3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3gHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qV3gXMaEeeoYuc64YE22w" name="Fork(LeftHandSide@2ee6fe5b)" incoming="_2qV3NnMaEeeoYuc64YE22w" outgoing="_2qV3cnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3gnMaEeeoYuc64YE22w" name="WriteAll(MyTest::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3g3MaEeeoYuc64YE22w" target="_2qV3jnMaEeeoYuc64YE22w" source="_2qV3hHMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qV3hHMaEeeoYuc64YE22w" name="WriteAll(MyTest::sig).input(MyTest::sig)" incoming="_2qV3cnMaEeeoYuc64YE22w" outgoing="_2qV3g3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3hXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3hnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qV3h3MaEeeoYuc64YE22w" name="Write(sig)" structuralFeature="_2qV3GXMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qV3iHMaEeeoYuc64YE22w" name="Write(sig).object" incoming="_2qV3c3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3iXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3inMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qV3i3MaEeeoYuc64YE22w" name="Write(sig).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3jHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3jXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qV3jnMaEeeoYuc64YE22w" name="Write(sig).value" incoming="_2qV3g3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3j3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3kHMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3kXMaEeeoYuc64YE22w" name="RightHandSide@454e125" outgoing="_2qV3dHMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3knMaEeeoYuc64YE22w" name="ExpressionStatement@678e686a" incoming="_2qV3OHMaEeeoYuc64YE22w" outgoing="_2qV3P3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3k3MaEeeoYuc64YE22w" target="_2qV3lHMaEeeoYuc64YE22w" source="_2qV3l3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qV3lHMaEeeoYuc64YE22w" name="Fork(terminate)@37bdfc2f" incoming="_2qV3k3MaEeeoYuc64YE22w" outgoing="_2qV3PHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3lXMaEeeoYuc64YE22w" name="RightHandSide@5224f786">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qV3lnMaEeeoYuc64YE22w" name="Value(false)">
                  <result xmi:id="_2qV3l3MaEeeoYuc64YE22w" name="Value(false).result" outgoing="_2qV3k3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3mHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3mXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2qV3mnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3m3MaEeeoYuc64YE22w" name="AcceptStatement@1d54b16e" incoming="_2qV3P3MaEeeoYuc64YE22w" outgoing="_2qV3QXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3nHMaEeeoYuc64YE22w" target="_2qWcnXMaEeeoYuc64YE22w" source="_2qWcmnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3nXMaEeeoYuc64YE22w" target="_2qV3s3MaEeeoYuc64YE22w" source="_2qWcnXMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV3nnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3n3MaEeeoYuc64YE22w" target="_2qV3rXMaEeeoYuc64YE22w" source="_2qWci3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3oHMaEeeoYuc64YE22w" target="_2qV3sHMaEeeoYuc64YE22w" source="_2qWck3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3oXMaEeeoYuc64YE22w" target="_2qWct3MaEeeoYuc64YE22w" source="_2qWctHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3onMaEeeoYuc64YE22w" target="_2qWcnnMaEeeoYuc64YE22w" source="_2qWct3MaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV3o3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3pHMaEeeoYuc64YE22w" target="_2qWcnXMaEeeoYuc64YE22w" source="_2qWct3MaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qV3pXMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3pnMaEeeoYuc64YE22w" target="_2qV3rXMaEeeoYuc64YE22w" source="_2qWcrXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3p3MaEeeoYuc64YE22w" target="_2qV3sHMaEeeoYuc64YE22w" source="_2qWcoXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3qHMaEeeoYuc64YE22w" target="_2qWcuXMaEeeoYuc64YE22w" source="_2qV3rXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3qXMaEeeoYuc64YE22w" target="_2qWcunMaEeeoYuc64YE22w" source="_2qV3sHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3qnMaEeeoYuc64YE22w" target="_2qWcu3MaEeeoYuc64YE22w" source="_2qWcwXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3q3MaEeeoYuc64YE22w" target="_2qWct3MaEeeoYuc64YE22w" source="_2qWcu3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3rHMaEeeoYuc64YE22w" target="_2qWcuHMaEeeoYuc64YE22w" source="_2qWcvHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2qV3rXMaEeeoYuc64YE22w" name="AcceptStatement@1d54b16e.output(sig)" incoming="_2qV3n3MaEeeoYuc64YE22w _2qV3pnMaEeeoYuc64YE22w" outgoing="_2qV3qHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3rnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3r3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_2qV3sHMaEeeoYuc64YE22w" name="AcceptStatement@1d54b16e.output(terminate)" incoming="_2qV3oHMaEeeoYuc64YE22w _2qV3p3MaEeeoYuc64YE22w" outgoing="_2qV3qXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3sXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3snMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3s3MaEeeoYuc64YE22w" name="AcceptBlock(SignalNewArrival)" incoming="_2qV3nXMaEeeoYuc64YE22w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3tHMaEeeoYuc64YE22w" name="ExpressionStatement@741a8547">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3tXMaEeeoYuc64YE22w" target="_2qV3wHMaEeeoYuc64YE22w" source="_2qV3vHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3tnMaEeeoYuc64YE22w" target="_2qV3yXMaEeeoYuc64YE22w" source="_2qV3xnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3t3MaEeeoYuc64YE22w" target="_2qV3zXMaEeeoYuc64YE22w" source="_2qV3w3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3uHMaEeeoYuc64YE22w" target="_2qV3xnMaEeeoYuc64YE22w" source="_2qWcgnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2qV3uXMaEeeoYuc64YE22w" target="_2qV3unMaEeeoYuc64YE22w" source="_2qV31nMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3unMaEeeoYuc64YE22w" name="Expression(LeftHandSide@3c19a347)" incoming="_2qV3uXMaEeeoYuc64YE22w">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_2qV3u3MaEeeoYuc64YE22w" name="ReadSelf">
                      <result xmi:id="_2qV3vHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qV3tXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3vXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3vnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qV3v3MaEeeoYuc64YE22w" name="Clear(name)" structuralFeature="_2qV3H3MaEeeoYuc64YE22w">
                    <object xmi:id="_2qV3wHMaEeeoYuc64YE22w" name="Clear(name).object" incoming="_2qV3tXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3wXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3wnMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qV3w3MaEeeoYuc64YE22w" name="Clear(name).result" outgoing="_2qV3t3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3xHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3xXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2qV3xnMaEeeoYuc64YE22w" name="Fork(LeftHandSide@3c19a347)" incoming="_2qV3uHMaEeeoYuc64YE22w" outgoing="_2qV3tnMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV3x3MaEeeoYuc64YE22w" name="WriteAll(MyTest::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV3yHMaEeeoYuc64YE22w" target="_2qV303MaEeeoYuc64YE22w" source="_2qV3yXMaEeeoYuc64YE22w"/>
                    <structuredNodeInput xmi:id="_2qV3yXMaEeeoYuc64YE22w" name="WriteAll(MyTest::name).input(MyTest::name)" incoming="_2qV3tnMaEeeoYuc64YE22w" outgoing="_2qV3yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3ynMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3y3MaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qV3zHMaEeeoYuc64YE22w" name="Write(name)" structuralFeature="_2qV3H3MaEeeoYuc64YE22w" isReplaceAll="true">
                      <object xmi:id="_2qV3zXMaEeeoYuc64YE22w" name="Write(name).object" incoming="_2qV3t3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV3znMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV3z3MaEeeoYuc64YE22w" value="1"/>
                      </object>
                      <result xmi:id="_2qV30HMaEeeoYuc64YE22w" name="Write(name).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV30XMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV30nMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:id="_2qV303MaEeeoYuc64YE22w" name="Write(name).value" incoming="_2qV3yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qV31HMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qV31XMaEeeoYuc64YE22w" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qV31nMaEeeoYuc64YE22w" name="RightHandSide@7663b36" outgoing="_2qV3uXMaEeeoYuc64YE22w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qV313MaEeeoYuc64YE22w" target="_2qV32XMaEeeoYuc64YE22w" source="_2qWchXMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qV32HMaEeeoYuc64YE22w" name="Read(name)" structuralFeature="_2qV3D3MaEeeoYuc64YE22w">
                      <object xmi:id="_2qV32XMaEeeoYuc64YE22w" name="Read(name).object" incoming="_2qV313MaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcgHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcgXMaEeeoYuc64YE22w" value="1"/>
                      </object>
                      <result xmi:id="_2qWcgnMaEeeoYuc64YE22w" name="Read(name).result" outgoing="_2qV3uHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcg3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWchHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWchXMaEeeoYuc64YE22w" name="Fork()" incoming="_2qV3OXMaEeeoYuc64YE22w" outgoing="_2qV313MaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWchnMaEeeoYuc64YE22w" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWch3MaEeeoYuc64YE22w" target="_2qWci3MaEeeoYuc64YE22w" source="_2qWciHMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWciHMaEeeoYuc64YE22w" name="Passthru(sig).input" incoming="_2qV3O3MaEeeoYuc64YE22w" outgoing="_2qWch3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWciXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcinMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWci3MaEeeoYuc64YE22w" name="Passthru(sig).output" incoming="_2qWch3MaEeeoYuc64YE22w" outgoing="_2qV3n3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcjHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcjXMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWcjnMaEeeoYuc64YE22w" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWcj3MaEeeoYuc64YE22w" target="_2qWck3MaEeeoYuc64YE22w" source="_2qWckHMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWckHMaEeeoYuc64YE22w" name="Passthru(terminate).input" incoming="_2qV3PHMaEeeoYuc64YE22w" outgoing="_2qWcj3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWckXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcknMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWck3MaEeeoYuc64YE22w" name="Passthru(terminate).output" incoming="_2qWcj3MaEeeoYuc64YE22w" outgoing="_2qV3oHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWclHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWclXMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qWclnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_2qV3DnMaEeeoYuc64YE22w">
                <object xmi:id="_2qWcl3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_2qV3OnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcmHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcmXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qWcmnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_2qV3nHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcm3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcnHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_2qWcnXMaEeeoYuc64YE22w" name="Decision(Test(SignalNewArrival))" incoming="_2qV3nHMaEeeoYuc64YE22w _2qV3pHMaEeeoYuc64YE22w" outgoing="_2qV3nXMaEeeoYuc64YE22w" decisionInputFlow="_2qV3nHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWcnnMaEeeoYuc64YE22w" name="AcceptBlock(SignalTermination)" incoming="_2qV3onMaEeeoYuc64YE22w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWcn3MaEeeoYuc64YE22w" name="ExpressionStatement@5c7ad010">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWcoHMaEeeoYuc64YE22w" target="_2qWcoXMaEeeoYuc64YE22w" source="_2qWcpHMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_2qWcoXMaEeeoYuc64YE22w" name="Fork(terminate)@2ba8b46f" incoming="_2qWcoHMaEeeoYuc64YE22w" outgoing="_2qV3p3MaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWconMaEeeoYuc64YE22w" name="RightHandSide@584d2a7e">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWco3MaEeeoYuc64YE22w" name="Value(true)">
                      <result xmi:id="_2qWcpHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qWcoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcpXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcpnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_2qWcp3MaEeeoYuc64YE22w" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWcqHMaEeeoYuc64YE22w" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWcqXMaEeeoYuc64YE22w" target="_2qWcrXMaEeeoYuc64YE22w" source="_2qWcqnMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWcqnMaEeeoYuc64YE22w" name="Passthru(sig).input" incoming="_2qV3PnMaEeeoYuc64YE22w" outgoing="_2qWcqXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcq3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcrHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWcrXMaEeeoYuc64YE22w" name="Passthru(sig).output" incoming="_2qWcqXMaEeeoYuc64YE22w" outgoing="_2qV3pnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcrnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcr3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qWcsHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2qV3EnMaEeeoYuc64YE22w">
                <object xmi:id="_2qWcsXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2qV3PXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcsnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcs3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qWctHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2qV3oXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWctXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWctnMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_2qWct3MaEeeoYuc64YE22w" name="Decision(Test(SignalTermination))" incoming="_2qV3oXMaEeeoYuc64YE22w _2qV3q3MaEeeoYuc64YE22w" outgoing="_2qV3onMaEeeoYuc64YE22w _2qV3pHMaEeeoYuc64YE22w" decisionInputFlow="_2qV3oXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWcuHMaEeeoYuc64YE22w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_2qV3rHMaEeeoYuc64YE22w" outgoing="_2qV3OXMaEeeoYuc64YE22w _2qV3OnMaEeeoYuc64YE22w _2qV3PXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWcuXMaEeeoYuc64YE22w" name="Fork(sig)" incoming="_2qV3qHMaEeeoYuc64YE22w" outgoing="_2qV3RnMaEeeoYuc64YE22w _2qV3SnMaEeeoYuc64YE22w _2qV3VnMaEeeoYuc64YE22w _2qV3W3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWcunMaEeeoYuc64YE22w" name="Fork(terminate)" incoming="_2qV3qXMaEeeoYuc64YE22w" outgoing="_2qV3QHMaEeeoYuc64YE22w _2qV3R3MaEeeoYuc64YE22w _2qV3S3MaEeeoYuc64YE22w _2qV3V3MaEeeoYuc64YE22w _2qV3XHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWcu3MaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_2qV3qnMaEeeoYuc64YE22w" outgoing="_2qV3q3MaEeeoYuc64YE22w">
                <result xmi:id="_2qWcvHMaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_2qV3rHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcvXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcvnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <trigger xmi:id="_2qWcv3MaEeeoYuc64YE22w" event="_2qXG_3MaEeeoYuc64YE22w"/>
                <trigger xmi:id="_2qWcwHMaEeeoYuc64YE22w" event="_2qXHAHMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qWcwXMaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_2qV3qnMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWcwnMaEeeoYuc64YE22w" name="ExpressionStatement@175fbffd" incoming="_2qV3QXMaEeeoYuc64YE22w" outgoing="_2qV3QnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWcw3MaEeeoYuc64YE22w" target="_2qWczXMaEeeoYuc64YE22w" source="_2qWcyXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWcxHMaEeeoYuc64YE22w" target="_2qWc1nMaEeeoYuc64YE22w" source="_2qWc03MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWcxXMaEeeoYuc64YE22w" target="_2qWc2nMaEeeoYuc64YE22w" source="_2qWc0HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWcxnMaEeeoYuc64YE22w" target="_2qWcx3MaEeeoYuc64YE22w" source="_2qWc43MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWcx3MaEeeoYuc64YE22w" name="Expression(LeftHandSide@3641de1a)" incoming="_2qWcxnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWcyHMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_2qWcyXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWcw3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcynMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcy3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWczHMaEeeoYuc64YE22w" name="Clear(terminate)" structuralFeature="_2qV3InMaEeeoYuc64YE22w">
                <object xmi:id="_2qWczXMaEeeoYuc64YE22w" name="Clear(terminate).object" incoming="_2qWcw3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWcznMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWcz3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qWc0HMaEeeoYuc64YE22w" name="Clear(terminate).result" outgoing="_2qWcxXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc0XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc0nMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWc03MaEeeoYuc64YE22w" name="Fork(LeftHandSide@3641de1a)" incoming="_2qV3QHMaEeeoYuc64YE22w" outgoing="_2qWcxHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWc1HMaEeeoYuc64YE22w" name="WriteAll(MyTest::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWc1XMaEeeoYuc64YE22w" target="_2qWc4HMaEeeoYuc64YE22w" source="_2qWc1nMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWc1nMaEeeoYuc64YE22w" name="WriteAll(MyTest::terminate).input(MyTest::terminate)" incoming="_2qWcxHMaEeeoYuc64YE22w" outgoing="_2qWc1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc13MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc2HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWc2XMaEeeoYuc64YE22w" name="Write(terminate)" structuralFeature="_2qV3InMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qWc2nMaEeeoYuc64YE22w" name="Write(terminate).object" incoming="_2qWcxXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc23MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc3HMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWc3XMaEeeoYuc64YE22w" name="Write(terminate).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc3nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc33MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qWc4HMaEeeoYuc64YE22w" name="Write(terminate).value" incoming="_2qWc1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc4XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc4nMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWc43MaEeeoYuc64YE22w" name="RightHandSide@71e5ab1d" outgoing="_2qWcxnMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWc5HMaEeeoYuc64YE22w" name="AcceptStatement@7e115fbb" incoming="_2qV3QnMaEeeoYuc64YE22w" outgoing="_2qV3Q3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWc5XMaEeeoYuc64YE22w" target="_2qWc5nMaEeeoYuc64YE22w" source="_2qWc6HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWc5nMaEeeoYuc64YE22w" name="Accept(SignalNewArrival)" incoming="_2qWc5XMaEeeoYuc64YE22w">
                <trigger xmi:id="_2qWc53MaEeeoYuc64YE22w" event="_2qXHAXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qWc6HMaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival))" outgoing="_2qWc5XMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWc6XMaEeeoYuc64YE22w" name="AcceptStatement@22a14ad2" incoming="_2qV3Q3MaEeeoYuc64YE22w" outgoing="_2qV3RXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWc6nMaEeeoYuc64YE22w" target="_2qWc7XMaEeeoYuc64YE22w" source="_2qWc8nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWc63MaEeeoYuc64YE22w" target="_2qWc7HMaEeeoYuc64YE22w" source="_2qWc7nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWc7HMaEeeoYuc64YE22w" name="Fork(Accept(SignalNewArrival).result)" incoming="_2qWc63MaEeeoYuc64YE22w" outgoing="_2qV3RHMaEeeoYuc64YE22w _2qV3SHMaEeeoYuc64YE22w _2qV3TXMaEeeoYuc64YE22w _2qV3WXMaEeeoYuc64YE22w _2qV3XnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWc7XMaEeeoYuc64YE22w" name="Accept(SignalNewArrival)" incoming="_2qWc6nMaEeeoYuc64YE22w">
                <result xmi:id="_2qWc7nMaEeeoYuc64YE22w" name="Accept(SignalNewArrival).result" outgoing="_2qWc63MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc73MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc8HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <trigger xmi:id="_2qWc8XMaEeeoYuc64YE22w" event="_2qXHAnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qWc8nMaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival))" outgoing="_2qWc6nMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWc83MaEeeoYuc64YE22w" name="ExpressionStatement@7fd3532" incoming="_2qV3RXMaEeeoYuc64YE22w" outgoing="_2qV3SXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWc9HMaEeeoYuc64YE22w" target="_2qWc_nMaEeeoYuc64YE22w" source="_2qWc-nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWc9XMaEeeoYuc64YE22w" target="_2qWdB3MaEeeoYuc64YE22w" source="_2qWdBHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWc9nMaEeeoYuc64YE22w" target="_2qWdC3MaEeeoYuc64YE22w" source="_2qWdAXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWc93MaEeeoYuc64YE22w" target="_2qWc-HMaEeeoYuc64YE22w" source="_2qWdFHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWc-HMaEeeoYuc64YE22w" name="Expression(LeftHandSide@5cfb0b37)" incoming="_2qWc93MaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWc-XMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_2qWc-nMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWc9HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc-3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWc_HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWc_XMaEeeoYuc64YE22w" name="Clear(arrival)" structuralFeature="_2qV3JXMaEeeoYuc64YE22w">
                <object xmi:id="_2qWc_nMaEeeoYuc64YE22w" name="Clear(arrival).object" incoming="_2qWc9HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWc_3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdAHMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qWdAXMaEeeoYuc64YE22w" name="Clear(arrival).result" outgoing="_2qWc9nMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdAnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdA3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWdBHMaEeeoYuc64YE22w" name="Fork(LeftHandSide@5cfb0b37)" incoming="_2qV3RHMaEeeoYuc64YE22w" outgoing="_2qWc9XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdBXMaEeeoYuc64YE22w" name="WriteAll(MyTest::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdBnMaEeeoYuc64YE22w" target="_2qWdEXMaEeeoYuc64YE22w" source="_2qWdB3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWdB3MaEeeoYuc64YE22w" name="WriteAll(MyTest::arrival).input(MyTest::arrival)" incoming="_2qWc9XMaEeeoYuc64YE22w" outgoing="_2qWdBnMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdCHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdCXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWdCnMaEeeoYuc64YE22w" name="Write(arrival)" structuralFeature="_2qV3JXMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qWdC3MaEeeoYuc64YE22w" name="Write(arrival).object" incoming="_2qWc9nMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdDHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdDXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWdDnMaEeeoYuc64YE22w" name="Write(arrival).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdD3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdEHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qWdEXMaEeeoYuc64YE22w" name="Write(arrival).value" incoming="_2qWdBnMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdEnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdE3MaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdFHMaEeeoYuc64YE22w" name="RightHandSide@1c151e6e" outgoing="_2qWc93MaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdFXMaEeeoYuc64YE22w" name="ForStatement@2a6e864b" incoming="_2qV3SXMaEeeoYuc64YE22w" outgoing="_2qV3UHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdFnMaEeeoYuc64YE22w" target="_2qWeFnMaEeeoYuc64YE22w" source="_2qWeCnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdF3MaEeeoYuc64YE22w" target="_2qWeJnMaEeeoYuc64YE22w" source="_2qWeHXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdGHMaEeeoYuc64YE22w" target="_2qWd-3MaEeeoYuc64YE22w" source="_2qWeQXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdGXMaEeeoYuc64YE22w" target="_2qWd_nMaEeeoYuc64YE22w" source="_2qWePXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdGnMaEeeoYuc64YE22w" target="_2qWd-HMaEeeoYuc64YE22w" source="_2qWeJnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWdG3MaEeeoYuc64YE22w" target="_2qWdHHMaEeeoYuc64YE22w" source="_2qWeF3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:LoopNode" xmi:id="_2qWdHHMaEeeoYuc64YE22w" name="Loop(ForStatement@2a6e864b)" incoming="_2qWdG3MaEeeoYuc64YE22w" bodyOutput="_2qWdSnMaEeeoYuc64YE22w _2qWdTXMaEeeoYuc64YE22w _2qWdUHMaEeeoYuc64YE22w _2qWdU3MaEeeoYuc64YE22w _2qWdz3MaEeeoYuc64YE22w _2qWduHMaEeeoYuc64YE22w _2qWdxXMaEeeoYuc64YE22w" bodyPart="_2qWdQHMaEeeoYuc64YE22w _2qWdQXMaEeeoYuc64YE22w _2qWdyHMaEeeoYuc64YE22w _2qWd0nMaEeeoYuc64YE22w" decider="_2qWdPXMaEeeoYuc64YE22w" isTestedFirst="true" test="_2qWdNnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdHXMaEeeoYuc64YE22w" target="_2qWdL3MaEeeoYuc64YE22w" source="_2qWd13MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdHnMaEeeoYuc64YE22w" target="_2qWdMHMaEeeoYuc64YE22w" source="_2qWd2nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdH3MaEeeoYuc64YE22w" target="_2qWdMXMaEeeoYuc64YE22w" source="_2qWd3XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdIHMaEeeoYuc64YE22w" target="_2qWdMnMaEeeoYuc64YE22w" source="_2qWd4HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdIXMaEeeoYuc64YE22w" target="_2qWdM3MaEeeoYuc64YE22w" source="_2qWd43MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdInMaEeeoYuc64YE22w" target="_2qWdNHMaEeeoYuc64YE22w" source="_2qWd5nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdI3MaEeeoYuc64YE22w" target="_2qWdNXMaEeeoYuc64YE22w" source="_2qWd6XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdJHMaEeeoYuc64YE22w" target="_2qWdN3MaEeeoYuc64YE22w" source="_2qWdNHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdJXMaEeeoYuc64YE22w" target="_2qWdOnMaEeeoYuc64YE22w" source="_2qWdNXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWdJnMaEeeoYuc64YE22w" target="_2qWdQXMaEeeoYuc64YE22w" source="_2qWdQHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdJ3MaEeeoYuc64YE22w" target="_2qWdcXMaEeeoYuc64YE22w" source="_2qWdM3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdKHMaEeeoYuc64YE22w" target="_2qWdyXMaEeeoYuc64YE22w" source="_2qWdM3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdKXMaEeeoYuc64YE22w" target="_2qWdzHMaEeeoYuc64YE22w" source="_2qWd03MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdKnMaEeeoYuc64YE22w" target="_2qWdsnMaEeeoYuc64YE22w" source="_2qWdNHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdK3MaEeeoYuc64YE22w" target="_2qWdwnMaEeeoYuc64YE22w" source="_2qWdNXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdLHMaEeeoYuc64YE22w" target="_2qWdk3MaEeeoYuc64YE22w" source="_2qWdL3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdLXMaEeeoYuc64YE22w" target="_2qWdm3MaEeeoYuc64YE22w" source="_2qWdMHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdLnMaEeeoYuc64YE22w" target="_2qWdo3MaEeeoYuc64YE22w" source="_2qWdMXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdL3MaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(sig))" incoming="_2qWdHXMaEeeoYuc64YE22w" outgoing="_2qWdLHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdMHMaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(terminate))" incoming="_2qWdHnMaEeeoYuc64YE22w" outgoing="_2qWdLXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdMXMaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(arrival3))" incoming="_2qWdH3MaEeeoYuc64YE22w" outgoing="_2qWdLnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdMnMaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(s1))" incoming="_2qWdIHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdM3MaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(i))" incoming="_2qWdIXMaEeeoYuc64YE22w" outgoing="_2qWdJ3MaEeeoYuc64YE22w _2qWdKHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdNHMaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(counter))" incoming="_2qWdInMaEeeoYuc64YE22w" outgoing="_2qWdJHMaEeeoYuc64YE22w _2qWdKnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWdNXMaEeeoYuc64YE22w" name="Fork(ForStatement@2a6e864b.loopVariable(upper))" incoming="_2qWdI3MaEeeoYuc64YE22w" outgoing="_2qWdJXMaEeeoYuc64YE22w _2qWdK3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWdNnMaEeeoYuc64YE22w" name="Call(&lt;=)">
                  <argument xmi:id="_2qWdN3MaEeeoYuc64YE22w" name="Call(&lt;=).argument(x)" incoming="_2qWdJHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdOHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdOXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qWdOnMaEeeoYuc64YE22w" name="Call(&lt;=).argument(y)" incoming="_2qWdJXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdO3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdPHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qWdPXMaEeeoYuc64YE22w" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdPnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdP3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdQHMaEeeoYuc64YE22w" name="Values(ForStatement@2a6e864b)" outgoing="_2qWdJnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdQXMaEeeoYuc64YE22w" name="Body(ForStatement@2a6e864b)" incoming="_2qWdJnMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdQnMaEeeoYuc64YE22w" target="_2qWdSnMaEeeoYuc64YE22w" source="_2qWdlnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdQ3MaEeeoYuc64YE22w" target="_2qWdTXMaEeeoYuc64YE22w" source="_2qWdnnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdRHMaEeeoYuc64YE22w" target="_2qWdUHMaEeeoYuc64YE22w" source="_2qWdpnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdRXMaEeeoYuc64YE22w" target="_2qWdU3MaEeeoYuc64YE22w" source="_2qWdrnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdRnMaEeeoYuc64YE22w" target="_2qWdj3MaEeeoYuc64YE22w" source="_2qWdWXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2qWdR3MaEeeoYuc64YE22w" target="_2qWdYXMaEeeoYuc64YE22w" source="_2qWdVnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdSHMaEeeoYuc64YE22w" target="_2qWdq3MaEeeoYuc64YE22w" source="_2qWdWXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdSXMaEeeoYuc64YE22w" target="_2qWdtXMaEeeoYuc64YE22w" source="_2qWdvHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qWdSnMaEeeoYuc64YE22w" name="sig" incoming="_2qWdQnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdS3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdTHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_2qWdTXMaEeeoYuc64YE22w" name="terminate" incoming="_2qWdQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdTnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdT3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_2qWdUHMaEeeoYuc64YE22w" name="arrival3" incoming="_2qWdRHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdUXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdUnMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_2qWdU3MaEeeoYuc64YE22w" name="s1" incoming="_2qWdRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdVHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdVXMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdVnMaEeeoYuc64YE22w" name="AcceptStatement@b91b79f" outgoing="_2qWdR3MaEeeoYuc64YE22w">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qWdV3MaEeeoYuc64YE22w" target="_2qWdWnMaEeeoYuc64YE22w" source="_2qWdYHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdWHMaEeeoYuc64YE22w" target="_2qWdWXMaEeeoYuc64YE22w" source="_2qWdW3MaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWdWXMaEeeoYuc64YE22w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_2qWdWHMaEeeoYuc64YE22w" outgoing="_2qWdRnMaEeeoYuc64YE22w _2qWdSHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWdWnMaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_2qWdV3MaEeeoYuc64YE22w">
                      <result xmi:id="_2qWdW3MaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_2qWdWHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdXHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdXXMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <trigger xmi:id="_2qWdXnMaEeeoYuc64YE22w" event="_2qXHA3MaEeeoYuc64YE22w"/>
                      <trigger xmi:id="_2qWdX3MaEeeoYuc64YE22w" event="_2qXHBHMaEeeoYuc64YE22w"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_2qWdYHMaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_2qWdV3MaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdYXMaEeeoYuc64YE22w" name="ExpressionStatement@3855da9c" incoming="_2qWdR3MaEeeoYuc64YE22w">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qWdYnMaEeeoYuc64YE22w" target="_2qWdb3MaEeeoYuc64YE22w" source="_2qWdanMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdY3MaEeeoYuc64YE22w" target="_2qWdd3MaEeeoYuc64YE22w" source="_2qWddHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdZHMaEeeoYuc64YE22w" target="_2qWdeXMaEeeoYuc64YE22w" source="_2qWdbHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdZXMaEeeoYuc64YE22w" target="_2qWdf3MaEeeoYuc64YE22w" source="_2qWdd3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdZnMaEeeoYuc64YE22w" target="_2qWdg3MaEeeoYuc64YE22w" source="_2qWdfHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdZ3MaEeeoYuc64YE22w" target="_2qWdjHMaEeeoYuc64YE22w" source="_2qWdd3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdaHMaEeeoYuc64YE22w" target="_2qWdiXMaEeeoYuc64YE22w" source="_2qWdj3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qWdaXMaEeeoYuc64YE22w" target="_2qWdanMaEeeoYuc64YE22w" source="_2qWdkHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdanMaEeeoYuc64YE22w" name="Expression(LeftHandSide@7aae7ba3)" incoming="_2qWdaXMaEeeoYuc64YE22w" outgoing="_2qWdYnMaEeeoYuc64YE22w">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWda3MaEeeoYuc64YE22w" name="ReadSelf">
                        <result xmi:id="_2qWdbHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWdZHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdbXMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdbnMaEeeoYuc64YE22w" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdb3MaEeeoYuc64YE22w" name="Index(LeftHandSide@7aae7ba3)" incoming="_2qWdYnMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWdcHMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_2qWdcXMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_2qWdJ3MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdcnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdc3MaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2qWddHMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_2qWdY3MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWddXMaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWddnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWdd3MaEeeoYuc64YE22w" name="Fork(Call(ToUnlimitedNatural).result(result))" incoming="_2qWdY3MaEeeoYuc64YE22w" outgoing="_2qWdZXMaEeeoYuc64YE22w _2qWdZ3MaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_2qWdeHMaEeeoYuc64YE22w" name="Remove(signals)" structuralFeature="_2qV3K3MaEeeoYuc64YE22w">
                      <object xmi:id="_2qWdeXMaEeeoYuc64YE22w" name="Remove(signals).object" incoming="_2qWdZHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdenMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWde3MaEeeoYuc64YE22w" value="1"/>
                      </object>
                      <result xmi:id="_2qWdfHMaEeeoYuc64YE22w" name="Remove(signals).result" outgoing="_2qWdZnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdfXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdfnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <removeAt xmi:id="_2qWdf3MaEeeoYuc64YE22w" name="Remove(signals).removeAt" incoming="_2qWdZXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdgHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdgXMaEeeoYuc64YE22w" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWdgnMaEeeoYuc64YE22w" name="Write(signals)" structuralFeature="_2qV3K3MaEeeoYuc64YE22w">
                      <object xmi:id="_2qWdg3MaEeeoYuc64YE22w" name="Write(signals).object" incoming="_2qWdZnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdhHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdhXMaEeeoYuc64YE22w" value="1"/>
                      </object>
                      <result xmi:id="_2qWdhnMaEeeoYuc64YE22w" name="Write(signals).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdh3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdiHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:id="_2qWdiXMaEeeoYuc64YE22w" name="Write(signals).value" incoming="_2qWdaHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdinMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdi3MaEeeoYuc64YE22w" value="1"/>
                      </value>
                      <insertAt xmi:id="_2qWdjHMaEeeoYuc64YE22w" name="Write(signals).insertAt" incoming="_2qWdZ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdjXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdjnMaEeeoYuc64YE22w" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWdj3MaEeeoYuc64YE22w" name="Fork(LeftHandSide@7aae7ba3)" incoming="_2qWdRnMaEeeoYuc64YE22w" outgoing="_2qWdaHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdkHMaEeeoYuc64YE22w" name="RightHandSide@4617d49b" outgoing="_2qWdaXMaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdkXMaEeeoYuc64YE22w" name="Passthru(Fork(sig))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdknMaEeeoYuc64YE22w" target="_2qWdlnMaEeeoYuc64YE22w" source="_2qWdk3MaEeeoYuc64YE22w"/>
                    <structuredNodeInput xmi:id="_2qWdk3MaEeeoYuc64YE22w" name="Passthru(Fork(sig)).input" incoming="_2qWdLHMaEeeoYuc64YE22w" outgoing="_2qWdknMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdlHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdlXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2qWdlnMaEeeoYuc64YE22w" name="Passthru(Fork(sig)).output" incoming="_2qWdknMaEeeoYuc64YE22w" outgoing="_2qWdQnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdl3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdmHMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdmXMaEeeoYuc64YE22w" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdmnMaEeeoYuc64YE22w" target="_2qWdnnMaEeeoYuc64YE22w" source="_2qWdm3MaEeeoYuc64YE22w"/>
                    <structuredNodeInput xmi:id="_2qWdm3MaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).input" incoming="_2qWdLXMaEeeoYuc64YE22w" outgoing="_2qWdmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdnHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdnXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2qWdnnMaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).output" incoming="_2qWdmnMaEeeoYuc64YE22w" outgoing="_2qWdQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdn3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdoHMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdoXMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdonMaEeeoYuc64YE22w" target="_2qWdpnMaEeeoYuc64YE22w" source="_2qWdo3MaEeeoYuc64YE22w"/>
                    <structuredNodeInput xmi:id="_2qWdo3MaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2qWdLnMaEeeoYuc64YE22w" outgoing="_2qWdonMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdpHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdpXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2qWdpnMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2qWdonMaEeeoYuc64YE22w" outgoing="_2qWdRHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdp3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdqHMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdqXMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdqnMaEeeoYuc64YE22w" target="_2qWdrnMaEeeoYuc64YE22w" source="_2qWdq3MaEeeoYuc64YE22w"/>
                    <structuredNodeInput xmi:id="_2qWdq3MaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_2qWdSHMaEeeoYuc64YE22w" outgoing="_2qWdqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdrHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdrXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2qWdrnMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_2qWdqnMaEeeoYuc64YE22w" outgoing="_2qWdRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdr3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdsHMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWdsXMaEeeoYuc64YE22w" name="Call(+)">
                    <argument xmi:id="_2qWdsnMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2qWdKnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWds3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdtHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_2qWdtXMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2qWdSXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdtnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdt3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2qWduHMaEeeoYuc64YE22w" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWduXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdunMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWdu3MaEeeoYuc64YE22w" name="Value(1)">
                    <result xmi:id="_2qWdvHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qWdSXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdvXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdvnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_2qWdv3MaEeeoYuc64YE22w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWdwHMaEeeoYuc64YE22w" name="Passthru(upper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWdwXMaEeeoYuc64YE22w" target="_2qWdxXMaEeeoYuc64YE22w" source="_2qWdwnMaEeeoYuc64YE22w"/>
                    <structuredNodeInput xmi:id="_2qWdwnMaEeeoYuc64YE22w" name="Passthru(upper).input" incoming="_2qWdK3MaEeeoYuc64YE22w" outgoing="_2qWdwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdw3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdxHMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2qWdxXMaEeeoYuc64YE22w" name="Passthru(upper).output" incoming="_2qWdwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdxnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdx3MaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWdyHMaEeeoYuc64YE22w" name="Call(+)">
                  <argument xmi:id="_2qWdyXMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2qWdKHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdynMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdy3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qWdzHMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2qWdKXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWdzXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWdznMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qWdz3MaEeeoYuc64YE22w" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd0HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd0XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWd0nMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_2qWd03MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qWdKXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd1HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd1XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qWd1nMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <loopVariable xmi:id="_2qWd13MaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(sig)" outgoing="_2qWdHXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd2HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd2XMaEeeoYuc64YE22w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2qWd2nMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(terminate)" outgoing="_2qWdHnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd23MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd3HMaEeeoYuc64YE22w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2qWd3XMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(arrival3)" outgoing="_2qWdH3MaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd3nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd33MaEeeoYuc64YE22w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2qWd4HMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(s1)" outgoing="_2qWdIHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd4XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd4nMaEeeoYuc64YE22w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2qWd43MaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(i)" outgoing="_2qWdIXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd5HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd5XMaEeeoYuc64YE22w" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_2qWd5nMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(counter)" outgoing="_2qWdInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd53MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd6HMaEeeoYuc64YE22w" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2qWd6XMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariable(upper)" outgoing="_2qWdI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd6nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd63MaEeeoYuc64YE22w" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_2qWd7HMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(sig)" incoming="_2qV3RnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd7XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd7nMaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2qWd73MaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(terminate)" incoming="_2qV3R3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd8HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd8XMaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2qWd8nMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(arrival3)" incoming="_2qV3SHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd83MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd9HMaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2qWd9XMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(s1)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd9nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd93MaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2qWd-HMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(i)" incoming="_2qWdGnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd-XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd-nMaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2qWd-3MaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(counter)" incoming="_2qWdGHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd_HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWd_XMaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2qWd_nMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.loopVariableInput(upper)" incoming="_2qWdGXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWd_3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeAHMaEeeoYuc64YE22w" value="1"/>
                </loopVariableInput>
                <result xmi:id="_2qWeAXMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeAnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeA3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2qWeBHMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeBXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeBnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2qWeB3MaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(arrival3)" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeCHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeCXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2qWeCnMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(s1)" outgoing="_2qWdFnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeC3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeDHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2qWeDXMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeDnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeD3MaEeeoYuc64YE22w" value="*"/>
                </result>
                <result xmi:id="_2qWeEHMaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeEXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeEnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_2qWeE3MaEeeoYuc64YE22w" name="ForStatement@2a6e864b.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeFHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeFXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWeFnMaEeeoYuc64YE22w" name="Fork(s1)" incoming="_2qWdFnMaEeeoYuc64YE22w" outgoing="_2qV3TnMaEeeoYuc64YE22w _2qV3WnMaEeeoYuc64YE22w _2qV3X3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeF3MaEeeoYuc64YE22w" name="LoopVariables(ForStatement@2a6e864b)" outgoing="_2qWdG3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeGHMaEeeoYuc64YE22w" target="_2qWeKHMaEeeoYuc64YE22w" source="_2qWeInMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeGXMaEeeoYuc64YE22w" target="_2qWeK3MaEeeoYuc64YE22w" source="_2qWeJnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeGnMaEeeoYuc64YE22w" target="_2qWeN3MaEeeoYuc64YE22w" source="_2qWeLnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeG3MaEeeoYuc64YE22w" target="_2qWeOnMaEeeoYuc64YE22w" source="_2qWeMnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWeHHMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_2qWeHXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qWdF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeHnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeH3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qWeIHMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWeIXMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_2qWeInMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_2qWeGHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeI3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeJHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qWeJXMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWeJnMaEeeoYuc64YE22w" name="Fork(Value(1).result)" incoming="_2qWdF3MaEeeoYuc64YE22w" outgoing="_2qWdGnMaEeeoYuc64YE22w _2qWeGXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWeJ3MaEeeoYuc64YE22w" name="Call(-)">
                  <argument xmi:id="_2qWeKHMaEeeoYuc64YE22w" name="Call(-).argument(x)" incoming="_2qWeGHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeKXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeKnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qWeK3MaEeeoYuc64YE22w" name="Call(-).argument(y)" incoming="_2qWeGXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeLHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeLXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qWeLnMaEeeoYuc64YE22w" name="Call(-).result(result)" outgoing="_2qWeGnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeL3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeMHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWeMXMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_2qWeMnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qWeG3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeM3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeNHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qWeNXMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWeNnMaEeeoYuc64YE22w" name="Call(+)">
                  <argument xmi:id="_2qWeN3MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2qWeGnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeOHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeOXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qWeOnMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2qWeG3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeO3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWePHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qWePXMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_2qWdGXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWePnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeP3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWeQHMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_2qWeQXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qWdGHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeQnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeQ3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qWeRHMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_2qWeRXMaEeeoYuc64YE22w" name="DoStatement@693c6818" incoming="_2qV3UHMaEeeoYuc64YE22w" outgoing="_2qV3YHMaEeeoYuc64YE22w" bodyOutput="_2qWeZXMaEeeoYuc64YE22w _2qWeaHMaEeeoYuc64YE22w _2qWea3MaEeeoYuc64YE22w _2qWebnMaEeeoYuc64YE22w _2qWecXMaEeeoYuc64YE22w" bodyPart="_2qWeXHMaEeeoYuc64YE22w" decider="_2qWeWXMaEeeoYuc64YE22w" test="_2qWeVHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeRnMaEeeoYuc64YE22w" target="_2qWeT3MaEeeoYuc64YE22w" source="_2qWe8HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeR3MaEeeoYuc64YE22w" target="_2qWeUHMaEeeoYuc64YE22w" source="_2qWe83MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeSHMaEeeoYuc64YE22w" target="_2qWeUXMaEeeoYuc64YE22w" source="_2qWe9nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeSXMaEeeoYuc64YE22w" target="_2qWeUnMaEeeoYuc64YE22w" source="_2qWe-XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeSnMaEeeoYuc64YE22w" target="_2qWeU3MaEeeoYuc64YE22w" source="_2qWe_HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeS3MaEeeoYuc64YE22w" target="_2qWeynMaEeeoYuc64YE22w" source="_2qWeT3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeTHMaEeeoYuc64YE22w" target="_2qWe0nMaEeeoYuc64YE22w" source="_2qWeUHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeTXMaEeeoYuc64YE22w" target="_2qWe4nMaEeeoYuc64YE22w" source="_2qWeUnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeTnMaEeeoYuc64YE22w" target="_2qWe6nMaEeeoYuc64YE22w" source="_2qWeU3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWeT3MaEeeoYuc64YE22w" name="Fork(DoStatement@693c6818.loopVariable(sig))" incoming="_2qWeRnMaEeeoYuc64YE22w" outgoing="_2qWeS3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWeUHMaEeeoYuc64YE22w" name="Fork(DoStatement@693c6818.loopVariable(terminate))" incoming="_2qWeR3MaEeeoYuc64YE22w" outgoing="_2qWeTHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWeUXMaEeeoYuc64YE22w" name="Fork(DoStatement@693c6818.loopVariable(s))" incoming="_2qWeSHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWeUnMaEeeoYuc64YE22w" name="Fork(DoStatement@693c6818.loopVariable(arrival3))" incoming="_2qWeSXMaEeeoYuc64YE22w" outgoing="_2qWeTXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWeU3MaEeeoYuc64YE22w" name="Fork(DoStatement@693c6818.loopVariable(s1))" incoming="_2qWeSnMaEeeoYuc64YE22w" outgoing="_2qWeTnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeVHMaEeeoYuc64YE22w" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeVXMaEeeoYuc64YE22w" target="_2qWeWXMaEeeoYuc64YE22w" source="_2qWeVnMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWeVnMaEeeoYuc64YE22w" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_2qV3T3MaEeeoYuc64YE22w" outgoing="_2qWeVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeV3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeWHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWeWXMaEeeoYuc64YE22w" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_2qWeVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeWnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeW3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeXHMaEeeoYuc64YE22w" name="BodyPart(DoStatement@693c6818)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeXXMaEeeoYuc64YE22w" target="_2qWeZXMaEeeoYuc64YE22w" source="_2qWezXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeXnMaEeeoYuc64YE22w" target="_2qWeaHMaEeeoYuc64YE22w" source="_2qWe1XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeX3MaEeeoYuc64YE22w" target="_2qWea3MaEeeoYuc64YE22w" source="_2qWe3XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeYHMaEeeoYuc64YE22w" target="_2qWebnMaEeeoYuc64YE22w" source="_2qWe5XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeYXMaEeeoYuc64YE22w" target="_2qWecXMaEeeoYuc64YE22w" source="_2qWe7XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeYnMaEeeoYuc64YE22w" target="_2qWednMaEeeoYuc64YE22w" source="_2qWegXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWeY3MaEeeoYuc64YE22w" target="_2qWedHMaEeeoYuc64YE22w" source="_2qWefHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeZHMaEeeoYuc64YE22w" target="_2qWe2nMaEeeoYuc64YE22w" source="_2qWegXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qWeZXMaEeeoYuc64YE22w" name="sig" incoming="_2qWeXXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeZnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeZ3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2qWeaHMaEeeoYuc64YE22w" name="terminate" incoming="_2qWeXnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeaXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeanMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2qWea3MaEeeoYuc64YE22w" name="s" incoming="_2qWeX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWebHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWebXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2qWebnMaEeeoYuc64YE22w" name="arrival3" incoming="_2qWeYHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeb3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWecHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2qWecXMaEeeoYuc64YE22w" name="s1" incoming="_2qWeYXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWecnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWec3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWedHMaEeeoYuc64YE22w" name="Condition(DoStatement@693c6818)" incoming="_2qWeY3MaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qWedXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_2qV3DnMaEeeoYuc64YE22w" isDirect="true">
                    <object xmi:id="_2qWednMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_2qWeYnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWed3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeeHMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qWeeXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_2qV3T3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeenMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWee3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWefHMaEeeoYuc64YE22w" name="Body(DoStatement@693c6818)" outgoing="_2qWeY3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2qWefXMaEeeoYuc64YE22w" target="_2qWeiXMaEeeoYuc64YE22w" source="_2qWefnMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWefnMaEeeoYuc64YE22w" name="AcceptStatement@7d87b98d" outgoing="_2qWefXMaEeeoYuc64YE22w">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qWef3MaEeeoYuc64YE22w" target="_2qWegnMaEeeoYuc64YE22w" source="_2qWeiHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWegHMaEeeoYuc64YE22w" target="_2qWegXMaEeeoYuc64YE22w" source="_2qWeg3MaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWegXMaEeeoYuc64YE22w" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_2qWegHMaEeeoYuc64YE22w" outgoing="_2qWeYnMaEeeoYuc64YE22w _2qWeZHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWegnMaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination)" incoming="_2qWef3MaEeeoYuc64YE22w">
                      <result xmi:id="_2qWeg3MaEeeoYuc64YE22w" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_2qWegHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWehHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWehXMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <trigger xmi:id="_2qWehnMaEeeoYuc64YE22w" event="_2qXHBXMaEeeoYuc64YE22w"/>
                      <trigger xmi:id="_2qWeh3MaEeeoYuc64YE22w" event="_2qXHBnMaEeeoYuc64YE22w"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_2qWeiHMaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_2qWef3MaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeiXMaEeeoYuc64YE22w" name="ExpressionStatement@6c05f1de" incoming="_2qWefXMaEeeoYuc64YE22w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeinMaEeeoYuc64YE22w" target="_2qWelnMaEeeoYuc64YE22w" source="_2qWenXMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWei3MaEeeoYuc64YE22w" target="_2qWesXMaEeeoYuc64YE22w" source="_2qWer3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWejHMaEeeoYuc64YE22w" target="_2qWeunMaEeeoYuc64YE22w" source="_2qWet3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWejXMaEeeoYuc64YE22w" target="_2qWevnMaEeeoYuc64YE22w" source="_2qWetHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWejnMaEeeoYuc64YE22w" target="_2qWet3MaEeeoYuc64YE22w" source="_2qWemXMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qWej3MaEeeoYuc64YE22w" target="_2qWesHMaEeeoYuc64YE22w" source="_2qWeoXMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWekHMaEeeoYuc64YE22w" target="_2qWex3MaEeeoYuc64YE22w" source="_2qWerHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWekXMaEeeoYuc64YE22w" target="_2qWek3MaEeeoYuc64YE22w" source="_2qWex3MaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWeknMaEeeoYuc64YE22w" name="Call(+)">
                      <argument xmi:id="_2qWek3MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_2qWekXMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWelHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWelXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_2qWelnMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_2qWeinMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWel3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWemHMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2qWemXMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_2qWejnMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWemnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWem3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWenHMaEeeoYuc64YE22w" name="Value(1)">
                      <result xmi:id="_2qWenXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qWeinMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWennMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWen3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_2qWeoHMaEeeoYuc64YE22w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeoXMaEeeoYuc64YE22w" name="RightHandSide@2980a284" outgoing="_2qWej3MaEeeoYuc64YE22w">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeonMaEeeoYuc64YE22w" target="_2qWer3MaEeeoYuc64YE22w" source="_2qWepXMaEeeoYuc64YE22w"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeo3MaEeeoYuc64YE22w" target="_2qWeqXMaEeeoYuc64YE22w" source="_2qWer3MaEeeoYuc64YE22w"/>
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWepHMaEeeoYuc64YE22w" name="ReadSelf">
                        <result xmi:id="_2qWepXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWeonMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWepnMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWep3MaEeeoYuc64YE22w" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qWeqHMaEeeoYuc64YE22w" name="Read(count)" structuralFeature="_2qV3KHMaEeeoYuc64YE22w">
                        <object xmi:id="_2qWeqXMaEeeoYuc64YE22w" name="Read(count).object" incoming="_2qWeo3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeqnMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWeq3MaEeeoYuc64YE22w" value="1"/>
                        </object>
                        <result xmi:id="_2qWerHMaEeeoYuc64YE22w" name="Read(count).result" outgoing="_2qWekHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWerXMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWernMaEeeoYuc64YE22w" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_2qWer3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qWeonMaEeeoYuc64YE22w" outgoing="_2qWeo3MaEeeoYuc64YE22w _2qWei3MaEeeoYuc64YE22w"/>
                    </node>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWesHMaEeeoYuc64YE22w" name="Clear(count)" incoming="_2qWej3MaEeeoYuc64YE22w" structuralFeature="_2qV3KHMaEeeoYuc64YE22w">
                      <object xmi:id="_2qWesXMaEeeoYuc64YE22w" name="Clear(count).object" incoming="_2qWei3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWesnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWes3MaEeeoYuc64YE22w" value="1"/>
                      </object>
                      <result xmi:id="_2qWetHMaEeeoYuc64YE22w" name="Clear(count).result" outgoing="_2qWejXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWetXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWetnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWet3MaEeeoYuc64YE22w" name="Fork(LeftHandSide@2980a284)" incoming="_2qWejnMaEeeoYuc64YE22w" outgoing="_2qWejHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeuHMaEeeoYuc64YE22w" name="WriteAll(MyTest::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeuXMaEeeoYuc64YE22w" target="_2qWexHMaEeeoYuc64YE22w" source="_2qWeunMaEeeoYuc64YE22w"/>
                      <structuredNodeInput xmi:id="_2qWeunMaEeeoYuc64YE22w" name="WriteAll(MyTest::count).input(MyTest::count)" incoming="_2qWejHMaEeeoYuc64YE22w" outgoing="_2qWeuXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeu3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWevHMaEeeoYuc64YE22w" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWevXMaEeeoYuc64YE22w" name="Write(count)" structuralFeature="_2qV3KHMaEeeoYuc64YE22w" isReplaceAll="true">
                        <object xmi:id="_2qWevnMaEeeoYuc64YE22w" name="Write(count).object" incoming="_2qWejXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWev3MaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWewHMaEeeoYuc64YE22w" value="1"/>
                        </object>
                        <result xmi:id="_2qWewXMaEeeoYuc64YE22w" name="Write(count).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWewnMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWew3MaEeeoYuc64YE22w" value="1"/>
                        </result>
                        <value xmi:id="_2qWexHMaEeeoYuc64YE22w" name="Write(count).value" incoming="_2qWeuXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWexXMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWexnMaEeeoYuc64YE22w" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qWex3MaEeeoYuc64YE22w" name="Fork(Read(count).result)" incoming="_2qWekHMaEeeoYuc64YE22w" outgoing="_2qWekXMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWeyHMaEeeoYuc64YE22w" name="Passthru(Fork(sig))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWeyXMaEeeoYuc64YE22w" target="_2qWezXMaEeeoYuc64YE22w" source="_2qWeynMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWeynMaEeeoYuc64YE22w" name="Passthru(Fork(sig)).input" incoming="_2qWeS3MaEeeoYuc64YE22w" outgoing="_2qWeyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWey3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWezHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWezXMaEeeoYuc64YE22w" name="Passthru(Fork(sig)).output" incoming="_2qWeyXMaEeeoYuc64YE22w" outgoing="_2qWeXXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWeznMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWez3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWe0HMaEeeoYuc64YE22w" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWe0XMaEeeoYuc64YE22w" target="_2qWe1XMaEeeoYuc64YE22w" source="_2qWe0nMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWe0nMaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).input" incoming="_2qWeTHMaEeeoYuc64YE22w" outgoing="_2qWe0XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe03MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe1HMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWe1XMaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).output" incoming="_2qWe0XMaEeeoYuc64YE22w" outgoing="_2qWeXnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe1nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe13MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWe2HMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWe2XMaEeeoYuc64YE22w" target="_2qWe3XMaEeeoYuc64YE22w" source="_2qWe2nMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWe2nMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_2qWeZHMaEeeoYuc64YE22w" outgoing="_2qWe2XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe23MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe3HMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWe3XMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_2qWe2XMaEeeoYuc64YE22w" outgoing="_2qWeX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe3nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe33MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWe4HMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWe4XMaEeeoYuc64YE22w" target="_2qWe5XMaEeeoYuc64YE22w" source="_2qWe4nMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWe4nMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2qWeTXMaEeeoYuc64YE22w" outgoing="_2qWe4XMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe43MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe5HMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWe5XMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2qWe4XMaEeeoYuc64YE22w" outgoing="_2qWeYHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe5nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe53MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWe6HMaEeeoYuc64YE22w" name="Passthru(Fork(s1))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWe6XMaEeeoYuc64YE22w" target="_2qWe7XMaEeeoYuc64YE22w" source="_2qWe6nMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWe6nMaEeeoYuc64YE22w" name="Passthru(Fork(s1)).input" incoming="_2qWeTnMaEeeoYuc64YE22w" outgoing="_2qWe6XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe63MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe7HMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2qWe7XMaEeeoYuc64YE22w" name="Passthru(Fork(s1)).output" incoming="_2qWe6XMaEeeoYuc64YE22w" outgoing="_2qWeYXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe7nMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe73MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_2qWe8HMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariable(sig)" outgoing="_2qWeRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe8XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe8nMaEeeoYuc64YE22w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2qWe83MaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariable(terminate)" outgoing="_2qWeR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe9HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe9XMaEeeoYuc64YE22w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2qWe9nMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariable(s)" outgoing="_2qWeSHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe93MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe-HMaEeeoYuc64YE22w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2qWe-XMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariable(arrival3)" outgoing="_2qWeSXMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe-nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe-3MaEeeoYuc64YE22w" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2qWe_HMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariable(s1)" outgoing="_2qWeSnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWe_XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWe_nMaEeeoYuc64YE22w" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_2qWe_3MaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariableInput(sig)" incoming="_2qV3SnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfAHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfAXMaEeeoYuc64YE22w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2qWfAnMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariableInput(terminate)" incoming="_2qV3S3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfA3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfBHMaEeeoYuc64YE22w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2qWfBXMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfBnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfB3MaEeeoYuc64YE22w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2qWfCHMaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariableInput(arrival3)" incoming="_2qV3TXMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfCXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfCnMaEeeoYuc64YE22w" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2qWfC3MaEeeoYuc64YE22w" name="DoStatement@693c6818.loopVariableInput(s1)" incoming="_2qV3TnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfDHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfDXMaEeeoYuc64YE22w" value="1"/>
              </loopVariableInput>
              <result xmi:id="_2qWfDnMaEeeoYuc64YE22w" name="DoStatement@693c6818.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfD3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfEHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWfEXMaEeeoYuc64YE22w" name="DoStatement@693c6818.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfEnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfE3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWfFHMaEeeoYuc64YE22w" name="DoStatement@693c6818.result(s)" outgoing="_2qV3THMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfFXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfFnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWfF3MaEeeoYuc64YE22w" name="DoStatement@693c6818.result(arrival3)" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfGHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfGXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWfGnMaEeeoYuc64YE22w" name="DoStatement@693c6818.result(s1)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfG3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfHHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWfHXMaEeeoYuc64YE22w" name="Fork(s)" incoming="_2qV3THMaEeeoYuc64YE22w" outgoing="_2qV3WHMaEeeoYuc64YE22w _2qV3XXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_2qWfHnMaEeeoYuc64YE22w" name="IfStatement@5d2fdc72" incoming="_2qV3YHMaEeeoYuc64YE22w" outgoing="_2qV3YXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWfH3MaEeeoYuc64YE22w" target="_2qWfK3MaEeeoYuc64YE22w" source="_2qWfJnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWfIHMaEeeoYuc64YE22w" target="_2qWfhXMaEeeoYuc64YE22w" source="_2qWfgHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWfIXMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_2qWfInMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfI3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfJHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2qWfJXMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfJnMaEeeoYuc64YE22w" name="AcceptStatement@67265fe2" outgoing="_2qWfH3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWfJ3MaEeeoYuc64YE22w" target="_2qWfKHMaEeeoYuc64YE22w" source="_2qWfKnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWfKHMaEeeoYuc64YE22w" name="Accept(SignalNewArrival)" incoming="_2qWfJ3MaEeeoYuc64YE22w">
                  <trigger xmi:id="_2qWfKXMaEeeoYuc64YE22w" event="_2qXHB3MaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2qWfKnMaEeeoYuc64YE22w" name="Initial(Accept(SignalNewArrival))" outgoing="_2qWfJ3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfK3MaEeeoYuc64YE22w" name="ExpressionStatement@5aef5125" incoming="_2qWfH3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfLHMaEeeoYuc64YE22w" target="_2qWfN3MaEeeoYuc64YE22w" source="_2qWfM3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfLXMaEeeoYuc64YE22w" target="_2qWfQHMaEeeoYuc64YE22w" source="_2qWfPXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfLnMaEeeoYuc64YE22w" target="_2qWfRHMaEeeoYuc64YE22w" source="_2qWfOnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfL3MaEeeoYuc64YE22w" target="_2qWfPXMaEeeoYuc64YE22w" source="_2qWfT3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWfMHMaEeeoYuc64YE22w" target="_2qWfMXMaEeeoYuc64YE22w" source="_2qWfTXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfMXMaEeeoYuc64YE22w" name="Expression(LeftHandSide@5eab6bff)" incoming="_2qWfMHMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWfMnMaEeeoYuc64YE22w" name="ReadSelf">
                    <result xmi:id="_2qWfM3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWfLHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfNHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfNXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWfNnMaEeeoYuc64YE22w" name="Clear(flag)" structuralFeature="_2qV3LnMaEeeoYuc64YE22w">
                  <object xmi:id="_2qWfN3MaEeeoYuc64YE22w" name="Clear(flag).object" incoming="_2qWfLHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfOHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfOXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWfOnMaEeeoYuc64YE22w" name="Clear(flag).result" outgoing="_2qWfLnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfO3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfPHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWfPXMaEeeoYuc64YE22w" name="Fork(LeftHandSide@5eab6bff)" incoming="_2qWfL3MaEeeoYuc64YE22w" outgoing="_2qWfLXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfPnMaEeeoYuc64YE22w" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfP3MaEeeoYuc64YE22w" target="_2qWfSnMaEeeoYuc64YE22w" source="_2qWfQHMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWfQHMaEeeoYuc64YE22w" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_2qWfLXMaEeeoYuc64YE22w" outgoing="_2qWfP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfQXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfQnMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWfQ3MaEeeoYuc64YE22w" name="Write(flag)" structuralFeature="_2qV3LnMaEeeoYuc64YE22w" isReplaceAll="true">
                    <object xmi:id="_2qWfRHMaEeeoYuc64YE22w" name="Write(flag).object" incoming="_2qWfLnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfRXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfRnMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qWfR3MaEeeoYuc64YE22w" name="Write(flag).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfSHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfSXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2qWfSnMaEeeoYuc64YE22w" name="Write(flag).value" incoming="_2qWfP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfS3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfTHMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfTXMaEeeoYuc64YE22w" name="RightHandSide@64547267" outgoing="_2qWfMHMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWfTnMaEeeoYuc64YE22w" name="Value(true)">
                    <result xmi:id="_2qWfT3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qWfL3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfUHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfUXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2qWfUnMaEeeoYuc64YE22w" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfU3MaEeeoYuc64YE22w" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfVHMaEeeoYuc64YE22w" target="_2qWfWHMaEeeoYuc64YE22w" source="_2qWfVXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfVXMaEeeoYuc64YE22w" name="Passthru(Fork(sig)).input" incoming="_2qV3VnMaEeeoYuc64YE22w" outgoing="_2qWfVHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfVnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfV3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfWHMaEeeoYuc64YE22w" name="Passthru(Fork(sig)).output" incoming="_2qWfVHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfWXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfWnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfW3MaEeeoYuc64YE22w" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfXHMaEeeoYuc64YE22w" target="_2qWfYHMaEeeoYuc64YE22w" source="_2qWfXXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfXXMaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).input" incoming="_2qV3V3MaEeeoYuc64YE22w" outgoing="_2qWfXHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfXnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfX3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfYHMaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).output" incoming="_2qWfXHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfYXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfYnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfY3MaEeeoYuc64YE22w" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfZHMaEeeoYuc64YE22w" target="_2qWfaHMaEeeoYuc64YE22w" source="_2qWfZXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfZXMaEeeoYuc64YE22w" name="Passthru(Fork(s)).input" incoming="_2qV3WHMaEeeoYuc64YE22w" outgoing="_2qWfZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfZnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfZ3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfaHMaEeeoYuc64YE22w" name="Passthru(Fork(s)).output" incoming="_2qWfZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfaXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfanMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfa3MaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfbHMaEeeoYuc64YE22w" target="_2qWfcHMaEeeoYuc64YE22w" source="_2qWfbXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfbXMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2qV3WXMaEeeoYuc64YE22w" outgoing="_2qWfbHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfbnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfb3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfcHMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2qWfbHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfcXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfcnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfc3MaEeeoYuc64YE22w" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfdHMaEeeoYuc64YE22w" target="_2qWfeHMaEeeoYuc64YE22w" source="_2qWfdXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfdXMaEeeoYuc64YE22w" name="Passthru(Fork(s1)).input" incoming="_2qV3WnMaEeeoYuc64YE22w" outgoing="_2qWfdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfdnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfd3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfeHMaEeeoYuc64YE22w" name="Passthru(Fork(s1)).output" incoming="_2qWfdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfeXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfenMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWfe3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_2qWffHMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWffXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWffnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2qWff3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfgHMaEeeoYuc64YE22w" name="AcceptStatement@5e238eac" outgoing="_2qWfIHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWfgXMaEeeoYuc64YE22w" target="_2qWfgnMaEeeoYuc64YE22w" source="_2qWfhHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWfgnMaEeeoYuc64YE22w" name="Accept(SignalTermination)" incoming="_2qWfgXMaEeeoYuc64YE22w">
                  <trigger xmi:id="_2qWfg3MaEeeoYuc64YE22w" event="_2qXHCHMaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2qWfhHMaEeeoYuc64YE22w" name="Initial(Accept(SignalTermination))" outgoing="_2qWfgXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfhXMaEeeoYuc64YE22w" name="ExpressionStatement@1786292d" incoming="_2qWfIHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfhnMaEeeoYuc64YE22w" target="_2qWfkXMaEeeoYuc64YE22w" source="_2qWfjXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfh3MaEeeoYuc64YE22w" target="_2qWfmnMaEeeoYuc64YE22w" source="_2qWfl3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfiHMaEeeoYuc64YE22w" target="_2qWfnnMaEeeoYuc64YE22w" source="_2qWflHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfiXMaEeeoYuc64YE22w" target="_2qWfl3MaEeeoYuc64YE22w" source="_2qWfqXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWfinMaEeeoYuc64YE22w" target="_2qWfi3MaEeeoYuc64YE22w" source="_2qWfp3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfi3MaEeeoYuc64YE22w" name="Expression(LeftHandSide@67817beb)" incoming="_2qWfinMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWfjHMaEeeoYuc64YE22w" name="ReadSelf">
                    <result xmi:id="_2qWfjXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWfhnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfjnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfj3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWfkHMaEeeoYuc64YE22w" name="Clear(flag)" structuralFeature="_2qV3LnMaEeeoYuc64YE22w">
                  <object xmi:id="_2qWfkXMaEeeoYuc64YE22w" name="Clear(flag).object" incoming="_2qWfhnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfknMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfk3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWflHMaEeeoYuc64YE22w" name="Clear(flag).result" outgoing="_2qWfiHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWflXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWflnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWfl3MaEeeoYuc64YE22w" name="Fork(LeftHandSide@67817beb)" incoming="_2qWfiXMaEeeoYuc64YE22w" outgoing="_2qWfh3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfmHMaEeeoYuc64YE22w" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfmXMaEeeoYuc64YE22w" target="_2qWfpHMaEeeoYuc64YE22w" source="_2qWfmnMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWfmnMaEeeoYuc64YE22w" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_2qWfh3MaEeeoYuc64YE22w" outgoing="_2qWfmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfm3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfnHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWfnXMaEeeoYuc64YE22w" name="Write(flag)" structuralFeature="_2qV3LnMaEeeoYuc64YE22w" isReplaceAll="true">
                    <object xmi:id="_2qWfnnMaEeeoYuc64YE22w" name="Write(flag).object" incoming="_2qWfiHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfn3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfoHMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qWfoXMaEeeoYuc64YE22w" name="Write(flag).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfonMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfo3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2qWfpHMaEeeoYuc64YE22w" name="Write(flag).value" incoming="_2qWfmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfpXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfpnMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfp3MaEeeoYuc64YE22w" name="RightHandSide@4977b08d" outgoing="_2qWfinMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWfqHMaEeeoYuc64YE22w" name="Value(false)">
                    <result xmi:id="_2qWfqXMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_2qWfiXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfqnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfq3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2qWfrHMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfrXMaEeeoYuc64YE22w" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfrnMaEeeoYuc64YE22w" target="_2qWfsnMaEeeoYuc64YE22w" source="_2qWfr3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfr3MaEeeoYuc64YE22w" name="Passthru(Fork(sig)).input" incoming="_2qV3W3MaEeeoYuc64YE22w" outgoing="_2qWfrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfsHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfsXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfsnMaEeeoYuc64YE22w" name="Passthru(Fork(sig)).output" incoming="_2qWfrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfs3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWftHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWftXMaEeeoYuc64YE22w" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWftnMaEeeoYuc64YE22w" target="_2qWfunMaEeeoYuc64YE22w" source="_2qWft3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWft3MaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).input" incoming="_2qV3XHMaEeeoYuc64YE22w" outgoing="_2qWftnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfuHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfuXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfunMaEeeoYuc64YE22w" name="Passthru(Fork(terminate)).output" incoming="_2qWftnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfu3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfvHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfvXMaEeeoYuc64YE22w" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfvnMaEeeoYuc64YE22w" target="_2qWfwnMaEeeoYuc64YE22w" source="_2qWfv3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfv3MaEeeoYuc64YE22w" name="Passthru(Fork(s)).input" incoming="_2qV3XXMaEeeoYuc64YE22w" outgoing="_2qWfvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfwHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfwXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfwnMaEeeoYuc64YE22w" name="Passthru(Fork(s)).output" incoming="_2qWfvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfw3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfxHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfxXMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfxnMaEeeoYuc64YE22w" target="_2qWfynMaEeeoYuc64YE22w" source="_2qWfx3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfx3MaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2qV3XnMaEeeoYuc64YE22w" outgoing="_2qWfxnMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfyHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfyXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWfynMaEeeoYuc64YE22w" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2qWfxnMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWfy3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWfzHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWfzXMaEeeoYuc64YE22w" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWfznMaEeeoYuc64YE22w" target="_2qWf0nMaEeeoYuc64YE22w" source="_2qWfz3MaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWfz3MaEeeoYuc64YE22w" name="Passthru(Fork(s1)).input" incoming="_2qV3X3MaEeeoYuc64YE22w" outgoing="_2qWfznMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf0HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf0XMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2qWf0nMaEeeoYuc64YE22w" name="Passthru(Fork(s1)).output" incoming="_2qWfznMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf03MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf1HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_2qWf1XMaEeeoYuc64YE22w" body="_2qWfJnMaEeeoYuc64YE22w _2qWfK3MaEeeoYuc64YE22w _2qWfU3MaEeeoYuc64YE22w _2qWfW3MaEeeoYuc64YE22w _2qWfY3MaEeeoYuc64YE22w _2qWfa3MaEeeoYuc64YE22w _2qWfc3MaEeeoYuc64YE22w" bodyOutput="_2qWfWHMaEeeoYuc64YE22w _2qWfYHMaEeeoYuc64YE22w _2qWfaHMaEeeoYuc64YE22w _2qWfcHMaEeeoYuc64YE22w _2qWfeHMaEeeoYuc64YE22w" decider="_2qWfInMaEeeoYuc64YE22w" successorClause="_2qWf1nMaEeeoYuc64YE22w" test="_2qWfIXMaEeeoYuc64YE22w"/>
              <clause xmi:id="_2qWf1nMaEeeoYuc64YE22w" body="_2qWfgHMaEeeoYuc64YE22w _2qWfhXMaEeeoYuc64YE22w _2qWfrXMaEeeoYuc64YE22w _2qWftXMaEeeoYuc64YE22w _2qWfvXMaEeeoYuc64YE22w _2qWfxXMaEeeoYuc64YE22w _2qWfzXMaEeeoYuc64YE22w" bodyOutput="_2qWfsnMaEeeoYuc64YE22w _2qWfunMaEeeoYuc64YE22w _2qWfwnMaEeeoYuc64YE22w _2qWfynMaEeeoYuc64YE22w _2qWf0nMaEeeoYuc64YE22w" decider="_2qWffHMaEeeoYuc64YE22w" predecessorClause="_2qWf1XMaEeeoYuc64YE22w" test="_2qWfe3MaEeeoYuc64YE22w"/>
              <result xmi:id="_2qWf13MaEeeoYuc64YE22w" name="IfStatement@5d2fdc72.result(sig)" outgoing="_2qV3UXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf2HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf2XMaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWf2nMaEeeoYuc64YE22w" name="IfStatement@5d2fdc72.result(terminate)" outgoing="_2qV3UnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf23MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf3HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWf3XMaEeeoYuc64YE22w" name="IfStatement@5d2fdc72.result(s)" outgoing="_2qV3U3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf3nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf33MaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWf4HMaEeeoYuc64YE22w" name="IfStatement@5d2fdc72.result(arrival3)" outgoing="_2qV3VHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf4XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf4nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <result xmi:id="_2qWf43MaEeeoYuc64YE22w" name="IfStatement@5d2fdc72.result(s1)" outgoing="_2qV3VXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf5HMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf5XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWf5nMaEeeoYuc64YE22w" name="Fork(sig)" incoming="_2qV3UXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWf53MaEeeoYuc64YE22w" name="Fork(terminate)" incoming="_2qV3UnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWf6HMaEeeoYuc64YE22w" name="Fork(s)" incoming="_2qV3U3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWf6XMaEeeoYuc64YE22w" name="Fork(arrival3)" incoming="_2qV3VHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWf6nMaEeeoYuc64YE22w" name="Fork(s1)" incoming="_2qV3VXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWf63MaEeeoYuc64YE22w" name="AcceptStatement@3a2c7007" incoming="_2qV3YXMaEeeoYuc64YE22w" outgoing="_2qV3Y3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWf7HMaEeeoYuc64YE22w" target="_2qWf73MaEeeoYuc64YE22w" source="_2qWf9HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWf7XMaEeeoYuc64YE22w" target="_2qWf7nMaEeeoYuc64YE22w" source="_2qWf8HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWf7nMaEeeoYuc64YE22w" name="Fork(Accept(SignalTermination).result)" incoming="_2qWf7XMaEeeoYuc64YE22w" outgoing="_2qV3YnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWf73MaEeeoYuc64YE22w" name="Accept(SignalTermination)" incoming="_2qWf7HMaEeeoYuc64YE22w">
                <result xmi:id="_2qWf8HMaEeeoYuc64YE22w" name="Accept(SignalTermination).result" outgoing="_2qWf7XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf8XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf8nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <trigger xmi:id="_2qWf83MaEeeoYuc64YE22w" event="_2qXHCXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qWf9HMaEeeoYuc64YE22w" name="Initial(Accept(SignalTermination))" outgoing="_2qWf7HMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWf9XMaEeeoYuc64YE22w" name="ExpressionStatement@3ac18729" incoming="_2qV3Y3MaEeeoYuc64YE22w" outgoing="_2qV3ZHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWf9nMaEeeoYuc64YE22w" target="_2qWgAHMaEeeoYuc64YE22w" source="_2qWf_HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWf93MaEeeoYuc64YE22w" target="_2qWgCXMaEeeoYuc64YE22w" source="_2qWgBnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWf-HMaEeeoYuc64YE22w" target="_2qWgDXMaEeeoYuc64YE22w" source="_2qWgA3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWf-XMaEeeoYuc64YE22w" target="_2qWf-nMaEeeoYuc64YE22w" source="_2qWgFnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWf-nMaEeeoYuc64YE22w" name="Expression(LeftHandSide@575357d8)" incoming="_2qWf-XMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWf-3MaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_2qWf_HMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWf9nMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWf_XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWf_nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWf_3MaEeeoYuc64YE22w" name="Clear(sig1)" structuralFeature="_2qV3HHMaEeeoYuc64YE22w">
                <object xmi:id="_2qWgAHMaEeeoYuc64YE22w" name="Clear(sig1).object" incoming="_2qWf9nMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgAXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgAnMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qWgA3MaEeeoYuc64YE22w" name="Clear(sig1).result" outgoing="_2qWf-HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgBHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgBXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWgBnMaEeeoYuc64YE22w" name="Fork(LeftHandSide@575357d8)" incoming="_2qV3YnMaEeeoYuc64YE22w" outgoing="_2qWf93MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgB3MaEeeoYuc64YE22w" name="WriteAll(MyTest::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgCHMaEeeoYuc64YE22w" target="_2qWgE3MaEeeoYuc64YE22w" source="_2qWgCXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qWgCXMaEeeoYuc64YE22w" name="WriteAll(MyTest::sig1).input(MyTest::sig1)" incoming="_2qWf93MaEeeoYuc64YE22w" outgoing="_2qWgCHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgCnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgC3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWgDHMaEeeoYuc64YE22w" name="Write(sig1)" structuralFeature="_2qV3HHMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qWgDXMaEeeoYuc64YE22w" name="Write(sig1).object" incoming="_2qWf-HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgDnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgD3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWgEHMaEeeoYuc64YE22w" name="Write(sig1).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgEXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgEnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qWgE3MaEeeoYuc64YE22w" name="Write(sig1).value" incoming="_2qWgCHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgFHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgFXMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgFnMaEeeoYuc64YE22w" name="RightHandSide@785142f0" outgoing="_2qWf-XMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgF3MaEeeoYuc64YE22w" name="ExpressionStatement@68c16b4a" incoming="_2qV3ZHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgGHMaEeeoYuc64YE22w" target="_2qWgHHMaEeeoYuc64YE22w" source="_2qWgJ3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgGXMaEeeoYuc64YE22w" target="_2qWgKnMaEeeoYuc64YE22w" source="_2qWgIHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgGnMaEeeoYuc64YE22w" target="_2qWgJHMaEeeoYuc64YE22w" source="_2qWgKnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qWgG3MaEeeoYuc64YE22w" name="SendSignal(Continue)" signal="_2qXG-nMaEeeoYuc64YE22w">
                <target xmi:id="_2qWgHHMaEeeoYuc64YE22w" name="SendSignal(Continue).target" incoming="_2qWgGHMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgHXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgHnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWgH3MaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2qWgIHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWgGXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgIXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgInMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qWgI3MaEeeoYuc64YE22w" name="Read(tester)" structuralFeature="_2qV3MXMaEeeoYuc64YE22w">
                <object xmi:id="_2qWgJHMaEeeoYuc64YE22w" name="Read(tester).object" incoming="_2qWgGnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgJXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgJnMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qWgJ3MaEeeoYuc64YE22w" name="Read(tester).result" outgoing="_2qWgGHMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgKHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgKXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWgKnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qWgGXMaEeeoYuc64YE22w" outgoing="_2qWgGnMaEeeoYuc64YE22w"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qWgK3MaEeeoYuc64YE22w" name="MyTest$method$1" specification="_2qWg9XMaEeeoYuc64YE22w" node="_2qWgN3MaEeeoYuc64YE22w _2qWgOnMaEeeoYuc64YE22w _2qWgOHMaEeeoYuc64YE22w _2qWgQHMaEeeoYuc64YE22w _2qWgOXMaEeeoYuc64YE22w" group="_2qWgOnMaEeeoYuc64YE22w _2qWgQHMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qWgLHMaEeeoYuc64YE22w" name="tester" type="_2qWhAXMaEeeoYuc64YE22w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgLXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgLnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2qWgL3MaEeeoYuc64YE22w" name="" type="_2qV3FHMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgMHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgMXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgMnMaEeeoYuc64YE22w" target="_2qWgPHMaEeeoYuc64YE22w" source="_2qWgN3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgM3MaEeeoYuc64YE22w" target="_2qWgXnMaEeeoYuc64YE22w" source="_2qWgP3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgNHMaEeeoYuc64YE22w" target="_2qWgOHMaEeeoYuc64YE22w" source="_2qWgc3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgNXMaEeeoYuc64YE22w" target="_2qWgOXMaEeeoYuc64YE22w" source="_2qWgOnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgNnMaEeeoYuc64YE22w" target="_2qWgQHMaEeeoYuc64YE22w" source="_2qWgOXMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2qWgOnMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_2qWgNXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgO3MaEeeoYuc64YE22w" target="_2qWgP3MaEeeoYuc64YE22w" source="_2qWgPHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qWgPHMaEeeoYuc64YE22w" name="Input(tester)" incoming="_2qWgMnMaEeeoYuc64YE22w" outgoing="_2qWgO3MaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgPXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgPnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWgP3MaEeeoYuc64YE22w" name="Fork(tester)" incoming="_2qWgO3MaEeeoYuc64YE22w" outgoing="_2qWgM3MaEeeoYuc64YE22w"/>
          </structuredNode>
          <structuredNode xmi:id="_2qWgQHMaEeeoYuc64YE22w" name="Body(MyTest$method$1)" incoming="_2qWgNnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgQXMaEeeoYuc64YE22w" target="_2qWgc3MaEeeoYuc64YE22w" source="_2qWgcHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgQnMaEeeoYuc64YE22w" target="_2qWgdXMaEeeoYuc64YE22w" source="_2qWgc3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgQ3MaEeeoYuc64YE22w" target="_2qWgTHMaEeeoYuc64YE22w" source="_2qWgdHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgRHMaEeeoYuc64YE22w" target="_2qWgeXMaEeeoYuc64YE22w" source="_2qWgc3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgRXMaEeeoYuc64YE22w" target="_2qWggHMaEeeoYuc64YE22w" source="_2qWgfHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgRnMaEeeoYuc64YE22w" target="_2qWgjHMaEeeoYuc64YE22w" source="_2qWgg3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgR3MaEeeoYuc64YE22w" target="_2qWgknMaEeeoYuc64YE22w" source="_2qWgh3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgSHMaEeeoYuc64YE22w" target="_2qWglnMaEeeoYuc64YE22w" source="_2qWglXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgSXMaEeeoYuc64YE22w" target="_2qWglnMaEeeoYuc64YE22w" source="_2qWgj3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgSnMaEeeoYuc64YE22w" target="_2qWgdHMaEeeoYuc64YE22w" source="_2qWglnMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qWgS3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgTHMaEeeoYuc64YE22w" name="Body" incoming="_2qWgQ3MaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgTXMaEeeoYuc64YE22w" name="ExpressionStatement@2177317a">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgTnMaEeeoYuc64YE22w" target="_2qWgWHMaEeeoYuc64YE22w" source="_2qWgVHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgT3MaEeeoYuc64YE22w" target="_2qWgYXMaEeeoYuc64YE22w" source="_2qWgXnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgUHMaEeeoYuc64YE22w" target="_2qWgZXMaEeeoYuc64YE22w" source="_2qWgW3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgUXMaEeeoYuc64YE22w" target="_2qWgUnMaEeeoYuc64YE22w" source="_2qWgbnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgUnMaEeeoYuc64YE22w" name="Expression(LeftHandSide@7d5ed984)" incoming="_2qWgUXMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWgU3MaEeeoYuc64YE22w" name="ReadSelf">
                    <result xmi:id="_2qWgVHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWgTnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgVXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgVnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qWgV3MaEeeoYuc64YE22w" name="Clear(tester)" structuralFeature="_2qV3MXMaEeeoYuc64YE22w">
                  <object xmi:id="_2qWgWHMaEeeoYuc64YE22w" name="Clear(tester).object" incoming="_2qWgTnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgWXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgWnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWgW3MaEeeoYuc64YE22w" name="Clear(tester).result" outgoing="_2qWgUHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgXHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgXXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qWgXnMaEeeoYuc64YE22w" name="Fork(LeftHandSide@7d5ed984)" incoming="_2qWgM3MaEeeoYuc64YE22w" outgoing="_2qWgT3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgX3MaEeeoYuc64YE22w" name="WriteAll(MyTest::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgYHMaEeeoYuc64YE22w" target="_2qWga3MaEeeoYuc64YE22w" source="_2qWgYXMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qWgYXMaEeeoYuc64YE22w" name="WriteAll(MyTest::tester).input(MyTest::tester)" incoming="_2qWgT3MaEeeoYuc64YE22w" outgoing="_2qWgYHMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgYnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgY3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWgZHMaEeeoYuc64YE22w" name="Write(tester)" structuralFeature="_2qV3MXMaEeeoYuc64YE22w" isReplaceAll="true">
                    <object xmi:id="_2qWgZXMaEeeoYuc64YE22w" name="Write(tester).object" incoming="_2qWgUHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgZnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgZ3MaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qWgaHMaEeeoYuc64YE22w" name="Write(tester).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgaXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWganMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2qWga3MaEeeoYuc64YE22w" name="Write(tester).value" incoming="_2qWgYHMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgbHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgbXMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgbnMaEeeoYuc64YE22w" name="RightHandSide@84fba2c" outgoing="_2qWgUXMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWgb3MaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qWgcHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWgQXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgcXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgcnMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWgc3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qWgQXMaEeeoYuc64YE22w" outgoing="_2qWgNHMaEeeoYuc64YE22w _2qWgQnMaEeeoYuc64YE22w _2qWgRHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2qWgdHMaEeeoYuc64YE22w" name="Call(MyTest$initialization$1)" incoming="_2qWgSnMaEeeoYuc64YE22w" outgoing="_2qWgQ3MaEeeoYuc64YE22w" operation="_2qWg9HMaEeeoYuc64YE22w">
              <target xmi:id="_2qWgdXMaEeeoYuc64YE22w" name="Call(MyTest$initialization$1).target" incoming="_2qWgQnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgdnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgd3MaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qWgeHMaEeeoYuc64YE22w" name="Read(MyTest$initializationFlag$1)" structuralFeature="_2qV3FnMaEeeoYuc64YE22w">
              <object xmi:id="_2qWgeXMaEeeoYuc64YE22w" name="Read(MyTest$initializationFlag$1).object" incoming="_2qWgRHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgenMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWge3MaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qWgfHMaEeeoYuc64YE22w" name="Read(MyTest$initializationFlag$1).result" outgoing="_2qWgRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgfXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgfnMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWgf3MaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qWggHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qWgRXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWggXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWggnMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qWgg3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qWgRnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWghHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWghXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWghnMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qWgh3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qWgR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgiHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgiXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qWginMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qWgi3MaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qWgjHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qWgRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgjXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgjnMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qWgj3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qWgSXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgkHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgkXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qWgknMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qWgR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgk3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWglHMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qWglXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qWgSHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qWglnMaEeeoYuc64YE22w" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_2qWgSHMaEeeoYuc64YE22w _2qWgSXMaEeeoYuc64YE22w" outgoing="_2qWgSnMaEeeoYuc64YE22w" decisionInputFlow="_2qWgSXMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qWgN3MaEeeoYuc64YE22w" name="Input(tester)" outgoing="_2qWgMnMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" parameter="_2qWgLHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qWgOHMaEeeoYuc64YE22w" name="Return" incoming="_2qWgNHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" parameter="_2qWgL3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:JoinNode" xmi:id="_2qWgOXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qWgNXMaEeeoYuc64YE22w" outgoing="_2qWgNnMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qWgl3MaEeeoYuc64YE22w" name="destroy$method$1" specification="_2qWg_HMaEeeoYuc64YE22w" node="_2qWgmHMaEeeoYuc64YE22w" group="_2qWgmHMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qWgmHMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qWgmXMaEeeoYuc64YE22w" name="MyTest$initialization$1" specification="_2qWg9HMaEeeoYuc64YE22w" node="_2qWgmnMaEeeoYuc64YE22w" group="_2qWgmnMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qWgmnMaEeeoYuc64YE22w" name="Body(MyTest$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgm3MaEeeoYuc64YE22w" target="_2qWgq3MaEeeoYuc64YE22w" source="_2qWgqHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgnHMaEeeoYuc64YE22w" target="_2qWgsHMaEeeoYuc64YE22w" source="_2qWgq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgnXMaEeeoYuc64YE22w" target="_2qWgu3MaEeeoYuc64YE22w" source="_2qWgq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgnnMaEeeoYuc64YE22w" target="_2qWgzHMaEeeoYuc64YE22w" source="_2qWgq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgn3MaEeeoYuc64YE22w" target="_2qWg1nMaEeeoYuc64YE22w" source="_2qWgq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgoHMaEeeoYuc64YE22w" target="_2qWg3XMaEeeoYuc64YE22w" source="_2qWg2XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgoXMaEeeoYuc64YE22w" target="_2qWg6XMaEeeoYuc64YE22w" source="_2qWg4HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgonMaEeeoYuc64YE22w" target="_2qWg73MaEeeoYuc64YE22w" source="_2qWg5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgo3MaEeeoYuc64YE22w" target="_2qWg83MaEeeoYuc64YE22w" source="_2qWg8nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgpHMaEeeoYuc64YE22w" target="_2qWg83MaEeeoYuc64YE22w" source="_2qWg7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgpXMaEeeoYuc64YE22w" target="_2qWgrHMaEeeoYuc64YE22w" source="_2qWg83MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qWgpnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWgp3MaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qWgqHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWgm3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgqXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgqnMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qWgq3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qWgm3MaEeeoYuc64YE22w" outgoing="_2qWgnHMaEeeoYuc64YE22w _2qWgnXMaEeeoYuc64YE22w _2qWgnnMaEeeoYuc64YE22w _2qWgn3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgrHMaEeeoYuc64YE22w" name="Initialization" incoming="_2qWgpXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgrXMaEeeoYuc64YE22w" target="_2qWgs3MaEeeoYuc64YE22w" source="_2qWgr3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWgrnMaEeeoYuc64YE22w" target="_2qWgxHMaEeeoYuc64YE22w" source="_2qWgs3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2qWgr3MaEeeoYuc64YE22w" name="Call(Super$initialization$1)" outgoing="_2qWgrXMaEeeoYuc64YE22w" operation="_2qV3CHMaEeeoYuc64YE22w">
                <target xmi:id="_2qWgsHMaEeeoYuc64YE22w" name="Call(Super$initialization$1).target" incoming="_2qWgnHMaEeeoYuc64YE22w" type="_2qV2hXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgsXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgsnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgs3MaEeeoYuc64YE22w" name="Initialize(count)" incoming="_2qWgrXMaEeeoYuc64YE22w" outgoing="_2qWgrnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgtHMaEeeoYuc64YE22w" target="_2qWgwXMaEeeoYuc64YE22w" source="_2qWgtnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWgtXMaEeeoYuc64YE22w" name="Value(0)">
                  <result xmi:id="_2qWgtnMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qWgtHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgt3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWguHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qWguXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWgunMaEeeoYuc64YE22w" name="Write(count)" structuralFeature="_2qV3KHMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qWgu3MaEeeoYuc64YE22w" name="Write(count).object" incoming="_2qWgnXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgvHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgvXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWgvnMaEeeoYuc64YE22w" name="Write(count).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgv3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgwHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qWgwXMaEeeoYuc64YE22w" name="Write(count).value" incoming="_2qWgtHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgwnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgw3MaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWgxHMaEeeoYuc64YE22w" name="Set(initializationFlag)" incoming="_2qWgrnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWgxXMaEeeoYuc64YE22w" target="_2qWg0nMaEeeoYuc64YE22w" source="_2qWgx3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWgxnMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_2qWgx3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qWgxXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgyHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgyXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2qWgynMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qWgy3MaEeeoYuc64YE22w" name="Write(MyTest$initializationFlag$1)" structuralFeature="_2qV3FnMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qWgzHMaEeeoYuc64YE22w" name="Write(MyTest$initializationFlag$1).object" incoming="_2qWgnnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWgzXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWgznMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qWgz3MaEeeoYuc64YE22w" name="Write(MyTest$initializationFlag$1).result" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg0HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg0XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qWg0nMaEeeoYuc64YE22w" name="Write(MyTest$initializationFlag$1).value" incoming="_2qWgxXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg03MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg1HMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qWg1XMaEeeoYuc64YE22w" name="Read(MyTest$initializationFlag$1)" structuralFeature="_2qV3FnMaEeeoYuc64YE22w">
              <object xmi:id="_2qWg1nMaEeeoYuc64YE22w" name="Read(MyTest$initializationFlag$1).object" incoming="_2qWgn3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg13MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg2HMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qWg2XMaEeeoYuc64YE22w" name="Read(MyTest$initializationFlag$1).result" outgoing="_2qWgoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg2nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg23MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qWg3HMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qWg3XMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qWgoHMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg3nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg33MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qWg4HMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qWgoXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg4XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg4nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qWg43MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qWg5HMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qWgonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg5XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg5nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qWg53MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qWg6HMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qWg6XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qWgoXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg6nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg63MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qWg7HMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qWgpHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg7XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg7nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qWg73MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qWgonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg8HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg8XMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qWg8nMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qWgo3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qWg83MaEeeoYuc64YE22w" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_2qWgo3MaEeeoYuc64YE22w _2qWgpHMaEeeoYuc64YE22w" outgoing="_2qWgpXMaEeeoYuc64YE22w" decisionInputFlow="_2qWgpHMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2qWg9HMaEeeoYuc64YE22w" name="MyTest$initialization$1" visibility="protected" method="_2qWgmXMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_2qWg9XMaEeeoYuc64YE22w" name="MyTest" visibility="public" method="_2qWgK3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qWg9nMaEeeoYuc64YE22w" name="tester" visibility="package" type="_2qWhAXMaEeeoYuc64YE22w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg93MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg-HMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2qWg-XMaEeeoYuc64YE22w" name="" visibility="package" type="_2qV3FHMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg-nMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWg-3MaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2qWg_HMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2qWgl3MaEeeoYuc64YE22w" redefinedOperation="_2qV3DXMaEeeoYuc64YE22w"/>
        <ownedReception xmi:id="_2qWg_XMaEeeoYuc64YE22w" name="SignalNewArrival" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qWg_nMaEeeoYuc64YE22w" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWg_3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWhAHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedReception>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2qWhAXMaEeeoYuc64YE22w" name="TestRunner" visibility="public" classifierBehavior="_2qWhCHMaEeeoYuc64YE22w" isActive="true">
        <ownedAttribute xmi:id="_2qWhAnMaEeeoYuc64YE22w" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWhA3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWhBHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2qWhBXMaEeeoYuc64YE22w" name="outer" visibility="private" type="_2qXHDHMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWhBnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWhB3MaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qWhCHMaEeeoYuc64YE22w" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_2qWhCXMaEeeoYuc64YE22w" group="_2qWhCXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qWhCXMaEeeoYuc64YE22w" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhCnMaEeeoYuc64YE22w" target="_2qWhJHMaEeeoYuc64YE22w" source="_2qWhH3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhC3MaEeeoYuc64YE22w" target="_2qWhM3MaEeeoYuc64YE22w" source="_2qWhJHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhDHMaEeeoYuc64YE22w" target="_2qXDrXMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhDXMaEeeoYuc64YE22w" target="_2qXDk3MaEeeoYuc64YE22w" source="_2qWhM3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhDnMaEeeoYuc64YE22w" target="_2qXD0nMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhD3MaEeeoYuc64YE22w" target="_2qXDtXMaEeeoYuc64YE22w" source="_2qXDk3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhEHMaEeeoYuc64YE22w" target="_2qXD8XMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhEXMaEeeoYuc64YE22w" target="_2qXD2HMaEeeoYuc64YE22w" source="_2qXDtXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhEnMaEeeoYuc64YE22w" target="_2qXEEXMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhE3MaEeeoYuc64YE22w" target="_2qXD8nMaEeeoYuc64YE22w" source="_2qXD2HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhFHMaEeeoYuc64YE22w" target="_2qXEVnMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhFXMaEeeoYuc64YE22w" target="_2qXEH3MaEeeoYuc64YE22w" source="_2qXD8nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhFnMaEeeoYuc64YE22w" target="_2qXEuXMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhF3MaEeeoYuc64YE22w" target="_2qXEgnMaEeeoYuc64YE22w" source="_2qXEH3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhGHMaEeeoYuc64YE22w" target="_2qXFAnMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhGXMaEeeoYuc64YE22w" target="_2qXE5XMaEeeoYuc64YE22w" source="_2qXEgnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhGnMaEeeoYuc64YE22w" target="_2qXFIXMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhG3MaEeeoYuc64YE22w" target="_2qXFCHMaEeeoYuc64YE22w" source="_2qXE5XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhHHMaEeeoYuc64YE22w" target="_2qXFPHMaEeeoYuc64YE22w" source="_2qWhMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhHXMaEeeoYuc64YE22w" target="_2qXFInMaEeeoYuc64YE22w" source="_2qXFCHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhHnMaEeeoYuc64YE22w" target="_2qXFRHMaEeeoYuc64YE22w" source="_2qXFInMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWhH3MaEeeoYuc64YE22w" name="AcceptStatement@55a048d" outgoing="_2qWhCnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhIHMaEeeoYuc64YE22w" target="_2qWhIXMaEeeoYuc64YE22w" source="_2qWhI3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qWhIXMaEeeoYuc64YE22w" name="Accept(Start)" incoming="_2qWhIHMaEeeoYuc64YE22w">
                <trigger xmi:id="_2qWhInMaEeeoYuc64YE22w" event="_2qXHCnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qWhI3MaEeeoYuc64YE22w" name="Initial(Accept(Start))" outgoing="_2qWhIHMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWhJHMaEeeoYuc64YE22w" name="ExpressionStatement@679d2905" incoming="_2qWhCnMaEeeoYuc64YE22w" outgoing="_2qWhC3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhJXMaEeeoYuc64YE22w" target="_2qWhMnMaEeeoYuc64YE22w" source="_2qWhKHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qWhJnMaEeeoYuc64YE22w" target="_2qWhK3MaEeeoYuc64YE22w" source="_2qWhL3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2qWhJ3MaEeeoYuc64YE22w" name="Call(run)" operation="_2qXG9HMaEeeoYuc64YE22w">
                <result xmi:id="_2qWhKHMaEeeoYuc64YE22w" name="Call(run).result(test)" outgoing="_2qWhJXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWhKXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWhKnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_2qWhK3MaEeeoYuc64YE22w" name="Call(run).target" incoming="_2qWhJnMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWhLHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWhLXMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2qWhLnMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2qWhL3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qWhJnMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qWhMHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qWhMXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qWhMnMaEeeoYuc64YE22w" name="Fork(test)@1958fef1" incoming="_2qWhJXMaEeeoYuc64YE22w" outgoing="_2qWhDHMaEeeoYuc64YE22w _2qWhDnMaEeeoYuc64YE22w _2qWhEHMaEeeoYuc64YE22w _2qWhEnMaEeeoYuc64YE22w _2qWhFHMaEeeoYuc64YE22w _2qWhFnMaEeeoYuc64YE22w _2qWhGHMaEeeoYuc64YE22w _2qWhGnMaEeeoYuc64YE22w _2qWhHHMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qWhM3MaEeeoYuc64YE22w" name="AcceptStatement@bbd4eb8" incoming="_2qWhC3MaEeeoYuc64YE22w" outgoing="_2qWhDXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qWhNHMaEeeoYuc64YE22w" target="_2qXDkHMaEeeoYuc64YE22w" source="_2qXDknMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2qXDkHMaEeeoYuc64YE22w" name="Accept(Continue)" incoming="_2qWhNHMaEeeoYuc64YE22w">
                <trigger xmi:id="_2qXDkXMaEeeoYuc64YE22w" event="_2qXHC3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qXDknMaEeeoYuc64YE22w" name="Initial(Accept(Continue))" outgoing="_2qWhNHMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXDk3MaEeeoYuc64YE22w" name="ExpressionStatement@11e57b09" incoming="_2qWhDXMaEeeoYuc64YE22w" outgoing="_2qWhD3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDlHMaEeeoYuc64YE22w" target="_2qXDmHMaEeeoYuc64YE22w" source="_2qXDonMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDlXMaEeeoYuc64YE22w" target="_2qXDm3MaEeeoYuc64YE22w" source="_2qXDsnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXDlnMaEeeoYuc64YE22w" target="_2qXDl3MaEeeoYuc64YE22w" source="_2qXDnnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXDl3MaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2qXDlnMaEeeoYuc64YE22w" behavior="_2qXrVHMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXDmHMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2qXDlHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDmXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDmnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXDm3MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2qXDlXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDnHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDnXMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXDnnMaEeeoYuc64YE22w" name="Tuple@2fc4e8e4" outgoing="_2qXDlnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDn3MaEeeoYuc64YE22w" target="_2qXDp3MaEeeoYuc64YE22w" source="_2qXDrXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDoHMaEeeoYuc64YE22w" target="_2qXDr3MaEeeoYuc64YE22w" source="_2qXDqnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXDoXMaEeeoYuc64YE22w" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_2qXDonMaEeeoYuc64YE22w" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_2qXDlHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDo3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDpHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXDpXMaEeeoYuc64YE22w" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXDpnMaEeeoYuc64YE22w" name="Read(sig)" structuralFeature="_2qV3GXMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXDp3MaEeeoYuc64YE22w" name="Read(sig).object" incoming="_2qXDn3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDqHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDqXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXDqnMaEeeoYuc64YE22w" name="Read(sig).result" outgoing="_2qXDoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDq3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDrHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXDrXMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhDHMaEeeoYuc64YE22w" outgoing="_2qXDn3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qXDrnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2qV3EnMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXDr3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2qXDoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDsHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDsXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXDsnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2qXDlXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDs3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDtHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXDtXMaEeeoYuc64YE22w" name="ExpressionStatement@6e7881f4" incoming="_2qWhD3MaEeeoYuc64YE22w" outgoing="_2qWhEXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDtnMaEeeoYuc64YE22w" target="_2qXDu3MaEeeoYuc64YE22w" source="_2qXDx3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDt3MaEeeoYuc64YE22w" target="_2qXDvnMaEeeoYuc64YE22w" source="_2qXDz3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDuHMaEeeoYuc64YE22w" target="_2qXDwXMaEeeoYuc64YE22w" source="_2qXD1HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXDuXMaEeeoYuc64YE22w" target="_2qXDunMaEeeoYuc64YE22w" source="_2qXDxHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXDunMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2qXDuXMaEeeoYuc64YE22w" behavior="_2qXr-XMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXDu3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2qXDtnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDvHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDvXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXDvnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2qXDt3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDv3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDwHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXDwXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2qXDuHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDwnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDw3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXDxHMaEeeoYuc64YE22w" name="Tuple@d238820" outgoing="_2qXDuXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXDxXMaEeeoYuc64YE22w" target="_2qXDzHMaEeeoYuc64YE22w" source="_2qXD0nMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXDxnMaEeeoYuc64YE22w" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_2qXDx3MaEeeoYuc64YE22w" name="Value(&quot;test.name&quot;).result" outgoing="_2qXDtnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDyHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDyXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXDynMaEeeoYuc64YE22w" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXDy3MaEeeoYuc64YE22w" name="Read(name)" structuralFeature="_2qV3H3MaEeeoYuc64YE22w">
                  <object xmi:id="_2qXDzHMaEeeoYuc64YE22w" name="Read(name).object" incoming="_2qXDxXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXDzXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXDznMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXDz3MaEeeoYuc64YE22w" name="Read(name).result" outgoing="_2qXDt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD0HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD0XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXD0nMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhDnMaEeeoYuc64YE22w" outgoing="_2qXDxXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXD03MaEeeoYuc64YE22w" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_2qXD1HMaEeeoYuc64YE22w" name="Value(&quot;Arrival1&quot;).result" outgoing="_2qXDuHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD1XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD1nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXD13MaEeeoYuc64YE22w" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXD2HMaEeeoYuc64YE22w" name="ExpressionStatement@682de073" incoming="_2qWhEXMaEeeoYuc64YE22w" outgoing="_2qWhE3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXD2XMaEeeoYuc64YE22w" target="_2qXD3XMaEeeoYuc64YE22w" source="_2qXD5nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXD2nMaEeeoYuc64YE22w" target="_2qXD4HMaEeeoYuc64YE22w" source="_2qXD7nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXD23MaEeeoYuc64YE22w" target="_2qXD3HMaEeeoYuc64YE22w" source="_2qXD43MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXD3HMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_2qXD23MaEeeoYuc64YE22w" behavior="_2qXuE3MaEeeoYuc64YE22w">
                <argument xmi:id="_2qXD3XMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_2qXD2XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD3nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD33MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXD4HMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_2qXD2nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD4XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD4nMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXD43MaEeeoYuc64YE22w" name="Tuple@4375a4e0" outgoing="_2qXD23MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXD5HMaEeeoYuc64YE22w" target="_2qXD63MaEeeoYuc64YE22w" source="_2qXD8XMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXD5XMaEeeoYuc64YE22w" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_2qXD5nMaEeeoYuc64YE22w" name="Value(&quot;test.terminate&quot;).result" outgoing="_2qXD2XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD53MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD6HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXD6XMaEeeoYuc64YE22w" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXD6nMaEeeoYuc64YE22w" name="Read(terminate)" structuralFeature="_2qV3InMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXD63MaEeeoYuc64YE22w" name="Read(terminate).object" incoming="_2qXD5HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD7HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD7XMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXD7nMaEeeoYuc64YE22w" name="Read(terminate).result" outgoing="_2qXD2nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD73MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD8HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXD8XMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhEHMaEeeoYuc64YE22w" outgoing="_2qXD5HMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXD8nMaEeeoYuc64YE22w" name="ExpressionStatement@472a187c" incoming="_2qWhE3MaEeeoYuc64YE22w" outgoing="_2qWhFXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXD83MaEeeoYuc64YE22w" target="_2qXD-HMaEeeoYuc64YE22w" source="_2qXEBnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXD9HMaEeeoYuc64YE22w" target="_2qXD-3MaEeeoYuc64YE22w" source="_2qXEFnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXD9XMaEeeoYuc64YE22w" target="_2qXD_nMaEeeoYuc64YE22w" source="_2qXEG3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXD9nMaEeeoYuc64YE22w" target="_2qXD93MaEeeoYuc64YE22w" source="_2qXEAXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXD93MaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2qXD9nMaEeeoYuc64YE22w" behavior="_2qXr-XMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXD-HMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2qXD83MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD-XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD-nMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXD-3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2qXD9HMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD_HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXD_XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXD_nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2qXD9XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXD_3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEAHMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEAXMaEeeoYuc64YE22w" name="Tuple@60bdf917" outgoing="_2qXD9nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEAnMaEeeoYuc64YE22w" target="_2qXEC3MaEeeoYuc64YE22w" source="_2qXEEXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEA3MaEeeoYuc64YE22w" target="_2qXEGXMaEeeoYuc64YE22w" source="_2qXEDnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEBHMaEeeoYuc64YE22w" target="_2qXEE3MaEeeoYuc64YE22w" source="_2qXEGXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEBXMaEeeoYuc64YE22w" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_2qXEBnMaEeeoYuc64YE22w" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_2qXD83MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEB3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXECHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXECXMaEeeoYuc64YE22w" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXECnMaEeeoYuc64YE22w" name="Read(arrival)" structuralFeature="_2qV3JXMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXEC3MaEeeoYuc64YE22w" name="Read(arrival).object" incoming="_2qXEAnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEDHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEDXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXEDnMaEeeoYuc64YE22w" name="Read(arrival).result" outgoing="_2qXEA3MaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXED3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEEHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXEEXMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhEnMaEeeoYuc64YE22w" outgoing="_2qXEAnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXEEnMaEeeoYuc64YE22w" name="Read(name)" structuralFeature="_2qV3D3MaEeeoYuc64YE22w">
                  <object xmi:id="_2qXEE3MaEeeoYuc64YE22w" name="Read(name).object" incoming="_2qXEBHMaEeeoYuc64YE22w" type="_2qV3DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEFHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEFXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXEFnMaEeeoYuc64YE22w" name="Read(name).result" outgoing="_2qXD9HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEF3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEGHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXEGXMaEeeoYuc64YE22w" name="Fork(Read(arrival).result)" incoming="_2qXEA3MaEeeoYuc64YE22w" outgoing="_2qXEBHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEGnMaEeeoYuc64YE22w" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_2qXEG3MaEeeoYuc64YE22w" name="Value(&quot;Arrival3&quot;).result" outgoing="_2qXD9XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEHHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEHXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXEHnMaEeeoYuc64YE22w" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEH3MaEeeoYuc64YE22w" name="ExpressionStatement@76284a62" incoming="_2qWhFXMaEeeoYuc64YE22w" outgoing="_2qWhF3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEIHMaEeeoYuc64YE22w" target="_2qXEJHMaEeeoYuc64YE22w" source="_2qXEN3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEIXMaEeeoYuc64YE22w" target="_2qXEJ3MaEeeoYuc64YE22w" source="_2qXEgXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEInMaEeeoYuc64YE22w" target="_2qXEI3MaEeeoYuc64YE22w" source="_2qXEKnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXEI3MaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2qXEInMaEeeoYuc64YE22w" behavior="_2qXrVHMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXEJHMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2qXEIHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEJXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEJnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXEJ3MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2qXEIXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEKHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEKXMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEKnMaEeeoYuc64YE22w" name="Tuple@669d1b6c" outgoing="_2qXEInMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEK3MaEeeoYuc64YE22w" target="_2qXEY3MaEeeoYuc64YE22w" source="_2qXEPXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXELHMaEeeoYuc64YE22w" target="_2qXEYnMaEeeoYuc64YE22w" source="_2qXEO3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXELXMaEeeoYuc64YE22w" target="_2qXEb3MaEeeoYuc64YE22w" source="_2qXEPXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXELnMaEeeoYuc64YE22w" target="_2qXEgHMaEeeoYuc64YE22w" source="_2qXEf3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEL3MaEeeoYuc64YE22w" target="_2qXEgHMaEeeoYuc64YE22w" source="_2qXEZnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEMHMaEeeoYuc64YE22w" target="_2qXEaXMaEeeoYuc64YE22w" source="_2qXEgHMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXEMXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEMnMaEeeoYuc64YE22w" target="_2qXEdXMaEeeoYuc64YE22w" source="_2qXEgHMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXEM3MaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXENHMaEeeoYuc64YE22w" target="_2qXEgXMaEeeoYuc64YE22w" source="_2qXEa3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXENXMaEeeoYuc64YE22w" target="_2qXEgXMaEeeoYuc64YE22w" source="_2qXEd3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXENnMaEeeoYuc64YE22w" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_2qXEN3MaEeeoYuc64YE22w" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_2qXEIHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEOHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEOXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXEOnMaEeeoYuc64YE22w" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEO3MaEeeoYuc64YE22w" name="Operands(EqualityExpression@7f0223e3)" outgoing="_2qXELHMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEPHMaEeeoYuc64YE22w" target="_2qXEPXMaEeeoYuc64YE22w" source="_2qXESnMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_2qXEPXMaEeeoYuc64YE22w" name="Fork(x)@3786a8b4" incoming="_2qXEPHMaEeeoYuc64YE22w" outgoing="_2qXEK3MaEeeoYuc64YE22w _2qXELXMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEPnMaEeeoYuc64YE22w" name="RightHandSide@1cdd36c0">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEP3MaEeeoYuc64YE22w" target="_2qXERHMaEeeoYuc64YE22w" source="_2qXEU3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEQHMaEeeoYuc64YE22w" target="_2qXEXHMaEeeoYuc64YE22w" source="_2qXEWHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEQXMaEeeoYuc64YE22w" target="_2qXEQ3MaEeeoYuc64YE22w" source="_2qXETXMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEQnMaEeeoYuc64YE22w" target="_2qXER3MaEeeoYuc64YE22w" source="_2qXEXHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXEQ3MaEeeoYuc64YE22w" name="Call(At)" incoming="_2qXEQXMaEeeoYuc64YE22w">
                      <argument xmi:id="_2qXERHMaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_2qXEP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXERXMaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXERnMaEeeoYuc64YE22w" value="*"/>
                      </argument>
                      <argument xmi:id="_2qXER3MaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_2qXEQnMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXESHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXESXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2qXESnMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_2qXEPHMaEeeoYuc64YE22w">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXES3MaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXETHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXETXMaEeeoYuc64YE22w" name="Tuple@512b480a" outgoing="_2qXEQXMaEeeoYuc64YE22w">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXETnMaEeeoYuc64YE22w" target="_2qXEUHMaEeeoYuc64YE22w" source="_2qXEVnMaEeeoYuc64YE22w"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXET3MaEeeoYuc64YE22w" name="Read(signals)" structuralFeature="_2qV3K3MaEeeoYuc64YE22w">
                        <object xmi:id="_2qXEUHMaEeeoYuc64YE22w" name="Read(signals).object" incoming="_2qXETnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEUXMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEUnMaEeeoYuc64YE22w" value="1"/>
                        </object>
                        <result xmi:id="_2qXEU3MaEeeoYuc64YE22w" name="Read(signals).result" outgoing="_2qXEP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEVHMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEVXMaEeeoYuc64YE22w" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_2qXEVnMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhFHMaEeeoYuc64YE22w" outgoing="_2qXETnMaEeeoYuc64YE22w"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEV3MaEeeoYuc64YE22w" name="Value(1)">
                        <result xmi:id="_2qXEWHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qXEQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEWXMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEWnMaEeeoYuc64YE22w" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_2qXEW3MaEeeoYuc64YE22w" value="1">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qXEXHMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_2qXEQHMaEeeoYuc64YE22w" outgoing="_2qXEQnMaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEXXMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_2qXEXnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEX3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEYHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2qXEYXMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXEYnMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2qXELHMaEeeoYuc64YE22w">
                  <argument xmi:id="_2qXEY3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXEK3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEZHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEZXMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2qXEZnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXEL3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEZ3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEaHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEaXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@3bd8b718.operand2" incoming="_2qXEMHMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEanMaEeeoYuc64YE22w" target="_2qXEa3MaEeeoYuc64YE22w" source="_2qXEcnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXEa3MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@3bd8b718.operand2.result" incoming="_2qXEanMaEeeoYuc64YE22w" outgoing="_2qXENHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEbHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEbXMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qXEbnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_2qV3DnMaEeeoYuc64YE22w" isDirect="true">
                    <object xmi:id="_2qXEb3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_2qXELXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEcHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEcXMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qXEcnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_2qXEanMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEc3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEdHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEdXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@3bd8b718.operand3" incoming="_2qXEMnMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEdnMaEeeoYuc64YE22w" target="_2qXEd3MaEeeoYuc64YE22w" source="_2qXEe3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXEd3MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@3bd8b718.operand3.result" incoming="_2qXEdnMaEeeoYuc64YE22w" outgoing="_2qXENXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEeHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEeXMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEenMaEeeoYuc64YE22w" name="Value(false)">
                    <result xmi:id="_2qXEe3MaEeeoYuc64YE22w" name="Value(false).result" outgoing="_2qXEdnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEfHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEfXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXEfnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2qXEf3MaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@3bd8b718)" outgoing="_2qXELnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2qXEgHMaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@3bd8b718)" incoming="_2qXELnMaEeeoYuc64YE22w _2qXEL3MaEeeoYuc64YE22w" outgoing="_2qXEMHMaEeeoYuc64YE22w _2qXEMnMaEeeoYuc64YE22w" decisionInputFlow="_2qXEL3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2qXEgXMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@3bd8b718.result)" incoming="_2qXENHMaEeeoYuc64YE22w _2qXENXMaEeeoYuc64YE22w" outgoing="_2qXEIXMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEgnMaEeeoYuc64YE22w" name="ExpressionStatement@23e618aa" incoming="_2qWhF3MaEeeoYuc64YE22w" outgoing="_2qWhGXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEg3MaEeeoYuc64YE22w" target="_2qXEh3MaEeeoYuc64YE22w" source="_2qXEmnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEhHMaEeeoYuc64YE22w" target="_2qXEinMaEeeoYuc64YE22w" source="_2qXE5HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEhXMaEeeoYuc64YE22w" target="_2qXEhnMaEeeoYuc64YE22w" source="_2qXEjXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXEhnMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2qXEhXMaEeeoYuc64YE22w" behavior="_2qXrVHMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXEh3MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2qXEg3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEiHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEiXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXEinMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2qXEhHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEi3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEjHMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEjXMaEeeoYuc64YE22w" name="Tuple@2a3b21bf" outgoing="_2qXEhXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEjnMaEeeoYuc64YE22w" target="_2qXExnMaEeeoYuc64YE22w" source="_2qXEoHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEj3MaEeeoYuc64YE22w" target="_2qXExXMaEeeoYuc64YE22w" source="_2qXEnnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEkHMaEeeoYuc64YE22w" target="_2qXE0nMaEeeoYuc64YE22w" source="_2qXEoHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEkXMaEeeoYuc64YE22w" target="_2qXE43MaEeeoYuc64YE22w" source="_2qXE4nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEknMaEeeoYuc64YE22w" target="_2qXE43MaEeeoYuc64YE22w" source="_2qXEyXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEk3MaEeeoYuc64YE22w" target="_2qXEzHMaEeeoYuc64YE22w" source="_2qXE43MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXElHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXElXMaEeeoYuc64YE22w" target="_2qXE2HMaEeeoYuc64YE22w" source="_2qXE43MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXElnMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEl3MaEeeoYuc64YE22w" target="_2qXE5HMaEeeoYuc64YE22w" source="_2qXEznMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEmHMaEeeoYuc64YE22w" target="_2qXE5HMaEeeoYuc64YE22w" source="_2qXE2nMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEmXMaEeeoYuc64YE22w" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_2qXEmnMaEeeoYuc64YE22w" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_2qXEg3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEm3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEnHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXEnXMaEeeoYuc64YE22w" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEnnMaEeeoYuc64YE22w" name="Operands(EqualityExpression@3991115c)" outgoing="_2qXEj3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEn3MaEeeoYuc64YE22w" target="_2qXEoHMaEeeoYuc64YE22w" source="_2qXErXMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_2qXEoHMaEeeoYuc64YE22w" name="Fork(x)@18c941b9" incoming="_2qXEn3MaEeeoYuc64YE22w" outgoing="_2qXEjnMaEeeoYuc64YE22w _2qXEkHMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEoXMaEeeoYuc64YE22w" name="RightHandSide@4cfa3882">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEonMaEeeoYuc64YE22w" target="_2qXEp3MaEeeoYuc64YE22w" source="_2qXEtnMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEo3MaEeeoYuc64YE22w" target="_2qXEv3MaEeeoYuc64YE22w" source="_2qXEu3MaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2qXEpHMaEeeoYuc64YE22w" target="_2qXEpnMaEeeoYuc64YE22w" source="_2qXEsHMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEpXMaEeeoYuc64YE22w" target="_2qXEqnMaEeeoYuc64YE22w" source="_2qXEv3MaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXEpnMaEeeoYuc64YE22w" name="Call(At)" incoming="_2qXEpHMaEeeoYuc64YE22w">
                      <argument xmi:id="_2qXEp3MaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_2qXEonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEqHMaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEqXMaEeeoYuc64YE22w" value="*"/>
                      </argument>
                      <argument xmi:id="_2qXEqnMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_2qXEpXMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEq3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXErHMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_2qXErXMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_2qXEn3MaEeeoYuc64YE22w">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXErnMaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEr3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEsHMaEeeoYuc64YE22w" name="Tuple@22ae0f44" outgoing="_2qXEpHMaEeeoYuc64YE22w">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEsXMaEeeoYuc64YE22w" target="_2qXEs3MaEeeoYuc64YE22w" source="_2qXEuXMaEeeoYuc64YE22w"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXEsnMaEeeoYuc64YE22w" name="Read(signals)" structuralFeature="_2qV3K3MaEeeoYuc64YE22w">
                        <object xmi:id="_2qXEs3MaEeeoYuc64YE22w" name="Read(signals).object" incoming="_2qXEsXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEtHMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEtXMaEeeoYuc64YE22w" value="1"/>
                        </object>
                        <result xmi:id="_2qXEtnMaEeeoYuc64YE22w" name="Read(signals).result" outgoing="_2qXEonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEt3MaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEuHMaEeeoYuc64YE22w" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_2qXEuXMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhFnMaEeeoYuc64YE22w" outgoing="_2qXEsXMaEeeoYuc64YE22w"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEunMaEeeoYuc64YE22w" name="Value(2)">
                        <result xmi:id="_2qXEu3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_2qXEo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEvHMaEeeoYuc64YE22w" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEvXMaEeeoYuc64YE22w" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_2qXEvnMaEeeoYuc64YE22w" value="2">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qXEv3MaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_2qXEo3MaEeeoYuc64YE22w" outgoing="_2qXEpXMaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXEwHMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_2qXEwXMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEwnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEw3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2qXExHMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXExXMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2qXEj3MaEeeoYuc64YE22w">
                  <argument xmi:id="_2qXExnMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXEjnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEx3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEyHMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2qXEyXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXEknMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEynMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXEy3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXEzHMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@29fe181d.operand2" incoming="_2qXEk3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXEzXMaEeeoYuc64YE22w" target="_2qXEznMaEeeoYuc64YE22w" source="_2qXE1XMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXEznMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@29fe181d.operand2.result" incoming="_2qXEzXMaEeeoYuc64YE22w" outgoing="_2qXEl3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXEz3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE0HMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qXE0XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2qV3EnMaEeeoYuc64YE22w" isDirect="true">
                    <object xmi:id="_2qXE0nMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2qXEkHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE03MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE1HMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qXE1XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2qXEzXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE1nMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE13MaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXE2HMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@29fe181d.operand3" incoming="_2qXElXMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXE2XMaEeeoYuc64YE22w" target="_2qXE2nMaEeeoYuc64YE22w" source="_2qXE3nMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXE2nMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@29fe181d.operand3.result" incoming="_2qXE2XMaEeeoYuc64YE22w" outgoing="_2qXEmHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE23MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE3HMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXE3XMaEeeoYuc64YE22w" name="Value(false)">
                    <result xmi:id="_2qXE3nMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_2qXE2XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE33MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE4HMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXE4XMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2qXE4nMaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@29fe181d)" outgoing="_2qXEkXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2qXE43MaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@29fe181d)" incoming="_2qXEkXMaEeeoYuc64YE22w _2qXEknMaEeeoYuc64YE22w" outgoing="_2qXEk3MaEeeoYuc64YE22w _2qXElXMaEeeoYuc64YE22w" decisionInputFlow="_2qXEknMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2qXE5HMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@29fe181d.result)" incoming="_2qXEl3MaEeeoYuc64YE22w _2qXEmHMaEeeoYuc64YE22w" outgoing="_2qXEhHMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXE5XMaEeeoYuc64YE22w" name="ExpressionStatement@5ff316e9" incoming="_2qWhGXMaEeeoYuc64YE22w" outgoing="_2qWhG3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXE5nMaEeeoYuc64YE22w" target="_2qXE63MaEeeoYuc64YE22w" source="_2qXE93MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXE53MaEeeoYuc64YE22w" target="_2qXE7nMaEeeoYuc64YE22w" source="_2qXE_3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXE6HMaEeeoYuc64YE22w" target="_2qXE8XMaEeeoYuc64YE22w" source="_2qXFBHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXE6XMaEeeoYuc64YE22w" target="_2qXE6nMaEeeoYuc64YE22w" source="_2qXE9HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXE6nMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_2qXE6XMaEeeoYuc64YE22w" behavior="_2qXr-XMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXE63MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_2qXE5nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE7HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE7XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXE7nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_2qXE53MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE73MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE8HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXE8XMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_2qXE6HMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE8nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE83MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXE9HMaEeeoYuc64YE22w" name="Tuple@2a88a55a" outgoing="_2qXE6XMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXE9XMaEeeoYuc64YE22w" target="_2qXE_HMaEeeoYuc64YE22w" source="_2qXFAnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXE9nMaEeeoYuc64YE22w" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_2qXE93MaEeeoYuc64YE22w" name="Value(&quot;test.count&quot;).result" outgoing="_2qXE5nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE-HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE-XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXE-nMaEeeoYuc64YE22w" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXE-3MaEeeoYuc64YE22w" name="Read(count)" structuralFeature="_2qV3KHMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXE_HMaEeeoYuc64YE22w" name="Read(count).object" incoming="_2qXE9XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXE_XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXE_nMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXE_3MaEeeoYuc64YE22w" name="Read(count).result" outgoing="_2qXE53MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFAHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFAXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXFAnMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhGHMaEeeoYuc64YE22w" outgoing="_2qXE9XMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXFA3MaEeeoYuc64YE22w" name="Value(3)">
                  <result xmi:id="_2qXFBHMaEeeoYuc64YE22w" name="Value(3).result" outgoing="_2qXE6HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFBXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFBnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2qXFB3MaEeeoYuc64YE22w" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFCHMaEeeoYuc64YE22w" name="ExpressionStatement@64b1c1c2" incoming="_2qWhG3MaEeeoYuc64YE22w" outgoing="_2qWhHXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFCXMaEeeoYuc64YE22w" target="_2qXFDXMaEeeoYuc64YE22w" source="_2qXFFnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFCnMaEeeoYuc64YE22w" target="_2qXFEHMaEeeoYuc64YE22w" source="_2qXFHnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFC3MaEeeoYuc64YE22w" target="_2qXFDHMaEeeoYuc64YE22w" source="_2qXFE3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXFDHMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2qXFC3MaEeeoYuc64YE22w" behavior="_2qXrVHMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXFDXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2qXFCXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFDnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFD3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXFEHMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2qXFCnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFEXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFEnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFE3MaEeeoYuc64YE22w" name="Tuple@4c63e8f4" outgoing="_2qXFC3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFFHMaEeeoYuc64YE22w" target="_2qXFG3MaEeeoYuc64YE22w" source="_2qXFIXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXFFXMaEeeoYuc64YE22w" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_2qXFFnMaEeeoYuc64YE22w" name="Value(&quot;test.flag&quot;).result" outgoing="_2qXFCXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFF3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFGHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXFGXMaEeeoYuc64YE22w" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXFGnMaEeeoYuc64YE22w" name="Read(flag)" structuralFeature="_2qV3LnMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXFG3MaEeeoYuc64YE22w" name="Read(flag).object" incoming="_2qXFFHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFHHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFHXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXFHnMaEeeoYuc64YE22w" name="Read(flag).result" outgoing="_2qXFCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFH3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFIHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXFIXMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhGnMaEeeoYuc64YE22w" outgoing="_2qXFFHMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFInMaEeeoYuc64YE22w" name="ExpressionStatement@6c6954fa" incoming="_2qWhHXMaEeeoYuc64YE22w" outgoing="_2qWhHnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFI3MaEeeoYuc64YE22w" target="_2qXFJ3MaEeeoYuc64YE22w" source="_2qXFMXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFJHMaEeeoYuc64YE22w" target="_2qXFKnMaEeeoYuc64YE22w" source="_2qXFQXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFJXMaEeeoYuc64YE22w" target="_2qXFJnMaEeeoYuc64YE22w" source="_2qXFLXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXFJnMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2qXFJXMaEeeoYuc64YE22w" behavior="_2qXrVHMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXFJ3MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2qXFI3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFKHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFKXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXFKnMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2qXFJHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFK3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFLHMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFLXMaEeeoYuc64YE22w" name="Tuple@2e4190be" outgoing="_2qXFJXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFLnMaEeeoYuc64YE22w" target="_2qXFNnMaEeeoYuc64YE22w" source="_2qXFPHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFL3MaEeeoYuc64YE22w" target="_2qXFPnMaEeeoYuc64YE22w" source="_2qXFOXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXFMHMaEeeoYuc64YE22w" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_2qXFMXMaEeeoYuc64YE22w" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_2qXFI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFMnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFM3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXFNHMaEeeoYuc64YE22w" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXFNXMaEeeoYuc64YE22w" name="Read(sig1)" structuralFeature="_2qV3HHMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXFNnMaEeeoYuc64YE22w" name="Read(sig1).object" incoming="_2qXFLnMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFN3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFOHMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXFOXMaEeeoYuc64YE22w" name="Read(sig1).result" outgoing="_2qXFL3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFOnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFO3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXFPHMaEeeoYuc64YE22w" name="Fork(Fork(test)@1958fef1)" incoming="_2qWhHHMaEeeoYuc64YE22w" outgoing="_2qXFLnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qXFPXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2qV3EnMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXFPnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2qXFL3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFP3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFQHMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXFQXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2qXFJHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFQnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFQ3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFRHMaEeeoYuc64YE22w" name="ExpressionStatement@425ac7db" incoming="_2qWhHnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFRXMaEeeoYuc64YE22w" target="_2qXFSXMaEeeoYuc64YE22w" source="_2qXFVHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFRnMaEeeoYuc64YE22w" target="_2qXFV3MaEeeoYuc64YE22w" source="_2qXFTXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFR3MaEeeoYuc64YE22w" target="_2qXFUXMaEeeoYuc64YE22w" source="_2qXFV3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2qXFSHMaEeeoYuc64YE22w" name="Call(done)" operation="_2qXqx3MaEeeoYuc64YE22w">
                <target xmi:id="_2qXFSXMaEeeoYuc64YE22w" name="Call(done).target" incoming="_2qXFRXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFSnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFS3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXFTHMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2qXFTXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXFRnMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFTnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFT3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXFUHMaEeeoYuc64YE22w" name="Read(outer)" structuralFeature="_2qWhBXMaEeeoYuc64YE22w">
                <object xmi:id="_2qXFUXMaEeeoYuc64YE22w" name="Read(outer).object" incoming="_2qXFR3MaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFUnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFU3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qXFVHMaEeeoYuc64YE22w" name="Read(outer).result" outgoing="_2qXFRXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFVXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFVnMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qXFV3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXFRnMaEeeoYuc64YE22w" outgoing="_2qXFR3MaEeeoYuc64YE22w"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXFWHMaEeeoYuc64YE22w" name="TestRunner$method$1" specification="_2qXG7XMaEeeoYuc64YE22w" node="_2qXFZHMaEeeoYuc64YE22w _2qXFZ3MaEeeoYuc64YE22w _2qXFZXMaEeeoYuc64YE22w _2qXFbXMaEeeoYuc64YE22w _2qXFZnMaEeeoYuc64YE22w" group="_2qXFZ3MaEeeoYuc64YE22w _2qXFbXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qXFWXMaEeeoYuc64YE22w" name="outer" type="_2qXHDHMaEeeoYuc64YE22w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFWnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFW3MaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2qXFXHMaEeeoYuc64YE22w" name="" type="_2qWhAXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFXXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFXnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFX3MaEeeoYuc64YE22w" target="_2qXFaXMaEeeoYuc64YE22w" source="_2qXFZHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFYHMaEeeoYuc64YE22w" target="_2qXFi3MaEeeoYuc64YE22w" source="_2qXFbHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFYXMaEeeoYuc64YE22w" target="_2qXFZXMaEeeoYuc64YE22w" source="_2qXFoHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFYnMaEeeoYuc64YE22w" target="_2qXFZnMaEeeoYuc64YE22w" source="_2qXFZ3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFY3MaEeeoYuc64YE22w" target="_2qXFbXMaEeeoYuc64YE22w" source="_2qXFZnMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2qXFZ3MaEeeoYuc64YE22w" name="Node(Input(outer))" outgoing="_2qXFYnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFaHMaEeeoYuc64YE22w" target="_2qXFbHMaEeeoYuc64YE22w" source="_2qXFaXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXFaXMaEeeoYuc64YE22w" name="Input(outer)" incoming="_2qXFX3MaEeeoYuc64YE22w" outgoing="_2qXFaHMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFanMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFa3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXFbHMaEeeoYuc64YE22w" name="Fork(outer)" incoming="_2qXFaHMaEeeoYuc64YE22w" outgoing="_2qXFYHMaEeeoYuc64YE22w"/>
          </structuredNode>
          <structuredNode xmi:id="_2qXFbXMaEeeoYuc64YE22w" name="Body(TestRunner$method$1)" incoming="_2qXFY3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFbnMaEeeoYuc64YE22w" target="_2qXFoHMaEeeoYuc64YE22w" source="_2qXFnXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFb3MaEeeoYuc64YE22w" target="_2qXFonMaEeeoYuc64YE22w" source="_2qXFoHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFcHMaEeeoYuc64YE22w" target="_2qXFeXMaEeeoYuc64YE22w" source="_2qXFoXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFcXMaEeeoYuc64YE22w" target="_2qXFpnMaEeeoYuc64YE22w" source="_2qXFoHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFcnMaEeeoYuc64YE22w" target="_2qXFrXMaEeeoYuc64YE22w" source="_2qXFqXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFc3MaEeeoYuc64YE22w" target="_2qXFuXMaEeeoYuc64YE22w" source="_2qXFsHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFdHMaEeeoYuc64YE22w" target="_2qXFv3MaEeeoYuc64YE22w" source="_2qXFtHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFdXMaEeeoYuc64YE22w" target="_2qXFw3MaEeeoYuc64YE22w" source="_2qXFwnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFdnMaEeeoYuc64YE22w" target="_2qXFw3MaEeeoYuc64YE22w" source="_2qXFvHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFd3MaEeeoYuc64YE22w" target="_2qXFoXMaEeeoYuc64YE22w" source="_2qXFw3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXFeHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFeXMaEeeoYuc64YE22w" name="Body" incoming="_2qXFcHMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFenMaEeeoYuc64YE22w" name="ExpressionStatement@b17d6db">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFe3MaEeeoYuc64YE22w" target="_2qXFhXMaEeeoYuc64YE22w" source="_2qXFgXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFfHMaEeeoYuc64YE22w" target="_2qXFjnMaEeeoYuc64YE22w" source="_2qXFi3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFfXMaEeeoYuc64YE22w" target="_2qXFknMaEeeoYuc64YE22w" source="_2qXFiHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFfnMaEeeoYuc64YE22w" target="_2qXFf3MaEeeoYuc64YE22w" source="_2qXFm3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFf3MaEeeoYuc64YE22w" name="Expression(LeftHandSide@1ac86717)" incoming="_2qXFfnMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXFgHMaEeeoYuc64YE22w" name="ReadSelf">
                    <result xmi:id="_2qXFgXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXFe3MaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFgnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFg3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qXFhHMaEeeoYuc64YE22w" name="Clear(outer)" structuralFeature="_2qWhBXMaEeeoYuc64YE22w">
                  <object xmi:id="_2qXFhXMaEeeoYuc64YE22w" name="Clear(outer).object" incoming="_2qXFe3MaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFhnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFh3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXFiHMaEeeoYuc64YE22w" name="Clear(outer).result" outgoing="_2qXFfXMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFiXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFinMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXFi3MaEeeoYuc64YE22w" name="Fork(LeftHandSide@1ac86717)" incoming="_2qXFYHMaEeeoYuc64YE22w" outgoing="_2qXFfHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFjHMaEeeoYuc64YE22w" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFjXMaEeeoYuc64YE22w" target="_2qXFmHMaEeeoYuc64YE22w" source="_2qXFjnMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qXFjnMaEeeoYuc64YE22w" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_2qXFfHMaEeeoYuc64YE22w" outgoing="_2qXFjXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFj3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFkHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qXFkXMaEeeoYuc64YE22w" name="Write(outer)" structuralFeature="_2qWhBXMaEeeoYuc64YE22w" isReplaceAll="true">
                    <object xmi:id="_2qXFknMaEeeoYuc64YE22w" name="Write(outer).object" incoming="_2qXFfXMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFk3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFlHMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qXFlXMaEeeoYuc64YE22w" name="Write(outer).result" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFlnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFl3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2qXFmHMaEeeoYuc64YE22w" name="Write(outer).value" incoming="_2qXFjXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFmXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFmnMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXFm3MaEeeoYuc64YE22w" name="RightHandSide@7affb8a6" outgoing="_2qXFfnMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXFnHMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qXFnXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXFbnMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFnnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFn3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXFoHMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXFbnMaEeeoYuc64YE22w" outgoing="_2qXFYXMaEeeoYuc64YE22w _2qXFb3MaEeeoYuc64YE22w _2qXFcXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2qXFoXMaEeeoYuc64YE22w" name="Call(TestRunner$initialization$1)" incoming="_2qXFd3MaEeeoYuc64YE22w" outgoing="_2qXFcHMaEeeoYuc64YE22w" operation="_2qXG7HMaEeeoYuc64YE22w">
              <target xmi:id="_2qXFonMaEeeoYuc64YE22w" name="Call(TestRunner$initialization$1).target" incoming="_2qXFb3MaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFo3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFpHMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXFpXMaEeeoYuc64YE22w" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_2qWhAnMaEeeoYuc64YE22w">
              <object xmi:id="_2qXFpnMaEeeoYuc64YE22w" name="Read(TestRunner$initializationFlag$1).object" incoming="_2qXFcXMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFp3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFqHMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qXFqXMaEeeoYuc64YE22w" name="Read(TestRunner$initializationFlag$1).result" outgoing="_2qXFcnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFqnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFq3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXFrHMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qXFrXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qXFcnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFrnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFr3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXFsHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qXFc3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFsXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFsnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXFs3MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qXFtHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qXFdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFtXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFtnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qXFt3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXFuHMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qXFuXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qXFc3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFunMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFu3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXFvHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qXFdnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFvXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFvnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXFv3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qXFdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFwHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFwXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qXFwnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qXFdXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXFw3MaEeeoYuc64YE22w" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_2qXFdXMaEeeoYuc64YE22w _2qXFdnMaEeeoYuc64YE22w" outgoing="_2qXFd3MaEeeoYuc64YE22w" decisionInputFlow="_2qXFdnMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXFZHMaEeeoYuc64YE22w" name="Input(outer)" outgoing="_2qXFX3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" parameter="_2qXFWXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXFZXMaEeeoYuc64YE22w" name="Return" incoming="_2qXFYXMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" parameter="_2qXFXHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:JoinNode" xmi:id="_2qXFZnMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qXFYnMaEeeoYuc64YE22w" outgoing="_2qXFY3MaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXFxHMaEeeoYuc64YE22w" name="run$method$1" specification="_2qXG9HMaEeeoYuc64YE22w" node="_2qXFyXMaEeeoYuc64YE22w _2qXFynMaEeeoYuc64YE22w" group="_2qXFynMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qXFxXMaEeeoYuc64YE22w" name="test" type="_2qV3FHMaEeeoYuc64YE22w" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXFxnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXFx3MaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFyHMaEeeoYuc64YE22w" target="_2qXFyXMaEeeoYuc64YE22w" source="_2qXF5HMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2qXFynMaEeeoYuc64YE22w" name="Body(run$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFy3MaEeeoYuc64YE22w" target="_2qXGFnMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFzHMaEeeoYuc64YE22w" target="_2qXGFHMaEeeoYuc64YE22w" source="_2qXF53MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFzXMaEeeoYuc64YE22w" target="_2qXGIHMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXFznMaEeeoYuc64YE22w" target="_2qXGGXMaEeeoYuc64YE22w" source="_2qXGFHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXFz3MaEeeoYuc64YE22w" target="_2qXGMHMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF0HMaEeeoYuc64YE22w" target="_2qXGKXMaEeeoYuc64YE22w" source="_2qXGGXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF0XMaEeeoYuc64YE22w" target="_2qXGQHMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF0nMaEeeoYuc64YE22w" target="_2qXGOXMaEeeoYuc64YE22w" source="_2qXGKXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF03MaEeeoYuc64YE22w" target="_2qXGUHMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF1HMaEeeoYuc64YE22w" target="_2qXGSXMaEeeoYuc64YE22w" source="_2qXGOXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF1XMaEeeoYuc64YE22w" target="_2qXGW3MaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF1nMaEeeoYuc64YE22w" target="_2qXGWXMaEeeoYuc64YE22w" source="_2qXGSXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF13MaEeeoYuc64YE22w" target="_2qXGZXMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF2HMaEeeoYuc64YE22w" target="_2qXGXnMaEeeoYuc64YE22w" source="_2qXGWXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF2XMaEeeoYuc64YE22w" target="_2qXGdXMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF2nMaEeeoYuc64YE22w" target="_2qXGbnMaEeeoYuc64YE22w" source="_2qXGXnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF23MaEeeoYuc64YE22w" target="_2qXGgHMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF3HMaEeeoYuc64YE22w" target="_2qXGfnMaEeeoYuc64YE22w" source="_2qXGbnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF3XMaEeeoYuc64YE22w" target="_2qXGinMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF3nMaEeeoYuc64YE22w" target="_2qXGg3MaEeeoYuc64YE22w" source="_2qXGfnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF33MaEeeoYuc64YE22w" target="_2qXGmnMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF4HMaEeeoYuc64YE22w" target="_2qXGk3MaEeeoYuc64YE22w" source="_2qXGg3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF4XMaEeeoYuc64YE22w" target="_2qXGpXMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF4nMaEeeoYuc64YE22w" target="_2qXGo3MaEeeoYuc64YE22w" source="_2qXGk3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF43MaEeeoYuc64YE22w" target="_2qXF5HMaEeeoYuc64YE22w" source="_2qXF6XMaEeeoYuc64YE22w"/>
            <structuredNodeOutput xmi:id="_2qXF5HMaEeeoYuc64YE22w" name="Output(test)" incoming="_2qXF43MaEeeoYuc64YE22w" outgoing="_2qXFyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXF5XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXF5nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXF53MaEeeoYuc64YE22w" name="ExpressionStatement@6c30a89e" outgoing="_2qXFzHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF6HMaEeeoYuc64YE22w" target="_2qXF6XMaEeeoYuc64YE22w" source="_2qXF83MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2qXF6XMaEeeoYuc64YE22w" name="Fork(test)@3445a757" incoming="_2qXF6HMaEeeoYuc64YE22w" outgoing="_2qXFy3MaEeeoYuc64YE22w _2qXFzXMaEeeoYuc64YE22w _2qXFz3MaEeeoYuc64YE22w _2qXF0XMaEeeoYuc64YE22w _2qXF03MaEeeoYuc64YE22w _2qXF1XMaEeeoYuc64YE22w _2qXF13MaEeeoYuc64YE22w _2qXF2XMaEeeoYuc64YE22w _2qXF23MaEeeoYuc64YE22w _2qXF3XMaEeeoYuc64YE22w _2qXF33MaEeeoYuc64YE22w _2qXF4XMaEeeoYuc64YE22w _2qXF43MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXF6nMaEeeoYuc64YE22w" name="RightHandSide@55f2c807">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXF63MaEeeoYuc64YE22w" name="InstanceCreationExpression@55f2c807">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF7HMaEeeoYuc64YE22w" target="_2qXGDnMaEeeoYuc64YE22w" source="_2qXGAXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF7XMaEeeoYuc64YE22w" target="_2qXF_XMaEeeoYuc64YE22w" source="_2qXGDnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF7nMaEeeoYuc64YE22w" target="_2qXF93MaEeeoYuc64YE22w" source="_2qXGBnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2qXF73MaEeeoYuc64YE22w" target="_2qXF9nMaEeeoYuc64YE22w" source="_2qXGBHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF8HMaEeeoYuc64YE22w" target="_2qXGD3MaEeeoYuc64YE22w" source="_2qXGC3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF8XMaEeeoYuc64YE22w" target="_2qXGEXMaEeeoYuc64YE22w" source="_2qXGD3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXF8nMaEeeoYuc64YE22w" target="_2qXF83MaEeeoYuc64YE22w" source="_2qXGD3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXF83MaEeeoYuc64YE22w" name="Output(Output(Fork(Create(MyTest).result)))" incoming="_2qXF8nMaEeeoYuc64YE22w" outgoing="_2qXF6HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXF9HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXF9XMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_2qXF9nMaEeeoYuc64YE22w" name="Call(MyTest)" incoming="_2qXF73MaEeeoYuc64YE22w" operation="_2qWg9XMaEeeoYuc64YE22w">
                    <argument xmi:id="_2qXF93MaEeeoYuc64YE22w" name="Call(MyTest).argument(tester)" incoming="_2qXF7nMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXF-HMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXF-XMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2qXF-nMaEeeoYuc64YE22w" name="Call(MyTest).result()" type="_2qV3FHMaEeeoYuc64YE22w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXF-3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXF_HMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <target xmi:id="_2qXF_XMaEeeoYuc64YE22w" name="Call(MyTest).target" incoming="_2qXF7XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXF_nMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXF_3MaEeeoYuc64YE22w" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_2qXGAHMaEeeoYuc64YE22w" name="Create(MyTest)" classifier="_2qV3FHMaEeeoYuc64YE22w">
                    <result xmi:id="_2qXGAXMaEeeoYuc64YE22w" name="Create(MyTest).result" outgoing="_2qXF7HMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGAnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGA3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGBHMaEeeoYuc64YE22w" name="Tuple@32217c0f" outgoing="_2qXF73MaEeeoYuc64YE22w">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXGBXMaEeeoYuc64YE22w" name="ReadSelf">
                      <result xmi:id="_2qXGBnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXF7nMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGB3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGCHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGCXMaEeeoYuc64YE22w" name="Node(Call(MyTest))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGCnMaEeeoYuc64YE22w" target="_2qXGC3MaEeeoYuc64YE22w" source="_2qXGDnMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_2qXGC3MaEeeoYuc64YE22w" name="Output(Fork(Create(MyTest).result))" incoming="_2qXGCnMaEeeoYuc64YE22w" outgoing="_2qXF8HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGDHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGDXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:ForkNode" xmi:id="_2qXGDnMaEeeoYuc64YE22w" name="Fork(Create(MyTest).result)" incoming="_2qXF7HMaEeeoYuc64YE22w" outgoing="_2qXF7XMaEeeoYuc64YE22w _2qXGCnMaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2qXGD3MaEeeoYuc64YE22w" name="Fork(Output(Fork(Create(MyTest).result)))" incoming="_2qXF8HMaEeeoYuc64YE22w" outgoing="_2qXF8XMaEeeoYuc64YE22w _2qXF8nMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_2qXGEHMaEeeoYuc64YE22w" name="Start(MyTest)" isSynchronous="false">
                    <object xmi:id="_2qXGEXMaEeeoYuc64YE22w" name="Start(MyTest).object" incoming="_2qXF8XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGEnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGE3MaEeeoYuc64YE22w" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGFHMaEeeoYuc64YE22w" name="ExpressionStatement@20931a6b" incoming="_2qXFzHMaEeeoYuc64YE22w" outgoing="_2qXFznMaEeeoYuc64YE22w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGFXMaEeeoYuc64YE22w" name="SendSignal(SignalTermination)" signal="_2qV3EnMaEeeoYuc64YE22w">
                <target xmi:id="_2qXGFnMaEeeoYuc64YE22w" name="SendSignal(SignalTermination).target" incoming="_2qXFy3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGF3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGGHMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGGXMaEeeoYuc64YE22w" name="ExpressionStatement@129b4b70" incoming="_2qXFznMaEeeoYuc64YE22w" outgoing="_2qXF0HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGGnMaEeeoYuc64YE22w" target="_2qXGHXMaEeeoYuc64YE22w" source="_2qXGJXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGG3MaEeeoYuc64YE22w" target="_2qXGHHMaEeeoYuc64YE22w" source="_2qXGI3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGHHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGG3MaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGHXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGGnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGHnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGH3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGIHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXFzXMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGIXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGInMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGI3MaEeeoYuc64YE22w" name="Tuple@28ea3b83" outgoing="_2qXGG3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGJHMaEeeoYuc64YE22w" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_2qXGJXMaEeeoYuc64YE22w" name="Value(&quot;Arrival1&quot;).result" outgoing="_2qXGGnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGJnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGJ3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGKHMaEeeoYuc64YE22w" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGKXMaEeeoYuc64YE22w" name="ExpressionStatement@2fc3dade" incoming="_2qXF0HMaEeeoYuc64YE22w" outgoing="_2qXF0nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGKnMaEeeoYuc64YE22w" target="_2qXGLXMaEeeoYuc64YE22w" source="_2qXGNXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGK3MaEeeoYuc64YE22w" target="_2qXGLHMaEeeoYuc64YE22w" source="_2qXGM3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGLHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGK3MaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGLXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGKnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGLnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGL3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGMHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXFz3MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGMXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGMnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGM3MaEeeoYuc64YE22w" name="Tuple@1ee6285d" outgoing="_2qXGK3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGNHMaEeeoYuc64YE22w" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_2qXGNXMaEeeoYuc64YE22w" name="Value(&quot;Arrival2&quot;).result" outgoing="_2qXGKnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGNnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGN3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGOHMaEeeoYuc64YE22w" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGOXMaEeeoYuc64YE22w" name="ExpressionStatement@3be591a4" incoming="_2qXF0nMaEeeoYuc64YE22w" outgoing="_2qXF1HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGOnMaEeeoYuc64YE22w" target="_2qXGPXMaEeeoYuc64YE22w" source="_2qXGRXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGO3MaEeeoYuc64YE22w" target="_2qXGPHMaEeeoYuc64YE22w" source="_2qXGQ3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGPHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGO3MaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGPXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGOnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGPnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGP3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGQHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXF0XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGQXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGQnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGQ3MaEeeoYuc64YE22w" name="Tuple@3e79cff7" outgoing="_2qXGO3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGRHMaEeeoYuc64YE22w" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_2qXGRXMaEeeoYuc64YE22w" name="Value(&quot;Arrival3&quot;).result" outgoing="_2qXGOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGRnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGR3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGSHMaEeeoYuc64YE22w" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGSXMaEeeoYuc64YE22w" name="ExpressionStatement@149fba8d" incoming="_2qXF1HMaEeeoYuc64YE22w" outgoing="_2qXF1nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGSnMaEeeoYuc64YE22w" target="_2qXGTXMaEeeoYuc64YE22w" source="_2qXGVXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGS3MaEeeoYuc64YE22w" target="_2qXGTHMaEeeoYuc64YE22w" source="_2qXGU3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGTHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGS3MaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGTXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGSnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGTnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGT3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGUHMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXF03MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGUXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGUnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGU3MaEeeoYuc64YE22w" name="Tuple@68a98bf3" outgoing="_2qXGS3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGVHMaEeeoYuc64YE22w" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_2qXGVXMaEeeoYuc64YE22w" name="Value(&quot;Arrival4&quot;).result" outgoing="_2qXGSnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGVnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGV3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGWHMaEeeoYuc64YE22w" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGWXMaEeeoYuc64YE22w" name="ExpressionStatement@1f348953" incoming="_2qXF1nMaEeeoYuc64YE22w" outgoing="_2qXF2HMaEeeoYuc64YE22w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGWnMaEeeoYuc64YE22w" name="SendSignal(SignalTermination)" signal="_2qV3EnMaEeeoYuc64YE22w">
                <target xmi:id="_2qXGW3MaEeeoYuc64YE22w" name="SendSignal(SignalTermination).target" incoming="_2qXF1XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGXHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGXXMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGXnMaEeeoYuc64YE22w" name="ExpressionStatement@7eb33b10" incoming="_2qXF2HMaEeeoYuc64YE22w" outgoing="_2qXF2nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGX3MaEeeoYuc64YE22w" target="_2qXGYnMaEeeoYuc64YE22w" source="_2qXGanMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGYHMaEeeoYuc64YE22w" target="_2qXGYXMaEeeoYuc64YE22w" source="_2qXGaHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGYXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGYHMaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGYnMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGX3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGY3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGZHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGZXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXF13MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGZnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGZ3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGaHMaEeeoYuc64YE22w" name="Tuple@31b127cf" outgoing="_2qXGYHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGaXMaEeeoYuc64YE22w" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_2qXGanMaEeeoYuc64YE22w" name="Value(&quot;Arrival5&quot;).result" outgoing="_2qXGX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGa3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGbHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGbXMaEeeoYuc64YE22w" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGbnMaEeeoYuc64YE22w" name="ExpressionStatement@466a3257" incoming="_2qXF2nMaEeeoYuc64YE22w" outgoing="_2qXF3HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGb3MaEeeoYuc64YE22w" target="_2qXGcnMaEeeoYuc64YE22w" source="_2qXGenMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGcHMaEeeoYuc64YE22w" target="_2qXGcXMaEeeoYuc64YE22w" source="_2qXGeHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGcXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGcHMaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGcnMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGb3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGc3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGdHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGdXMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXF2XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGdnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGd3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGeHMaEeeoYuc64YE22w" name="Tuple@7f19fe18" outgoing="_2qXGcHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGeXMaEeeoYuc64YE22w" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_2qXGenMaEeeoYuc64YE22w" name="Value(&quot;Arrival6&quot;).result" outgoing="_2qXGb3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGe3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGfHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGfXMaEeeoYuc64YE22w" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGfnMaEeeoYuc64YE22w" name="ExpressionStatement@239fd906" incoming="_2qXF3HMaEeeoYuc64YE22w" outgoing="_2qXF3nMaEeeoYuc64YE22w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGf3MaEeeoYuc64YE22w" name="SendSignal(SignalTermination)" signal="_2qV3EnMaEeeoYuc64YE22w">
                <target xmi:id="_2qXGgHMaEeeoYuc64YE22w" name="SendSignal(SignalTermination).target" incoming="_2qXF23MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGgXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGgnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGg3MaEeeoYuc64YE22w" name="ExpressionStatement@e2fad11" incoming="_2qXF3nMaEeeoYuc64YE22w" outgoing="_2qXF4HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGhHMaEeeoYuc64YE22w" target="_2qXGh3MaEeeoYuc64YE22w" source="_2qXGj3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGhXMaEeeoYuc64YE22w" target="_2qXGhnMaEeeoYuc64YE22w" source="_2qXGjXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGhnMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGhXMaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGh3MaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGhHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGiHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGiXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGinMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXF3XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGi3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGjHMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGjXMaEeeoYuc64YE22w" name="Tuple@40b0d59" outgoing="_2qXGhXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGjnMaEeeoYuc64YE22w" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_2qXGj3MaEeeoYuc64YE22w" name="Value(&quot;Arrival7&quot;).result" outgoing="_2qXGhHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGkHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGkXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGknMaEeeoYuc64YE22w" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGk3MaEeeoYuc64YE22w" name="ExpressionStatement@3afe9945" incoming="_2qXF4HMaEeeoYuc64YE22w" outgoing="_2qXF4nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGlHMaEeeoYuc64YE22w" target="_2qXGl3MaEeeoYuc64YE22w" source="_2qXGn3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGlXMaEeeoYuc64YE22w" target="_2qXGlnMaEeeoYuc64YE22w" source="_2qXGnXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGlnMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival)" incoming="_2qXGlXMaEeeoYuc64YE22w" signal="_2qV3DnMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXGl3MaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2qXGlHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGmHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGmXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <target xmi:id="_2qXGmnMaEeeoYuc64YE22w" name="SendSignal(SignalNewArrival).target" incoming="_2qXF33MaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGm3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGnHMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGnXMaEeeoYuc64YE22w" name="Tuple@5896d274" outgoing="_2qXGlXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGnnMaEeeoYuc64YE22w" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_2qXGn3MaEeeoYuc64YE22w" name="Value(&quot;Arrival8&quot;).result" outgoing="_2qXGlHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGoHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGoXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXGonMaEeeoYuc64YE22w" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGo3MaEeeoYuc64YE22w" name="ExpressionStatement@3a5a332" incoming="_2qXF4nMaEeeoYuc64YE22w">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXGpHMaEeeoYuc64YE22w" name="SendSignal(SignalTermination)" signal="_2qV3EnMaEeeoYuc64YE22w">
                <target xmi:id="_2qXGpXMaEeeoYuc64YE22w" name="SendSignal(SignalTermination).target" incoming="_2qXF4XMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGpnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGp3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXFyXMaEeeoYuc64YE22w" name="Output(test)" incoming="_2qXFyHMaEeeoYuc64YE22w" type="_2qV3FHMaEeeoYuc64YE22w" parameter="_2qXFxXMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXGqHMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2qXG-HMaEeeoYuc64YE22w" node="_2qXGqXMaEeeoYuc64YE22w" group="_2qXGqXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qXGqXMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXGqnMaEeeoYuc64YE22w" name="TestRunner$initialization$1" specification="_2qXG7HMaEeeoYuc64YE22w" node="_2qXGq3MaEeeoYuc64YE22w" group="_2qXGq3MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qXGq3MaEeeoYuc64YE22w" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGrHMaEeeoYuc64YE22w" target="_2qXGunMaEeeoYuc64YE22w" source="_2qXGt3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGrXMaEeeoYuc64YE22w" target="_2qXGxHMaEeeoYuc64YE22w" source="_2qXGunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGrnMaEeeoYuc64YE22w" target="_2qXGznMaEeeoYuc64YE22w" source="_2qXGunMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGr3MaEeeoYuc64YE22w" target="_2qXG1XMaEeeoYuc64YE22w" source="_2qXG0XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGsHMaEeeoYuc64YE22w" target="_2qXG4XMaEeeoYuc64YE22w" source="_2qXG2HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGsXMaEeeoYuc64YE22w" target="_2qXG53MaEeeoYuc64YE22w" source="_2qXG3HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGsnMaEeeoYuc64YE22w" target="_2qXG63MaEeeoYuc64YE22w" source="_2qXG6nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGs3MaEeeoYuc64YE22w" target="_2qXG63MaEeeoYuc64YE22w" source="_2qXG5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXGtHMaEeeoYuc64YE22w" target="_2qXGu3MaEeeoYuc64YE22w" source="_2qXG63MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXGtXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXGtnMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qXGt3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXGrHMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGuHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGuXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXGunMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXGrHMaEeeoYuc64YE22w" outgoing="_2qXGrXMaEeeoYuc64YE22w _2qXGrnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGu3MaEeeoYuc64YE22w" name="Initialization" incoming="_2qXGtHMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXGvHMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXGvXMaEeeoYuc64YE22w" target="_2qXGynMaEeeoYuc64YE22w" source="_2qXGv3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXGvnMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_2qXGv3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qXGvXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGwHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGwXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXGwnMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qXGw3MaEeeoYuc64YE22w" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_2qWhAnMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qXGxHMaEeeoYuc64YE22w" name="Write(TestRunner$initializationFlag$1).object" incoming="_2qXGrXMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGxXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGxnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXGx3MaEeeoYuc64YE22w" name="Write(TestRunner$initializationFlag$1).result" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGyHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGyXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qXGynMaEeeoYuc64YE22w" name="Write(TestRunner$initializationFlag$1).value" incoming="_2qXGvXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGy3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXGzHMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXGzXMaEeeoYuc64YE22w" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_2qWhAnMaEeeoYuc64YE22w">
              <object xmi:id="_2qXGznMaEeeoYuc64YE22w" name="Read(TestRunner$initializationFlag$1).object" incoming="_2qXGrnMaEeeoYuc64YE22w" type="_2qWhAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXGz3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG0HMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qXG0XMaEeeoYuc64YE22w" name="Read(TestRunner$initializationFlag$1).result" outgoing="_2qXGr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG0nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG03MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXG1HMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qXG1XMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qXGr3MaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG1nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG13MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXG2HMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qXGsHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG2XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG2nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXG23MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qXG3HMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qXGsXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG3XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG3nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qXG33MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXG4HMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qXG4XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qXGsHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG4nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG43MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXG5HMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qXGs3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG5XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG5nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXG53MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qXGsXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG6HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG6XMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qXG6nMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qXGsnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXG63MaEeeoYuc64YE22w" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_2qXGsnMaEeeoYuc64YE22w _2qXGs3MaEeeoYuc64YE22w" outgoing="_2qXGtHMaEeeoYuc64YE22w" decisionInputFlow="_2qXGs3MaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2qXG7HMaEeeoYuc64YE22w" name="TestRunner$initialization$1" visibility="protected" method="_2qXGqnMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_2qXG7XMaEeeoYuc64YE22w" name="TestRunner" visibility="public" method="_2qXFWHMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qXG7nMaEeeoYuc64YE22w" name="outer" visibility="package" type="_2qXHDHMaEeeoYuc64YE22w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG73MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG8HMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2qXG8XMaEeeoYuc64YE22w" name="" visibility="package" type="_2qWhAXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG8nMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG83MaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2qXG9HMaEeeoYuc64YE22w" name="run" visibility="private" method="_2qXFxHMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qXG9XMaEeeoYuc64YE22w" name="test" visibility="package" type="_2qV3FHMaEeeoYuc64YE22w" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXG9nMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXG93MaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2qXG-HMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2qXGqHMaEeeoYuc64YE22w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2qXG-XMaEeeoYuc64YE22w" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2qXG-nMaEeeoYuc64YE22w" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_2qXG-3MaEeeoYuc64YE22w" name="Start" signal="_2qXG-XMaEeeoYuc64YE22w"/>
        <ownedReception xmi:id="_2qXG_HMaEeeoYuc64YE22w" name="Continue" signal="_2qXG-nMaEeeoYuc64YE22w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXG_XMaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXG_nMaEeeoYuc64YE22w" name="Event(SignalTermination)" visibility="public" signal="_2qV3EnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXG_3MaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHAHMaEeeoYuc64YE22w" name="Event(SignalTermination)" visibility="public" signal="_2qV3EnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHAXMaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHAnMaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHA3MaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHBHMaEeeoYuc64YE22w" name="Event(SignalTermination)" visibility="public" signal="_2qV3EnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHBXMaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHBnMaEeeoYuc64YE22w" name="Event(SignalTermination)" visibility="public" signal="_2qV3EnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHB3MaEeeoYuc64YE22w" name="Event(SignalNewArrival)" visibility="public" signal="_2qV3DnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHCHMaEeeoYuc64YE22w" name="Event(SignalTermination)" visibility="public" signal="_2qV3EnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHCXMaEeeoYuc64YE22w" name="Event(SignalTermination)" visibility="public" signal="_2qV3EnMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHCnMaEeeoYuc64YE22w" name="Event(Start)" visibility="public" signal="_2qXG-XMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2qXHC3MaEeeoYuc64YE22w" name="Event(Continue)" visibility="public" signal="_2qXG-nMaEeeoYuc64YE22w"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_2qXHDHMaEeeoYuc64YE22w" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_2qXHDXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2qXHDnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2qXHD3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2qXHEHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2qXHEXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_2qXHEnMaEeeoYuc64YE22w" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHE3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHFHMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2qXHFXMaEeeoYuc64YE22w" name="tester" visibility="private" type="_2qXqyXMaEeeoYuc64YE22w">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHFnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHF3MaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXHGHMaEeeoYuc64YE22w" name="Test$method$1" specification="_2qXqwHMaEeeoYuc64YE22w" node="_2qXHJHMaEeeoYuc64YE22w _2qXHJ3MaEeeoYuc64YE22w _2qXHJXMaEeeoYuc64YE22w _2qXHLXMaEeeoYuc64YE22w _2qXHJnMaEeeoYuc64YE22w" group="_2qXHJ3MaEeeoYuc64YE22w _2qXHLXMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2qXHGXMaEeeoYuc64YE22w" name="tester" type="_2qXqyXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHGnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHG3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2qXHHHMaEeeoYuc64YE22w" name="" type="_2qXHDHMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHHXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHHnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHH3MaEeeoYuc64YE22w" target="_2qXHKXMaEeeoYuc64YE22w" source="_2qXHJHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHIHMaEeeoYuc64YE22w" target="_2qXHS3MaEeeoYuc64YE22w" source="_2qXHLHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHIXMaEeeoYuc64YE22w" target="_2qXHJXMaEeeoYuc64YE22w" source="_2qXHZ3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHInMaEeeoYuc64YE22w" target="_2qXHJnMaEeeoYuc64YE22w" source="_2qXHJ3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHI3MaEeeoYuc64YE22w" target="_2qXHLXMaEeeoYuc64YE22w" source="_2qXHJnMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_2qXHJ3MaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_2qXHInMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHKHMaEeeoYuc64YE22w" target="_2qXHLHMaEeeoYuc64YE22w" source="_2qXHKXMaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_2qXHKXMaEeeoYuc64YE22w" name="Input(tester)" incoming="_2qXHH3MaEeeoYuc64YE22w" outgoing="_2qXHKHMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHKnMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHK3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXHLHMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_2qXHKHMaEeeoYuc64YE22w" outgoing="_2qXHIHMaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_2qXHLXMaEeeoYuc64YE22w" name="Body(Test$method$1)" incoming="_2qXHI3MaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHLnMaEeeoYuc64YE22w" target="_2qXHZ3MaEeeoYuc64YE22w" source="_2qXHZHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHL3MaEeeoYuc64YE22w" target="_2qXHaXMaEeeoYuc64YE22w" source="_2qXHZ3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHMHMaEeeoYuc64YE22w" target="_2qXHOXMaEeeoYuc64YE22w" source="_2qXHaHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHMXMaEeeoYuc64YE22w" target="_2qXHbXMaEeeoYuc64YE22w" source="_2qXHZ3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHMnMaEeeoYuc64YE22w" target="_2qXHdHMaEeeoYuc64YE22w" source="_2qXHcHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHM3MaEeeoYuc64YE22w" target="_2qXHgHMaEeeoYuc64YE22w" source="_2qXHd3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHNHMaEeeoYuc64YE22w" target="_2qXHhnMaEeeoYuc64YE22w" source="_2qXHe3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHNXMaEeeoYuc64YE22w" target="_2qXHinMaEeeoYuc64YE22w" source="_2qXHiXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHNnMaEeeoYuc64YE22w" target="_2qXHinMaEeeoYuc64YE22w" source="_2qXHg3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHN3MaEeeoYuc64YE22w" target="_2qXHaHMaEeeoYuc64YE22w" source="_2qXHinMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXHOHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHOXMaEeeoYuc64YE22w" name="Body" incoming="_2qXHMHMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHOnMaEeeoYuc64YE22w" name="ExpressionStatement@1b3c57d1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHO3MaEeeoYuc64YE22w" target="_2qXHRXMaEeeoYuc64YE22w" source="_2qXHQXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHPHMaEeeoYuc64YE22w" target="_2qXHTnMaEeeoYuc64YE22w" source="_2qXHS3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHPXMaEeeoYuc64YE22w" target="_2qXHVHMaEeeoYuc64YE22w" source="_2qXHSHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHPnMaEeeoYuc64YE22w" target="_2qXHP3MaEeeoYuc64YE22w" source="_2qXHYnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHP3MaEeeoYuc64YE22w" name="Expression(LeftHandSide@41dc3d3a)" incoming="_2qXHPnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXHQHMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_2qXHQXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXHO3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHQnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHQ3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2qXHRHMaEeeoYuc64YE22w" name="Clear(tester)" structuralFeature="_2qXHFXMaEeeoYuc64YE22w">
                <object xmi:id="_2qXHRXMaEeeoYuc64YE22w" name="Clear(tester).object" incoming="_2qXHO3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHRnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHR3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qXHSHMaEeeoYuc64YE22w" name="Clear(tester).result" outgoing="_2qXHPXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHSXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHSnMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qXHS3MaEeeoYuc64YE22w" name="Fork(LeftHandSide@41dc3d3a)" incoming="_2qXHIHMaEeeoYuc64YE22w" outgoing="_2qXHPHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHTHMaEeeoYuc64YE22w" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHTXMaEeeoYuc64YE22w" target="_2qXHYXMaEeeoYuc64YE22w" source="_2qXHTnMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_2qXHTnMaEeeoYuc64YE22w" name="WriteAll(Test::tester).input(Test::tester)" incoming="_2qXHPHMaEeeoYuc64YE22w" outgoing="_2qXHTXMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHT3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHUHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2qXHUXMaEeeoYuc64YE22w" name="Iterate(Write(tester))" inputElement="_2qXHYXMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHUnMaEeeoYuc64YE22w" target="_2qXHXnMaEeeoYuc64YE22w" source="_2qXHYXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHU3MaEeeoYuc64YE22w" target="_2qXHWHMaEeeoYuc64YE22w" source="_2qXHVHMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_2qXHVHMaEeeoYuc64YE22w" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_2qXHPXMaEeeoYuc64YE22w" outgoing="_2qXHU3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHVXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHVnMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qXHV3MaEeeoYuc64YE22w" name="Write(tester)" structuralFeature="_2qXHFXMaEeeoYuc64YE22w">
                    <object xmi:id="_2qXHWHMaEeeoYuc64YE22w" name="Write(tester).object" incoming="_2qXHU3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHWXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHWnMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_2qXHW3MaEeeoYuc64YE22w" name="Write(tester).result" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHXHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHXXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_2qXHXnMaEeeoYuc64YE22w" name="Write(tester).value" incoming="_2qXHUnMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHX3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHYHMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2qXHYXMaEeeoYuc64YE22w" name="Iterate(Write(tester)).inputElement" incoming="_2qXHTXMaEeeoYuc64YE22w" outgoing="_2qXHUnMaEeeoYuc64YE22w" regionAsInput="_2qXHUXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHYnMaEeeoYuc64YE22w" name="RightHandSide@4712ff69" outgoing="_2qXHPnMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXHY3MaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2qXHZHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXHLnMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHZXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHZnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXHZ3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXHLnMaEeeoYuc64YE22w" outgoing="_2qXHIXMaEeeoYuc64YE22w _2qXHL3MaEeeoYuc64YE22w _2qXHMXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2qXHaHMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" incoming="_2qXHN3MaEeeoYuc64YE22w" outgoing="_2qXHMHMaEeeoYuc64YE22w" operation="_2qXqv3MaEeeoYuc64YE22w">
            <target xmi:id="_2qXHaXMaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_2qXHL3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHanMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHa3MaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXHbHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_2qXHEnMaEeeoYuc64YE22w">
            <object xmi:id="_2qXHbXMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_2qXHMXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHbnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHb3MaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2qXHcHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_2qXHMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHcXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHcnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXHc3MaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2qXHdHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qXHMnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHdXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHdnMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2qXHd3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qXHM3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHeHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHeXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXHenMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2qXHe3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qXHNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHfHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHfXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2qXHfnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXHf3MaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2qXHgHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qXHM3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHgXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHgnMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2qXHg3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qXHNnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHhHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHhXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2qXHhnMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qXHNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHh3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHiHMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2qXHiXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qXHNXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2qXHinMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_2qXHNXMaEeeoYuc64YE22w _2qXHNnMaEeeoYuc64YE22w" outgoing="_2qXHN3MaEeeoYuc64YE22w" decisionInputFlow="_2qXHNnMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXHJHMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_2qXHH3MaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" parameter="_2qXHGXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXHJXMaEeeoYuc64YE22w" name="Return" incoming="_2qXHIXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" parameter="_2qXHHHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_2qXHJnMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qXHInMaEeeoYuc64YE22w" outgoing="_2qXHI3MaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXHi3MaEeeoYuc64YE22w" name="done$method$1" specification="_2qXqx3MaEeeoYuc64YE22w" node="_2qXHjHMaEeeoYuc64YE22w" group="_2qXHjHMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2qXHjHMaEeeoYuc64YE22w" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHjXMaEeeoYuc64YE22w" target="_2qXHnnMaEeeoYuc64YE22w" source="_2qXHjnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHjnMaEeeoYuc64YE22w" name="ExpressionStatement@74b185d" outgoing="_2qXHjXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHj3MaEeeoYuc64YE22w" target="_2qXHknMaEeeoYuc64YE22w" source="_2qXHmnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHkHMaEeeoYuc64YE22w" target="_2qXHkXMaEeeoYuc64YE22w" source="_2qXHmHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXHkXMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_2qXHkHMaEeeoYuc64YE22w">
              <argument xmi:id="_2qXHknMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_2qXHj3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHk3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHlHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXHlXMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHlnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHl3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHmHMaEeeoYuc64YE22w" name="Tuple@d6b103c" outgoing="_2qXHkHMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXHmXMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_2qXHmnMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;).result" outgoing="_2qXHj3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHm3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHnHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2qXHnXMaEeeoYuc64YE22w" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHnnMaEeeoYuc64YE22w" name="ExpressionStatement@6c11e677" incoming="_2qXHjXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHn3MaEeeoYuc64YE22w" target="_2qXHp3MaEeeoYuc64YE22w" source="_2qXHs3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHoHMaEeeoYuc64YE22w" target="_2qXHoXMaEeeoYuc64YE22w" source="_2qXHqHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_2qXHoXMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue))" incoming="_2qXHoHMaEeeoYuc64YE22w" mode="parallel" inputElement="_2qXHp3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHonMaEeeoYuc64YE22w" target="_2qXHpHMaEeeoYuc64YE22w" source="_2qXHp3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2qXHo3MaEeeoYuc64YE22w" name="SendSignal(Continue)" signal="_2qXrUnMaEeeoYuc64YE22w">
                <target xmi:id="_2qXHpHMaEeeoYuc64YE22w" name="SendSignal(Continue).target" incoming="_2qXHonMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHpXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHpnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_2qXHp3MaEeeoYuc64YE22w" name="Collect(SendSignal(Continue)).inputElement" incoming="_2qXHn3MaEeeoYuc64YE22w" outgoing="_2qXHonMaEeeoYuc64YE22w" regionAsInput="_2qXHoXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHqHMaEeeoYuc64YE22w" name="Feature(Read(tester).result)" outgoing="_2qXHoHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHqXMaEeeoYuc64YE22w" target="_2qXHtnMaEeeoYuc64YE22w" source="_2qXHrHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHqnMaEeeoYuc64YE22w" target="_2qXHsHMaEeeoYuc64YE22w" source="_2qXHtnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXHq3MaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_2qXHrHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXHqXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHrXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHrnMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXHr3MaEeeoYuc64YE22w" name="Read(tester)" structuralFeature="_2qXHFXMaEeeoYuc64YE22w">
                <object xmi:id="_2qXHsHMaEeeoYuc64YE22w" name="Read(tester).object" incoming="_2qXHqnMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHsXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHsnMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qXHs3MaEeeoYuc64YE22w" name="Read(tester).result" outgoing="_2qXHn3MaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHtHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHtXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2qXHtnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXHqXMaEeeoYuc64YE22w" outgoing="_2qXHqnMaEeeoYuc64YE22w"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXHt3MaEeeoYuc64YE22w" name="destroy$method$1" specification="_2qXqyHMaEeeoYuc64YE22w" node="_2qXHuHMaEeeoYuc64YE22w" group="_2qXHuHMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2qXHuHMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXHuXMaEeeoYuc64YE22w" name="Test$initialization$1" specification="_2qXqv3MaEeeoYuc64YE22w" node="_2qXHunMaEeeoYuc64YE22w" group="_2qXHunMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_2qXHunMaEeeoYuc64YE22w" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHu3MaEeeoYuc64YE22w" target="_2qXHyXMaEeeoYuc64YE22w" source="_2qXHxnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHvHMaEeeoYuc64YE22w" target="_2qXH03MaEeeoYuc64YE22w" source="_2qXHyXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHvXMaEeeoYuc64YE22w" target="_2qXqoXMaEeeoYuc64YE22w" source="_2qXHyXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHvnMaEeeoYuc64YE22w" target="_2qXqqHMaEeeoYuc64YE22w" source="_2qXqpHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHv3MaEeeoYuc64YE22w" target="_2qXqtHMaEeeoYuc64YE22w" source="_2qXqq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHwHMaEeeoYuc64YE22w" target="_2qXqunMaEeeoYuc64YE22w" source="_2qXqr3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHwXMaEeeoYuc64YE22w" target="_2qXqvnMaEeeoYuc64YE22w" source="_2qXqvXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHwnMaEeeoYuc64YE22w" target="_2qXqvnMaEeeoYuc64YE22w" source="_2qXqt3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXHw3MaEeeoYuc64YE22w" target="_2qXHynMaEeeoYuc64YE22w" source="_2qXqvnMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXHxHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXHxXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_2qXHxnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXHu3MaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHx3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXHyHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXHyXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXHu3MaEeeoYuc64YE22w" outgoing="_2qXHvHMaEeeoYuc64YE22w _2qXHvXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHynMaEeeoYuc64YE22w" name="Initialization" incoming="_2qXHw3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXHy3MaEeeoYuc64YE22w" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXHzHMaEeeoYuc64YE22w" target="_2qXH2XMaEeeoYuc64YE22w" source="_2qXHznMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXHzXMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_2qXHznMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qXHzHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXHz3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXH0HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXH0XMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qXH0nMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1)" structuralFeature="_2qXHEnMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_2qXH03MaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).object" incoming="_2qXHvHMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXH1HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXH1XMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_2qXH1nMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).result" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXH13MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXH2HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_2qXH2XMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).value" incoming="_2qXHzHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXH2nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXH23MaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXqoHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_2qXHEnMaEeeoYuc64YE22w">
            <object xmi:id="_2qXqoXMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_2qXHvXMaEeeoYuc64YE22w" type="_2qXHDHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqonMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqo3MaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_2qXqpHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_2qXHvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqpXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqpnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXqp3MaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_2qXqqHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qXHvnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqqXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqqnMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_2qXqq3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qXHv3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqrHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqrXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXqrnMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_2qXqr3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qXHwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqsHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqsXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2qXqsnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXqs3MaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_2qXqtHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qXHv3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqtXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqtnMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_2qXqt3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qXHwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXquHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXquXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_2qXqunMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qXHwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqu3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqvHMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2qXqvXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qXHwXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2qXqvnMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_2qXHwXMaEeeoYuc64YE22w _2qXHwnMaEeeoYuc64YE22w" outgoing="_2qXHw3MaEeeoYuc64YE22w" decisionInputFlow="_2qXHwnMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2qXqv3MaEeeoYuc64YE22w" name="Test$initialization$1" visibility="protected" method="_2qXHuXMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2qXqwHMaEeeoYuc64YE22w" name="Test" visibility="protected" method="_2qXHGHMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_2qXqwXMaEeeoYuc64YE22w" name="tester" visibility="package" type="_2qXqyXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqwnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqw3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2qXqxHMaEeeoYuc64YE22w" name="" visibility="package" type="_2qXHDHMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqxXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqxnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2qXqx3MaEeeoYuc64YE22w" name="done" visibility="public" method="_2qXHi3MaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_2qXqyHMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2qXHt3MaEeeoYuc64YE22w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2qXqyXMaEeeoYuc64YE22w" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2qXqynMaEeeoYuc64YE22w" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqy3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXqzHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXqzXMaEeeoYuc64YE22w" name="Tester$method$1" specification="_2qXrTXMaEeeoYuc64YE22w" node="_2qXq0nMaEeeoYuc64YE22w _2qXq03MaEeeoYuc64YE22w" group="_2qXq03MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qXqznMaEeeoYuc64YE22w" name="" type="_2qXqyXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXqz3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq0HMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq0XMaEeeoYuc64YE22w" target="_2qXq0nMaEeeoYuc64YE22w" source="_2qXq5HMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_2qXq03MaEeeoYuc64YE22w" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq1HMaEeeoYuc64YE22w" target="_2qXq5HMaEeeoYuc64YE22w" source="_2qXq4XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq1XMaEeeoYuc64YE22w" target="_2qXq5nMaEeeoYuc64YE22w" source="_2qXq5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXq1nMaEeeoYuc64YE22w" target="_2qXq33MaEeeoYuc64YE22w" source="_2qXq5XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq13MaEeeoYuc64YE22w" target="_2qXq6nMaEeeoYuc64YE22w" source="_2qXq5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq2HMaEeeoYuc64YE22w" target="_2qXq8XMaEeeoYuc64YE22w" source="_2qXq7XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq2XMaEeeoYuc64YE22w" target="_2qXq_XMaEeeoYuc64YE22w" source="_2qXq9HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq2nMaEeeoYuc64YE22w" target="_2qXrA3MaEeeoYuc64YE22w" source="_2qXq-HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXq23MaEeeoYuc64YE22w" target="_2qXrB3MaEeeoYuc64YE22w" source="_2qXrBnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXq3HMaEeeoYuc64YE22w" target="_2qXrB3MaEeeoYuc64YE22w" source="_2qXrAHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXq3XMaEeeoYuc64YE22w" target="_2qXq5XMaEeeoYuc64YE22w" source="_2qXrB3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXq3nMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXq33MaEeeoYuc64YE22w" name="Body" incoming="_2qXq1nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXq4HMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qXq4XMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXq1HMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq4nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq43MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXq5HMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXq1HMaEeeoYuc64YE22w" outgoing="_2qXq0XMaEeeoYuc64YE22w _2qXq1XMaEeeoYuc64YE22w _2qXq13MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2qXq5XMaEeeoYuc64YE22w" name="Call(Tester$initialization$1)" incoming="_2qXq3XMaEeeoYuc64YE22w" outgoing="_2qXq1nMaEeeoYuc64YE22w" operation="_2qXrTHMaEeeoYuc64YE22w">
              <target xmi:id="_2qXq5nMaEeeoYuc64YE22w" name="Call(Tester$initialization$1).target" incoming="_2qXq1XMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq53MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq6HMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXq6XMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_2qXqynMaEeeoYuc64YE22w">
              <object xmi:id="_2qXq6nMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_2qXq13MaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq63MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq7HMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qXq7XMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_2qXq2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq7nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq73MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXq8HMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qXq8XMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qXq2HMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq8nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq83MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXq9HMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qXq2XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq9XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq9nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXq93MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qXq-HMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qXq2nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq-XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq-nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qXq-3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXq_HMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qXq_XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qXq2XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXq_nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXq_3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXrAHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qXq3HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrAXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrAnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXrA3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qXq2nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrBHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrBXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qXrBnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qXq23MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXrB3MaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2qXq23MaEeeoYuc64YE22w _2qXq3HMaEeeoYuc64YE22w" outgoing="_2qXq3XMaEeeoYuc64YE22w" decisionInputFlow="_2qXq3HMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXq0nMaEeeoYuc64YE22w" name="Return" incoming="_2qXq0XMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" parameter="_2qXqznMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXrCHMaEeeoYuc64YE22w" name="destroy$method$1" specification="_2qXrUXMaEeeoYuc64YE22w" node="_2qXrCXMaEeeoYuc64YE22w" group="_2qXrCXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qXrCXMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2qXrCnMaEeeoYuc64YE22w" name="Tester$initialization$1" specification="_2qXrTHMaEeeoYuc64YE22w" node="_2qXrC3MaEeeoYuc64YE22w" group="_2qXrC3MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_2qXrC3MaEeeoYuc64YE22w" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrDHMaEeeoYuc64YE22w" target="_2qXrGnMaEeeoYuc64YE22w" source="_2qXrF3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrDXMaEeeoYuc64YE22w" target="_2qXrJHMaEeeoYuc64YE22w" source="_2qXrGnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrDnMaEeeoYuc64YE22w" target="_2qXrLnMaEeeoYuc64YE22w" source="_2qXrGnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrD3MaEeeoYuc64YE22w" target="_2qXrNXMaEeeoYuc64YE22w" source="_2qXrMXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrEHMaEeeoYuc64YE22w" target="_2qXrQXMaEeeoYuc64YE22w" source="_2qXrOHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrEXMaEeeoYuc64YE22w" target="_2qXrR3MaEeeoYuc64YE22w" source="_2qXrPHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXrEnMaEeeoYuc64YE22w" target="_2qXrS3MaEeeoYuc64YE22w" source="_2qXrSnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrE3MaEeeoYuc64YE22w" target="_2qXrS3MaEeeoYuc64YE22w" source="_2qXrRHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXrFHMaEeeoYuc64YE22w" target="_2qXrG3MaEeeoYuc64YE22w" source="_2qXrS3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXrFXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2qXrFnMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_2qXrF3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_2qXrDHMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrGHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrGXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXrGnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_2qXrDHMaEeeoYuc64YE22w" outgoing="_2qXrDXMaEeeoYuc64YE22w _2qXrDnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXrG3MaEeeoYuc64YE22w" name="Initialization" incoming="_2qXrFHMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXrHHMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrHXMaEeeoYuc64YE22w" target="_2qXrKnMaEeeoYuc64YE22w" source="_2qXrH3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXrHnMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_2qXrH3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qXrHXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrIHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrIXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXrInMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2qXrI3MaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1)" structuralFeature="_2qXqynMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_2qXrJHMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).object" incoming="_2qXrDXMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrJXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrJnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXrJ3MaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).result" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrKHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrKXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_2qXrKnMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).value" incoming="_2qXrHXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrK3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrLHMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2qXrLXMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_2qXqynMaEeeoYuc64YE22w">
              <object xmi:id="_2qXrLnMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_2qXrDnMaEeeoYuc64YE22w" type="_2qXqyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrL3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrMHMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_2qXrMXMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_2qXrD3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrMnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrM3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXrNHMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_2qXrNXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_2qXrD3MaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrNnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrN3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXrOHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_2qXrEHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrOXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrOnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXrO3MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_2qXrPHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_2qXrEXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrPXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrPnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2qXrP3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXrQHMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_2qXrQXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_2qXrEHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrQnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrQ3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXrRHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_2qXrE3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrRXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrRnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXrR3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_2qXrEXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrSHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrSXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qXrSnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_2qXrEnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXrS3MaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2qXrEnMaEeeoYuc64YE22w _2qXrE3MaEeeoYuc64YE22w" outgoing="_2qXrFHMaEeeoYuc64YE22w" decisionInputFlow="_2qXrE3MaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2qXrTHMaEeeoYuc64YE22w" name="Tester$initialization$1" visibility="protected" method="_2qXrCnMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_2qXrTXMaEeeoYuc64YE22w" name="Tester" visibility="public" method="_2qXqzXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_2qXrTnMaEeeoYuc64YE22w" name="" visibility="package" type="_2qXqyXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrT3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrUHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2qXrUXMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_2qXrCHMaEeeoYuc64YE22w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2qXrUnMaEeeoYuc64YE22w" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_2qXrU3MaEeeoYuc64YE22w" name="Continue" signal="_2qXrUnMaEeeoYuc64YE22w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2qXrVHMaEeeoYuc64YE22w" name="AssertTrue" visibility="public" node="_2qXra3MaEeeoYuc64YE22w _2qXrbnMaEeeoYuc64YE22w _2qXrbHMaEeeoYuc64YE22w _2qXrdHMaEeeoYuc64YE22w _2qXrenMaEeeoYuc64YE22w _2qXrbXMaEeeoYuc64YE22w" group="_2qXrbnMaEeeoYuc64YE22w _2qXrdHMaEeeoYuc64YE22w _2qXrenMaEeeoYuc64YE22w">
      <packageImport xmi:id="_2qXrVXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2qXrVnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2qXrV3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2qXrWHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2qXrWXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2qXrWnMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrW3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrXHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2qXrXXMaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrXnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrX3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrYHMaEeeoYuc64YE22w" target="_2qXrcHMaEeeoYuc64YE22w" source="_2qXra3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrYXMaEeeoYuc64YE22w" target="_2qXrdnMaEeeoYuc64YE22w" source="_2qXrbHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrYnMaEeeoYuc64YE22w" target="_2qXrmHMaEeeoYuc64YE22w" source="_2qXreXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrY3MaEeeoYuc64YE22w" target="_2qXrxHMaEeeoYuc64YE22w" source="_2qXrc3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrZHMaEeeoYuc64YE22w" target="_2qXrzHMaEeeoYuc64YE22w" source="_2qXreXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrZXMaEeeoYuc64YE22w" target="_2qXr1HMaEeeoYuc64YE22w" source="_2qXrc3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrZnMaEeeoYuc64YE22w" target="_2qXr4XMaEeeoYuc64YE22w" source="_2qXreXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrZ3MaEeeoYuc64YE22w" target="_2qXr6XMaEeeoYuc64YE22w" source="_2qXrc3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXraHMaEeeoYuc64YE22w" target="_2qXrbXMaEeeoYuc64YE22w" source="_2qXrbnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXraXMaEeeoYuc64YE22w" target="_2qXrbXMaEeeoYuc64YE22w" source="_2qXrdHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXranMaEeeoYuc64YE22w" target="_2qXrenMaEeeoYuc64YE22w" source="_2qXrbXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2qXrbnMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2qXraHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrb3MaEeeoYuc64YE22w" target="_2qXrc3MaEeeoYuc64YE22w" source="_2qXrcHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXrcHMaEeeoYuc64YE22w" name="Input(label)" incoming="_2qXrYHMaEeeoYuc64YE22w" outgoing="_2qXrb3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrcXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrcnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXrc3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_2qXrb3MaEeeoYuc64YE22w" outgoing="_2qXrY3MaEeeoYuc64YE22w _2qXrZXMaEeeoYuc64YE22w _2qXrZ3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXrdHMaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_2qXraXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrdXMaEeeoYuc64YE22w" target="_2qXreXMaEeeoYuc64YE22w" source="_2qXrdnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXrdnMaEeeoYuc64YE22w" name="Input(condition)" incoming="_2qXrYXMaEeeoYuc64YE22w" outgoing="_2qXrdXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrd3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXreHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXreXMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_2qXrdXMaEeeoYuc64YE22w" outgoing="_2qXrYnMaEeeoYuc64YE22w _2qXrZHMaEeeoYuc64YE22w _2qXrZnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXrenMaEeeoYuc64YE22w" name="Body(AssertTrue)" incoming="_2qXranMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXre3MaEeeoYuc64YE22w" target="_2qXr93MaEeeoYuc64YE22w" source="_2qXr8XMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrfHMaEeeoYuc64YE22w" target="_2qXr-HMaEeeoYuc64YE22w" source="_2qXr9HMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2qXrfXMaEeeoYuc64YE22w" name="IfStatement@408fd591">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXrfnMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrf3MaEeeoYuc64YE22w" target="_2qXrj3MaEeeoYuc64YE22w" source="_2qXrmHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrgHMaEeeoYuc64YE22w" target="_2qXrmnMaEeeoYuc64YE22w" source="_2qXrmHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrgXMaEeeoYuc64YE22w" target="_2qXroHMaEeeoYuc64YE22w" source="_2qXrnXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrgnMaEeeoYuc64YE22w" target="_2qXroXMaEeeoYuc64YE22w" source="_2qXrknMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrg3MaEeeoYuc64YE22w" target="_2qXronMaEeeoYuc64YE22w" source="_2qXroHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrhHMaEeeoYuc64YE22w" target="_2qXronMaEeeoYuc64YE22w" source="_2qXroHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrhXMaEeeoYuc64YE22w" target="_2qXroXMaEeeoYuc64YE22w" source="_2qXronMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXrhnMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrh3MaEeeoYuc64YE22w" target="_2qXrlXMaEeeoYuc64YE22w" source="_2qXrinMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXriHMaEeeoYuc64YE22w" target="_2qXrpHMaEeeoYuc64YE22w" source="_2qXroXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXriXMaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_2qXrinMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_2qXrh3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXri3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrjHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXrjXMaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXrjnMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_2qXrj3MaEeeoYuc64YE22w" name="Test(==).first" incoming="_2qXrf3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrkHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrkXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXrknMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_2qXrgnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrk3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrlHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXrlXMaEeeoYuc64YE22w" name="Test(==).second" incoming="_2qXrh3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrlnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrl3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXrmHMaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_2qXrYnMaEeeoYuc64YE22w" outgoing="_2qXrf3MaEeeoYuc64YE22w _2qXrgHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXrmXMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2qXrmnMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXrgHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrm3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrnHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXrnXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXrgXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrnnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrn3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXroHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2qXrgXMaEeeoYuc64YE22w" outgoing="_2qXrg3MaEeeoYuc64YE22w _2qXrhHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2qXroXMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2qXrgnMaEeeoYuc64YE22w _2qXrhXMaEeeoYuc64YE22w" outgoing="_2qXriHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXronMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2qXrg3MaEeeoYuc64YE22w _2qXrhHMaEeeoYuc64YE22w" outgoing="_2qXrhXMaEeeoYuc64YE22w" decisionInputFlow="_2qXrhHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXro3MaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_2qXrpHMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2qXriHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrpXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrpnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXrp3MaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrqHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrqXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXrqnMaEeeoYuc64YE22w" name="ExpressionStatement@50f17acd">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrq3MaEeeoYuc64YE22w" target="_2qXrrnMaEeeoYuc64YE22w" source="_2qXrvXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXrrHMaEeeoYuc64YE22w" target="_2qXrrXMaEeeoYuc64YE22w" source="_2qXrtHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXrrXMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_2qXrrHMaEeeoYuc64YE22w">
              <argument xmi:id="_2qXrrnMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_2qXrq3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrr3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrsHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXrsXMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrsnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrs3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXrtHMaEeeoYuc64YE22w" name="Tuple@4ffa0a79" outgoing="_2qXrrHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrtXMaEeeoYuc64YE22w" target="_2qXrwXMaEeeoYuc64YE22w" source="_2qXrt3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXrtnMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_2qXrt3MaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_2qXrtXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXruHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXruXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2qXrunMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXru3MaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXrvHMaEeeoYuc64YE22w" target="_2qXrvXMaEeeoYuc64YE22w" source="_2qXrx3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qXrvXMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2qXrvHMaEeeoYuc64YE22w" outgoing="_2qXrq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrvnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrv3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXrwHMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_2qXrwXMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2qXrtXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrwnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrw3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qXrxHMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2qXrY3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrxXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrxnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qXrx3MaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2qXrvHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXryHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXryXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXrynMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXry3MaEeeoYuc64YE22w" target="_2qXrz3MaEeeoYuc64YE22w" source="_2qXrzHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXrzHMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_2qXrZHMaEeeoYuc64YE22w" outgoing="_2qXry3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXrzXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXrznMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXrz3MaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_2qXry3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr0HMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr0XMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXr0nMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXr03MaEeeoYuc64YE22w" target="_2qXr13MaEeeoYuc64YE22w" source="_2qXr1HMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXr1HMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2qXrZXMaEeeoYuc64YE22w" outgoing="_2qXr03MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr1XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr1nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXr13MaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2qXr03MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr2HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr2XMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXr2nMaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_2qXr23MaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr3HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr3XMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXr3nMaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXr33MaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXr4HMaEeeoYuc64YE22w" target="_2qXr5HMaEeeoYuc64YE22w" source="_2qXr4XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXr4XMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_2qXrZnMaEeeoYuc64YE22w" outgoing="_2qXr4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr4nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr43MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXr5HMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_2qXr4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr5XMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr5nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXr53MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXr6HMaEeeoYuc64YE22w" target="_2qXr7HMaEeeoYuc64YE22w" source="_2qXr6XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXr6XMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2qXrZ3MaEeeoYuc64YE22w" outgoing="_2qXr6HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr6nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr63MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXr7HMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2qXr6HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr7XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr7nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2qXr73MaEeeoYuc64YE22w" body="_2qXrqnMaEeeoYuc64YE22w _2qXrynMaEeeoYuc64YE22w _2qXr0nMaEeeoYuc64YE22w" bodyOutput="_2qXrz3MaEeeoYuc64YE22w _2qXr13MaEeeoYuc64YE22w" decider="_2qXrp3MaEeeoYuc64YE22w" successorClause="_2qXr8HMaEeeoYuc64YE22w" test="_2qXrfnMaEeeoYuc64YE22w"/>
          <clause xmi:id="_2qXr8HMaEeeoYuc64YE22w" body="_2qXr33MaEeeoYuc64YE22w _2qXr53MaEeeoYuc64YE22w" bodyOutput="_2qXr5HMaEeeoYuc64YE22w _2qXr7HMaEeeoYuc64YE22w" decider="_2qXr23MaEeeoYuc64YE22w" predecessorClause="_2qXr73MaEeeoYuc64YE22w" test="_2qXr2nMaEeeoYuc64YE22w"/>
          <result xmi:id="_2qXr8XMaEeeoYuc64YE22w" name="IfStatement@408fd591.result(condition)" outgoing="_2qXre3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr8nMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr83MaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2qXr9HMaEeeoYuc64YE22w" name="IfStatement@408fd591.result(label)" outgoing="_2qXrfHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXr9XMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXr9nMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXr93MaEeeoYuc64YE22w" name="Fork(condition)" incoming="_2qXre3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXr-HMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2qXrfHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXra3MaEeeoYuc64YE22w" name="Input(label)" outgoing="_2qXrYHMaEeeoYuc64YE22w" parameter="_2qXrWnMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXrbHMaEeeoYuc64YE22w" name="Input(condition)" outgoing="_2qXrYXMaEeeoYuc64YE22w" parameter="_2qXrXXMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_2qXrbXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qXraHMaEeeoYuc64YE22w _2qXraXMaEeeoYuc64YE22w" outgoing="_2qXranMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2qXr-XMaEeeoYuc64YE22w" name="AssertEqual" visibility="public" node="_2qXsHXMaEeeoYuc64YE22w _2qXsIXMaEeeoYuc64YE22w _2qXsHnMaEeeoYuc64YE22w _2qXsJ3MaEeeoYuc64YE22w _2qXsH3MaEeeoYuc64YE22w _2qXsLXMaEeeoYuc64YE22w _2qXsM3MaEeeoYuc64YE22w _2qXsIHMaEeeoYuc64YE22w" group="_2qXsIXMaEeeoYuc64YE22w _2qXsJ3MaEeeoYuc64YE22w _2qXsLXMaEeeoYuc64YE22w _2qXsM3MaEeeoYuc64YE22w">
      <packageImport xmi:id="_2qXr-nMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2qXr-3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2qXr_HMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2qXr_XMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2qXr_nMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2qXr_3MaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsAHMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsAXMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2qXsAnMaEeeoYuc64YE22w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsA3MaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsBHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2qXsBXMaEeeoYuc64YE22w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsBnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsB3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsCHMaEeeoYuc64YE22w" target="_2qXsI3MaEeeoYuc64YE22w" source="_2qXsHXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsCXMaEeeoYuc64YE22w" target="_2qXsKXMaEeeoYuc64YE22w" source="_2qXsHnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsCnMaEeeoYuc64YE22w" target="_2qXsL3MaEeeoYuc64YE22w" source="_2qXsH3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsC3MaEeeoYuc64YE22w" target="_2qXsanMaEeeoYuc64YE22w" source="_2qXsLHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsDHMaEeeoYuc64YE22w" target="_2qXscnMaEeeoYuc64YE22w" source="_2qXsMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsDXMaEeeoYuc64YE22w" target="_2qXsrnMaEeeoYuc64YE22w" source="_2qXsJnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsDnMaEeeoYuc64YE22w" target="_2qXs3nMaEeeoYuc64YE22w" source="_2qXsMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsD3MaEeeoYuc64YE22w" target="_2qXtJXMaEeeoYuc64YE22w" source="_2qXsJnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsEHMaEeeoYuc64YE22w" target="_2qXtNXMaEeeoYuc64YE22w" source="_2qXsMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsEXMaEeeoYuc64YE22w" target="_2qXtPXMaEeeoYuc64YE22w" source="_2qXsLHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsEnMaEeeoYuc64YE22w" target="_2qXtXHMaEeeoYuc64YE22w" source="_2qXsMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsE3MaEeeoYuc64YE22w" target="_2qXtf3MaEeeoYuc64YE22w" source="_2qXsJnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsFHMaEeeoYuc64YE22w" target="_2qXtj3MaEeeoYuc64YE22w" source="_2qXsMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsFXMaEeeoYuc64YE22w" target="_2qXtl3MaEeeoYuc64YE22w" source="_2qXsLHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsFnMaEeeoYuc64YE22w" target="_2qXt5nMaEeeoYuc64YE22w" source="_2qXsJnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsF3MaEeeoYuc64YE22w" target="_2qXt83MaEeeoYuc64YE22w" source="_2qXsMnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsGHMaEeeoYuc64YE22w" target="_2qXt-3MaEeeoYuc64YE22w" source="_2qXsLHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsGXMaEeeoYuc64YE22w" target="_2qXsIHMaEeeoYuc64YE22w" source="_2qXsIXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsGnMaEeeoYuc64YE22w" target="_2qXsIHMaEeeoYuc64YE22w" source="_2qXsJ3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsG3MaEeeoYuc64YE22w" target="_2qXsIHMaEeeoYuc64YE22w" source="_2qXsLXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsHHMaEeeoYuc64YE22w" target="_2qXsM3MaEeeoYuc64YE22w" source="_2qXsIHMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2qXsIXMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2qXsGXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsInMaEeeoYuc64YE22w" target="_2qXsJnMaEeeoYuc64YE22w" source="_2qXsI3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXsI3MaEeeoYuc64YE22w" name="Input(label)" incoming="_2qXsCHMaEeeoYuc64YE22w" outgoing="_2qXsInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsJHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsJXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXsJnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_2qXsInMaEeeoYuc64YE22w" outgoing="_2qXsDXMaEeeoYuc64YE22w _2qXsD3MaEeeoYuc64YE22w _2qXsE3MaEeeoYuc64YE22w _2qXsFnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXsJ3MaEeeoYuc64YE22w" name="Node(Input(value1))" outgoing="_2qXsGnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsKHMaEeeoYuc64YE22w" target="_2qXsLHMaEeeoYuc64YE22w" source="_2qXsKXMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXsKXMaEeeoYuc64YE22w" name="Input(value1)" incoming="_2qXsCXMaEeeoYuc64YE22w" outgoing="_2qXsKHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsKnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsK3MaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXsLHMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_2qXsKHMaEeeoYuc64YE22w" outgoing="_2qXsC3MaEeeoYuc64YE22w _2qXsEXMaEeeoYuc64YE22w _2qXsFXMaEeeoYuc64YE22w _2qXsGHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXsLXMaEeeoYuc64YE22w" name="Node(Input(value2))" outgoing="_2qXsG3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsLnMaEeeoYuc64YE22w" target="_2qXsMnMaEeeoYuc64YE22w" source="_2qXsL3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXsL3MaEeeoYuc64YE22w" name="Input(value2)" incoming="_2qXsCnMaEeeoYuc64YE22w" outgoing="_2qXsLnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsMHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsMXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXsMnMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_2qXsLnMaEeeoYuc64YE22w" outgoing="_2qXsDHMaEeeoYuc64YE22w _2qXsDnMaEeeoYuc64YE22w _2qXsEHMaEeeoYuc64YE22w _2qXsEnMaEeeoYuc64YE22w _2qXsFHMaEeeoYuc64YE22w _2qXsF3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXsM3MaEeeoYuc64YE22w" name="Body(AssertEqual)" incoming="_2qXsHHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsNHMaEeeoYuc64YE22w" target="_2qXuD3MaEeeoYuc64YE22w" source="_2qXuA3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsNXMaEeeoYuc64YE22w" target="_2qXuEHMaEeeoYuc64YE22w" source="_2qXuBnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsNnMaEeeoYuc64YE22w" target="_2qXuEXMaEeeoYuc64YE22w" source="_2qXuCXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsN3MaEeeoYuc64YE22w" target="_2qXuEnMaEeeoYuc64YE22w" source="_2qXuDHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2qXsOHMaEeeoYuc64YE22w" name="IfStatement@5a74e46a">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsOXMaEeeoYuc64YE22w" target="_2qXsyHMaEeeoYuc64YE22w" source="_2qXslXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsOnMaEeeoYuc64YE22w" target="_2qXtq3MaEeeoYuc64YE22w" source="_2qXtn3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsO3MaEeeoYuc64YE22w" target="_2qXtrHMaEeeoYuc64YE22w" source="_2qXtonMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsPHMaEeeoYuc64YE22w" target="_2qXtrXMaEeeoYuc64YE22w" source="_2qXtpXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsPXMaEeeoYuc64YE22w" target="_2qXtrnMaEeeoYuc64YE22w" source="_2qXtqHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsPnMaEeeoYuc64YE22w" target="_2qXs6nMaEeeoYuc64YE22w" source="_2qXsynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsP3MaEeeoYuc64YE22w" target="_2qXtCXMaEeeoYuc64YE22w" source="_2qXsynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsQHMaEeeoYuc64YE22w" target="_2qXtLXMaEeeoYuc64YE22w" source="_2qXsynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsQXMaEeeoYuc64YE22w" target="_2qXth3MaEeeoYuc64YE22w" source="_2qXsynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsQnMaEeeoYuc64YE22w" target="_2qXs4HMaEeeoYuc64YE22w" source="_2qXsyHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsQ3MaEeeoYuc64YE22w" target="_2qXtr3MaEeeoYuc64YE22w" source="_2qXs4HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsRHMaEeeoYuc64YE22w" target="_2qXtwXMaEeeoYuc64YE22w" source="_2qXtq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsRXMaEeeoYuc64YE22w" target="_2qXtyXMaEeeoYuc64YE22w" source="_2qXtrHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsRnMaEeeoYuc64YE22w" target="_2qXt0XMaEeeoYuc64YE22w" source="_2qXtrXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsR3MaEeeoYuc64YE22w" target="_2qXt2XMaEeeoYuc64YE22w" source="_2qXtrnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXsSHMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsSXMaEeeoYuc64YE22w" target="_2qXsYXMaEeeoYuc64YE22w" source="_2qXsanMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsSnMaEeeoYuc64YE22w" target="_2qXsbHMaEeeoYuc64YE22w" source="_2qXsanMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsS3MaEeeoYuc64YE22w" target="_2qXsZ3MaEeeoYuc64YE22w" source="_2qXscnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsTHMaEeeoYuc64YE22w" target="_2qXsdHMaEeeoYuc64YE22w" source="_2qXscnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsTXMaEeeoYuc64YE22w" target="_2qXse3MaEeeoYuc64YE22w" source="_2qXsb3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsTnMaEeeoYuc64YE22w" target="_2qXsfHMaEeeoYuc64YE22w" source="_2qXsd3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsT3MaEeeoYuc64YE22w" target="_2qXsfnMaEeeoYuc64YE22w" source="_2qXse3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsUHMaEeeoYuc64YE22w" target="_2qXshXMaEeeoYuc64YE22w" source="_2qXsfHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsUXMaEeeoYuc64YE22w" target="_2qXsi3MaEeeoYuc64YE22w" source="_2qXsfHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsUnMaEeeoYuc64YE22w" target="_2qXsYHMaEeeoYuc64YE22w" source="_2qXsi3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXsU3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsVHMaEeeoYuc64YE22w" target="_2qXsfXMaEeeoYuc64YE22w" source="_2qXsi3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXsVXMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsVnMaEeeoYuc64YE22w" target="_2qXsjHMaEeeoYuc64YE22w" source="_2qXsenMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsV3MaEeeoYuc64YE22w" target="_2qXsjHMaEeeoYuc64YE22w" source="_2qXse3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsWHMaEeeoYuc64YE22w" target="_2qXsi3MaEeeoYuc64YE22w" source="_2qXsjHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXsWXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsWnMaEeeoYuc64YE22w" target="_2qXshHMaEeeoYuc64YE22w" source="_2qXsjHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXsW3MaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsXHMaEeeoYuc64YE22w" target="_2qXsjXMaEeeoYuc64YE22w" source="_2qXsZHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsXXMaEeeoYuc64YE22w" target="_2qXsjXMaEeeoYuc64YE22w" source="_2qXsgXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsXnMaEeeoYuc64YE22w" target="_2qXsjXMaEeeoYuc64YE22w" source="_2qXsiHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsX3MaEeeoYuc64YE22w" target="_2qXsj3MaEeeoYuc64YE22w" source="_2qXsjXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXsYHMaEeeoYuc64YE22w" name="Test(==)" incoming="_2qXsUnMaEeeoYuc64YE22w">
              <first xmi:id="_2qXsYXMaEeeoYuc64YE22w" name="Test(==).first" incoming="_2qXsSXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsYnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsY3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXsZHMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_2qXsXHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsZXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsZnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXsZ3MaEeeoYuc64YE22w" name="Test(==).second" incoming="_2qXsS3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsaHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsaXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXsanMaEeeoYuc64YE22w" name="Fork(Fork(value1))" incoming="_2qXsC3MaEeeoYuc64YE22w" outgoing="_2qXsSXMaEeeoYuc64YE22w _2qXsSnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsa3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2qXsbHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXsSnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsbXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsbnMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXsb3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXsTXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXscHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXscXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXscnMaEeeoYuc64YE22w" name="Fork(Fork(value2))" incoming="_2qXsDHMaEeeoYuc64YE22w" outgoing="_2qXsS3MaEeeoYuc64YE22w _2qXsTHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsc3MaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2qXsdHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXsTHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsdXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsdnMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXsd3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXsTnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXseHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXseXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2qXsenMaEeeoYuc64YE22w" name="Initial(Test(==))" outgoing="_2qXsVnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXse3MaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2qXsTXMaEeeoYuc64YE22w" outgoing="_2qXsT3MaEeeoYuc64YE22w _2qXsV3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXsfHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2qXsTnMaEeeoYuc64YE22w" outgoing="_2qXsUHMaEeeoYuc64YE22w _2qXsUXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsfXMaEeeoYuc64YE22w" name="Call(Not)" incoming="_2qXsVHMaEeeoYuc64YE22w">
              <argument xmi:id="_2qXsfnMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2qXsT3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsf3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsgHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXsgXMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_2qXsXXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsgnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsg3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXshHMaEeeoYuc64YE22w" name="Call(Not)" incoming="_2qXsWnMaEeeoYuc64YE22w">
              <argument xmi:id="_2qXshXMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2qXsUHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXshnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsh3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXsiHMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_2qXsXnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsiXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsinMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXsi3MaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2qXsUXMaEeeoYuc64YE22w _2qXsWHMaEeeoYuc64YE22w" outgoing="_2qXsUnMaEeeoYuc64YE22w _2qXsVHMaEeeoYuc64YE22w" decisionInputFlow="_2qXsUXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXsjHMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2qXsVnMaEeeoYuc64YE22w _2qXsV3MaEeeoYuc64YE22w" outgoing="_2qXsWHMaEeeoYuc64YE22w _2qXsWnMaEeeoYuc64YE22w" decisionInputFlow="_2qXsV3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2qXsjXMaEeeoYuc64YE22w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_2qXsXHMaEeeoYuc64YE22w _2qXsXXMaEeeoYuc64YE22w _2qXsXnMaEeeoYuc64YE22w" outgoing="_2qXsX3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsjnMaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_2qXsj3MaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_2qXsX3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXskHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXskXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXsknMaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsk3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXslHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXslXMaEeeoYuc64YE22w" name="ExpressionStatement@22a84cc8" outgoing="_2qXsOXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXslnMaEeeoYuc64YE22w" target="_2qXsmXMaEeeoYuc64YE22w" source="_2qXsu3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXsl3MaEeeoYuc64YE22w" target="_2qXsmHMaEeeoYuc64YE22w" source="_2qXsnHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsmHMaEeeoYuc64YE22w" name="Call(Write)" incoming="_2qXsl3MaEeeoYuc64YE22w" behavior="_2qXue3MaEeeoYuc64YE22w">
              <argument xmi:id="_2qXsmXMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_2qXslnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsmnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsm3MaEeeoYuc64YE22w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXsnHMaEeeoYuc64YE22w" name="Tuple@2754cca3" outgoing="_2qXsl3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsnXMaEeeoYuc64YE22w" target="_2qXsq3MaEeeoYuc64YE22w" source="_2qXsoXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsnnMaEeeoYuc64YE22w" target="_2qXsv3MaEeeoYuc64YE22w" source="_2qXsp3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsn3MaEeeoYuc64YE22w" target="_2qXswnMaEeeoYuc64YE22w" source="_2qXstXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXsoHMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_2qXsoXMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_2qXsnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsonMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXso3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2qXspHMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXspXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXspnMaEeeoYuc64YE22w" target="_2qXsp3MaEeeoYuc64YE22w" source="_2qXssXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qXsp3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2qXspnMaEeeoYuc64YE22w" outgoing="_2qXsnnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsqHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsqXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsqnMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_2qXsq3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2qXsnXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsrHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsrXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qXsrnMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2qXsDXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsr3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXssHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qXssXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2qXspnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXssnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXss3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXstHMaEeeoYuc64YE22w" name="Value(&quot;==&quot;)">
                <result xmi:id="_2qXstXMaEeeoYuc64YE22w" name="Value(&quot;==&quot;).result" outgoing="_2qXsn3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXstnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXst3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2qXsuHMaEeeoYuc64YE22w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXsuXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsunMaEeeoYuc64YE22w" target="_2qXsu3MaEeeoYuc64YE22w" source="_2qXsxXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qXsu3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2qXsunMaEeeoYuc64YE22w" outgoing="_2qXslnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsvHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsvXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXsvnMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_2qXsv3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2qXsnnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXswHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXswXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_2qXswnMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2qXsn3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsw3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsxHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_2qXsxXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2qXsunMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXsxnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXsx3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXsyHMaEeeoYuc64YE22w" name="ExpressionStatement@39057cfc" incoming="_2qXsOXMaEeeoYuc64YE22w" outgoing="_2qXsQnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsyXMaEeeoYuc64YE22w" target="_2qXsynMaEeeoYuc64YE22w" source="_2qXs33MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXsynMaEeeoYuc64YE22w" name="Fork(s)@57f7fdde" incoming="_2qXsyXMaEeeoYuc64YE22w" outgoing="_2qXsPnMaEeeoYuc64YE22w _2qXsP3MaEeeoYuc64YE22w _2qXsQHMaEeeoYuc64YE22w _2qXsQXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXsy3MaEeeoYuc64YE22w" name="RightHandSide@47918aa7">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2qXszHMaEeeoYuc64YE22w" name="CastExpression@47918aa7" mode="parallel" outputElement="_2qXs33MaEeeoYuc64YE22w" inputElement="_2qXs3nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXszXMaEeeoYuc64YE22w" target="_2qXs1nMaEeeoYuc64YE22w" source="_2qXs3HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsznMaEeeoYuc64YE22w" target="_2qXs3XMaEeeoYuc64YE22w" source="_2qXs3HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXsz3MaEeeoYuc64YE22w" target="_2qXs3XMaEeeoYuc64YE22w" source="_2qXs2XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs0HMaEeeoYuc64YE22w" target="_2qXs1HMaEeeoYuc64YE22w" source="_2qXs3XMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXs0XMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs0nMaEeeoYuc64YE22w" target="_2qXs3HMaEeeoYuc64YE22w" source="_2qXs3nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs03MaEeeoYuc64YE22w" target="_2qXs33MaEeeoYuc64YE22w" source="_2qXs1HMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2qXs1HMaEeeoYuc64YE22w" name="Merge(CastExpression@47918aa7.operand)" incoming="_2qXs0HMaEeeoYuc64YE22w" outgoing="_2qXs03MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2qXs1XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_2qXs1nMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).object" incoming="_2qXszXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs13MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs2HMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_2qXs2XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).result" outgoing="_2qXsz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs2nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs23MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2qXs3HMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_2qXs0nMaEeeoYuc64YE22w" outgoing="_2qXszXMaEeeoYuc64YE22w _2qXsznMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2qXs3XMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_2qXsznMaEeeoYuc64YE22w _2qXsz3MaEeeoYuc64YE22w" outgoing="_2qXs0HMaEeeoYuc64YE22w" decisionInputFlow="_2qXsz3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2qXs3nMaEeeoYuc64YE22w" name="CastExpression@47918aa7.inputElement" incoming="_2qXsDnMaEeeoYuc64YE22w" outgoing="_2qXs0nMaEeeoYuc64YE22w" regionAsInput="_2qXszHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2qXs33MaEeeoYuc64YE22w" name="CastExpression@47918aa7.outputElement" incoming="_2qXs03MaEeeoYuc64YE22w" outgoing="_2qXsyXMaEeeoYuc64YE22w" regionAsOutput="_2qXszHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_2qXs4HMaEeeoYuc64YE22w" name="IfStatement@2bc0e645" incoming="_2qXsQnMaEeeoYuc64YE22w" outgoing="_2qXsQ3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXs4XMaEeeoYuc64YE22w" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXs4nMaEeeoYuc64YE22w" target="_2qXs6XMaEeeoYuc64YE22w" source="_2qXs43MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXs43MaEeeoYuc64YE22w" name="Operands(EqualityExpression@630c46d7)" outgoing="_2qXs4nMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXs5HMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_2qXs5XMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs5nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs53MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2qXs6HMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXs6XMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2qXs4nMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXs6nMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXsPnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs63MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs7HMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2qXs7XMaEeeoYuc64YE22w" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs7nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs73MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXs8HMaEeeoYuc64YE22w" name="ExpressionStatement@3244612c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs8XMaEeeoYuc64YE22w" target="_2qXs9HMaEeeoYuc64YE22w" source="_2qXtFnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXs8nMaEeeoYuc64YE22w" target="_2qXs83MaEeeoYuc64YE22w" source="_2qXs93MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXs83MaEeeoYuc64YE22w" name="Call(Write)" incoming="_2qXs8nMaEeeoYuc64YE22w" behavior="_2qXue3MaEeeoYuc64YE22w">
                <argument xmi:id="_2qXs9HMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_2qXs8XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs9XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs9nMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXs93MaEeeoYuc64YE22w" name="Tuple@3fa04df0" outgoing="_2qXs8nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs-HMaEeeoYuc64YE22w" target="_2qXtBnMaEeeoYuc64YE22w" source="_2qXs_HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs-XMaEeeoYuc64YE22w" target="_2qXtGnMaEeeoYuc64YE22w" source="_2qXtAnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXs-nMaEeeoYuc64YE22w" target="_2qXtHXMaEeeoYuc64YE22w" source="_2qXtEHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXs-3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_2qXs_HMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_2qXs-HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXs_XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXs_nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXs_3MaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtAHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtAXMaEeeoYuc64YE22w" target="_2qXtAnMaEeeoYuc64YE22w" source="_2qXtDHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXtAnMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2qXtAXMaEeeoYuc64YE22w" outgoing="_2qXs-XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtA3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtBHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXtBXMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_2qXtBnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2qXs-HMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtB3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtCHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_2qXtCXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2qXsP3MaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtCnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtC3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2qXtDHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2qXtAXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtDXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtDnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXtD3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_2qXtEHMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_2qXs-nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtEXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtEnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXtE3MaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtFHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtFXMaEeeoYuc64YE22w" target="_2qXtFnMaEeeoYuc64YE22w" source="_2qXtIHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXtFnMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2qXtFXMaEeeoYuc64YE22w" outgoing="_2qXs8XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtF3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtGHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXtGXMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_2qXtGnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2qXs-XMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtG3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtHHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_2qXtHXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2qXs-nMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtHnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtH3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_2qXtIHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2qXtFXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtIXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtInMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtI3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtJHMaEeeoYuc64YE22w" target="_2qXtKHMaEeeoYuc64YE22w" source="_2qXtJXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtJXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2qXsD3MaEeeoYuc64YE22w" outgoing="_2qXtJHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtJnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtJ3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtKHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2qXtJHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtKXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtKnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtK3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@57f7fdde)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtLHMaEeeoYuc64YE22w" target="_2qXtMHMaEeeoYuc64YE22w" source="_2qXtLXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtLXMaEeeoYuc64YE22w" name="Passthru(Fork(s)@57f7fdde).input" incoming="_2qXsQHMaEeeoYuc64YE22w" outgoing="_2qXtLHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtLnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtL3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtMHMaEeeoYuc64YE22w" name="Passthru(Fork(s)@57f7fdde).output" incoming="_2qXtLHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtMXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtMnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtM3MaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtNHMaEeeoYuc64YE22w" target="_2qXtOHMaEeeoYuc64YE22w" source="_2qXtNXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtNXMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2qXsEHMaEeeoYuc64YE22w" outgoing="_2qXtNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtNnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtN3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtOHMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2qXtNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtOXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtOnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtO3MaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtPHMaEeeoYuc64YE22w" target="_2qXtQHMaEeeoYuc64YE22w" source="_2qXtPXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtPXMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2qXsEXMaEeeoYuc64YE22w" outgoing="_2qXtPHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtPnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtP3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtQHMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2qXtPHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtQXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtQnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXtQ3MaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_2qXtRHMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtRXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtRnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXtR3MaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtSHMaEeeoYuc64YE22w" name="ExpressionStatement@7e0ec810">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtSXMaEeeoYuc64YE22w" target="_2qXtTHMaEeeoYuc64YE22w" source="_2qXtfHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXtSnMaEeeoYuc64YE22w" target="_2qXtS3MaEeeoYuc64YE22w" source="_2qXtT3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXtS3MaEeeoYuc64YE22w" name="Call(Write)" incoming="_2qXtSnMaEeeoYuc64YE22w" behavior="_2qXue3MaEeeoYuc64YE22w">
                <argument xmi:id="_2qXtTHMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_2qXtSXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtTXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtTnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtT3MaEeeoYuc64YE22w" name="Tuple@1ad8d801" outgoing="_2qXtSnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtUHMaEeeoYuc64YE22w" target="_2qXtZHMaEeeoYuc64YE22w" source="_2qXtXHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXtUXMaEeeoYuc64YE22w" target="_2qXtY3MaEeeoYuc64YE22w" source="_2qXtW3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtUnMaEeeoYuc64YE22w" target="_2qXtb3MaEeeoYuc64YE22w" source="_2qXtXHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXtU3MaEeeoYuc64YE22w" target="_2qXte3MaEeeoYuc64YE22w" source="_2qXtenMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtVHMaEeeoYuc64YE22w" target="_2qXte3MaEeeoYuc64YE22w" source="_2qXtZ3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXtVXMaEeeoYuc64YE22w" target="_2qXtanMaEeeoYuc64YE22w" source="_2qXte3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXtVnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2qXtV3MaEeeoYuc64YE22w" target="_2qXtcHMaEeeoYuc64YE22w" source="_2qXte3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXtWHMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtWXMaEeeoYuc64YE22w" target="_2qXtfHMaEeeoYuc64YE22w" source="_2qXtbHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtWnMaEeeoYuc64YE22w" target="_2qXtfHMaEeeoYuc64YE22w" source="_2qXtcnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtW3MaEeeoYuc64YE22w" name="Operands(EqualityExpression@54ddd13c)" outgoing="_2qXtUXMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ForkNode" xmi:id="_2qXtXHMaEeeoYuc64YE22w" name="Fork()@151fa035" incoming="_2qXsEnMaEeeoYuc64YE22w" outgoing="_2qXtUHMaEeeoYuc64YE22w _2qXtUnMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtXXMaEeeoYuc64YE22w" name="RightHandSide@5f6698a1"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXtXnMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_2qXtX3MaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtYHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtYXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2qXtYnMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXtY3MaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2qXtUXMaEeeoYuc64YE22w">
                  <argument xmi:id="_2qXtZHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXtUHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtZXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtZnMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_2qXtZ3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXtVHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtaHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtaXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtanMaEeeoYuc64YE22w" name="NullCoalescingExpression@8494261.operand2" incoming="_2qXtVXMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXta3MaEeeoYuc64YE22w" target="_2qXtbHMaEeeoYuc64YE22w" source="_2qXtb3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXtbHMaEeeoYuc64YE22w" name="NullCoalescingExpression@8494261.operand2.result" incoming="_2qXta3MaEeeoYuc64YE22w" outgoing="_2qXtWXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtbXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtbnMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_2qXtb3MaEeeoYuc64YE22w" name="Merge(Fork()@151fa035)" incoming="_2qXtUnMaEeeoYuc64YE22w" outgoing="_2qXta3MaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtcHMaEeeoYuc64YE22w" name="NullCoalescingExpression@8494261.operand3" incoming="_2qXtV3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtcXMaEeeoYuc64YE22w" target="_2qXtcnMaEeeoYuc64YE22w" source="_2qXtdnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_2qXtcnMaEeeoYuc64YE22w" name="NullCoalescingExpression@8494261.operand3.result" incoming="_2qXtcXMaEeeoYuc64YE22w" outgoing="_2qXtWnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtc3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtdHMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXtdXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                    <result xmi:id="_2qXtdnMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_2qXtcXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtd3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXteHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2qXteXMaEeeoYuc64YE22w" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2qXtenMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@8494261)" outgoing="_2qXtU3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2qXte3MaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@8494261)" incoming="_2qXtU3MaEeeoYuc64YE22w _2qXtVHMaEeeoYuc64YE22w" outgoing="_2qXtVXMaEeeoYuc64YE22w _2qXtV3MaEeeoYuc64YE22w" decisionInputFlow="_2qXtVHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2qXtfHMaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@8494261.result)" incoming="_2qXtWXMaEeeoYuc64YE22w _2qXtWnMaEeeoYuc64YE22w" outgoing="_2qXtSXMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtfXMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtfnMaEeeoYuc64YE22w" target="_2qXtgnMaEeeoYuc64YE22w" source="_2qXtf3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtf3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2qXsE3MaEeeoYuc64YE22w" outgoing="_2qXtfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtgHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtgXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtgnMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2qXtfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtg3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXthHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXthXMaEeeoYuc64YE22w" name="Passthru(Fork(s)@57f7fdde)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXthnMaEeeoYuc64YE22w" target="_2qXtinMaEeeoYuc64YE22w" source="_2qXth3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXth3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@57f7fdde).input" incoming="_2qXsQXMaEeeoYuc64YE22w" outgoing="_2qXthnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtiHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtiXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtinMaEeeoYuc64YE22w" name="Passthru(Fork(s)@57f7fdde).output" incoming="_2qXthnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXti3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtjHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtjXMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtjnMaEeeoYuc64YE22w" target="_2qXtknMaEeeoYuc64YE22w" source="_2qXtj3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtj3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2qXsFHMaEeeoYuc64YE22w" outgoing="_2qXtjnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtkHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtkXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtknMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2qXtjnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtk3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtlHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtlXMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtlnMaEeeoYuc64YE22w" target="_2qXtmnMaEeeoYuc64YE22w" source="_2qXtl3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_2qXtl3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2qXsFXMaEeeoYuc64YE22w" outgoing="_2qXtlnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtmHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtmXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2qXtmnMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2qXtlnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtm3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtnHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_2qXtnXMaEeeoYuc64YE22w" body="_2qXs8HMaEeeoYuc64YE22w _2qXtI3MaEeeoYuc64YE22w _2qXtK3MaEeeoYuc64YE22w _2qXtM3MaEeeoYuc64YE22w _2qXtO3MaEeeoYuc64YE22w" bodyOutput="_2qXtKHMaEeeoYuc64YE22w _2qXtMHMaEeeoYuc64YE22w _2qXtOHMaEeeoYuc64YE22w _2qXtQHMaEeeoYuc64YE22w" decider="_2qXs7XMaEeeoYuc64YE22w" successorClause="_2qXtnnMaEeeoYuc64YE22w" test="_2qXs4XMaEeeoYuc64YE22w"/>
            <clause xmi:id="_2qXtnnMaEeeoYuc64YE22w" body="_2qXtSHMaEeeoYuc64YE22w _2qXtfXMaEeeoYuc64YE22w _2qXthXMaEeeoYuc64YE22w _2qXtjXMaEeeoYuc64YE22w _2qXtlXMaEeeoYuc64YE22w" bodyOutput="_2qXtgnMaEeeoYuc64YE22w _2qXtinMaEeeoYuc64YE22w _2qXtknMaEeeoYuc64YE22w _2qXtmnMaEeeoYuc64YE22w" decider="_2qXtRHMaEeeoYuc64YE22w" predecessorClause="_2qXtnXMaEeeoYuc64YE22w" test="_2qXtQ3MaEeeoYuc64YE22w"/>
            <result xmi:id="_2qXtn3MaEeeoYuc64YE22w" name="IfStatement@2bc0e645.result(label)" outgoing="_2qXsOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtoHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtoXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2qXtonMaEeeoYuc64YE22w" name="IfStatement@2bc0e645.result(s)" outgoing="_2qXsO3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXto3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtpHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2qXtpXMaEeeoYuc64YE22w" name="IfStatement@2bc0e645.result(value2)" outgoing="_2qXsPHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtpnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtp3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_2qXtqHMaEeeoYuc64YE22w" name="IfStatement@2bc0e645.result(value1)" outgoing="_2qXsPXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtqXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtqnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXtq3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_2qXsOnMaEeeoYuc64YE22w" outgoing="_2qXsRHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXtrHMaEeeoYuc64YE22w" name="Fork(s)" incoming="_2qXsO3MaEeeoYuc64YE22w" outgoing="_2qXsRXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXtrXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_2qXsPHMaEeeoYuc64YE22w" outgoing="_2qXsRnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2qXtrnMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_2qXsPXMaEeeoYuc64YE22w" outgoing="_2qXsR3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtr3MaEeeoYuc64YE22w" name="ExpressionStatement@68525503" incoming="_2qXsQ3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtsHMaEeeoYuc64YE22w" target="_2qXts3MaEeeoYuc64YE22w" source="_2qXtu3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXtsXMaEeeoYuc64YE22w" target="_2qXtsnMaEeeoYuc64YE22w" source="_2qXtuXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXtsnMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_2qXtsXMaEeeoYuc64YE22w">
              <argument xmi:id="_2qXts3MaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_2qXtsHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXttHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXttXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXttnMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtt3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtuHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtuXMaEeeoYuc64YE22w" name="Tuple@6859b893" outgoing="_2qXtsXMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXtunMaEeeoYuc64YE22w" name="Value(&quot;&quot;)">
                <result xmi:id="_2qXtu3MaEeeoYuc64YE22w" name="Value(&quot;&quot;).result" outgoing="_2qXtsHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtvHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtvXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2qXtvnMaEeeoYuc64YE22w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtv3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtwHMaEeeoYuc64YE22w" target="_2qXtxHMaEeeoYuc64YE22w" source="_2qXtwXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXtwXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2qXsRHMaEeeoYuc64YE22w" outgoing="_2qXtwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtwnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtw3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXtxHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2qXtwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtxXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtxnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtx3MaEeeoYuc64YE22w" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXtyHMaEeeoYuc64YE22w" target="_2qXtzHMaEeeoYuc64YE22w" source="_2qXtyXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXtyXMaEeeoYuc64YE22w" name="Passthru(Fork(s)).input" incoming="_2qXsRXMaEeeoYuc64YE22w" outgoing="_2qXtyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtynMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXty3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXtzHMaEeeoYuc64YE22w" name="Passthru(Fork(s)).output" incoming="_2qXtyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXtzXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXtznMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXtz3MaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXt0HMaEeeoYuc64YE22w" target="_2qXt1HMaEeeoYuc64YE22w" source="_2qXt0XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXt0XMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2qXsRnMaEeeoYuc64YE22w" outgoing="_2qXt0HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt0nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt03MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXt1HMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2qXt0HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt1XMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt1nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXt13MaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXt2HMaEeeoYuc64YE22w" target="_2qXt3HMaEeeoYuc64YE22w" source="_2qXt2XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXt2XMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2qXsR3MaEeeoYuc64YE22w" outgoing="_2qXt2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt2nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt23MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXt3HMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2qXt2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt3XMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt3nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXt33MaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_2qXt4HMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt4XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt4nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXt43MaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXt5HMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXt5XMaEeeoYuc64YE22w" target="_2qXt6XMaEeeoYuc64YE22w" source="_2qXt5nMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXt5nMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_2qXsFnMaEeeoYuc64YE22w" outgoing="_2qXt5XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt53MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt6HMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXt6XMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_2qXt5XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt6nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt63MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXt7HMaEeeoYuc64YE22w" name="Value(null)">
            <result xmi:id="_2qXt7XMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt7nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt73MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_2qXt8HMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXt8XMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXt8nMaEeeoYuc64YE22w" target="_2qXt9nMaEeeoYuc64YE22w" source="_2qXt83MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXt83MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_2qXsF3MaEeeoYuc64YE22w" outgoing="_2qXt8nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt9HMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt9XMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXt9nMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_2qXt8nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt93MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt-HMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXt-XMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXt-nMaEeeoYuc64YE22w" target="_2qXt_nMaEeeoYuc64YE22w" source="_2qXt-3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXt-3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_2qXsGHMaEeeoYuc64YE22w" outgoing="_2qXt-nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt_HMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXt_XMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2qXt_nMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_2qXt-nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXt_3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuAHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2qXuAXMaEeeoYuc64YE22w" body="_2qXslXMaEeeoYuc64YE22w _2qXsyHMaEeeoYuc64YE22w _2qXs4HMaEeeoYuc64YE22w _2qXtr3MaEeeoYuc64YE22w _2qXtv3MaEeeoYuc64YE22w _2qXtx3MaEeeoYuc64YE22w _2qXtz3MaEeeoYuc64YE22w _2qXt13MaEeeoYuc64YE22w" bodyOutput="_2qXtxHMaEeeoYuc64YE22w _2qXtzHMaEeeoYuc64YE22w _2qXt1HMaEeeoYuc64YE22w _2qXt3HMaEeeoYuc64YE22w" decider="_2qXsknMaEeeoYuc64YE22w" successorClause="_2qXuAnMaEeeoYuc64YE22w" test="_2qXsSHMaEeeoYuc64YE22w"/>
          <clause xmi:id="_2qXuAnMaEeeoYuc64YE22w" body="_2qXt5HMaEeeoYuc64YE22w _2qXt7HMaEeeoYuc64YE22w _2qXt8XMaEeeoYuc64YE22w _2qXt-XMaEeeoYuc64YE22w" bodyOutput="_2qXt6XMaEeeoYuc64YE22w _2qXt7XMaEeeoYuc64YE22w _2qXt9nMaEeeoYuc64YE22w _2qXt_nMaEeeoYuc64YE22w" decider="_2qXt4HMaEeeoYuc64YE22w" predecessorClause="_2qXuAXMaEeeoYuc64YE22w" test="_2qXt33MaEeeoYuc64YE22w"/>
          <result xmi:id="_2qXuA3MaEeeoYuc64YE22w" name="IfStatement@5a74e46a.result(label)" outgoing="_2qXsNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuBHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuBXMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2qXuBnMaEeeoYuc64YE22w" name="IfStatement@5a74e46a.result(s)" outgoing="_2qXsNXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuB3MaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuCHMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2qXuCXMaEeeoYuc64YE22w" name="IfStatement@5a74e46a.result(value2)" outgoing="_2qXsNnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuCnMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuC3MaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_2qXuDHMaEeeoYuc64YE22w" name="IfStatement@5a74e46a.result(value1)" outgoing="_2qXsN3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuDXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuDnMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuD3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_2qXsNHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuEHMaEeeoYuc64YE22w" name="Fork(s)" incoming="_2qXsNXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuEXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_2qXsNnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuEnMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_2qXsN3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXsHXMaEeeoYuc64YE22w" name="Input(label)" outgoing="_2qXsCHMaEeeoYuc64YE22w" parameter="_2qXr_3MaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXsHnMaEeeoYuc64YE22w" name="Input(value1)" outgoing="_2qXsCXMaEeeoYuc64YE22w" parameter="_2qXsAnMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXsH3MaEeeoYuc64YE22w" name="Input(value2)" outgoing="_2qXsCnMaEeeoYuc64YE22w" parameter="_2qXsBXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_2qXsIHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qXsGXMaEeeoYuc64YE22w _2qXsGnMaEeeoYuc64YE22w _2qXsG3MaEeeoYuc64YE22w" outgoing="_2qXsHHMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2qXuE3MaEeeoYuc64YE22w" name="AssertFalse" visibility="public" node="_2qXuJ3MaEeeoYuc64YE22w _2qXuKnMaEeeoYuc64YE22w _2qXuKHMaEeeoYuc64YE22w _2qXuMHMaEeeoYuc64YE22w _2qXuNnMaEeeoYuc64YE22w _2qXuKXMaEeeoYuc64YE22w" group="_2qXuKnMaEeeoYuc64YE22w _2qXuMHMaEeeoYuc64YE22w _2qXuNnMaEeeoYuc64YE22w">
      <elementImport xmi:id="_2qXuFHMaEeeoYuc64YE22w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_2qXuFXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2qXuFnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2qXuF3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2qXuGHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2qXuGXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2qXuGnMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuG3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuHHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2qXuHXMaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuHnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuH3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuIHMaEeeoYuc64YE22w" target="_2qXuLHMaEeeoYuc64YE22w" source="_2qXuJ3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuIXMaEeeoYuc64YE22w" target="_2qXuMnMaEeeoYuc64YE22w" source="_2qXuKHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuInMaEeeoYuc64YE22w" target="_2qXuW3MaEeeoYuc64YE22w" source="_2qXuL3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuI3MaEeeoYuc64YE22w" target="_2qXucHMaEeeoYuc64YE22w" source="_2qXuNXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuJHMaEeeoYuc64YE22w" target="_2qXuKXMaEeeoYuc64YE22w" source="_2qXuKnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuJXMaEeeoYuc64YE22w" target="_2qXuKXMaEeeoYuc64YE22w" source="_2qXuMHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuJnMaEeeoYuc64YE22w" target="_2qXuNnMaEeeoYuc64YE22w" source="_2qXuKXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2qXuKnMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_2qXuJHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuK3MaEeeoYuc64YE22w" target="_2qXuL3MaEeeoYuc64YE22w" source="_2qXuLHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXuLHMaEeeoYuc64YE22w" name="Input(label)" incoming="_2qXuIHMaEeeoYuc64YE22w" outgoing="_2qXuK3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuLXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuLnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuL3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_2qXuK3MaEeeoYuc64YE22w" outgoing="_2qXuInMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXuMHMaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_2qXuJXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuMXMaEeeoYuc64YE22w" target="_2qXuNXMaEeeoYuc64YE22w" source="_2qXuMnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXuMnMaEeeoYuc64YE22w" name="Input(condition)" incoming="_2qXuIXMaEeeoYuc64YE22w" outgoing="_2qXuMXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuM3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuNHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuNXMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_2qXuMXMaEeeoYuc64YE22w" outgoing="_2qXuI3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXuNnMaEeeoYuc64YE22w" name="Body(AssertFalse)" incoming="_2qXuJnMaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXuN3MaEeeoYuc64YE22w" name="ExpressionStatement@393093a5">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuOHMaEeeoYuc64YE22w" target="_2qXuPHMaEeeoYuc64YE22w" source="_2qXuVHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuOXMaEeeoYuc64YE22w" target="_2qXuP3MaEeeoYuc64YE22w" source="_2qXueXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuOnMaEeeoYuc64YE22w" target="_2qXuO3MaEeeoYuc64YE22w" source="_2qXuQnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXuO3MaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_2qXuOnMaEeeoYuc64YE22w" behavior="_2qXrVHMaEeeoYuc64YE22w">
            <argument xmi:id="_2qXuPHMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_2qXuOHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuPXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuPnMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_2qXuP3MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_2qXuOXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuQHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuQXMaEeeoYuc64YE22w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXuQnMaEeeoYuc64YE22w" name="Tuple@6bbf384" outgoing="_2qXuOnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuQ3MaEeeoYuc64YE22w" target="_2qXuWHMaEeeoYuc64YE22w" source="_2qXuTnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuRHMaEeeoYuc64YE22w" target="_2qXuZ3MaEeeoYuc64YE22w" source="_2qXucHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuRXMaEeeoYuc64YE22w" target="_2qXucnMaEeeoYuc64YE22w" source="_2qXucHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuRnMaEeeoYuc64YE22w" target="_2qXueHMaEeeoYuc64YE22w" source="_2qXudXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuR3MaEeeoYuc64YE22w" target="_2qXueXMaEeeoYuc64YE22w" source="_2qXuanMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuSHMaEeeoYuc64YE22w" target="_2qXuenMaEeeoYuc64YE22w" source="_2qXueHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuSXMaEeeoYuc64YE22w" target="_2qXuenMaEeeoYuc64YE22w" source="_2qXueHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuSnMaEeeoYuc64YE22w" target="_2qXueXMaEeeoYuc64YE22w" source="_2qXuenMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXuS3MaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuTHMaEeeoYuc64YE22w" target="_2qXubXMaEeeoYuc64YE22w" source="_2qXuYnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXuTXMaEeeoYuc64YE22w" name="Value(&quot;! &quot;)">
              <result xmi:id="_2qXuTnMaEeeoYuc64YE22w" name="Value(&quot;! &quot;).result" outgoing="_2qXuQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuT3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuUHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2qXuUXMaEeeoYuc64YE22w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXuUnMaEeeoYuc64YE22w" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuU3MaEeeoYuc64YE22w" target="_2qXuVHMaEeeoYuc64YE22w" source="_2qXuXnMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_2qXuVHMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_2qXuU3MaEeeoYuc64YE22w" outgoing="_2qXuOHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuVXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuVnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXuV3MaEeeoYuc64YE22w" name="Call(Concat)">
                <argument xmi:id="_2qXuWHMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_2qXuQ3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuWXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuWnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_2qXuW3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_2qXuInMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuXHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuXXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_2qXuXnMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_2qXuU3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuX3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuYHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXuYXMaEeeoYuc64YE22w" name="Value(false)">
              <result xmi:id="_2qXuYnMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_2qXuTHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuY3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuZHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2qXuZXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2qXuZnMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_2qXuZ3MaEeeoYuc64YE22w" name="Test(==).first" incoming="_2qXuRHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuaHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuaXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_2qXuanMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_2qXuR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXua3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXubHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_2qXubXMaEeeoYuc64YE22w" name="Test(==).second" incoming="_2qXuTHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXubnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXub3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXucHMaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_2qXuI3MaEeeoYuc64YE22w" outgoing="_2qXuRHMaEeeoYuc64YE22w _2qXuRXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXucXMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_2qXucnMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXuRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuc3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXudHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_2qXudXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXuRnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXudnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXud3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXueHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_2qXuRnMaEeeoYuc64YE22w" outgoing="_2qXuSHMaEeeoYuc64YE22w _2qXuSXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2qXueXMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2qXuR3MaEeeoYuc64YE22w _2qXuSnMaEeeoYuc64YE22w" outgoing="_2qXuOXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2qXuenMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_2qXuSHMaEeeoYuc64YE22w _2qXuSXMaEeeoYuc64YE22w" outgoing="_2qXuSnMaEeeoYuc64YE22w" decisionInputFlow="_2qXuSXMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXuJ3MaEeeoYuc64YE22w" name="Input(label)" outgoing="_2qXuIHMaEeeoYuc64YE22w" parameter="_2qXuGnMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXuKHMaEeeoYuc64YE22w" name="Input(condition)" outgoing="_2qXuIXMaEeeoYuc64YE22w" parameter="_2qXuHXMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_2qXuKXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qXuJHMaEeeoYuc64YE22w _2qXuJXMaEeeoYuc64YE22w" outgoing="_2qXuJnMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2qXue3MaEeeoYuc64YE22w" name="Write" visibility="public" node="_2qXuiHMaEeeoYuc64YE22w _2qXuinMaEeeoYuc64YE22w _2qXukHMaEeeoYuc64YE22w _2qXuiXMaEeeoYuc64YE22w" group="_2qXuinMaEeeoYuc64YE22w _2qXukHMaEeeoYuc64YE22w">
      <packageImport xmi:id="_2qXufHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2qXufXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2qXufnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2qXuf3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2qXugHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2qXugXMaEeeoYuc64YE22w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXugnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXug3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuhHMaEeeoYuc64YE22w" target="_2qXujHMaEeeoYuc64YE22w" source="_2qXuiHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuhXMaEeeoYuc64YE22w" target="_2qXumXMaEeeoYuc64YE22w" source="_2qXuj3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuhnMaEeeoYuc64YE22w" target="_2qXuiXMaEeeoYuc64YE22w" source="_2qXuinMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuh3MaEeeoYuc64YE22w" target="_2qXukHMaEeeoYuc64YE22w" source="_2qXuiXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_2qXuinMaEeeoYuc64YE22w" name="Node(Input(value))" outgoing="_2qXuhnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXui3MaEeeoYuc64YE22w" target="_2qXuj3MaEeeoYuc64YE22w" source="_2qXujHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_2qXujHMaEeeoYuc64YE22w" name="Input(value)" incoming="_2qXuhHMaEeeoYuc64YE22w" outgoing="_2qXui3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXujXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXujnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_2qXuj3MaEeeoYuc64YE22w" name="Fork(value)" incoming="_2qXui3MaEeeoYuc64YE22w" outgoing="_2qXuhXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_2qXukHMaEeeoYuc64YE22w" name="Body(Write)" incoming="_2qXuh3MaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXukXMaEeeoYuc64YE22w" name="ExpressionStatement@5055bacf">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuknMaEeeoYuc64YE22w" target="_2qXu1HMaEeeoYuc64YE22w" source="_2qXu4XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuk3MaEeeoYuc64YE22w" target="_2qXulHMaEeeoYuc64YE22w" source="_2qXu1XMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_2qXulHMaEeeoYuc64YE22w" name="Collect(Call(write))" incoming="_2qXuk3MaEeeoYuc64YE22w" mode="parallel" inputElement="_2qXu1HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXulXMaEeeoYuc64YE22w" target="_2qXunXMaEeeoYuc64YE22w" source="_2qXu03MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXulnMaEeeoYuc64YE22w" target="_2qXus3MaEeeoYuc64YE22w" source="_2qXumXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXul3MaEeeoYuc64YE22w" target="_2qXunHMaEeeoYuc64YE22w" source="_2qXupnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXumHMaEeeoYuc64YE22w" target="_2qXuo3MaEeeoYuc64YE22w" source="_2qXu1HMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_2qXumXMaEeeoYuc64YE22w" name="Collect(Call(write)).input(Fork(value))" incoming="_2qXuhXMaEeeoYuc64YE22w" outgoing="_2qXulnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXumnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXum3MaEeeoYuc64YE22w" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2qXunHMaEeeoYuc64YE22w" name="Call(write)" incoming="_2qXul3MaEeeoYuc64YE22w">
              <argument xmi:id="_2qXunXMaEeeoYuc64YE22w" name="Call(write).argument(value)" incoming="_2qXulXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXunnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXun3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXuoHMaEeeoYuc64YE22w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuoXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuonMaEeeoYuc64YE22w" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_2qXuo3MaEeeoYuc64YE22w" name="Call(write).target" incoming="_2qXumHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXupHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXupXMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXupnMaEeeoYuc64YE22w" name="Tuple@50108470" outgoing="_2qXul3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXup3MaEeeoYuc64YE22w" target="_2qXuu3MaEeeoYuc64YE22w" source="_2qXus3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuqHMaEeeoYuc64YE22w" target="_2qXuunMaEeeoYuc64YE22w" source="_2qXusnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuqXMaEeeoYuc64YE22w" target="_2qXuxnMaEeeoYuc64YE22w" source="_2qXus3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXuqnMaEeeoYuc64YE22w" target="_2qXu0nMaEeeoYuc64YE22w" source="_2qXu0XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuq3MaEeeoYuc64YE22w" target="_2qXu0nMaEeeoYuc64YE22w" source="_2qXuvnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXurHMaEeeoYuc64YE22w" target="_2qXuwXMaEeeoYuc64YE22w" source="_2qXu0nMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXurXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2qXurnMaEeeoYuc64YE22w" target="_2qXux3MaEeeoYuc64YE22w" source="_2qXu0nMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2qXur3MaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXusHMaEeeoYuc64YE22w" target="_2qXu03MaEeeoYuc64YE22w" source="_2qXuw3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXusXMaEeeoYuc64YE22w" target="_2qXu03MaEeeoYuc64YE22w" source="_2qXuyXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXusnMaEeeoYuc64YE22w" name="Operands(EqualityExpression@415c2538)" outgoing="_2qXuqHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ForkNode" xmi:id="_2qXus3MaEeeoYuc64YE22w" name="Fork()@b3e86fa" incoming="_2qXulnMaEeeoYuc64YE22w" outgoing="_2qXup3MaEeeoYuc64YE22w _2qXuqXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXutHMaEeeoYuc64YE22w" name="RightHandSide@61c9c690"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXutXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_2qXutnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXut3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuuHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2qXuuXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXuunMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_2qXuqHMaEeeoYuc64YE22w">
                <argument xmi:id="_2qXuu3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_2qXup3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuvHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuvXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_2qXuvnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_2qXuq3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuv3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuwHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXuwXMaEeeoYuc64YE22w" name="NullCoalescingExpression@6b434a89.operand2" incoming="_2qXurHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuwnMaEeeoYuc64YE22w" target="_2qXuw3MaEeeoYuc64YE22w" source="_2qXuxnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qXuw3MaEeeoYuc64YE22w" name="NullCoalescingExpression@6b434a89.operand2.result" incoming="_2qXuwnMaEeeoYuc64YE22w" outgoing="_2qXusHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuxHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuxXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_2qXuxnMaEeeoYuc64YE22w" name="Merge(Fork()@b3e86fa)" incoming="_2qXuqXMaEeeoYuc64YE22w" outgoing="_2qXuwnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXux3MaEeeoYuc64YE22w" name="NullCoalescingExpression@6b434a89.operand3" incoming="_2qXurnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXuyHMaEeeoYuc64YE22w" target="_2qXuyXMaEeeoYuc64YE22w" source="_2qXuzXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_2qXuyXMaEeeoYuc64YE22w" name="NullCoalescingExpression@6b434a89.operand3.result" incoming="_2qXuyHMaEeeoYuc64YE22w" outgoing="_2qXusXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuynMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuy3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXuzHMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_2qXuzXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_2qXuyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXuznMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXuz3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2qXu0HMaEeeoYuc64YE22w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2qXu0XMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@6b434a89)" outgoing="_2qXuqnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_2qXu0nMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@6b434a89)" incoming="_2qXuqnMaEeeoYuc64YE22w _2qXuq3MaEeeoYuc64YE22w" outgoing="_2qXurHMaEeeoYuc64YE22w _2qXurnMaEeeoYuc64YE22w" decisionInputFlow="_2qXuq3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_2qXu03MaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@6b434a89.result)" incoming="_2qXusHMaEeeoYuc64YE22w _2qXusXMaEeeoYuc64YE22w" outgoing="_2qXulXMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_2qXu1HMaEeeoYuc64YE22w" name="Collect(Call(write)).inputElement" incoming="_2qXuknMaEeeoYuc64YE22w" outgoing="_2qXumHMaEeeoYuc64YE22w" regionAsInput="_2qXulHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXu1XMaEeeoYuc64YE22w" name="Feature(Call(At).result())" outgoing="_2qXuk3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXu1nMaEeeoYuc64YE22w" target="_2qXu23MaEeeoYuc64YE22w" source="_2qXu5nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXu13MaEeeoYuc64YE22w" target="_2qXu7nMaEeeoYuc64YE22w" source="_2qXu6nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2qXu2HMaEeeoYuc64YE22w" target="_2qXu2nMaEeeoYuc64YE22w" source="_2qXu5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2qXu2XMaEeeoYuc64YE22w" target="_2qXu3nMaEeeoYuc64YE22w" source="_2qXu7nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2qXu2nMaEeeoYuc64YE22w" name="Call(At)" incoming="_2qXu2HMaEeeoYuc64YE22w">
              <argument xmi:id="_2qXu23MaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_2qXu1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXu3HMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXu3XMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <argument xmi:id="_2qXu3nMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_2qXu2XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXu33MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXu4HMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_2qXu4XMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_2qXuknMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXu4nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXu43MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2qXu5HMaEeeoYuc64YE22w" name="Tuple@3fd05471" outgoing="_2qXu2HMaEeeoYuc64YE22w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_2qXu5XMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_2qXu5nMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel).result" outgoing="_2qXu1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXu53MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXu6HMaEeeoYuc64YE22w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2qXu6XMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_2qXu6nMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_2qXu13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2qXu63MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2qXu7HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2qXu7XMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2qXu7nMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_2qXu13MaEeeoYuc64YE22w" outgoing="_2qXu2XMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2qXuiHMaEeeoYuc64YE22w" name="Input(value)" outgoing="_2qXuhHMaEeeoYuc64YE22w" parameter="_2qXugXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_2qXuiXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_2qXuhnMaEeeoYuc64YE22w" outgoing="_2qXuh3MaEeeoYuc64YE22w"/>
    </packagedElement>
    <profileApplication xmi:id="_2qXu73MaEeeoYuc64YE22w">
      <eAnnotations xmi:id="_2qYRsHMaEeeoYuc64YE22w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_2qYRsXMaEeeoYuc64YE22w" base_BehavioralFeature="_2qXG-HMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRsnMaEeeoYuc64YE22w" base_BehavioralFeature="_2qWg9XMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRs3MaEeeoYuc64YE22w" base_BehavioralFeature="_2qV2fXMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRtHMaEeeoYuc64YE22w" base_BehavioralFeature="_2qXqwHMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRtXMaEeeoYuc64YE22w" base_BehavioralFeature="_2qXG7XMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2qYRtnMaEeeoYuc64YE22w" base_BehavioralFeature="_2qWg_HMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2qYRt3MaEeeoYuc64YE22w" base_BehavioralFeature="_2qXrUXMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRuHMaEeeoYuc64YE22w" base_BehavioralFeature="_2qXrTXMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRuXMaEeeoYuc64YE22w" base_BehavioralFeature="_2qV3CXMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2qYRunMaEeeoYuc64YE22w" base_BehavioralFeature="_2qV2hHMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2qYRu3MaEeeoYuc64YE22w" base_BehavioralFeature="_2qXqyHMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_2qYRvHMaEeeoYuc64YE22w" base_BehavioralFeature="_2qV2eXMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_2qYRvXMaEeeoYuc64YE22w" base_BehavioralFeature="_2qV3DXMaEeeoYuc64YE22w"/>
</xmi:XMI>

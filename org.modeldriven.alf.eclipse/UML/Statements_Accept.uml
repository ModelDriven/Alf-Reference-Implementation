<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_2otKMNXWEem1l5O0R0OWkQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_2otKMdXWEem1l5O0R0OWkQ" name="Statements_Accept" visibility="public">
      <packageImport xmi:id="_2otKMtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2otKM9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2otKNNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2otKNdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2otKNtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_2otKN9XWEem1l5O0R0OWkQ" general="_2oua09XWEem1l5O0R0OWkQ"/>
      <ownedAttribute xmi:id="_2otKONXWEem1l5O0R0OWkQ" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKOdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKOtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otKO9XWEem1l5O0R0OWkQ" name="Statements_Accept$method$1" visibility="private" specification="_2otLPtXWEem1l5O0R0OWkQ" node="_2otKQNXWEem1l5O0R0OWkQ _2otKQdXWEem1l5O0R0OWkQ" group="_2otKQdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2otKPNXWEem1l5O0R0OWkQ" name="" type="_2otKMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKPdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKPtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKP9XWEem1l5O0R0OWkQ" target="_2otKQNXWEem1l5O0R0OWkQ" source="_2otKatXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2otKQdXWEem1l5O0R0OWkQ" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKQtXWEem1l5O0R0OWkQ" target="_2otKatXWEem1l5O0R0OWkQ" source="_2otKZ9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKQ9XWEem1l5O0R0OWkQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKRNXWEem1l5O0R0OWkQ" name="ExpressionStatement@6efebc9e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKRdXWEem1l5O0R0OWkQ" target="_2otKXdXWEem1l5O0R0OWkQ" source="_2otKS9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otKRtXWEem1l5O0R0OWkQ" target="_2otKXNXWEem1l5O0R0OWkQ" source="_2otKSdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKR9XWEem1l5O0R0OWkQ" target="_2otKVtXWEem1l5O0R0OWkQ" source="_2otKUNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otKSNXWEem1l5O0R0OWkQ" target="_2otKU9XWEem1l5O0R0OWkQ" source="_2otKSdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKSdXWEem1l5O0R0OWkQ" name="Tuple@330fb33e" outgoing="_2otKRtXWEem1l5O0R0OWkQ _2otKSNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otKStXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2otKS9XWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_2otKRdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKTNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKTdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2otKTtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2otKT9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2otKUNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otKR9XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKUdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKUtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKU9XWEem1l5O0R0OWkQ" name="Node(Call(run))" incoming="_2otKSNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKVNXWEem1l5O0R0OWkQ" target="_2otKWdXWEem1l5O0R0OWkQ" source="_2otKYNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKVdXWEem1l5O0R0OWkQ" target="_2otKY9XWEem1l5O0R0OWkQ" source="_2otKVtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otKVtXWEem1l5O0R0OWkQ" name="Input(Call(run).target)" incoming="_2otKR9XWEem1l5O0R0OWkQ" outgoing="_2otKVdXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKV9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKWNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otKWdXWEem1l5O0R0OWkQ" name="Output(Call(run).result())" incoming="_2otKVNXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKWtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKW9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2otKXNXWEem1l5O0R0OWkQ" name="Call(run)" incoming="_2otKRtXWEem1l5O0R0OWkQ" operation="_2otLQtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2otKXdXWEem1l5O0R0OWkQ" name="Call(run).argument(tester)" incoming="_2otKRdXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKXtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKX9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2otKYNXWEem1l5O0R0OWkQ" name="Call(run).result()" outgoing="_2otKVNXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKYdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKYtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_2otKY9XWEem1l5O0R0OWkQ" name="Call(run).target" incoming="_2otKVdXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKZNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKZdXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2otKZtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2otKZ9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otKQtXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKaNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKadXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2otKatXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otKQtXWEem1l5O0R0OWkQ" outgoing="_2otKP9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2otKQNXWEem1l5O0R0OWkQ" name="Return" incoming="_2otKP9XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" parameter="_2otKPNXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otKa9XWEem1l5O0R0OWkQ" name="run$method$1" visibility="private" specification="_2otLQtXWEem1l5O0R0OWkQ" node="_2otKddXWEem1l5O0R0OWkQ _2otKdtXWEem1l5O0R0OWkQ _2otKd9XWEem1l5O0R0OWkQ _2otKeNXWEem1l5O0R0OWkQ" group="_2otKeNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2otKbNXWEem1l5O0R0OWkQ" name="tester" type="_2oub5dXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKbdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKbtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2otKb9XWEem1l5O0R0OWkQ" name="" type="_2otKMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKcNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKcdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKctXWEem1l5O0R0OWkQ" target="_2otKdtXWEem1l5O0R0OWkQ" source="_2otKddXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKc9XWEem1l5O0R0OWkQ" target="_2otKd9XWEem1l5O0R0OWkQ" source="_2otKutXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKdNXWEem1l5O0R0OWkQ" target="_2otKw9XWEem1l5O0R0OWkQ" source="_2otKdtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2otKeNXWEem1l5O0R0OWkQ" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKedXWEem1l5O0R0OWkQ" target="_2otKutXWEem1l5O0R0OWkQ" source="_2otKt9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKetXWEem1l5O0R0OWkQ" target="_2otKytXWEem1l5O0R0OWkQ" source="_2otKutXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2otKe9XWEem1l5O0R0OWkQ" target="_2otKhdXWEem1l5O0R0OWkQ" source="_2otKydXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2otKfNXWEem1l5O0R0OWkQ" target="_2otKydXWEem1l5O0R0OWkQ" source="_2otKu9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKfdXWEem1l5O0R0OWkQ" target="_2otKztXWEem1l5O0R0OWkQ" source="_2otKutXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKftXWEem1l5O0R0OWkQ" target="_2otK1dXWEem1l5O0R0OWkQ" source="_2otK0dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKf9XWEem1l5O0R0OWkQ" target="_2otK4dXWEem1l5O0R0OWkQ" source="_2otK2NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKgNXWEem1l5O0R0OWkQ" target="_2otK59XWEem1l5O0R0OWkQ" source="_2otK3NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2otKgdXWEem1l5O0R0OWkQ" target="_2otK69XWEem1l5O0R0OWkQ" source="_2otK6tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKgtXWEem1l5O0R0OWkQ" target="_2otK69XWEem1l5O0R0OWkQ" source="_2otK5NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2otKg9XWEem1l5O0R0OWkQ" target="_2otKu9XWEem1l5O0R0OWkQ" source="_2otK69XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otKhNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKhdXWEem1l5O0R0OWkQ" name="Body" incoming="_2otKe9XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKhtXWEem1l5O0R0OWkQ" name="ExpressionStatement@23b8c795">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKh9XWEem1l5O0R0OWkQ" target="_2otKidXWEem1l5O0R0OWkQ" source="_2otKldXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2otKiNXWEem1l5O0R0OWkQ" name="SendSignal(Start)" signal="_2ouawNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2otKidXWEem1l5O0R0OWkQ" name="SendSignal(Start).target" incoming="_2otKh9XWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKitXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKi9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKjNXWEem1l5O0R0OWkQ" name="InstanceCreationExpression@3a631ce">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKjdXWEem1l5O0R0OWkQ" target="_2otKsNXWEem1l5O0R0OWkQ" source="_2otKmdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKjtXWEem1l5O0R0OWkQ" target="_2otKrdXWEem1l5O0R0OWkQ" source="_2otKsNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKj9XWEem1l5O0R0OWkQ" target="_2otKp9XWEem1l5O0R0OWkQ" source="_2otKntXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otKkNXWEem1l5O0R0OWkQ" target="_2otKodXWEem1l5O0R0OWkQ" source="_2otKnNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otKkdXWEem1l5O0R0OWkQ" target="_2otKodXWEem1l5O0R0OWkQ" source="_2otKmNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKktXWEem1l5O0R0OWkQ" target="_2otKsdXWEem1l5O0R0OWkQ" source="_2otKo9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKk9XWEem1l5O0R0OWkQ" target="_2otKs9XWEem1l5O0R0OWkQ" source="_2otKsdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKlNXWEem1l5O0R0OWkQ" target="_2otKldXWEem1l5O0R0OWkQ" source="_2otKsdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2otKldXWEem1l5O0R0OWkQ" name="Output(Output(Fork(Create(TestRunner).result)))" incoming="_2otKlNXWEem1l5O0R0OWkQ" outgoing="_2otKh9XWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKltXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKl9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_2otKmNXWEem1l5O0R0OWkQ" name="Create(TestRunner)" outgoing="_2otKkdXWEem1l5O0R0OWkQ" classifier="_2ot00tXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2otKmdXWEem1l5O0R0OWkQ" name="Create(TestRunner).result" outgoing="_2otKjdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKmtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKm9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKnNXWEem1l5O0R0OWkQ" name="Tuple@14d989c1" outgoing="_2otKkNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2otKndXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2otKntXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otKj9XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKn9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKoNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKodXWEem1l5O0R0OWkQ" name="Node(Call(TestRunner))" incoming="_2otKkdXWEem1l5O0R0OWkQ _2otKkNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKotXWEem1l5O0R0OWkQ" target="_2otKo9XWEem1l5O0R0OWkQ" source="_2otKsNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2otKo9XWEem1l5O0R0OWkQ" name="Output(Fork(Create(TestRunner).result))" incoming="_2otKotXWEem1l5O0R0OWkQ" outgoing="_2otKktXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKpNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKpdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_2otKptXWEem1l5O0R0OWkQ" name="Call(TestRunner)" operation="_2ouatNXWEem1l5O0R0OWkQ">
                    <argument xmi:id="_2otKp9XWEem1l5O0R0OWkQ" name="Call(TestRunner).argument(outer)" incoming="_2otKj9XWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKqNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKqdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2otKqtXWEem1l5O0R0OWkQ" name="Call(TestRunner).result()" type="_2ot00tXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKq9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKrNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <target xmi:id="_2otKrdXWEem1l5O0R0OWkQ" name="Call(TestRunner).target" incoming="_2otKjtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKrtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKr9XWEem1l5O0R0OWkQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2otKsNXWEem1l5O0R0OWkQ" name="Fork(Create(TestRunner).result)" incoming="_2otKjdXWEem1l5O0R0OWkQ" outgoing="_2otKjtXWEem1l5O0R0OWkQ _2otKotXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2otKsdXWEem1l5O0R0OWkQ" name="Fork(Output(Fork(Create(TestRunner).result)))" incoming="_2otKktXWEem1l5O0R0OWkQ" outgoing="_2otKk9XWEem1l5O0R0OWkQ _2otKlNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_2otKstXWEem1l5O0R0OWkQ" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_2otKs9XWEem1l5O0R0OWkQ" name="Start(TestRunner).object" incoming="_2otKk9XWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKtNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKtdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2otKttXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2otKt9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otKedXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKuNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKudXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2otKutXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otKedXWEem1l5O0R0OWkQ" outgoing="_2otKc9XWEem1l5O0R0OWkQ _2otKetXWEem1l5O0R0OWkQ _2otKfdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKu9XWEem1l5O0R0OWkQ" name="Super" incoming="_2otKg9XWEem1l5O0R0OWkQ" outgoing="_2otKfNXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKvNXWEem1l5O0R0OWkQ" name="ExpressionStatement@7dfea2e2">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otKvdXWEem1l5O0R0OWkQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otKvtXWEem1l5O0R0OWkQ" target="_2otKv9XWEem1l5O0R0OWkQ" source="_2otKxtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2otKv9XWEem1l5O0R0OWkQ" name="Output(Call(Test$method$1).result())" incoming="_2otKvtXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKwNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKwdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otKwtXWEem1l5O0R0OWkQ" name="Call(Test$method$1)" behavior="_2oua39XWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2otKw9XWEem1l5O0R0OWkQ" name="Call(Test$method$1).argument(tester)" incoming="_2otKdNXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKxNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKxdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2otKxtXWEem1l5O0R0OWkQ" name="Call(Test$method$1).result()" outgoing="_2otKvtXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKx9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKyNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2otKydXWEem1l5O0R0OWkQ" name="Call(Statements_Accept$initialization$1)" incoming="_2otKfNXWEem1l5O0R0OWkQ" outgoing="_2otKe9XWEem1l5O0R0OWkQ" operation="_2otLPdXWEem1l5O0R0OWkQ">
            <target xmi:id="_2otKytXWEem1l5O0R0OWkQ" name="Call(Statements_Accept$initialization$1).target" incoming="_2otKetXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKy9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otKzNXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otKzdXWEem1l5O0R0OWkQ" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_2otKONXWEem1l5O0R0OWkQ">
            <object xmi:id="_2otKztXWEem1l5O0R0OWkQ" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_2otKfdXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otKz9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK0NXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2otK0dXWEem1l5O0R0OWkQ" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_2otKftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK0tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK09XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otK1NXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2otK1dXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2otKftXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK1tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK19XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2otK2NXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2otKf9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK2dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK2tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otK29XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2otK3NXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2otKgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK3dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK3tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2otK39XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2otK4NXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2otK4dXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2otKf9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK4tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK49XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2otK5NXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2otKgtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK5dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK5tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2otK59XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2otKgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK6NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK6dXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2otK6tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2otKgdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2otK69XWEem1l5O0R0OWkQ" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_2otKgdXWEem1l5O0R0OWkQ _2otKgtXWEem1l5O0R0OWkQ" outgoing="_2otKg9XWEem1l5O0R0OWkQ" decisionInputFlow="_2otKgtXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2otKddXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2otKctXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" parameter="_2otKbNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2otKdtXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2otKctXWEem1l5O0R0OWkQ" outgoing="_2otKdNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2otKd9XWEem1l5O0R0OWkQ" name="Return" incoming="_2otKc9XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" parameter="_2otKb9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otK7NXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2otLSdXWEem1l5O0R0OWkQ" node="_2otK7dXWEem1l5O0R0OWkQ" group="_2otK7dXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2otK7dXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otK7tXWEem1l5O0R0OWkQ" name="Statements_Accept$initialization$1" visibility="private" specification="_2otLPdXWEem1l5O0R0OWkQ" node="_2otK79XWEem1l5O0R0OWkQ" group="_2otK79XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2otK79XWEem1l5O0R0OWkQ" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK8NXWEem1l5O0R0OWkQ" target="_2otK_9XWEem1l5O0R0OWkQ" source="_2otK_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK8dXWEem1l5O0R0OWkQ" target="_2otLA9XWEem1l5O0R0OWkQ" source="_2otK_9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK8tXWEem1l5O0R0OWkQ" target="_2otLENXWEem1l5O0R0OWkQ" source="_2otK_9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK89XWEem1l5O0R0OWkQ" target="_2otLH9XWEem1l5O0R0OWkQ" source="_2otK_9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK9NXWEem1l5O0R0OWkQ" target="_2otLJtXWEem1l5O0R0OWkQ" source="_2otLItXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK9dXWEem1l5O0R0OWkQ" target="_2otLMtXWEem1l5O0R0OWkQ" source="_2otLKdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK9tXWEem1l5O0R0OWkQ" target="_2otLONXWEem1l5O0R0OWkQ" source="_2otLLdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2otK99XWEem1l5O0R0OWkQ" target="_2otLPNXWEem1l5O0R0OWkQ" source="_2otLO9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otK-NXWEem1l5O0R0OWkQ" target="_2otLPNXWEem1l5O0R0OWkQ" source="_2otLNdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2otK-dXWEem1l5O0R0OWkQ" target="_2otLANXWEem1l5O0R0OWkQ" source="_2otLPNXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otK-tXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2otK-9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2otK_NXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otK8NXWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otK_dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otK_tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2otK_9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otK8NXWEem1l5O0R0OWkQ" outgoing="_2otK8dXWEem1l5O0R0OWkQ _2otK8tXWEem1l5O0R0OWkQ _2otK89XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otLANXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2otK-dXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otLAdXWEem1l5O0R0OWkQ" target="_2otLBtXWEem1l5O0R0OWkQ" source="_2otLAtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2otLAtXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" outgoing="_2otLAdXWEem1l5O0R0OWkQ" operation="_2oub19XWEem1l5O0R0OWkQ">
              <target xmi:id="_2otLA9XWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_2otK8dXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLBNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLBdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otLBtXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2otLAdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLB9XWEem1l5O0R0OWkQ" target="_2otLHdXWEem1l5O0R0OWkQ" source="_2otLCdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otLCNXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2otLCdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2otLB9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLCtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLC9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2otLDNXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2otLDdXWEem1l5O0R0OWkQ" name="Iterate(Write(Statements_Accept$initializationFlag$1))" inputElement="_2otLHdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLDtXWEem1l5O0R0OWkQ" target="_2otLGtXWEem1l5O0R0OWkQ" source="_2otLHdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLD9XWEem1l5O0R0OWkQ" target="_2otLFNXWEem1l5O0R0OWkQ" source="_2otLENXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otLENXWEem1l5O0R0OWkQ" name="Iterate(Write(Statements_Accept$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2otK8tXWEem1l5O0R0OWkQ" outgoing="_2otLD9XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLEdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLEtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otLE9XWEem1l5O0R0OWkQ" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_2otKONXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2otLFNXWEem1l5O0R0OWkQ" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_2otLD9XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLFdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLFtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otLF9XWEem1l5O0R0OWkQ" name="Write(Statements_Accept$initializationFlag$1).result" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLGNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLGdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2otLGtXWEem1l5O0R0OWkQ" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_2otLDtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLG9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLHNXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2otLHdXWEem1l5O0R0OWkQ" name="Iterate(Write(Statements_Accept$initializationFlag$1)).inputElement" incoming="_2otLB9XWEem1l5O0R0OWkQ" outgoing="_2otLDtXWEem1l5O0R0OWkQ" regionAsInput="_2otLDdXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otLHtXWEem1l5O0R0OWkQ" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_2otKONXWEem1l5O0R0OWkQ">
            <object xmi:id="_2otLH9XWEem1l5O0R0OWkQ" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_2otK89XWEem1l5O0R0OWkQ" type="_2otKMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLINXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLIdXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2otLItXWEem1l5O0R0OWkQ" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_2otK9NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLI9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLJNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otLJdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2otLJtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2otK9NXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLJ9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLKNXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2otLKdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2otK9dXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLKtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLK9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otLLNXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2otLLdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2otK9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLLtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLL9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2otLMNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2otLMdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2otLMtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2otK9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLM9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLNNXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2otLNdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2otK-NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLNtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLN9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2otLONXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2otK9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLOdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLOtXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2otLO9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2otK99XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2otLPNXWEem1l5O0R0OWkQ" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_2otK99XWEem1l5O0R0OWkQ _2otK-NXWEem1l5O0R0OWkQ" outgoing="_2otK-dXWEem1l5O0R0OWkQ" decisionInputFlow="_2otK-NXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2otLPdXWEem1l5O0R0OWkQ" name="Statements_Accept$initialization$1" visibility="protected" method="_2otK7tXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2otLPtXWEem1l5O0R0OWkQ" name="Statements_Accept" visibility="public" method="_2otKO9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2otLP9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2otKMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLQNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLQdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2otLQtXWEem1l5O0R0OWkQ" name="run" visibility="public" method="_2otKa9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2otLQ9XWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2oub5dXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLRNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLRdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2otLRtXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2otKMdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLR9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLSNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2otLSdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2otK7NXWEem1l5O0R0OWkQ" redefinedOperation="_2oub5NXWEem1l5O0R0OWkQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2otLStXWEem1l5O0R0OWkQ" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2otLS9XWEem1l5O0R0OWkQ" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLTNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLTdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otLTtXWEem1l5O0R0OWkQ" name="Super$method$1" visibility="private" specification="_2otL1dXWEem1l5O0R0OWkQ" node="_2otLU9XWEem1l5O0R0OWkQ _2otLVNXWEem1l5O0R0OWkQ" group="_2otLVNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2otLT9XWEem1l5O0R0OWkQ" name="" type="_2otLStXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLUNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLUdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLUtXWEem1l5O0R0OWkQ" target="_2otLU9XWEem1l5O0R0OWkQ" source="_2otLZdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2otLVNXWEem1l5O0R0OWkQ" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLVdXWEem1l5O0R0OWkQ" target="_2otLZdXWEem1l5O0R0OWkQ" source="_2otLYtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLVtXWEem1l5O0R0OWkQ" target="_2otLZ9XWEem1l5O0R0OWkQ" source="_2otLZdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otLV9XWEem1l5O0R0OWkQ" target="_2otLYNXWEem1l5O0R0OWkQ" source="_2otLZtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLWNXWEem1l5O0R0OWkQ" target="_2otLa9XWEem1l5O0R0OWkQ" source="_2otLZdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLWdXWEem1l5O0R0OWkQ" target="_2otLctXWEem1l5O0R0OWkQ" source="_2otLbtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLWtXWEem1l5O0R0OWkQ" target="_2otLftXWEem1l5O0R0OWkQ" source="_2otLddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLW9XWEem1l5O0R0OWkQ" target="_2otLhNXWEem1l5O0R0OWkQ" source="_2otLedXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otLXNXWEem1l5O0R0OWkQ" target="_2otLiNXWEem1l5O0R0OWkQ" source="_2otLh9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLXdXWEem1l5O0R0OWkQ" target="_2otLiNXWEem1l5O0R0OWkQ" source="_2otLgdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otLXtXWEem1l5O0R0OWkQ" target="_2otLZtXWEem1l5O0R0OWkQ" source="_2otLiNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otLX9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otLYNXWEem1l5O0R0OWkQ" name="Body" incoming="_2otLV9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2otLYdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2otLYtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otLVdXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLY9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLZNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2otLZdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otLVdXWEem1l5O0R0OWkQ" outgoing="_2otLUtXWEem1l5O0R0OWkQ _2otLVtXWEem1l5O0R0OWkQ _2otLWNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2otLZtXWEem1l5O0R0OWkQ" name="Call(Super$initialization$1)" incoming="_2otLXtXWEem1l5O0R0OWkQ" outgoing="_2otLV9XWEem1l5O0R0OWkQ" operation="_2otL1NXWEem1l5O0R0OWkQ">
              <target xmi:id="_2otLZ9XWEem1l5O0R0OWkQ" name="Call(Super$initialization$1).target" incoming="_2otLVtXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLaNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLadXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otLatXWEem1l5O0R0OWkQ" name="Read(Super$initializationFlag$1)" structuralFeature="_2otLS9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2otLa9XWEem1l5O0R0OWkQ" name="Read(Super$initializationFlag$1).object" incoming="_2otLWNXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLbNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLbdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2otLbtXWEem1l5O0R0OWkQ" name="Read(Super$initializationFlag$1).result" outgoing="_2otLWdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLb9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLcNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otLcdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2otLctXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2otLWdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLc9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLdNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2otLddXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2otLWtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLdtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLd9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otLeNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2otLedXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2otLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLetXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLe9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2otLfNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2otLfdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2otLftXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2otLWtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLf9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLgNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2otLgdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2otLXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLgtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLg9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2otLhNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2otLW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLhdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLhtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2otLh9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2otLXNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2otLiNXWEem1l5O0R0OWkQ" name="Decision(Test(Super$initializationFlag$1))" incoming="_2otLXNXWEem1l5O0R0OWkQ _2otLXdXWEem1l5O0R0OWkQ" outgoing="_2otLXtXWEem1l5O0R0OWkQ" decisionInputFlow="_2otLXdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2otLU9XWEem1l5O0R0OWkQ" name="Return" incoming="_2otLUtXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" parameter="_2otLT9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otLidXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2otL2dXWEem1l5O0R0OWkQ" node="_2otLitXWEem1l5O0R0OWkQ" group="_2otLitXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2otLitXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otLi9XWEem1l5O0R0OWkQ" name="Super$initialization$1" visibility="private" specification="_2otL1NXWEem1l5O0R0OWkQ" node="_2otLjNXWEem1l5O0R0OWkQ" group="_2otLjNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2otLjNXWEem1l5O0R0OWkQ" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLjdXWEem1l5O0R0OWkQ" target="_2otLm9XWEem1l5O0R0OWkQ" source="_2otLmNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLjtXWEem1l5O0R0OWkQ" target="_2otLp9XWEem1l5O0R0OWkQ" source="_2otLm9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLj9XWEem1l5O0R0OWkQ" target="_2otLttXWEem1l5O0R0OWkQ" source="_2otLm9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLkNXWEem1l5O0R0OWkQ" target="_2otLvdXWEem1l5O0R0OWkQ" source="_2otLudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLkdXWEem1l5O0R0OWkQ" target="_2otLydXWEem1l5O0R0OWkQ" source="_2otLwNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLktXWEem1l5O0R0OWkQ" target="_2otLz9XWEem1l5O0R0OWkQ" source="_2otLxNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otLk9XWEem1l5O0R0OWkQ" target="_2otL09XWEem1l5O0R0OWkQ" source="_2otL0tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLlNXWEem1l5O0R0OWkQ" target="_2otL09XWEem1l5O0R0OWkQ" source="_2otLzNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otLldXWEem1l5O0R0OWkQ" target="_2otLnNXWEem1l5O0R0OWkQ" source="_2otL09XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otLltXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2otLl9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2otLmNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otLjdXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLmdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLmtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2otLm9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otLjdXWEem1l5O0R0OWkQ" outgoing="_2otLjtXWEem1l5O0R0OWkQ _2otLj9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otLnNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2otLldXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otLndXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLntXWEem1l5O0R0OWkQ" target="_2otLtNXWEem1l5O0R0OWkQ" source="_2otLoNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otLn9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2otLoNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2otLntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLodXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLotXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2otLo9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2otLpNXWEem1l5O0R0OWkQ" name="Iterate(Write(Super$initializationFlag$1))" inputElement="_2otLtNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLpdXWEem1l5O0R0OWkQ" target="_2otLsdXWEem1l5O0R0OWkQ" source="_2otLtNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otLptXWEem1l5O0R0OWkQ" target="_2otLq9XWEem1l5O0R0OWkQ" source="_2otLp9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otLp9XWEem1l5O0R0OWkQ" name="Iterate(Write(Super$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2otLjtXWEem1l5O0R0OWkQ" outgoing="_2otLptXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLqNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLqdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otLqtXWEem1l5O0R0OWkQ" name="Write(Super$initializationFlag$1)" structuralFeature="_2otLS9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2otLq9XWEem1l5O0R0OWkQ" name="Write(Super$initializationFlag$1).object" incoming="_2otLptXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLrNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLrdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2otLrtXWEem1l5O0R0OWkQ" name="Write(Super$initializationFlag$1).result" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLr9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLsNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2otLsdXWEem1l5O0R0OWkQ" name="Write(Super$initializationFlag$1).value" incoming="_2otLpdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLstXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLs9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2otLtNXWEem1l5O0R0OWkQ" name="Iterate(Write(Super$initializationFlag$1)).inputElement" incoming="_2otLntXWEem1l5O0R0OWkQ" outgoing="_2otLpdXWEem1l5O0R0OWkQ" regionAsInput="_2otLpNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otLtdXWEem1l5O0R0OWkQ" name="Read(Super$initializationFlag$1)" structuralFeature="_2otLS9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2otLttXWEem1l5O0R0OWkQ" name="Read(Super$initializationFlag$1).object" incoming="_2otLj9XWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLt9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLuNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2otLudXWEem1l5O0R0OWkQ" name="Read(Super$initializationFlag$1).result" outgoing="_2otLkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLutXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLu9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otLvNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2otLvdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2otLkNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLvtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLv9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2otLwNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2otLkdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLwdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLwtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otLw9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2otLxNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2otLktXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLxdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLxtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2otLx9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2otLyNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2otLydXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2otLkdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLytXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLy9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2otLzNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2otLlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otLzdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otLztXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2otLz9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2otLktXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL0NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL0dXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2otL0tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2otLk9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2otL09XWEem1l5O0R0OWkQ" name="Decision(Test(Super$initializationFlag$1))" incoming="_2otLk9XWEem1l5O0R0OWkQ _2otLlNXWEem1l5O0R0OWkQ" outgoing="_2otLldXWEem1l5O0R0OWkQ" decisionInputFlow="_2otLlNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2otL1NXWEem1l5O0R0OWkQ" name="Super$initialization$1" visibility="protected" method="_2otLi9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2otL1dXWEem1l5O0R0OWkQ" name="Super" visibility="public" method="_2otLTtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2otL1tXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2otLStXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL19XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL2NXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2otL2dXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2otLidXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2otL2tXWEem1l5O0R0OWkQ" name="SignalNewArrival" visibility="public">
          <ownedAttribute xmi:id="_2otL29XWEem1l5O0R0OWkQ" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL3NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL3dXWEem1l5O0R0OWkQ" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2otL3tXWEem1l5O0R0OWkQ" name="SignalTermination" visibility="public"/>
        <ownedReception xmi:id="_2otL39XWEem1l5O0R0OWkQ" name="SignalTermination" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2otL4NXWEem1l5O0R0OWkQ" name="MyTest" visibility="private" classifierBehavior="_2otMANXWEem1l5O0R0OWkQ" isActive="true">
        <generalization xmi:id="_2otL4dXWEem1l5O0R0OWkQ" general="_2otLStXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2otL4tXWEem1l5O0R0OWkQ" name="MyTest$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL49XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL5NXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL5dXWEem1l5O0R0OWkQ" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL5tXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL59XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL6NXWEem1l5O0R0OWkQ" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL6dXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL6tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL69XWEem1l5O0R0OWkQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL7NXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL7dXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL7tXWEem1l5O0R0OWkQ" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL79XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL8NXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL8dXWEem1l5O0R0OWkQ" name="arrival" visibility="public" type="_2otL2tXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL8tXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL89XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL9NXWEem1l5O0R0OWkQ" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL9dXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL9tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL99XWEem1l5O0R0OWkQ" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL-NXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL-dXWEem1l5O0R0OWkQ" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL-tXWEem1l5O0R0OWkQ" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL-9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL_NXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2otL_dXWEem1l5O0R0OWkQ" name="tester" visibility="public" type="_2ot00tXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otL_tXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otL_9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otMANXWEem1l5O0R0OWkQ" name="MyTest$classifierBehavior$1" visibility="private" isActive="true" node="_2otMAdXWEem1l5O0R0OWkQ" group="_2otMAdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2otMAdXWEem1l5O0R0OWkQ" name="Body(MyTest$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMAtXWEem1l5O0R0OWkQ" target="_2otMTdXWEem1l5O0R0OWkQ" source="_2otMNNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMA9XWEem1l5O0R0OWkQ" target="_2otMPNXWEem1l5O0R0OWkQ" source="_2otMMdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMBNXWEem1l5O0R0OWkQ" target="_2otMXtXWEem1l5O0R0OWkQ" source="_2otMPNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMBdXWEem1l5O0R0OWkQ" target="_2otMq9XWEem1l5O0R0OWkQ" source="_2otM3tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMBtXWEem1l5O0R0OWkQ" target="_2otMvdXWEem1l5O0R0OWkQ" source="_2otM3tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMB9XWEem1l5O0R0OWkQ" target="_2otMrtXWEem1l5O0R0OWkQ" source="_2otMNNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMCNXWEem1l5O0R0OWkQ" target="_2otMttXWEem1l5O0R0OWkQ" source="_2otMYNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMCdXWEem1l5O0R0OWkQ" target="_2otM19XWEem1l5O0R0OWkQ" source="_2otM3tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMCtXWEem1l5O0R0OWkQ" target="_2otM0NXWEem1l5O0R0OWkQ" source="_2otMNNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMC9XWEem1l5O0R0OWkQ" target="_2otMZ9XWEem1l5O0R0OWkQ" source="_2otMXtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMDNXWEem1l5O0R0OWkQ" target="_2otM-dXWEem1l5O0R0OWkQ" source="_2otM4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMDdXWEem1l5O0R0OWkQ" target="_2otM6NXWEem1l5O0R0OWkQ" source="_2otMZ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMDtXWEem1l5O0R0OWkQ" target="_2otNCtXWEem1l5O0R0OWkQ" source="_2otM6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMD9XWEem1l5O0R0OWkQ" target="_2otND9XWEem1l5O0R0OWkQ" source="_2otNCtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMENXWEem1l5O0R0OWkQ" target="_2otNKtXWEem1l5O0R0OWkQ" source="_2otNEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMEdXWEem1l5O0R0OWkQ" target="_2otNGdXWEem1l5O0R0OWkQ" source="_2otND9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMEtXWEem1l5O0R0OWkQ" target="_2otxvtXWEem1l5O0R0OWkQ" source="_2otM39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otME9XWEem1l5O0R0OWkQ" target="_2otxwdXWEem1l5O0R0OWkQ" source="_2otM4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMFNXWEem1l5O0R0OWkQ" target="_2otxxNXWEem1l5O0R0OWkQ" source="_2otNEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMFdXWEem1l5O0R0OWkQ" target="_2otNO9XWEem1l5O0R0OWkQ" source="_2otNGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMFtXWEem1l5O0R0OWkQ" target="_2oty0dXWEem1l5O0R0OWkQ" source="_2otM39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMF9XWEem1l5O0R0OWkQ" target="_2oty1NXWEem1l5O0R0OWkQ" source="_2otM4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMGNXWEem1l5O0R0OWkQ" target="_2oty79XWEem1l5O0R0OWkQ" source="_2oty5tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMGdXWEem1l5O0R0OWkQ" target="_2oty2tXWEem1l5O0R0OWkQ" source="_2otNEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMGtXWEem1l5O0R0OWkQ" target="_2oty3dXWEem1l5O0R0OWkQ" source="_2otx6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMG9XWEem1l5O0R0OWkQ" target="_2otyKNXWEem1l5O0R0OWkQ" source="_2otyS9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMHNXWEem1l5O0R0OWkQ" target="_2otyF9XWEem1l5O0R0OWkQ" source="_2otNO9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMHdXWEem1l5O0R0OWkQ" target="_2otzuNXWEem1l5O0R0OWkQ" source="_2otzqdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMHtXWEem1l5O0R0OWkQ" target="_2otzudXWEem1l5O0R0OWkQ" source="_2otzrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMH9XWEem1l5O0R0OWkQ" target="_2otzutXWEem1l5O0R0OWkQ" source="_2otzr9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMINXWEem1l5O0R0OWkQ" target="_2otzu9XWEem1l5O0R0OWkQ" source="_2otzstXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMIdXWEem1l5O0R0OWkQ" target="_2otzvNXWEem1l5O0R0OWkQ" source="_2otztdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMItXWEem1l5O0R0OWkQ" target="_2otzJ9XWEem1l5O0R0OWkQ" source="_2otM39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMI9XWEem1l5O0R0OWkQ" target="_2otzL9XWEem1l5O0R0OWkQ" source="_2otM4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMJNXWEem1l5O0R0OWkQ" target="_2otzN9XWEem1l5O0R0OWkQ" source="_2oty79XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMJdXWEem1l5O0R0OWkQ" target="_2otzP9XWEem1l5O0R0OWkQ" source="_2otNEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMJtXWEem1l5O0R0OWkQ" target="_2otzR9XWEem1l5O0R0OWkQ" source="_2otx6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMJ9XWEem1l5O0R0OWkQ" target="_2otzgdXWEem1l5O0R0OWkQ" source="_2otM39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMKNXWEem1l5O0R0OWkQ" target="_2otzidXWEem1l5O0R0OWkQ" source="_2otM4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMKdXWEem1l5O0R0OWkQ" target="_2otzkdXWEem1l5O0R0OWkQ" source="_2oty79XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMKtXWEem1l5O0R0OWkQ" target="_2otzmdXWEem1l5O0R0OWkQ" source="_2otNEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMK9XWEem1l5O0R0OWkQ" target="_2otzodXWEem1l5O0R0OWkQ" source="_2otx6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMLNXWEem1l5O0R0OWkQ" target="_2oty8NXWEem1l5O0R0OWkQ" source="_2otyF9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMLdXWEem1l5O0R0OWkQ" target="_2otzvdXWEem1l5O0R0OWkQ" source="_2oty8NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMLtXWEem1l5O0R0OWkQ" target="_2otz2NXWEem1l5O0R0OWkQ" source="_2otzwNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otML9XWEem1l5O0R0OWkQ" target="_2otzx9XWEem1l5O0R0OWkQ" source="_2otzvdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2otMMNXWEem1l5O0R0OWkQ" target="_2otz6dXWEem1l5O0R0OWkQ" source="_2otzx9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMMdXWEem1l5O0R0OWkQ" name="AcceptStatement@348275da" outgoing="_2otMA9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMMtXWEem1l5O0R0OWkQ" target="_2otMNdXWEem1l5O0R0OWkQ" source="_2otMO9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMM9XWEem1l5O0R0OWkQ" target="_2otMNNXWEem1l5O0R0OWkQ" source="_2otMNtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otMNNXWEem1l5O0R0OWkQ" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_2otMM9XWEem1l5O0R0OWkQ" outgoing="_2otMAtXWEem1l5O0R0OWkQ _2otMB9XWEem1l5O0R0OWkQ _2otMCtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2otMNdXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival)" incoming="_2otMMtXWEem1l5O0R0OWkQ">
                <result xmi:id="_2otMNtXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_2otMM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMN9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMONXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <trigger xmi:id="_2otMOdXWEem1l5O0R0OWkQ" event="_2ouaxNXWEem1l5O0R0OWkQ"/>
                <trigger xmi:id="_2otMOtXWEem1l5O0R0OWkQ" event="_2ouaxdXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2otMO9XWEem1l5O0R0OWkQ" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_2otMMtXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMPNXWEem1l5O0R0OWkQ" name="ExpressionStatement@71cbc980" incoming="_2otMA9XWEem1l5O0R0OWkQ" outgoing="_2otMBNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMPdXWEem1l5O0R0OWkQ" target="_2otMR9XWEem1l5O0R0OWkQ" source="_2otMQ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMPtXWEem1l5O0R0OWkQ" target="_2otMUNXWEem1l5O0R0OWkQ" source="_2otMTdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMP9XWEem1l5O0R0OWkQ" target="_2otMVNXWEem1l5O0R0OWkQ" source="_2otMStXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMQNXWEem1l5O0R0OWkQ" target="_2otMQdXWEem1l5O0R0OWkQ" source="_2otMXdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMQdXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@34b19210)" incoming="_2otMQNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2otMQtXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2otMQ9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otMPdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMRNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMRdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otMRtXWEem1l5O0R0OWkQ" name="Clear(sig)" structuralFeature="_2otL5dXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otMR9XWEem1l5O0R0OWkQ" name="Clear(sig).object" incoming="_2otMPdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMSNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMSdXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otMStXWEem1l5O0R0OWkQ" name="Clear(sig).result" outgoing="_2otMP9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMS9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMTNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2otMTdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@34b19210)" incoming="_2otMAtXWEem1l5O0R0OWkQ" outgoing="_2otMPtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMTtXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMT9XWEem1l5O0R0OWkQ" target="_2otMWtXWEem1l5O0R0OWkQ" source="_2otMUNXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otMUNXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::sig).input(MyTest::sig)" incoming="_2otMPtXWEem1l5O0R0OWkQ" outgoing="_2otMT9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMUdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMUtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otMU9XWEem1l5O0R0OWkQ" name="Write(sig)" structuralFeature="_2otL5dXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2otMVNXWEem1l5O0R0OWkQ" name="Write(sig).object" incoming="_2otMP9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMVdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMVtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otMV9XWEem1l5O0R0OWkQ" name="Write(sig).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMWNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMWdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2otMWtXWEem1l5O0R0OWkQ" name="Write(sig).value" incoming="_2otMT9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMW9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMXNXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMXdXWEem1l5O0R0OWkQ" name="RightHandSide@2b64981" outgoing="_2otMQNXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMXtXWEem1l5O0R0OWkQ" name="ExpressionStatement@5302c81a" incoming="_2otMBNXWEem1l5O0R0OWkQ" outgoing="_2otMC9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMX9XWEem1l5O0R0OWkQ" target="_2otMYNXWEem1l5O0R0OWkQ" source="_2otMY9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otMYNXWEem1l5O0R0OWkQ" name="Fork(terminate)@13ae1cd0" incoming="_2otMX9XWEem1l5O0R0OWkQ" outgoing="_2otMCNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMYdXWEem1l5O0R0OWkQ" name="RightHandSide@cd661f4">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otMYtXWEem1l5O0R0OWkQ" name="Value(false)">
                  <result xmi:id="_2otMY9XWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2otMX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMZNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMZdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2otMZtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMZ9XWEem1l5O0R0OWkQ" name="AcceptStatement@30d44a0d" incoming="_2otMC9XWEem1l5O0R0OWkQ" outgoing="_2otMDdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMaNXWEem1l5O0R0OWkQ" target="_2otMw9XWEem1l5O0R0OWkQ" source="_2otMwNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMadXWEem1l5O0R0OWkQ" target="_2otMf9XWEem1l5O0R0OWkQ" source="_2otMw9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otMatXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMa9XWEem1l5O0R0OWkQ" target="_2otMedXWEem1l5O0R0OWkQ" source="_2otMsdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMbNXWEem1l5O0R0OWkQ" target="_2otMfNXWEem1l5O0R0OWkQ" source="_2otMudXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMbdXWEem1l5O0R0OWkQ" target="_2otM3dXWEem1l5O0R0OWkQ" source="_2otM2tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMbtXWEem1l5O0R0OWkQ" target="_2otMxNXWEem1l5O0R0OWkQ" source="_2otM3dXWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otMb9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMcNXWEem1l5O0R0OWkQ" target="_2otMw9XWEem1l5O0R0OWkQ" source="_2otM3dXWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2otMcdXWEem1l5O0R0OWkQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMctXWEem1l5O0R0OWkQ" target="_2otMedXWEem1l5O0R0OWkQ" source="_2otM09XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMc9XWEem1l5O0R0OWkQ" target="_2otMfNXWEem1l5O0R0OWkQ" source="_2otMx9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMdNXWEem1l5O0R0OWkQ" target="_2otM39XWEem1l5O0R0OWkQ" source="_2otMedXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMddXWEem1l5O0R0OWkQ" target="_2otM4NXWEem1l5O0R0OWkQ" source="_2otMfNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMdtXWEem1l5O0R0OWkQ" target="_2otM4dXWEem1l5O0R0OWkQ" source="_2otM59XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otMd9XWEem1l5O0R0OWkQ" target="_2otM3dXWEem1l5O0R0OWkQ" source="_2otM4dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMeNXWEem1l5O0R0OWkQ" target="_2otM3tXWEem1l5O0R0OWkQ" source="_2otM4tXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2otMedXWEem1l5O0R0OWkQ" name="AcceptStatement@30d44a0d.output(sig)" incoming="_2otMa9XWEem1l5O0R0OWkQ _2otMctXWEem1l5O0R0OWkQ" outgoing="_2otMdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMetXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMe9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_2otMfNXWEem1l5O0R0OWkQ" name="AcceptStatement@30d44a0d.output(terminate)" incoming="_2otMbNXWEem1l5O0R0OWkQ _2otMc9XWEem1l5O0R0OWkQ" outgoing="_2otMddXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMfdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMftXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMf9XWEem1l5O0R0OWkQ" name="AcceptBlock(SignalNewArrival)" incoming="_2otMadXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMgNXWEem1l5O0R0OWkQ" name="ExpressionStatement@7778eb84">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMgdXWEem1l5O0R0OWkQ" target="_2otMjNXWEem1l5O0R0OWkQ" source="_2otMiNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMgtXWEem1l5O0R0OWkQ" target="_2otMldXWEem1l5O0R0OWkQ" source="_2otMktXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMg9XWEem1l5O0R0OWkQ" target="_2otMmdXWEem1l5O0R0OWkQ" source="_2otMj9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMhNXWEem1l5O0R0OWkQ" target="_2otMktXWEem1l5O0R0OWkQ" source="_2otMqNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2otMhdXWEem1l5O0R0OWkQ" target="_2otMhtXWEem1l5O0R0OWkQ" source="_2otMotXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMhtXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@76454132)" incoming="_2otMhdXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_2otMh9XWEem1l5O0R0OWkQ" name="ReadSelf">
                      <result xmi:id="_2otMiNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otMgdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMidXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMitXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otMi9XWEem1l5O0R0OWkQ" name="Clear(name)" structuralFeature="_2otL69XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2otMjNXWEem1l5O0R0OWkQ" name="Clear(name).object" incoming="_2otMgdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMjdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMjtXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2otMj9XWEem1l5O0R0OWkQ" name="Clear(name).result" outgoing="_2otMg9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMkNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMkdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2otMktXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@76454132)" incoming="_2otMhNXWEem1l5O0R0OWkQ" outgoing="_2otMgtXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMk9XWEem1l5O0R0OWkQ" name="WriteAll(MyTest::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMlNXWEem1l5O0R0OWkQ" target="_2otMn9XWEem1l5O0R0OWkQ" source="_2otMldXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2otMldXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::name).input(MyTest::name)" incoming="_2otMgtXWEem1l5O0R0OWkQ" outgoing="_2otMlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMltXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMl9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otMmNXWEem1l5O0R0OWkQ" name="Write(name)" structuralFeature="_2otL69XWEem1l5O0R0OWkQ" isReplaceAll="true">
                      <object xmi:id="_2otMmdXWEem1l5O0R0OWkQ" name="Write(name).object" incoming="_2otMg9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMmtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMm9XWEem1l5O0R0OWkQ" value="1"/>
                      </object>
                      <result xmi:id="_2otMnNXWEem1l5O0R0OWkQ" name="Write(name).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMndXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMntXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:id="_2otMn9XWEem1l5O0R0OWkQ" name="Write(name).value" incoming="_2otMlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMoNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otModXWEem1l5O0R0OWkQ" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMotXWEem1l5O0R0OWkQ" name="RightHandSide@56d8c076" outgoing="_2otMhdXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMo9XWEem1l5O0R0OWkQ" target="_2otMpdXWEem1l5O0R0OWkQ" source="_2otMq9XWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otMpNXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_2otL29XWEem1l5O0R0OWkQ">
                      <object xmi:id="_2otMpdXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_2otMo9XWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMptXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMp9XWEem1l5O0R0OWkQ" value="1"/>
                      </object>
                      <result xmi:id="_2otMqNXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_2otMhNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMqdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMqtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otMq9XWEem1l5O0R0OWkQ" name="Fork()" incoming="_2otMBdXWEem1l5O0R0OWkQ" outgoing="_2otMo9XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMrNXWEem1l5O0R0OWkQ" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMrdXWEem1l5O0R0OWkQ" target="_2otMsdXWEem1l5O0R0OWkQ" source="_2otMrtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otMrtXWEem1l5O0R0OWkQ" name="Passthru(sig).input" incoming="_2otMB9XWEem1l5O0R0OWkQ" outgoing="_2otMrdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMr9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMsNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otMsdXWEem1l5O0R0OWkQ" name="Passthru(sig).output" incoming="_2otMrdXWEem1l5O0R0OWkQ" outgoing="_2otMa9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMstXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMs9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMtNXWEem1l5O0R0OWkQ" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMtdXWEem1l5O0R0OWkQ" target="_2otMudXWEem1l5O0R0OWkQ" source="_2otMttXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otMttXWEem1l5O0R0OWkQ" name="Passthru(terminate).input" incoming="_2otMCNXWEem1l5O0R0OWkQ" outgoing="_2otMtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMt9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMuNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otMudXWEem1l5O0R0OWkQ" name="Passthru(terminate).output" incoming="_2otMtdXWEem1l5O0R0OWkQ" outgoing="_2otMbNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMutXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMu9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2otMvNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_2otL2tXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otMvdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_2otMBtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMvtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMv9XWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otMwNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_2otMaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMwdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMwtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_2otMw9XWEem1l5O0R0OWkQ" name="Decision(Test(SignalNewArrival))" incoming="_2otMaNXWEem1l5O0R0OWkQ _2otMcNXWEem1l5O0R0OWkQ" outgoing="_2otMadXWEem1l5O0R0OWkQ" decisionInputFlow="_2otMaNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMxNXWEem1l5O0R0OWkQ" name="AcceptBlock(SignalTermination)" incoming="_2otMbtXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMxdXWEem1l5O0R0OWkQ" name="ExpressionStatement@12a21500">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMxtXWEem1l5O0R0OWkQ" target="_2otMx9XWEem1l5O0R0OWkQ" source="_2otMytXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_2otMx9XWEem1l5O0R0OWkQ" name="Fork(terminate)@2e4bd1af" incoming="_2otMxtXWEem1l5O0R0OWkQ" outgoing="_2otMc9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMyNXWEem1l5O0R0OWkQ" name="RightHandSide@277ed54">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otMydXWEem1l5O0R0OWkQ" name="Value(true)">
                      <result xmi:id="_2otMytXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2otMxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otMy9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otMzNXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_2otMzdXWEem1l5O0R0OWkQ" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otMztXWEem1l5O0R0OWkQ" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otMz9XWEem1l5O0R0OWkQ" target="_2otM09XWEem1l5O0R0OWkQ" source="_2otM0NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otM0NXWEem1l5O0R0OWkQ" name="Passthru(sig).input" incoming="_2otMCtXWEem1l5O0R0OWkQ" outgoing="_2otMz9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM0dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM0tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otM09XWEem1l5O0R0OWkQ" name="Passthru(sig).output" incoming="_2otMz9XWEem1l5O0R0OWkQ" outgoing="_2otMctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM1NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM1dXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2otM1tXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2otL3tXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otM19XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2otMCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM2NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM2dXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otM2tXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2otMbdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM29XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM3NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_2otM3dXWEem1l5O0R0OWkQ" name="Decision(Test(SignalTermination))" incoming="_2otMbdXWEem1l5O0R0OWkQ _2otMd9XWEem1l5O0R0OWkQ" outgoing="_2otMbtXWEem1l5O0R0OWkQ _2otMcNXWEem1l5O0R0OWkQ" decisionInputFlow="_2otMbdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otM3tXWEem1l5O0R0OWkQ" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_2otMeNXWEem1l5O0R0OWkQ" outgoing="_2otMBdXWEem1l5O0R0OWkQ _2otMBtXWEem1l5O0R0OWkQ _2otMCdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otM39XWEem1l5O0R0OWkQ" name="Fork(sig)" incoming="_2otMdNXWEem1l5O0R0OWkQ" outgoing="_2otMEtXWEem1l5O0R0OWkQ _2otMFtXWEem1l5O0R0OWkQ _2otMItXWEem1l5O0R0OWkQ _2otMJ9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otM4NXWEem1l5O0R0OWkQ" name="Fork(terminate)" incoming="_2otMddXWEem1l5O0R0OWkQ" outgoing="_2otMDNXWEem1l5O0R0OWkQ _2otME9XWEem1l5O0R0OWkQ _2otMF9XWEem1l5O0R0OWkQ _2otMI9XWEem1l5O0R0OWkQ _2otMKNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2otM4dXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival)" incoming="_2otMdtXWEem1l5O0R0OWkQ" outgoing="_2otMd9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2otM4tXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_2otMeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM49XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM5NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <trigger xmi:id="_2otM5dXWEem1l5O0R0OWkQ" event="_2ouaxtXWEem1l5O0R0OWkQ"/>
                <trigger xmi:id="_2otM5tXWEem1l5O0R0OWkQ" event="_2ouax9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2otM59XWEem1l5O0R0OWkQ" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_2otMdtXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otM6NXWEem1l5O0R0OWkQ" name="ExpressionStatement@29c5abef" incoming="_2otMDdXWEem1l5O0R0OWkQ" outgoing="_2otMDtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otM6dXWEem1l5O0R0OWkQ" target="_2otM89XWEem1l5O0R0OWkQ" source="_2otM79XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otM6tXWEem1l5O0R0OWkQ" target="_2otM_NXWEem1l5O0R0OWkQ" source="_2otM-dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otM69XWEem1l5O0R0OWkQ" target="_2otNANXWEem1l5O0R0OWkQ" source="_2otM9tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otM7NXWEem1l5O0R0OWkQ" target="_2otM7dXWEem1l5O0R0OWkQ" source="_2otNCdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otM7dXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@426eb933)" incoming="_2otM7NXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2otM7tXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2otM79XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otM6dXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM8NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM8dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otM8tXWEem1l5O0R0OWkQ" name="Clear(terminate)" structuralFeature="_2otL7tXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otM89XWEem1l5O0R0OWkQ" name="Clear(terminate).object" incoming="_2otM6dXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM9NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM9dXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otM9tXWEem1l5O0R0OWkQ" name="Clear(terminate).result" outgoing="_2otM69XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM99XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM-NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2otM-dXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@426eb933)" incoming="_2otMDNXWEem1l5O0R0OWkQ" outgoing="_2otM6tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otM-tXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otM-9XWEem1l5O0R0OWkQ" target="_2otNBtXWEem1l5O0R0OWkQ" source="_2otM_NXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otM_NXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::terminate).input(MyTest::terminate)" incoming="_2otM6tXWEem1l5O0R0OWkQ" outgoing="_2otM-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otM_dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otM_tXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otM_9XWEem1l5O0R0OWkQ" name="Write(terminate)" structuralFeature="_2otL7tXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2otNANXWEem1l5O0R0OWkQ" name="Write(terminate).object" incoming="_2otM69XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNAdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNAtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otNA9XWEem1l5O0R0OWkQ" name="Write(terminate).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNBNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNBdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2otNBtXWEem1l5O0R0OWkQ" name="Write(terminate).value" incoming="_2otM-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNB9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNCNXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNCdXWEem1l5O0R0OWkQ" name="RightHandSide@4ca279df" outgoing="_2otM7NXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNCtXWEem1l5O0R0OWkQ" name="AcceptStatement@552ef403" incoming="_2otMDtXWEem1l5O0R0OWkQ" outgoing="_2otMD9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otNC9XWEem1l5O0R0OWkQ" target="_2otNDNXWEem1l5O0R0OWkQ" source="_2otNDtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2otNDNXWEem1l5O0R0OWkQ" name="Accept(SignalNewArrival)" incoming="_2otNC9XWEem1l5O0R0OWkQ">
                <trigger xmi:id="_2otNDdXWEem1l5O0R0OWkQ" event="_2ouayNXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2otNDtXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalNewArrival))" outgoing="_2otNC9XWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otND9XWEem1l5O0R0OWkQ" name="AcceptStatement@53beda24" incoming="_2otMD9XWEem1l5O0R0OWkQ" outgoing="_2otMEdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otNENXWEem1l5O0R0OWkQ" target="_2otNE9XWEem1l5O0R0OWkQ" source="_2otNGNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNEdXWEem1l5O0R0OWkQ" target="_2otNEtXWEem1l5O0R0OWkQ" source="_2otNFNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otNEtXWEem1l5O0R0OWkQ" name="Fork(Accept(SignalNewArrival).result)" incoming="_2otNEdXWEem1l5O0R0OWkQ" outgoing="_2otMENXWEem1l5O0R0OWkQ _2otMFNXWEem1l5O0R0OWkQ _2otMGdXWEem1l5O0R0OWkQ _2otMJdXWEem1l5O0R0OWkQ _2otMKtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2otNE9XWEem1l5O0R0OWkQ" name="Accept(SignalNewArrival)" incoming="_2otNENXWEem1l5O0R0OWkQ">
                <result xmi:id="_2otNFNXWEem1l5O0R0OWkQ" name="Accept(SignalNewArrival).result" outgoing="_2otNEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNFdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNFtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <trigger xmi:id="_2otNF9XWEem1l5O0R0OWkQ" event="_2ouaydXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2otNGNXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalNewArrival))" outgoing="_2otNENXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNGdXWEem1l5O0R0OWkQ" name="ExpressionStatement@2a785412" incoming="_2otMEdXWEem1l5O0R0OWkQ" outgoing="_2otMFdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNGtXWEem1l5O0R0OWkQ" target="_2otNJNXWEem1l5O0R0OWkQ" source="_2otNINXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNG9XWEem1l5O0R0OWkQ" target="_2otNLdXWEem1l5O0R0OWkQ" source="_2otNKtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNHNXWEem1l5O0R0OWkQ" target="_2otNMdXWEem1l5O0R0OWkQ" source="_2otNJ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otNHdXWEem1l5O0R0OWkQ" target="_2otNHtXWEem1l5O0R0OWkQ" source="_2otNOtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNHtXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@d065a93)" incoming="_2otNHdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2otNH9XWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2otNINXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otNGtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNIdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNItXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otNI9XWEem1l5O0R0OWkQ" name="Clear(arrival)" structuralFeature="_2otL8dXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otNJNXWEem1l5O0R0OWkQ" name="Clear(arrival).object" incoming="_2otNGtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNJdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNJtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otNJ9XWEem1l5O0R0OWkQ" name="Clear(arrival).result" outgoing="_2otNHNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNKNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNKdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2otNKtXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@d065a93)" incoming="_2otMENXWEem1l5O0R0OWkQ" outgoing="_2otNG9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNK9XWEem1l5O0R0OWkQ" name="WriteAll(MyTest::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNLNXWEem1l5O0R0OWkQ" target="_2otNN9XWEem1l5O0R0OWkQ" source="_2otNLdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otNLdXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::arrival).input(MyTest::arrival)" incoming="_2otNG9XWEem1l5O0R0OWkQ" outgoing="_2otNLNXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNLtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNL9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otNMNXWEem1l5O0R0OWkQ" name="Write(arrival)" structuralFeature="_2otL8dXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2otNMdXWEem1l5O0R0OWkQ" name="Write(arrival).object" incoming="_2otNHNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNMtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNM9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otNNNXWEem1l5O0R0OWkQ" name="Write(arrival).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNNdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNNtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2otNN9XWEem1l5O0R0OWkQ" name="Write(arrival).value" incoming="_2otNLNXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNONXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNOdXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNOtXWEem1l5O0R0OWkQ" name="RightHandSide@52cfc632" outgoing="_2otNHdXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNO9XWEem1l5O0R0OWkQ" name="ForStatement@1c635efe" incoming="_2otMFdXWEem1l5O0R0OWkQ" outgoing="_2otMHNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNPNXWEem1l5O0R0OWkQ" target="_2otx6NXWEem1l5O0R0OWkQ" source="_2otx3NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNPdXWEem1l5O0R0OWkQ" target="_2otx-NXWEem1l5O0R0OWkQ" source="_2otx79XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNPtXWEem1l5O0R0OWkQ" target="_2otxzdXWEem1l5O0R0OWkQ" source="_2otyE9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNP9XWEem1l5O0R0OWkQ" target="_2otx0NXWEem1l5O0R0OWkQ" source="_2otyD9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNQNXWEem1l5O0R0OWkQ" target="_2otxytXWEem1l5O0R0OWkQ" source="_2otx-NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otNQdXWEem1l5O0R0OWkQ" target="_2otNQtXWEem1l5O0R0OWkQ" source="_2otx6dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:LoopNode" xmi:id="_2otNQtXWEem1l5O0R0OWkQ" name="Loop(ForStatement@1c635efe)" incoming="_2otNQdXWEem1l5O0R0OWkQ" bodyOutput="_2otNcNXWEem1l5O0R0OWkQ _2otNc9XWEem1l5O0R0OWkQ _2otNdtXWEem1l5O0R0OWkQ _2otNedXWEem1l5O0R0OWkQ _2otxodXWEem1l5O0R0OWkQ _2otxitXWEem1l5O0R0OWkQ _2otxl9XWEem1l5O0R0OWkQ" bodyPart="_2otNZtXWEem1l5O0R0OWkQ _2otNZ9XWEem1l5O0R0OWkQ _2otxmtXWEem1l5O0R0OWkQ _2otxpNXWEem1l5O0R0OWkQ" decider="_2otNY9XWEem1l5O0R0OWkQ" isTestedFirst="true" test="_2otNXNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNQ9XWEem1l5O0R0OWkQ" target="_2otNVdXWEem1l5O0R0OWkQ" source="_2otxqdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNRNXWEem1l5O0R0OWkQ" target="_2otNVtXWEem1l5O0R0OWkQ" source="_2otxrNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNRdXWEem1l5O0R0OWkQ" target="_2otNV9XWEem1l5O0R0OWkQ" source="_2otxr9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNRtXWEem1l5O0R0OWkQ" target="_2otNWNXWEem1l5O0R0OWkQ" source="_2otxstXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNR9XWEem1l5O0R0OWkQ" target="_2otNWdXWEem1l5O0R0OWkQ" source="_2otxtdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNSNXWEem1l5O0R0OWkQ" target="_2otNWtXWEem1l5O0R0OWkQ" source="_2otxuNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNSdXWEem1l5O0R0OWkQ" target="_2otNW9XWEem1l5O0R0OWkQ" source="_2otxu9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNStXWEem1l5O0R0OWkQ" target="_2otNXdXWEem1l5O0R0OWkQ" source="_2otNWtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNS9XWEem1l5O0R0OWkQ" target="_2otNYNXWEem1l5O0R0OWkQ" source="_2otNW9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otNTNXWEem1l5O0R0OWkQ" target="_2otNZ9XWEem1l5O0R0OWkQ" source="_2otNZtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNTdXWEem1l5O0R0OWkQ" target="_2otxQ9XWEem1l5O0R0OWkQ" source="_2otNWdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNTtXWEem1l5O0R0OWkQ" target="_2otxm9XWEem1l5O0R0OWkQ" source="_2otNWdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNT9XWEem1l5O0R0OWkQ" target="_2otxntXWEem1l5O0R0OWkQ" source="_2otxpdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNUNXWEem1l5O0R0OWkQ" target="_2otxhNXWEem1l5O0R0OWkQ" source="_2otNWtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNUdXWEem1l5O0R0OWkQ" target="_2otxlNXWEem1l5O0R0OWkQ" source="_2otNW9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNUtXWEem1l5O0R0OWkQ" target="_2otxZdXWEem1l5O0R0OWkQ" source="_2otNVdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNU9XWEem1l5O0R0OWkQ" target="_2otxbdXWEem1l5O0R0OWkQ" source="_2otNVtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNVNXWEem1l5O0R0OWkQ" target="_2otxddXWEem1l5O0R0OWkQ" source="_2otNV9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNVdXWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(sig))" incoming="_2otNQ9XWEem1l5O0R0OWkQ" outgoing="_2otNUtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNVtXWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(terminate))" incoming="_2otNRNXWEem1l5O0R0OWkQ" outgoing="_2otNU9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNV9XWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(arrival3))" incoming="_2otNRdXWEem1l5O0R0OWkQ" outgoing="_2otNVNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNWNXWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(s1))" incoming="_2otNRtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNWdXWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(i))" incoming="_2otNR9XWEem1l5O0R0OWkQ" outgoing="_2otNTdXWEem1l5O0R0OWkQ _2otNTtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNWtXWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(counter))" incoming="_2otNSNXWEem1l5O0R0OWkQ" outgoing="_2otNStXWEem1l5O0R0OWkQ _2otNUNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_2otNW9XWEem1l5O0R0OWkQ" name="Fork(ForStatement@1c635efe.loopVariable(upper))" incoming="_2otNSdXWEem1l5O0R0OWkQ" outgoing="_2otNS9XWEem1l5O0R0OWkQ _2otNUdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otNXNXWEem1l5O0R0OWkQ" name="Call(&lt;=)">
                  <argument xmi:id="_2otNXdXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(x)" incoming="_2otNStXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNXtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNX9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2otNYNXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(y)" incoming="_2otNS9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNYdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNYtXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2otNY9XWEem1l5O0R0OWkQ" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNZNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNZdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNZtXWEem1l5O0R0OWkQ" name="Values(ForStatement@1c635efe)" outgoing="_2otNTNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNZ9XWEem1l5O0R0OWkQ" name="Body(ForStatement@1c635efe)" incoming="_2otNTNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNaNXWEem1l5O0R0OWkQ" target="_2otNcNXWEem1l5O0R0OWkQ" source="_2otxaNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNadXWEem1l5O0R0OWkQ" target="_2otNc9XWEem1l5O0R0OWkQ" source="_2otxcNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNatXWEem1l5O0R0OWkQ" target="_2otNdtXWEem1l5O0R0OWkQ" source="_2otxeNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNa9XWEem1l5O0R0OWkQ" target="_2otNedXWEem1l5O0R0OWkQ" source="_2otxgNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNbNXWEem1l5O0R0OWkQ" target="_2otxYdXWEem1l5O0R0OWkQ" source="_2otNf9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2otNbdXWEem1l5O0R0OWkQ" target="_2otNh9XWEem1l5O0R0OWkQ" source="_2otNfNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNbtXWEem1l5O0R0OWkQ" target="_2otxfdXWEem1l5O0R0OWkQ" source="_2otNf9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNb9XWEem1l5O0R0OWkQ" target="_2otxh9XWEem1l5O0R0OWkQ" source="_2otxjtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2otNcNXWEem1l5O0R0OWkQ" name="sig" incoming="_2otNaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNcdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNctXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_2otNc9XWEem1l5O0R0OWkQ" name="terminate" incoming="_2otNadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNdNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNddXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_2otNdtXWEem1l5O0R0OWkQ" name="arrival3" incoming="_2otNatXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNd9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNeNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_2otNedXWEem1l5O0R0OWkQ" name="s1" incoming="_2otNa9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNetXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNe9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNfNXWEem1l5O0R0OWkQ" name="AcceptStatement@6e1c6d4d" outgoing="_2otNbdXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2otNfdXWEem1l5O0R0OWkQ" target="_2otNgNXWEem1l5O0R0OWkQ" source="_2otNhtXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNftXWEem1l5O0R0OWkQ" target="_2otNf9XWEem1l5O0R0OWkQ" source="_2otNgdXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otNf9XWEem1l5O0R0OWkQ" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_2otNftXWEem1l5O0R0OWkQ" outgoing="_2otNbNXWEem1l5O0R0OWkQ _2otNbtXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_2otNgNXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival)" incoming="_2otNfdXWEem1l5O0R0OWkQ">
                      <result xmi:id="_2otNgdXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_2otNftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNgtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otNg9XWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <trigger xmi:id="_2otNhNXWEem1l5O0R0OWkQ" event="_2ouaytXWEem1l5O0R0OWkQ"/>
                      <trigger xmi:id="_2otNhdXWEem1l5O0R0OWkQ" event="_2ouay9XWEem1l5O0R0OWkQ"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_2otNhtXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_2otNfdXWEem1l5O0R0OWkQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNh9XWEem1l5O0R0OWkQ" name="ExpressionStatement@546bec3e" incoming="_2otNbdXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2otNiNXWEem1l5O0R0OWkQ" target="_2otxQdXWEem1l5O0R0OWkQ" source="_2otNkNXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNidXWEem1l5O0R0OWkQ" target="_2otxSdXWEem1l5O0R0OWkQ" source="_2otxRtXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNitXWEem1l5O0R0OWkQ" target="_2otxS9XWEem1l5O0R0OWkQ" source="_2otNktXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNi9XWEem1l5O0R0OWkQ" target="_2otxUdXWEem1l5O0R0OWkQ" source="_2otxSdXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNjNXWEem1l5O0R0OWkQ" target="_2otxVdXWEem1l5O0R0OWkQ" source="_2otxTtXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNjdXWEem1l5O0R0OWkQ" target="_2otxXtXWEem1l5O0R0OWkQ" source="_2otxSdXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otNjtXWEem1l5O0R0OWkQ" target="_2otxW9XWEem1l5O0R0OWkQ" source="_2otxYdXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2otNj9XWEem1l5O0R0OWkQ" target="_2otNkNXWEem1l5O0R0OWkQ" source="_2otxYtXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otNkNXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@48e0641b)" incoming="_2otNj9XWEem1l5O0R0OWkQ" outgoing="_2otNiNXWEem1l5O0R0OWkQ">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_2otNkdXWEem1l5O0R0OWkQ" name="ReadSelf">
                        <result xmi:id="_2otNktXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otNitXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otNk9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxQNXWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxQdXWEem1l5O0R0OWkQ" name="Index(LeftHandSide@48e0641b)" incoming="_2otNiNXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otxQtXWEem1l5O0R0OWkQ" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_2otxQ9XWEem1l5O0R0OWkQ" name="Call(ToUnlimitedNatural).argument(x)" incoming="_2otNTdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxRNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxRdXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2otxRtXWEem1l5O0R0OWkQ" name="Call(ToUnlimitedNatural).result(result)" outgoing="_2otNidXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxR9XWEem1l5O0R0OWkQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxSNXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otxSdXWEem1l5O0R0OWkQ" name="Fork(Call(ToUnlimitedNatural).result(result))" incoming="_2otNidXWEem1l5O0R0OWkQ" outgoing="_2otNi9XWEem1l5O0R0OWkQ _2otNjdXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_2otxStXWEem1l5O0R0OWkQ" name="Remove(signals)" structuralFeature="_2otL99XWEem1l5O0R0OWkQ">
                      <object xmi:id="_2otxS9XWEem1l5O0R0OWkQ" name="Remove(signals).object" incoming="_2otNitXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxTNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxTdXWEem1l5O0R0OWkQ" value="1"/>
                      </object>
                      <result xmi:id="_2otxTtXWEem1l5O0R0OWkQ" name="Remove(signals).result" outgoing="_2otNjNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxT9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxUNXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <removeAt xmi:id="_2otxUdXWEem1l5O0R0OWkQ" name="Remove(signals).removeAt" incoming="_2otNi9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxUtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxU9XWEem1l5O0R0OWkQ" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otxVNXWEem1l5O0R0OWkQ" name="Write(signals)" structuralFeature="_2otL99XWEem1l5O0R0OWkQ">
                      <object xmi:id="_2otxVdXWEem1l5O0R0OWkQ" name="Write(signals).object" incoming="_2otNjNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxVtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxV9XWEem1l5O0R0OWkQ" value="1"/>
                      </object>
                      <result xmi:id="_2otxWNXWEem1l5O0R0OWkQ" name="Write(signals).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxWdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxWtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:id="_2otxW9XWEem1l5O0R0OWkQ" name="Write(signals).value" incoming="_2otNjtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxXNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxXdXWEem1l5O0R0OWkQ" value="1"/>
                      </value>
                      <insertAt xmi:id="_2otxXtXWEem1l5O0R0OWkQ" name="Write(signals).insertAt" incoming="_2otNjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxX9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxYNXWEem1l5O0R0OWkQ" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otxYdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@48e0641b)" incoming="_2otNbNXWEem1l5O0R0OWkQ" outgoing="_2otNjtXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxYtXWEem1l5O0R0OWkQ" name="RightHandSide@2510869a" outgoing="_2otNj9XWEem1l5O0R0OWkQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxY9XWEem1l5O0R0OWkQ" name="Passthru(Fork(sig))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otxZNXWEem1l5O0R0OWkQ" target="_2otxaNXWEem1l5O0R0OWkQ" source="_2otxZdXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2otxZdXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).input" incoming="_2otNUtXWEem1l5O0R0OWkQ" outgoing="_2otxZNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxZtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxZ9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2otxaNXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).output" incoming="_2otxZNXWEem1l5O0R0OWkQ" outgoing="_2otNaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxadXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxatXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxa9XWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otxbNXWEem1l5O0R0OWkQ" target="_2otxcNXWEem1l5O0R0OWkQ" source="_2otxbdXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2otxbdXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).input" incoming="_2otNU9XWEem1l5O0R0OWkQ" outgoing="_2otxbNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxbtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxb9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2otxcNXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).output" incoming="_2otxbNXWEem1l5O0R0OWkQ" outgoing="_2otNadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxcdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxctXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxc9XWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otxdNXWEem1l5O0R0OWkQ" target="_2otxeNXWEem1l5O0R0OWkQ" source="_2otxddXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2otxddXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2otNVNXWEem1l5O0R0OWkQ" outgoing="_2otxdNXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxdtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxd9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2otxeNXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2otxdNXWEem1l5O0R0OWkQ" outgoing="_2otNatXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxedXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxetXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxe9XWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otxfNXWEem1l5O0R0OWkQ" target="_2otxgNXWEem1l5O0R0OWkQ" source="_2otxfdXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2otxfdXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).input" incoming="_2otNbtXWEem1l5O0R0OWkQ" outgoing="_2otxfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxftXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxf9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2otxgNXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).output" incoming="_2otxfNXWEem1l5O0R0OWkQ" outgoing="_2otNa9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxgdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxgtXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otxg9XWEem1l5O0R0OWkQ" name="Call(+)">
                    <argument xmi:id="_2otxhNXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2otNUNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxhdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxhtXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2otxh9XWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2otNb9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxiNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxidXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2otxitXWEem1l5O0R0OWkQ" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxi9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxjNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otxjdXWEem1l5O0R0OWkQ" name="Value(1)">
                    <result xmi:id="_2otxjtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2otNb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxj9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxkNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_2otxkdXWEem1l5O0R0OWkQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otxktXWEem1l5O0R0OWkQ" name="Passthru(upper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otxk9XWEem1l5O0R0OWkQ" target="_2otxl9XWEem1l5O0R0OWkQ" source="_2otxlNXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_2otxlNXWEem1l5O0R0OWkQ" name="Passthru(upper).input" incoming="_2otNUdXWEem1l5O0R0OWkQ" outgoing="_2otxk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxldXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxltXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_2otxl9XWEem1l5O0R0OWkQ" name="Passthru(upper).output" incoming="_2otxk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxmNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxmdXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otxmtXWEem1l5O0R0OWkQ" name="Call(+)">
                  <argument xmi:id="_2otxm9XWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2otNTtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxnNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxndXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2otxntXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2otNT9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxn9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxoNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2otxodXWEem1l5O0R0OWkQ" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxotXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxo9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otxpNXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_2otxpdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2otNT9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxptXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxp9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2otxqNXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <loopVariable xmi:id="_2otxqdXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(sig)" outgoing="_2otNQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxqtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxq9XWEem1l5O0R0OWkQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2otxrNXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(terminate)" outgoing="_2otNRNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxrdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxrtXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2otxr9XWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(arrival3)" outgoing="_2otNRdXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxsNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxsdXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2otxstXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(s1)" outgoing="_2otNRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxs9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxtNXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2otxtdXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(i)" outgoing="_2otNR9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxttXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxt9XWEem1l5O0R0OWkQ" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_2otxuNXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(counter)" outgoing="_2otNSNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxudXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxutXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_2otxu9XWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariable(upper)" outgoing="_2otNSdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxvNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxvdXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_2otxvtXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(sig)" incoming="_2otMEtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxv9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxwNXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2otxwdXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(terminate)" incoming="_2otME9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxwtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxw9XWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2otxxNXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(arrival3)" incoming="_2otMFNXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxxdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxxtXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2otxx9XWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(s1)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxyNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxydXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2otxytXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(i)" incoming="_2otNQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxy9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxzNXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2otxzdXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(counter)" incoming="_2otNPtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otxztXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otxz9XWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_2otx0NXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.loopVariableInput(upper)" incoming="_2otNP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx0dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx0tXWEem1l5O0R0OWkQ" value="1"/>
                </loopVariableInput>
                <result xmi:id="_2otx09XWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx1NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx1dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2otx1tXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx19XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx2NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2otx2dXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(arrival3)" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx2tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx29XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2otx3NXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(s1)" outgoing="_2otNPNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx3dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx3tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2otx39XWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx4NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx4dXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <result xmi:id="_2otx4tXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx49XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx5NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2otx5dXWEem1l5O0R0OWkQ" name="ForStatement@1c635efe.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx5tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx59XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2otx6NXWEem1l5O0R0OWkQ" name="Fork(s1)" incoming="_2otNPNXWEem1l5O0R0OWkQ" outgoing="_2otMGtXWEem1l5O0R0OWkQ _2otMJtXWEem1l5O0R0OWkQ _2otMK9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otx6dXWEem1l5O0R0OWkQ" name="LoopVariables(ForStatement@1c635efe)" outgoing="_2otNQdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otx6tXWEem1l5O0R0OWkQ" target="_2otx-tXWEem1l5O0R0OWkQ" source="_2otx9NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otx69XWEem1l5O0R0OWkQ" target="_2otx_dXWEem1l5O0R0OWkQ" source="_2otx-NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otx7NXWEem1l5O0R0OWkQ" target="_2otyCdXWEem1l5O0R0OWkQ" source="_2otyANXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otx7dXWEem1l5O0R0OWkQ" target="_2otyDNXWEem1l5O0R0OWkQ" source="_2otyBNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otx7tXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_2otx79XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2otNPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx8NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx8dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2otx8tXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otx89XWEem1l5O0R0OWkQ" name="Value(2)">
                  <result xmi:id="_2otx9NXWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_2otx6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx9dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx9tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2otx99XWEem1l5O0R0OWkQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2otx-NXWEem1l5O0R0OWkQ" name="Fork(Value(1).result)" incoming="_2otNPdXWEem1l5O0R0OWkQ" outgoing="_2otNQNXWEem1l5O0R0OWkQ _2otx69XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otx-dXWEem1l5O0R0OWkQ" name="Call(-)">
                  <argument xmi:id="_2otx-tXWEem1l5O0R0OWkQ" name="Call(-).argument(x)" incoming="_2otx6tXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx-9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx_NXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2otx_dXWEem1l5O0R0OWkQ" name="Call(-).argument(y)" incoming="_2otx69XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otx_tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otx_9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2otyANXWEem1l5O0R0OWkQ" name="Call(-).result(result)" outgoing="_2otx7NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyAdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyAtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otyA9XWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_2otyBNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2otx7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyBdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyBtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2otyB9XWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otyCNXWEem1l5O0R0OWkQ" name="Call(+)">
                  <argument xmi:id="_2otyCdXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2otx7NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyC9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2otyDNXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2otx7dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyDtXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2otyD9XWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_2otNP9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyENXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyEdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otyEtXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_2otyE9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2otNPtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyFNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyFdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2otyFtXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_2otyF9XWEem1l5O0R0OWkQ" name="DoStatement@477be6c6" incoming="_2otMHNXWEem1l5O0R0OWkQ" outgoing="_2otMLNXWEem1l5O0R0OWkQ" bodyOutput="_2otyN9XWEem1l5O0R0OWkQ _2otyOtXWEem1l5O0R0OWkQ _2otyPdXWEem1l5O0R0OWkQ _2otyQNXWEem1l5O0R0OWkQ _2otyQ9XWEem1l5O0R0OWkQ" bodyPart="_2otyLtXWEem1l5O0R0OWkQ" decider="_2otyK9XWEem1l5O0R0OWkQ" test="_2otyJtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyGNXWEem1l5O0R0OWkQ" target="_2otyIdXWEem1l5O0R0OWkQ" source="_2otywtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyGdXWEem1l5O0R0OWkQ" target="_2otyItXWEem1l5O0R0OWkQ" source="_2otyxdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyGtXWEem1l5O0R0OWkQ" target="_2otyI9XWEem1l5O0R0OWkQ" source="_2otyyNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyG9XWEem1l5O0R0OWkQ" target="_2otyJNXWEem1l5O0R0OWkQ" source="_2otyy9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyHNXWEem1l5O0R0OWkQ" target="_2otyJdXWEem1l5O0R0OWkQ" source="_2otyztXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyHdXWEem1l5O0R0OWkQ" target="_2otynNXWEem1l5O0R0OWkQ" source="_2otyIdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyHtXWEem1l5O0R0OWkQ" target="_2otypNXWEem1l5O0R0OWkQ" source="_2otyItXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyH9XWEem1l5O0R0OWkQ" target="_2otytNXWEem1l5O0R0OWkQ" source="_2otyJNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyINXWEem1l5O0R0OWkQ" target="_2otyvNXWEem1l5O0R0OWkQ" source="_2otyJdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otyIdXWEem1l5O0R0OWkQ" name="Fork(DoStatement@477be6c6.loopVariable(sig))" incoming="_2otyGNXWEem1l5O0R0OWkQ" outgoing="_2otyHdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otyItXWEem1l5O0R0OWkQ" name="Fork(DoStatement@477be6c6.loopVariable(terminate))" incoming="_2otyGdXWEem1l5O0R0OWkQ" outgoing="_2otyHtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otyI9XWEem1l5O0R0OWkQ" name="Fork(DoStatement@477be6c6.loopVariable(s))" incoming="_2otyGtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otyJNXWEem1l5O0R0OWkQ" name="Fork(DoStatement@477be6c6.loopVariable(arrival3))" incoming="_2otyG9XWEem1l5O0R0OWkQ" outgoing="_2otyH9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otyJdXWEem1l5O0R0OWkQ" name="Fork(DoStatement@477be6c6.loopVariable(s1))" incoming="_2otyHNXWEem1l5O0R0OWkQ" outgoing="_2otyINXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyJtXWEem1l5O0R0OWkQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyJ9XWEem1l5O0R0OWkQ" target="_2otyK9XWEem1l5O0R0OWkQ" source="_2otyKNXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otyKNXWEem1l5O0R0OWkQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_2otMG9XWEem1l5O0R0OWkQ" outgoing="_2otyJ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyKdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyKtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otyK9XWEem1l5O0R0OWkQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_2otyJ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyLNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyLdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyLtXWEem1l5O0R0OWkQ" name="BodyPart(DoStatement@477be6c6)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyL9XWEem1l5O0R0OWkQ" target="_2otyN9XWEem1l5O0R0OWkQ" source="_2otyn9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyMNXWEem1l5O0R0OWkQ" target="_2otyOtXWEem1l5O0R0OWkQ" source="_2otyp9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyMdXWEem1l5O0R0OWkQ" target="_2otyPdXWEem1l5O0R0OWkQ" source="_2otyr9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyMtXWEem1l5O0R0OWkQ" target="_2otyQNXWEem1l5O0R0OWkQ" source="_2otyt9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyM9XWEem1l5O0R0OWkQ" target="_2otyQ9XWEem1l5O0R0OWkQ" source="_2otyv9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyNNXWEem1l5O0R0OWkQ" target="_2otySNXWEem1l5O0R0OWkQ" source="_2otyU9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otyNdXWEem1l5O0R0OWkQ" target="_2otyRtXWEem1l5O0R0OWkQ" source="_2otyTtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyNtXWEem1l5O0R0OWkQ" target="_2otyrNXWEem1l5O0R0OWkQ" source="_2otyU9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2otyN9XWEem1l5O0R0OWkQ" name="sig" incoming="_2otyL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyOdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2otyOtXWEem1l5O0R0OWkQ" name="terminate" incoming="_2otyMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyO9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyPNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2otyPdXWEem1l5O0R0OWkQ" name="s" incoming="_2otyMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyPtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyP9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2otyQNXWEem1l5O0R0OWkQ" name="arrival3" incoming="_2otyMtXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyQdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyQtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_2otyQ9XWEem1l5O0R0OWkQ" name="s1" incoming="_2otyM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyRNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyRdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyRtXWEem1l5O0R0OWkQ" name="Condition(DoStatement@477be6c6)" incoming="_2otyNdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2otyR9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_2otL2tXWEem1l5O0R0OWkQ" isDirect="true">
                    <object xmi:id="_2otySNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_2otyNNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otySdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyStXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2otyS9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_2otMG9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyTNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyTdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyTtXWEem1l5O0R0OWkQ" name="Body(DoStatement@477be6c6)" outgoing="_2otyNdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2otyT9XWEem1l5O0R0OWkQ" target="_2otyW9XWEem1l5O0R0OWkQ" source="_2otyUNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyUNXWEem1l5O0R0OWkQ" name="AcceptStatement@1767fb8b" outgoing="_2otyT9XWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2otyUdXWEem1l5O0R0OWkQ" target="_2otyVNXWEem1l5O0R0OWkQ" source="_2otyWtXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyUtXWEem1l5O0R0OWkQ" target="_2otyU9XWEem1l5O0R0OWkQ" source="_2otyVdXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otyU9XWEem1l5O0R0OWkQ" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_2otyUtXWEem1l5O0R0OWkQ" outgoing="_2otyNNXWEem1l5O0R0OWkQ _2otyNtXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_2otyVNXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival)" incoming="_2otyUdXWEem1l5O0R0OWkQ">
                      <result xmi:id="_2otyVdXWEem1l5O0R0OWkQ" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_2otyUtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyVtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyV9XWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <trigger xmi:id="_2otyWNXWEem1l5O0R0OWkQ" event="_2ouazNXWEem1l5O0R0OWkQ"/>
                      <trigger xmi:id="_2otyWdXWEem1l5O0R0OWkQ" event="_2ouazdXWEem1l5O0R0OWkQ"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_2otyWtXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_2otyUdXWEem1l5O0R0OWkQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyW9XWEem1l5O0R0OWkQ" name="ExpressionStatement@599e1ead" incoming="_2otyT9XWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyXNXWEem1l5O0R0OWkQ" target="_2otyaNXWEem1l5O0R0OWkQ" source="_2otyb9XWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyXdXWEem1l5O0R0OWkQ" target="_2otyg9XWEem1l5O0R0OWkQ" source="_2otygdXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyXtXWEem1l5O0R0OWkQ" target="_2otyjNXWEem1l5O0R0OWkQ" source="_2otyidXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyX9XWEem1l5O0R0OWkQ" target="_2otykNXWEem1l5O0R0OWkQ" source="_2otyhtXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyYNXWEem1l5O0R0OWkQ" target="_2otyidXWEem1l5O0R0OWkQ" source="_2otya9XWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2otyYdXWEem1l5O0R0OWkQ" target="_2otygtXWEem1l5O0R0OWkQ" source="_2otyc9XWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyYtXWEem1l5O0R0OWkQ" target="_2otymdXWEem1l5O0R0OWkQ" source="_2otyftXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyY9XWEem1l5O0R0OWkQ" target="_2otyZdXWEem1l5O0R0OWkQ" source="_2otymdXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2otyZNXWEem1l5O0R0OWkQ" name="Call(+)">
                      <argument xmi:id="_2otyZdXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_2otyY9XWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyZtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyZ9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_2otyaNXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_2otyXNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyadXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyatXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2otya9XWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_2otyYNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otybNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otybdXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otybtXWEem1l5O0R0OWkQ" name="Value(1)">
                      <result xmi:id="_2otyb9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2otyXNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otycNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otycdXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_2otyctXWEem1l5O0R0OWkQ" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyc9XWEem1l5O0R0OWkQ" name="RightHandSide@79feff56" outgoing="_2otyYdXWEem1l5O0R0OWkQ">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2otydNXWEem1l5O0R0OWkQ" target="_2otygdXWEem1l5O0R0OWkQ" source="_2otyd9XWEem1l5O0R0OWkQ"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyddXWEem1l5O0R0OWkQ" target="_2otye9XWEem1l5O0R0OWkQ" source="_2otygdXWEem1l5O0R0OWkQ"/>
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_2otydtXWEem1l5O0R0OWkQ" name="ReadSelf">
                        <result xmi:id="_2otyd9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otydNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyeNXWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyedXWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otyetXWEem1l5O0R0OWkQ" name="Read(count)" structuralFeature="_2otL9NXWEem1l5O0R0OWkQ">
                        <object xmi:id="_2otye9XWEem1l5O0R0OWkQ" name="Read(count).object" incoming="_2otyddXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyfNXWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyfdXWEem1l5O0R0OWkQ" value="1"/>
                        </object>
                        <result xmi:id="_2otyftXWEem1l5O0R0OWkQ" name="Read(count).result" outgoing="_2otyYtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyf9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otygNXWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_2otygdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otydNXWEem1l5O0R0OWkQ" outgoing="_2otyddXWEem1l5O0R0OWkQ _2otyXdXWEem1l5O0R0OWkQ"/>
                    </node>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otygtXWEem1l5O0R0OWkQ" name="Clear(count)" incoming="_2otyYdXWEem1l5O0R0OWkQ" structuralFeature="_2otL9NXWEem1l5O0R0OWkQ">
                      <object xmi:id="_2otyg9XWEem1l5O0R0OWkQ" name="Clear(count).object" incoming="_2otyXdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyhNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyhdXWEem1l5O0R0OWkQ" value="1"/>
                      </object>
                      <result xmi:id="_2otyhtXWEem1l5O0R0OWkQ" name="Clear(count).result" outgoing="_2otyX9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyh9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyiNXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otyidXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@79feff56)" incoming="_2otyYNXWEem1l5O0R0OWkQ" outgoing="_2otyXtXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyitXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyi9XWEem1l5O0R0OWkQ" target="_2otyltXWEem1l5O0R0OWkQ" source="_2otyjNXWEem1l5O0R0OWkQ"/>
                      <structuredNodeInput xmi:id="_2otyjNXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::count).input(MyTest::count)" incoming="_2otyXtXWEem1l5O0R0OWkQ" outgoing="_2otyi9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyjdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyjtXWEem1l5O0R0OWkQ" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otyj9XWEem1l5O0R0OWkQ" name="Write(count)" structuralFeature="_2otL9NXWEem1l5O0R0OWkQ" isReplaceAll="true">
                        <object xmi:id="_2otykNXWEem1l5O0R0OWkQ" name="Write(count).object" incoming="_2otyX9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otykdXWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyktXWEem1l5O0R0OWkQ" value="1"/>
                        </object>
                        <result xmi:id="_2otyk9XWEem1l5O0R0OWkQ" name="Write(count).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otylNXWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyldXWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                        <value xmi:id="_2otyltXWEem1l5O0R0OWkQ" name="Write(count).value" incoming="_2otyi9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyl9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otymNXWEem1l5O0R0OWkQ" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2otymdXWEem1l5O0R0OWkQ" name="Fork(Read(count).result)" incoming="_2otyYtXWEem1l5O0R0OWkQ" outgoing="_2otyY9XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otymtXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otym9XWEem1l5O0R0OWkQ" target="_2otyn9XWEem1l5O0R0OWkQ" source="_2otynNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otynNXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).input" incoming="_2otyHdXWEem1l5O0R0OWkQ" outgoing="_2otym9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyndXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyntXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otyn9XWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).output" incoming="_2otym9XWEem1l5O0R0OWkQ" outgoing="_2otyL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyoNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyodXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyotXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyo9XWEem1l5O0R0OWkQ" target="_2otyp9XWEem1l5O0R0OWkQ" source="_2otypNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otypNXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).input" incoming="_2otyHtXWEem1l5O0R0OWkQ" outgoing="_2otyo9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otypdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyptXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otyp9XWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).output" incoming="_2otyo9XWEem1l5O0R0OWkQ" outgoing="_2otyMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyqNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyqdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyqtXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyq9XWEem1l5O0R0OWkQ" target="_2otyr9XWEem1l5O0R0OWkQ" source="_2otyrNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otyrNXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).input" incoming="_2otyNtXWEem1l5O0R0OWkQ" outgoing="_2otyq9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyrdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyrtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otyr9XWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).output" incoming="_2otyq9XWEem1l5O0R0OWkQ" outgoing="_2otyMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otysNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otysdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otystXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otys9XWEem1l5O0R0OWkQ" target="_2otyt9XWEem1l5O0R0OWkQ" source="_2otytNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otytNXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2otyH9XWEem1l5O0R0OWkQ" outgoing="_2otys9XWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otytdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyttXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otyt9XWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2otys9XWEem1l5O0R0OWkQ" outgoing="_2otyMtXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyuNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyudXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otyutXWEem1l5O0R0OWkQ" name="Passthru(Fork(s1))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otyu9XWEem1l5O0R0OWkQ" target="_2otyv9XWEem1l5O0R0OWkQ" source="_2otyvNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otyvNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s1)).input" incoming="_2otyINXWEem1l5O0R0OWkQ" outgoing="_2otyu9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyvdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyvtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2otyv9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s1)).output" incoming="_2otyu9XWEem1l5O0R0OWkQ" outgoing="_2otyM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otywNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otywdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_2otywtXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariable(sig)" outgoing="_2otyGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyw9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyxNXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2otyxdXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariable(terminate)" outgoing="_2otyGdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyxtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyx9XWEem1l5O0R0OWkQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2otyyNXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariable(s)" outgoing="_2otyGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyydXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyytXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2otyy9XWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariable(arrival3)" outgoing="_2otyG9XWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyzNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otyzdXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_2otyztXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariable(s1)" outgoing="_2otyHNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otyz9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty0NXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_2oty0dXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariableInput(sig)" incoming="_2otMFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty0tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty09XWEem1l5O0R0OWkQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2oty1NXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariableInput(terminate)" incoming="_2otMF9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty1dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty1tXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2oty19XWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty2NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty2dXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2oty2tXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariableInput(arrival3)" incoming="_2otMGdXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty29XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty3NXWEem1l5O0R0OWkQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_2oty3dXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.loopVariableInput(s1)" incoming="_2otMGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty3tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty39XWEem1l5O0R0OWkQ" value="1"/>
              </loopVariableInput>
              <result xmi:id="_2oty4NXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty4dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty4tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2oty49XWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty5NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty5dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2oty5tXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.result(s)" outgoing="_2otMGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty59XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty6NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2oty6dXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.result(arrival3)" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty6tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty69XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2oty7NXWEem1l5O0R0OWkQ" name="DoStatement@477be6c6.result(s1)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty7dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty7tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2oty79XWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2otMGNXWEem1l5O0R0OWkQ" outgoing="_2otMJNXWEem1l5O0R0OWkQ _2otMKdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_2oty8NXWEem1l5O0R0OWkQ" name="IfStatement@1230f184" incoming="_2otMLNXWEem1l5O0R0OWkQ" outgoing="_2otMLdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2oty8dXWEem1l5O0R0OWkQ" target="_2oty_dXWEem1l5O0R0OWkQ" source="_2oty-NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2oty8tXWEem1l5O0R0OWkQ" target="_2otzV9XWEem1l5O0R0OWkQ" source="_2otzUtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2oty89XWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2oty9NXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oty9dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oty9tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2oty99XWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oty-NXWEem1l5O0R0OWkQ" name="AcceptStatement@64aed442" outgoing="_2oty8dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ControlFlow" xmi:id="_2oty-dXWEem1l5O0R0OWkQ" target="_2oty-tXWEem1l5O0R0OWkQ" source="_2oty_NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_2oty-tXWEem1l5O0R0OWkQ" name="Accept(SignalNewArrival)" incoming="_2oty-dXWEem1l5O0R0OWkQ">
                  <trigger xmi:id="_2oty-9XWEem1l5O0R0OWkQ" event="_2ouaztXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2oty_NXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalNewArrival))" outgoing="_2oty-dXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oty_dXWEem1l5O0R0OWkQ" name="ExpressionStatement@2d374f95" incoming="_2oty8dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2oty_tXWEem1l5O0R0OWkQ" target="_2otzCdXWEem1l5O0R0OWkQ" source="_2otzBdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2oty_9XWEem1l5O0R0OWkQ" target="_2otzEtXWEem1l5O0R0OWkQ" source="_2otzD9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzANXWEem1l5O0R0OWkQ" target="_2otzFtXWEem1l5O0R0OWkQ" source="_2otzDNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzAdXWEem1l5O0R0OWkQ" target="_2otzD9XWEem1l5O0R0OWkQ" source="_2otzIdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otzAtXWEem1l5O0R0OWkQ" target="_2otzA9XWEem1l5O0R0OWkQ" source="_2otzH9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzA9XWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@766fecb)" incoming="_2otzAtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2otzBNXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2otzBdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oty_tXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzBtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzB9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otzCNXWEem1l5O0R0OWkQ" name="Clear(flag)" structuralFeature="_2otL-tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2otzCdXWEem1l5O0R0OWkQ" name="Clear(flag).object" incoming="_2oty_tXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzC9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otzDNXWEem1l5O0R0OWkQ" name="Clear(flag).result" outgoing="_2otzANXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzDtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2otzD9XWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@766fecb)" incoming="_2otzAdXWEem1l5O0R0OWkQ" outgoing="_2oty_9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzENXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzEdXWEem1l5O0R0OWkQ" target="_2otzHNXWEem1l5O0R0OWkQ" source="_2otzEtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otzEtXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_2oty_9XWEem1l5O0R0OWkQ" outgoing="_2otzEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzE9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzFNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otzFdXWEem1l5O0R0OWkQ" name="Write(flag)" structuralFeature="_2otL-tXWEem1l5O0R0OWkQ" isReplaceAll="true">
                    <object xmi:id="_2otzFtXWEem1l5O0R0OWkQ" name="Write(flag).object" incoming="_2otzANXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzF9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzGNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2otzGdXWEem1l5O0R0OWkQ" name="Write(flag).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzGtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzG9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2otzHNXWEem1l5O0R0OWkQ" name="Write(flag).value" incoming="_2otzEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzHdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzHtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzH9XWEem1l5O0R0OWkQ" name="RightHandSide@7eff9898" outgoing="_2otzAtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otzINXWEem1l5O0R0OWkQ" name="Value(true)">
                    <result xmi:id="_2otzIdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2otzAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzItXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzI9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2otzJNXWEem1l5O0R0OWkQ" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzJdXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzJtXWEem1l5O0R0OWkQ" target="_2otzKtXWEem1l5O0R0OWkQ" source="_2otzJ9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzJ9XWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).input" incoming="_2otMItXWEem1l5O0R0OWkQ" outgoing="_2otzJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzKNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzKdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzKtXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).output" incoming="_2otzJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzK9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzLNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzLdXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzLtXWEem1l5O0R0OWkQ" target="_2otzMtXWEem1l5O0R0OWkQ" source="_2otzL9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzL9XWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).input" incoming="_2otMI9XWEem1l5O0R0OWkQ" outgoing="_2otzLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzMNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzMdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzMtXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).output" incoming="_2otzLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzM9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzNNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzNdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzNtXWEem1l5O0R0OWkQ" target="_2otzOtXWEem1l5O0R0OWkQ" source="_2otzN9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzN9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_2otMJNXWEem1l5O0R0OWkQ" outgoing="_2otzNtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzOdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzOtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_2otzNtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzO9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzPNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzPdXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzPtXWEem1l5O0R0OWkQ" target="_2otzQtXWEem1l5O0R0OWkQ" source="_2otzP9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzP9XWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2otMJdXWEem1l5O0R0OWkQ" outgoing="_2otzPtXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzQNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzQdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzQtXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2otzPtXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzQ9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzRNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzRdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzRtXWEem1l5O0R0OWkQ" target="_2otzStXWEem1l5O0R0OWkQ" source="_2otzR9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzR9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s1)).input" incoming="_2otMJtXWEem1l5O0R0OWkQ" outgoing="_2otzRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzSNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzSdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzStXWEem1l5O0R0OWkQ" name="Passthru(Fork(s1)).output" incoming="_2otzRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzS9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzTNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otzTdXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2otzTtXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzT9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzUNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2otzUdXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzUtXWEem1l5O0R0OWkQ" name="AcceptStatement@23be072e" outgoing="_2oty8tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otzU9XWEem1l5O0R0OWkQ" target="_2otzVNXWEem1l5O0R0OWkQ" source="_2otzVtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_2otzVNXWEem1l5O0R0OWkQ" name="Accept(SignalTermination)" incoming="_2otzU9XWEem1l5O0R0OWkQ">
                  <trigger xmi:id="_2otzVdXWEem1l5O0R0OWkQ" event="_2ouaz9XWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2otzVtXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalTermination))" outgoing="_2otzU9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzV9XWEem1l5O0R0OWkQ" name="ExpressionStatement@62abef3c" incoming="_2oty8tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzWNXWEem1l5O0R0OWkQ" target="_2otzY9XWEem1l5O0R0OWkQ" source="_2otzX9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzWdXWEem1l5O0R0OWkQ" target="_2otzbNXWEem1l5O0R0OWkQ" source="_2otzadXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzWtXWEem1l5O0R0OWkQ" target="_2otzcNXWEem1l5O0R0OWkQ" source="_2otzZtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzW9XWEem1l5O0R0OWkQ" target="_2otzadXWEem1l5O0R0OWkQ" source="_2otze9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2otzXNXWEem1l5O0R0OWkQ" target="_2otzXdXWEem1l5O0R0OWkQ" source="_2otzedXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzXdXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@794c0b91)" incoming="_2otzXNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2otzXtXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2otzX9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otzWNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzYNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzYdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otzYtXWEem1l5O0R0OWkQ" name="Clear(flag)" structuralFeature="_2otL-tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2otzY9XWEem1l5O0R0OWkQ" name="Clear(flag).object" incoming="_2otzWNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzZNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzZdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otzZtXWEem1l5O0R0OWkQ" name="Clear(flag).result" outgoing="_2otzWtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzZ9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzaNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2otzadXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@794c0b91)" incoming="_2otzW9XWEem1l5O0R0OWkQ" outgoing="_2otzWdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzatXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2otza9XWEem1l5O0R0OWkQ" target="_2otzdtXWEem1l5O0R0OWkQ" source="_2otzbNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2otzbNXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_2otzWdXWEem1l5O0R0OWkQ" outgoing="_2otza9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzbdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzbtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otzb9XWEem1l5O0R0OWkQ" name="Write(flag)" structuralFeature="_2otL-tXWEem1l5O0R0OWkQ" isReplaceAll="true">
                    <object xmi:id="_2otzcNXWEem1l5O0R0OWkQ" name="Write(flag).object" incoming="_2otzWtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzcdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzctXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2otzc9XWEem1l5O0R0OWkQ" name="Write(flag).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzdNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzddXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2otzdtXWEem1l5O0R0OWkQ" name="Write(flag).value" incoming="_2otza9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzd9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzeNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzedXWEem1l5O0R0OWkQ" name="RightHandSide@67a87257" outgoing="_2otzXNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2otzetXWEem1l5O0R0OWkQ" name="Value(false)">
                    <result xmi:id="_2otze9XWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2otzW9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzfNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzfdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2otzftXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzf9XWEem1l5O0R0OWkQ" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzgNXWEem1l5O0R0OWkQ" target="_2otzhNXWEem1l5O0R0OWkQ" source="_2otzgdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzgdXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).input" incoming="_2otMJ9XWEem1l5O0R0OWkQ" outgoing="_2otzgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzgtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzg9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzhNXWEem1l5O0R0OWkQ" name="Passthru(Fork(sig)).output" incoming="_2otzgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzhdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzhtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzh9XWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otziNXWEem1l5O0R0OWkQ" target="_2otzjNXWEem1l5O0R0OWkQ" source="_2otzidXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzidXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).input" incoming="_2otMKNXWEem1l5O0R0OWkQ" outgoing="_2otziNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzitXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzi9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzjNXWEem1l5O0R0OWkQ" name="Passthru(Fork(terminate)).output" incoming="_2otziNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzjdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzjtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzj9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzkNXWEem1l5O0R0OWkQ" target="_2otzlNXWEem1l5O0R0OWkQ" source="_2otzkdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzkdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_2otMKdXWEem1l5O0R0OWkQ" outgoing="_2otzkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzktXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzk9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzlNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_2otzkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzldXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzltXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzl9XWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzmNXWEem1l5O0R0OWkQ" target="_2otznNXWEem1l5O0R0OWkQ" source="_2otzmdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzmdXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_2otMKtXWEem1l5O0R0OWkQ" outgoing="_2otzmNXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzmtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzm9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otznNXWEem1l5O0R0OWkQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_2otzmNXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzndXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzntXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzn9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzoNXWEem1l5O0R0OWkQ" target="_2otzpNXWEem1l5O0R0OWkQ" source="_2otzodXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otzodXWEem1l5O0R0OWkQ" name="Passthru(Fork(s1)).input" incoming="_2otMK9XWEem1l5O0R0OWkQ" outgoing="_2otzoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzotXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzo9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2otzpNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s1)).output" incoming="_2otzoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzpdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzptXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_2otzp9XWEem1l5O0R0OWkQ" body="_2oty-NXWEem1l5O0R0OWkQ _2oty_dXWEem1l5O0R0OWkQ _2otzJdXWEem1l5O0R0OWkQ _2otzLdXWEem1l5O0R0OWkQ _2otzNdXWEem1l5O0R0OWkQ _2otzPdXWEem1l5O0R0OWkQ _2otzRdXWEem1l5O0R0OWkQ" bodyOutput="_2otzKtXWEem1l5O0R0OWkQ _2otzMtXWEem1l5O0R0OWkQ _2otzOtXWEem1l5O0R0OWkQ _2otzQtXWEem1l5O0R0OWkQ _2otzStXWEem1l5O0R0OWkQ" decider="_2oty9NXWEem1l5O0R0OWkQ" successorClause="_2otzqNXWEem1l5O0R0OWkQ" test="_2oty89XWEem1l5O0R0OWkQ"/>
              <clause xmi:id="_2otzqNXWEem1l5O0R0OWkQ" body="_2otzUtXWEem1l5O0R0OWkQ _2otzV9XWEem1l5O0R0OWkQ _2otzf9XWEem1l5O0R0OWkQ _2otzh9XWEem1l5O0R0OWkQ _2otzj9XWEem1l5O0R0OWkQ _2otzl9XWEem1l5O0R0OWkQ _2otzn9XWEem1l5O0R0OWkQ" bodyOutput="_2otzhNXWEem1l5O0R0OWkQ _2otzjNXWEem1l5O0R0OWkQ _2otzlNXWEem1l5O0R0OWkQ _2otznNXWEem1l5O0R0OWkQ _2otzpNXWEem1l5O0R0OWkQ" decider="_2otzTtXWEem1l5O0R0OWkQ" predecessorClause="_2otzp9XWEem1l5O0R0OWkQ" test="_2otzTdXWEem1l5O0R0OWkQ"/>
              <result xmi:id="_2otzqdXWEem1l5O0R0OWkQ" name="IfStatement@1230f184.result(sig)" outgoing="_2otMHdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzqtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzq9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2otzrNXWEem1l5O0R0OWkQ" name="IfStatement@1230f184.result(terminate)" outgoing="_2otMHtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzrtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2otzr9XWEem1l5O0R0OWkQ" name="IfStatement@1230f184.result(s)" outgoing="_2otMH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzsNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzsdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2otzstXWEem1l5O0R0OWkQ" name="IfStatement@1230f184.result(arrival3)" outgoing="_2otMINXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzs9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otztNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <result xmi:id="_2otztdXWEem1l5O0R0OWkQ" name="IfStatement@1230f184.result(s1)" outgoing="_2otMIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzttXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzt9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2otzuNXWEem1l5O0R0OWkQ" name="Fork(sig)" incoming="_2otMHdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2otzudXWEem1l5O0R0OWkQ" name="Fork(terminate)" incoming="_2otMHtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2otzutXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2otMH9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2otzu9XWEem1l5O0R0OWkQ" name="Fork(arrival3)" incoming="_2otMINXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2otzvNXWEem1l5O0R0OWkQ" name="Fork(s1)" incoming="_2otMIdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzvdXWEem1l5O0R0OWkQ" name="AcceptStatement@706b17fd" incoming="_2otMLdXWEem1l5O0R0OWkQ" outgoing="_2otML9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otzvtXWEem1l5O0R0OWkQ" target="_2otzwdXWEem1l5O0R0OWkQ" source="_2otzxtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzv9XWEem1l5O0R0OWkQ" target="_2otzwNXWEem1l5O0R0OWkQ" source="_2otzwtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2otzwNXWEem1l5O0R0OWkQ" name="Fork(Accept(SignalTermination).result)" incoming="_2otzv9XWEem1l5O0R0OWkQ" outgoing="_2otMLtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2otzwdXWEem1l5O0R0OWkQ" name="Accept(SignalTermination)" incoming="_2otzvtXWEem1l5O0R0OWkQ">
                <result xmi:id="_2otzwtXWEem1l5O0R0OWkQ" name="Accept(SignalTermination).result" outgoing="_2otzv9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzw9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otzxNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <trigger xmi:id="_2otzxdXWEem1l5O0R0OWkQ" event="_2oua0NXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2otzxtXWEem1l5O0R0OWkQ" name="Initial(Accept(SignalTermination))" outgoing="_2otzvtXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzx9XWEem1l5O0R0OWkQ" name="ExpressionStatement@7673ab3" incoming="_2otML9XWEem1l5O0R0OWkQ" outgoing="_2otMMNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzyNXWEem1l5O0R0OWkQ" target="_2otz0tXWEem1l5O0R0OWkQ" source="_2otzztXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzydXWEem1l5O0R0OWkQ" target="_2otz29XWEem1l5O0R0OWkQ" source="_2otz2NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otzytXWEem1l5O0R0OWkQ" target="_2otz39XWEem1l5O0R0OWkQ" source="_2otz1dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2otzy9XWEem1l5O0R0OWkQ" target="_2otzzNXWEem1l5O0R0OWkQ" source="_2otz6NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otzzNXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@e440751)" incoming="_2otzy9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2otzzdXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2otzztXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otzyNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otzz9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz0NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2otz0dXWEem1l5O0R0OWkQ" name="Clear(sig1)" structuralFeature="_2otL6NXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otz0tXWEem1l5O0R0OWkQ" name="Clear(sig1).object" incoming="_2otzyNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz09XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz1NXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otz1dXWEem1l5O0R0OWkQ" name="Clear(sig1).result" outgoing="_2otzytXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz1tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz19XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2otz2NXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@e440751)" incoming="_2otMLtXWEem1l5O0R0OWkQ" outgoing="_2otzydXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otz2dXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2otz2tXWEem1l5O0R0OWkQ" target="_2otz5dXWEem1l5O0R0OWkQ" source="_2otz29XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2otz29XWEem1l5O0R0OWkQ" name="WriteAll(MyTest::sig1).input(MyTest::sig1)" incoming="_2otzydXWEem1l5O0R0OWkQ" outgoing="_2otz2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz3NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz3dXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2otz3tXWEem1l5O0R0OWkQ" name="Write(sig1)" structuralFeature="_2otL6NXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2otz39XWEem1l5O0R0OWkQ" name="Write(sig1).object" incoming="_2otzytXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz4NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz4dXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2otz4tXWEem1l5O0R0OWkQ" name="Write(sig1).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz49XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz5NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2otz5dXWEem1l5O0R0OWkQ" name="Write(sig1).value" incoming="_2otz2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz5tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz59XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otz6NXWEem1l5O0R0OWkQ" name="RightHandSide@77e9f7ce" outgoing="_2otzy9XWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2otz6dXWEem1l5O0R0OWkQ" name="ExpressionStatement@7fdb9d46" incoming="_2otMMNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otz6tXWEem1l5O0R0OWkQ" target="_2otz7tXWEem1l5O0R0OWkQ" source="_2otz-dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otz69XWEem1l5O0R0OWkQ" target="_2otz_NXWEem1l5O0R0OWkQ" source="_2otz8tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2otz7NXWEem1l5O0R0OWkQ" target="_2otz9tXWEem1l5O0R0OWkQ" source="_2otz_NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2otz7dXWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_2ouawdXWEem1l5O0R0OWkQ">
                <target xmi:id="_2otz7tXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_2otz6tXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz79XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz8NXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2otz8dXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2otz8tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2otz69XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz89XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz9NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2otz9dXWEem1l5O0R0OWkQ" name="Read(tester)" structuralFeature="_2otL_dXWEem1l5O0R0OWkQ">
                <object xmi:id="_2otz9tXWEem1l5O0R0OWkQ" name="Read(tester).object" incoming="_2otz7NXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz99XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz-NXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2otz-dXWEem1l5O0R0OWkQ" name="Read(tester).result" outgoing="_2otz6tXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz-tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2otz-9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2otz_NXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2otz69XWEem1l5O0R0OWkQ" outgoing="_2otz7NXWEem1l5O0R0OWkQ"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2otz_dXWEem1l5O0R0OWkQ" name="MyTest$method$1" visibility="private" specification="_2ot0xtXWEem1l5O0R0OWkQ" node="_2ot0B9XWEem1l5O0R0OWkQ _2ot0CNXWEem1l5O0R0OWkQ _2ot0CdXWEem1l5O0R0OWkQ _2ot0CtXWEem1l5O0R0OWkQ" group="_2ot0CtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2otz_tXWEem1l5O0R0OWkQ" name="tester" type="_2ot00tXWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2otz_9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0ANXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2ot0AdXWEem1l5O0R0OWkQ" name="" type="_2otL4NXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0AtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0A9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0BNXWEem1l5O0R0OWkQ" target="_2ot0CNXWEem1l5O0R0OWkQ" source="_2ot0B9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0BdXWEem1l5O0R0OWkQ" target="_2ot0KNXWEem1l5O0R0OWkQ" source="_2ot0CNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0BtXWEem1l5O0R0OWkQ" target="_2ot0CdXWEem1l5O0R0OWkQ" source="_2ot0PdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ot0CtXWEem1l5O0R0OWkQ" name="Body(MyTest$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0C9XWEem1l5O0R0OWkQ" target="_2ot0PdXWEem1l5O0R0OWkQ" source="_2ot0OtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0DNXWEem1l5O0R0OWkQ" target="_2ot0P9XWEem1l5O0R0OWkQ" source="_2ot0PdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0DdXWEem1l5O0R0OWkQ" target="_2ot0FtXWEem1l5O0R0OWkQ" source="_2ot0PtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0DtXWEem1l5O0R0OWkQ" target="_2ot0Q9XWEem1l5O0R0OWkQ" source="_2ot0PdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0D9XWEem1l5O0R0OWkQ" target="_2ot0StXWEem1l5O0R0OWkQ" source="_2ot0RtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0ENXWEem1l5O0R0OWkQ" target="_2ot0VtXWEem1l5O0R0OWkQ" source="_2ot0TdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0EdXWEem1l5O0R0OWkQ" target="_2ot0XNXWEem1l5O0R0OWkQ" source="_2ot0UdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0EtXWEem1l5O0R0OWkQ" target="_2ot0YNXWEem1l5O0R0OWkQ" source="_2ot0X9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0E9XWEem1l5O0R0OWkQ" target="_2ot0YNXWEem1l5O0R0OWkQ" source="_2ot0WdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0FNXWEem1l5O0R0OWkQ" target="_2ot0PtXWEem1l5O0R0OWkQ" source="_2ot0YNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ot0FdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0FtXWEem1l5O0R0OWkQ" name="Body" incoming="_2ot0DdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0F9XWEem1l5O0R0OWkQ" name="ExpressionStatement@24bcc7d0">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0GNXWEem1l5O0R0OWkQ" target="_2ot0ItXWEem1l5O0R0OWkQ" source="_2ot0HtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0GdXWEem1l5O0R0OWkQ" target="_2ot0K9XWEem1l5O0R0OWkQ" source="_2ot0KNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0GtXWEem1l5O0R0OWkQ" target="_2ot0L9XWEem1l5O0R0OWkQ" source="_2ot0JdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0G9XWEem1l5O0R0OWkQ" target="_2ot0HNXWEem1l5O0R0OWkQ" source="_2ot0ONXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0HNXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@53e62476)" incoming="_2ot0G9XWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2ot0HdXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2ot0HtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ot0GNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0H9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0INXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2ot0IdXWEem1l5O0R0OWkQ" name="Clear(tester)" structuralFeature="_2otL_dXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot0ItXWEem1l5O0R0OWkQ" name="Clear(tester).object" incoming="_2ot0GNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0I9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0JNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot0JdXWEem1l5O0R0OWkQ" name="Clear(tester).result" outgoing="_2ot0GtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0JtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0J9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ot0KNXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@53e62476)" incoming="_2ot0BdXWEem1l5O0R0OWkQ" outgoing="_2ot0GdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0KdXWEem1l5O0R0OWkQ" name="WriteAll(MyTest::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0KtXWEem1l5O0R0OWkQ" target="_2ot0NdXWEem1l5O0R0OWkQ" source="_2ot0K9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ot0K9XWEem1l5O0R0OWkQ" name="WriteAll(MyTest::tester).input(MyTest::tester)" incoming="_2ot0GdXWEem1l5O0R0OWkQ" outgoing="_2ot0KtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0LNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0LdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ot0LtXWEem1l5O0R0OWkQ" name="Write(tester)" structuralFeature="_2otL_dXWEem1l5O0R0OWkQ" isReplaceAll="true">
                    <object xmi:id="_2ot0L9XWEem1l5O0R0OWkQ" name="Write(tester).object" incoming="_2ot0GtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0MNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0MdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ot0MtXWEem1l5O0R0OWkQ" name="Write(tester).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0M9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0NNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ot0NdXWEem1l5O0R0OWkQ" name="Write(tester).value" incoming="_2ot0KtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0NtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0N9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0ONXWEem1l5O0R0OWkQ" name="RightHandSide@2d385fe1" outgoing="_2ot0G9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ot0OdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ot0OtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ot0C9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0O9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0PNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ot0PdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ot0C9XWEem1l5O0R0OWkQ" outgoing="_2ot0BtXWEem1l5O0R0OWkQ _2ot0DNXWEem1l5O0R0OWkQ _2ot0DtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ot0PtXWEem1l5O0R0OWkQ" name="Call(MyTest$initialization$1)" incoming="_2ot0FNXWEem1l5O0R0OWkQ" outgoing="_2ot0DdXWEem1l5O0R0OWkQ" operation="_2ot0xdXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ot0P9XWEem1l5O0R0OWkQ" name="Call(MyTest$initialization$1).target" incoming="_2ot0DNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0QNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0QdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot0QtXWEem1l5O0R0OWkQ" name="Read(MyTest$initializationFlag$1)" structuralFeature="_2otL4tXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ot0Q9XWEem1l5O0R0OWkQ" name="Read(MyTest$initializationFlag$1).object" incoming="_2ot0DtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0RNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0RdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ot0RtXWEem1l5O0R0OWkQ" name="Read(MyTest$initializationFlag$1).result" outgoing="_2ot0D9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0R9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0SNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot0SdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ot0StXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ot0D9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0S9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0TNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ot0TdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ot0ENXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0TtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0T9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot0UNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ot0UdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ot0EdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0UtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0U9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ot0VNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ot0VdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ot0VtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ot0ENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0V9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0WNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ot0WdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ot0E9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0WtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0W9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ot0XNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ot0EdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0XdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0XtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ot0X9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ot0EtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ot0YNXWEem1l5O0R0OWkQ" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_2ot0EtXWEem1l5O0R0OWkQ _2ot0E9XWEem1l5O0R0OWkQ" outgoing="_2ot0FNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ot0E9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ot0B9XWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2ot0BNXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" parameter="_2otz_tXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2ot0CNXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2ot0BNXWEem1l5O0R0OWkQ" outgoing="_2ot0BdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ot0CdXWEem1l5O0R0OWkQ" name="Return" incoming="_2ot0BtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" parameter="_2ot0AdXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ot0YdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ot0zdXWEem1l5O0R0OWkQ" node="_2ot0YtXWEem1l5O0R0OWkQ" group="_2ot0YtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ot0YtXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ot0Y9XWEem1l5O0R0OWkQ" name="MyTest$initialization$1" visibility="private" specification="_2ot0xdXWEem1l5O0R0OWkQ" node="_2ot0ZNXWEem1l5O0R0OWkQ" group="_2ot0ZNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ot0ZNXWEem1l5O0R0OWkQ" name="Body(MyTest$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0ZdXWEem1l5O0R0OWkQ" target="_2ot0ddXWEem1l5O0R0OWkQ" source="_2ot0ctXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0ZtXWEem1l5O0R0OWkQ" target="_2ot0etXWEem1l5O0R0OWkQ" source="_2ot0ddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0Z9XWEem1l5O0R0OWkQ" target="_2ot0hdXWEem1l5O0R0OWkQ" source="_2ot0ddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0aNXWEem1l5O0R0OWkQ" target="_2ot0mNXWEem1l5O0R0OWkQ" source="_2ot0ddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0adXWEem1l5O0R0OWkQ" target="_2ot0p9XWEem1l5O0R0OWkQ" source="_2ot0ddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0atXWEem1l5O0R0OWkQ" target="_2ot0rtXWEem1l5O0R0OWkQ" source="_2ot0qtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0a9XWEem1l5O0R0OWkQ" target="_2ot0utXWEem1l5O0R0OWkQ" source="_2ot0sdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0bNXWEem1l5O0R0OWkQ" target="_2ot0wNXWEem1l5O0R0OWkQ" source="_2ot0tdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0bdXWEem1l5O0R0OWkQ" target="_2ot0xNXWEem1l5O0R0OWkQ" source="_2ot0w9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0btXWEem1l5O0R0OWkQ" target="_2ot0xNXWEem1l5O0R0OWkQ" source="_2ot0vdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0b9XWEem1l5O0R0OWkQ" target="_2ot0dtXWEem1l5O0R0OWkQ" source="_2ot0xNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ot0cNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ot0cdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ot0ctXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ot0ZdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0c9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0dNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ot0ddXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ot0ZdXWEem1l5O0R0OWkQ" outgoing="_2ot0ZtXWEem1l5O0R0OWkQ _2ot0Z9XWEem1l5O0R0OWkQ _2ot0aNXWEem1l5O0R0OWkQ _2ot0adXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0dtXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ot0b9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0d9XWEem1l5O0R0OWkQ" target="_2ot0fdXWEem1l5O0R0OWkQ" source="_2ot0edXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot0eNXWEem1l5O0R0OWkQ" target="_2ot0jtXWEem1l5O0R0OWkQ" source="_2ot0fdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ot0edXWEem1l5O0R0OWkQ" name="Call(Super$initialization$1)" outgoing="_2ot0d9XWEem1l5O0R0OWkQ" operation="_2otL1NXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ot0etXWEem1l5O0R0OWkQ" name="Call(Super$initialization$1).target" incoming="_2ot0ZtXWEem1l5O0R0OWkQ" type="_2otLStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0e9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0fNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0fdXWEem1l5O0R0OWkQ" name="Initialize(count)" incoming="_2ot0d9XWEem1l5O0R0OWkQ" outgoing="_2ot0eNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0ftXWEem1l5O0R0OWkQ" target="_2ot0i9XWEem1l5O0R0OWkQ" source="_2ot0gNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot0f9XWEem1l5O0R0OWkQ" name="Value(0)">
                  <result xmi:id="_2ot0gNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ot0ftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0gdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0gtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2ot0g9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ot0hNXWEem1l5O0R0OWkQ" name="Write(count)" structuralFeature="_2otL9NXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2ot0hdXWEem1l5O0R0OWkQ" name="Write(count).object" incoming="_2ot0Z9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0htXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0h9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot0iNXWEem1l5O0R0OWkQ" name="Write(count).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0idXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0itXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2ot0i9XWEem1l5O0R0OWkQ" name="Write(count).value" incoming="_2ot0ftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0jNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0jdXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot0jtXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ot0eNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0j9XWEem1l5O0R0OWkQ" target="_2ot0pdXWEem1l5O0R0OWkQ" source="_2ot0kdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot0kNXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ot0kdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ot0j9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0ktXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0k9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ot0lNXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ot0ldXWEem1l5O0R0OWkQ" name="Iterate(Write(MyTest$initializationFlag$1))" inputElement="_2ot0pdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0ltXWEem1l5O0R0OWkQ" target="_2ot0otXWEem1l5O0R0OWkQ" source="_2ot0pdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot0l9XWEem1l5O0R0OWkQ" target="_2ot0nNXWEem1l5O0R0OWkQ" source="_2ot0mNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ot0mNXWEem1l5O0R0OWkQ" name="Iterate(Write(MyTest$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ot0aNXWEem1l5O0R0OWkQ" outgoing="_2ot0l9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0mdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0mtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ot0m9XWEem1l5O0R0OWkQ" name="Write(MyTest$initializationFlag$1)" structuralFeature="_2otL4tXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ot0nNXWEem1l5O0R0OWkQ" name="Write(MyTest$initializationFlag$1).object" incoming="_2ot0l9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0ndXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0ntXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ot0n9XWEem1l5O0R0OWkQ" name="Write(MyTest$initializationFlag$1).result" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0oNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0odXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ot0otXWEem1l5O0R0OWkQ" name="Write(MyTest$initializationFlag$1).value" incoming="_2ot0ltXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0o9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0pNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ot0pdXWEem1l5O0R0OWkQ" name="Iterate(Write(MyTest$initializationFlag$1)).inputElement" incoming="_2ot0j9XWEem1l5O0R0OWkQ" outgoing="_2ot0ltXWEem1l5O0R0OWkQ" regionAsInput="_2ot0ldXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot0ptXWEem1l5O0R0OWkQ" name="Read(MyTest$initializationFlag$1)" structuralFeature="_2otL4tXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ot0p9XWEem1l5O0R0OWkQ" name="Read(MyTest$initializationFlag$1).object" incoming="_2ot0adXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0qNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0qdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ot0qtXWEem1l5O0R0OWkQ" name="Read(MyTest$initializationFlag$1).result" outgoing="_2ot0atXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0q9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0rNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot0rdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ot0rtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ot0atXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0r9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0sNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ot0sdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ot0a9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0stXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0s9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot0tNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ot0tdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ot0bNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0ttXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0t9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ot0uNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ot0udXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ot0utXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ot0a9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0u9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0vNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ot0vdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ot0btXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0vtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0v9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ot0wNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ot0bNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0wdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0wtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ot0w9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ot0bdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ot0xNXWEem1l5O0R0OWkQ" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_2ot0bdXWEem1l5O0R0OWkQ _2ot0btXWEem1l5O0R0OWkQ" outgoing="_2ot0b9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ot0btXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ot0xdXWEem1l5O0R0OWkQ" name="MyTest$initialization$1" visibility="protected" method="_2ot0Y9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ot0xtXWEem1l5O0R0OWkQ" name="MyTest" visibility="public" method="_2otz_dXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ot0x9XWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2ot00tXWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0yNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0ydXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2ot0ytXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2otL4NXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0y9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0zNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ot0zdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ot0YdXWEem1l5O0R0OWkQ" redefinedOperation="_2otL2dXWEem1l5O0R0OWkQ"/>
        <ownedReception xmi:id="_2ot0ztXWEem1l5O0R0OWkQ" name="SignalNewArrival" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ot0z9XWEem1l5O0R0OWkQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot00NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot00dXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedReception>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ot00tXWEem1l5O0R0OWkQ" name="TestRunner" visibility="public" classifierBehavior="_2ot02dXWEem1l5O0R0OWkQ" isActive="true">
        <ownedAttribute xmi:id="_2ot009XWEem1l5O0R0OWkQ" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot01NXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot01dXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2ot01tXWEem1l5O0R0OWkQ" name="outer" visibility="private" type="_2oua09XWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot019XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot02NXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ot02dXWEem1l5O0R0OWkQ" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_2ot02tXWEem1l5O0R0OWkQ" group="_2ot02tXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ot02tXWEem1l5O0R0OWkQ" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot029XWEem1l5O0R0OWkQ" target="_2ot09dXWEem1l5O0R0OWkQ" source="_2ot08NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot03NXWEem1l5O0R0OWkQ" target="_2ot1BNXWEem1l5O0R0OWkQ" source="_2ot09dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot03dXWEem1l5O0R0OWkQ" target="_2ot1I9XWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot03tXWEem1l5O0R0OWkQ" target="_2ot1CdXWEem1l5O0R0OWkQ" source="_2ot1BNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot039XWEem1l5O0R0OWkQ" target="_2ot1SNXWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot04NXWEem1l5O0R0OWkQ" target="_2ot1K9XWEem1l5O0R0OWkQ" source="_2ot1CdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot04dXWEem1l5O0R0OWkQ" target="_2ot1Z9XWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot04tXWEem1l5O0R0OWkQ" target="_2ot1TtXWEem1l5O0R0OWkQ" source="_2ot1K9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot049XWEem1l5O0R0OWkQ" target="_2ot1h9XWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot05NXWEem1l5O0R0OWkQ" target="_2ot1aNXWEem1l5O0R0OWkQ" source="_2ot1TtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot05dXWEem1l5O0R0OWkQ" target="_2ot1zNXWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot05tXWEem1l5O0R0OWkQ" target="_2ot1ldXWEem1l5O0R0OWkQ" source="_2ot1aNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot059XWEem1l5O0R0OWkQ" target="_2ouYgNXWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot06NXWEem1l5O0R0OWkQ" target="_2ot1-NXWEem1l5O0R0OWkQ" source="_2ot1ldXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot06dXWEem1l5O0R0OWkQ" target="_2ouYydXWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot06tXWEem1l5O0R0OWkQ" target="_2ouYrNXWEem1l5O0R0OWkQ" source="_2ot1-NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot069XWEem1l5O0R0OWkQ" target="_2ouY6NXWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot07NXWEem1l5O0R0OWkQ" target="_2ouYz9XWEem1l5O0R0OWkQ" source="_2ouYrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot07dXWEem1l5O0R0OWkQ" target="_2ouZA9XWEem1l5O0R0OWkQ" source="_2ot1A9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot07tXWEem1l5O0R0OWkQ" target="_2ouY6dXWEem1l5O0R0OWkQ" source="_2ouYz9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ot079XWEem1l5O0R0OWkQ" target="_2ouZC9XWEem1l5O0R0OWkQ" source="_2ouY6dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot08NXWEem1l5O0R0OWkQ" name="AcceptStatement@7702d268" outgoing="_2ot029XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot08dXWEem1l5O0R0OWkQ" target="_2ot08tXWEem1l5O0R0OWkQ" source="_2ot09NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2ot08tXWEem1l5O0R0OWkQ" name="Accept(Start)" incoming="_2ot08dXWEem1l5O0R0OWkQ">
                <trigger xmi:id="_2ot089XWEem1l5O0R0OWkQ" event="_2oua0dXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2ot09NXWEem1l5O0R0OWkQ" name="Initial(Accept(Start))" outgoing="_2ot08dXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot09dXWEem1l5O0R0OWkQ" name="ExpressionStatement@71977f75" incoming="_2ot029XWEem1l5O0R0OWkQ" outgoing="_2ot03NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot09tXWEem1l5O0R0OWkQ" target="_2ot1A9XWEem1l5O0R0OWkQ" source="_2ot0-dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot099XWEem1l5O0R0OWkQ" target="_2ot0_NXWEem1l5O0R0OWkQ" source="_2ot1ANXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ot0-NXWEem1l5O0R0OWkQ" name="Call(run)" operation="_2ouau9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2ot0-dXWEem1l5O0R0OWkQ" name="Call(run).result(test)" outgoing="_2ot09tXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0-tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0-9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <target xmi:id="_2ot0_NXWEem1l5O0R0OWkQ" name="Call(run).target" incoming="_2ot099XWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot0_dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot0_tXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2ot0_9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2ot1ANXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ot099XWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1AdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1AtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2ot1A9XWEem1l5O0R0OWkQ" name="Fork(test)@21596285" incoming="_2ot09tXWEem1l5O0R0OWkQ" outgoing="_2ot03dXWEem1l5O0R0OWkQ _2ot039XWEem1l5O0R0OWkQ _2ot04dXWEem1l5O0R0OWkQ _2ot049XWEem1l5O0R0OWkQ _2ot05dXWEem1l5O0R0OWkQ _2ot059XWEem1l5O0R0OWkQ _2ot06dXWEem1l5O0R0OWkQ _2ot069XWEem1l5O0R0OWkQ _2ot07dXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1BNXWEem1l5O0R0OWkQ" name="AcceptStatement@70bbb286" incoming="_2ot03NXWEem1l5O0R0OWkQ" outgoing="_2ot03tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1BdXWEem1l5O0R0OWkQ" target="_2ot1BtXWEem1l5O0R0OWkQ" source="_2ot1CNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2ot1BtXWEem1l5O0R0OWkQ" name="Accept(Continue)" incoming="_2ot1BdXWEem1l5O0R0OWkQ">
                <trigger xmi:id="_2ot1B9XWEem1l5O0R0OWkQ" event="_2oua0tXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2ot1CNXWEem1l5O0R0OWkQ" name="Initial(Accept(Continue))" outgoing="_2ot1BdXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1CdXWEem1l5O0R0OWkQ" name="ExpressionStatement@b7c4055" incoming="_2ot03tXWEem1l5O0R0OWkQ" outgoing="_2ot04NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1CtXWEem1l5O0R0OWkQ" target="_2ot1DtXWEem1l5O0R0OWkQ" source="_2ot1GNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1C9XWEem1l5O0R0OWkQ" target="_2ot1EdXWEem1l5O0R0OWkQ" source="_2ot1KNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1DNXWEem1l5O0R0OWkQ" target="_2ot1DdXWEem1l5O0R0OWkQ" source="_2ot1FNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1DdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2ot1DNXWEem1l5O0R0OWkQ" behavior="_2ou_qdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ot1DtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2ot1CtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1D9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1ENXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1EdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2ot1C9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1EtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1E9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1FNXWEem1l5O0R0OWkQ" name="Tuple@4e761346" outgoing="_2ot1DNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1FdXWEem1l5O0R0OWkQ" target="_2ot1HdXWEem1l5O0R0OWkQ" source="_2ot1I9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1FtXWEem1l5O0R0OWkQ" target="_2ot1JdXWEem1l5O0R0OWkQ" source="_2ot1INXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1F9XWEem1l5O0R0OWkQ" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_2ot1GNXWEem1l5O0R0OWkQ" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_2ot1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1GdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1GtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1G9XWEem1l5O0R0OWkQ" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot1HNXWEem1l5O0R0OWkQ" name="Read(sig)" structuralFeature="_2otL5dXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot1HdXWEem1l5O0R0OWkQ" name="Read(sig).object" incoming="_2ot1FdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1HtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1H9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot1INXWEem1l5O0R0OWkQ" name="Read(sig).result" outgoing="_2ot1FtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1IdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1ItXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ot1I9XWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot03dXWEem1l5O0R0OWkQ" outgoing="_2ot1FdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2ot1JNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2otL3tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot1JdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2ot1FtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1JtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1J9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot1KNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2ot1C9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1KdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1KtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1K9XWEem1l5O0R0OWkQ" name="ExpressionStatement@1e7e3b20" incoming="_2ot04NXWEem1l5O0R0OWkQ" outgoing="_2ot04tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1LNXWEem1l5O0R0OWkQ" target="_2ot1MdXWEem1l5O0R0OWkQ" source="_2ot1PdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1LdXWEem1l5O0R0OWkQ" target="_2ot1NNXWEem1l5O0R0OWkQ" source="_2ot1RdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1LtXWEem1l5O0R0OWkQ" target="_2ot1N9XWEem1l5O0R0OWkQ" source="_2ot1StXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1L9XWEem1l5O0R0OWkQ" target="_2ot1MNXWEem1l5O0R0OWkQ" source="_2ot1OtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1MNXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2ot1L9XWEem1l5O0R0OWkQ" behavior="_2ovAS9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ot1MdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2ot1LNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1MtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1M9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1NNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2ot1LdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1NdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1NtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1N9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2ot1LtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ONXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1OdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1OtXWEem1l5O0R0OWkQ" name="Tuple@cb16224" outgoing="_2ot1L9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1O9XWEem1l5O0R0OWkQ" target="_2ot1QtXWEem1l5O0R0OWkQ" source="_2ot1SNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1PNXWEem1l5O0R0OWkQ" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_2ot1PdXWEem1l5O0R0OWkQ" name="Value(&quot;test.name&quot;).result" outgoing="_2ot1LNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1PtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1P9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1QNXWEem1l5O0R0OWkQ" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot1QdXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_2otL69XWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot1QtXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_2ot1O9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1Q9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1RNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot1RdXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_2ot1LdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1RtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1R9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ot1SNXWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot039XWEem1l5O0R0OWkQ" outgoing="_2ot1O9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1SdXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_2ot1StXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival1&quot;).result" outgoing="_2ot1LtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1S9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1TNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1TdXWEem1l5O0R0OWkQ" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1TtXWEem1l5O0R0OWkQ" name="ExpressionStatement@48ca22bb" incoming="_2ot04tXWEem1l5O0R0OWkQ" outgoing="_2ot05NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1T9XWEem1l5O0R0OWkQ" target="_2ot1U9XWEem1l5O0R0OWkQ" source="_2ot1XNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1UNXWEem1l5O0R0OWkQ" target="_2ot1VtXWEem1l5O0R0OWkQ" source="_2ot1ZNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1UdXWEem1l5O0R0OWkQ" target="_2ot1UtXWEem1l5O0R0OWkQ" source="_2ot1WdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1UtXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2ot1UdXWEem1l5O0R0OWkQ" behavior="_2ovCa9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ot1U9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2ot1T9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1VNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1VdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1VtXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2ot1UNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1V9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1WNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1WdXWEem1l5O0R0OWkQ" name="Tuple@749c09c8" outgoing="_2ot1UdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1WtXWEem1l5O0R0OWkQ" target="_2ot1YdXWEem1l5O0R0OWkQ" source="_2ot1Z9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1W9XWEem1l5O0R0OWkQ" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_2ot1XNXWEem1l5O0R0OWkQ" name="Value(&quot;test.terminate&quot;).result" outgoing="_2ot1T9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1XdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1XtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1X9XWEem1l5O0R0OWkQ" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot1YNXWEem1l5O0R0OWkQ" name="Read(terminate)" structuralFeature="_2otL7tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot1YdXWEem1l5O0R0OWkQ" name="Read(terminate).object" incoming="_2ot1WtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1YtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1Y9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot1ZNXWEem1l5O0R0OWkQ" name="Read(terminate).result" outgoing="_2ot1UNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ZdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1ZtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ot1Z9XWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot04dXWEem1l5O0R0OWkQ" outgoing="_2ot1WtXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1aNXWEem1l5O0R0OWkQ" name="ExpressionStatement@12f190db" incoming="_2ot05NXWEem1l5O0R0OWkQ" outgoing="_2ot05tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1adXWEem1l5O0R0OWkQ" target="_2ot1btXWEem1l5O0R0OWkQ" source="_2ot1fNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1atXWEem1l5O0R0OWkQ" target="_2ot1cdXWEem1l5O0R0OWkQ" source="_2ot1jNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1a9XWEem1l5O0R0OWkQ" target="_2ot1dNXWEem1l5O0R0OWkQ" source="_2ot1kdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1bNXWEem1l5O0R0OWkQ" target="_2ot1bdXWEem1l5O0R0OWkQ" source="_2ot1d9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1bdXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2ot1bNXWEem1l5O0R0OWkQ" behavior="_2ovAS9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ot1btXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2ot1adXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1b9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1cNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1cdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2ot1atXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ctXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1c9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1dNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2ot1a9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ddXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1dtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1d9XWEem1l5O0R0OWkQ" name="Tuple@3a04aa02" outgoing="_2ot1bNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1eNXWEem1l5O0R0OWkQ" target="_2ot1gdXWEem1l5O0R0OWkQ" source="_2ot1h9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1edXWEem1l5O0R0OWkQ" target="_2ot1j9XWEem1l5O0R0OWkQ" source="_2ot1hNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1etXWEem1l5O0R0OWkQ" target="_2ot1idXWEem1l5O0R0OWkQ" source="_2ot1j9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1e9XWEem1l5O0R0OWkQ" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_2ot1fNXWEem1l5O0R0OWkQ" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_2ot1adXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1fdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1ftXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1f9XWEem1l5O0R0OWkQ" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot1gNXWEem1l5O0R0OWkQ" name="Read(arrival)" structuralFeature="_2otL8dXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot1gdXWEem1l5O0R0OWkQ" name="Read(arrival).object" incoming="_2ot1eNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1gtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1g9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot1hNXWEem1l5O0R0OWkQ" name="Read(arrival).result" outgoing="_2ot1edXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1hdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1htXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ot1h9XWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot049XWEem1l5O0R0OWkQ" outgoing="_2ot1eNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot1iNXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_2otL29XWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ot1idXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_2ot1etXWEem1l5O0R0OWkQ" type="_2otL2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1itXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1i9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ot1jNXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_2ot1atXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1jdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1jtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ot1j9XWEem1l5O0R0OWkQ" name="Fork(Read(arrival).result)" incoming="_2ot1edXWEem1l5O0R0OWkQ" outgoing="_2ot1etXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1kNXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_2ot1kdXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival3&quot;).result" outgoing="_2ot1a9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ktXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1k9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1lNXWEem1l5O0R0OWkQ" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1ldXWEem1l5O0R0OWkQ" name="ExpressionStatement@67314aaa" incoming="_2ot05tXWEem1l5O0R0OWkQ" outgoing="_2ot06NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1ltXWEem1l5O0R0OWkQ" target="_2ot1mtXWEem1l5O0R0OWkQ" source="_2ot1rdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1l9XWEem1l5O0R0OWkQ" target="_2ot1ndXWEem1l5O0R0OWkQ" source="_2ot199XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1mNXWEem1l5O0R0OWkQ" target="_2ot1mdXWEem1l5O0R0OWkQ" source="_2ot1oNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1mdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2ot1mNXWEem1l5O0R0OWkQ" behavior="_2ou_qdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ot1mtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2ot1ltXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1m9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1nNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ot1ndXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2ot1l9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ntXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1n9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1oNXWEem1l5O0R0OWkQ" name="Tuple@5c715995" outgoing="_2ot1mNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1odXWEem1l5O0R0OWkQ" target="_2ot12dXWEem1l5O0R0OWkQ" source="_2ot1s9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1otXWEem1l5O0R0OWkQ" target="_2ot12NXWEem1l5O0R0OWkQ" source="_2ot1sdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1o9XWEem1l5O0R0OWkQ" target="_2ot15dXWEem1l5O0R0OWkQ" source="_2ot1s9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1pNXWEem1l5O0R0OWkQ" target="_2ot19tXWEem1l5O0R0OWkQ" source="_2ot19dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1pdXWEem1l5O0R0OWkQ" target="_2ot19tXWEem1l5O0R0OWkQ" source="_2ot13NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1ptXWEem1l5O0R0OWkQ" target="_2ot139XWEem1l5O0R0OWkQ" source="_2ot19tXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ot1p9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1qNXWEem1l5O0R0OWkQ" target="_2ot169XWEem1l5O0R0OWkQ" source="_2ot19tXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ot1qdXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1qtXWEem1l5O0R0OWkQ" target="_2ot199XWEem1l5O0R0OWkQ" source="_2ot14dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1q9XWEem1l5O0R0OWkQ" target="_2ot199XWEem1l5O0R0OWkQ" source="_2ot17dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1rNXWEem1l5O0R0OWkQ" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_2ot1rdXWEem1l5O0R0OWkQ" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_2ot1ltXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1rtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1r9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ot1sNXWEem1l5O0R0OWkQ" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1sdXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@35eb4197)" outgoing="_2ot1otXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1stXWEem1l5O0R0OWkQ" target="_2ot1s9XWEem1l5O0R0OWkQ" source="_2ot1wNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_2ot1s9XWEem1l5O0R0OWkQ" name="Fork(x)@25ffb506" incoming="_2ot1stXWEem1l5O0R0OWkQ" outgoing="_2ot1odXWEem1l5O0R0OWkQ _2ot1o9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1tNXWEem1l5O0R0OWkQ" name="RightHandSide@4461ad6f">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1tdXWEem1l5O0R0OWkQ" target="_2ot1utXWEem1l5O0R0OWkQ" source="_2ot1ydXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1ttXWEem1l5O0R0OWkQ" target="_2ot10tXWEem1l5O0R0OWkQ" source="_2ot1ztXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1t9XWEem1l5O0R0OWkQ" target="_2ot1udXWEem1l5O0R0OWkQ" source="_2ot1w9XWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1uNXWEem1l5O0R0OWkQ" target="_2ot1vdXWEem1l5O0R0OWkQ" source="_2ot10tXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1udXWEem1l5O0R0OWkQ" name="Call(At)" incoming="_2ot1t9XWEem1l5O0R0OWkQ">
                      <argument xmi:id="_2ot1utXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2ot1tdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1u9XWEem1l5O0R0OWkQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1vNXWEem1l5O0R0OWkQ" value="*"/>
                      </argument>
                      <argument xmi:id="_2ot1vdXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2ot1uNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1vtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1v9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2ot1wNXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2ot1stXWEem1l5O0R0OWkQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1wdXWEem1l5O0R0OWkQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1wtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1w9XWEem1l5O0R0OWkQ" name="Tuple@643c2a22" outgoing="_2ot1t9XWEem1l5O0R0OWkQ">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1xNXWEem1l5O0R0OWkQ" target="_2ot1xtXWEem1l5O0R0OWkQ" source="_2ot1zNXWEem1l5O0R0OWkQ"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ot1xdXWEem1l5O0R0OWkQ" name="Read(signals)" structuralFeature="_2otL99XWEem1l5O0R0OWkQ">
                        <object xmi:id="_2ot1xtXWEem1l5O0R0OWkQ" name="Read(signals).object" incoming="_2ot1xNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1x9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1yNXWEem1l5O0R0OWkQ" value="1"/>
                        </object>
                        <result xmi:id="_2ot1ydXWEem1l5O0R0OWkQ" name="Read(signals).result" outgoing="_2ot1tdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1ytXWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot1y9XWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_2ot1zNXWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot05dXWEem1l5O0R0OWkQ" outgoing="_2ot1xNXWEem1l5O0R0OWkQ"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot1zdXWEem1l5O0R0OWkQ" name="Value(1)">
                        <result xmi:id="_2ot1ztXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2ot1ttXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1z9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot10NXWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_2ot10dXWEem1l5O0R0OWkQ" value="1">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2ot10tXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2ot1ttXWEem1l5O0R0OWkQ" outgoing="_2ot1uNXWEem1l5O0R0OWkQ"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot109XWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_2ot11NXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot11dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot11tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2ot119XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot12NXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2ot1otXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2ot12dXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ot1odXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot12tXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot129XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2ot13NXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ot1pdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot13dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot13tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot139XWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@17a16e9d.operand2" incoming="_2ot1ptXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot14NXWEem1l5O0R0OWkQ" target="_2ot14dXWEem1l5O0R0OWkQ" source="_2ot16NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ot14dXWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@17a16e9d.operand2.result" incoming="_2ot14NXWEem1l5O0R0OWkQ" outgoing="_2ot1qtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot14tXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot149XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2ot15NXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_2otL2tXWEem1l5O0R0OWkQ" isDirect="true">
                    <object xmi:id="_2ot15dXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_2ot1o9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot15tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot159XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ot16NXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_2ot14NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot16dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot16tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot169XWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@17a16e9d.operand3" incoming="_2ot1qNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot17NXWEem1l5O0R0OWkQ" target="_2ot17dXWEem1l5O0R0OWkQ" source="_2ot18dXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ot17dXWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@17a16e9d.operand3.result" incoming="_2ot17NXWEem1l5O0R0OWkQ" outgoing="_2ot1q9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot17tXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot179XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ot18NXWEem1l5O0R0OWkQ" name="Value(false)">
                    <result xmi:id="_2ot18dXWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2ot17NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot18tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ot189XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2ot19NXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2ot19dXWEem1l5O0R0OWkQ" name="Initial(ConditionalLogicalExpression@17a16e9d)" outgoing="_2ot1pNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2ot19tXWEem1l5O0R0OWkQ" name="Decision(ConditionalLogicalExpression@17a16e9d)" incoming="_2ot1pNXWEem1l5O0R0OWkQ _2ot1pdXWEem1l5O0R0OWkQ" outgoing="_2ot1ptXWEem1l5O0R0OWkQ _2ot1qNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ot1pdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2ot199XWEem1l5O0R0OWkQ" name="Merge(ConditionalLogicalExpression@17a16e9d.result)" incoming="_2ot1qtXWEem1l5O0R0OWkQ _2ot1q9XWEem1l5O0R0OWkQ" outgoing="_2ot1l9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ot1-NXWEem1l5O0R0OWkQ" name="ExpressionStatement@4777e723" incoming="_2ot06NXWEem1l5O0R0OWkQ" outgoing="_2ot06tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1-dXWEem1l5O0R0OWkQ" target="_2ot1_dXWEem1l5O0R0OWkQ" source="_2ouYYdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ot1-tXWEem1l5O0R0OWkQ" target="_2ouYUdXWEem1l5O0R0OWkQ" source="_2ouYq9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ot1-9XWEem1l5O0R0OWkQ" target="_2ot1_NXWEem1l5O0R0OWkQ" source="_2ouYVNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ot1_NXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2ot1-9XWEem1l5O0R0OWkQ" behavior="_2ou_qdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ot1_dXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2ot1-dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ot1_tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYUNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ouYUdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2ot1-tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYUtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYU9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYVNXWEem1l5O0R0OWkQ" name="Tuple@22385adb" outgoing="_2ot1-9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYVdXWEem1l5O0R0OWkQ" target="_2ouYjdXWEem1l5O0R0OWkQ" source="_2ouYZ9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ouYVtXWEem1l5O0R0OWkQ" target="_2ouYjNXWEem1l5O0R0OWkQ" source="_2ouYZdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYV9XWEem1l5O0R0OWkQ" target="_2ouYmdXWEem1l5O0R0OWkQ" source="_2ouYZ9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ouYWNXWEem1l5O0R0OWkQ" target="_2ouYqtXWEem1l5O0R0OWkQ" source="_2ouYqdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYWdXWEem1l5O0R0OWkQ" target="_2ouYqtXWEem1l5O0R0OWkQ" source="_2ouYkNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ouYWtXWEem1l5O0R0OWkQ" target="_2ouYk9XWEem1l5O0R0OWkQ" source="_2ouYqtXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ouYW9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ouYXNXWEem1l5O0R0OWkQ" target="_2ouYn9XWEem1l5O0R0OWkQ" source="_2ouYqtXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ouYXdXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYXtXWEem1l5O0R0OWkQ" target="_2ouYq9XWEem1l5O0R0OWkQ" source="_2ouYldXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYX9XWEem1l5O0R0OWkQ" target="_2ouYq9XWEem1l5O0R0OWkQ" source="_2ouYodXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouYYNXWEem1l5O0R0OWkQ" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_2ouYYdXWEem1l5O0R0OWkQ" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_2ot1-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYYtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYY9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouYZNXWEem1l5O0R0OWkQ" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYZdXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@47b858bd)" outgoing="_2ouYVtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYZtXWEem1l5O0R0OWkQ" target="_2ouYZ9XWEem1l5O0R0OWkQ" source="_2ouYdNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_2ouYZ9XWEem1l5O0R0OWkQ" name="Fork(x)@75a87b8c" incoming="_2ouYZtXWEem1l5O0R0OWkQ" outgoing="_2ouYVdXWEem1l5O0R0OWkQ _2ouYV9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYaNXWEem1l5O0R0OWkQ" name="RightHandSide@33def139">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYadXWEem1l5O0R0OWkQ" target="_2ouYbtXWEem1l5O0R0OWkQ" source="_2ouYfdXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYatXWEem1l5O0R0OWkQ" target="_2ouYhtXWEem1l5O0R0OWkQ" source="_2ouYgtXWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_2ouYa9XWEem1l5O0R0OWkQ" target="_2ouYbdXWEem1l5O0R0OWkQ" source="_2ouYd9XWEem1l5O0R0OWkQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYbNXWEem1l5O0R0OWkQ" target="_2ouYcdXWEem1l5O0R0OWkQ" source="_2ouYhtXWEem1l5O0R0OWkQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouYbdXWEem1l5O0R0OWkQ" name="Call(At)" incoming="_2ouYa9XWEem1l5O0R0OWkQ">
                      <argument xmi:id="_2ouYbtXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2ouYadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYb9XWEem1l5O0R0OWkQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYcNXWEem1l5O0R0OWkQ" value="*"/>
                      </argument>
                      <argument xmi:id="_2ouYcdXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2ouYbNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYctXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYc9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2ouYdNXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2ouYZtXWEem1l5O0R0OWkQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYddXWEem1l5O0R0OWkQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYdtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYd9XWEem1l5O0R0OWkQ" name="Tuple@1c8ae58a" outgoing="_2ouYa9XWEem1l5O0R0OWkQ">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYeNXWEem1l5O0R0OWkQ" target="_2ouYetXWEem1l5O0R0OWkQ" source="_2ouYgNXWEem1l5O0R0OWkQ"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ouYedXWEem1l5O0R0OWkQ" name="Read(signals)" structuralFeature="_2otL99XWEem1l5O0R0OWkQ">
                        <object xmi:id="_2ouYetXWEem1l5O0R0OWkQ" name="Read(signals).object" incoming="_2ouYeNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYe9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYfNXWEem1l5O0R0OWkQ" value="1"/>
                        </object>
                        <result xmi:id="_2ouYfdXWEem1l5O0R0OWkQ" name="Read(signals).result" outgoing="_2ouYadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYftXWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYf9XWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_2ouYgNXWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot059XWEem1l5O0R0OWkQ" outgoing="_2ouYeNXWEem1l5O0R0OWkQ"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouYgdXWEem1l5O0R0OWkQ" name="Value(2)">
                        <result xmi:id="_2ouYgtXWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_2ouYatXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYg9XWEem1l5O0R0OWkQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYhNXWEem1l5O0R0OWkQ" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_2ouYhdXWEem1l5O0R0OWkQ" value="2">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2ouYhtXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2ouYatXWEem1l5O0R0OWkQ" outgoing="_2ouYbNXWEem1l5O0R0OWkQ"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouYh9XWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_2ouYiNXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYidXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYitXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2ouYi9XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouYjNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2ouYVtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2ouYjdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ouYVdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYjtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYj9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2ouYkNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ouYWdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYkdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYktXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYk9XWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@5d688fab.operand2" incoming="_2ouYWtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYlNXWEem1l5O0R0OWkQ" target="_2ouYldXWEem1l5O0R0OWkQ" source="_2ouYnNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ouYldXWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@5d688fab.operand2.result" incoming="_2ouYlNXWEem1l5O0R0OWkQ" outgoing="_2ouYXtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYltXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYl9XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2ouYmNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2otL3tXWEem1l5O0R0OWkQ" isDirect="true">
                    <object xmi:id="_2ouYmdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2ouYV9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYmtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYm9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ouYnNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2ouYlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYndXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYntXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYn9XWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@5d688fab.operand3" incoming="_2ouYXNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYoNXWEem1l5O0R0OWkQ" target="_2ouYodXWEem1l5O0R0OWkQ" source="_2ouYpdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ouYodXWEem1l5O0R0OWkQ" name="ConditionalLogicalExpression@5d688fab.operand3.result" incoming="_2ouYoNXWEem1l5O0R0OWkQ" outgoing="_2ouYX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYotXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYo9XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouYpNXWEem1l5O0R0OWkQ" name="Value(false)">
                    <result xmi:id="_2ouYpdXWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2ouYoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYptXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYp9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_2ouYqNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2ouYqdXWEem1l5O0R0OWkQ" name="Initial(ConditionalLogicalExpression@5d688fab)" outgoing="_2ouYWNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2ouYqtXWEem1l5O0R0OWkQ" name="Decision(ConditionalLogicalExpression@5d688fab)" incoming="_2ouYWNXWEem1l5O0R0OWkQ _2ouYWdXWEem1l5O0R0OWkQ" outgoing="_2ouYWtXWEem1l5O0R0OWkQ _2ouYXNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ouYWdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2ouYq9XWEem1l5O0R0OWkQ" name="Merge(ConditionalLogicalExpression@5d688fab.result)" incoming="_2ouYXtXWEem1l5O0R0OWkQ _2ouYX9XWEem1l5O0R0OWkQ" outgoing="_2ot1-tXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYrNXWEem1l5O0R0OWkQ" name="ExpressionStatement@6cc9c9e6" incoming="_2ot06tXWEem1l5O0R0OWkQ" outgoing="_2ot07NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYrdXWEem1l5O0R0OWkQ" target="_2ouYstXWEem1l5O0R0OWkQ" source="_2ouYvtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYrtXWEem1l5O0R0OWkQ" target="_2ouYtdXWEem1l5O0R0OWkQ" source="_2ouYxtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYr9XWEem1l5O0R0OWkQ" target="_2ouYuNXWEem1l5O0R0OWkQ" source="_2ouYy9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouYsNXWEem1l5O0R0OWkQ" target="_2ouYsdXWEem1l5O0R0OWkQ" source="_2ouYu9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouYsdXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2ouYsNXWEem1l5O0R0OWkQ" behavior="_2ovAS9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouYstXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2ouYrdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYs9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYtNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ouYtdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2ouYrtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYttXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYt9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ouYuNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2ouYr9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYudXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYutXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYu9XWEem1l5O0R0OWkQ" name="Tuple@21e52195" outgoing="_2ouYsNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouYvNXWEem1l5O0R0OWkQ" target="_2ouYw9XWEem1l5O0R0OWkQ" source="_2ouYydXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouYvdXWEem1l5O0R0OWkQ" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_2ouYvtXWEem1l5O0R0OWkQ" name="Value(&quot;test.count&quot;).result" outgoing="_2ouYrdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYv9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYwNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouYwdXWEem1l5O0R0OWkQ" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ouYwtXWEem1l5O0R0OWkQ" name="Read(count)" structuralFeature="_2otL9NXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ouYw9XWEem1l5O0R0OWkQ" name="Read(count).object" incoming="_2ouYvNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYxNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYxdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ouYxtXWEem1l5O0R0OWkQ" name="Read(count).result" outgoing="_2ouYrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYx9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYyNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ouYydXWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot06dXWEem1l5O0R0OWkQ" outgoing="_2ouYvNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouYytXWEem1l5O0R0OWkQ" name="Value(3)">
                  <result xmi:id="_2ouYy9XWEem1l5O0R0OWkQ" name="Value(3).result" outgoing="_2ouYr9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouYzNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouYzdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2ouYztXWEem1l5O0R0OWkQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouYz9XWEem1l5O0R0OWkQ" name="ExpressionStatement@7c7ab7dd" incoming="_2ot07NXWEem1l5O0R0OWkQ" outgoing="_2ot07tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY0NXWEem1l5O0R0OWkQ" target="_2ouY1NXWEem1l5O0R0OWkQ" source="_2ouY3dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY0dXWEem1l5O0R0OWkQ" target="_2ouY19XWEem1l5O0R0OWkQ" source="_2ouY5dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouY0tXWEem1l5O0R0OWkQ" target="_2ouY09XWEem1l5O0R0OWkQ" source="_2ouY2tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouY09XWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2ouY0tXWEem1l5O0R0OWkQ" behavior="_2ou_qdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouY1NXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2ouY0NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY1dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY1tXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ouY19XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2ouY0dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY2NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY2dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouY2tXWEem1l5O0R0OWkQ" name="Tuple@1c68f25d" outgoing="_2ouY0tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY29XWEem1l5O0R0OWkQ" target="_2ouY4tXWEem1l5O0R0OWkQ" source="_2ouY6NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouY3NXWEem1l5O0R0OWkQ" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_2ouY3dXWEem1l5O0R0OWkQ" name="Value(&quot;test.flag&quot;).result" outgoing="_2ouY0NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY3tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY39XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouY4NXWEem1l5O0R0OWkQ" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ouY4dXWEem1l5O0R0OWkQ" name="Read(flag)" structuralFeature="_2otL-tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ouY4tXWEem1l5O0R0OWkQ" name="Read(flag).object" incoming="_2ouY29XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY49XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY5NXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ouY5dXWEem1l5O0R0OWkQ" name="Read(flag).result" outgoing="_2ouY0dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY5tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY59XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ouY6NXWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot069XWEem1l5O0R0OWkQ" outgoing="_2ouY29XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouY6dXWEem1l5O0R0OWkQ" name="ExpressionStatement@6e525a4e" incoming="_2ot07tXWEem1l5O0R0OWkQ" outgoing="_2ot079XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY6tXWEem1l5O0R0OWkQ" target="_2ouY7tXWEem1l5O0R0OWkQ" source="_2ouY-NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY69XWEem1l5O0R0OWkQ" target="_2ouY8dXWEem1l5O0R0OWkQ" source="_2ouZCNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouY7NXWEem1l5O0R0OWkQ" target="_2ouY7dXWEem1l5O0R0OWkQ" source="_2ouY9NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouY7dXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2ouY7NXWEem1l5O0R0OWkQ" behavior="_2ou_qdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouY7tXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2ouY6tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY79XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY8NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ouY8dXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2ouY69XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY8tXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY89XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouY9NXWEem1l5O0R0OWkQ" name="Tuple@6eeae20a" outgoing="_2ouY7NXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY9dXWEem1l5O0R0OWkQ" target="_2ouY_dXWEem1l5O0R0OWkQ" source="_2ouZA9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouY9tXWEem1l5O0R0OWkQ" target="_2ouZBdXWEem1l5O0R0OWkQ" source="_2ouZANXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouY99XWEem1l5O0R0OWkQ" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_2ouY-NXWEem1l5O0R0OWkQ" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_2ouY6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY-dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY-tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouY-9XWEem1l5O0R0OWkQ" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ouY_NXWEem1l5O0R0OWkQ" name="Read(sig1)" structuralFeature="_2otL6NXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ouY_dXWEem1l5O0R0OWkQ" name="Read(sig1).object" incoming="_2ouY9dXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouY_tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouY_9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ouZANXWEem1l5O0R0OWkQ" name="Read(sig1).result" outgoing="_2ouY9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZAdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZAtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ouZA9XWEem1l5O0R0OWkQ" name="Fork(Fork(test)@21596285)" incoming="_2ot07dXWEem1l5O0R0OWkQ" outgoing="_2ouY9dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2ouZBNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_2otL3tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ouZBdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_2ouY9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZBtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZB9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ouZCNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_2ouY69XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZCdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZCtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZC9XWEem1l5O0R0OWkQ" name="ExpressionStatement@677bf7cc" incoming="_2ot079XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZDNXWEem1l5O0R0OWkQ" target="_2ouZENXWEem1l5O0R0OWkQ" source="_2ouZG9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZDdXWEem1l5O0R0OWkQ" target="_2ouZHtXWEem1l5O0R0OWkQ" source="_2ouZFNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZDtXWEem1l5O0R0OWkQ" target="_2ouZGNXWEem1l5O0R0OWkQ" source="_2ouZHtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ouZD9XWEem1l5O0R0OWkQ" name="Call(done)" operation="_2oub49XWEem1l5O0R0OWkQ">
                <target xmi:id="_2ouZENXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_2ouZDNXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZEdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZEtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2ouZE9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2ouZFNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ouZDdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZFdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZFtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ouZF9XWEem1l5O0R0OWkQ" name="Read(outer)" structuralFeature="_2ot01tXWEem1l5O0R0OWkQ">
                <object xmi:id="_2ouZGNXWEem1l5O0R0OWkQ" name="Read(outer).object" incoming="_2ouZDtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZGdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZGtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2ouZG9XWEem1l5O0R0OWkQ" name="Read(outer).result" outgoing="_2ouZDNXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZHNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZHdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2ouZHtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ouZDdXWEem1l5O0R0OWkQ" outgoing="_2ouZDtXWEem1l5O0R0OWkQ"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ouZH9XWEem1l5O0R0OWkQ" name="TestRunner$method$1" visibility="private" specification="_2ouatNXWEem1l5O0R0OWkQ" node="_2ouZKdXWEem1l5O0R0OWkQ _2ouZKtXWEem1l5O0R0OWkQ _2ouZK9XWEem1l5O0R0OWkQ _2ouZLNXWEem1l5O0R0OWkQ" group="_2ouZLNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ouZINXWEem1l5O0R0OWkQ" name="outer" type="_2oua09XWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZIdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZItXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2ouZI9XWEem1l5O0R0OWkQ" name="" type="_2ot00tXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZJNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZJdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZJtXWEem1l5O0R0OWkQ" target="_2ouZKtXWEem1l5O0R0OWkQ" source="_2ouZKdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZJ9XWEem1l5O0R0OWkQ" target="_2ouZStXWEem1l5O0R0OWkQ" source="_2ouZKtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZKNXWEem1l5O0R0OWkQ" target="_2ouZK9XWEem1l5O0R0OWkQ" source="_2ouZX9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ouZLNXWEem1l5O0R0OWkQ" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZLdXWEem1l5O0R0OWkQ" target="_2ouZX9XWEem1l5O0R0OWkQ" source="_2ouZXNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZLtXWEem1l5O0R0OWkQ" target="_2ouZYdXWEem1l5O0R0OWkQ" source="_2ouZX9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZL9XWEem1l5O0R0OWkQ" target="_2ouZONXWEem1l5O0R0OWkQ" source="_2ouZYNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZMNXWEem1l5O0R0OWkQ" target="_2ouZZdXWEem1l5O0R0OWkQ" source="_2ouZX9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZMdXWEem1l5O0R0OWkQ" target="_2ouZbNXWEem1l5O0R0OWkQ" source="_2ouZaNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZMtXWEem1l5O0R0OWkQ" target="_2ouZeNXWEem1l5O0R0OWkQ" source="_2ouZb9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZM9XWEem1l5O0R0OWkQ" target="_2ouZftXWEem1l5O0R0OWkQ" source="_2ouZc9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZNNXWEem1l5O0R0OWkQ" target="_2ouZgtXWEem1l5O0R0OWkQ" source="_2ouZgdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZNdXWEem1l5O0R0OWkQ" target="_2ouZgtXWEem1l5O0R0OWkQ" source="_2ouZe9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZNtXWEem1l5O0R0OWkQ" target="_2ouZYNXWEem1l5O0R0OWkQ" source="_2ouZgtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ouZN9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZONXWEem1l5O0R0OWkQ" name="Body" incoming="_2ouZL9XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZOdXWEem1l5O0R0OWkQ" name="ExpressionStatement@7a40a0d9">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZOtXWEem1l5O0R0OWkQ" target="_2ouZRNXWEem1l5O0R0OWkQ" source="_2ouZQNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZO9XWEem1l5O0R0OWkQ" target="_2ouZTdXWEem1l5O0R0OWkQ" source="_2ouZStXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZPNXWEem1l5O0R0OWkQ" target="_2ouZUdXWEem1l5O0R0OWkQ" source="_2ouZR9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZPdXWEem1l5O0R0OWkQ" target="_2ouZPtXWEem1l5O0R0OWkQ" source="_2ouZWtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZPtXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@6ba4cc57)" incoming="_2ouZPdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2ouZP9XWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2ouZQNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ouZOtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZQdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZQtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2ouZQ9XWEem1l5O0R0OWkQ" name="Clear(outer)" structuralFeature="_2ot01tXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ouZRNXWEem1l5O0R0OWkQ" name="Clear(outer).object" incoming="_2ouZOtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZRdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZRtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ouZR9XWEem1l5O0R0OWkQ" name="Clear(outer).result" outgoing="_2ouZPNXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZSNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZSdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ouZStXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@6ba4cc57)" incoming="_2ouZJ9XWEem1l5O0R0OWkQ" outgoing="_2ouZO9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZS9XWEem1l5O0R0OWkQ" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZTNXWEem1l5O0R0OWkQ" target="_2ouZV9XWEem1l5O0R0OWkQ" source="_2ouZTdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ouZTdXWEem1l5O0R0OWkQ" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_2ouZO9XWEem1l5O0R0OWkQ" outgoing="_2ouZTNXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZTtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZT9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ouZUNXWEem1l5O0R0OWkQ" name="Write(outer)" structuralFeature="_2ot01tXWEem1l5O0R0OWkQ" isReplaceAll="true">
                    <object xmi:id="_2ouZUdXWEem1l5O0R0OWkQ" name="Write(outer).object" incoming="_2ouZPNXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZUtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZU9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ouZVNXWEem1l5O0R0OWkQ" name="Write(outer).result" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZVdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZVtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ouZV9XWEem1l5O0R0OWkQ" name="Write(outer).value" incoming="_2ouZTNXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZWNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZWdXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZWtXWEem1l5O0R0OWkQ" name="RightHandSide@543d7cbe" outgoing="_2ouZPdXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ouZW9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ouZXNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ouZLdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZXdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZXtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ouZX9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ouZLdXWEem1l5O0R0OWkQ" outgoing="_2ouZKNXWEem1l5O0R0OWkQ _2ouZLtXWEem1l5O0R0OWkQ _2ouZMNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ouZYNXWEem1l5O0R0OWkQ" name="Call(TestRunner$initialization$1)" incoming="_2ouZNtXWEem1l5O0R0OWkQ" outgoing="_2ouZL9XWEem1l5O0R0OWkQ" operation="_2ouas9XWEem1l5O0R0OWkQ">
              <target xmi:id="_2ouZYdXWEem1l5O0R0OWkQ" name="Call(TestRunner$initialization$1).target" incoming="_2ouZLtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZYtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZY9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ouZZNXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_2ot009XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ouZZdXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_2ouZMNXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZZtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZZ9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ouZaNXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_2ouZMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZadXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZatXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouZa9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ouZbNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ouZMdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZbdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZbtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ouZb9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ouZMtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZcNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZcdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouZctXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ouZc9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ouZM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZdNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZddXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ouZdtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ouZd9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ouZeNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ouZMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZedXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZetXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ouZe9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ouZNdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZfNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZfdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ouZftXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ouZM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZf9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZgNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ouZgdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ouZNNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ouZgtXWEem1l5O0R0OWkQ" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_2ouZNNXWEem1l5O0R0OWkQ _2ouZNdXWEem1l5O0R0OWkQ" outgoing="_2ouZNtXWEem1l5O0R0OWkQ" decisionInputFlow="_2ouZNdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ouZKdXWEem1l5O0R0OWkQ" name="Input(outer)" outgoing="_2ouZJtXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" parameter="_2ouZINXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2ouZKtXWEem1l5O0R0OWkQ" name="Fork(outer)" incoming="_2ouZJtXWEem1l5O0R0OWkQ" outgoing="_2ouZJ9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ouZK9XWEem1l5O0R0OWkQ" name="Return" incoming="_2ouZKNXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" parameter="_2ouZI9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ouZg9XWEem1l5O0R0OWkQ" name="run$method$1" visibility="private" specification="_2ouau9XWEem1l5O0R0OWkQ" node="_2ouZiNXWEem1l5O0R0OWkQ _2ouZidXWEem1l5O0R0OWkQ" group="_2ouZidXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ouZhNXWEem1l5O0R0OWkQ" name="test" type="_2otL4NXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZhdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZhtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZh9XWEem1l5O0R0OWkQ" target="_2ouZiNXWEem1l5O0R0OWkQ" source="_2ouZo9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ouZidXWEem1l5O0R0OWkQ" name="Body(run$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZitXWEem1l5O0R0OWkQ" target="_2ouZ1tXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZi9XWEem1l5O0R0OWkQ" target="_2ouZ1NXWEem1l5O0R0OWkQ" source="_2ouZptXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZjNXWEem1l5O0R0OWkQ" target="_2ouZ4NXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZjdXWEem1l5O0R0OWkQ" target="_2ouZ2dXWEem1l5O0R0OWkQ" source="_2ouZ1NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZjtXWEem1l5O0R0OWkQ" target="_2ouZ8NXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZj9XWEem1l5O0R0OWkQ" target="_2ouZ6dXWEem1l5O0R0OWkQ" source="_2ouZ2dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZkNXWEem1l5O0R0OWkQ" target="_2ouaANXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZkdXWEem1l5O0R0OWkQ" target="_2ouZ-dXWEem1l5O0R0OWkQ" source="_2ouZ6dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZktXWEem1l5O0R0OWkQ" target="_2ouaENXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZk9XWEem1l5O0R0OWkQ" target="_2ouaCdXWEem1l5O0R0OWkQ" source="_2ouZ-dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZlNXWEem1l5O0R0OWkQ" target="_2ouaG9XWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZldXWEem1l5O0R0OWkQ" target="_2ouaGdXWEem1l5O0R0OWkQ" source="_2ouaCdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZltXWEem1l5O0R0OWkQ" target="_2ouaJdXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZl9XWEem1l5O0R0OWkQ" target="_2ouaHtXWEem1l5O0R0OWkQ" source="_2ouaGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZmNXWEem1l5O0R0OWkQ" target="_2ouaNdXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZmdXWEem1l5O0R0OWkQ" target="_2ouaLtXWEem1l5O0R0OWkQ" source="_2ouaHtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZmtXWEem1l5O0R0OWkQ" target="_2ouaQNXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZm9XWEem1l5O0R0OWkQ" target="_2ouaPtXWEem1l5O0R0OWkQ" source="_2ouaLtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZnNXWEem1l5O0R0OWkQ" target="_2ouaStXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZndXWEem1l5O0R0OWkQ" target="_2ouaQ9XWEem1l5O0R0OWkQ" source="_2ouaPtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZntXWEem1l5O0R0OWkQ" target="_2ouaWtXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZn9XWEem1l5O0R0OWkQ" target="_2ouaU9XWEem1l5O0R0OWkQ" source="_2ouaQ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZoNXWEem1l5O0R0OWkQ" target="_2ouaZdXWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZodXWEem1l5O0R0OWkQ" target="_2ouaY9XWEem1l5O0R0OWkQ" source="_2ouaU9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZotXWEem1l5O0R0OWkQ" target="_2ouZo9XWEem1l5O0R0OWkQ" source="_2ouZqNXWEem1l5O0R0OWkQ"/>
            <structuredNodeOutput xmi:id="_2ouZo9XWEem1l5O0R0OWkQ" name="Output(test)" incoming="_2ouZotXWEem1l5O0R0OWkQ" outgoing="_2ouZh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZpNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZpdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZptXWEem1l5O0R0OWkQ" name="ExpressionStatement@5e7fd1a9" outgoing="_2ouZi9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZp9XWEem1l5O0R0OWkQ" target="_2ouZqNXWEem1l5O0R0OWkQ" source="_2ouZs9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2ouZqNXWEem1l5O0R0OWkQ" name="Fork(test)@2f7deaf0" incoming="_2ouZp9XWEem1l5O0R0OWkQ" outgoing="_2ouZitXWEem1l5O0R0OWkQ _2ouZjNXWEem1l5O0R0OWkQ _2ouZjtXWEem1l5O0R0OWkQ _2ouZkNXWEem1l5O0R0OWkQ _2ouZktXWEem1l5O0R0OWkQ _2ouZlNXWEem1l5O0R0OWkQ _2ouZltXWEem1l5O0R0OWkQ _2ouZmNXWEem1l5O0R0OWkQ _2ouZmtXWEem1l5O0R0OWkQ _2ouZnNXWEem1l5O0R0OWkQ _2ouZntXWEem1l5O0R0OWkQ _2ouZoNXWEem1l5O0R0OWkQ _2ouZotXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZqdXWEem1l5O0R0OWkQ" name="RightHandSide@7111907c">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZqtXWEem1l5O0R0OWkQ" name="InstanceCreationExpression@7111907c">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZq9XWEem1l5O0R0OWkQ" target="_2ouZztXWEem1l5O0R0OWkQ" source="_2ouZt9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZrNXWEem1l5O0R0OWkQ" target="_2ouZy9XWEem1l5O0R0OWkQ" source="_2ouZztXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZrdXWEem1l5O0R0OWkQ" target="_2ouZxdXWEem1l5O0R0OWkQ" source="_2ouZvNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZrtXWEem1l5O0R0OWkQ" target="_2ouZv9XWEem1l5O0R0OWkQ" source="_2ouZutXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZr9XWEem1l5O0R0OWkQ" target="_2ouZv9XWEem1l5O0R0OWkQ" source="_2ouZttXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZsNXWEem1l5O0R0OWkQ" target="_2ouZz9XWEem1l5O0R0OWkQ" source="_2ouZwdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZsdXWEem1l5O0R0OWkQ" target="_2ouZ0dXWEem1l5O0R0OWkQ" source="_2ouZz9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZstXWEem1l5O0R0OWkQ" target="_2ouZs9XWEem1l5O0R0OWkQ" source="_2ouZz9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ouZs9XWEem1l5O0R0OWkQ" name="Output(Output(Fork(Create(MyTest).result)))" incoming="_2ouZstXWEem1l5O0R0OWkQ" outgoing="_2ouZp9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZtNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZtdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_2ouZttXWEem1l5O0R0OWkQ" name="Create(MyTest)" outgoing="_2ouZr9XWEem1l5O0R0OWkQ" classifier="_2otL4NXWEem1l5O0R0OWkQ">
                    <result xmi:id="_2ouZt9XWEem1l5O0R0OWkQ" name="Create(MyTest).result" outgoing="_2ouZq9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZuNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZudXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZutXWEem1l5O0R0OWkQ" name="Tuple@32396cf7" outgoing="_2ouZrtXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_2ouZu9XWEem1l5O0R0OWkQ" name="ReadSelf">
                      <result xmi:id="_2ouZvNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ouZrdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZvdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZvtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZv9XWEem1l5O0R0OWkQ" name="Node(Call(MyTest))" incoming="_2ouZr9XWEem1l5O0R0OWkQ _2ouZrtXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZwNXWEem1l5O0R0OWkQ" target="_2ouZwdXWEem1l5O0R0OWkQ" source="_2ouZztXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_2ouZwdXWEem1l5O0R0OWkQ" name="Output(Fork(Create(MyTest).result))" incoming="_2ouZwNXWEem1l5O0R0OWkQ" outgoing="_2ouZsNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZwtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZw9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallOperationAction" xmi:id="_2ouZxNXWEem1l5O0R0OWkQ" name="Call(MyTest)" operation="_2ot0xtXWEem1l5O0R0OWkQ">
                      <argument xmi:id="_2ouZxdXWEem1l5O0R0OWkQ" name="Call(MyTest).argument(tester)" incoming="_2ouZrdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZxtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZx9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_2ouZyNXWEem1l5O0R0OWkQ" name="Call(MyTest).result()" type="_2otL4NXWEem1l5O0R0OWkQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZydXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZytXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <target xmi:id="_2ouZy9XWEem1l5O0R0OWkQ" name="Call(MyTest).target" incoming="_2ouZrNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZzNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZzdXWEem1l5O0R0OWkQ" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_2ouZztXWEem1l5O0R0OWkQ" name="Fork(Create(MyTest).result)" incoming="_2ouZq9XWEem1l5O0R0OWkQ" outgoing="_2ouZrNXWEem1l5O0R0OWkQ _2ouZwNXWEem1l5O0R0OWkQ"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2ouZz9XWEem1l5O0R0OWkQ" name="Fork(Output(Fork(Create(MyTest).result)))" incoming="_2ouZsNXWEem1l5O0R0OWkQ" outgoing="_2ouZsdXWEem1l5O0R0OWkQ _2ouZstXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_2ouZ0NXWEem1l5O0R0OWkQ" name="Start(MyTest)" isSynchronous="false">
                    <object xmi:id="_2ouZ0dXWEem1l5O0R0OWkQ" name="Start(MyTest).object" incoming="_2ouZsdXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ0tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ09XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZ1NXWEem1l5O0R0OWkQ" name="ExpressionStatement@5a78b25d" incoming="_2ouZi9XWEem1l5O0R0OWkQ" outgoing="_2ouZjdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouZ1dXWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination)" signal="_2otL3tXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ouZ1tXWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination).target" incoming="_2ouZitXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ19XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ2NXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZ2dXWEem1l5O0R0OWkQ" name="ExpressionStatement@76011287" incoming="_2ouZjdXWEem1l5O0R0OWkQ" outgoing="_2ouZj9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZ2tXWEem1l5O0R0OWkQ" target="_2ouZ3dXWEem1l5O0R0OWkQ" source="_2ouZ5dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZ29XWEem1l5O0R0OWkQ" target="_2ouZ3NXWEem1l5O0R0OWkQ" source="_2ouZ49XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouZ3NXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouZ29XWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouZ3dXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouZ2tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ3tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ39XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouZ4NXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZjNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ4dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ4tXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZ49XWEem1l5O0R0OWkQ" name="Tuple@1671bbc1" outgoing="_2ouZ29XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouZ5NXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_2ouZ5dXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival1&quot;).result" outgoing="_2ouZ2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ5tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ59XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouZ6NXWEem1l5O0R0OWkQ" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZ6dXWEem1l5O0R0OWkQ" name="ExpressionStatement@6cdf4825" incoming="_2ouZj9XWEem1l5O0R0OWkQ" outgoing="_2ouZkdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZ6tXWEem1l5O0R0OWkQ" target="_2ouZ7dXWEem1l5O0R0OWkQ" source="_2ouZ9dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZ69XWEem1l5O0R0OWkQ" target="_2ouZ7NXWEem1l5O0R0OWkQ" source="_2ouZ89XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouZ7NXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouZ69XWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouZ7dXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouZ6tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ7tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ79XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouZ8NXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZjtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ8dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ8tXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZ89XWEem1l5O0R0OWkQ" name="Tuple@15df4efe" outgoing="_2ouZ69XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouZ9NXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_2ouZ9dXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival2&quot;).result" outgoing="_2ouZ6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ9tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ99XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouZ-NXWEem1l5O0R0OWkQ" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouZ-dXWEem1l5O0R0OWkQ" name="ExpressionStatement@2bde0d0f" incoming="_2ouZkdXWEem1l5O0R0OWkQ" outgoing="_2ouZk9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouZ-tXWEem1l5O0R0OWkQ" target="_2ouZ_dXWEem1l5O0R0OWkQ" source="_2ouaBdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouZ-9XWEem1l5O0R0OWkQ" target="_2ouZ_NXWEem1l5O0R0OWkQ" source="_2ouaA9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouZ_NXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouZ-9XWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouZ_dXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouZ-tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouZ_tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouZ_9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouaANXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZkNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaAdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaAtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaA9XWEem1l5O0R0OWkQ" name="Tuple@1fe42833" outgoing="_2ouZ-9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaBNXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_2ouaBdXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival3&quot;).result" outgoing="_2ouZ-tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaBtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaB9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouaCNXWEem1l5O0R0OWkQ" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaCdXWEem1l5O0R0OWkQ" name="ExpressionStatement@6b374b23" incoming="_2ouZk9XWEem1l5O0R0OWkQ" outgoing="_2ouZldXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouaCtXWEem1l5O0R0OWkQ" target="_2ouaDdXWEem1l5O0R0OWkQ" source="_2ouaFdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouaC9XWEem1l5O0R0OWkQ" target="_2ouaDNXWEem1l5O0R0OWkQ" source="_2ouaE9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaDNXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouaC9XWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouaDdXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouaCtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaDtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaD9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouaENXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZktXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaEdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaEtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaE9XWEem1l5O0R0OWkQ" name="Tuple@18154756" outgoing="_2ouaC9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaFNXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_2ouaFdXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival4&quot;).result" outgoing="_2ouaCtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaFtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaF9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouaGNXWEem1l5O0R0OWkQ" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaGdXWEem1l5O0R0OWkQ" name="ExpressionStatement@5b45853" incoming="_2ouZldXWEem1l5O0R0OWkQ" outgoing="_2ouZl9XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaGtXWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination)" signal="_2otL3tXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ouaG9XWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination).target" incoming="_2ouZlNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaHNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaHdXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaHtXWEem1l5O0R0OWkQ" name="ExpressionStatement@1b0fd4d3" incoming="_2ouZl9XWEem1l5O0R0OWkQ" outgoing="_2ouZmdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouaH9XWEem1l5O0R0OWkQ" target="_2ouaItXWEem1l5O0R0OWkQ" source="_2ouaKtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouaINXWEem1l5O0R0OWkQ" target="_2ouaIdXWEem1l5O0R0OWkQ" source="_2ouaKNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaIdXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouaINXWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouaItXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouaH9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaI9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaJNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouaJdXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZltXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaJtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaJ9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaKNXWEem1l5O0R0OWkQ" name="Tuple@2301f222" outgoing="_2ouaINXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaKdXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_2ouaKtXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival5&quot;).result" outgoing="_2ouaH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaK9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaLNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouaLdXWEem1l5O0R0OWkQ" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaLtXWEem1l5O0R0OWkQ" name="ExpressionStatement@55302853" incoming="_2ouZmdXWEem1l5O0R0OWkQ" outgoing="_2ouZm9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouaL9XWEem1l5O0R0OWkQ" target="_2ouaMtXWEem1l5O0R0OWkQ" source="_2ouaOtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouaMNXWEem1l5O0R0OWkQ" target="_2ouaMdXWEem1l5O0R0OWkQ" source="_2ouaONXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaMdXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouaMNXWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouaMtXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouaL9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaM9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaNNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouaNdXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZmNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaNtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaN9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaONXWEem1l5O0R0OWkQ" name="Tuple@70922a60" outgoing="_2ouaMNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaOdXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_2ouaOtXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival6&quot;).result" outgoing="_2ouaL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaO9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaPNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouaPdXWEem1l5O0R0OWkQ" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaPtXWEem1l5O0R0OWkQ" name="ExpressionStatement@20d02d76" incoming="_2ouZm9XWEem1l5O0R0OWkQ" outgoing="_2ouZndXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaP9XWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination)" signal="_2otL3tXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ouaQNXWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination).target" incoming="_2ouZmtXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaQdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaQtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaQ9XWEem1l5O0R0OWkQ" name="ExpressionStatement@b219dfb" incoming="_2ouZndXWEem1l5O0R0OWkQ" outgoing="_2ouZn9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouaRNXWEem1l5O0R0OWkQ" target="_2ouaR9XWEem1l5O0R0OWkQ" source="_2ouaT9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouaRdXWEem1l5O0R0OWkQ" target="_2ouaRtXWEem1l5O0R0OWkQ" source="_2ouaTdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaRtXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouaRdXWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouaR9XWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouaRNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaSNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaSdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouaStXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZnNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaS9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaTNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaTdXWEem1l5O0R0OWkQ" name="Tuple@2403b94f" outgoing="_2ouaRdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaTtXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_2ouaT9XWEem1l5O0R0OWkQ" name="Value(&quot;Arrival7&quot;).result" outgoing="_2ouaRNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaUNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaUdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouaUtXWEem1l5O0R0OWkQ" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaU9XWEem1l5O0R0OWkQ" name="ExpressionStatement@7f5aa83d" incoming="_2ouZn9XWEem1l5O0R0OWkQ" outgoing="_2ouZodXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouaVNXWEem1l5O0R0OWkQ" target="_2ouaV9XWEem1l5O0R0OWkQ" source="_2ouaX9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ouaVdXWEem1l5O0R0OWkQ" target="_2ouaVtXWEem1l5O0R0OWkQ" source="_2ouaXdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaVtXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival)" incoming="_2ouaVdXWEem1l5O0R0OWkQ" signal="_2otL2tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ouaV9XWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_2ouaVNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaWNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaWdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_2ouaWtXWEem1l5O0R0OWkQ" name="SendSignal(SignalNewArrival).target" incoming="_2ouZntXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaW9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaXNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaXdXWEem1l5O0R0OWkQ" name="Tuple@7b6f8286" outgoing="_2ouaVdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaXtXWEem1l5O0R0OWkQ" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_2ouaX9XWEem1l5O0R0OWkQ" name="Value(&quot;Arrival8&quot;).result" outgoing="_2ouaVNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaYNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaYdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ouaYtXWEem1l5O0R0OWkQ" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouaY9XWEem1l5O0R0OWkQ" name="ExpressionStatement@478238db" incoming="_2ouZodXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ouaZNXWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination)" signal="_2otL3tXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ouaZdXWEem1l5O0R0OWkQ" name="SendSignal(SignalTermination).target" incoming="_2ouZoNXWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaZtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaZ9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ouZiNXWEem1l5O0R0OWkQ" name="Output(test)" incoming="_2ouZh9XWEem1l5O0R0OWkQ" type="_2otL4NXWEem1l5O0R0OWkQ" parameter="_2ouZhNXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ouaaNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ouav9XWEem1l5O0R0OWkQ" node="_2ouaadXWEem1l5O0R0OWkQ" group="_2ouaadXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ouaadXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ouaatXWEem1l5O0R0OWkQ" name="TestRunner$initialization$1" visibility="private" specification="_2ouas9XWEem1l5O0R0OWkQ" node="_2ouaa9XWEem1l5O0R0OWkQ" group="_2ouaa9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ouaa9XWEem1l5O0R0OWkQ" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouabNXWEem1l5O0R0OWkQ" target="_2ouaetXWEem1l5O0R0OWkQ" source="_2ouad9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouabdXWEem1l5O0R0OWkQ" target="_2ouahtXWEem1l5O0R0OWkQ" source="_2ouaetXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouabtXWEem1l5O0R0OWkQ" target="_2oualdXWEem1l5O0R0OWkQ" source="_2ouaetXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouab9XWEem1l5O0R0OWkQ" target="_2ouanNXWEem1l5O0R0OWkQ" source="_2ouamNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouacNXWEem1l5O0R0OWkQ" target="_2ouaqNXWEem1l5O0R0OWkQ" source="_2ouan9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouacdXWEem1l5O0R0OWkQ" target="_2ouartXWEem1l5O0R0OWkQ" source="_2ouao9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouactXWEem1l5O0R0OWkQ" target="_2ouastXWEem1l5O0R0OWkQ" source="_2ouasdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouac9XWEem1l5O0R0OWkQ" target="_2ouastXWEem1l5O0R0OWkQ" source="_2ouaq9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ouadNXWEem1l5O0R0OWkQ" target="_2ouae9XWEem1l5O0R0OWkQ" source="_2ouastXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ouaddXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ouadtXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ouad9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ouabNXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaeNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaedXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ouaetXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ouabNXWEem1l5O0R0OWkQ" outgoing="_2ouabdXWEem1l5O0R0OWkQ _2ouabtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouae9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ouadNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouafNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouafdXWEem1l5O0R0OWkQ" target="_2ouak9XWEem1l5O0R0OWkQ" source="_2ouaf9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaftXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ouaf9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ouafdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouagNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouagdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ouagtXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ouag9XWEem1l5O0R0OWkQ" name="Iterate(Write(TestRunner$initializationFlag$1))" inputElement="_2ouak9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouahNXWEem1l5O0R0OWkQ" target="_2ouakNXWEem1l5O0R0OWkQ" source="_2ouak9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ouahdXWEem1l5O0R0OWkQ" target="_2ouaitXWEem1l5O0R0OWkQ" source="_2ouahtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ouahtXWEem1l5O0R0OWkQ" name="Iterate(Write(TestRunner$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ouabdXWEem1l5O0R0OWkQ" outgoing="_2ouahdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouah9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaiNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ouaidXWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_2ot009XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ouaitXWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1).object" incoming="_2ouahdXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouai9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouajNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ouajdXWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1).result" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouajtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaj9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ouakNXWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1).value" incoming="_2ouahNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouakdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaktXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ouak9XWEem1l5O0R0OWkQ" name="Iterate(Write(TestRunner$initializationFlag$1)).inputElement" incoming="_2ouafdXWEem1l5O0R0OWkQ" outgoing="_2ouahNXWEem1l5O0R0OWkQ" regionAsInput="_2ouag9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2oualNXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_2ot009XWEem1l5O0R0OWkQ">
              <object xmi:id="_2oualdXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_2ouabtXWEem1l5O0R0OWkQ" type="_2ot00tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oualtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oual9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ouamNXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_2ouab9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouamdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouamtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ouam9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ouanNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ouab9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouandXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouantXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ouan9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ouacNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaoNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaodXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ouaotXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ouao9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ouacdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouapNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouapdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ouaptXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ouap9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ouaqNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ouacNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaqdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouaqtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ouaq9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ouac9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouarNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouardXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ouartXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ouacdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouar9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouasNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ouasdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ouactXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ouastXWEem1l5O0R0OWkQ" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_2ouactXWEem1l5O0R0OWkQ _2ouac9XWEem1l5O0R0OWkQ" outgoing="_2ouadNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ouac9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ouas9XWEem1l5O0R0OWkQ" name="TestRunner$initialization$1" visibility="protected" method="_2ouaatXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ouatNXWEem1l5O0R0OWkQ" name="TestRunner" visibility="public" method="_2ouZH9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ouatdXWEem1l5O0R0OWkQ" name="outer" visibility="package" type="_2oua09XWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouattXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouat9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2ouauNXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ot00tXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouaudXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouautXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ouau9XWEem1l5O0R0OWkQ" name="run" visibility="private" method="_2ouZg9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ouavNXWEem1l5O0R0OWkQ" name="test" visibility="package" type="_2otL4NXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouavdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ouavtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ouav9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ouaaNXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2ouawNXWEem1l5O0R0OWkQ" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2ouawdXWEem1l5O0R0OWkQ" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_2ouawtXWEem1l5O0R0OWkQ" name="Start" signal="_2ouawNXWEem1l5O0R0OWkQ"/>
        <ownedReception xmi:id="_2ouaw9XWEem1l5O0R0OWkQ" name="Continue" signal="_2ouawdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaxNXWEem1l5O0R0OWkQ" name="Event(SignalTermination)" visibility="public" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaxdXWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaxtXWEem1l5O0R0OWkQ" name="Event(SignalTermination)" visibility="public" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouax9XWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouayNXWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaydXWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaytXWEem1l5O0R0OWkQ" name="Event(SignalTermination)" visibility="public" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouay9XWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouazNXWEem1l5O0R0OWkQ" name="Event(SignalTermination)" visibility="public" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouazdXWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaztXWEem1l5O0R0OWkQ" name="Event(SignalNewArrival)" visibility="public" signal="_2otL2tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2ouaz9XWEem1l5O0R0OWkQ" name="Event(SignalTermination)" visibility="public" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2oua0NXWEem1l5O0R0OWkQ" name="Event(SignalTermination)" visibility="public" signal="_2otL3tXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2oua0dXWEem1l5O0R0OWkQ" name="Event(Start)" visibility="public" signal="_2ouawNXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2oua0tXWEem1l5O0R0OWkQ" name="Event(Continue)" visibility="public" signal="_2ouawdXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_2oua09XWEem1l5O0R0OWkQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_2oua1NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2oua1dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2oua1tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2oua19XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2oua2NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_2oua2dXWEem1l5O0R0OWkQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oua2tXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oua29XWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2oua3NXWEem1l5O0R0OWkQ" name="tester" visibility="private" type="_2oub5dXWEem1l5O0R0OWkQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oua3dXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oua3tXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oua39XWEem1l5O0R0OWkQ" name="Test$method$1" visibility="private" specification="_2oub2NXWEem1l5O0R0OWkQ" node="_2oua6dXWEem1l5O0R0OWkQ _2oua6tXWEem1l5O0R0OWkQ _2oua69XWEem1l5O0R0OWkQ _2oua7NXWEem1l5O0R0OWkQ" group="_2oua7NXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2oua4NXWEem1l5O0R0OWkQ" name="tester" type="_2oub5dXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oua4dXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oua4tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2oua49XWEem1l5O0R0OWkQ" name="" type="_2oua09XWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oua5NXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oua5dXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua5tXWEem1l5O0R0OWkQ" target="_2oua6tXWEem1l5O0R0OWkQ" source="_2oua6dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua59XWEem1l5O0R0OWkQ" target="_2oubCtXWEem1l5O0R0OWkQ" source="_2oua6tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua6NXWEem1l5O0R0OWkQ" target="_2oua69XWEem1l5O0R0OWkQ" source="_2oubJtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2oua7NXWEem1l5O0R0OWkQ" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua7dXWEem1l5O0R0OWkQ" target="_2oubJtXWEem1l5O0R0OWkQ" source="_2oubI9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua7tXWEem1l5O0R0OWkQ" target="_2oubKNXWEem1l5O0R0OWkQ" source="_2oubJtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2oua79XWEem1l5O0R0OWkQ" target="_2oua-NXWEem1l5O0R0OWkQ" source="_2oubJ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua8NXWEem1l5O0R0OWkQ" target="_2oubLNXWEem1l5O0R0OWkQ" source="_2oubJtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua8dXWEem1l5O0R0OWkQ" target="_2oubM9XWEem1l5O0R0OWkQ" source="_2oubL9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua8tXWEem1l5O0R0OWkQ" target="_2oubP9XWEem1l5O0R0OWkQ" source="_2oubNtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua89XWEem1l5O0R0OWkQ" target="_2oubRdXWEem1l5O0R0OWkQ" source="_2oubOtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2oua9NXWEem1l5O0R0OWkQ" target="_2oubSdXWEem1l5O0R0OWkQ" source="_2oubSNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua9dXWEem1l5O0R0OWkQ" target="_2oubSdXWEem1l5O0R0OWkQ" source="_2oubQtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2oua9tXWEem1l5O0R0OWkQ" target="_2oubJ9XWEem1l5O0R0OWkQ" source="_2oubSdXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2oua99XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oua-NXWEem1l5O0R0OWkQ" name="Body" incoming="_2oua79XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oua-dXWEem1l5O0R0OWkQ" name="ExpressionStatement@23bc195">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua-tXWEem1l5O0R0OWkQ" target="_2oubBNXWEem1l5O0R0OWkQ" source="_2oubANXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua-9XWEem1l5O0R0OWkQ" target="_2oubDdXWEem1l5O0R0OWkQ" source="_2oubCtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oua_NXWEem1l5O0R0OWkQ" target="_2oubE9XWEem1l5O0R0OWkQ" source="_2oubB9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2oua_dXWEem1l5O0R0OWkQ" target="_2oua_tXWEem1l5O0R0OWkQ" source="_2oubIdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oua_tXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@4ca9cb57)" incoming="_2oua_dXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2oua_9XWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2oubANXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oua-tXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubAdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubAtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2oubA9XWEem1l5O0R0OWkQ" name="Clear(tester)" structuralFeature="_2oua3NXWEem1l5O0R0OWkQ">
                <object xmi:id="_2oubBNXWEem1l5O0R0OWkQ" name="Clear(tester).object" incoming="_2oua-tXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubBdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubBtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2oubB9XWEem1l5O0R0OWkQ" name="Clear(tester).result" outgoing="_2oua_NXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubCNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubCdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2oubCtXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@4ca9cb57)" incoming="_2oua59XWEem1l5O0R0OWkQ" outgoing="_2oua-9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubC9XWEem1l5O0R0OWkQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubDNXWEem1l5O0R0OWkQ" target="_2oubINXWEem1l5O0R0OWkQ" source="_2oubDdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2oubDdXWEem1l5O0R0OWkQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_2oua-9XWEem1l5O0R0OWkQ" outgoing="_2oubDNXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubDtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubD9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2oubENXWEem1l5O0R0OWkQ" name="Iterate(Write(tester))" inputElement="_2oubINXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubEdXWEem1l5O0R0OWkQ" target="_2oubHdXWEem1l5O0R0OWkQ" source="_2oubINXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubEtXWEem1l5O0R0OWkQ" target="_2oubF9XWEem1l5O0R0OWkQ" source="_2oubE9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2oubE9XWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_2oua_NXWEem1l5O0R0OWkQ" outgoing="_2oubEtXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubFNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubFdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2oubFtXWEem1l5O0R0OWkQ" name="Write(tester)" structuralFeature="_2oua3NXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2oubF9XWEem1l5O0R0OWkQ" name="Write(tester).object" incoming="_2oubEtXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubGNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubGdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2oubGtXWEem1l5O0R0OWkQ" name="Write(tester).result" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubG9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubHNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2oubHdXWEem1l5O0R0OWkQ" name="Write(tester).value" incoming="_2oubEdXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubHtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubH9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2oubINXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).inputElement" incoming="_2oubDNXWEem1l5O0R0OWkQ" outgoing="_2oubEdXWEem1l5O0R0OWkQ" regionAsInput="_2oubENXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubIdXWEem1l5O0R0OWkQ" name="RightHandSide@3519de7e" outgoing="_2oua_dXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2oubItXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2oubI9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oua7dXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubJNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubJdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2oubJtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2oua7dXWEem1l5O0R0OWkQ" outgoing="_2oua6NXWEem1l5O0R0OWkQ _2oua7tXWEem1l5O0R0OWkQ _2oua8NXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2oubJ9XWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" incoming="_2oua9tXWEem1l5O0R0OWkQ" outgoing="_2oua79XWEem1l5O0R0OWkQ" operation="_2oub19XWEem1l5O0R0OWkQ">
            <target xmi:id="_2oubKNXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_2oua7tXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubKdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubKtXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2oubK9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_2oua2dXWEem1l5O0R0OWkQ">
            <object xmi:id="_2oubLNXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_2oua8NXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubLdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubLtXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2oubL9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_2oua8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubMNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubMdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2oubMtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2oubM9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2oua8dXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubNNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubNdXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2oubNtXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2oua8tXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubN9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubONXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2oubOdXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2oubOtXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2oua89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubO9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubPNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2oubPdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2oubPtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2oubP9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2oua8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubQNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubQdXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2oubQtXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2oua9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubQ9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubRNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2oubRdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2oua89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubRtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubR9XWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2oubSNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2oua9NXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2oubSdXWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_2oua9NXWEem1l5O0R0OWkQ _2oua9dXWEem1l5O0R0OWkQ" outgoing="_2oua9tXWEem1l5O0R0OWkQ" decisionInputFlow="_2oua9dXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2oua6dXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2oua5tXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" parameter="_2oua4NXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2oua6tXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2oua5tXWEem1l5O0R0OWkQ" outgoing="_2oua59XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2oua69XWEem1l5O0R0OWkQ" name="Return" incoming="_2oua6NXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" parameter="_2oua49XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oubStXWEem1l5O0R0OWkQ" name="done$method$1" visibility="private" specification="_2oub39XWEem1l5O0R0OWkQ" node="_2oubUNXWEem1l5O0R0OWkQ _2oubUdXWEem1l5O0R0OWkQ _2oubUtXWEem1l5O0R0OWkQ" group="_2oubUtXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2oubS9XWEem1l5O0R0OWkQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubTNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubTdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubTtXWEem1l5O0R0OWkQ" target="_2oubUdXWEem1l5O0R0OWkQ" source="_2oubUNXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubT9XWEem1l5O0R0OWkQ" target="_2oubVtXWEem1l5O0R0OWkQ" source="_2oubUdXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2oubUtXWEem1l5O0R0OWkQ" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2oubU9XWEem1l5O0R0OWkQ" target="_2oubXNXWEem1l5O0R0OWkQ" source="_2oubVNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubVNXWEem1l5O0R0OWkQ" name="ExpressionStatement@701c62b1" outgoing="_2oubU9XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2oubVdXWEem1l5O0R0OWkQ" name="Call(WriteLine)">
              <argument xmi:id="_2oubVtXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2oubT9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubV9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubWNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2oubWdXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubWtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubW9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubXNXWEem1l5O0R0OWkQ" name="ExpressionStatement@3113e49f" incoming="_2oubU9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubXdXWEem1l5O0R0OWkQ" target="_2oubZdXWEem1l5O0R0OWkQ" source="_2oubcdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2oubXtXWEem1l5O0R0OWkQ" target="_2oubX9XWEem1l5O0R0OWkQ" source="_2oubZtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_2oubX9XWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue))" incoming="_2oubXtXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2oubZdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubYNXWEem1l5O0R0OWkQ" target="_2oubYtXWEem1l5O0R0OWkQ" source="_2oubZdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2oubYdXWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_2ou_p9XWEem1l5O0R0OWkQ">
                <target xmi:id="_2oubYtXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_2oubYNXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubY9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubZNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_2oubZdXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_2oubXdXWEem1l5O0R0OWkQ" outgoing="_2oubYNXWEem1l5O0R0OWkQ" regionAsInput="_2oubX9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubZtXWEem1l5O0R0OWkQ" name="Feature(Read(tester).result)" outgoing="_2oubXtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubZ9XWEem1l5O0R0OWkQ" target="_2oubdNXWEem1l5O0R0OWkQ" source="_2oubatXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubaNXWEem1l5O0R0OWkQ" target="_2oubbtXWEem1l5O0R0OWkQ" source="_2oubdNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2oubadXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2oubatXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oubZ9XWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ouba9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubbNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2oubbdXWEem1l5O0R0OWkQ" name="Read(tester)" structuralFeature="_2oua3NXWEem1l5O0R0OWkQ">
                <object xmi:id="_2oubbtXWEem1l5O0R0OWkQ" name="Read(tester).object" incoming="_2oubaNXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubb9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubcNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2oubcdXWEem1l5O0R0OWkQ" name="Read(tester).result" outgoing="_2oubXdXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubctXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubc9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2oubdNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2oubZ9XWEem1l5O0R0OWkQ" outgoing="_2oubaNXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2oubUNXWEem1l5O0R0OWkQ" name="Input(message)" outgoing="_2oubTtXWEem1l5O0R0OWkQ" parameter="_2oubS9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2oubUdXWEem1l5O0R0OWkQ" name="Fork(message)" incoming="_2oubTtXWEem1l5O0R0OWkQ" outgoing="_2oubT9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oubddXWEem1l5O0R0OWkQ" name="done$method$2" visibility="private" specification="_2oub49XWEem1l5O0R0OWkQ" node="_2oubdtXWEem1l5O0R0OWkQ" group="_2oubdtXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2oubdtXWEem1l5O0R0OWkQ" name="Body(done$method$2)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubd9XWEem1l5O0R0OWkQ" name="ExpressionStatement@6f857da4">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubeNXWEem1l5O0R0OWkQ" target="_2oubfNXWEem1l5O0R0OWkQ" source="_2oubhNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2oubedXWEem1l5O0R0OWkQ" target="_2oube9XWEem1l5O0R0OWkQ" source="_2oubgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubetXWEem1l5O0R0OWkQ" target="_2oubf9XWEem1l5O0R0OWkQ" source="_2oubidXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2oube9XWEem1l5O0R0OWkQ" name="Call(done)" incoming="_2oubedXWEem1l5O0R0OWkQ" operation="_2oub39XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2oubfNXWEem1l5O0R0OWkQ" name="Call(done).argument(message)" incoming="_2oubeNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubfdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubftXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <target xmi:id="_2oubf9XWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_2oubetXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubgNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubgdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubgtXWEem1l5O0R0OWkQ" name="Tuple@15b0a155" outgoing="_2oubedXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2oubg9XWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_2oubhNXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;).result" outgoing="_2oubeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubhdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubhtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2oubh9XWEem1l5O0R0OWkQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2oubiNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2oubidXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oubetXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubitXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubi9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oubjNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2oub5NXWEem1l5O0R0OWkQ" node="_2oubjdXWEem1l5O0R0OWkQ" group="_2oubjdXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2oubjdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oubjtXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="private" specification="_2oub19XWEem1l5O0R0OWkQ" node="_2oubj9XWEem1l5O0R0OWkQ" group="_2oubj9XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2oubj9XWEem1l5O0R0OWkQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubkNXWEem1l5O0R0OWkQ" target="_2oubntXWEem1l5O0R0OWkQ" source="_2oubm9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubkdXWEem1l5O0R0OWkQ" target="_2oubqtXWEem1l5O0R0OWkQ" source="_2oubntXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubktXWEem1l5O0R0OWkQ" target="_2oubudXWEem1l5O0R0OWkQ" source="_2oubntXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubk9XWEem1l5O0R0OWkQ" target="_2oubwNXWEem1l5O0R0OWkQ" source="_2oubvNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oublNXWEem1l5O0R0OWkQ" target="_2oubzNXWEem1l5O0R0OWkQ" source="_2oubw9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubldXWEem1l5O0R0OWkQ" target="_2oub0tXWEem1l5O0R0OWkQ" source="_2oubx9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2oubltXWEem1l5O0R0OWkQ" target="_2oub1tXWEem1l5O0R0OWkQ" source="_2oub1dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubl9XWEem1l5O0R0OWkQ" target="_2oub1tXWEem1l5O0R0OWkQ" source="_2oubz9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2oubmNXWEem1l5O0R0OWkQ" target="_2oubn9XWEem1l5O0R0OWkQ" source="_2oub1tXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2oubmdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2oubmtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2oubm9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oubkNXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubnNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubndXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2oubntXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2oubkNXWEem1l5O0R0OWkQ" outgoing="_2oubkdXWEem1l5O0R0OWkQ _2oubktXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oubn9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_2oubmNXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ouboNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubodXWEem1l5O0R0OWkQ" target="_2oubt9XWEem1l5O0R0OWkQ" source="_2oubo9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2oubotXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2oubo9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2oubodXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubpNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubpdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2oubptXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2oubp9XWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_2oubt9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubqNXWEem1l5O0R0OWkQ" target="_2oubtNXWEem1l5O0R0OWkQ" source="_2oubt9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2oubqdXWEem1l5O0R0OWkQ" target="_2oubrtXWEem1l5O0R0OWkQ" source="_2oubqtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2oubqtXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2oubkdXWEem1l5O0R0OWkQ" outgoing="_2oubqdXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubq9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubrNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2oubrdXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1)" structuralFeature="_2oua2dXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2oubrtXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).object" incoming="_2oubqdXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubr9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubsNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2oubsdXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).result" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubstXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubs9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2oubtNXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).value" incoming="_2oubqNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubtdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubttXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2oubt9XWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_2oubodXWEem1l5O0R0OWkQ" outgoing="_2oubqNXWEem1l5O0R0OWkQ" regionAsInput="_2oubp9XWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2oubuNXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_2oua2dXWEem1l5O0R0OWkQ">
            <object xmi:id="_2oubudXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_2oubktXWEem1l5O0R0OWkQ" type="_2oua09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubutXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubu9XWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2oubvNXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_2oubk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubvdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubvtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2oubv9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2oubwNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2oubk9XWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubwdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubwtXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2oubw9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2oublNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubxNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubxdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2oubxtXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2oubx9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2oubldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubyNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubydXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2oubytXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2ouby9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2oubzNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2oublNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oubzdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oubztXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2oubz9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2oubl9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub0NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub0dXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2oub0tXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2oubldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub09XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub1NXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2oub1dXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2oubltXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2oub1tXWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_2oubltXWEem1l5O0R0OWkQ _2oubl9XWEem1l5O0R0OWkQ" outgoing="_2oubmNXWEem1l5O0R0OWkQ" decisionInputFlow="_2oubl9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2oub19XWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="protected" method="_2oubjtXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2oub2NXWEem1l5O0R0OWkQ" name="Test" visibility="protected" method="_2oua39XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2oub2dXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2oub5dXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub2tXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub29XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2oub3NXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2oua09XWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub3dXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub3tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2oub39XWEem1l5O0R0OWkQ" name="done" visibility="public" method="_2oubStXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2oub4NXWEem1l5O0R0OWkQ" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub4dXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub4tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2oub49XWEem1l5O0R0OWkQ" name="done" visibility="public" method="_2oubddXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2oub5NXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2oubjNXWEem1l5O0R0OWkQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2oub5dXWEem1l5O0R0OWkQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2oub5tXWEem1l5O0R0OWkQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub59XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub6NXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oub6dXWEem1l5O0R0OWkQ" name="Tester$method$1" visibility="private" specification="_2ou_otXWEem1l5O0R0OWkQ" node="_2oub7tXWEem1l5O0R0OWkQ _2oub79XWEem1l5O0R0OWkQ" group="_2oub79XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2oub6tXWEem1l5O0R0OWkQ" name="" type="_2oub5dXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub69XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub7NXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub7dXWEem1l5O0R0OWkQ" target="_2oub7tXWEem1l5O0R0OWkQ" source="_2oucANXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2oub79XWEem1l5O0R0OWkQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub8NXWEem1l5O0R0OWkQ" target="_2oucANXWEem1l5O0R0OWkQ" source="_2oub_dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub8dXWEem1l5O0R0OWkQ" target="_2oucAtXWEem1l5O0R0OWkQ" source="_2oucANXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2oub8tXWEem1l5O0R0OWkQ" target="_2oub-9XWEem1l5O0R0OWkQ" source="_2oucAdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub89XWEem1l5O0R0OWkQ" target="_2oucBtXWEem1l5O0R0OWkQ" source="_2oucANXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub9NXWEem1l5O0R0OWkQ" target="_2oucDdXWEem1l5O0R0OWkQ" source="_2oucCdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub9dXWEem1l5O0R0OWkQ" target="_2oucGdXWEem1l5O0R0OWkQ" source="_2oucENXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub9tXWEem1l5O0R0OWkQ" target="_2oucH9XWEem1l5O0R0OWkQ" source="_2oucFNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2oub99XWEem1l5O0R0OWkQ" target="_2oucI9XWEem1l5O0R0OWkQ" source="_2oucItXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oub-NXWEem1l5O0R0OWkQ" target="_2oucI9XWEem1l5O0R0OWkQ" source="_2oucHNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2oub-dXWEem1l5O0R0OWkQ" target="_2oucAdXWEem1l5O0R0OWkQ" source="_2oucI9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2oub-tXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2oub-9XWEem1l5O0R0OWkQ" name="Body" incoming="_2oub8tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2oub_NXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2oub_dXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oub8NXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oub_tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oub_9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2oucANXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2oub8NXWEem1l5O0R0OWkQ" outgoing="_2oub7dXWEem1l5O0R0OWkQ _2oub8dXWEem1l5O0R0OWkQ _2oub89XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2oucAdXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1)" incoming="_2oub-dXWEem1l5O0R0OWkQ" outgoing="_2oub8tXWEem1l5O0R0OWkQ" operation="_2ou_odXWEem1l5O0R0OWkQ">
              <target xmi:id="_2oucAtXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1).target" incoming="_2oub8dXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucA9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucBNXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2oucBdXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_2oub5tXWEem1l5O0R0OWkQ">
              <object xmi:id="_2oucBtXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_2oub89XWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucB9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucCNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2oucCdXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_2oub9NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucC9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2oucDNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2oucDdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2oub9NXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucDtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucD9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2oucENXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2oub9dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucEdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucEtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2oucE9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2oucFNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2oub9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucFdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucFtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2oucF9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2oucGNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2oucGdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2oub9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucGtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucG9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2oucHNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2oub-NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucHdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucHtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2oucH9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2oub9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2oucINXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2oucIdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2oucItXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2oub99XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2oucI9XWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2oub99XWEem1l5O0R0OWkQ _2oub-NXWEem1l5O0R0OWkQ" outgoing="_2oub-dXWEem1l5O0R0OWkQ" decisionInputFlow="_2oub-NXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2oub7tXWEem1l5O0R0OWkQ" name="Return" incoming="_2oub7dXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" parameter="_2oub6tXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oucJNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ou_ptXWEem1l5O0R0OWkQ" node="_2oucJdXWEem1l5O0R0OWkQ" group="_2oucJdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2oucJdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2oucJtXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="private" specification="_2ou_odXWEem1l5O0R0OWkQ" node="_2oucJ9XWEem1l5O0R0OWkQ" group="_2oucJ9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2oucJ9XWEem1l5O0R0OWkQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oucKNXWEem1l5O0R0OWkQ" target="_2ou_aNXWEem1l5O0R0OWkQ" source="_2ou_ZdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oucKdXWEem1l5O0R0OWkQ" target="_2ou_dNXWEem1l5O0R0OWkQ" source="_2ou_aNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oucKtXWEem1l5O0R0OWkQ" target="_2ou_g9XWEem1l5O0R0OWkQ" source="_2ou_aNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oucK9XWEem1l5O0R0OWkQ" target="_2ou_itXWEem1l5O0R0OWkQ" source="_2ou_htXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oucLNXWEem1l5O0R0OWkQ" target="_2ou_ltXWEem1l5O0R0OWkQ" source="_2ou_jdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2oucLdXWEem1l5O0R0OWkQ" target="_2ou_nNXWEem1l5O0R0OWkQ" source="_2ou_kdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ou_YNXWEem1l5O0R0OWkQ" target="_2ou_oNXWEem1l5O0R0OWkQ" source="_2ou_n9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_YdXWEem1l5O0R0OWkQ" target="_2ou_oNXWEem1l5O0R0OWkQ" source="_2ou_mdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ou_YtXWEem1l5O0R0OWkQ" target="_2ou_adXWEem1l5O0R0OWkQ" source="_2ou_oNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ou_Y9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ou_ZNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ou_ZdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2oucKNXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_ZtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_Z9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ou_aNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2oucKNXWEem1l5O0R0OWkQ" outgoing="_2oucKdXWEem1l5O0R0OWkQ _2oucKtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ou_adXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ou_YtXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ou_atXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_a9XWEem1l5O0R0OWkQ" target="_2ou_gdXWEem1l5O0R0OWkQ" source="_2ou_bdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ou_bNXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ou_bdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ou_a9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_btXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_b9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ou_cNXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ou_cdXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_2ou_gdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_ctXWEem1l5O0R0OWkQ" target="_2ou_ftXWEem1l5O0R0OWkQ" source="_2ou_gdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_c9XWEem1l5O0R0OWkQ" target="_2ou_eNXWEem1l5O0R0OWkQ" source="_2ou_dNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ou_dNXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2oucKdXWEem1l5O0R0OWkQ" outgoing="_2ou_c9XWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_ddXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_dtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ou_d9XWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_2oub5tXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ou_eNXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).object" incoming="_2ou_c9XWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_edXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_etXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ou_e9XWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).result" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_fNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_fdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ou_ftXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).value" incoming="_2ou_ctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_f9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_gNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ou_gdXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_2ou_a9XWEem1l5O0R0OWkQ" outgoing="_2ou_ctXWEem1l5O0R0OWkQ" regionAsInput="_2ou_cdXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ou_gtXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_2oub5tXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ou_g9XWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_2oucKtXWEem1l5O0R0OWkQ" type="_2oub5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_hNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_hdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ou_htXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_2oucK9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_h9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_iNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ou_idXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ou_itXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2oucK9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_i9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_jNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ou_jdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2oucLNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_jtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_j9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ou_kNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ou_kdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2oucLdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_ktXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_k9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ou_lNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ou_ldXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ou_ltXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2oucLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_l9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_mNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ou_mdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ou_YdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_mtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_m9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ou_nNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2oucLdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_ndXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_ntXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ou_n9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ou_YNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ou_oNXWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2ou_YNXWEem1l5O0R0OWkQ _2ou_YdXWEem1l5O0R0OWkQ" outgoing="_2ou_YtXWEem1l5O0R0OWkQ" decisionInputFlow="_2ou_YdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ou_odXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="protected" method="_2oucJtXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ou_otXWEem1l5O0R0OWkQ" name="Tester" visibility="public" method="_2oub6dXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ou_o9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2oub5dXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_pNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_pdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ou_ptXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2oucJNXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2ou_p9XWEem1l5O0R0OWkQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_2ou_qNXWEem1l5O0R0OWkQ" name="Continue" signal="_2ou_p9XWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2ou_qdXWEem1l5O0R0OWkQ" name="AssertTrue" visibility="public" node="_2ou_vdXWEem1l5O0R0OWkQ _2ou_vtXWEem1l5O0R0OWkQ _2ou_v9XWEem1l5O0R0OWkQ _2ou_wNXWEem1l5O0R0OWkQ _2ou_wdXWEem1l5O0R0OWkQ" group="_2ou_wdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2ou_qtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2ou_q9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2ou_rNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2ou_rdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2ou_rtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2ou_r9XWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_sNXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_sdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2ou_stXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_s9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_tNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_tdXWEem1l5O0R0OWkQ" target="_2ou_vtXWEem1l5O0R0OWkQ" source="_2ou_vdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_ttXWEem1l5O0R0OWkQ" target="_2ou_wNXWEem1l5O0R0OWkQ" source="_2ou_v9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_t9XWEem1l5O0R0OWkQ" target="_2ou_39XWEem1l5O0R0OWkQ" source="_2ou_wNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_uNXWEem1l5O0R0OWkQ" target="_2ovAB9XWEem1l5O0R0OWkQ" source="_2ou_vtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_udXWEem1l5O0R0OWkQ" target="_2ovAHtXWEem1l5O0R0OWkQ" source="_2ou_wNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_utXWEem1l5O0R0OWkQ" target="_2ovAJtXWEem1l5O0R0OWkQ" source="_2ou_vtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_u9XWEem1l5O0R0OWkQ" target="_2ovAM9XWEem1l5O0R0OWkQ" source="_2ou_wNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_vNXWEem1l5O0R0OWkQ" target="_2ovAO9XWEem1l5O0R0OWkQ" source="_2ou_vtXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2ou_wdXWEem1l5O0R0OWkQ" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_wtXWEem1l5O0R0OWkQ" target="_2ovASdXWEem1l5O0R0OWkQ" source="_2ovAQ9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_w9XWEem1l5O0R0OWkQ" target="_2ovAStXWEem1l5O0R0OWkQ" source="_2ovARtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2ou_xNXWEem1l5O0R0OWkQ" name="IfStatement@762fb60e">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ou_xdXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_xtXWEem1l5O0R0OWkQ" target="_2ou_1tXWEem1l5O0R0OWkQ" source="_2ou_39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_x9XWEem1l5O0R0OWkQ" target="_2ou_4dXWEem1l5O0R0OWkQ" source="_2ou_39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_yNXWEem1l5O0R0OWkQ" target="_2ou_59XWEem1l5O0R0OWkQ" source="_2ou_5NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_ydXWEem1l5O0R0OWkQ" target="_2ou_6NXWEem1l5O0R0OWkQ" source="_2ou_2dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_ytXWEem1l5O0R0OWkQ" target="_2ou_6dXWEem1l5O0R0OWkQ" source="_2ou_59XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_y9XWEem1l5O0R0OWkQ" target="_2ou_6dXWEem1l5O0R0OWkQ" source="_2ou_59XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_zNXWEem1l5O0R0OWkQ" target="_2ou_6NXWEem1l5O0R0OWkQ" source="_2ou_6dXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ou_zdXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_ztXWEem1l5O0R0OWkQ" target="_2ou_3NXWEem1l5O0R0OWkQ" source="_2ou_0dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_z9XWEem1l5O0R0OWkQ" target="_2ou_69XWEem1l5O0R0OWkQ" source="_2ou_6NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ou_0NXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_2ou_0dXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ou_ztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_0tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_09XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2ou_1NXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ou_1dXWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_2ou_1tXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2ou_xtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_19XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_2NXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ou_2dXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2ou_ydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_2tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_29XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ou_3NXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2ou_ztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_3dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_3tXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ou_39XWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_2ou_t9XWEem1l5O0R0OWkQ" outgoing="_2ou_xtXWEem1l5O0R0OWkQ _2ou_x9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ou_4NXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2ou_4dXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ou_x9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_4tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_49XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ou_5NXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ou_yNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_5dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_5tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ou_59XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2ou_yNXWEem1l5O0R0OWkQ" outgoing="_2ou_ytXWEem1l5O0R0OWkQ _2ou_y9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2ou_6NXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2ou_ydXWEem1l5O0R0OWkQ _2ou_zNXWEem1l5O0R0OWkQ" outgoing="_2ou_z9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ou_6dXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2ou_ytXWEem1l5O0R0OWkQ _2ou_y9XWEem1l5O0R0OWkQ" outgoing="_2ou_zNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ou_y9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ou_6tXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_2ou_69XWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2ou_z9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_7NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_7dXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ou_7tXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_79XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_8NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ou_8dXWEem1l5O0R0OWkQ" name="ExpressionStatement@569c444f">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou_8tXWEem1l5O0R0OWkQ" target="_2ou_9dXWEem1l5O0R0OWkQ" source="_2ovAD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ou_89XWEem1l5O0R0OWkQ" target="_2ou_9NXWEem1l5O0R0OWkQ" source="_2ou_-9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ou_9NXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_2ou_89XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ou_9dXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2ou_8tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_9tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_99XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ou_-NXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ou_-dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ou_-tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ou_-9XWEem1l5O0R0OWkQ" name="Tuple@7e2fb931" outgoing="_2ou_89XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou__NXWEem1l5O0R0OWkQ" target="_2ovAE9XWEem1l5O0R0OWkQ" source="_2ovAAdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ou__dXWEem1l5O0R0OWkQ" target="_2ovAFtXWEem1l5O0R0OWkQ" source="_2ovACtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ou__tXWEem1l5O0R0OWkQ" target="_2ovADdXWEem1l5O0R0OWkQ" source="_2ovAANXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ou__9XWEem1l5O0R0OWkQ" target="_2ovADdXWEem1l5O0R0OWkQ" source="_2ovABdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovAANXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_2ou__tXWEem1l5O0R0OWkQ">
                <result xmi:id="_2ovAAdXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_2ou__NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAAtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAA9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2ovABNXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovABdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2ou__9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovABtXWEem1l5O0R0OWkQ" target="_2ovACtXWEem1l5O0R0OWkQ" source="_2ovAB9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2ovAB9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ou_uNXWEem1l5O0R0OWkQ" outgoing="_2ovABtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovACNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovACdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2ovACtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovABtXWEem1l5O0R0OWkQ" outgoing="_2ou__dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAC9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovADNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovADdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2ou__tXWEem1l5O0R0OWkQ _2ou__9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovADtXWEem1l5O0R0OWkQ" target="_2ovAD9XWEem1l5O0R0OWkQ" source="_2ovAGdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ovAD9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2ovADtXWEem1l5O0R0OWkQ" outgoing="_2ou_8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAENXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAEdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovAEtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2ovAE9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2ou__NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAFNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAFdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2ovAFtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2ou__dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAF9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAGNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2ovAGdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2ovADtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAGtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAG9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovAHNXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAHdXWEem1l5O0R0OWkQ" target="_2ovAIdXWEem1l5O0R0OWkQ" source="_2ovAHtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovAHtXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_2ou_udXWEem1l5O0R0OWkQ" outgoing="_2ovAHdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAH9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAINXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovAIdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_2ovAHdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAItXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAI9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovAJNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAJdXWEem1l5O0R0OWkQ" target="_2ovAKdXWEem1l5O0R0OWkQ" source="_2ovAJtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovAJtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ou_utXWEem1l5O0R0OWkQ" outgoing="_2ovAJdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAJ9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAKNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovAKdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovAJdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAKtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAK9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovALNXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_2ovALdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovALtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAL9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2ovAMNXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovAMdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAMtXWEem1l5O0R0OWkQ" target="_2ovANtXWEem1l5O0R0OWkQ" source="_2ovAM9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovAM9XWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_2ou_u9XWEem1l5O0R0OWkQ" outgoing="_2ovAMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovANNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovANdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovANtXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_2ovAMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAN9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAONXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovAOdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAOtXWEem1l5O0R0OWkQ" target="_2ovAPtXWEem1l5O0R0OWkQ" source="_2ovAO9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovAO9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ou_vNXWEem1l5O0R0OWkQ" outgoing="_2ovAOtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAPNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAPdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovAPtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovAOtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAP9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAQNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2ovAQdXWEem1l5O0R0OWkQ" body="_2ou_8dXWEem1l5O0R0OWkQ _2ovAHNXWEem1l5O0R0OWkQ _2ovAJNXWEem1l5O0R0OWkQ" bodyOutput="_2ovAIdXWEem1l5O0R0OWkQ _2ovAKdXWEem1l5O0R0OWkQ" decider="_2ou_7tXWEem1l5O0R0OWkQ" successorClause="_2ovAQtXWEem1l5O0R0OWkQ" test="_2ou_xdXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_2ovAQtXWEem1l5O0R0OWkQ" body="_2ovAMdXWEem1l5O0R0OWkQ _2ovAOdXWEem1l5O0R0OWkQ" bodyOutput="_2ovANtXWEem1l5O0R0OWkQ _2ovAPtXWEem1l5O0R0OWkQ" decider="_2ovALdXWEem1l5O0R0OWkQ" predecessorClause="_2ovAQdXWEem1l5O0R0OWkQ" test="_2ovALNXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_2ovAQ9XWEem1l5O0R0OWkQ" name="IfStatement@762fb60e.result(condition)" outgoing="_2ou_wtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovARNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovARdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2ovARtXWEem1l5O0R0OWkQ" name="IfStatement@762fb60e.result(label)" outgoing="_2ou_w9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAR9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovASNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2ovASdXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2ou_wtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2ovAStXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2ou_w9XWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ou_vdXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2ou_tdXWEem1l5O0R0OWkQ" parameter="_2ou_r9XWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2ou_vtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2ou_tdXWEem1l5O0R0OWkQ" outgoing="_2ou_uNXWEem1l5O0R0OWkQ _2ou_utXWEem1l5O0R0OWkQ _2ou_vNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ou_v9XWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_2ou_ttXWEem1l5O0R0OWkQ" parameter="_2ou_stXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2ou_wNXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2ou_ttXWEem1l5O0R0OWkQ" outgoing="_2ou_t9XWEem1l5O0R0OWkQ _2ou_udXWEem1l5O0R0OWkQ _2ou_u9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2ovAS9XWEem1l5O0R0OWkQ" name="AssertEqual" visibility="public" node="_2ovAa9XWEem1l5O0R0OWkQ _2ovAbNXWEem1l5O0R0OWkQ _2ovAbdXWEem1l5O0R0OWkQ _2ovAbtXWEem1l5O0R0OWkQ _2ovAb9XWEem1l5O0R0OWkQ _2ovAcNXWEem1l5O0R0OWkQ _2ovAcdXWEem1l5O0R0OWkQ" group="_2ovAcdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2ovATNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2ovATdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2ovATtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2ovAT9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2ovAUNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2ovAUdXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAUtXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAU9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2ovAVNXWEem1l5O0R0OWkQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAVdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAVtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2ovAV9XWEem1l5O0R0OWkQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAWNXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAWdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAWtXWEem1l5O0R0OWkQ" target="_2ovAbNXWEem1l5O0R0OWkQ" source="_2ovAa9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAW9XWEem1l5O0R0OWkQ" target="_2ovAbtXWEem1l5O0R0OWkQ" source="_2ovAbdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAXNXWEem1l5O0R0OWkQ" target="_2ovAcNXWEem1l5O0R0OWkQ" source="_2ovAb9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAXdXWEem1l5O0R0OWkQ" target="_2ovAqNXWEem1l5O0R0OWkQ" source="_2ovAbtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAXtXWEem1l5O0R0OWkQ" target="_2ovAsNXWEem1l5O0R0OWkQ" source="_2ovAcNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAX9XWEem1l5O0R0OWkQ" target="_2ovA6tXWEem1l5O0R0OWkQ" source="_2ovAbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAYNXWEem1l5O0R0OWkQ" target="_2ovBKdXWEem1l5O0R0OWkQ" source="_2ovAcNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAYdXWEem1l5O0R0OWkQ" target="_2ovBfdXWEem1l5O0R0OWkQ" source="_2ovAbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAYtXWEem1l5O0R0OWkQ" target="_2ovBjdXWEem1l5O0R0OWkQ" source="_2ovAcNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAY9XWEem1l5O0R0OWkQ" target="_2ovBldXWEem1l5O0R0OWkQ" source="_2ovAbtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAZNXWEem1l5O0R0OWkQ" target="_2ovBtNXWEem1l5O0R0OWkQ" source="_2ovAcNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAZdXWEem1l5O0R0OWkQ" target="_2ovB19XWEem1l5O0R0OWkQ" source="_2ovAbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAZtXWEem1l5O0R0OWkQ" target="_2ovB59XWEem1l5O0R0OWkQ" source="_2ovAcNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAZ9XWEem1l5O0R0OWkQ" target="_2ovB79XWEem1l5O0R0OWkQ" source="_2ovAbtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAaNXWEem1l5O0R0OWkQ" target="_2ovCPtXWEem1l5O0R0OWkQ" source="_2ovAbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAadXWEem1l5O0R0OWkQ" target="_2ovCS9XWEem1l5O0R0OWkQ" source="_2ovAcNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAatXWEem1l5O0R0OWkQ" target="_2ovCU9XWEem1l5O0R0OWkQ" source="_2ovAbtXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2ovAcdXWEem1l5O0R0OWkQ" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovActXWEem1l5O0R0OWkQ" target="_2ovCZ9XWEem1l5O0R0OWkQ" source="_2ovCW9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAc9XWEem1l5O0R0OWkQ" target="_2ovCaNXWEem1l5O0R0OWkQ" source="_2ovCXtXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAdNXWEem1l5O0R0OWkQ" target="_2ovCadXWEem1l5O0R0OWkQ" source="_2ovCYdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAddXWEem1l5O0R0OWkQ" target="_2ovCatXWEem1l5O0R0OWkQ" source="_2ovCZNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2ovAdtXWEem1l5O0R0OWkQ" name="IfStatement@2dc612b7">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAd9XWEem1l5O0R0OWkQ" target="_2ovBE9XWEem1l5O0R0OWkQ" source="_2ovA09XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAeNXWEem1l5O0R0OWkQ" target="_2ovCA9XWEem1l5O0R0OWkQ" source="_2ovB99XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAedXWEem1l5O0R0OWkQ" target="_2ovCBNXWEem1l5O0R0OWkQ" source="_2ovB-tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAetXWEem1l5O0R0OWkQ" target="_2ovCBdXWEem1l5O0R0OWkQ" source="_2ovB_dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAe9XWEem1l5O0R0OWkQ" target="_2ovCBtXWEem1l5O0R0OWkQ" source="_2ovCANXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAfNXWEem1l5O0R0OWkQ" target="_2ovBNdXWEem1l5O0R0OWkQ" source="_2ovBFdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAfdXWEem1l5O0R0OWkQ" target="_2ovBUtXWEem1l5O0R0OWkQ" source="_2ovBFdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAftXWEem1l5O0R0OWkQ" target="_2ovBhdXWEem1l5O0R0OWkQ" source="_2ovBFdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAf9XWEem1l5O0R0OWkQ" target="_2ovB39XWEem1l5O0R0OWkQ" source="_2ovBFdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAgNXWEem1l5O0R0OWkQ" target="_2ovBK9XWEem1l5O0R0OWkQ" source="_2ovBE9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAgdXWEem1l5O0R0OWkQ" target="_2ovCB9XWEem1l5O0R0OWkQ" source="_2ovBK9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAgtXWEem1l5O0R0OWkQ" target="_2ovCGdXWEem1l5O0R0OWkQ" source="_2ovCA9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAg9XWEem1l5O0R0OWkQ" target="_2ovCIdXWEem1l5O0R0OWkQ" source="_2ovCBNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAhNXWEem1l5O0R0OWkQ" target="_2ovCKdXWEem1l5O0R0OWkQ" source="_2ovCBdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAhdXWEem1l5O0R0OWkQ" target="_2ovCMdXWEem1l5O0R0OWkQ" source="_2ovCBtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovAhtXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAh9XWEem1l5O0R0OWkQ" target="_2ovAn9XWEem1l5O0R0OWkQ" source="_2ovAqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAiNXWEem1l5O0R0OWkQ" target="_2ovAqtXWEem1l5O0R0OWkQ" source="_2ovAqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAidXWEem1l5O0R0OWkQ" target="_2ovApdXWEem1l5O0R0OWkQ" source="_2ovAsNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAitXWEem1l5O0R0OWkQ" target="_2ovAstXWEem1l5O0R0OWkQ" source="_2ovAsNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAi9XWEem1l5O0R0OWkQ" target="_2ovAudXWEem1l5O0R0OWkQ" source="_2ovArdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAjNXWEem1l5O0R0OWkQ" target="_2ovAutXWEem1l5O0R0OWkQ" source="_2ovAtdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAjdXWEem1l5O0R0OWkQ" target="_2ovAvNXWEem1l5O0R0OWkQ" source="_2ovAudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAjtXWEem1l5O0R0OWkQ" target="_2ovAw9XWEem1l5O0R0OWkQ" source="_2ovAutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAj9XWEem1l5O0R0OWkQ" target="_2ovAydXWEem1l5O0R0OWkQ" source="_2ovAutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAkNXWEem1l5O0R0OWkQ" target="_2ovAntXWEem1l5O0R0OWkQ" source="_2ovAydXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovAkdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAktXWEem1l5O0R0OWkQ" target="_2ovAu9XWEem1l5O0R0OWkQ" source="_2ovAydXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovAk9XWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAlNXWEem1l5O0R0OWkQ" target="_2ovAytXWEem1l5O0R0OWkQ" source="_2ovAuNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAldXWEem1l5O0R0OWkQ" target="_2ovAytXWEem1l5O0R0OWkQ" source="_2ovAudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAltXWEem1l5O0R0OWkQ" target="_2ovAydXWEem1l5O0R0OWkQ" source="_2ovAytXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovAl9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovAmNXWEem1l5O0R0OWkQ" target="_2ovAwtXWEem1l5O0R0OWkQ" source="_2ovAytXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovAmdXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAmtXWEem1l5O0R0OWkQ" target="_2ovAy9XWEem1l5O0R0OWkQ" source="_2ovAotXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAm9XWEem1l5O0R0OWkQ" target="_2ovAy9XWEem1l5O0R0OWkQ" source="_2ovAv9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAnNXWEem1l5O0R0OWkQ" target="_2ovAy9XWEem1l5O0R0OWkQ" source="_2ovAxtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovAndXWEem1l5O0R0OWkQ" target="_2ovAzdXWEem1l5O0R0OWkQ" source="_2ovAy9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ovAntXWEem1l5O0R0OWkQ" name="Test(==)" incoming="_2ovAkNXWEem1l5O0R0OWkQ">
              <first xmi:id="_2ovAn9XWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2ovAh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAoNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAodXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ovAotXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2ovAmtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAo9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovApNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ovApdXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2ovAidXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAptXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAp9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovAqNXWEem1l5O0R0OWkQ" name="Fork(Fork(value1))" incoming="_2ovAXdXWEem1l5O0R0OWkQ" outgoing="_2ovAh9XWEem1l5O0R0OWkQ _2ovAiNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovAqdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2ovAqtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ovAiNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAq9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovArNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ovArdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ovAi9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovArtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAr9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovAsNXWEem1l5O0R0OWkQ" name="Fork(Fork(value2))" incoming="_2ovAXtXWEem1l5O0R0OWkQ" outgoing="_2ovAidXWEem1l5O0R0OWkQ _2ovAitXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovAsdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2ovAstXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ovAitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAs9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAtNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ovAtdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ovAjNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAttXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAt9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ovAuNXWEem1l5O0R0OWkQ" name="Initial(Test(==))" outgoing="_2ovAlNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovAudXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2ovAi9XWEem1l5O0R0OWkQ" outgoing="_2ovAjdXWEem1l5O0R0OWkQ _2ovAldXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovAutXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2ovAjNXWEem1l5O0R0OWkQ" outgoing="_2ovAjtXWEem1l5O0R0OWkQ _2ovAj9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovAu9XWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_2ovAktXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ovAvNXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2ovAjdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAvdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAvtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ovAv9XWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_2ovAm9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAwNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAwdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovAwtXWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_2ovAmNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ovAw9XWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2ovAjtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAxNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAxdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ovAxtXWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_2ovAnNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAx9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAyNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ovAydXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2ovAj9XWEem1l5O0R0OWkQ _2ovAltXWEem1l5O0R0OWkQ" outgoing="_2ovAkNXWEem1l5O0R0OWkQ _2ovAktXWEem1l5O0R0OWkQ" decisionInputFlow="_2ovAj9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ovAytXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2ovAlNXWEem1l5O0R0OWkQ _2ovAldXWEem1l5O0R0OWkQ" outgoing="_2ovAltXWEem1l5O0R0OWkQ _2ovAmNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ovAldXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2ovAy9XWEem1l5O0R0OWkQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_2ovAmtXWEem1l5O0R0OWkQ _2ovAm9XWEem1l5O0R0OWkQ _2ovAnNXWEem1l5O0R0OWkQ" outgoing="_2ovAndXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovAzNXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_2ovAzdXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2ovAndXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovAztXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovAz9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ovA0NXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA0dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA0tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovA09XWEem1l5O0R0OWkQ" name="ExpressionStatement@56bbad1c" outgoing="_2ovAd9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA1NXWEem1l5O0R0OWkQ" target="_2ovA19XWEem1l5O0R0OWkQ" source="_2ovBBtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovA1dXWEem1l5O0R0OWkQ" target="_2ovA1tXWEem1l5O0R0OWkQ" source="_2ovA2tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovA1tXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2ovA1dXWEem1l5O0R0OWkQ" behavior="_2ovC0NXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ovA19XWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2ovA1NXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA2NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA2dXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovA2tXWEem1l5O0R0OWkQ" name="Tuple@73623d80" outgoing="_2ovA1dXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA29XWEem1l5O0R0OWkQ" target="_2ovA9tXWEem1l5O0R0OWkQ" source="_2ovA5NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA3NXWEem1l5O0R0OWkQ" target="_2ovA-dXWEem1l5O0R0OWkQ" source="_2ovA7dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovA3dXWEem1l5O0R0OWkQ" target="_2ovA8NXWEem1l5O0R0OWkQ" source="_2ovA49XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovA3tXWEem1l5O0R0OWkQ" target="_2ovA8NXWEem1l5O0R0OWkQ" source="_2ovA6NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA39XWEem1l5O0R0OWkQ" target="_2ovBCtXWEem1l5O0R0OWkQ" source="_2ovA8tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA4NXWEem1l5O0R0OWkQ" target="_2ovBDdXWEem1l5O0R0OWkQ" source="_2ovBANXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovA4dXWEem1l5O0R0OWkQ" target="_2ovBBNXWEem1l5O0R0OWkQ" source="_2ovA8NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovA4tXWEem1l5O0R0OWkQ" target="_2ovBBNXWEem1l5O0R0OWkQ" source="_2ovA_9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovA49XWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_2ovA3dXWEem1l5O0R0OWkQ">
                <result xmi:id="_2ovA5NXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_2ovA29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA5dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA5tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2ovA59XWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovA6NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2ovA3tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA6dXWEem1l5O0R0OWkQ" target="_2ovA7dXWEem1l5O0R0OWkQ" source="_2ovA6tXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2ovA6tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ovAX9XWEem1l5O0R0OWkQ" outgoing="_2ovA6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA69XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA7NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2ovA7dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovA6dXWEem1l5O0R0OWkQ" outgoing="_2ovA3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA7tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA79XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovA8NXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2ovA3dXWEem1l5O0R0OWkQ _2ovA3tXWEem1l5O0R0OWkQ" outgoing="_2ovA4dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovA8dXWEem1l5O0R0OWkQ" target="_2ovA8tXWEem1l5O0R0OWkQ" source="_2ovA_NXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ovA8tXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2ovA8dXWEem1l5O0R0OWkQ" outgoing="_2ovA39XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA89XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA9NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovA9dXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2ovA9tXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2ovA29XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA99XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA-NXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2ovA-dXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2ovA3NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA-tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA-9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2ovA_NXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2ovA8dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovA_dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovA_tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovA_9XWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;)" outgoing="_2ovA4tXWEem1l5O0R0OWkQ">
                <result xmi:id="_2ovBANXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;).result" outgoing="_2ovA4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBAdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBAtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2ovBA9XWEem1l5O0R0OWkQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBBNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2ovA4dXWEem1l5O0R0OWkQ _2ovA4tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBBdXWEem1l5O0R0OWkQ" target="_2ovBBtXWEem1l5O0R0OWkQ" source="_2ovBENXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ovBBtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2ovBBdXWEem1l5O0R0OWkQ" outgoing="_2ovA1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBB9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBCNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBCdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2ovBCtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2ovA39XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBC9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBDNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2ovBDdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2ovA4NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBDtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBD9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2ovBENXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2ovBBdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBEdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBEtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBE9XWEem1l5O0R0OWkQ" name="ExpressionStatement@74453f74" incoming="_2ovAd9XWEem1l5O0R0OWkQ" outgoing="_2ovAgNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBFNXWEem1l5O0R0OWkQ" target="_2ovBFdXWEem1l5O0R0OWkQ" source="_2ovBKtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovBFdXWEem1l5O0R0OWkQ" name="Fork(s)@170a5e0b" incoming="_2ovBFNXWEem1l5O0R0OWkQ" outgoing="_2ovAfNXWEem1l5O0R0OWkQ _2ovAfdXWEem1l5O0R0OWkQ _2ovAftXWEem1l5O0R0OWkQ _2ovAf9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBFtXWEem1l5O0R0OWkQ" name="RightHandSide@54a76919">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2ovBF9XWEem1l5O0R0OWkQ" name="CastExpression@54a76919" mode="parallel" outputElement="_2ovBKtXWEem1l5O0R0OWkQ" inputElement="_2ovBKdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBGNXWEem1l5O0R0OWkQ" target="_2ovBIdXWEem1l5O0R0OWkQ" source="_2ovBJ9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBGdXWEem1l5O0R0OWkQ" target="_2ovBKNXWEem1l5O0R0OWkQ" source="_2ovBJ9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBGtXWEem1l5O0R0OWkQ" target="_2ovBKNXWEem1l5O0R0OWkQ" source="_2ovBJNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBG9XWEem1l5O0R0OWkQ" target="_2ovBH9XWEem1l5O0R0OWkQ" source="_2ovBKNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovBHNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBHdXWEem1l5O0R0OWkQ" target="_2ovBJ9XWEem1l5O0R0OWkQ" source="_2ovBKdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBHtXWEem1l5O0R0OWkQ" target="_2ovBKtXWEem1l5O0R0OWkQ" source="_2ovBH9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2ovBH9XWEem1l5O0R0OWkQ" name="Merge(CastExpression@54a76919.operand)" incoming="_2ovBG9XWEem1l5O0R0OWkQ" outgoing="_2ovBHtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2ovBINXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_2ovBIdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).object" incoming="_2ovBGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBItXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBI9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ovBJNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).result" outgoing="_2ovBGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBJdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBJtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ovBJ9XWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_2ovBHdXWEem1l5O0R0OWkQ" outgoing="_2ovBGNXWEem1l5O0R0OWkQ _2ovBGdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2ovBKNXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_2ovBGdXWEem1l5O0R0OWkQ _2ovBGtXWEem1l5O0R0OWkQ" outgoing="_2ovBG9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ovBGtXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2ovBKdXWEem1l5O0R0OWkQ" name="CastExpression@54a76919.inputElement" incoming="_2ovAYNXWEem1l5O0R0OWkQ" outgoing="_2ovBHdXWEem1l5O0R0OWkQ" regionAsInput="_2ovBF9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2ovBKtXWEem1l5O0R0OWkQ" name="CastExpression@54a76919.outputElement" incoming="_2ovBHtXWEem1l5O0R0OWkQ" outgoing="_2ovBFNXWEem1l5O0R0OWkQ" regionAsOutput="_2ovBF9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_2ovBK9XWEem1l5O0R0OWkQ" name="IfStatement@3baa7d67" incoming="_2ovAgNXWEem1l5O0R0OWkQ" outgoing="_2ovAgdXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBLNXWEem1l5O0R0OWkQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBLdXWEem1l5O0R0OWkQ" target="_2ovBNNXWEem1l5O0R0OWkQ" source="_2ovBLtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBLtXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@610dd237)" outgoing="_2ovBLdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovBL9XWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2ovBMNXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBMdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBMtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2ovBM9XWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBNNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2ovBLdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ovBNdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ovAfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBNtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBN9XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2ovBONXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBOdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBOtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBO9XWEem1l5O0R0OWkQ" name="ExpressionStatement@19ecb9cc">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBPNXWEem1l5O0R0OWkQ" target="_2ovBP9XWEem1l5O0R0OWkQ" source="_2ovBbtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBPdXWEem1l5O0R0OWkQ" target="_2ovBPtXWEem1l5O0R0OWkQ" source="_2ovBQtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBPtXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2ovBPdXWEem1l5O0R0OWkQ" behavior="_2ovC0NXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ovBP9XWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2ovBPNXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBQNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBQdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBQtXWEem1l5O0R0OWkQ" name="Tuple@47351466" outgoing="_2ovBPdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBQ9XWEem1l5O0R0OWkQ" target="_2ovBXtXWEem1l5O0R0OWkQ" source="_2ovBTNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBRNXWEem1l5O0R0OWkQ" target="_2ovBYdXWEem1l5O0R0OWkQ" source="_2ovBVdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBRdXWEem1l5O0R0OWkQ" target="_2ovBWNXWEem1l5O0R0OWkQ" source="_2ovBS9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBRtXWEem1l5O0R0OWkQ" target="_2ovBWNXWEem1l5O0R0OWkQ" source="_2ovBUNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBR9XWEem1l5O0R0OWkQ" target="_2ovBctXWEem1l5O0R0OWkQ" source="_2ovBWtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBSNXWEem1l5O0R0OWkQ" target="_2ovBddXWEem1l5O0R0OWkQ" source="_2ovBaNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBSdXWEem1l5O0R0OWkQ" target="_2ovBbNXWEem1l5O0R0OWkQ" source="_2ovBWNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBStXWEem1l5O0R0OWkQ" target="_2ovBbNXWEem1l5O0R0OWkQ" source="_2ovBZ9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovBS9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_2ovBRdXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2ovBTNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_2ovBQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBTdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBTtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ovBT9XWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBUNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b)" outgoing="_2ovBRtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBUdXWEem1l5O0R0OWkQ" target="_2ovBVdXWEem1l5O0R0OWkQ" source="_2ovBUtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ovBUtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b).input" incoming="_2ovAfdXWEem1l5O0R0OWkQ" outgoing="_2ovBUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBU9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBVNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2ovBVdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b).output" incoming="_2ovBUdXWEem1l5O0R0OWkQ" outgoing="_2ovBRNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBVtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBV9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBWNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2ovBRdXWEem1l5O0R0OWkQ _2ovBRtXWEem1l5O0R0OWkQ" outgoing="_2ovBSdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBWdXWEem1l5O0R0OWkQ" target="_2ovBWtXWEem1l5O0R0OWkQ" source="_2ovBZNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ovBWtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2ovBWdXWEem1l5O0R0OWkQ" outgoing="_2ovBR9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBW9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBXNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBXdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_2ovBXtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2ovBQ9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBX9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBYNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2ovBYdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2ovBRNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBYtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBY9XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2ovBZNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2ovBWdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBZdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBZtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovBZ9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_2ovBStXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2ovBaNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_2ovBSNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBadXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBatXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ovBa9XWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBbNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2ovBSdXWEem1l5O0R0OWkQ _2ovBStXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBbdXWEem1l5O0R0OWkQ" target="_2ovBbtXWEem1l5O0R0OWkQ" source="_2ovBeNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ovBbtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2ovBbdXWEem1l5O0R0OWkQ" outgoing="_2ovBPNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBb9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBcNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBcdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_2ovBctXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2ovBR9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBc9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBdNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2ovBddXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2ovBSNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBdtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBd9XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2ovBeNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2ovBbdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBedXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBetXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBe9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBfNXWEem1l5O0R0OWkQ" target="_2ovBgNXWEem1l5O0R0OWkQ" source="_2ovBfdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovBfdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ovAYdXWEem1l5O0R0OWkQ" outgoing="_2ovBfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBftXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBf9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovBgNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovBfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBgdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBgtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBg9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBhNXWEem1l5O0R0OWkQ" target="_2ovBiNXWEem1l5O0R0OWkQ" source="_2ovBhdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovBhdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b).input" incoming="_2ovAftXWEem1l5O0R0OWkQ" outgoing="_2ovBhNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBhtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBh9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovBiNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b).output" incoming="_2ovBhNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBidXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBitXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBi9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBjNXWEem1l5O0R0OWkQ" target="_2ovBkNXWEem1l5O0R0OWkQ" source="_2ovBjdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovBjdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2ovAYtXWEem1l5O0R0OWkQ" outgoing="_2ovBjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBjtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBj9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovBkNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2ovBjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBkdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBktXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBk9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBlNXWEem1l5O0R0OWkQ" target="_2ovBmNXWEem1l5O0R0OWkQ" source="_2ovBldXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovBldXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2ovAY9XWEem1l5O0R0OWkQ" outgoing="_2ovBlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBltXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBl9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovBmNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2ovBlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBmdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBmtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovBm9XWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_2ovBnNXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBndXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBntXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2ovBn9XWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBoNXWEem1l5O0R0OWkQ" name="ExpressionStatement@ac07eff">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBodXWEem1l5O0R0OWkQ" target="_2ovBpNXWEem1l5O0R0OWkQ" source="_2ovB1NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBotXWEem1l5O0R0OWkQ" target="_2ovBo9XWEem1l5O0R0OWkQ" source="_2ovBp9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBo9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2ovBotXWEem1l5O0R0OWkQ" behavior="_2ovC0NXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ovBpNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2ovBodXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBpdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBptXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBp9XWEem1l5O0R0OWkQ" name="Tuple@37b63b99" outgoing="_2ovBotXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBqNXWEem1l5O0R0OWkQ" target="_2ovBvNXWEem1l5O0R0OWkQ" source="_2ovBtNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBqdXWEem1l5O0R0OWkQ" target="_2ovBu9XWEem1l5O0R0OWkQ" source="_2ovBs9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBqtXWEem1l5O0R0OWkQ" target="_2ovBx9XWEem1l5O0R0OWkQ" source="_2ovBtNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBq9XWEem1l5O0R0OWkQ" target="_2ovB09XWEem1l5O0R0OWkQ" source="_2ovB0tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBrNXWEem1l5O0R0OWkQ" target="_2ovB09XWEem1l5O0R0OWkQ" source="_2ovBv9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBrdXWEem1l5O0R0OWkQ" target="_2ovBwtXWEem1l5O0R0OWkQ" source="_2ovB09XWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovBrtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ovBr9XWEem1l5O0R0OWkQ" target="_2ovByNXWEem1l5O0R0OWkQ" source="_2ovB09XWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovBsNXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBsdXWEem1l5O0R0OWkQ" target="_2ovB1NXWEem1l5O0R0OWkQ" source="_2ovBxNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBstXWEem1l5O0R0OWkQ" target="_2ovB1NXWEem1l5O0R0OWkQ" source="_2ovBytXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBs9XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@50d3484d)" outgoing="_2ovBqdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_2ovBtNXWEem1l5O0R0OWkQ" name="Fork('')@182dcc4b" incoming="_2ovAZNXWEem1l5O0R0OWkQ" outgoing="_2ovBqNXWEem1l5O0R0OWkQ _2ovBqtXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBtdXWEem1l5O0R0OWkQ" name="RightHandSide@5906a685"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovBttXWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_2ovBt9XWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBuNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBudXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2ovButXWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovBu9XWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2ovBqdXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2ovBvNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ovBqNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBvdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBvtXWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2ovBv9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ovBrNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBwNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBwdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovBwtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@714e624b.operand2" incoming="_2ovBrdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBw9XWEem1l5O0R0OWkQ" target="_2ovBxNXWEem1l5O0R0OWkQ" source="_2ovBx9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ovBxNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@714e624b.operand2.result" incoming="_2ovBw9XWEem1l5O0R0OWkQ" outgoing="_2ovBsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBxdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBxtXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_2ovBx9XWEem1l5O0R0OWkQ" name="Merge(Fork('')@182dcc4b)" incoming="_2ovBqtXWEem1l5O0R0OWkQ" outgoing="_2ovBw9XWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovByNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@714e624b.operand3" incoming="_2ovBr9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovBydXWEem1l5O0R0OWkQ" target="_2ovBytXWEem1l5O0R0OWkQ" source="_2ovBztXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ovBytXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@714e624b.operand3.result" incoming="_2ovBydXWEem1l5O0R0OWkQ" outgoing="_2ovBstXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBy9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovBzNXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovBzdXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_2ovBztXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_2ovBydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovBz9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB0NXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2ovB0dXWEem1l5O0R0OWkQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2ovB0tXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@714e624b)" outgoing="_2ovBq9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2ovB09XWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@714e624b)" incoming="_2ovBq9XWEem1l5O0R0OWkQ _2ovBrNXWEem1l5O0R0OWkQ" outgoing="_2ovBrdXWEem1l5O0R0OWkQ _2ovBr9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ovBrNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2ovB1NXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@714e624b.result)" incoming="_2ovBsdXWEem1l5O0R0OWkQ _2ovBstXWEem1l5O0R0OWkQ" outgoing="_2ovBodXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovB1dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovB1tXWEem1l5O0R0OWkQ" target="_2ovB2tXWEem1l5O0R0OWkQ" source="_2ovB19XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovB19XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ovAZdXWEem1l5O0R0OWkQ" outgoing="_2ovB1tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB2NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB2dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovB2tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovB1tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB29XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB3NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovB3dXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovB3tXWEem1l5O0R0OWkQ" target="_2ovB4tXWEem1l5O0R0OWkQ" source="_2ovB39XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovB39XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b).input" incoming="_2ovAf9XWEem1l5O0R0OWkQ" outgoing="_2ovB3tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB4NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB4dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovB4tXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@170a5e0b).output" incoming="_2ovB3tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB49XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB5NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovB5dXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovB5tXWEem1l5O0R0OWkQ" target="_2ovB6tXWEem1l5O0R0OWkQ" source="_2ovB59XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovB59XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2ovAZtXWEem1l5O0R0OWkQ" outgoing="_2ovB5tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB6NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB6dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovB6tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2ovB5tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB69XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB7NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovB7dXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovB7tXWEem1l5O0R0OWkQ" target="_2ovB8tXWEem1l5O0R0OWkQ" source="_2ovB79XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovB79XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2ovAZ9XWEem1l5O0R0OWkQ" outgoing="_2ovB7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB8NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB8dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovB8tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2ovB7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB89XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB9NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_2ovB9dXWEem1l5O0R0OWkQ" body="_2ovBO9XWEem1l5O0R0OWkQ _2ovBe9XWEem1l5O0R0OWkQ _2ovBg9XWEem1l5O0R0OWkQ _2ovBi9XWEem1l5O0R0OWkQ _2ovBk9XWEem1l5O0R0OWkQ" bodyOutput="_2ovBgNXWEem1l5O0R0OWkQ _2ovBiNXWEem1l5O0R0OWkQ _2ovBkNXWEem1l5O0R0OWkQ _2ovBmNXWEem1l5O0R0OWkQ" decider="_2ovBONXWEem1l5O0R0OWkQ" successorClause="_2ovB9tXWEem1l5O0R0OWkQ" test="_2ovBLNXWEem1l5O0R0OWkQ"/>
            <clause xmi:id="_2ovB9tXWEem1l5O0R0OWkQ" body="_2ovBoNXWEem1l5O0R0OWkQ _2ovB1dXWEem1l5O0R0OWkQ _2ovB3dXWEem1l5O0R0OWkQ _2ovB5dXWEem1l5O0R0OWkQ _2ovB7dXWEem1l5O0R0OWkQ" bodyOutput="_2ovB2tXWEem1l5O0R0OWkQ _2ovB4tXWEem1l5O0R0OWkQ _2ovB6tXWEem1l5O0R0OWkQ _2ovB8tXWEem1l5O0R0OWkQ" decider="_2ovBnNXWEem1l5O0R0OWkQ" predecessorClause="_2ovB9dXWEem1l5O0R0OWkQ" test="_2ovBm9XWEem1l5O0R0OWkQ"/>
            <result xmi:id="_2ovB99XWEem1l5O0R0OWkQ" name="IfStatement@3baa7d67.result(label)" outgoing="_2ovAeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB-NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB-dXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2ovB-tXWEem1l5O0R0OWkQ" name="IfStatement@3baa7d67.result(s)" outgoing="_2ovAedXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB-9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB_NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2ovB_dXWEem1l5O0R0OWkQ" name="IfStatement@3baa7d67.result(value2)" outgoing="_2ovAetXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovB_tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovB_9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2ovCANXWEem1l5O0R0OWkQ" name="IfStatement@3baa7d67.result(value1)" outgoing="_2ovAe9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCAdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCAtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2ovCA9XWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2ovAeNXWEem1l5O0R0OWkQ" outgoing="_2ovAgtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2ovCBNXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2ovAedXWEem1l5O0R0OWkQ" outgoing="_2ovAg9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2ovCBdXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2ovAetXWEem1l5O0R0OWkQ" outgoing="_2ovAhNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2ovCBtXWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2ovAe9XWEem1l5O0R0OWkQ" outgoing="_2ovAhdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCB9XWEem1l5O0R0OWkQ" name="ExpressionStatement@7d691958" incoming="_2ovAgdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCCNXWEem1l5O0R0OWkQ" target="_2ovCC9XWEem1l5O0R0OWkQ" source="_2ovCE9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovCCdXWEem1l5O0R0OWkQ" target="_2ovCCtXWEem1l5O0R0OWkQ" source="_2ovCEdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovCCtXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_2ovCCdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ovCC9XWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2ovCCNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCDNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCDdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ovCDtXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCD9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCENXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCEdXWEem1l5O0R0OWkQ" name="Tuple@25f54157" outgoing="_2ovCCdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovCEtXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;)">
                <result xmi:id="_2ovCE9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;).result" outgoing="_2ovCCNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCFNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCFdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2ovCFtXWEem1l5O0R0OWkQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCF9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCGNXWEem1l5O0R0OWkQ" target="_2ovCHNXWEem1l5O0R0OWkQ" source="_2ovCGdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCGdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ovAgtXWEem1l5O0R0OWkQ" outgoing="_2ovCGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCGtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCG9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCHNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovCGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCHdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCHtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCH9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCINXWEem1l5O0R0OWkQ" target="_2ovCJNXWEem1l5O0R0OWkQ" source="_2ovCIdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCIdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_2ovAg9XWEem1l5O0R0OWkQ" outgoing="_2ovCINXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCItXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCI9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCJNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_2ovCINXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCJdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCJtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCJ9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCKNXWEem1l5O0R0OWkQ" target="_2ovCLNXWEem1l5O0R0OWkQ" source="_2ovCKdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCKdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2ovAhNXWEem1l5O0R0OWkQ" outgoing="_2ovCKNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCKtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCK9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCLNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2ovCKNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCLdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCLtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCL9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCMNXWEem1l5O0R0OWkQ" target="_2ovCNNXWEem1l5O0R0OWkQ" source="_2ovCMdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCMdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2ovAhdXWEem1l5O0R0OWkQ" outgoing="_2ovCMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCMtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCM9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCNNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2ovCMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCNdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCNtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovCN9XWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_2ovCONXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCOdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCOtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2ovCO9XWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCPNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCPdXWEem1l5O0R0OWkQ" target="_2ovCQdXWEem1l5O0R0OWkQ" source="_2ovCPtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCPtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ovAaNXWEem1l5O0R0OWkQ" outgoing="_2ovCPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCP9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCQNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCQdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovCPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCQtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCQ9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovCRNXWEem1l5O0R0OWkQ" name="Value(null)">
            <result xmi:id="_2ovCRdXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCRtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCR9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_2ovCSNXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCSdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCStXWEem1l5O0R0OWkQ" target="_2ovCTtXWEem1l5O0R0OWkQ" source="_2ovCS9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCS9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2ovAadXWEem1l5O0R0OWkQ" outgoing="_2ovCStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCTNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCTdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCTtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2ovCStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCT9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCUNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCUdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCUtXWEem1l5O0R0OWkQ" target="_2ovCVtXWEem1l5O0R0OWkQ" source="_2ovCU9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovCU9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2ovAatXWEem1l5O0R0OWkQ" outgoing="_2ovCUtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCVNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCVdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2ovCVtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2ovCUtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCV9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCWNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2ovCWdXWEem1l5O0R0OWkQ" body="_2ovA09XWEem1l5O0R0OWkQ _2ovBE9XWEem1l5O0R0OWkQ _2ovBK9XWEem1l5O0R0OWkQ _2ovCB9XWEem1l5O0R0OWkQ _2ovCF9XWEem1l5O0R0OWkQ _2ovCH9XWEem1l5O0R0OWkQ _2ovCJ9XWEem1l5O0R0OWkQ _2ovCL9XWEem1l5O0R0OWkQ" bodyOutput="_2ovCHNXWEem1l5O0R0OWkQ _2ovCJNXWEem1l5O0R0OWkQ _2ovCLNXWEem1l5O0R0OWkQ _2ovCNNXWEem1l5O0R0OWkQ" decider="_2ovA0NXWEem1l5O0R0OWkQ" successorClause="_2ovCWtXWEem1l5O0R0OWkQ" test="_2ovAhtXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_2ovCWtXWEem1l5O0R0OWkQ" body="_2ovCPNXWEem1l5O0R0OWkQ _2ovCRNXWEem1l5O0R0OWkQ _2ovCSdXWEem1l5O0R0OWkQ _2ovCUdXWEem1l5O0R0OWkQ" bodyOutput="_2ovCQdXWEem1l5O0R0OWkQ _2ovCRdXWEem1l5O0R0OWkQ _2ovCTtXWEem1l5O0R0OWkQ _2ovCVtXWEem1l5O0R0OWkQ" decider="_2ovCONXWEem1l5O0R0OWkQ" predecessorClause="_2ovCWdXWEem1l5O0R0OWkQ" test="_2ovCN9XWEem1l5O0R0OWkQ"/>
          <result xmi:id="_2ovCW9XWEem1l5O0R0OWkQ" name="IfStatement@2dc612b7.result(label)" outgoing="_2ovActXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCXNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCXdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2ovCXtXWEem1l5O0R0OWkQ" name="IfStatement@2dc612b7.result(s)" outgoing="_2ovAc9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCX9XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCYNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2ovCYdXWEem1l5O0R0OWkQ" name="IfStatement@2dc612b7.result(value2)" outgoing="_2ovAdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCYtXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCY9XWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2ovCZNXWEem1l5O0R0OWkQ" name="IfStatement@2dc612b7.result(value1)" outgoing="_2ovAddXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCZdXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCZtXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2ovCZ9XWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2ovActXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2ovCaNXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2ovAc9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2ovCadXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2ovAdNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2ovCatXWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2ovAddXWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ovAa9XWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2ovAWtXWEem1l5O0R0OWkQ" parameter="_2ovAUdXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2ovAbNXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2ovAWtXWEem1l5O0R0OWkQ" outgoing="_2ovAX9XWEem1l5O0R0OWkQ _2ovAYdXWEem1l5O0R0OWkQ _2ovAZdXWEem1l5O0R0OWkQ _2ovAaNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ovAbdXWEem1l5O0R0OWkQ" name="Input(value1)" outgoing="_2ovAW9XWEem1l5O0R0OWkQ" parameter="_2ovAVNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2ovAbtXWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2ovAW9XWEem1l5O0R0OWkQ" outgoing="_2ovAXdXWEem1l5O0R0OWkQ _2ovAY9XWEem1l5O0R0OWkQ _2ovAZ9XWEem1l5O0R0OWkQ _2ovAatXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ovAb9XWEem1l5O0R0OWkQ" name="Input(value2)" outgoing="_2ovAXNXWEem1l5O0R0OWkQ" parameter="_2ovAV9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2ovAcNXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2ovAXNXWEem1l5O0R0OWkQ" outgoing="_2ovAXtXWEem1l5O0R0OWkQ _2ovAYNXWEem1l5O0R0OWkQ _2ovAYtXWEem1l5O0R0OWkQ _2ovAZNXWEem1l5O0R0OWkQ _2ovAZtXWEem1l5O0R0OWkQ _2ovAadXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2ovCa9XWEem1l5O0R0OWkQ" name="AssertFalse" visibility="public" node="_2ovCfNXWEem1l5O0R0OWkQ _2ovCfdXWEem1l5O0R0OWkQ _2ovCftXWEem1l5O0R0OWkQ _2ovCf9XWEem1l5O0R0OWkQ _2ovCgNXWEem1l5O0R0OWkQ" group="_2ovCgNXWEem1l5O0R0OWkQ">
      <elementImport xmi:id="_2ovCbNXWEem1l5O0R0OWkQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_2ovCbdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2ovCbtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2ovCb9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2ovCcNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2ovCcdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2ovCctXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCc9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCdNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2ovCddXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCdtXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCd9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCeNXWEem1l5O0R0OWkQ" target="_2ovCfdXWEem1l5O0R0OWkQ" source="_2ovCfNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCedXWEem1l5O0R0OWkQ" target="_2ovCf9XWEem1l5O0R0OWkQ" source="_2ovCftXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCetXWEem1l5O0R0OWkQ" target="_2ovCodXWEem1l5O0R0OWkQ" source="_2ovCfdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCe9XWEem1l5O0R0OWkQ" target="_2ovCxdXWEem1l5O0R0OWkQ" source="_2ovCf9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2ovCgNXWEem1l5O0R0OWkQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCgdXWEem1l5O0R0OWkQ" name="ExpressionStatement@53200646">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCgtXWEem1l5O0R0OWkQ" target="_2ovChtXWEem1l5O0R0OWkQ" source="_2ovCqdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCg9XWEem1l5O0R0OWkQ" target="_2ovCidXWEem1l5O0R0OWkQ" source="_2ovCztXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ovChNXWEem1l5O0R0OWkQ" target="_2ovChdXWEem1l5O0R0OWkQ" source="_2ovCjNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovChdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2ovChNXWEem1l5O0R0OWkQ" behavior="_2ou_qdXWEem1l5O0R0OWkQ">
            <argument xmi:id="_2ovChtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2ovCgtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCh9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCiNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_2ovCidXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2ovCg9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCitXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCi9XWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCjNXWEem1l5O0R0OWkQ" name="Tuple@6b0bcf1c" outgoing="_2ovChNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCjdXWEem1l5O0R0OWkQ" target="_2ovCrdXWEem1l5O0R0OWkQ" source="_2ovCm9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCjtXWEem1l5O0R0OWkQ" target="_2ovCsNXWEem1l5O0R0OWkQ" source="_2ovCpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovCj9XWEem1l5O0R0OWkQ" target="_2ovCp9XWEem1l5O0R0OWkQ" source="_2ovCmtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovCkNXWEem1l5O0R0OWkQ" target="_2ovCp9XWEem1l5O0R0OWkQ" source="_2ovCn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCkdXWEem1l5O0R0OWkQ" target="_2ovCvNXWEem1l5O0R0OWkQ" source="_2ovCxdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCktXWEem1l5O0R0OWkQ" target="_2ovCx9XWEem1l5O0R0OWkQ" source="_2ovCxdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCk9XWEem1l5O0R0OWkQ" target="_2ovCzdXWEem1l5O0R0OWkQ" source="_2ovCytXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovClNXWEem1l5O0R0OWkQ" target="_2ovCztXWEem1l5O0R0OWkQ" source="_2ovCv9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCldXWEem1l5O0R0OWkQ" target="_2ovCz9XWEem1l5O0R0OWkQ" source="_2ovCzdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCltXWEem1l5O0R0OWkQ" target="_2ovCz9XWEem1l5O0R0OWkQ" source="_2ovCzdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCl9XWEem1l5O0R0OWkQ" target="_2ovCztXWEem1l5O0R0OWkQ" source="_2ovCz9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovCmNXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCmdXWEem1l5O0R0OWkQ" target="_2ovCwtXWEem1l5O0R0OWkQ" source="_2ovCt9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovCmtXWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;)" outgoing="_2ovCj9XWEem1l5O0R0OWkQ">
              <result xmi:id="_2ovCm9XWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;).result" outgoing="_2ovCjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCnNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCndXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2ovCntXWEem1l5O0R0OWkQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCn9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2ovCkNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCoNXWEem1l5O0R0OWkQ" target="_2ovCpNXWEem1l5O0R0OWkQ" source="_2ovCodXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2ovCodXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2ovCetXWEem1l5O0R0OWkQ" outgoing="_2ovCoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCotXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCo9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2ovCpNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2ovCoNXWEem1l5O0R0OWkQ" outgoing="_2ovCjtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCpdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCptXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovCp9XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2ovCj9XWEem1l5O0R0OWkQ _2ovCkNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovCqNXWEem1l5O0R0OWkQ" target="_2ovCqdXWEem1l5O0R0OWkQ" source="_2ovCs9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2ovCqdXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2ovCqNXWEem1l5O0R0OWkQ" outgoing="_2ovCgtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCqtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCq9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovCrNXWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_2ovCrdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2ovCjdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCrtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCr9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2ovCsNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2ovCjtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCsdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCstXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2ovCs9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2ovCqNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCtNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCtdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovCttXWEem1l5O0R0OWkQ" name="Value(false)">
              <result xmi:id="_2ovCt9XWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2ovCmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCuNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCudXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2ovCutXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ovCu9XWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_2ovCvNXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2ovCkdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCvdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCvtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ovCv9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2ovClNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCwNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCwdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ovCwtXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2ovCmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCw9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCxNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovCxdXWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_2ovCe9XWEem1l5O0R0OWkQ" outgoing="_2ovCkdXWEem1l5O0R0OWkQ _2ovCktXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovCxtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2ovCx9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ovCktXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCyNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCydXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ovCytXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ovCk9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovCy9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovCzNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovCzdXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2ovCk9XWEem1l5O0R0OWkQ" outgoing="_2ovCldXWEem1l5O0R0OWkQ _2ovCltXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2ovCztXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2ovClNXWEem1l5O0R0OWkQ _2ovCl9XWEem1l5O0R0OWkQ" outgoing="_2ovCg9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ovCz9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2ovCldXWEem1l5O0R0OWkQ _2ovCltXWEem1l5O0R0OWkQ" outgoing="_2ovCl9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ovCltXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ovCfNXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2ovCeNXWEem1l5O0R0OWkQ" parameter="_2ovCctXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2ovCfdXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2ovCeNXWEem1l5O0R0OWkQ" outgoing="_2ovCetXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ovCftXWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_2ovCedXWEem1l5O0R0OWkQ" parameter="_2ovCddXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2ovCf9XWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2ovCedXWEem1l5O0R0OWkQ" outgoing="_2ovCe9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2ovC0NXWEem1l5O0R0OWkQ" name="Write" visibility="public" node="_2ovC29XWEem1l5O0R0OWkQ _2ovC3NXWEem1l5O0R0OWkQ _2ovC3dXWEem1l5O0R0OWkQ" group="_2ovC3dXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2ovC0dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2ovC0tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2ovC09XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2ovC1NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2ovC1dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2ovC1tXWEem1l5O0R0OWkQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovC19XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovC2NXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC2dXWEem1l5O0R0OWkQ" target="_2ovC3NXWEem1l5O0R0OWkQ" source="_2ovC29XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC2tXWEem1l5O0R0OWkQ" target="_2ovC5tXWEem1l5O0R0OWkQ" source="_2ovC3NXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2ovC3dXWEem1l5O0R0OWkQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovC3tXWEem1l5O0R0OWkQ" name="ExpressionStatement@4e999d9e">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC39XWEem1l5O0R0OWkQ" target="_2ovDIdXWEem1l5O0R0OWkQ" source="_2ovDLtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ovC4NXWEem1l5O0R0OWkQ" target="_2ovC4dXWEem1l5O0R0OWkQ" source="_2ovDItXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_2ovC4dXWEem1l5O0R0OWkQ" name="Collect(Call(write))" incoming="_2ovC4NXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2ovDIdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC4tXWEem1l5O0R0OWkQ" target="_2ovC6tXWEem1l5O0R0OWkQ" source="_2ovDINXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC49XWEem1l5O0R0OWkQ" target="_2ovDANXWEem1l5O0R0OWkQ" source="_2ovC5tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovC5NXWEem1l5O0R0OWkQ" target="_2ovC6dXWEem1l5O0R0OWkQ" source="_2ovC89XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC5dXWEem1l5O0R0OWkQ" target="_2ovC8NXWEem1l5O0R0OWkQ" source="_2ovDIdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2ovC5tXWEem1l5O0R0OWkQ" name="Collect(Call(write)).input(Fork(value))" incoming="_2ovC2tXWEem1l5O0R0OWkQ" outgoing="_2ovC49XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovC59XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovC6NXWEem1l5O0R0OWkQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ovC6dXWEem1l5O0R0OWkQ" name="Call(write)" incoming="_2ovC5NXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ovC6tXWEem1l5O0R0OWkQ" name="Call(write).argument(value)" incoming="_2ovC4tXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovC69XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovC7NXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ovC7dXWEem1l5O0R0OWkQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovC7tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovC79XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_2ovC8NXWEem1l5O0R0OWkQ" name="Call(write).target" incoming="_2ovC5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovC8dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovC8tXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovC89XWEem1l5O0R0OWkQ" name="Tuple@3c726515" outgoing="_2ovC5NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC9NXWEem1l5O0R0OWkQ" target="_2ovDCNXWEem1l5O0R0OWkQ" source="_2ovDANXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovC9dXWEem1l5O0R0OWkQ" target="_2ovDB9XWEem1l5O0R0OWkQ" source="_2ovC_9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC9tXWEem1l5O0R0OWkQ" target="_2ovDE9XWEem1l5O0R0OWkQ" source="_2ovDANXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovC99XWEem1l5O0R0OWkQ" target="_2ovDH9XWEem1l5O0R0OWkQ" source="_2ovDHtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC-NXWEem1l5O0R0OWkQ" target="_2ovDH9XWEem1l5O0R0OWkQ" source="_2ovDC9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovC-dXWEem1l5O0R0OWkQ" target="_2ovDDtXWEem1l5O0R0OWkQ" source="_2ovDH9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovC-tXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ovC-9XWEem1l5O0R0OWkQ" target="_2ovDFNXWEem1l5O0R0OWkQ" source="_2ovDH9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ovC_NXWEem1l5O0R0OWkQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC_dXWEem1l5O0R0OWkQ" target="_2ovDINXWEem1l5O0R0OWkQ" source="_2ovDENXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovC_tXWEem1l5O0R0OWkQ" target="_2ovDINXWEem1l5O0R0OWkQ" source="_2ovDFtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovC_9XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@127286be)" outgoing="_2ovC9dXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ForkNode" xmi:id="_2ovDANXWEem1l5O0R0OWkQ" name="Fork('')@3e17d301" incoming="_2ovC49XWEem1l5O0R0OWkQ" outgoing="_2ovC9NXWEem1l5O0R0OWkQ _2ovC9tXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovDAdXWEem1l5O0R0OWkQ" name="RightHandSide@55d42164"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovDAtXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2ovDA9XWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDBNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDBdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2ovDBtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovDB9XWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2ovC9dXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2ovDCNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2ovC9NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDCdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDCtXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2ovDC9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2ovC-NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDDNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDDdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovDDtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@9417214.operand2" incoming="_2ovC-dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovDD9XWEem1l5O0R0OWkQ" target="_2ovDENXWEem1l5O0R0OWkQ" source="_2ovDE9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ovDENXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@9417214.operand2.result" incoming="_2ovDD9XWEem1l5O0R0OWkQ" outgoing="_2ovC_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDEdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDEtXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_2ovDE9XWEem1l5O0R0OWkQ" name="Merge(Fork('')@3e17d301)" incoming="_2ovC9tXWEem1l5O0R0OWkQ" outgoing="_2ovDD9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovDFNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@9417214.operand3" incoming="_2ovC-9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovDFdXWEem1l5O0R0OWkQ" target="_2ovDFtXWEem1l5O0R0OWkQ" source="_2ovDGtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ovDFtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@9417214.operand3.result" incoming="_2ovDFdXWEem1l5O0R0OWkQ" outgoing="_2ovC_tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDF9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDGNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovDGdXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_2ovDGtXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_2ovDFdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDG9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDHNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2ovDHdXWEem1l5O0R0OWkQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2ovDHtXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@9417214)" outgoing="_2ovC99XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_2ovDH9XWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@9417214)" incoming="_2ovC99XWEem1l5O0R0OWkQ _2ovC-NXWEem1l5O0R0OWkQ" outgoing="_2ovC-dXWEem1l5O0R0OWkQ _2ovC-9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ovC-NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_2ovDINXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@9417214.result)" incoming="_2ovC_dXWEem1l5O0R0OWkQ _2ovC_tXWEem1l5O0R0OWkQ" outgoing="_2ovC4tXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_2ovDIdXWEem1l5O0R0OWkQ" name="Collect(Call(write)).inputElement" incoming="_2ovC39XWEem1l5O0R0OWkQ" outgoing="_2ovC5dXWEem1l5O0R0OWkQ" regionAsInput="_2ovC4dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovDItXWEem1l5O0R0OWkQ" name="Feature(Call(At).result())" outgoing="_2ovC4NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovDI9XWEem1l5O0R0OWkQ" target="_2ovDKNXWEem1l5O0R0OWkQ" source="_2ovDM9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovDJNXWEem1l5O0R0OWkQ" target="_2ovDO9XWEem1l5O0R0OWkQ" source="_2ovDN9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ovDJdXWEem1l5O0R0OWkQ" target="_2ovDJ9XWEem1l5O0R0OWkQ" source="_2ovDMdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ovDJtXWEem1l5O0R0OWkQ" target="_2ovDK9XWEem1l5O0R0OWkQ" source="_2ovDO9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ovDJ9XWEem1l5O0R0OWkQ" name="Call(At)" incoming="_2ovDJdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2ovDKNXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2ovDI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDKdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDKtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <argument xmi:id="_2ovDK9XWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2ovDJtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDLNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDLdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2ovDLtXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2ovC39XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDL9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDMNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ovDMdXWEem1l5O0R0OWkQ" name="Tuple@29ab9e91" outgoing="_2ovDJdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_2ovDMtXWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_2ovDM9XWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_2ovDI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDNNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDNdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ovDNtXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_2ovDN9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2ovDJNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ovDONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ovDOdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2ovDOtXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ovDO9XWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2ovDJNXWEem1l5O0R0OWkQ" outgoing="_2ovDJtXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ovC29XWEem1l5O0R0OWkQ" name="Input(value)" outgoing="_2ovC2dXWEem1l5O0R0OWkQ" parameter="_2ovC1tXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2ovC3NXWEem1l5O0R0OWkQ" name="Fork(value)" incoming="_2ovC2dXWEem1l5O0R0OWkQ" outgoing="_2ovC2tXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <profileApplication xmi:id="_2ovDPNXWEem1l5O0R0OWkQ">
      <eAnnotations xmi:id="_2ovDPdXWEem1l5O0R0OWkQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_2ovmcNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2otLQtXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2ovmcdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2otLSdXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2ovmctXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ou_ptXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2ovmc9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2otL2dXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2ovmdNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ou_otXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2ovmddXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2otLPtXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2ovmdtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ot0zdXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2ovmd9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ouav9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2ovmeNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2oub5NXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2ovmedXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2otL1dXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2ovmetXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ot0xtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2ovme9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2oub2NXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2ovmfNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ouatNXWEem1l5O0R0OWkQ"/>
</xmi:XMI>

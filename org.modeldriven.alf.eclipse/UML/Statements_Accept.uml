<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SimRUJ-zEeeDM7N9y1fOSA" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SimRUZ-zEeeDM7N9y1fOSA" name="Statements_Accept" visibility="public">
      <packageImport xmi:id="_SimRUp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SimRU5-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SimRVJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SimRVZ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SimRVp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_SimRV5-zEeeDM7N9y1fOSA" general="_SioGkZ-zEeeDM7N9y1fOSA"/>
      <ownedAttribute xmi:id="_SimRWJ-zEeeDM7N9y1fOSA" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRWZ-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRWp-zEeeDM7N9y1fOSA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SimRW5-zEeeDM7N9y1fOSA" name="Statements_Accept$method$1" specification="_Sim5U5-zEeeDM7N9y1fOSA" node="_SimRYJ-zEeeDM7N9y1fOSA _SimRYZ-zEeeDM7N9y1fOSA" group="_SimRYZ-zEeeDM7N9y1fOSA">
        <ownedParameter xmi:id="_SimRXJ-zEeeDM7N9y1fOSA" name="" type="_SimRUZ-zEeeDM7N9y1fOSA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SimRXZ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SimRXp-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRX5-zEeeDM7N9y1fOSA" target="_SimRYJ-zEeeDM7N9y1fOSA" source="_Sim4f5-zEeeDM7N9y1fOSA"/>
        <structuredNode xmi:id="_SimRYZ-zEeeDM7N9y1fOSA" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRYp-zEeeDM7N9y1fOSA" target="_Sim4f5-zEeeDM7N9y1fOSA" source="_Sim4fJ-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRY5-zEeeDM7N9y1fOSA" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SimRZJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@229c8304">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SimRZZ-zEeeDM7N9y1fOSA" target="_Sim4cp-zEeeDM7N9y1fOSA" source="_Sim4ZJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4YJ-zEeeDM7N9y1fOSA" target="_Sim4cZ-zEeeDM7N9y1fOSA" source="_Sim4Yp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4YZ-zEeeDM7N9y1fOSA" target="_Sim4eJ-zEeeDM7N9y1fOSA" source="_Sim4aZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4Yp-zEeeDM7N9y1fOSA" name="Tuple@5ee65b26" outgoing="_Sim4YJ-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim4Y5-zEeeDM7N9y1fOSA" name="Value(null)">
                  <result xmi:id="_Sim4ZJ-zEeeDM7N9y1fOSA" name="Value(null).result" outgoing="_SimRZZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4ZZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4Zp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_Sim4Z5-zEeeDM7N9y1fOSA"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim4aJ-zEeeDM7N9y1fOSA" name="ReadSelf">
                <result xmi:id="_Sim4aZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim4YZ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4ap-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4a5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4bJ-zEeeDM7N9y1fOSA" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4bZ-zEeeDM7N9y1fOSA" target="_Sim4bp-zEeeDM7N9y1fOSA" source="_Sim4dZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_Sim4bp-zEeeDM7N9y1fOSA" name="Output(Call(run).result())" incoming="_Sim4bZ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4b5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4cJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_Sim4cZ-zEeeDM7N9y1fOSA" name="Call(run)" incoming="_Sim4YJ-zEeeDM7N9y1fOSA" operation="_Sim5V5-zEeeDM7N9y1fOSA">
                  <argument xmi:id="_Sim4cp-zEeeDM7N9y1fOSA" name="Call(run).argument(tester)" incoming="_SimRZZ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4c5-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4dJ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_Sim4dZ-zEeeDM7N9y1fOSA" name="Call(run).result()" outgoing="_Sim4bZ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4dp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4d5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <target xmi:id="_Sim4eJ-zEeeDM7N9y1fOSA" name="Call(run).target" incoming="_Sim4YZ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4eZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4ep-zEeeDM7N9y1fOSA" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim4e5-zEeeDM7N9y1fOSA" name="ReadSelf">
            <result xmi:id="_Sim4fJ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SimRYp-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4fZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4fp-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim4f5-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SimRYp-zEeeDM7N9y1fOSA" outgoing="_SimRX5-zEeeDM7N9y1fOSA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SimRYJ-zEeeDM7N9y1fOSA" name="Return" incoming="_SimRX5-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" parameter="_SimRXJ-zEeeDM7N9y1fOSA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim4gJ-zEeeDM7N9y1fOSA" name="run$method$1" specification="_Sim5V5-zEeeDM7N9y1fOSA" node="_Sim4ip-zEeeDM7N9y1fOSA _Sim4i5-zEeeDM7N9y1fOSA _Sim4jJ-zEeeDM7N9y1fOSA _Sim4jZ-zEeeDM7N9y1fOSA" group="_Sim4jZ-zEeeDM7N9y1fOSA">
        <ownedParameter xmi:id="_Sim4gZ-zEeeDM7N9y1fOSA" name="tester" type="_SioHiZ-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4gp-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4g5-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim4hJ-zEeeDM7N9y1fOSA" name="" type="_SimRUZ-zEeeDM7N9y1fOSA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4hZ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4hp-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4h5-zEeeDM7N9y1fOSA" target="_Sim4i5-zEeeDM7N9y1fOSA" source="_Sim4ip-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4iJ-zEeeDM7N9y1fOSA" target="_Sim4jJ-zEeeDM7N9y1fOSA" source="_Sim4z5-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4iZ-zEeeDM7N9y1fOSA" target="_Sim42J-zEeeDM7N9y1fOSA" source="_Sim4i5-zEeeDM7N9y1fOSA"/>
        <structuredNode xmi:id="_Sim4jZ-zEeeDM7N9y1fOSA" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4jp-zEeeDM7N9y1fOSA" target="_Sim4z5-zEeeDM7N9y1fOSA" source="_Sim4zJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4j5-zEeeDM7N9y1fOSA" target="_Sim435-zEeeDM7N9y1fOSA" source="_Sim4z5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4kJ-zEeeDM7N9y1fOSA" target="_Sim4mp-zEeeDM7N9y1fOSA" source="_Sim43p-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4kZ-zEeeDM7N9y1fOSA" target="_Sim43p-zEeeDM7N9y1fOSA" source="_Sim40J-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4kp-zEeeDM7N9y1fOSA" target="_Sim445-zEeeDM7N9y1fOSA" source="_Sim4z5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4k5-zEeeDM7N9y1fOSA" target="_Sim46p-zEeeDM7N9y1fOSA" source="_Sim45p-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4lJ-zEeeDM7N9y1fOSA" target="_Sim49p-zEeeDM7N9y1fOSA" source="_Sim47Z-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4lZ-zEeeDM7N9y1fOSA" target="_Sim4_J-zEeeDM7N9y1fOSA" source="_Sim48Z-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4lp-zEeeDM7N9y1fOSA" target="_Sim5AJ-zEeeDM7N9y1fOSA" source="_Sim4_5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4l5-zEeeDM7N9y1fOSA" target="_Sim5AJ-zEeeDM7N9y1fOSA" source="_Sim4-Z-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4mJ-zEeeDM7N9y1fOSA" target="_Sim40J-zEeeDM7N9y1fOSA" source="_Sim5AJ-zEeeDM7N9y1fOSA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim4mZ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4mp-zEeeDM7N9y1fOSA" name="Body" incoming="_Sim4kJ-zEeeDM7N9y1fOSA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4m5-zEeeDM7N9y1fOSA" name="ExpressionStatement@727b060">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4nJ-zEeeDM7N9y1fOSA" target="_Sim4np-zEeeDM7N9y1fOSA" source="_Sim4qp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_Sim4nZ-zEeeDM7N9y1fOSA" name="SendSignal(Start)" signal="_Sinkn5-zEeeDM7N9y1fOSA">
                <target xmi:id="_Sim4np-zEeeDM7N9y1fOSA" name="SendSignal(Start).target" incoming="_Sim4nJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4n5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4oJ-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4oZ-zEeeDM7N9y1fOSA" name="InstanceCreationExpression@2317d216">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4op-zEeeDM7N9y1fOSA" target="_Sim4xZ-zEeeDM7N9y1fOSA" source="_Sim4rp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4o5-zEeeDM7N9y1fOSA" target="_Sim4wp-zEeeDM7N9y1fOSA" source="_Sim4xZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4pJ-zEeeDM7N9y1fOSA" target="_Sim4vJ-zEeeDM7N9y1fOSA" source="_Sim4s5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4pZ-zEeeDM7N9y1fOSA" target="_Sim4tp-zEeeDM7N9y1fOSA" source="_Sim4sZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim4pp-zEeeDM7N9y1fOSA" target="_Sim4tp-zEeeDM7N9y1fOSA" source="_Sim4rZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4p5-zEeeDM7N9y1fOSA" target="_Sim4xp-zEeeDM7N9y1fOSA" source="_Sim4uJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4qJ-zEeeDM7N9y1fOSA" target="_Sim4yJ-zEeeDM7N9y1fOSA" source="_Sim4xp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4qZ-zEeeDM7N9y1fOSA" target="_Sim4qp-zEeeDM7N9y1fOSA" source="_Sim4xp-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_Sim4qp-zEeeDM7N9y1fOSA" name="Output(Output(Fork(Create(TestRunner).result)))" incoming="_Sim4qZ-zEeeDM7N9y1fOSA" outgoing="_Sim4nJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4q5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4rJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_Sim4rZ-zEeeDM7N9y1fOSA" name="Create(TestRunner)" outgoing="_Sim4pp-zEeeDM7N9y1fOSA" classifier="_SinhAp-zEeeDM7N9y1fOSA">
                  <result xmi:id="_Sim4rp-zEeeDM7N9y1fOSA" name="Create(TestRunner).result" outgoing="_Sim4op-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4r5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4sJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4sZ-zEeeDM7N9y1fOSA" name="Tuple@3c02b154" outgoing="_Sim4pZ-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim4sp-zEeeDM7N9y1fOSA" name="ReadSelf">
                    <result xmi:id="_Sim4s5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim4pJ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4tJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4tZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim4tp-zEeeDM7N9y1fOSA" name="Node(Call(TestRunner))" incoming="_Sim4pp-zEeeDM7N9y1fOSA _Sim4pZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim4t5-zEeeDM7N9y1fOSA" target="_Sim4uJ-zEeeDM7N9y1fOSA" source="_Sim4xZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_Sim4uJ-zEeeDM7N9y1fOSA" name="Output(Fork(Create(TestRunner).result))" incoming="_Sim4t5-zEeeDM7N9y1fOSA" outgoing="_Sim4p5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4uZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4up-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_Sim4u5-zEeeDM7N9y1fOSA" name="Call(TestRunner)" operation="_Sinkk5-zEeeDM7N9y1fOSA">
                    <argument xmi:id="_Sim4vJ-zEeeDM7N9y1fOSA" name="Call(TestRunner).argument(outer)" incoming="_Sim4pJ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4vZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4vp-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <result xmi:id="_Sim4v5-zEeeDM7N9y1fOSA" name="Call(TestRunner).result()" type="_SinhAp-zEeeDM7N9y1fOSA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4wJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4wZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <target xmi:id="_Sim4wp-zEeeDM7N9y1fOSA" name="Call(TestRunner).target" incoming="_Sim4o5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4w5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4xJ-zEeeDM7N9y1fOSA" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Sim4xZ-zEeeDM7N9y1fOSA" name="Fork(Create(TestRunner).result)" incoming="_Sim4op-zEeeDM7N9y1fOSA" outgoing="_Sim4o5-zEeeDM7N9y1fOSA _Sim4t5-zEeeDM7N9y1fOSA"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim4xp-zEeeDM7N9y1fOSA" name="Fork(Output(Fork(Create(TestRunner).result)))" incoming="_Sim4p5-zEeeDM7N9y1fOSA" outgoing="_Sim4qJ-zEeeDM7N9y1fOSA _Sim4qZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_Sim4x5-zEeeDM7N9y1fOSA" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_Sim4yJ-zEeeDM7N9y1fOSA" name="Start(TestRunner).object" incoming="_Sim4qJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4yZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4yp-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim4y5-zEeeDM7N9y1fOSA" name="ReadSelf">
            <result xmi:id="_Sim4zJ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim4jp-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4zZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4zp-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim4z5-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_Sim4jp-zEeeDM7N9y1fOSA" outgoing="_Sim4iJ-zEeeDM7N9y1fOSA _Sim4j5-zEeeDM7N9y1fOSA _Sim4kp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim40J-zEeeDM7N9y1fOSA" name="Super" incoming="_Sim4mJ-zEeeDM7N9y1fOSA" outgoing="_Sim4kZ-zEeeDM7N9y1fOSA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim40Z-zEeeDM7N9y1fOSA" name="ExpressionStatement@c2b056e">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim40p-zEeeDM7N9y1fOSA" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim405-zEeeDM7N9y1fOSA" target="_Sim41J-zEeeDM7N9y1fOSA" source="_Sim425-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_Sim41J-zEeeDM7N9y1fOSA" name="Output(Call(Test$method$1).result())" incoming="_Sim405-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim41Z-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim41p-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim415-zEeeDM7N9y1fOSA" name="Call(Test$method$1)" behavior="_SioGnZ-zEeeDM7N9y1fOSA">
                  <argument xmi:id="_Sim42J-zEeeDM7N9y1fOSA" name="Call(Test$method$1).argument(tester)" incoming="_Sim4iZ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim42Z-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim42p-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_Sim425-zEeeDM7N9y1fOSA" name="Call(Test$method$1).result()" outgoing="_Sim405-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim43J-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim43Z-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_Sim43p-zEeeDM7N9y1fOSA" name="Call(Statements_Accept$initialization$1)" incoming="_Sim4kZ-zEeeDM7N9y1fOSA" outgoing="_Sim4kJ-zEeeDM7N9y1fOSA" operation="_Sim5Up-zEeeDM7N9y1fOSA">
            <target xmi:id="_Sim435-zEeeDM7N9y1fOSA" name="Call(Statements_Accept$initialization$1).target" incoming="_Sim4j5-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim44J-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim44Z-zEeeDM7N9y1fOSA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim44p-zEeeDM7N9y1fOSA" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_SimRWJ-zEeeDM7N9y1fOSA">
            <object xmi:id="_Sim445-zEeeDM7N9y1fOSA" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_Sim4kp-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim45J-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim45Z-zEeeDM7N9y1fOSA" value="1"/>
            </object>
            <result xmi:id="_Sim45p-zEeeDM7N9y1fOSA" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_Sim4k5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim455-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim46J-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim46Z-zEeeDM7N9y1fOSA" name="Call(ListSize)">
            <argument xmi:id="_Sim46p-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_Sim4k5-zEeeDM7N9y1fOSA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim465-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim47J-zEeeDM7N9y1fOSA" value="*"/>
            </argument>
            <result xmi:id="_Sim47Z-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_Sim4lJ-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim47p-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim475-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim48J-zEeeDM7N9y1fOSA" name="Value(0)">
            <result xmi:id="_Sim48Z-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_Sim4lZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim48p-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim485-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Sim49J-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim49Z-zEeeDM7N9y1fOSA" name="Test(Size==0)">
            <first xmi:id="_Sim49p-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_Sim4lJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim495-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4-J-zEeeDM7N9y1fOSA" value="1"/>
            </first>
            <result xmi:id="_Sim4-Z-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_Sim4l5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4-p-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4-5-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <second xmi:id="_Sim4_J-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_Sim4lZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim4_Z-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim4_p-zEeeDM7N9y1fOSA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Sim4_5-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_Sim4lp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sim5AJ-zEeeDM7N9y1fOSA" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_Sim4lp-zEeeDM7N9y1fOSA _Sim4l5-zEeeDM7N9y1fOSA" outgoing="_Sim4mJ-zEeeDM7N9y1fOSA" decisionInputFlow="_Sim4l5-zEeeDM7N9y1fOSA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4ip-zEeeDM7N9y1fOSA" name="Input(tester)" outgoing="_Sim4h5-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" parameter="_Sim4gZ-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_Sim4i5-zEeeDM7N9y1fOSA" name="Fork(tester)" incoming="_Sim4h5-zEeeDM7N9y1fOSA" outgoing="_Sim4iZ-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim4jJ-zEeeDM7N9y1fOSA" name="Return" incoming="_Sim4iJ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" parameter="_Sim4hJ-zEeeDM7N9y1fOSA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim5AZ-zEeeDM7N9y1fOSA" name="destroy$method$1" specification="_Sim5Xp-zEeeDM7N9y1fOSA" node="_Sim5Ap-zEeeDM7N9y1fOSA" group="_Sim5Ap-zEeeDM7N9y1fOSA">
        <structuredNode xmi:id="_Sim5Ap-zEeeDM7N9y1fOSA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim5A5-zEeeDM7N9y1fOSA" name="Statements_Accept$initialization$1" specification="_Sim5Up-zEeeDM7N9y1fOSA" node="_Sim5BJ-zEeeDM7N9y1fOSA" group="_Sim5BJ-zEeeDM7N9y1fOSA">
        <structuredNode xmi:id="_Sim5BJ-zEeeDM7N9y1fOSA" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5BZ-zEeeDM7N9y1fOSA" target="_Sim5FJ-zEeeDM7N9y1fOSA" source="_Sim5EZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5Bp-zEeeDM7N9y1fOSA" target="_Sim5GJ-zEeeDM7N9y1fOSA" source="_Sim5FJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5B5-zEeeDM7N9y1fOSA" target="_Sim5JZ-zEeeDM7N9y1fOSA" source="_Sim5FJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5CJ-zEeeDM7N9y1fOSA" target="_Sim5NJ-zEeeDM7N9y1fOSA" source="_Sim5FJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5CZ-zEeeDM7N9y1fOSA" target="_Sim5O5-zEeeDM7N9y1fOSA" source="_Sim5N5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5Cp-zEeeDM7N9y1fOSA" target="_Sim5R5-zEeeDM7N9y1fOSA" source="_Sim5Pp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5C5-zEeeDM7N9y1fOSA" target="_Sim5TZ-zEeeDM7N9y1fOSA" source="_Sim5Qp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5DJ-zEeeDM7N9y1fOSA" target="_Sim5UZ-zEeeDM7N9y1fOSA" source="_Sim5UJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5DZ-zEeeDM7N9y1fOSA" target="_Sim5UZ-zEeeDM7N9y1fOSA" source="_Sim5Sp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5Dp-zEeeDM7N9y1fOSA" target="_Sim5FZ-zEeeDM7N9y1fOSA" source="_Sim5UZ-zEeeDM7N9y1fOSA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5D5-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim5EJ-zEeeDM7N9y1fOSA" name="ReadSelf">
            <result xmi:id="_Sim5EZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim5BZ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5Ep-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5E5-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sim5FJ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_Sim5BZ-zEeeDM7N9y1fOSA" outgoing="_Sim5Bp-zEeeDM7N9y1fOSA _Sim5B5-zEeeDM7N9y1fOSA _Sim5CJ-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5FZ-zEeeDM7N9y1fOSA" name="Initialization" incoming="_Sim5Dp-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5Fp-zEeeDM7N9y1fOSA" target="_Sim5G5-zEeeDM7N9y1fOSA" source="_Sim5F5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Sim5F5-zEeeDM7N9y1fOSA" name="Call(Test$initialization$1)" outgoing="_Sim5Fp-zEeeDM7N9y1fOSA" operation="_SioHf5-zEeeDM7N9y1fOSA">
              <target xmi:id="_Sim5GJ-zEeeDM7N9y1fOSA" name="Call(Test$initialization$1).target" incoming="_Sim5Bp-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5GZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Gp-zEeeDM7N9y1fOSA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5G5-zEeeDM7N9y1fOSA" name="Set(initializationFlag)" incoming="_Sim5Fp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5HJ-zEeeDM7N9y1fOSA" target="_Sim5Mp-zEeeDM7N9y1fOSA" source="_Sim5Hp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim5HZ-zEeeDM7N9y1fOSA" name="Value(true)">
                <result xmi:id="_Sim5Hp-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_Sim5HJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5H5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5IJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim5IZ-zEeeDM7N9y1fOSA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sim5Ip-zEeeDM7N9y1fOSA" name="Iterate(Write(Statements_Accept$initializationFlag$1))" inputElement="_Sim5Mp-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5I5-zEeeDM7N9y1fOSA" target="_Sim5L5-zEeeDM7N9y1fOSA" source="_Sim5Mp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5JJ-zEeeDM7N9y1fOSA" target="_Sim5KZ-zEeeDM7N9y1fOSA" source="_Sim5JZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim5JZ-zEeeDM7N9y1fOSA" name="Iterate(Write(Statements_Accept$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_Sim5B5-zEeeDM7N9y1fOSA" outgoing="_Sim5JJ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5Jp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5J5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim5KJ-zEeeDM7N9y1fOSA" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_SimRWJ-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Sim5KZ-zEeeDM7N9y1fOSA" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_Sim5JJ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5Kp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5K5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sim5LJ-zEeeDM7N9y1fOSA" name="Write(Statements_Accept$initializationFlag$1).result" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5LZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Lp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_Sim5L5-zEeeDM7N9y1fOSA" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_Sim5I5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5MJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5MZ-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sim5Mp-zEeeDM7N9y1fOSA" name="Iterate(Write(Statements_Accept$initializationFlag$1)).inputElement" incoming="_Sim5HJ-zEeeDM7N9y1fOSA" outgoing="_Sim5I5-zEeeDM7N9y1fOSA" regionAsInput="_Sim5Ip-zEeeDM7N9y1fOSA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim5M5-zEeeDM7N9y1fOSA" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_SimRWJ-zEeeDM7N9y1fOSA">
            <object xmi:id="_Sim5NJ-zEeeDM7N9y1fOSA" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_Sim5CJ-zEeeDM7N9y1fOSA" type="_SimRUZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5NZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Np-zEeeDM7N9y1fOSA" value="1"/>
            </object>
            <result xmi:id="_Sim5N5-zEeeDM7N9y1fOSA" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_Sim5CZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5OJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5OZ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim5Op-zEeeDM7N9y1fOSA" name="Call(ListSize)">
            <argument xmi:id="_Sim5O5-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_Sim5CZ-zEeeDM7N9y1fOSA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5PJ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5PZ-zEeeDM7N9y1fOSA" value="*"/>
            </argument>
            <result xmi:id="_Sim5Pp-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_Sim5Cp-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5P5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5QJ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim5QZ-zEeeDM7N9y1fOSA" name="Value(0)">
            <result xmi:id="_Sim5Qp-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_Sim5C5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5Q5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5RJ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Sim5RZ-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim5Rp-zEeeDM7N9y1fOSA" name="Test(Size==0)">
            <first xmi:id="_Sim5R5-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_Sim5Cp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5SJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5SZ-zEeeDM7N9y1fOSA" value="1"/>
            </first>
            <result xmi:id="_Sim5Sp-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_Sim5DZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5S5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5TJ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <second xmi:id="_Sim5TZ-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_Sim5C5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5Tp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5T5-zEeeDM7N9y1fOSA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Sim5UJ-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_Sim5DJ-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sim5UZ-zEeeDM7N9y1fOSA" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_Sim5DJ-zEeeDM7N9y1fOSA _Sim5DZ-zEeeDM7N9y1fOSA" outgoing="_Sim5Dp-zEeeDM7N9y1fOSA" decisionInputFlow="_Sim5DZ-zEeeDM7N9y1fOSA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_Sim5Up-zEeeDM7N9y1fOSA" name="Statements_Accept$initialization$1" visibility="protected" method="_Sim5A5-zEeeDM7N9y1fOSA"/>
      <ownedOperation xmi:id="_Sim5U5-zEeeDM7N9y1fOSA" name="Statements_Accept" visibility="public" method="_SimRW5-zEeeDM7N9y1fOSA">
        <ownedParameter xmi:id="_Sim5VJ-zEeeDM7N9y1fOSA" name="" visibility="package" type="_SimRUZ-zEeeDM7N9y1fOSA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5VZ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Vp-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5V5-zEeeDM7N9y1fOSA" name="run" visibility="public" method="_Sim4gJ-zEeeDM7N9y1fOSA">
        <ownedParameter xmi:id="_Sim5WJ-zEeeDM7N9y1fOSA" name="tester" visibility="package" type="_SioHiZ-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5WZ-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Wp-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sim5W5-zEeeDM7N9y1fOSA" name="" visibility="package" type="_SimRUZ-zEeeDM7N9y1fOSA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5XJ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5XZ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Sim5Xp-zEeeDM7N9y1fOSA" name="destroy" visibility="public" method="_Sim5AZ-zEeeDM7N9y1fOSA" redefinedOperation="_SioHiJ-zEeeDM7N9y1fOSA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Sim5X5-zEeeDM7N9y1fOSA" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_Sim5YJ-zEeeDM7N9y1fOSA" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5YZ-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Yp-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim5Y5-zEeeDM7N9y1fOSA" name="Super$method$1" specification="_Sim56p-zEeeDM7N9y1fOSA" node="_Sim5aJ-zEeeDM7N9y1fOSA _Sim5aZ-zEeeDM7N9y1fOSA" group="_Sim5aZ-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_Sim5ZJ-zEeeDM7N9y1fOSA" name="" type="_Sim5X5-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5ZZ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5Zp-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5Z5-zEeeDM7N9y1fOSA" target="_Sim5aJ-zEeeDM7N9y1fOSA" source="_Sim5ep-zEeeDM7N9y1fOSA"/>
          <structuredNode xmi:id="_Sim5aZ-zEeeDM7N9y1fOSA" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5ap-zEeeDM7N9y1fOSA" target="_Sim5ep-zEeeDM7N9y1fOSA" source="_Sim5d5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5a5-zEeeDM7N9y1fOSA" target="_Sim5fJ-zEeeDM7N9y1fOSA" source="_Sim5ep-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5bJ-zEeeDM7N9y1fOSA" target="_Sim5dZ-zEeeDM7N9y1fOSA" source="_Sim5e5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5bZ-zEeeDM7N9y1fOSA" target="_Sim5gJ-zEeeDM7N9y1fOSA" source="_Sim5ep-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5bp-zEeeDM7N9y1fOSA" target="_Sim5h5-zEeeDM7N9y1fOSA" source="_Sim5g5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5b5-zEeeDM7N9y1fOSA" target="_Sim5k5-zEeeDM7N9y1fOSA" source="_Sim5ip-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5cJ-zEeeDM7N9y1fOSA" target="_Sim5mZ-zEeeDM7N9y1fOSA" source="_Sim5jp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5cZ-zEeeDM7N9y1fOSA" target="_Sim5nZ-zEeeDM7N9y1fOSA" source="_Sim5nJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5cp-zEeeDM7N9y1fOSA" target="_Sim5nZ-zEeeDM7N9y1fOSA" source="_Sim5lp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5c5-zEeeDM7N9y1fOSA" target="_Sim5e5-zEeeDM7N9y1fOSA" source="_Sim5nZ-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5dJ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5dZ-zEeeDM7N9y1fOSA" name="Body" incoming="_Sim5bJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim5dp-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_Sim5d5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim5ap-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5eJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5eZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Sim5ep-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_Sim5ap-zEeeDM7N9y1fOSA" outgoing="_Sim5Z5-zEeeDM7N9y1fOSA _Sim5a5-zEeeDM7N9y1fOSA _Sim5bZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Sim5e5-zEeeDM7N9y1fOSA" name="Call(Super$initialization$1)" incoming="_Sim5c5-zEeeDM7N9y1fOSA" outgoing="_Sim5bJ-zEeeDM7N9y1fOSA" operation="_Sim56Z-zEeeDM7N9y1fOSA">
              <target xmi:id="_Sim5fJ-zEeeDM7N9y1fOSA" name="Call(Super$initialization$1).target" incoming="_Sim5a5-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5fZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5fp-zEeeDM7N9y1fOSA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim5f5-zEeeDM7N9y1fOSA" name="Read(Super$initializationFlag$1)" structuralFeature="_Sim5YJ-zEeeDM7N9y1fOSA">
              <object xmi:id="_Sim5gJ-zEeeDM7N9y1fOSA" name="Read(Super$initializationFlag$1).object" incoming="_Sim5bZ-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5gZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5gp-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_Sim5g5-zEeeDM7N9y1fOSA" name="Read(Super$initializationFlag$1).result" outgoing="_Sim5bp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5hJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5hZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim5hp-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_Sim5h5-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_Sim5bp-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5iJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5iZ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_Sim5ip-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_Sim5b5-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5i5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5jJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim5jZ-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_Sim5jp-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_Sim5cJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5j5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5kJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Sim5kZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim5kp-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_Sim5k5-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_Sim5b5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5lJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5lZ-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_Sim5lp-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_Sim5cp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5l5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5mJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_Sim5mZ-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_Sim5cJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5mp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5m5-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Sim5nJ-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_Sim5cZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Sim5nZ-zEeeDM7N9y1fOSA" name="Decision(Test(Super$initializationFlag$1))" incoming="_Sim5cZ-zEeeDM7N9y1fOSA _Sim5cp-zEeeDM7N9y1fOSA" outgoing="_Sim5c5-zEeeDM7N9y1fOSA" decisionInputFlow="_Sim5cp-zEeeDM7N9y1fOSA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sim5aJ-zEeeDM7N9y1fOSA" name="Return" incoming="_Sim5Z5-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" parameter="_Sim5ZJ-zEeeDM7N9y1fOSA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim5np-zEeeDM7N9y1fOSA" name="destroy$method$1" specification="_Sim57p-zEeeDM7N9y1fOSA" node="_Sim5n5-zEeeDM7N9y1fOSA" group="_Sim5n5-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_Sim5n5-zEeeDM7N9y1fOSA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim5oJ-zEeeDM7N9y1fOSA" name="Super$initialization$1" specification="_Sim56Z-zEeeDM7N9y1fOSA" node="_Sim5oZ-zEeeDM7N9y1fOSA" group="_Sim5oZ-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_Sim5oZ-zEeeDM7N9y1fOSA" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5op-zEeeDM7N9y1fOSA" target="_Sim5sJ-zEeeDM7N9y1fOSA" source="_Sim5rZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5o5-zEeeDM7N9y1fOSA" target="_Sim5vJ-zEeeDM7N9y1fOSA" source="_Sim5sJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5pJ-zEeeDM7N9y1fOSA" target="_Sim5y5-zEeeDM7N9y1fOSA" source="_Sim5sJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5pZ-zEeeDM7N9y1fOSA" target="_Sim50p-zEeeDM7N9y1fOSA" source="_Sim5zp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5pp-zEeeDM7N9y1fOSA" target="_Sim53p-zEeeDM7N9y1fOSA" source="_Sim51Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5p5-zEeeDM7N9y1fOSA" target="_Sim55J-zEeeDM7N9y1fOSA" source="_Sim52Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5qJ-zEeeDM7N9y1fOSA" target="_Sim56J-zEeeDM7N9y1fOSA" source="_Sim555-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5qZ-zEeeDM7N9y1fOSA" target="_Sim56J-zEeeDM7N9y1fOSA" source="_Sim54Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim5qp-zEeeDM7N9y1fOSA" target="_Sim5sZ-zEeeDM7N9y1fOSA" source="_Sim56J-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim5q5-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim5rJ-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_Sim5rZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim5op-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5rp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5r5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Sim5sJ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_Sim5op-zEeeDM7N9y1fOSA" outgoing="_Sim5o5-zEeeDM7N9y1fOSA _Sim5pJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5sZ-zEeeDM7N9y1fOSA" name="Initialization" incoming="_Sim5qp-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim5sp-zEeeDM7N9y1fOSA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5s5-zEeeDM7N9y1fOSA" target="_Sim5yZ-zEeeDM7N9y1fOSA" source="_Sim5tZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim5tJ-zEeeDM7N9y1fOSA" name="Value(true)">
                  <result xmi:id="_Sim5tZ-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_Sim5s5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5tp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5t5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim5uJ-zEeeDM7N9y1fOSA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_Sim5uZ-zEeeDM7N9y1fOSA" name="Iterate(Write(Super$initializationFlag$1))" inputElement="_Sim5yZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5up-zEeeDM7N9y1fOSA" target="_Sim5xp-zEeeDM7N9y1fOSA" source="_Sim5yZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim5u5-zEeeDM7N9y1fOSA" target="_Sim5wJ-zEeeDM7N9y1fOSA" source="_Sim5vJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim5vJ-zEeeDM7N9y1fOSA" name="Iterate(Write(Super$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_Sim5o5-zEeeDM7N9y1fOSA" outgoing="_Sim5u5-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5vZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5vp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim5v5-zEeeDM7N9y1fOSA" name="Write(Super$initializationFlag$1)" structuralFeature="_Sim5YJ-zEeeDM7N9y1fOSA">
                    <object xmi:id="_Sim5wJ-zEeeDM7N9y1fOSA" name="Write(Super$initializationFlag$1).object" incoming="_Sim5u5-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5wZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5wp-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Sim5w5-zEeeDM7N9y1fOSA" name="Write(Super$initializationFlag$1).result" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5xJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5xZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_Sim5xp-zEeeDM7N9y1fOSA" name="Write(Super$initializationFlag$1).value" incoming="_Sim5up-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5x5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5yJ-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Sim5yZ-zEeeDM7N9y1fOSA" name="Iterate(Write(Super$initializationFlag$1)).inputElement" incoming="_Sim5s5-zEeeDM7N9y1fOSA" outgoing="_Sim5up-zEeeDM7N9y1fOSA" regionAsInput="_Sim5uZ-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim5yp-zEeeDM7N9y1fOSA" name="Read(Super$initializationFlag$1)" structuralFeature="_Sim5YJ-zEeeDM7N9y1fOSA">
              <object xmi:id="_Sim5y5-zEeeDM7N9y1fOSA" name="Read(Super$initializationFlag$1).object" incoming="_Sim5pJ-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5zJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5zZ-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_Sim5zp-zEeeDM7N9y1fOSA" name="Read(Super$initializationFlag$1).result" outgoing="_Sim5pZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5z5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim50J-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim50Z-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_Sim50p-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_Sim5pZ-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim505-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim51J-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_Sim51Z-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_Sim5pp-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim51p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim515-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim52J-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_Sim52Z-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_Sim5p5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim52p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim525-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Sim53J-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Sim53Z-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_Sim53p-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_Sim5pp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim535-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim54J-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_Sim54Z-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_Sim5qZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim54p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim545-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_Sim55J-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_Sim5p5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim55Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim55p-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Sim555-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_Sim5qJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Sim56J-zEeeDM7N9y1fOSA" name="Decision(Test(Super$initializationFlag$1))" incoming="_Sim5qJ-zEeeDM7N9y1fOSA _Sim5qZ-zEeeDM7N9y1fOSA" outgoing="_Sim5qp-zEeeDM7N9y1fOSA" decisionInputFlow="_Sim5qZ-zEeeDM7N9y1fOSA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Sim56Z-zEeeDM7N9y1fOSA" name="Super$initialization$1" visibility="protected" method="_Sim5oJ-zEeeDM7N9y1fOSA"/>
        <ownedOperation xmi:id="_Sim56p-zEeeDM7N9y1fOSA" name="Super" visibility="public" method="_Sim5Y5-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_Sim565-zEeeDM7N9y1fOSA" name="" visibility="package" type="_Sim5X5-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim57J-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim57Z-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Sim57p-zEeeDM7N9y1fOSA" name="destroy" visibility="public" method="_Sim5np-zEeeDM7N9y1fOSA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_Sim575-zEeeDM7N9y1fOSA" name="SignalNewArrival" visibility="public">
          <ownedAttribute xmi:id="_Sim58J-zEeeDM7N9y1fOSA" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim58Z-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim58p-zEeeDM7N9y1fOSA" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_Sim585-zEeeDM7N9y1fOSA" name="SignalTermination" visibility="public"/>
        <ownedReception xmi:id="_Sim59J-zEeeDM7N9y1fOSA" name="SignalTermination" signal="_Sim585-zEeeDM7N9y1fOSA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_Sim59Z-zEeeDM7N9y1fOSA" name="MyTest" visibility="private" classifierBehavior="_Sim6FZ-zEeeDM7N9y1fOSA" isActive="true">
        <generalization xmi:id="_Sim59p-zEeeDM7N9y1fOSA" general="_Sim5X5-zEeeDM7N9y1fOSA"/>
        <ownedAttribute xmi:id="_Sim595-zEeeDM7N9y1fOSA" name="MyTest$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5-J-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5-Z-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim5-p-zEeeDM7N9y1fOSA" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5-5-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5_J-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim5_Z-zEeeDM7N9y1fOSA" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim5_p-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim5_5-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6AJ-zEeeDM7N9y1fOSA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6AZ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6Ap-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6A5-zEeeDM7N9y1fOSA" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6BJ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6BZ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6Bp-zEeeDM7N9y1fOSA" name="arrival" visibility="public" type="_Sim575-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6B5-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6CJ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6CZ-zEeeDM7N9y1fOSA" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6Cp-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6C5-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6DJ-zEeeDM7N9y1fOSA" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6DZ-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6Dp-zEeeDM7N9y1fOSA" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6D5-zEeeDM7N9y1fOSA" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6EJ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6EZ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Sim6Ep-zEeeDM7N9y1fOSA" name="tester" visibility="public" type="_SinhAp-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6E5-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6FJ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sim6FZ-zEeeDM7N9y1fOSA" name="MyTest$classifierBehavior$1" visibility="private" isActive="true" node="_Sim6Fp-zEeeDM7N9y1fOSA" group="_Sim6Fp-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_Sim6Fp-zEeeDM7N9y1fOSA" name="Body(MyTest$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6F5-zEeeDM7N9y1fOSA" target="_Sim6Yp-zEeeDM7N9y1fOSA" source="_Sim6SZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6GJ-zEeeDM7N9y1fOSA" target="_Sim6UZ-zEeeDM7N9y1fOSA" source="_Sim6Rp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6GZ-zEeeDM7N9y1fOSA" target="_Sim6c5-zEeeDM7N9y1fOSA" source="_Sim6UZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Gp-zEeeDM7N9y1fOSA" target="_Sim6wJ-zEeeDM7N9y1fOSA" source="_Sim685-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6G5-zEeeDM7N9y1fOSA" target="_Sim60p-zEeeDM7N9y1fOSA" source="_Sim685-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6HJ-zEeeDM7N9y1fOSA" target="_Sim6w5-zEeeDM7N9y1fOSA" source="_Sim6SZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6HZ-zEeeDM7N9y1fOSA" target="_Sim6y5-zEeeDM7N9y1fOSA" source="_Sim6dZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Hp-zEeeDM7N9y1fOSA" target="_Sim67J-zEeeDM7N9y1fOSA" source="_Sim685-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6H5-zEeeDM7N9y1fOSA" target="_Sim65Z-zEeeDM7N9y1fOSA" source="_Sim6SZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6IJ-zEeeDM7N9y1fOSA" target="_Sim6fJ-zEeeDM7N9y1fOSA" source="_Sim6c5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6IZ-zEeeDM7N9y1fOSA" target="_Sim7Dp-zEeeDM7N9y1fOSA" source="_Sim69Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6Ip-zEeeDM7N9y1fOSA" target="_Sim6_Z-zEeeDM7N9y1fOSA" source="_Sim6fJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6I5-zEeeDM7N9y1fOSA" target="_Sim7H5-zEeeDM7N9y1fOSA" source="_Sim6_Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6JJ-zEeeDM7N9y1fOSA" target="_Sim7JJ-zEeeDM7N9y1fOSA" source="_Sim7H5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6JZ-zEeeDM7N9y1fOSA" target="_Sim7P5-zEeeDM7N9y1fOSA" source="_Sim7J5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6Jp-zEeeDM7N9y1fOSA" target="_Sim7Lp-zEeeDM7N9y1fOSA" source="_Sim7JJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6J5-zEeeDM7N9y1fOSA" target="_Sim8J5-zEeeDM7N9y1fOSA" source="_Sim69J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6KJ-zEeeDM7N9y1fOSA" target="_Sim8Kp-zEeeDM7N9y1fOSA" source="_Sim69Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6KZ-zEeeDM7N9y1fOSA" target="_Sim8LZ-zEeeDM7N9y1fOSA" source="_Sim7J5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6Kp-zEeeDM7N9y1fOSA" target="_Sim7UJ-zEeeDM7N9y1fOSA" source="_Sim7Lp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6K5-zEeeDM7N9y1fOSA" target="_Sim9Op-zEeeDM7N9y1fOSA" source="_Sim69J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6LJ-zEeeDM7N9y1fOSA" target="_Sim9PZ-zEeeDM7N9y1fOSA" source="_Sim69Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6LZ-zEeeDM7N9y1fOSA" target="_Sim9WJ-zEeeDM7N9y1fOSA" source="_Sim9T5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Lp-zEeeDM7N9y1fOSA" target="_Sim9Q5-zEeeDM7N9y1fOSA" source="_Sim7J5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6L5-zEeeDM7N9y1fOSA" target="_Sim9Rp-zEeeDM7N9y1fOSA" source="_Sim8UZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6MJ-zEeeDM7N9y1fOSA" target="_Sim8kZ-zEeeDM7N9y1fOSA" source="_Sim8tJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6MZ-zEeeDM7N9y1fOSA" target="_Sim8gJ-zEeeDM7N9y1fOSA" source="_Sim7UJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Mp-zEeeDM7N9y1fOSA" target="_Sinf6J-zEeeDM7N9y1fOSA" source="_Sinf2Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6M5-zEeeDM7N9y1fOSA" target="_Sinf6Z-zEeeDM7N9y1fOSA" source="_Sinf3J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6NJ-zEeeDM7N9y1fOSA" target="_Sinf6p-zEeeDM7N9y1fOSA" source="_Sinf35-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6NZ-zEeeDM7N9y1fOSA" target="_Sinf65-zEeeDM7N9y1fOSA" source="_Sinf4p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Np-zEeeDM7N9y1fOSA" target="_Sinf7J-zEeeDM7N9y1fOSA" source="_Sinf5Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6N5-zEeeDM7N9y1fOSA" target="_Sim9kJ-zEeeDM7N9y1fOSA" source="_Sim69J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6OJ-zEeeDM7N9y1fOSA" target="_Sim9mJ-zEeeDM7N9y1fOSA" source="_Sim69Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6OZ-zEeeDM7N9y1fOSA" target="_Sim9oJ-zEeeDM7N9y1fOSA" source="_Sim9WJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Op-zEeeDM7N9y1fOSA" target="_Sim9qJ-zEeeDM7N9y1fOSA" source="_Sim7J5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6O5-zEeeDM7N9y1fOSA" target="_Sinfd5-zEeeDM7N9y1fOSA" source="_Sim8UZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6PJ-zEeeDM7N9y1fOSA" target="_SinfsZ-zEeeDM7N9y1fOSA" source="_Sim69J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6PZ-zEeeDM7N9y1fOSA" target="_SinfuZ-zEeeDM7N9y1fOSA" source="_Sim69Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Pp-zEeeDM7N9y1fOSA" target="_SinfwZ-zEeeDM7N9y1fOSA" source="_Sim9WJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6P5-zEeeDM7N9y1fOSA" target="_SinfyZ-zEeeDM7N9y1fOSA" source="_Sim7J5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6QJ-zEeeDM7N9y1fOSA" target="_Sinf0Z-zEeeDM7N9y1fOSA" source="_Sim8UZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6QZ-zEeeDM7N9y1fOSA" target="_Sim9WZ-zEeeDM7N9y1fOSA" source="_Sim8gJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6Qp-zEeeDM7N9y1fOSA" target="_Sinf7Z-zEeeDM7N9y1fOSA" source="_Sim9WZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Q5-zEeeDM7N9y1fOSA" target="_SingCJ-zEeeDM7N9y1fOSA" source="_Sinf8J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6RJ-zEeeDM7N9y1fOSA" target="_Sinf95-zEeeDM7N9y1fOSA" source="_Sinf7Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6RZ-zEeeDM7N9y1fOSA" target="_SingGZ-zEeeDM7N9y1fOSA" source="_Sinf95-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6Rp-zEeeDM7N9y1fOSA" name="AcceptStatement@42d07888" outgoing="_Sim6GJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6R5-zEeeDM7N9y1fOSA" target="_Sim6Sp-zEeeDM7N9y1fOSA" source="_Sim6UJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6SJ-zEeeDM7N9y1fOSA" target="_Sim6SZ-zEeeDM7N9y1fOSA" source="_Sim6S5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim6SZ-zEeeDM7N9y1fOSA" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_Sim6SJ-zEeeDM7N9y1fOSA" outgoing="_Sim6F5-zEeeDM7N9y1fOSA _Sim6HJ-zEeeDM7N9y1fOSA _Sim6H5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim6Sp-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival)" incoming="_Sim6R5-zEeeDM7N9y1fOSA">
                <result xmi:id="_Sim6S5-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_Sim6SJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6TJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6TZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <trigger xmi:id="_Sim6Tp-zEeeDM7N9y1fOSA" event="_SioGgp-zEeeDM7N9y1fOSA"/>
                <trigger xmi:id="_Sim6T5-zEeeDM7N9y1fOSA" event="_SioGg5-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sim6UJ-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_Sim6R5-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6UZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@31aae9ba" incoming="_Sim6GJ-zEeeDM7N9y1fOSA" outgoing="_Sim6GZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6Up-zEeeDM7N9y1fOSA" target="_Sim6XJ-zEeeDM7N9y1fOSA" source="_Sim6WJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6U5-zEeeDM7N9y1fOSA" target="_Sim6ZZ-zEeeDM7N9y1fOSA" source="_Sim6Yp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6VJ-zEeeDM7N9y1fOSA" target="_Sim6aZ-zEeeDM7N9y1fOSA" source="_Sim6X5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6VZ-zEeeDM7N9y1fOSA" target="_Sim6Vp-zEeeDM7N9y1fOSA" source="_Sim6cp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6Vp-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@445d1575)" incoming="_Sim6VZ-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim6V5-zEeeDM7N9y1fOSA" name="ReadSelf">
                  <result xmi:id="_Sim6WJ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim6Up-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6WZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6Wp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sim6W5-zEeeDM7N9y1fOSA" name="Clear(sig)" structuralFeature="_Sim5-p-zEeeDM7N9y1fOSA">
                <object xmi:id="_Sim6XJ-zEeeDM7N9y1fOSA" name="Clear(sig).object" incoming="_Sim6Up-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6XZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6Xp-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_Sim6X5-zEeeDM7N9y1fOSA" name="Clear(sig).result" outgoing="_Sim6VJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6YJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6YZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim6Yp-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@445d1575)" incoming="_Sim6F5-zEeeDM7N9y1fOSA" outgoing="_Sim6U5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6Y5-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6ZJ-zEeeDM7N9y1fOSA" target="_Sim6b5-zEeeDM7N9y1fOSA" source="_Sim6ZZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim6ZZ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::sig).input(MyTest::sig)" incoming="_Sim6U5-zEeeDM7N9y1fOSA" outgoing="_Sim6ZJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6Zp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6Z5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim6aJ-zEeeDM7N9y1fOSA" name="Write(sig)" structuralFeature="_Sim5-p-zEeeDM7N9y1fOSA" isReplaceAll="true">
                  <object xmi:id="_Sim6aZ-zEeeDM7N9y1fOSA" name="Write(sig).object" incoming="_Sim6VJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6ap-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6a5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sim6bJ-zEeeDM7N9y1fOSA" name="Write(sig).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6bZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6bp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_Sim6b5-zEeeDM7N9y1fOSA" name="Write(sig).value" incoming="_Sim6ZJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6cJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6cZ-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6cp-zEeeDM7N9y1fOSA" name="RightHandSide@6573178b" outgoing="_Sim6VZ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6c5-zEeeDM7N9y1fOSA" name="ExpressionStatement@4b191631" incoming="_Sim6GZ-zEeeDM7N9y1fOSA" outgoing="_Sim6IJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6dJ-zEeeDM7N9y1fOSA" target="_Sim6dZ-zEeeDM7N9y1fOSA" source="_Sim6eJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim6dZ-zEeeDM7N9y1fOSA" name="Fork(terminate)@65b94ceb" incoming="_Sim6dJ-zEeeDM7N9y1fOSA" outgoing="_Sim6HZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6dp-zEeeDM7N9y1fOSA" name="RightHandSide@7bbcdf01">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim6d5-zEeeDM7N9y1fOSA" name="Value(false)">
                  <result xmi:id="_Sim6eJ-zEeeDM7N9y1fOSA" name="Value(false).result" outgoing="_Sim6dJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6eZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6ep-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim6e5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6fJ-zEeeDM7N9y1fOSA" name="AcceptStatement@73e492dc" incoming="_Sim6IJ-zEeeDM7N9y1fOSA" outgoing="_Sim6Ip-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6fZ-zEeeDM7N9y1fOSA" target="_Sim62J-zEeeDM7N9y1fOSA" source="_Sim61Z-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6fp-zEeeDM7N9y1fOSA" target="_Sim6lJ-zEeeDM7N9y1fOSA" source="_Sim62J-zEeeDM7N9y1fOSA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6f5-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6gJ-zEeeDM7N9y1fOSA" target="_Sim6jp-zEeeDM7N9y1fOSA" source="_Sim6xp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6gZ-zEeeDM7N9y1fOSA" target="_Sim6kZ-zEeeDM7N9y1fOSA" source="_Sim6zp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6gp-zEeeDM7N9y1fOSA" target="_Sim68p-zEeeDM7N9y1fOSA" source="_Sim675-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6g5-zEeeDM7N9y1fOSA" target="_Sim62Z-zEeeDM7N9y1fOSA" source="_Sim68p-zEeeDM7N9y1fOSA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6hJ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6hZ-zEeeDM7N9y1fOSA" target="_Sim62J-zEeeDM7N9y1fOSA" source="_Sim68p-zEeeDM7N9y1fOSA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sim6hp-zEeeDM7N9y1fOSA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6h5-zEeeDM7N9y1fOSA" target="_Sim6jp-zEeeDM7N9y1fOSA" source="_Sim66J-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6iJ-zEeeDM7N9y1fOSA" target="_Sim6kZ-zEeeDM7N9y1fOSA" source="_Sim63J-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6iZ-zEeeDM7N9y1fOSA" target="_Sim69J-zEeeDM7N9y1fOSA" source="_Sim6jp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6ip-zEeeDM7N9y1fOSA" target="_Sim69Z-zEeeDM7N9y1fOSA" source="_Sim6kZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6i5-zEeeDM7N9y1fOSA" target="_Sim69p-zEeeDM7N9y1fOSA" source="_Sim6_J-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6jJ-zEeeDM7N9y1fOSA" target="_Sim68p-zEeeDM7N9y1fOSA" source="_Sim69p-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6jZ-zEeeDM7N9y1fOSA" target="_Sim685-zEeeDM7N9y1fOSA" source="_Sim695-zEeeDM7N9y1fOSA"/>
              <structuredNodeOutput xmi:id="_Sim6jp-zEeeDM7N9y1fOSA" name="AcceptStatement@73e492dc.output(sig)" incoming="_Sim6gJ-zEeeDM7N9y1fOSA _Sim6h5-zEeeDM7N9y1fOSA" outgoing="_Sim6iZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6j5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6kJ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_Sim6kZ-zEeeDM7N9y1fOSA" name="AcceptStatement@73e492dc.output(terminate)" incoming="_Sim6gZ-zEeeDM7N9y1fOSA _Sim6iJ-zEeeDM7N9y1fOSA" outgoing="_Sim6ip-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6kp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6k5-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6lJ-zEeeDM7N9y1fOSA" name="AcceptBlock(SignalNewArrival)" incoming="_Sim6fp-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6lZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@2e30cdfe">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6lp-zEeeDM7N9y1fOSA" target="_Sim6oZ-zEeeDM7N9y1fOSA" source="_Sim6nZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6l5-zEeeDM7N9y1fOSA" target="_Sim6qp-zEeeDM7N9y1fOSA" source="_Sim6p5-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6mJ-zEeeDM7N9y1fOSA" target="_Sim6rp-zEeeDM7N9y1fOSA" source="_Sim6pJ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6mZ-zEeeDM7N9y1fOSA" target="_Sim6p5-zEeeDM7N9y1fOSA" source="_Sim6vZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Sim6mp-zEeeDM7N9y1fOSA" target="_Sim6m5-zEeeDM7N9y1fOSA" source="_Sim6t5-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6m5-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@2cd9e389)" incoming="_Sim6mp-zEeeDM7N9y1fOSA">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim6nJ-zEeeDM7N9y1fOSA" name="ReadSelf">
                      <result xmi:id="_Sim6nZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim6lp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6np-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6n5-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sim6oJ-zEeeDM7N9y1fOSA" name="Clear(name)" structuralFeature="_Sim6AJ-zEeeDM7N9y1fOSA">
                    <object xmi:id="_Sim6oZ-zEeeDM7N9y1fOSA" name="Clear(name).object" incoming="_Sim6lp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6op-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6o5-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Sim6pJ-zEeeDM7N9y1fOSA" name="Clear(name).result" outgoing="_Sim6mJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6pZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6pp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Sim6p5-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@2cd9e389)" incoming="_Sim6mZ-zEeeDM7N9y1fOSA" outgoing="_Sim6l5-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6qJ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6qZ-zEeeDM7N9y1fOSA" target="_Sim6tJ-zEeeDM7N9y1fOSA" source="_Sim6qp-zEeeDM7N9y1fOSA"/>
                    <structuredNodeInput xmi:id="_Sim6qp-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::name).input(MyTest::name)" incoming="_Sim6l5-zEeeDM7N9y1fOSA" outgoing="_Sim6qZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6q5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6rJ-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim6rZ-zEeeDM7N9y1fOSA" name="Write(name)" structuralFeature="_Sim6AJ-zEeeDM7N9y1fOSA" isReplaceAll="true">
                      <object xmi:id="_Sim6rp-zEeeDM7N9y1fOSA" name="Write(name).object" incoming="_Sim6mJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6r5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6sJ-zEeeDM7N9y1fOSA" value="1"/>
                      </object>
                      <result xmi:id="_Sim6sZ-zEeeDM7N9y1fOSA" name="Write(name).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6sp-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6s5-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <value xmi:id="_Sim6tJ-zEeeDM7N9y1fOSA" name="Write(name).value" incoming="_Sim6qZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6tZ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6tp-zEeeDM7N9y1fOSA" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6t5-zEeeDM7N9y1fOSA" name="RightHandSide@4804ec33" outgoing="_Sim6mp-zEeeDM7N9y1fOSA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6uJ-zEeeDM7N9y1fOSA" target="_Sim6up-zEeeDM7N9y1fOSA" source="_Sim6wJ-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim6uZ-zEeeDM7N9y1fOSA" name="Read(name)" structuralFeature="_Sim58J-zEeeDM7N9y1fOSA">
                      <object xmi:id="_Sim6up-zEeeDM7N9y1fOSA" name="Read(name).object" incoming="_Sim6uJ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6u5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6vJ-zEeeDM7N9y1fOSA" value="1"/>
                      </object>
                      <result xmi:id="_Sim6vZ-zEeeDM7N9y1fOSA" name="Read(name).result" outgoing="_Sim6mZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6vp-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6v5-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim6wJ-zEeeDM7N9y1fOSA" name="Fork()" incoming="_Sim6Gp-zEeeDM7N9y1fOSA" outgoing="_Sim6uJ-zEeeDM7N9y1fOSA"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6wZ-zEeeDM7N9y1fOSA" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6wp-zEeeDM7N9y1fOSA" target="_Sim6xp-zEeeDM7N9y1fOSA" source="_Sim6w5-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim6w5-zEeeDM7N9y1fOSA" name="Passthru(sig).input" incoming="_Sim6HJ-zEeeDM7N9y1fOSA" outgoing="_Sim6wp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6xJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6xZ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim6xp-zEeeDM7N9y1fOSA" name="Passthru(sig).output" incoming="_Sim6wp-zEeeDM7N9y1fOSA" outgoing="_Sim6gJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6x5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6yJ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6yZ-zEeeDM7N9y1fOSA" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6yp-zEeeDM7N9y1fOSA" target="_Sim6zp-zEeeDM7N9y1fOSA" source="_Sim6y5-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim6y5-zEeeDM7N9y1fOSA" name="Passthru(terminate).input" incoming="_Sim6HZ-zEeeDM7N9y1fOSA" outgoing="_Sim6yp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6zJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6zZ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim6zp-zEeeDM7N9y1fOSA" name="Passthru(terminate).output" incoming="_Sim6yp-zEeeDM7N9y1fOSA" outgoing="_Sim6gZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6z5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim60J-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sim60Z-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_Sim575-zEeeDM7N9y1fOSA">
                <object xmi:id="_Sim60p-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_Sim6G5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim605-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim61J-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_Sim61Z-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_Sim6fZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim61p-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim615-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_Sim62J-zEeeDM7N9y1fOSA" name="Decision(Test(SignalNewArrival))" incoming="_Sim6fZ-zEeeDM7N9y1fOSA _Sim6hZ-zEeeDM7N9y1fOSA" outgoing="_Sim6fp-zEeeDM7N9y1fOSA" decisionInputFlow="_Sim6fZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim62Z-zEeeDM7N9y1fOSA" name="AcceptBlock(SignalTermination)" incoming="_Sim6g5-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim62p-zEeeDM7N9y1fOSA" name="ExpressionStatement@53a11e3a">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim625-zEeeDM7N9y1fOSA" target="_Sim63J-zEeeDM7N9y1fOSA" source="_Sim635-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_Sim63J-zEeeDM7N9y1fOSA" name="Fork(terminate)@580e6f1b" incoming="_Sim625-zEeeDM7N9y1fOSA" outgoing="_Sim6iJ-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim63Z-zEeeDM7N9y1fOSA" name="RightHandSide@13563e65">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim63p-zEeeDM7N9y1fOSA" name="Value(true)">
                      <result xmi:id="_Sim635-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_Sim625-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim64J-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim64Z-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim64p-zEeeDM7N9y1fOSA" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim645-zEeeDM7N9y1fOSA" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim65J-zEeeDM7N9y1fOSA" target="_Sim66J-zEeeDM7N9y1fOSA" source="_Sim65Z-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim65Z-zEeeDM7N9y1fOSA" name="Passthru(sig).input" incoming="_Sim6H5-zEeeDM7N9y1fOSA" outgoing="_Sim65J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim65p-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim655-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim66J-zEeeDM7N9y1fOSA" name="Passthru(sig).output" incoming="_Sim65J-zEeeDM7N9y1fOSA" outgoing="_Sim6h5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim66Z-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim66p-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sim665-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_Sim585-zEeeDM7N9y1fOSA">
                <object xmi:id="_Sim67J-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_Sim6Hp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim67Z-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim67p-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_Sim675-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_Sim6gp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim68J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim68Z-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_Sim68p-zEeeDM7N9y1fOSA" name="Decision(Test(SignalTermination))" incoming="_Sim6gp-zEeeDM7N9y1fOSA _Sim6jJ-zEeeDM7N9y1fOSA" outgoing="_Sim6g5-zEeeDM7N9y1fOSA _Sim6hZ-zEeeDM7N9y1fOSA" decisionInputFlow="_Sim6gp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim685-zEeeDM7N9y1fOSA" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_Sim6jZ-zEeeDM7N9y1fOSA" outgoing="_Sim6Gp-zEeeDM7N9y1fOSA _Sim6G5-zEeeDM7N9y1fOSA _Sim6Hp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim69J-zEeeDM7N9y1fOSA" name="Fork(sig)" incoming="_Sim6iZ-zEeeDM7N9y1fOSA" outgoing="_Sim6J5-zEeeDM7N9y1fOSA _Sim6K5-zEeeDM7N9y1fOSA _Sim6N5-zEeeDM7N9y1fOSA _Sim6PJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim69Z-zEeeDM7N9y1fOSA" name="Fork(terminate)" incoming="_Sim6ip-zEeeDM7N9y1fOSA" outgoing="_Sim6IZ-zEeeDM7N9y1fOSA _Sim6KJ-zEeeDM7N9y1fOSA _Sim6LJ-zEeeDM7N9y1fOSA _Sim6OJ-zEeeDM7N9y1fOSA _Sim6PZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim69p-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival)" incoming="_Sim6i5-zEeeDM7N9y1fOSA" outgoing="_Sim6jJ-zEeeDM7N9y1fOSA">
                <result xmi:id="_Sim695-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_Sim6jZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim6-J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim6-Z-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <trigger xmi:id="_Sim6-p-zEeeDM7N9y1fOSA" event="_SioGhJ-zEeeDM7N9y1fOSA"/>
                <trigger xmi:id="_Sim6-5-zEeeDM7N9y1fOSA" event="_SioGhZ-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sim6_J-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_Sim6i5-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim6_Z-zEeeDM7N9y1fOSA" name="ExpressionStatement@67c43c2f" incoming="_Sim6Ip-zEeeDM7N9y1fOSA" outgoing="_Sim6I5-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6_p-zEeeDM7N9y1fOSA" target="_Sim7CJ-zEeeDM7N9y1fOSA" source="_Sim7BJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim6_5-zEeeDM7N9y1fOSA" target="_Sim7EZ-zEeeDM7N9y1fOSA" source="_Sim7Dp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7AJ-zEeeDM7N9y1fOSA" target="_Sim7FZ-zEeeDM7N9y1fOSA" source="_Sim7C5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7AZ-zEeeDM7N9y1fOSA" target="_Sim7Ap-zEeeDM7N9y1fOSA" source="_Sim7Hp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7Ap-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@40b551b9)" incoming="_Sim7AZ-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim7A5-zEeeDM7N9y1fOSA" name="ReadSelf">
                  <result xmi:id="_Sim7BJ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim6_p-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7BZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7Bp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sim7B5-zEeeDM7N9y1fOSA" name="Clear(terminate)" structuralFeature="_Sim6A5-zEeeDM7N9y1fOSA">
                <object xmi:id="_Sim7CJ-zEeeDM7N9y1fOSA" name="Clear(terminate).object" incoming="_Sim6_p-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7CZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7Cp-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_Sim7C5-zEeeDM7N9y1fOSA" name="Clear(terminate).result" outgoing="_Sim7AJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7DJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7DZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim7Dp-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@40b551b9)" incoming="_Sim6IZ-zEeeDM7N9y1fOSA" outgoing="_Sim6_5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7D5-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7EJ-zEeeDM7N9y1fOSA" target="_Sim7G5-zEeeDM7N9y1fOSA" source="_Sim7EZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim7EZ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::terminate).input(MyTest::terminate)" incoming="_Sim6_5-zEeeDM7N9y1fOSA" outgoing="_Sim7EJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Ep-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7E5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim7FJ-zEeeDM7N9y1fOSA" name="Write(terminate)" structuralFeature="_Sim6A5-zEeeDM7N9y1fOSA" isReplaceAll="true">
                  <object xmi:id="_Sim7FZ-zEeeDM7N9y1fOSA" name="Write(terminate).object" incoming="_Sim7AJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Fp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7F5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sim7GJ-zEeeDM7N9y1fOSA" name="Write(terminate).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7GZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7Gp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_Sim7G5-zEeeDM7N9y1fOSA" name="Write(terminate).value" incoming="_Sim7EJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7HJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7HZ-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7Hp-zEeeDM7N9y1fOSA" name="RightHandSide@8fbd6a1" outgoing="_Sim7AZ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7H5-zEeeDM7N9y1fOSA" name="AcceptStatement@37234215" incoming="_Sim6I5-zEeeDM7N9y1fOSA" outgoing="_Sim6JJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7IJ-zEeeDM7N9y1fOSA" target="_Sim7IZ-zEeeDM7N9y1fOSA" source="_Sim7I5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim7IZ-zEeeDM7N9y1fOSA" name="Accept(SignalNewArrival)" incoming="_Sim7IJ-zEeeDM7N9y1fOSA">
                <trigger xmi:id="_Sim7Ip-zEeeDM7N9y1fOSA" event="_SioGhp-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sim7I5-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalNewArrival))" outgoing="_Sim7IJ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7JJ-zEeeDM7N9y1fOSA" name="AcceptStatement@591cea95" incoming="_Sim6JJ-zEeeDM7N9y1fOSA" outgoing="_Sim6Jp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7JZ-zEeeDM7N9y1fOSA" target="_Sim7KJ-zEeeDM7N9y1fOSA" source="_Sim7LZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Jp-zEeeDM7N9y1fOSA" target="_Sim7J5-zEeeDM7N9y1fOSA" source="_Sim7KZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim7J5-zEeeDM7N9y1fOSA" name="Fork(Accept(SignalNewArrival).result)" incoming="_Sim7Jp-zEeeDM7N9y1fOSA" outgoing="_Sim6JZ-zEeeDM7N9y1fOSA _Sim6KZ-zEeeDM7N9y1fOSA _Sim6Lp-zEeeDM7N9y1fOSA _Sim6Op-zEeeDM7N9y1fOSA _Sim6P5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim7KJ-zEeeDM7N9y1fOSA" name="Accept(SignalNewArrival)" incoming="_Sim7JZ-zEeeDM7N9y1fOSA">
                <result xmi:id="_Sim7KZ-zEeeDM7N9y1fOSA" name="Accept(SignalNewArrival).result" outgoing="_Sim7Jp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Kp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7K5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <trigger xmi:id="_Sim7LJ-zEeeDM7N9y1fOSA" event="_SioGh5-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sim7LZ-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalNewArrival))" outgoing="_Sim7JZ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7Lp-zEeeDM7N9y1fOSA" name="ExpressionStatement@700d39fc" incoming="_Sim6Jp-zEeeDM7N9y1fOSA" outgoing="_Sim6Kp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7L5-zEeeDM7N9y1fOSA" target="_Sim7OZ-zEeeDM7N9y1fOSA" source="_Sim7NZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7MJ-zEeeDM7N9y1fOSA" target="_Sim7Qp-zEeeDM7N9y1fOSA" source="_Sim7P5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7MZ-zEeeDM7N9y1fOSA" target="_Sim7Rp-zEeeDM7N9y1fOSA" source="_Sim7PJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7Mp-zEeeDM7N9y1fOSA" target="_Sim7M5-zEeeDM7N9y1fOSA" source="_Sim7T5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7M5-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@4950c344)" incoming="_Sim7Mp-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim7NJ-zEeeDM7N9y1fOSA" name="ReadSelf">
                  <result xmi:id="_Sim7NZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim7L5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Np-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7N5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sim7OJ-zEeeDM7N9y1fOSA" name="Clear(arrival)" structuralFeature="_Sim6Bp-zEeeDM7N9y1fOSA">
                <object xmi:id="_Sim7OZ-zEeeDM7N9y1fOSA" name="Clear(arrival).object" incoming="_Sim7L5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Op-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7O5-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_Sim7PJ-zEeeDM7N9y1fOSA" name="Clear(arrival).result" outgoing="_Sim7MZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7PZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7Pp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim7P5-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@4950c344)" incoming="_Sim6JZ-zEeeDM7N9y1fOSA" outgoing="_Sim7MJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7QJ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7QZ-zEeeDM7N9y1fOSA" target="_Sim7TJ-zEeeDM7N9y1fOSA" source="_Sim7Qp-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim7Qp-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::arrival).input(MyTest::arrival)" incoming="_Sim7MJ-zEeeDM7N9y1fOSA" outgoing="_Sim7QZ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Q5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7RJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim7RZ-zEeeDM7N9y1fOSA" name="Write(arrival)" structuralFeature="_Sim6Bp-zEeeDM7N9y1fOSA" isReplaceAll="true">
                  <object xmi:id="_Sim7Rp-zEeeDM7N9y1fOSA" name="Write(arrival).object" incoming="_Sim7MZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7R5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7SJ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sim7SZ-zEeeDM7N9y1fOSA" name="Write(arrival).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7Sp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7S5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_Sim7TJ-zEeeDM7N9y1fOSA" name="Write(arrival).value" incoming="_Sim7QZ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7TZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7Tp-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7T5-zEeeDM7N9y1fOSA" name="RightHandSide@682bacd9" outgoing="_Sim7Mp-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7UJ-zEeeDM7N9y1fOSA" name="ForStatement@741888c" incoming="_Sim6Kp-zEeeDM7N9y1fOSA" outgoing="_Sim6MZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7UZ-zEeeDM7N9y1fOSA" target="_Sim8UZ-zEeeDM7N9y1fOSA" source="_Sim8RZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Up-zEeeDM7N9y1fOSA" target="_Sim8YZ-zEeeDM7N9y1fOSA" source="_Sim8WJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7U5-zEeeDM7N9y1fOSA" target="_Sim8Np-zEeeDM7N9y1fOSA" source="_Sim8fJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7VJ-zEeeDM7N9y1fOSA" target="_Sim8OZ-zEeeDM7N9y1fOSA" source="_Sim8eJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7VZ-zEeeDM7N9y1fOSA" target="_Sim8M5-zEeeDM7N9y1fOSA" source="_Sim8YZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7Vp-zEeeDM7N9y1fOSA" target="_Sim7V5-zEeeDM7N9y1fOSA" source="_Sim8Up-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:LoopNode" xmi:id="_Sim7V5-zEeeDM7N9y1fOSA" name="Loop(ForStatement@741888c)" incoming="_Sim7Vp-zEeeDM7N9y1fOSA" bodyOutput="_Sim7hZ-zEeeDM7N9y1fOSA _Sim7iJ-zEeeDM7N9y1fOSA _Sim7i5-zEeeDM7N9y1fOSA _Sim7jp-zEeeDM7N9y1fOSA _Sim8Cp-zEeeDM7N9y1fOSA _Sim785-zEeeDM7N9y1fOSA _Sim8AJ-zEeeDM7N9y1fOSA" bodyPart="_Sim7e5-zEeeDM7N9y1fOSA _Sim7fJ-zEeeDM7N9y1fOSA _Sim8A5-zEeeDM7N9y1fOSA _Sim8DZ-zEeeDM7N9y1fOSA" decider="_Sim7eJ-zEeeDM7N9y1fOSA" isTestedFirst="true" test="_Sim7cZ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7WJ-zEeeDM7N9y1fOSA" target="_Sim7ap-zEeeDM7N9y1fOSA" source="_Sim8Ep-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7WZ-zEeeDM7N9y1fOSA" target="_Sim7a5-zEeeDM7N9y1fOSA" source="_Sim8FZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Wp-zEeeDM7N9y1fOSA" target="_Sim7bJ-zEeeDM7N9y1fOSA" source="_Sim8GJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7W5-zEeeDM7N9y1fOSA" target="_Sim7bZ-zEeeDM7N9y1fOSA" source="_Sim8G5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7XJ-zEeeDM7N9y1fOSA" target="_Sim7bp-zEeeDM7N9y1fOSA" source="_Sim8Hp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7XZ-zEeeDM7N9y1fOSA" target="_Sim7b5-zEeeDM7N9y1fOSA" source="_Sim8IZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Xp-zEeeDM7N9y1fOSA" target="_Sim7cJ-zEeeDM7N9y1fOSA" source="_Sim8JJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7X5-zEeeDM7N9y1fOSA" target="_Sim7cp-zEeeDM7N9y1fOSA" source="_Sim7b5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7YJ-zEeeDM7N9y1fOSA" target="_Sim7dZ-zEeeDM7N9y1fOSA" source="_Sim7cJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7YZ-zEeeDM7N9y1fOSA" target="_Sim7fJ-zEeeDM7N9y1fOSA" source="_Sim7e5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Yp-zEeeDM7N9y1fOSA" target="_Sim7rJ-zEeeDM7N9y1fOSA" source="_Sim7bp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Y5-zEeeDM7N9y1fOSA" target="_Sim8BJ-zEeeDM7N9y1fOSA" source="_Sim7bp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7ZJ-zEeeDM7N9y1fOSA" target="_Sim8B5-zEeeDM7N9y1fOSA" source="_Sim8Dp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7ZZ-zEeeDM7N9y1fOSA" target="_Sim77Z-zEeeDM7N9y1fOSA" source="_Sim7b5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Zp-zEeeDM7N9y1fOSA" target="_Sim7_Z-zEeeDM7N9y1fOSA" source="_Sim7cJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7Z5-zEeeDM7N9y1fOSA" target="_Sim7zp-zEeeDM7N9y1fOSA" source="_Sim7ap-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7aJ-zEeeDM7N9y1fOSA" target="_Sim71p-zEeeDM7N9y1fOSA" source="_Sim7a5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7aZ-zEeeDM7N9y1fOSA" target="_Sim73p-zEeeDM7N9y1fOSA" source="_Sim7bJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7ap-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(sig))" incoming="_Sim7WJ-zEeeDM7N9y1fOSA" outgoing="_Sim7Z5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7a5-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(terminate))" incoming="_Sim7WZ-zEeeDM7N9y1fOSA" outgoing="_Sim7aJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7bJ-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(arrival3))" incoming="_Sim7Wp-zEeeDM7N9y1fOSA" outgoing="_Sim7aZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7bZ-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(s1))" incoming="_Sim7W5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7bp-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(i))" incoming="_Sim7XJ-zEeeDM7N9y1fOSA" outgoing="_Sim7Yp-zEeeDM7N9y1fOSA _Sim7Y5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7b5-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(counter))" incoming="_Sim7XZ-zEeeDM7N9y1fOSA" outgoing="_Sim7X5-zEeeDM7N9y1fOSA _Sim7ZZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim7cJ-zEeeDM7N9y1fOSA" name="Fork(ForStatement@741888c.loopVariable(upper))" incoming="_Sim7Xp-zEeeDM7N9y1fOSA" outgoing="_Sim7YJ-zEeeDM7N9y1fOSA _Sim7Zp-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim7cZ-zEeeDM7N9y1fOSA" name="Call(&lt;=)">
                  <argument xmi:id="_Sim7cp-zEeeDM7N9y1fOSA" name="Call(&lt;=).argument(x)" incoming="_Sim7X5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7c5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7dJ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_Sim7dZ-zEeeDM7N9y1fOSA" name="Call(&lt;=).argument(y)" incoming="_Sim7YJ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7dp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7d5-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_Sim7eJ-zEeeDM7N9y1fOSA" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7eZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7ep-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7e5-zEeeDM7N9y1fOSA" name="Values(ForStatement@741888c)" outgoing="_Sim7YZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7fJ-zEeeDM7N9y1fOSA" name="Body(ForStatement@741888c)" incoming="_Sim7YZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7fZ-zEeeDM7N9y1fOSA" target="_Sim7hZ-zEeeDM7N9y1fOSA" source="_Sim70Z-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7fp-zEeeDM7N9y1fOSA" target="_Sim7iJ-zEeeDM7N9y1fOSA" source="_Sim72Z-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7f5-zEeeDM7N9y1fOSA" target="_Sim7i5-zEeeDM7N9y1fOSA" source="_Sim74Z-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7gJ-zEeeDM7N9y1fOSA" target="_Sim7jp-zEeeDM7N9y1fOSA" source="_Sim76Z-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7gZ-zEeeDM7N9y1fOSA" target="_Sim7yp-zEeeDM7N9y1fOSA" source="_Sim7lJ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7gp-zEeeDM7N9y1fOSA" target="_Sim7nJ-zEeeDM7N9y1fOSA" source="_Sim7kZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7g5-zEeeDM7N9y1fOSA" target="_Sim75p-zEeeDM7N9y1fOSA" source="_Sim7lJ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7hJ-zEeeDM7N9y1fOSA" target="_Sim78J-zEeeDM7N9y1fOSA" source="_Sim795-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_Sim7hZ-zEeeDM7N9y1fOSA" name="sig" incoming="_Sim7fZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7hp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7h5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_Sim7iJ-zEeeDM7N9y1fOSA" name="terminate" incoming="_Sim7fp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7iZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7ip-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_Sim7i5-zEeeDM7N9y1fOSA" name="arrival3" incoming="_Sim7f5-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7jJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7jZ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_Sim7jp-zEeeDM7N9y1fOSA" name="s1" incoming="_Sim7gJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7j5-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7kJ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7kZ-zEeeDM7N9y1fOSA" name="AcceptStatement@21f5cb13" outgoing="_Sim7gp-zEeeDM7N9y1fOSA">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7kp-zEeeDM7N9y1fOSA" target="_Sim7lZ-zEeeDM7N9y1fOSA" source="_Sim7m5-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7k5-zEeeDM7N9y1fOSA" target="_Sim7lJ-zEeeDM7N9y1fOSA" source="_Sim7lp-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim7lJ-zEeeDM7N9y1fOSA" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_Sim7k5-zEeeDM7N9y1fOSA" outgoing="_Sim7gZ-zEeeDM7N9y1fOSA _Sim7g5-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim7lZ-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival)" incoming="_Sim7kp-zEeeDM7N9y1fOSA">
                      <result xmi:id="_Sim7lp-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_Sim7k5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7l5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7mJ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <trigger xmi:id="_Sim7mZ-zEeeDM7N9y1fOSA" event="_SioGiJ-zEeeDM7N9y1fOSA"/>
                      <trigger xmi:id="_Sim7mp-zEeeDM7N9y1fOSA" event="_SioGiZ-zEeeDM7N9y1fOSA"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_Sim7m5-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_Sim7kp-zEeeDM7N9y1fOSA"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7nJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@525af0bb" incoming="_Sim7gp-zEeeDM7N9y1fOSA">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7nZ-zEeeDM7N9y1fOSA" target="_Sim7qp-zEeeDM7N9y1fOSA" source="_Sim7pZ-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7np-zEeeDM7N9y1fOSA" target="_Sim7sp-zEeeDM7N9y1fOSA" source="_Sim7r5-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7n5-zEeeDM7N9y1fOSA" target="_Sim7tJ-zEeeDM7N9y1fOSA" source="_Sim7p5-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7oJ-zEeeDM7N9y1fOSA" target="_Sim7up-zEeeDM7N9y1fOSA" source="_Sim7sp-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7oZ-zEeeDM7N9y1fOSA" target="_Sim7vp-zEeeDM7N9y1fOSA" source="_Sim7t5-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7op-zEeeDM7N9y1fOSA" target="_Sim7x5-zEeeDM7N9y1fOSA" source="_Sim7sp-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7o5-zEeeDM7N9y1fOSA" target="_Sim7xJ-zEeeDM7N9y1fOSA" source="_Sim7yp-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_Sim7pJ-zEeeDM7N9y1fOSA" target="_Sim7pZ-zEeeDM7N9y1fOSA" source="_Sim7y5-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7pZ-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@7774730a)" incoming="_Sim7pJ-zEeeDM7N9y1fOSA" outgoing="_Sim7nZ-zEeeDM7N9y1fOSA">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim7pp-zEeeDM7N9y1fOSA" name="ReadSelf">
                        <result xmi:id="_Sim7p5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim7n5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7qJ-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7qZ-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7qp-zEeeDM7N9y1fOSA" name="Index(LeftHandSide@7774730a)" incoming="_Sim7nZ-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim7q5-zEeeDM7N9y1fOSA" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_Sim7rJ-zEeeDM7N9y1fOSA" name="Call(ToUnlimitedNatural).argument(x)" incoming="_Sim7Yp-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7rZ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7rp-zEeeDM7N9y1fOSA" value="1"/>
                      </argument>
                      <result xmi:id="_Sim7r5-zEeeDM7N9y1fOSA" name="Call(ToUnlimitedNatural).result(result)" outgoing="_Sim7np-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7sJ-zEeeDM7N9y1fOSA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7sZ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim7sp-zEeeDM7N9y1fOSA" name="Fork(Call(ToUnlimitedNatural).result(result))" incoming="_Sim7np-zEeeDM7N9y1fOSA" outgoing="_Sim7oJ-zEeeDM7N9y1fOSA _Sim7op-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_Sim7s5-zEeeDM7N9y1fOSA" name="Remove(signals)" structuralFeature="_Sim6DJ-zEeeDM7N9y1fOSA">
                      <object xmi:id="_Sim7tJ-zEeeDM7N9y1fOSA" name="Remove(signals).object" incoming="_Sim7n5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7tZ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7tp-zEeeDM7N9y1fOSA" value="1"/>
                      </object>
                      <result xmi:id="_Sim7t5-zEeeDM7N9y1fOSA" name="Remove(signals).result" outgoing="_Sim7oZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7uJ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7uZ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <removeAt xmi:id="_Sim7up-zEeeDM7N9y1fOSA" name="Remove(signals).removeAt" incoming="_Sim7oJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7u5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7vJ-zEeeDM7N9y1fOSA" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim7vZ-zEeeDM7N9y1fOSA" name="Write(signals)" structuralFeature="_Sim6DJ-zEeeDM7N9y1fOSA">
                      <object xmi:id="_Sim7vp-zEeeDM7N9y1fOSA" name="Write(signals).object" incoming="_Sim7oZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7v5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7wJ-zEeeDM7N9y1fOSA" value="1"/>
                      </object>
                      <result xmi:id="_Sim7wZ-zEeeDM7N9y1fOSA" name="Write(signals).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7wp-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7w5-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <value xmi:id="_Sim7xJ-zEeeDM7N9y1fOSA" name="Write(signals).value" incoming="_Sim7o5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7xZ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7xp-zEeeDM7N9y1fOSA" value="1"/>
                      </value>
                      <insertAt xmi:id="_Sim7x5-zEeeDM7N9y1fOSA" name="Write(signals).insertAt" incoming="_Sim7op-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7yJ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7yZ-zEeeDM7N9y1fOSA" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim7yp-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@7774730a)" incoming="_Sim7gZ-zEeeDM7N9y1fOSA" outgoing="_Sim7o5-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7y5-zEeeDM7N9y1fOSA" name="RightHandSide@4c2a60d4" outgoing="_Sim7pJ-zEeeDM7N9y1fOSA"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7zJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7zZ-zEeeDM7N9y1fOSA" target="_Sim70Z-zEeeDM7N9y1fOSA" source="_Sim7zp-zEeeDM7N9y1fOSA"/>
                    <structuredNodeInput xmi:id="_Sim7zp-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).input" incoming="_Sim7Z5-zEeeDM7N9y1fOSA" outgoing="_Sim7zZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7z5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim70J-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_Sim70Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).output" incoming="_Sim7zZ-zEeeDM7N9y1fOSA" outgoing="_Sim7fZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim70p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim705-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim71J-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim71Z-zEeeDM7N9y1fOSA" target="_Sim72Z-zEeeDM7N9y1fOSA" source="_Sim71p-zEeeDM7N9y1fOSA"/>
                    <structuredNodeInput xmi:id="_Sim71p-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).input" incoming="_Sim7aJ-zEeeDM7N9y1fOSA" outgoing="_Sim71Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim715-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim72J-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_Sim72Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).output" incoming="_Sim71Z-zEeeDM7N9y1fOSA" outgoing="_Sim7fp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim72p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim725-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim73J-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim73Z-zEeeDM7N9y1fOSA" target="_Sim74Z-zEeeDM7N9y1fOSA" source="_Sim73p-zEeeDM7N9y1fOSA"/>
                    <structuredNodeInput xmi:id="_Sim73p-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_Sim7aZ-zEeeDM7N9y1fOSA" outgoing="_Sim73Z-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim735-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim74J-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_Sim74Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_Sim73Z-zEeeDM7N9y1fOSA" outgoing="_Sim7f5-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim74p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim745-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim75J-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim75Z-zEeeDM7N9y1fOSA" target="_Sim76Z-zEeeDM7N9y1fOSA" source="_Sim75p-zEeeDM7N9y1fOSA"/>
                    <structuredNodeInput xmi:id="_Sim75p-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).input" incoming="_Sim7g5-zEeeDM7N9y1fOSA" outgoing="_Sim75Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim755-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim76J-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_Sim76Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).output" incoming="_Sim75Z-zEeeDM7N9y1fOSA" outgoing="_Sim7gJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim76p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim765-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim77J-zEeeDM7N9y1fOSA" name="Call(+)">
                    <argument xmi:id="_Sim77Z-zEeeDM7N9y1fOSA" name="Call(+).argument(x)" incoming="_Sim7ZZ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim77p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim775-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <argument xmi:id="_Sim78J-zEeeDM7N9y1fOSA" name="Call(+).argument(y)" incoming="_Sim7hJ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim78Z-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim78p-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <result xmi:id="_Sim785-zEeeDM7N9y1fOSA" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim79J-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim79Z-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim79p-zEeeDM7N9y1fOSA" name="Value(1)">
                    <result xmi:id="_Sim795-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sim7hJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7-J-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7-Z-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Sim7-p-zEeeDM7N9y1fOSA" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim7-5-zEeeDM7N9y1fOSA" name="Passthru(upper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim7_J-zEeeDM7N9y1fOSA" target="_Sim8AJ-zEeeDM7N9y1fOSA" source="_Sim7_Z-zEeeDM7N9y1fOSA"/>
                    <structuredNodeInput xmi:id="_Sim7_Z-zEeeDM7N9y1fOSA" name="Passthru(upper).input" incoming="_Sim7Zp-zEeeDM7N9y1fOSA" outgoing="_Sim7_J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim7_p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim7_5-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_Sim8AJ-zEeeDM7N9y1fOSA" name="Passthru(upper).output" incoming="_Sim7_J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8AZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Ap-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim8A5-zEeeDM7N9y1fOSA" name="Call(+)">
                  <argument xmi:id="_Sim8BJ-zEeeDM7N9y1fOSA" name="Call(+).argument(x)" incoming="_Sim7Y5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8BZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Bp-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_Sim8B5-zEeeDM7N9y1fOSA" name="Call(+).argument(y)" incoming="_Sim7ZJ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8CJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8CZ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_Sim8Cp-zEeeDM7N9y1fOSA" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8C5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8DJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim8DZ-zEeeDM7N9y1fOSA" name="Value(1)">
                  <result xmi:id="_Sim8Dp-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sim7ZJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8D5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8EJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sim8EZ-zEeeDM7N9y1fOSA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <loopVariable xmi:id="_Sim8Ep-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(sig)" outgoing="_Sim7WJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8E5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8FJ-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_Sim8FZ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(terminate)" outgoing="_Sim7WZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Fp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8F5-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_Sim8GJ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(arrival3)" outgoing="_Sim7Wp-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8GZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Gp-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_Sim8G5-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(s1)" outgoing="_Sim7W5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8HJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8HZ-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_Sim8Hp-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(i)" outgoing="_Sim7XJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8H5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8IJ-zEeeDM7N9y1fOSA" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_Sim8IZ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(counter)" outgoing="_Sim7XZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Ip-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8I5-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_Sim8JJ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariable(upper)" outgoing="_Sim7Xp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8JZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Jp-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_Sim8J5-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(sig)" incoming="_Sim6J5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8KJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8KZ-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_Sim8Kp-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(terminate)" incoming="_Sim6KJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8K5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8LJ-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_Sim8LZ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(arrival3)" incoming="_Sim6KZ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Lp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8L5-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_Sim8MJ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(s1)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8MZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Mp-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_Sim8M5-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(i)" incoming="_Sim7VZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8NJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8NZ-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_Sim8Np-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(counter)" incoming="_Sim7U5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8N5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8OJ-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_Sim8OZ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.loopVariableInput(upper)" incoming="_Sim7VJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Op-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8O5-zEeeDM7N9y1fOSA" value="1"/>
                </loopVariableInput>
                <result xmi:id="_Sim8PJ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8PZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Pp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <result xmi:id="_Sim8P5-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8QJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8QZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <result xmi:id="_Sim8Qp-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(arrival3)" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Q5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8RJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <result xmi:id="_Sim8RZ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(s1)" outgoing="_Sim7UZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Rp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8R5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <result xmi:id="_Sim8SJ-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8SZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Sp-zEeeDM7N9y1fOSA" value="*"/>
                </result>
                <result xmi:id="_Sim8S5-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8TJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8TZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <result xmi:id="_Sim8Tp-zEeeDM7N9y1fOSA" name="ForStatement@741888c.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8T5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8UJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim8UZ-zEeeDM7N9y1fOSA" name="Fork(s1)" incoming="_Sim7UZ-zEeeDM7N9y1fOSA" outgoing="_Sim6L5-zEeeDM7N9y1fOSA _Sim6O5-zEeeDM7N9y1fOSA _Sim6QJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8Up-zEeeDM7N9y1fOSA" name="LoopVariables(ForStatement@741888c)" outgoing="_Sim7Vp-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8U5-zEeeDM7N9y1fOSA" target="_Sim8Y5-zEeeDM7N9y1fOSA" source="_Sim8XZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8VJ-zEeeDM7N9y1fOSA" target="_Sim8Zp-zEeeDM7N9y1fOSA" source="_Sim8YZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8VZ-zEeeDM7N9y1fOSA" target="_Sim8cp-zEeeDM7N9y1fOSA" source="_Sim8aZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8Vp-zEeeDM7N9y1fOSA" target="_Sim8dZ-zEeeDM7N9y1fOSA" source="_Sim8bZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim8V5-zEeeDM7N9y1fOSA" name="Value(1)">
                  <result xmi:id="_Sim8WJ-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sim7Up-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8WZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8Wp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sim8W5-zEeeDM7N9y1fOSA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim8XJ-zEeeDM7N9y1fOSA" name="Value(2)">
                  <result xmi:id="_Sim8XZ-zEeeDM7N9y1fOSA" name="Value(2).result" outgoing="_Sim8U5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Xp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8X5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sim8YJ-zEeeDM7N9y1fOSA" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim8YZ-zEeeDM7N9y1fOSA" name="Fork(Value(1).result)" incoming="_Sim7Up-zEeeDM7N9y1fOSA" outgoing="_Sim7VZ-zEeeDM7N9y1fOSA _Sim8VJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim8Yp-zEeeDM7N9y1fOSA" name="Call(-)">
                  <argument xmi:id="_Sim8Y5-zEeeDM7N9y1fOSA" name="Call(-).argument(x)" incoming="_Sim8U5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8ZJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8ZZ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_Sim8Zp-zEeeDM7N9y1fOSA" name="Call(-).argument(y)" incoming="_Sim8VJ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8Z5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8aJ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_Sim8aZ-zEeeDM7N9y1fOSA" name="Call(-).result(result)" outgoing="_Sim8VZ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8ap-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8a5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim8bJ-zEeeDM7N9y1fOSA" name="Value(1)">
                  <result xmi:id="_Sim8bZ-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sim8Vp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8bp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8b5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sim8cJ-zEeeDM7N9y1fOSA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim8cZ-zEeeDM7N9y1fOSA" name="Call(+)">
                  <argument xmi:id="_Sim8cp-zEeeDM7N9y1fOSA" name="Call(+).argument(x)" incoming="_Sim8VZ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8c5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8dJ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_Sim8dZ-zEeeDM7N9y1fOSA" name="Call(+).argument(y)" incoming="_Sim8Vp-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8dp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8d5-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_Sim8eJ-zEeeDM7N9y1fOSA" name="Call(+).result(result)" outgoing="_Sim7VJ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8eZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8ep-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim8e5-zEeeDM7N9y1fOSA" name="Value(1)">
                  <result xmi:id="_Sim8fJ-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sim7U5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8fZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8fp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sim8f5-zEeeDM7N9y1fOSA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_Sim8gJ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c" incoming="_Sim6MZ-zEeeDM7N9y1fOSA" outgoing="_Sim6QZ-zEeeDM7N9y1fOSA" bodyOutput="_Sim8oJ-zEeeDM7N9y1fOSA _Sim8o5-zEeeDM7N9y1fOSA _Sim8pp-zEeeDM7N9y1fOSA _Sim8qZ-zEeeDM7N9y1fOSA _Sim8rJ-zEeeDM7N9y1fOSA" bodyPart="_Sim8l5-zEeeDM7N9y1fOSA" decider="_Sim8lJ-zEeeDM7N9y1fOSA" test="_Sim8j5-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8gZ-zEeeDM7N9y1fOSA" target="_Sim8ip-zEeeDM7N9y1fOSA" source="_Sim9K5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8gp-zEeeDM7N9y1fOSA" target="_Sim8i5-zEeeDM7N9y1fOSA" source="_Sim9Lp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8g5-zEeeDM7N9y1fOSA" target="_Sim8jJ-zEeeDM7N9y1fOSA" source="_Sim9MZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8hJ-zEeeDM7N9y1fOSA" target="_Sim8jZ-zEeeDM7N9y1fOSA" source="_Sim9NJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8hZ-zEeeDM7N9y1fOSA" target="_Sim8jp-zEeeDM7N9y1fOSA" source="_Sim9N5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8hp-zEeeDM7N9y1fOSA" target="_Sim9BZ-zEeeDM7N9y1fOSA" source="_Sim8ip-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8h5-zEeeDM7N9y1fOSA" target="_Sim9DZ-zEeeDM7N9y1fOSA" source="_Sim8i5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8iJ-zEeeDM7N9y1fOSA" target="_Sim9HZ-zEeeDM7N9y1fOSA" source="_Sim8jZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8iZ-zEeeDM7N9y1fOSA" target="_Sim9JZ-zEeeDM7N9y1fOSA" source="_Sim8jp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim8ip-zEeeDM7N9y1fOSA" name="Fork(DoStatement@49fcb93c.loopVariable(sig))" incoming="_Sim8gZ-zEeeDM7N9y1fOSA" outgoing="_Sim8hp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim8i5-zEeeDM7N9y1fOSA" name="Fork(DoStatement@49fcb93c.loopVariable(terminate))" incoming="_Sim8gp-zEeeDM7N9y1fOSA" outgoing="_Sim8h5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim8jJ-zEeeDM7N9y1fOSA" name="Fork(DoStatement@49fcb93c.loopVariable(s))" incoming="_Sim8g5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim8jZ-zEeeDM7N9y1fOSA" name="Fork(DoStatement@49fcb93c.loopVariable(arrival3))" incoming="_Sim8hJ-zEeeDM7N9y1fOSA" outgoing="_Sim8iJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sim8jp-zEeeDM7N9y1fOSA" name="Fork(DoStatement@49fcb93c.loopVariable(s1))" incoming="_Sim8hZ-zEeeDM7N9y1fOSA" outgoing="_Sim8iZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8j5-zEeeDM7N9y1fOSA" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8kJ-zEeeDM7N9y1fOSA" target="_Sim8lJ-zEeeDM7N9y1fOSA" source="_Sim8kZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim8kZ-zEeeDM7N9y1fOSA" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_Sim6MJ-zEeeDM7N9y1fOSA" outgoing="_Sim8kJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8kp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8k5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sim8lJ-zEeeDM7N9y1fOSA" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_Sim8kJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8lZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8lp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8l5-zEeeDM7N9y1fOSA" name="BodyPart(DoStatement@49fcb93c)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8mJ-zEeeDM7N9y1fOSA" target="_Sim8oJ-zEeeDM7N9y1fOSA" source="_Sim9CJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8mZ-zEeeDM7N9y1fOSA" target="_Sim8o5-zEeeDM7N9y1fOSA" source="_Sim9EJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8mp-zEeeDM7N9y1fOSA" target="_Sim8pp-zEeeDM7N9y1fOSA" source="_Sim9GJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8m5-zEeeDM7N9y1fOSA" target="_Sim8qZ-zEeeDM7N9y1fOSA" source="_Sim9IJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8nJ-zEeeDM7N9y1fOSA" target="_Sim8rJ-zEeeDM7N9y1fOSA" source="_Sim9KJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8nZ-zEeeDM7N9y1fOSA" target="_Sim8sZ-zEeeDM7N9y1fOSA" source="_Sim8vJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim8np-zEeeDM7N9y1fOSA" target="_Sim8r5-zEeeDM7N9y1fOSA" source="_Sim8t5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8n5-zEeeDM7N9y1fOSA" target="_Sim9FZ-zEeeDM7N9y1fOSA" source="_Sim8vJ-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_Sim8oJ-zEeeDM7N9y1fOSA" name="sig" incoming="_Sim8mJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8oZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8op-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_Sim8o5-zEeeDM7N9y1fOSA" name="terminate" incoming="_Sim8mZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8pJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8pZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_Sim8pp-zEeeDM7N9y1fOSA" name="s" incoming="_Sim8mp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8p5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8qJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_Sim8qZ-zEeeDM7N9y1fOSA" name="arrival3" incoming="_Sim8m5-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8qp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8q5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_Sim8rJ-zEeeDM7N9y1fOSA" name="s1" incoming="_Sim8nJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8rZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8rp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8r5-zEeeDM7N9y1fOSA" name="Condition(DoStatement@49fcb93c)" incoming="_Sim8np-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sim8sJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_Sim575-zEeeDM7N9y1fOSA" isDirect="true">
                    <object xmi:id="_Sim8sZ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_Sim8nZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8sp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8s5-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Sim8tJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_Sim6MJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8tZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8tp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8t5-zEeeDM7N9y1fOSA" name="Body(DoStatement@49fcb93c)" outgoing="_Sim8np-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Sim8uJ-zEeeDM7N9y1fOSA" target="_Sim8xJ-zEeeDM7N9y1fOSA" source="_Sim8uZ-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8uZ-zEeeDM7N9y1fOSA" name="AcceptStatement@1666618f" outgoing="_Sim8uJ-zEeeDM7N9y1fOSA">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_Sim8up-zEeeDM7N9y1fOSA" target="_Sim8vZ-zEeeDM7N9y1fOSA" source="_Sim8w5-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8u5-zEeeDM7N9y1fOSA" target="_Sim8vJ-zEeeDM7N9y1fOSA" source="_Sim8vp-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim8vJ-zEeeDM7N9y1fOSA" name="Fork(Accept(SignalTermination,SignalNewArrival).result)" incoming="_Sim8u5-zEeeDM7N9y1fOSA" outgoing="_Sim8nZ-zEeeDM7N9y1fOSA _Sim8n5-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim8vZ-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival)" incoming="_Sim8up-zEeeDM7N9y1fOSA">
                      <result xmi:id="_Sim8vp-zEeeDM7N9y1fOSA" name="Accept(SignalTermination,SignalNewArrival).result" outgoing="_Sim8u5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8v5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8wJ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <trigger xmi:id="_Sim8wZ-zEeeDM7N9y1fOSA" event="_SioGip-zEeeDM7N9y1fOSA"/>
                      <trigger xmi:id="_Sim8wp-zEeeDM7N9y1fOSA" event="_SioGi5-zEeeDM7N9y1fOSA"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_Sim8w5-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalTermination,SignalNewArrival))" outgoing="_Sim8up-zEeeDM7N9y1fOSA"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim8xJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@54182e7d" incoming="_Sim8uJ-zEeeDM7N9y1fOSA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8xZ-zEeeDM7N9y1fOSA" target="_Sim80Z-zEeeDM7N9y1fOSA" source="_Sim82J-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8xp-zEeeDM7N9y1fOSA" target="_Sim87J-zEeeDM7N9y1fOSA" source="_Sim86p-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8x5-zEeeDM7N9y1fOSA" target="_Sim89Z-zEeeDM7N9y1fOSA" source="_Sim88p-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8yJ-zEeeDM7N9y1fOSA" target="_Sim8-Z-zEeeDM7N9y1fOSA" source="_Sim875-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8yZ-zEeeDM7N9y1fOSA" target="_Sim88p-zEeeDM7N9y1fOSA" source="_Sim81J-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_Sim8yp-zEeeDM7N9y1fOSA" target="_Sim865-zEeeDM7N9y1fOSA" source="_Sim83J-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8y5-zEeeDM7N9y1fOSA" target="_Sim9Ap-zEeeDM7N9y1fOSA" source="_Sim855-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim8zJ-zEeeDM7N9y1fOSA" target="_Sim8zp-zEeeDM7N9y1fOSA" source="_Sim9Ap-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sim8zZ-zEeeDM7N9y1fOSA" name="Call(+)">
                      <argument xmi:id="_Sim8zp-zEeeDM7N9y1fOSA" name="Call(+).argument(x)" incoming="_Sim8zJ-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8z5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim80J-zEeeDM7N9y1fOSA" value="1"/>
                      </argument>
                      <argument xmi:id="_Sim80Z-zEeeDM7N9y1fOSA" name="Call(+).argument(y)" incoming="_Sim8xZ-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim80p-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim805-zEeeDM7N9y1fOSA" value="1"/>
                      </argument>
                      <result xmi:id="_Sim81J-zEeeDM7N9y1fOSA" name="Call(+).result(result)" outgoing="_Sim8yZ-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim81Z-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim81p-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim815-zEeeDM7N9y1fOSA" name="Value(1)">
                      <result xmi:id="_Sim82J-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sim8xZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim82Z-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim82p-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Sim825-zEeeDM7N9y1fOSA" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim83J-zEeeDM7N9y1fOSA" name="RightHandSide@3c0ac71e" outgoing="_Sim8yp-zEeeDM7N9y1fOSA">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim83Z-zEeeDM7N9y1fOSA" target="_Sim86p-zEeeDM7N9y1fOSA" source="_Sim84J-zEeeDM7N9y1fOSA"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim83p-zEeeDM7N9y1fOSA" target="_Sim85J-zEeeDM7N9y1fOSA" source="_Sim86p-zEeeDM7N9y1fOSA"/>
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim835-zEeeDM7N9y1fOSA" name="ReadSelf">
                        <result xmi:id="_Sim84J-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim83Z-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim84Z-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim84p-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sim845-zEeeDM7N9y1fOSA" name="Read(count)" structuralFeature="_Sim6CZ-zEeeDM7N9y1fOSA">
                        <object xmi:id="_Sim85J-zEeeDM7N9y1fOSA" name="Read(count).object" incoming="_Sim83p-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim85Z-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim85p-zEeeDM7N9y1fOSA" value="1"/>
                        </object>
                        <result xmi:id="_Sim855-zEeeDM7N9y1fOSA" name="Read(count).result" outgoing="_Sim8y5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim86J-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim86Z-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_Sim86p-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_Sim83Z-zEeeDM7N9y1fOSA" outgoing="_Sim83p-zEeeDM7N9y1fOSA _Sim8xp-zEeeDM7N9y1fOSA"/>
                    </node>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sim865-zEeeDM7N9y1fOSA" name="Clear(count)" incoming="_Sim8yp-zEeeDM7N9y1fOSA" structuralFeature="_Sim6CZ-zEeeDM7N9y1fOSA">
                      <object xmi:id="_Sim87J-zEeeDM7N9y1fOSA" name="Clear(count).object" incoming="_Sim8xp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim87Z-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim87p-zEeeDM7N9y1fOSA" value="1"/>
                      </object>
                      <result xmi:id="_Sim875-zEeeDM7N9y1fOSA" name="Clear(count).result" outgoing="_Sim8yJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim88J-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim88Z-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim88p-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@3c0ac71e)" incoming="_Sim8yZ-zEeeDM7N9y1fOSA" outgoing="_Sim8x5-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim885-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim89J-zEeeDM7N9y1fOSA" target="_Sim8_5-zEeeDM7N9y1fOSA" source="_Sim89Z-zEeeDM7N9y1fOSA"/>
                      <structuredNodeInput xmi:id="_Sim89Z-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::count).input(MyTest::count)" incoming="_Sim8x5-zEeeDM7N9y1fOSA" outgoing="_Sim89J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim89p-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim895-zEeeDM7N9y1fOSA" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim8-J-zEeeDM7N9y1fOSA" name="Write(count)" structuralFeature="_Sim6CZ-zEeeDM7N9y1fOSA" isReplaceAll="true">
                        <object xmi:id="_Sim8-Z-zEeeDM7N9y1fOSA" name="Write(count).object" incoming="_Sim8yJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8-p-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8-5-zEeeDM7N9y1fOSA" value="1"/>
                        </object>
                        <result xmi:id="_Sim8_J-zEeeDM7N9y1fOSA" name="Write(count).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim8_Z-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim8_p-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                        <value xmi:id="_Sim8_5-zEeeDM7N9y1fOSA" name="Write(count).value" incoming="_Sim89J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9AJ-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9AZ-zEeeDM7N9y1fOSA" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_Sim9Ap-zEeeDM7N9y1fOSA" name="Fork(Read(count).result)" incoming="_Sim8y5-zEeeDM7N9y1fOSA" outgoing="_Sim8zJ-zEeeDM7N9y1fOSA"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9A5-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9BJ-zEeeDM7N9y1fOSA" target="_Sim9CJ-zEeeDM7N9y1fOSA" source="_Sim9BZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim9BZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).input" incoming="_Sim8hp-zEeeDM7N9y1fOSA" outgoing="_Sim9BJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Bp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9B5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim9CJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).output" incoming="_Sim9BJ-zEeeDM7N9y1fOSA" outgoing="_Sim8mJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9CZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Cp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9C5-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9DJ-zEeeDM7N9y1fOSA" target="_Sim9EJ-zEeeDM7N9y1fOSA" source="_Sim9DZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim9DZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).input" incoming="_Sim8h5-zEeeDM7N9y1fOSA" outgoing="_Sim9DJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Dp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9D5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim9EJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).output" incoming="_Sim9DJ-zEeeDM7N9y1fOSA" outgoing="_Sim8mZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9EZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Ep-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9E5-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9FJ-zEeeDM7N9y1fOSA" target="_Sim9GJ-zEeeDM7N9y1fOSA" source="_Sim9FZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim9FZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).input" incoming="_Sim8n5-zEeeDM7N9y1fOSA" outgoing="_Sim9FJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Fp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9F5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim9GJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalTermination,SignalNewArrival).result)).output" incoming="_Sim9FJ-zEeeDM7N9y1fOSA" outgoing="_Sim8mp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9GZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Gp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9G5-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9HJ-zEeeDM7N9y1fOSA" target="_Sim9IJ-zEeeDM7N9y1fOSA" source="_Sim9HZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim9HZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_Sim8iJ-zEeeDM7N9y1fOSA" outgoing="_Sim9HJ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Hp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9H5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim9IJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_Sim9HJ-zEeeDM7N9y1fOSA" outgoing="_Sim8m5-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9IZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Ip-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9I5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9JJ-zEeeDM7N9y1fOSA" target="_Sim9KJ-zEeeDM7N9y1fOSA" source="_Sim9JZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim9JZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1)).input" incoming="_Sim8iZ-zEeeDM7N9y1fOSA" outgoing="_Sim9JJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Jp-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9J5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_Sim9KJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1)).output" incoming="_Sim9JJ-zEeeDM7N9y1fOSA" outgoing="_Sim8nJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9KZ-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Kp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_Sim9K5-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariable(sig)" outgoing="_Sim8gZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9LJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9LZ-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_Sim9Lp-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariable(terminate)" outgoing="_Sim8gp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9L5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9MJ-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_Sim9MZ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariable(s)" outgoing="_Sim8g5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Mp-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9M5-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_Sim9NJ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariable(arrival3)" outgoing="_Sim8hJ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9NZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Np-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_Sim9N5-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariable(s1)" outgoing="_Sim8hZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9OJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9OZ-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_Sim9Op-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariableInput(sig)" incoming="_Sim6K5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9O5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9PJ-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_Sim9PZ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariableInput(terminate)" incoming="_Sim6LJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Pp-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9P5-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_Sim9QJ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9QZ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Qp-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_Sim9Q5-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariableInput(arrival3)" incoming="_Sim6Lp-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9RJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9RZ-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_Sim9Rp-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.loopVariableInput(s1)" incoming="_Sim6L5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9R5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9SJ-zEeeDM7N9y1fOSA" value="1"/>
              </loopVariableInput>
              <result xmi:id="_Sim9SZ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Sp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9S5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sim9TJ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9TZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9Tp-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sim9T5-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.result(s)" outgoing="_Sim6LZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9UJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9UZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sim9Up-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.result(arrival3)" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9U5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9VJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sim9VZ-zEeeDM7N9y1fOSA" name="DoStatement@49fcb93c.result(s1)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Vp-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9V5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Sim9WJ-zEeeDM7N9y1fOSA" name="Fork(s)" incoming="_Sim6LZ-zEeeDM7N9y1fOSA" outgoing="_Sim6OZ-zEeeDM7N9y1fOSA _Sim6Pp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_Sim9WZ-zEeeDM7N9y1fOSA" name="IfStatement@21cc25f2" incoming="_Sim6QZ-zEeeDM7N9y1fOSA" outgoing="_Sim6Qp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim9Wp-zEeeDM7N9y1fOSA" target="_Sim9Zp-zEeeDM7N9y1fOSA" source="_Sim9YZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sim9W5-zEeeDM7N9y1fOSA" target="_Sinfh5-zEeeDM7N9y1fOSA" source="_Sinfgp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim9XJ-zEeeDM7N9y1fOSA" name="Value(true)">
                <result xmi:id="_Sim9XZ-zEeeDM7N9y1fOSA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9Xp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9X5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim9YJ-zEeeDM7N9y1fOSA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9YZ-zEeeDM7N9y1fOSA" name="AcceptStatement@38331941" outgoing="_Sim9Wp-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim9Yp-zEeeDM7N9y1fOSA" target="_Sim9Y5-zEeeDM7N9y1fOSA" source="_Sim9ZZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_Sim9Y5-zEeeDM7N9y1fOSA" name="Accept(SignalNewArrival)" incoming="_Sim9Yp-zEeeDM7N9y1fOSA">
                  <trigger xmi:id="_Sim9ZJ-zEeeDM7N9y1fOSA" event="_SioGjJ-zEeeDM7N9y1fOSA"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_Sim9ZZ-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalNewArrival))" outgoing="_Sim9Yp-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9Zp-zEeeDM7N9y1fOSA" name="ExpressionStatement@34336c82" incoming="_Sim9Wp-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9Z5-zEeeDM7N9y1fOSA" target="_Sim9cp-zEeeDM7N9y1fOSA" source="_Sim9bp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9aJ-zEeeDM7N9y1fOSA" target="_Sim9e5-zEeeDM7N9y1fOSA" source="_Sim9eJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9aZ-zEeeDM7N9y1fOSA" target="_Sim9f5-zEeeDM7N9y1fOSA" source="_Sim9dZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9ap-zEeeDM7N9y1fOSA" target="_Sim9eJ-zEeeDM7N9y1fOSA" source="_Sim9ip-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sim9a5-zEeeDM7N9y1fOSA" target="_Sim9bJ-zEeeDM7N9y1fOSA" source="_Sim9iJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9bJ-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@10efe4b8)" incoming="_Sim9a5-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Sim9bZ-zEeeDM7N9y1fOSA" name="ReadSelf">
                    <result xmi:id="_Sim9bp-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sim9Z5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9b5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9cJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sim9cZ-zEeeDM7N9y1fOSA" name="Clear(flag)" structuralFeature="_Sim6D5-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Sim9cp-zEeeDM7N9y1fOSA" name="Clear(flag).object" incoming="_Sim9Z5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9c5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9dJ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sim9dZ-zEeeDM7N9y1fOSA" name="Clear(flag).result" outgoing="_Sim9aZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9dp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9d5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sim9eJ-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@10efe4b8)" incoming="_Sim9ap-zEeeDM7N9y1fOSA" outgoing="_Sim9aJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9eZ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9ep-zEeeDM7N9y1fOSA" target="_Sim9hZ-zEeeDM7N9y1fOSA" source="_Sim9e5-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_Sim9e5-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_Sim9aJ-zEeeDM7N9y1fOSA" outgoing="_Sim9ep-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9fJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9fZ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sim9fp-zEeeDM7N9y1fOSA" name="Write(flag)" structuralFeature="_Sim6D5-zEeeDM7N9y1fOSA" isReplaceAll="true">
                    <object xmi:id="_Sim9f5-zEeeDM7N9y1fOSA" name="Write(flag).object" incoming="_Sim9aZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9gJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9gZ-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Sim9gp-zEeeDM7N9y1fOSA" name="Write(flag).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9g5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9hJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_Sim9hZ-zEeeDM7N9y1fOSA" name="Write(flag).value" incoming="_Sim9ep-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9hp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9h5-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9iJ-zEeeDM7N9y1fOSA" name="RightHandSide@6e07d1e1" outgoing="_Sim9a5-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sim9iZ-zEeeDM7N9y1fOSA" name="Value(true)">
                    <result xmi:id="_Sim9ip-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_Sim9ap-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9i5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9jJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_Sim9jZ-zEeeDM7N9y1fOSA" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9jp-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9j5-zEeeDM7N9y1fOSA" target="_Sim9k5-zEeeDM7N9y1fOSA" source="_Sim9kJ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim9kJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).input" incoming="_Sim6N5-zEeeDM7N9y1fOSA" outgoing="_Sim9j5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9kZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9kp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sim9k5-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).output" incoming="_Sim9j5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9lJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9lZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9lp-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9l5-zEeeDM7N9y1fOSA" target="_Sim9m5-zEeeDM7N9y1fOSA" source="_Sim9mJ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim9mJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).input" incoming="_Sim6OJ-zEeeDM7N9y1fOSA" outgoing="_Sim9l5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9mZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9mp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sim9m5-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).output" incoming="_Sim9l5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9nJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9nZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9np-zEeeDM7N9y1fOSA" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9n5-zEeeDM7N9y1fOSA" target="_Sim9o5-zEeeDM7N9y1fOSA" source="_Sim9oJ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim9oJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)).input" incoming="_Sim6OZ-zEeeDM7N9y1fOSA" outgoing="_Sim9n5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9oZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9op-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sim9o5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)).output" incoming="_Sim9n5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sim9pJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sim9pZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sim9pp-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sim9p5-zEeeDM7N9y1fOSA" target="_Sinfcp-zEeeDM7N9y1fOSA" source="_Sim9qJ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sim9qJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_Sim6Op-zEeeDM7N9y1fOSA" outgoing="_Sim9p5-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfcJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfcZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sinfcp-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_Sim9p5-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfc5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfdJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinfdZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinfdp-zEeeDM7N9y1fOSA" target="_Sinfep-zEeeDM7N9y1fOSA" source="_Sinfd5-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sinfd5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1)).input" incoming="_Sim6O5-zEeeDM7N9y1fOSA" outgoing="_Sinfdp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfeJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfeZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sinfep-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1)).output" incoming="_Sinfdp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfe5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinffJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinffZ-zEeeDM7N9y1fOSA" name="Value(true)">
                <result xmi:id="_Sinffp-zEeeDM7N9y1fOSA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinff5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfgJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SinfgZ-zEeeDM7N9y1fOSA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfgp-zEeeDM7N9y1fOSA" name="AcceptStatement@257d90c8" outgoing="_Sim9W5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sinfg5-zEeeDM7N9y1fOSA" target="_SinfhJ-zEeeDM7N9y1fOSA" source="_Sinfhp-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_SinfhJ-zEeeDM7N9y1fOSA" name="Accept(SignalTermination)" incoming="_Sinfg5-zEeeDM7N9y1fOSA">
                  <trigger xmi:id="_SinfhZ-zEeeDM7N9y1fOSA" event="_SioGjZ-zEeeDM7N9y1fOSA"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_Sinfhp-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalTermination))" outgoing="_Sinfg5-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfh5-zEeeDM7N9y1fOSA" name="ExpressionStatement@2973633a" incoming="_Sim9W5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinfiJ-zEeeDM7N9y1fOSA" target="_Sinfk5-zEeeDM7N9y1fOSA" source="_Sinfj5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinfiZ-zEeeDM7N9y1fOSA" target="_SinfnJ-zEeeDM7N9y1fOSA" source="_SinfmZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinfip-zEeeDM7N9y1fOSA" target="_SinfoJ-zEeeDM7N9y1fOSA" source="_Sinflp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinfi5-zEeeDM7N9y1fOSA" target="_SinfmZ-zEeeDM7N9y1fOSA" source="_Sinfq5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SinfjJ-zEeeDM7N9y1fOSA" target="_SinfjZ-zEeeDM7N9y1fOSA" source="_SinfqZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinfjZ-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@2a872fe5)" incoming="_SinfjJ-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_Sinfjp-zEeeDM7N9y1fOSA" name="ReadSelf">
                    <result xmi:id="_Sinfj5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinfiJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfkJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfkZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_Sinfkp-zEeeDM7N9y1fOSA" name="Clear(flag)" structuralFeature="_Sim6D5-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Sinfk5-zEeeDM7N9y1fOSA" name="Clear(flag).object" incoming="_SinfiJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinflJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinflZ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sinflp-zEeeDM7N9y1fOSA" name="Clear(flag).result" outgoing="_Sinfip-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfl5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfmJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SinfmZ-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@2a872fe5)" incoming="_Sinfi5-zEeeDM7N9y1fOSA" outgoing="_SinfiZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfmp-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinfm5-zEeeDM7N9y1fOSA" target="_Sinfpp-zEeeDM7N9y1fOSA" source="_SinfnJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SinfnJ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_SinfiZ-zEeeDM7N9y1fOSA" outgoing="_Sinfm5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfnZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfnp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Sinfn5-zEeeDM7N9y1fOSA" name="Write(flag)" structuralFeature="_Sim6D5-zEeeDM7N9y1fOSA" isReplaceAll="true">
                    <object xmi:id="_SinfoJ-zEeeDM7N9y1fOSA" name="Write(flag).object" incoming="_Sinfip-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfoZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfop-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Sinfo5-zEeeDM7N9y1fOSA" name="Write(flag).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfpJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfpZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_Sinfpp-zEeeDM7N9y1fOSA" name="Write(flag).value" incoming="_Sinfm5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfp5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfqJ-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinfqZ-zEeeDM7N9y1fOSA" name="RightHandSide@255e60c6" outgoing="_SinfjJ-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinfqp-zEeeDM7N9y1fOSA" name="Value(false)">
                    <result xmi:id="_Sinfq5-zEeeDM7N9y1fOSA" name="Value(false).result" outgoing="_Sinfi5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfrJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinfrZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_Sinfrp-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfr5-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinfsJ-zEeeDM7N9y1fOSA" target="_SinftJ-zEeeDM7N9y1fOSA" source="_SinfsZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SinfsZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).input" incoming="_Sim6PJ-zEeeDM7N9y1fOSA" outgoing="_SinfsJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfsp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfs5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SinftJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(sig)).output" incoming="_SinfsJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinftZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinftp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinft5-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinfuJ-zEeeDM7N9y1fOSA" target="_SinfvJ-zEeeDM7N9y1fOSA" source="_SinfuZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SinfuZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).input" incoming="_Sim6PZ-zEeeDM7N9y1fOSA" outgoing="_SinfuJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfup-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfu5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SinfvJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(terminate)).output" incoming="_SinfuJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfvZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfvp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfv5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinfwJ-zEeeDM7N9y1fOSA" target="_SinfxJ-zEeeDM7N9y1fOSA" source="_SinfwZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SinfwZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)).input" incoming="_Sim6Pp-zEeeDM7N9y1fOSA" outgoing="_SinfwJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfwp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfw5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SinfxJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)).output" incoming="_SinfwJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfxZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfxp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfx5-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinfyJ-zEeeDM7N9y1fOSA" target="_SinfzJ-zEeeDM7N9y1fOSA" source="_SinfyZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SinfyZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_Sim6P5-zEeeDM7N9y1fOSA" outgoing="_SinfyJ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinfyp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfy5-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SinfzJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_SinfyJ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinfzZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinfzp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinfz5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinf0J-zEeeDM7N9y1fOSA" target="_Sinf1J-zEeeDM7N9y1fOSA" source="_Sinf0Z-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_Sinf0Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1)).input" incoming="_Sim6QJ-zEeeDM7N9y1fOSA" outgoing="_Sinf0J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf0p-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf05-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sinf1J-zEeeDM7N9y1fOSA" name="Passthru(Fork(s1)).output" incoming="_Sinf0J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf1Z-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf1p-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_Sinf15-zEeeDM7N9y1fOSA" body="_Sim9YZ-zEeeDM7N9y1fOSA _Sim9Zp-zEeeDM7N9y1fOSA _Sim9jp-zEeeDM7N9y1fOSA _Sim9lp-zEeeDM7N9y1fOSA _Sim9np-zEeeDM7N9y1fOSA _Sim9pp-zEeeDM7N9y1fOSA _SinfdZ-zEeeDM7N9y1fOSA" bodyOutput="_Sim9k5-zEeeDM7N9y1fOSA _Sim9m5-zEeeDM7N9y1fOSA _Sim9o5-zEeeDM7N9y1fOSA _Sinfcp-zEeeDM7N9y1fOSA _Sinfep-zEeeDM7N9y1fOSA" decider="_Sim9XZ-zEeeDM7N9y1fOSA" successorClause="_Sinf2J-zEeeDM7N9y1fOSA" test="_Sim9XJ-zEeeDM7N9y1fOSA"/>
              <clause xmi:id="_Sinf2J-zEeeDM7N9y1fOSA" body="_Sinfgp-zEeeDM7N9y1fOSA _Sinfh5-zEeeDM7N9y1fOSA _Sinfr5-zEeeDM7N9y1fOSA _Sinft5-zEeeDM7N9y1fOSA _Sinfv5-zEeeDM7N9y1fOSA _Sinfx5-zEeeDM7N9y1fOSA _Sinfz5-zEeeDM7N9y1fOSA" bodyOutput="_SinftJ-zEeeDM7N9y1fOSA _SinfvJ-zEeeDM7N9y1fOSA _SinfxJ-zEeeDM7N9y1fOSA _SinfzJ-zEeeDM7N9y1fOSA _Sinf1J-zEeeDM7N9y1fOSA" decider="_Sinffp-zEeeDM7N9y1fOSA" predecessorClause="_Sinf15-zEeeDM7N9y1fOSA" test="_SinffZ-zEeeDM7N9y1fOSA"/>
              <result xmi:id="_Sinf2Z-zEeeDM7N9y1fOSA" name="IfStatement@21cc25f2.result(sig)" outgoing="_Sim6Mp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf2p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf25-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sinf3J-zEeeDM7N9y1fOSA" name="IfStatement@21cc25f2.result(terminate)" outgoing="_Sim6M5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf3Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf3p-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sinf35-zEeeDM7N9y1fOSA" name="IfStatement@21cc25f2.result(s)" outgoing="_Sim6NJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf4J-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf4Z-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sinf4p-zEeeDM7N9y1fOSA" name="IfStatement@21cc25f2.result(arrival3)" outgoing="_Sim6NZ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf45-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf5J-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <result xmi:id="_Sinf5Z-zEeeDM7N9y1fOSA" name="IfStatement@21cc25f2.result(s1)" outgoing="_Sim6Np-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf5p-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf55-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Sinf6J-zEeeDM7N9y1fOSA" name="Fork(sig)" incoming="_Sim6Mp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Sinf6Z-zEeeDM7N9y1fOSA" name="Fork(terminate)" incoming="_Sim6M5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Sinf6p-zEeeDM7N9y1fOSA" name="Fork(s)" incoming="_Sim6NJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Sinf65-zEeeDM7N9y1fOSA" name="Fork(arrival3)" incoming="_Sim6NZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Sinf7J-zEeeDM7N9y1fOSA" name="Fork(s1)" incoming="_Sim6Np-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinf7Z-zEeeDM7N9y1fOSA" name="AcceptStatement@4f5ce108" incoming="_Sim6Qp-zEeeDM7N9y1fOSA" outgoing="_Sim6RJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinf7p-zEeeDM7N9y1fOSA" target="_Sinf8Z-zEeeDM7N9y1fOSA" source="_Sinf9p-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinf75-zEeeDM7N9y1fOSA" target="_Sinf8J-zEeeDM7N9y1fOSA" source="_Sinf8p-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sinf8J-zEeeDM7N9y1fOSA" name="Fork(Accept(SignalTermination).result)" incoming="_Sinf75-zEeeDM7N9y1fOSA" outgoing="_Sim6Q5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_Sinf8Z-zEeeDM7N9y1fOSA" name="Accept(SignalTermination)" incoming="_Sinf7p-zEeeDM7N9y1fOSA">
                <result xmi:id="_Sinf8p-zEeeDM7N9y1fOSA" name="Accept(SignalTermination).result" outgoing="_Sinf75-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf85-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinf9J-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <trigger xmi:id="_Sinf9Z-zEeeDM7N9y1fOSA" event="_SioGjp-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sinf9p-zEeeDM7N9y1fOSA" name="Initial(Accept(SignalTermination))" outgoing="_Sinf7p-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinf95-zEeeDM7N9y1fOSA" name="ExpressionStatement@2cf4bef3" incoming="_Sim6RJ-zEeeDM7N9y1fOSA" outgoing="_Sim6RZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinf-J-zEeeDM7N9y1fOSA" target="_SingAp-zEeeDM7N9y1fOSA" source="_Sinf_p-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinf-Z-zEeeDM7N9y1fOSA" target="_SingC5-zEeeDM7N9y1fOSA" source="_SingCJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinf-p-zEeeDM7N9y1fOSA" target="_SingD5-zEeeDM7N9y1fOSA" source="_SingBZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinf-5-zEeeDM7N9y1fOSA" target="_Sinf_J-zEeeDM7N9y1fOSA" source="_SingGJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinf_J-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@61c9f15d)" incoming="_Sinf-5-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_Sinf_Z-zEeeDM7N9y1fOSA" name="ReadSelf">
                  <result xmi:id="_Sinf_p-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sinf-J-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinf_5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingAJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SingAZ-zEeeDM7N9y1fOSA" name="Clear(sig1)" structuralFeature="_Sim5_Z-zEeeDM7N9y1fOSA">
                <object xmi:id="_SingAp-zEeeDM7N9y1fOSA" name="Clear(sig1).object" incoming="_Sinf-J-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingA5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingBJ-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_SingBZ-zEeeDM7N9y1fOSA" name="Clear(sig1).result" outgoing="_Sinf-p-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingBp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingB5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SingCJ-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@61c9f15d)" incoming="_Sim6Q5-zEeeDM7N9y1fOSA" outgoing="_Sinf-Z-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingCZ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SingCp-zEeeDM7N9y1fOSA" target="_SingFZ-zEeeDM7N9y1fOSA" source="_SingC5-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SingC5-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::sig1).input(MyTest::sig1)" incoming="_Sinf-Z-zEeeDM7N9y1fOSA" outgoing="_SingCp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingDJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingDZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SingDp-zEeeDM7N9y1fOSA" name="Write(sig1)" structuralFeature="_Sim5_Z-zEeeDM7N9y1fOSA" isReplaceAll="true">
                  <object xmi:id="_SingD5-zEeeDM7N9y1fOSA" name="Write(sig1).object" incoming="_Sinf-p-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingEJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingEZ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SingEp-zEeeDM7N9y1fOSA" name="Write(sig1).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingE5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingFJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_SingFZ-zEeeDM7N9y1fOSA" name="Write(sig1).value" incoming="_SingCp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingFp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingF5-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingGJ-zEeeDM7N9y1fOSA" name="RightHandSide@bab6f2f" outgoing="_Sinf-5-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingGZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@7fd04b72" incoming="_Sim6RZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SingGp-zEeeDM7N9y1fOSA" target="_SingHp-zEeeDM7N9y1fOSA" source="_SingKZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SingG5-zEeeDM7N9y1fOSA" target="_SingLJ-zEeeDM7N9y1fOSA" source="_SingIp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SingHJ-zEeeDM7N9y1fOSA" target="_SingJp-zEeeDM7N9y1fOSA" source="_SingLJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SingHZ-zEeeDM7N9y1fOSA" name="SendSignal(Continue)" signal="_SinkoJ-zEeeDM7N9y1fOSA">
                <target xmi:id="_SingHp-zEeeDM7N9y1fOSA" name="SendSignal(Continue).target" incoming="_SingGp-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingH5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingIJ-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SingIZ-zEeeDM7N9y1fOSA" name="ReadSelf">
                <result xmi:id="_SingIp-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SingG5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingI5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingJJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SingJZ-zEeeDM7N9y1fOSA" name="Read(tester)" structuralFeature="_Sim6Ep-zEeeDM7N9y1fOSA">
                <object xmi:id="_SingJp-zEeeDM7N9y1fOSA" name="Read(tester).object" incoming="_SingHJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingJ5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingKJ-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_SingKZ-zEeeDM7N9y1fOSA" name="Read(tester).result" outgoing="_SingGp-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingKp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingK5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SingLJ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SingG5-zEeeDM7N9y1fOSA" outgoing="_SingHJ-zEeeDM7N9y1fOSA"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SingLZ-zEeeDM7N9y1fOSA" name="MyTest$method$1" specification="_Sing9p-zEeeDM7N9y1fOSA" node="_SingN5-zEeeDM7N9y1fOSA _SingOJ-zEeeDM7N9y1fOSA _SingOZ-zEeeDM7N9y1fOSA _SingOp-zEeeDM7N9y1fOSA" group="_SingOp-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_SingLp-zEeeDM7N9y1fOSA" name="tester" type="_SinhAp-zEeeDM7N9y1fOSA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingL5-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingMJ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SingMZ-zEeeDM7N9y1fOSA" name="" type="_Sim59Z-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingMp-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingM5-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SingNJ-zEeeDM7N9y1fOSA" target="_SingOJ-zEeeDM7N9y1fOSA" source="_SingN5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SingNZ-zEeeDM7N9y1fOSA" target="_SingWJ-zEeeDM7N9y1fOSA" source="_SingOJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SingNp-zEeeDM7N9y1fOSA" target="_SingOZ-zEeeDM7N9y1fOSA" source="_SingbZ-zEeeDM7N9y1fOSA"/>
          <structuredNode xmi:id="_SingOp-zEeeDM7N9y1fOSA" name="Body(MyTest$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingO5-zEeeDM7N9y1fOSA" target="_SingbZ-zEeeDM7N9y1fOSA" source="_Singap-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingPJ-zEeeDM7N9y1fOSA" target="_Singb5-zEeeDM7N9y1fOSA" source="_SingbZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SingPZ-zEeeDM7N9y1fOSA" target="_SingRp-zEeeDM7N9y1fOSA" source="_Singbp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingPp-zEeeDM7N9y1fOSA" target="_Singc5-zEeeDM7N9y1fOSA" source="_SingbZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingP5-zEeeDM7N9y1fOSA" target="_Singep-zEeeDM7N9y1fOSA" source="_Singdp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingQJ-zEeeDM7N9y1fOSA" target="_Singhp-zEeeDM7N9y1fOSA" source="_SingfZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingQZ-zEeeDM7N9y1fOSA" target="_SingjJ-zEeeDM7N9y1fOSA" source="_SinggZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SingQp-zEeeDM7N9y1fOSA" target="_SingkJ-zEeeDM7N9y1fOSA" source="_Singj5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingQ5-zEeeDM7N9y1fOSA" target="_SingkJ-zEeeDM7N9y1fOSA" source="_SingiZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SingRJ-zEeeDM7N9y1fOSA" target="_Singbp-zEeeDM7N9y1fOSA" source="_SingkJ-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SingRZ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingRp-zEeeDM7N9y1fOSA" name="Body" incoming="_SingPZ-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingR5-zEeeDM7N9y1fOSA" name="ExpressionStatement@3bb0d33d">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SingSJ-zEeeDM7N9y1fOSA" target="_SingUp-zEeeDM7N9y1fOSA" source="_SingTp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SingSZ-zEeeDM7N9y1fOSA" target="_SingW5-zEeeDM7N9y1fOSA" source="_SingWJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SingSp-zEeeDM7N9y1fOSA" target="_SingX5-zEeeDM7N9y1fOSA" source="_SingVZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SingS5-zEeeDM7N9y1fOSA" target="_SingTJ-zEeeDM7N9y1fOSA" source="_SingaJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingTJ-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@355cf453)" incoming="_SingS5-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SingTZ-zEeeDM7N9y1fOSA" name="ReadSelf">
                    <result xmi:id="_SingTp-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SingSJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingT5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingUJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SingUZ-zEeeDM7N9y1fOSA" name="Clear(tester)" structuralFeature="_Sim6Ep-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SingUp-zEeeDM7N9y1fOSA" name="Clear(tester).object" incoming="_SingSJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingU5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingVJ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SingVZ-zEeeDM7N9y1fOSA" name="Clear(tester).result" outgoing="_SingSp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingVp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingV5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SingWJ-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@355cf453)" incoming="_SingNZ-zEeeDM7N9y1fOSA" outgoing="_SingSZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingWZ-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SingWp-zEeeDM7N9y1fOSA" target="_SingZZ-zEeeDM7N9y1fOSA" source="_SingW5-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SingW5-zEeeDM7N9y1fOSA" name="WriteAll(MyTest::tester).input(MyTest::tester)" incoming="_SingSZ-zEeeDM7N9y1fOSA" outgoing="_SingWp-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingXJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingXZ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SingXp-zEeeDM7N9y1fOSA" name="Write(tester)" structuralFeature="_Sim6Ep-zEeeDM7N9y1fOSA" isReplaceAll="true">
                    <object xmi:id="_SingX5-zEeeDM7N9y1fOSA" name="Write(tester).object" incoming="_SingSp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingYJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingYZ-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_SingYp-zEeeDM7N9y1fOSA" name="Write(tester).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingY5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingZJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_SingZZ-zEeeDM7N9y1fOSA" name="Write(tester).value" incoming="_SingWp-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingZp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingZ5-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingaJ-zEeeDM7N9y1fOSA" name="RightHandSide@445ef394" outgoing="_SingS5-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SingaZ-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_Singap-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SingO5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singa5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingbJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SingbZ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SingO5-zEeeDM7N9y1fOSA" outgoing="_SingNp-zEeeDM7N9y1fOSA _SingPJ-zEeeDM7N9y1fOSA _SingPp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_Singbp-zEeeDM7N9y1fOSA" name="Call(MyTest$initialization$1)" incoming="_SingRJ-zEeeDM7N9y1fOSA" outgoing="_SingPZ-zEeeDM7N9y1fOSA" operation="_Sing9Z-zEeeDM7N9y1fOSA">
              <target xmi:id="_Singb5-zEeeDM7N9y1fOSA" name="Call(MyTest$initialization$1).target" incoming="_SingPJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingcJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingcZ-zEeeDM7N9y1fOSA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Singcp-zEeeDM7N9y1fOSA" name="Read(MyTest$initializationFlag$1)" structuralFeature="_Sim595-zEeeDM7N9y1fOSA">
              <object xmi:id="_Singc5-zEeeDM7N9y1fOSA" name="Read(MyTest$initializationFlag$1).object" incoming="_SingPp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingdJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingdZ-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_Singdp-zEeeDM7N9y1fOSA" name="Read(MyTest$initializationFlag$1).result" outgoing="_SingP5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singd5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingeJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SingeZ-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_Singep-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SingP5-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singe5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingfJ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SingfZ-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SingQJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singfp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singf5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinggJ-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_SinggZ-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SingQZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singgp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singg5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SinghJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SinghZ-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_Singhp-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SingQJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singh5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingiJ-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_SingiZ-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SingQ5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singip-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singi5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SingjJ-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SingQZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingjZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singjp-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Singj5-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SingQp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SingkJ-zEeeDM7N9y1fOSA" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_SingQp-zEeeDM7N9y1fOSA _SingQ5-zEeeDM7N9y1fOSA" outgoing="_SingRJ-zEeeDM7N9y1fOSA" decisionInputFlow="_SingQ5-zEeeDM7N9y1fOSA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SingN5-zEeeDM7N9y1fOSA" name="Input(tester)" outgoing="_SingNJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" parameter="_SingLp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SingOJ-zEeeDM7N9y1fOSA" name="Fork(tester)" incoming="_SingNJ-zEeeDM7N9y1fOSA" outgoing="_SingNZ-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SingOZ-zEeeDM7N9y1fOSA" name="Return" incoming="_SingNp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" parameter="_SingMZ-zEeeDM7N9y1fOSA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SingkZ-zEeeDM7N9y1fOSA" name="destroy$method$1" specification="_Sing_Z-zEeeDM7N9y1fOSA" node="_Singkp-zEeeDM7N9y1fOSA" group="_Singkp-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_Singkp-zEeeDM7N9y1fOSA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Singk5-zEeeDM7N9y1fOSA" name="MyTest$initialization$1" specification="_Sing9Z-zEeeDM7N9y1fOSA" node="_SinglJ-zEeeDM7N9y1fOSA" group="_SinglJ-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_SinglJ-zEeeDM7N9y1fOSA" name="Body(MyTest$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinglZ-zEeeDM7N9y1fOSA" target="_SingpZ-zEeeDM7N9y1fOSA" source="_Singop-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Singlp-zEeeDM7N9y1fOSA" target="_Singqp-zEeeDM7N9y1fOSA" source="_SingpZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Singl5-zEeeDM7N9y1fOSA" target="_SingtZ-zEeeDM7N9y1fOSA" source="_SingpZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingmJ-zEeeDM7N9y1fOSA" target="_SingyJ-zEeeDM7N9y1fOSA" source="_SingpZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingmZ-zEeeDM7N9y1fOSA" target="_Sing15-zEeeDM7N9y1fOSA" source="_SingpZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Singmp-zEeeDM7N9y1fOSA" target="_Sing3p-zEeeDM7N9y1fOSA" source="_Sing2p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Singm5-zEeeDM7N9y1fOSA" target="_Sing6p-zEeeDM7N9y1fOSA" source="_Sing4Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SingnJ-zEeeDM7N9y1fOSA" target="_Sing8J-zEeeDM7N9y1fOSA" source="_Sing5Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SingnZ-zEeeDM7N9y1fOSA" target="_Sing9J-zEeeDM7N9y1fOSA" source="_Sing85-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Singnp-zEeeDM7N9y1fOSA" target="_Sing9J-zEeeDM7N9y1fOSA" source="_Sing7Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Singn5-zEeeDM7N9y1fOSA" target="_Singpp-zEeeDM7N9y1fOSA" source="_Sing9J-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SingoJ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SingoZ-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_Singop-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinglZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singo5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingpJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SingpZ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SinglZ-zEeeDM7N9y1fOSA" outgoing="_Singlp-zEeeDM7N9y1fOSA _Singl5-zEeeDM7N9y1fOSA _SingmJ-zEeeDM7N9y1fOSA _SingmZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Singpp-zEeeDM7N9y1fOSA" name="Initialization" incoming="_Singn5-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_Singp5-zEeeDM7N9y1fOSA" target="_SingrZ-zEeeDM7N9y1fOSA" source="_SingqZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SingqJ-zEeeDM7N9y1fOSA" target="_Singvp-zEeeDM7N9y1fOSA" source="_SingrZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SingqZ-zEeeDM7N9y1fOSA" name="Call(Super$initialization$1)" outgoing="_Singp5-zEeeDM7N9y1fOSA" operation="_Sim56Z-zEeeDM7N9y1fOSA">
                <target xmi:id="_Singqp-zEeeDM7N9y1fOSA" name="Call(Super$initialization$1).target" incoming="_Singlp-zEeeDM7N9y1fOSA" type="_Sim5X5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singq5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingrJ-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SingrZ-zEeeDM7N9y1fOSA" name="Initialize(count)" incoming="_Singp5-zEeeDM7N9y1fOSA" outgoing="_SingqJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Singrp-zEeeDM7N9y1fOSA" target="_Singu5-zEeeDM7N9y1fOSA" source="_SingsJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Singr5-zEeeDM7N9y1fOSA" name="Value(0)">
                  <result xmi:id="_SingsJ-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_Singrp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingsZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singsp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sings5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SingtJ-zEeeDM7N9y1fOSA" name="Write(count)" structuralFeature="_Sim6CZ-zEeeDM7N9y1fOSA" isReplaceAll="true">
                  <object xmi:id="_SingtZ-zEeeDM7N9y1fOSA" name="Write(count).object" incoming="_Singl5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singtp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singt5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinguJ-zEeeDM7N9y1fOSA" name="Write(count).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinguZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singup-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_Singu5-zEeeDM7N9y1fOSA" name="Write(count).value" incoming="_Singrp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingvJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SingvZ-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Singvp-zEeeDM7N9y1fOSA" name="Set(initializationFlag)" incoming="_SingqJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Singv5-zEeeDM7N9y1fOSA" target="_Sing1Z-zEeeDM7N9y1fOSA" source="_SingwZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SingwJ-zEeeDM7N9y1fOSA" name="Value(true)">
                  <result xmi:id="_SingwZ-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_Singv5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Singwp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singw5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SingxJ-zEeeDM7N9y1fOSA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SingxZ-zEeeDM7N9y1fOSA" name="Iterate(Write(MyTest$initializationFlag$1))" inputElement="_Sing1Z-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Singxp-zEeeDM7N9y1fOSA" target="_Sing0p-zEeeDM7N9y1fOSA" source="_Sing1Z-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Singx5-zEeeDM7N9y1fOSA" target="_SingzJ-zEeeDM7N9y1fOSA" source="_SingyJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SingyJ-zEeeDM7N9y1fOSA" name="Iterate(Write(MyTest$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_SingmJ-zEeeDM7N9y1fOSA" outgoing="_Singx5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingyZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singyp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Singy5-zEeeDM7N9y1fOSA" name="Write(MyTest$initializationFlag$1)" structuralFeature="_Sim595-zEeeDM7N9y1fOSA">
                    <object xmi:id="_SingzJ-zEeeDM7N9y1fOSA" name="Write(MyTest$initializationFlag$1).object" incoming="_Singx5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SingzZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Singzp-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Singz5-zEeeDM7N9y1fOSA" name="Write(MyTest$initializationFlag$1).result" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing0J-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing0Z-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_Sing0p-zEeeDM7N9y1fOSA" name="Write(MyTest$initializationFlag$1).value" incoming="_Singxp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing05-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing1J-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Sing1Z-zEeeDM7N9y1fOSA" name="Iterate(Write(MyTest$initializationFlag$1)).inputElement" incoming="_Singv5-zEeeDM7N9y1fOSA" outgoing="_Singxp-zEeeDM7N9y1fOSA" regionAsInput="_SingxZ-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sing1p-zEeeDM7N9y1fOSA" name="Read(MyTest$initializationFlag$1)" structuralFeature="_Sim595-zEeeDM7N9y1fOSA">
              <object xmi:id="_Sing15-zEeeDM7N9y1fOSA" name="Read(MyTest$initializationFlag$1).object" incoming="_SingmZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing2J-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing2Z-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_Sing2p-zEeeDM7N9y1fOSA" name="Read(MyTest$initializationFlag$1).result" outgoing="_Singmp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing25-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing3J-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sing3Z-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_Sing3p-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_Singmp-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing35-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing4J-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_Sing4Z-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_Singm5-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing4p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing45-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sing5J-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_Sing5Z-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SingnJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing5p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing55-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Sing6J-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Sing6Z-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_Sing6p-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_Singm5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing65-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing7J-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_Sing7Z-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_Singnp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing7p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing75-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_Sing8J-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SingnJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing8Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing8p-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_Sing85-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SingnZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Sing9J-zEeeDM7N9y1fOSA" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_SingnZ-zEeeDM7N9y1fOSA _Singnp-zEeeDM7N9y1fOSA" outgoing="_Singn5-zEeeDM7N9y1fOSA" decisionInputFlow="_Singnp-zEeeDM7N9y1fOSA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Sing9Z-zEeeDM7N9y1fOSA" name="MyTest$initialization$1" visibility="protected" method="_Singk5-zEeeDM7N9y1fOSA"/>
        <ownedOperation xmi:id="_Sing9p-zEeeDM7N9y1fOSA" name="MyTest" visibility="public" method="_SingLZ-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_Sing95-zEeeDM7N9y1fOSA" name="tester" visibility="package" type="_SinhAp-zEeeDM7N9y1fOSA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing-J-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing-Z-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Sing-p-zEeeDM7N9y1fOSA" name="" visibility="package" type="_Sim59Z-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sing-5-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sing_J-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Sing_Z-zEeeDM7N9y1fOSA" name="destroy" visibility="public" method="_SingkZ-zEeeDM7N9y1fOSA" redefinedOperation="_Sim57p-zEeeDM7N9y1fOSA"/>
        <ownedReception xmi:id="_Sing_p-zEeeDM7N9y1fOSA" name="SignalNewArrival" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_Sing_5-zEeeDM7N9y1fOSA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhAJ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhAZ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
        </ownedReception>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SinhAp-zEeeDM7N9y1fOSA" name="TestRunner" visibility="public" classifierBehavior="_SinhCZ-zEeeDM7N9y1fOSA" isActive="true">
        <ownedAttribute xmi:id="_SinhA5-zEeeDM7N9y1fOSA" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhBJ-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhBZ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SinhBp-zEeeDM7N9y1fOSA" name="outer" visibility="private" type="_SioGkZ-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhB5-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhCJ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SinhCZ-zEeeDM7N9y1fOSA" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_SinhCp-zEeeDM7N9y1fOSA" group="_SinhCp-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_SinhCp-zEeeDM7N9y1fOSA" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhC5-zEeeDM7N9y1fOSA" target="_SinhJZ-zEeeDM7N9y1fOSA" source="_SinhIJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhDJ-zEeeDM7N9y1fOSA" target="_SinhNJ-zEeeDM7N9y1fOSA" source="_SinhJZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhDZ-zEeeDM7N9y1fOSA" target="_SinhU5-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhDp-zEeeDM7N9y1fOSA" target="_SinhOZ-zEeeDM7N9y1fOSA" source="_SinhNJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhD5-zEeeDM7N9y1fOSA" target="_SinheJ-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhEJ-zEeeDM7N9y1fOSA" target="_SinhW5-zEeeDM7N9y1fOSA" source="_SinhOZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhEZ-zEeeDM7N9y1fOSA" target="_Sinhl5-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhEp-zEeeDM7N9y1fOSA" target="_Sinhfp-zEeeDM7N9y1fOSA" source="_SinhW5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhE5-zEeeDM7N9y1fOSA" target="_Sinht5-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhFJ-zEeeDM7N9y1fOSA" target="_SinhmJ-zEeeDM7N9y1fOSA" source="_Sinhfp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhFZ-zEeeDM7N9y1fOSA" target="_Sinh_J-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhFp-zEeeDM7N9y1fOSA" target="_SinhxZ-zEeeDM7N9y1fOSA" source="_SinhmJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhF5-zEeeDM7N9y1fOSA" target="_SiniX5-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhGJ-zEeeDM7N9y1fOSA" target="_SiniKJ-zEeeDM7N9y1fOSA" source="_SinhxZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhGZ-zEeeDM7N9y1fOSA" target="_SiniqJ-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhGp-zEeeDM7N9y1fOSA" target="_Sinii5-zEeeDM7N9y1fOSA" source="_SiniKJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhG5-zEeeDM7N9y1fOSA" target="_Sinix5-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhHJ-zEeeDM7N9y1fOSA" target="_Sinirp-zEeeDM7N9y1fOSA" source="_Sinii5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhHZ-zEeeDM7N9y1fOSA" target="_Sini4p-zEeeDM7N9y1fOSA" source="_SinhM5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhHp-zEeeDM7N9y1fOSA" target="_SiniyJ-zEeeDM7N9y1fOSA" source="_Sinirp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinhH5-zEeeDM7N9y1fOSA" target="_Sini6p-zEeeDM7N9y1fOSA" source="_SiniyJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhIJ-zEeeDM7N9y1fOSA" name="AcceptStatement@53fa09" outgoing="_SinhC5-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhIZ-zEeeDM7N9y1fOSA" target="_SinhIp-zEeeDM7N9y1fOSA" source="_SinhJJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SinhIp-zEeeDM7N9y1fOSA" name="Accept(Start)" incoming="_SinhIZ-zEeeDM7N9y1fOSA">
                <trigger xmi:id="_SinhI5-zEeeDM7N9y1fOSA" event="_SioGj5-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SinhJJ-zEeeDM7N9y1fOSA" name="Initial(Accept(Start))" outgoing="_SinhIZ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhJZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@19bcc8f7" incoming="_SinhC5-zEeeDM7N9y1fOSA" outgoing="_SinhDJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhJp-zEeeDM7N9y1fOSA" target="_SinhM5-zEeeDM7N9y1fOSA" source="_SinhKZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhJ5-zEeeDM7N9y1fOSA" target="_SinhLJ-zEeeDM7N9y1fOSA" source="_SinhMJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SinhKJ-zEeeDM7N9y1fOSA" name="Call(run)" operation="_Sinkmp-zEeeDM7N9y1fOSA">
                <result xmi:id="_SinhKZ-zEeeDM7N9y1fOSA" name="Call(run).result(test)" outgoing="_SinhJp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhKp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhK5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <target xmi:id="_SinhLJ-zEeeDM7N9y1fOSA" name="Call(run).target" incoming="_SinhJ5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhLZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhLp-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SinhL5-zEeeDM7N9y1fOSA" name="ReadSelf">
                <result xmi:id="_SinhMJ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinhJ5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhMZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhMp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SinhM5-zEeeDM7N9y1fOSA" name="Fork(test)@7435c915" incoming="_SinhJp-zEeeDM7N9y1fOSA" outgoing="_SinhDZ-zEeeDM7N9y1fOSA _SinhD5-zEeeDM7N9y1fOSA _SinhEZ-zEeeDM7N9y1fOSA _SinhE5-zEeeDM7N9y1fOSA _SinhFZ-zEeeDM7N9y1fOSA _SinhF5-zEeeDM7N9y1fOSA _SinhGZ-zEeeDM7N9y1fOSA _SinhG5-zEeeDM7N9y1fOSA _SinhHZ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhNJ-zEeeDM7N9y1fOSA" name="AcceptStatement@585fec41" incoming="_SinhDJ-zEeeDM7N9y1fOSA" outgoing="_SinhDp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhNZ-zEeeDM7N9y1fOSA" target="_SinhNp-zEeeDM7N9y1fOSA" source="_SinhOJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SinhNp-zEeeDM7N9y1fOSA" name="Accept(Continue)" incoming="_SinhNZ-zEeeDM7N9y1fOSA">
                <trigger xmi:id="_SinhN5-zEeeDM7N9y1fOSA" event="_SioGkJ-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SinhOJ-zEeeDM7N9y1fOSA" name="Initial(Accept(Continue))" outgoing="_SinhNZ-zEeeDM7N9y1fOSA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhOZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@21856412" incoming="_SinhDp-zEeeDM7N9y1fOSA" outgoing="_SinhEJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhOp-zEeeDM7N9y1fOSA" target="_SinhPp-zEeeDM7N9y1fOSA" source="_SinhSJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhO5-zEeeDM7N9y1fOSA" target="_SinhQZ-zEeeDM7N9y1fOSA" source="_SinhWJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhPJ-zEeeDM7N9y1fOSA" target="_SinhPZ-zEeeDM7N9y1fOSA" source="_SinhRJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinhPZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue)" incoming="_SinhPJ-zEeeDM7N9y1fOSA" behavior="_SioIG5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinhPp-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(label)" incoming="_SinhOp-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhP5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhQJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinhQZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(condition)" incoming="_SinhO5-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhQp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhQ5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhRJ-zEeeDM7N9y1fOSA" name="Tuple@17a5e7a3" outgoing="_SinhPJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhRZ-zEeeDM7N9y1fOSA" target="_SinhTZ-zEeeDM7N9y1fOSA" source="_SinhU5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhRp-zEeeDM7N9y1fOSA" target="_SinhVZ-zEeeDM7N9y1fOSA" source="_SinhUJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinhR5-zEeeDM7N9y1fOSA" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_SinhSJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_SinhOp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhSZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhSp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinhS5-zEeeDM7N9y1fOSA" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinhTJ-zEeeDM7N9y1fOSA" name="Read(sig)" structuralFeature="_Sim5-p-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SinhTZ-zEeeDM7N9y1fOSA" name="Read(sig).object" incoming="_SinhRZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhTp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhT5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinhUJ-zEeeDM7N9y1fOSA" name="Read(sig).result" outgoing="_SinhRp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhUZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhUp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SinhU5-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhDZ-zEeeDM7N9y1fOSA" outgoing="_SinhRZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SinhVJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_Sim585-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SinhVZ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_SinhRp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhVp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhV5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinhWJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_SinhO5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhWZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhWp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhW5-zEeeDM7N9y1fOSA" name="ExpressionStatement@6a576173" incoming="_SinhEJ-zEeeDM7N9y1fOSA" outgoing="_SinhEp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhXJ-zEeeDM7N9y1fOSA" target="_SinhYZ-zEeeDM7N9y1fOSA" source="_SinhbZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhXZ-zEeeDM7N9y1fOSA" target="_SinhZJ-zEeeDM7N9y1fOSA" source="_SinhdZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhXp-zEeeDM7N9y1fOSA" target="_SinhZ5-zEeeDM7N9y1fOSA" source="_Sinhep-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhX5-zEeeDM7N9y1fOSA" target="_SinhYJ-zEeeDM7N9y1fOSA" source="_Sinhap-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinhYJ-zEeeDM7N9y1fOSA" name="Call(AssertEqual)" incoming="_SinhX5-zEeeDM7N9y1fOSA" behavior="_SioIs5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinhYZ-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(label)" incoming="_SinhXJ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhYp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhY5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinhZJ-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(value1)" incoming="_SinhXZ-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhZZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhZp-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinhZ5-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(value2)" incoming="_SinhXp-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhaJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhaZ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinhap-zEeeDM7N9y1fOSA" name="Tuple@260e5ec7" outgoing="_SinhX5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinha5-zEeeDM7N9y1fOSA" target="_Sinhcp-zEeeDM7N9y1fOSA" source="_SinheJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinhbJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_SinhbZ-zEeeDM7N9y1fOSA" name="Value(&quot;test.name&quot;).result" outgoing="_SinhXJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhbp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhb5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinhcJ-zEeeDM7N9y1fOSA" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinhcZ-zEeeDM7N9y1fOSA" name="Read(name)" structuralFeature="_Sim6AJ-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Sinhcp-zEeeDM7N9y1fOSA" name="Read(name).object" incoming="_Sinha5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhc5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhdJ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinhdZ-zEeeDM7N9y1fOSA" name="Read(name).result" outgoing="_SinhXZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhdp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhd5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SinheJ-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhD5-zEeeDM7N9y1fOSA" outgoing="_Sinha5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinheZ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_Sinhep-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival1&quot;).result" outgoing="_SinhXp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhe5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhfJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinhfZ-zEeeDM7N9y1fOSA" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinhfp-zEeeDM7N9y1fOSA" name="ExpressionStatement@9f4c339" incoming="_SinhEp-zEeeDM7N9y1fOSA" outgoing="_SinhFJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhf5-zEeeDM7N9y1fOSA" target="_Sinhg5-zEeeDM7N9y1fOSA" source="_SinhjJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhgJ-zEeeDM7N9y1fOSA" target="_Sinhhp-zEeeDM7N9y1fOSA" source="_SinhlJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhgZ-zEeeDM7N9y1fOSA" target="_Sinhgp-zEeeDM7N9y1fOSA" source="_SinhiZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sinhgp-zEeeDM7N9y1fOSA" name="Call(AssertFalse)" incoming="_SinhgZ-zEeeDM7N9y1fOSA" behavior="_SioKv5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_Sinhg5-zEeeDM7N9y1fOSA" name="Call(AssertFalse).argument(label)" incoming="_Sinhf5-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhhJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhhZ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_Sinhhp-zEeeDM7N9y1fOSA" name="Call(AssertFalse).argument(condition)" incoming="_SinhgJ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhh5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhiJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhiZ-zEeeDM7N9y1fOSA" name="Tuple@1ca3d310" outgoing="_SinhgZ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhip-zEeeDM7N9y1fOSA" target="_SinhkZ-zEeeDM7N9y1fOSA" source="_Sinhl5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinhi5-zEeeDM7N9y1fOSA" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_SinhjJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.terminate&quot;).result" outgoing="_Sinhf5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhjZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhjp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinhj5-zEeeDM7N9y1fOSA" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinhkJ-zEeeDM7N9y1fOSA" name="Read(terminate)" structuralFeature="_Sim6A5-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SinhkZ-zEeeDM7N9y1fOSA" name="Read(terminate).object" incoming="_Sinhip-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhkp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhk5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinhlJ-zEeeDM7N9y1fOSA" name="Read(terminate).result" outgoing="_SinhgJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhlZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhlp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sinhl5-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhEZ-zEeeDM7N9y1fOSA" outgoing="_Sinhip-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhmJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@652fc1d1" incoming="_SinhFJ-zEeeDM7N9y1fOSA" outgoing="_SinhFp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhmZ-zEeeDM7N9y1fOSA" target="_Sinhnp-zEeeDM7N9y1fOSA" source="_SinhrJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhmp-zEeeDM7N9y1fOSA" target="_SinhoZ-zEeeDM7N9y1fOSA" source="_SinhvJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhm5-zEeeDM7N9y1fOSA" target="_SinhpJ-zEeeDM7N9y1fOSA" source="_SinhwZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhnJ-zEeeDM7N9y1fOSA" target="_SinhnZ-zEeeDM7N9y1fOSA" source="_Sinhp5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinhnZ-zEeeDM7N9y1fOSA" name="Call(AssertEqual)" incoming="_SinhnJ-zEeeDM7N9y1fOSA" behavior="_SioIs5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_Sinhnp-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(label)" incoming="_SinhmZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhn5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhoJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinhoZ-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(value1)" incoming="_Sinhmp-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhop-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinho5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinhpJ-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(value2)" incoming="_Sinhm5-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhpZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhpp-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinhp5-zEeeDM7N9y1fOSA" name="Tuple@607cd756" outgoing="_SinhnJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhqJ-zEeeDM7N9y1fOSA" target="_SinhsZ-zEeeDM7N9y1fOSA" source="_Sinht5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinhqZ-zEeeDM7N9y1fOSA" target="_Sinhv5-zEeeDM7N9y1fOSA" source="_SinhtJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhqp-zEeeDM7N9y1fOSA" target="_SinhuZ-zEeeDM7N9y1fOSA" source="_Sinhv5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinhq5-zEeeDM7N9y1fOSA" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_SinhrJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_SinhmZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhrZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhrp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinhr5-zEeeDM7N9y1fOSA" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinhsJ-zEeeDM7N9y1fOSA" name="Read(arrival)" structuralFeature="_Sim6Bp-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SinhsZ-zEeeDM7N9y1fOSA" name="Read(arrival).object" incoming="_SinhqJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhsp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhs5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinhtJ-zEeeDM7N9y1fOSA" name="Read(arrival).result" outgoing="_SinhqZ-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhtZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhtp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sinht5-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhE5-zEeeDM7N9y1fOSA" outgoing="_SinhqJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinhuJ-zEeeDM7N9y1fOSA" name="Read(name)" structuralFeature="_Sim58J-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SinhuZ-zEeeDM7N9y1fOSA" name="Read(name).object" incoming="_Sinhqp-zEeeDM7N9y1fOSA" type="_Sim575-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhup-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhu5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinhvJ-zEeeDM7N9y1fOSA" name="Read(name).result" outgoing="_Sinhmp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinhvZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhvp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sinhv5-zEeeDM7N9y1fOSA" name="Fork(Read(arrival).result)" incoming="_SinhqZ-zEeeDM7N9y1fOSA" outgoing="_Sinhqp-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinhwJ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_SinhwZ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival3&quot;).result" outgoing="_Sinhm5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhwp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhw5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinhxJ-zEeeDM7N9y1fOSA" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinhxZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@21b6cc93" incoming="_SinhFp-zEeeDM7N9y1fOSA" outgoing="_SinhGJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhxp-zEeeDM7N9y1fOSA" target="_Sinhyp-zEeeDM7N9y1fOSA" source="_Sinh3Z-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinhx5-zEeeDM7N9y1fOSA" target="_SinhzZ-zEeeDM7N9y1fOSA" source="_SiniJ5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinhyJ-zEeeDM7N9y1fOSA" target="_SinhyZ-zEeeDM7N9y1fOSA" source="_Sinh0J-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinhyZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue)" incoming="_SinhyJ-zEeeDM7N9y1fOSA" behavior="_SioIG5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_Sinhyp-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(label)" incoming="_Sinhxp-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhy5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinhzJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinhzZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(condition)" incoming="_Sinhx5-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinhzp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinhz5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinh0J-zEeeDM7N9y1fOSA" name="Tuple@6989ed66" outgoing="_SinhyJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh0Z-zEeeDM7N9y1fOSA" target="_SiniCZ-zEeeDM7N9y1fOSA" source="_Sinh45-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sinh0p-zEeeDM7N9y1fOSA" target="_SiniCJ-zEeeDM7N9y1fOSA" source="_Sinh4Z-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh05-zEeeDM7N9y1fOSA" target="_SiniFZ-zEeeDM7N9y1fOSA" source="_Sinh45-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sinh1J-zEeeDM7N9y1fOSA" target="_SiniJp-zEeeDM7N9y1fOSA" source="_SiniJZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh1Z-zEeeDM7N9y1fOSA" target="_SiniJp-zEeeDM7N9y1fOSA" source="_SiniDJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sinh1p-zEeeDM7N9y1fOSA" target="_SiniD5-zEeeDM7N9y1fOSA" source="_SiniJp-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sinh15-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sinh2J-zEeeDM7N9y1fOSA" target="_SiniG5-zEeeDM7N9y1fOSA" source="_SiniJp-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sinh2Z-zEeeDM7N9y1fOSA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh2p-zEeeDM7N9y1fOSA" target="_SiniJ5-zEeeDM7N9y1fOSA" source="_SiniEZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh25-zEeeDM7N9y1fOSA" target="_SiniJ5-zEeeDM7N9y1fOSA" source="_SiniHZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinh3J-zEeeDM7N9y1fOSA" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_Sinh3Z-zEeeDM7N9y1fOSA" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_Sinhxp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh3p-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinh35-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinh4J-zEeeDM7N9y1fOSA" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinh4Z-zEeeDM7N9y1fOSA" name="Operands(EqualityExpression@46e6c657)" outgoing="_Sinh0p-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh4p-zEeeDM7N9y1fOSA" target="_Sinh45-zEeeDM7N9y1fOSA" source="_Sinh8J-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_Sinh45-zEeeDM7N9y1fOSA" name="Fork(x)@ac13af8" incoming="_Sinh4p-zEeeDM7N9y1fOSA" outgoing="_Sinh0Z-zEeeDM7N9y1fOSA _Sinh05-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinh5J-zEeeDM7N9y1fOSA" name="RightHandSide@786e15e9">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh5Z-zEeeDM7N9y1fOSA" target="_Sinh6p-zEeeDM7N9y1fOSA" source="_Sinh-Z-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh5p-zEeeDM7N9y1fOSA" target="_SiniAp-zEeeDM7N9y1fOSA" source="_Sinh_p-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_Sinh55-zEeeDM7N9y1fOSA" target="_Sinh6Z-zEeeDM7N9y1fOSA" source="_Sinh85-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh6J-zEeeDM7N9y1fOSA" target="_Sinh7Z-zEeeDM7N9y1fOSA" source="_SiniAp-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sinh6Z-zEeeDM7N9y1fOSA" name="Call(At)" incoming="_Sinh55-zEeeDM7N9y1fOSA">
                      <argument xmi:id="_Sinh6p-zEeeDM7N9y1fOSA" name="Call(At).argument(seq)" incoming="_Sinh5Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh65-zEeeDM7N9y1fOSA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinh7J-zEeeDM7N9y1fOSA" value="*"/>
                      </argument>
                      <argument xmi:id="_Sinh7Z-zEeeDM7N9y1fOSA" name="Call(At).argument(index)" incoming="_Sinh6J-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh7p-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinh75-zEeeDM7N9y1fOSA" value="1"/>
                      </argument>
                      <result xmi:id="_Sinh8J-zEeeDM7N9y1fOSA" name="Call(At).result()" outgoing="_Sinh4p-zEeeDM7N9y1fOSA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh8Z-zEeeDM7N9y1fOSA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinh8p-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinh85-zEeeDM7N9y1fOSA" name="Tuple@29c47f0f" outgoing="_Sinh55-zEeeDM7N9y1fOSA">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinh9J-zEeeDM7N9y1fOSA" target="_Sinh9p-zEeeDM7N9y1fOSA" source="_Sinh_J-zEeeDM7N9y1fOSA"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sinh9Z-zEeeDM7N9y1fOSA" name="Read(signals)" structuralFeature="_Sim6DJ-zEeeDM7N9y1fOSA">
                        <object xmi:id="_Sinh9p-zEeeDM7N9y1fOSA" name="Read(signals).object" incoming="_Sinh9J-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh95-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinh-J-zEeeDM7N9y1fOSA" value="1"/>
                        </object>
                        <result xmi:id="_Sinh-Z-zEeeDM7N9y1fOSA" name="Read(signals).result" outgoing="_Sinh5Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh-p-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinh-5-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_Sinh_J-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhFZ-zEeeDM7N9y1fOSA" outgoing="_Sinh9J-zEeeDM7N9y1fOSA"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinh_Z-zEeeDM7N9y1fOSA" name="Value(1)">
                        <result xmi:id="_Sinh_p-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_Sinh5p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinh_5-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniAJ-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_SiniAZ-zEeeDM7N9y1fOSA" value="1">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SiniAp-zEeeDM7N9y1fOSA" name="Fork(Call(At).argument(index))" incoming="_Sinh5p-zEeeDM7N9y1fOSA" outgoing="_Sinh6J-zEeeDM7N9y1fOSA"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiniA5-zEeeDM7N9y1fOSA" name="Value(null)">
                    <result xmi:id="_SiniBJ-zEeeDM7N9y1fOSA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniBZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniBp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_SiniB5-zEeeDM7N9y1fOSA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiniCJ-zEeeDM7N9y1fOSA" name="Call(NotEmpty)" incoming="_Sinh0p-zEeeDM7N9y1fOSA">
                  <argument xmi:id="_SiniCZ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_Sinh0Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniCp-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniC5-zEeeDM7N9y1fOSA" value="*"/>
                  </argument>
                  <result xmi:id="_SiniDJ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_Sinh1Z-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniDZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniDp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniD5-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@2dabc095.operand2" incoming="_Sinh1p-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniEJ-zEeeDM7N9y1fOSA" target="_SiniEZ-zEeeDM7N9y1fOSA" source="_SiniGJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SiniEZ-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@2dabc095.operand2.result" incoming="_SiniEJ-zEeeDM7N9y1fOSA" outgoing="_Sinh2p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniEp-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniE5-zEeeDM7N9y1fOSA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SiniFJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_Sim575-zEeeDM7N9y1fOSA" isDirect="true">
                    <object xmi:id="_SiniFZ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_Sinh05-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniFp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniF5-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_SiniGJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_SiniEJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniGZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniGp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniG5-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@2dabc095.operand3" incoming="_Sinh2J-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniHJ-zEeeDM7N9y1fOSA" target="_SiniHZ-zEeeDM7N9y1fOSA" source="_SiniIZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SiniHZ-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@2dabc095.operand3.result" incoming="_SiniHJ-zEeeDM7N9y1fOSA" outgoing="_Sinh25-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniHp-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniH5-zEeeDM7N9y1fOSA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiniIJ-zEeeDM7N9y1fOSA" name="Value(false)">
                    <result xmi:id="_SiniIZ-zEeeDM7N9y1fOSA" name="Value(false).result" outgoing="_SiniHJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniIp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniI5-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_SiniJJ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SiniJZ-zEeeDM7N9y1fOSA" name="Initial(ConditionalLogicalExpression@2dabc095)" outgoing="_Sinh1J-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SiniJp-zEeeDM7N9y1fOSA" name="Decision(ConditionalLogicalExpression@2dabc095)" incoming="_Sinh1J-zEeeDM7N9y1fOSA _Sinh1Z-zEeeDM7N9y1fOSA" outgoing="_Sinh1p-zEeeDM7N9y1fOSA _Sinh2J-zEeeDM7N9y1fOSA" decisionInputFlow="_Sinh1Z-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SiniJ5-zEeeDM7N9y1fOSA" name="Merge(ConditionalLogicalExpression@2dabc095.result)" incoming="_Sinh2p-zEeeDM7N9y1fOSA _Sinh25-zEeeDM7N9y1fOSA" outgoing="_Sinhx5-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniKJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@184a8097" incoming="_SinhGJ-zEeeDM7N9y1fOSA" outgoing="_SinhGp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniKZ-zEeeDM7N9y1fOSA" target="_SiniLZ-zEeeDM7N9y1fOSA" source="_SiniQJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniKp-zEeeDM7N9y1fOSA" target="_SiniMJ-zEeeDM7N9y1fOSA" source="_Siniip-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SiniK5-zEeeDM7N9y1fOSA" target="_SiniLJ-zEeeDM7N9y1fOSA" source="_SiniM5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiniLJ-zEeeDM7N9y1fOSA" name="Call(AssertTrue)" incoming="_SiniK5-zEeeDM7N9y1fOSA" behavior="_SioIG5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SiniLZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(label)" incoming="_SiniKZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniLp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniL5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SiniMJ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(condition)" incoming="_SiniKp-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniMZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniMp-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniM5-zEeeDM7N9y1fOSA" name="Tuple@288e5d42" outgoing="_SiniK5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniNJ-zEeeDM7N9y1fOSA" target="_SinibJ-zEeeDM7N9y1fOSA" source="_SiniRp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SiniNZ-zEeeDM7N9y1fOSA" target="_Sinia5-zEeeDM7N9y1fOSA" source="_SiniRJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniNp-zEeeDM7N9y1fOSA" target="_SinieJ-zEeeDM7N9y1fOSA" source="_SiniRp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SiniN5-zEeeDM7N9y1fOSA" target="_SiniiZ-zEeeDM7N9y1fOSA" source="_SiniiJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniOJ-zEeeDM7N9y1fOSA" target="_SiniiZ-zEeeDM7N9y1fOSA" source="_Sinib5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SiniOZ-zEeeDM7N9y1fOSA" target="_Sinicp-zEeeDM7N9y1fOSA" source="_SiniiZ-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SiniOp-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SiniO5-zEeeDM7N9y1fOSA" target="_Sinifp-zEeeDM7N9y1fOSA" source="_SiniiZ-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SiniPJ-zEeeDM7N9y1fOSA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniPZ-zEeeDM7N9y1fOSA" target="_Siniip-zEeeDM7N9y1fOSA" source="_SinidJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniPp-zEeeDM7N9y1fOSA" target="_Siniip-zEeeDM7N9y1fOSA" source="_SinigJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiniP5-zEeeDM7N9y1fOSA" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_SiniQJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_SiniKZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniQZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniQp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SiniQ5-zEeeDM7N9y1fOSA" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniRJ-zEeeDM7N9y1fOSA" name="Operands(EqualityExpression@6177bedc)" outgoing="_SiniNZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniRZ-zEeeDM7N9y1fOSA" target="_SiniRp-zEeeDM7N9y1fOSA" source="_SiniU5-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_SiniRp-zEeeDM7N9y1fOSA" name="Fork(x)@4a7d6628" incoming="_SiniRZ-zEeeDM7N9y1fOSA" outgoing="_SiniNJ-zEeeDM7N9y1fOSA _SiniNp-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniR5-zEeeDM7N9y1fOSA" name="RightHandSide@43c41393">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniSJ-zEeeDM7N9y1fOSA" target="_SiniTZ-zEeeDM7N9y1fOSA" source="_SiniXJ-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniSZ-zEeeDM7N9y1fOSA" target="_SiniZZ-zEeeDM7N9y1fOSA" source="_SiniYZ-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SiniSp-zEeeDM7N9y1fOSA" target="_SiniTJ-zEeeDM7N9y1fOSA" source="_SiniVp-zEeeDM7N9y1fOSA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniS5-zEeeDM7N9y1fOSA" target="_SiniUJ-zEeeDM7N9y1fOSA" source="_SiniZZ-zEeeDM7N9y1fOSA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiniTJ-zEeeDM7N9y1fOSA" name="Call(At)" incoming="_SiniSp-zEeeDM7N9y1fOSA">
                      <argument xmi:id="_SiniTZ-zEeeDM7N9y1fOSA" name="Call(At).argument(seq)" incoming="_SiniSJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniTp-zEeeDM7N9y1fOSA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniT5-zEeeDM7N9y1fOSA" value="*"/>
                      </argument>
                      <argument xmi:id="_SiniUJ-zEeeDM7N9y1fOSA" name="Call(At).argument(index)" incoming="_SiniS5-zEeeDM7N9y1fOSA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniUZ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniUp-zEeeDM7N9y1fOSA" value="1"/>
                      </argument>
                      <result xmi:id="_SiniU5-zEeeDM7N9y1fOSA" name="Call(At).result()" outgoing="_SiniRZ-zEeeDM7N9y1fOSA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniVJ-zEeeDM7N9y1fOSA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniVZ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniVp-zEeeDM7N9y1fOSA" name="Tuple@370f0a9a" outgoing="_SiniSp-zEeeDM7N9y1fOSA">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniV5-zEeeDM7N9y1fOSA" target="_SiniWZ-zEeeDM7N9y1fOSA" source="_SiniX5-zEeeDM7N9y1fOSA"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SiniWJ-zEeeDM7N9y1fOSA" name="Read(signals)" structuralFeature="_Sim6DJ-zEeeDM7N9y1fOSA">
                        <object xmi:id="_SiniWZ-zEeeDM7N9y1fOSA" name="Read(signals).object" incoming="_SiniV5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniWp-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniW5-zEeeDM7N9y1fOSA" value="1"/>
                        </object>
                        <result xmi:id="_SiniXJ-zEeeDM7N9y1fOSA" name="Read(signals).result" outgoing="_SiniSJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniXZ-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniXp-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_SiniX5-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhF5-zEeeDM7N9y1fOSA" outgoing="_SiniV5-zEeeDM7N9y1fOSA"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiniYJ-zEeeDM7N9y1fOSA" name="Value(2)">
                        <result xmi:id="_SiniYZ-zEeeDM7N9y1fOSA" name="Value(2).result" outgoing="_SiniSZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniYp-zEeeDM7N9y1fOSA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniY5-zEeeDM7N9y1fOSA" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_SiniZJ-zEeeDM7N9y1fOSA" value="2">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SiniZZ-zEeeDM7N9y1fOSA" name="Fork(Call(At).argument(index))" incoming="_SiniSZ-zEeeDM7N9y1fOSA" outgoing="_SiniS5-zEeeDM7N9y1fOSA"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiniZp-zEeeDM7N9y1fOSA" name="Value(null)">
                    <result xmi:id="_SiniZ5-zEeeDM7N9y1fOSA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiniaJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniaZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_Siniap-zEeeDM7N9y1fOSA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sinia5-zEeeDM7N9y1fOSA" name="Call(NotEmpty)" incoming="_SiniNZ-zEeeDM7N9y1fOSA">
                  <argument xmi:id="_SinibJ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SiniNJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinibZ-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinibp-zEeeDM7N9y1fOSA" value="*"/>
                  </argument>
                  <result xmi:id="_Sinib5-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SiniOJ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinicJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinicZ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinicp-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@273c0439.operand2" incoming="_SiniOZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinic5-zEeeDM7N9y1fOSA" target="_SinidJ-zEeeDM7N9y1fOSA" source="_Sinie5-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SinidJ-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@273c0439.operand2.result" incoming="_Sinic5-zEeeDM7N9y1fOSA" outgoing="_SiniPZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinidZ-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinidp-zEeeDM7N9y1fOSA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sinid5-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_Sim585-zEeeDM7N9y1fOSA" isDirect="true">
                    <object xmi:id="_SinieJ-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_SiniNp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinieZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siniep-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_Sinie5-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_Sinic5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinifJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinifZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinifp-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@273c0439.operand3" incoming="_SiniO5-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinif5-zEeeDM7N9y1fOSA" target="_SinigJ-zEeeDM7N9y1fOSA" source="_SinihJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SinigJ-zEeeDM7N9y1fOSA" name="ConditionalLogicalExpression@273c0439.operand3.result" incoming="_Sinif5-zEeeDM7N9y1fOSA" outgoing="_SiniPp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinigZ-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinigp-zEeeDM7N9y1fOSA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinig5-zEeeDM7N9y1fOSA" name="Value(false)">
                    <result xmi:id="_SinihJ-zEeeDM7N9y1fOSA" name="Value(false).result" outgoing="_Sinif5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinihZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinihp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_Sinih5-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SiniiJ-zEeeDM7N9y1fOSA" name="Initial(ConditionalLogicalExpression@273c0439)" outgoing="_SiniN5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SiniiZ-zEeeDM7N9y1fOSA" name="Decision(ConditionalLogicalExpression@273c0439)" incoming="_SiniN5-zEeeDM7N9y1fOSA _SiniOJ-zEeeDM7N9y1fOSA" outgoing="_SiniOZ-zEeeDM7N9y1fOSA _SiniO5-zEeeDM7N9y1fOSA" decisionInputFlow="_SiniOJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_Siniip-zEeeDM7N9y1fOSA" name="Merge(ConditionalLogicalExpression@273c0439.result)" incoming="_SiniPZ-zEeeDM7N9y1fOSA _SiniPp-zEeeDM7N9y1fOSA" outgoing="_SiniKp-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinii5-zEeeDM7N9y1fOSA" name="ExpressionStatement@7d3a1ca5" incoming="_SinhGp-zEeeDM7N9y1fOSA" outgoing="_SinhHJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinijJ-zEeeDM7N9y1fOSA" target="_SinikZ-zEeeDM7N9y1fOSA" source="_SininZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinijZ-zEeeDM7N9y1fOSA" target="_SinilJ-zEeeDM7N9y1fOSA" source="_SinipZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinijp-zEeeDM7N9y1fOSA" target="_Sinil5-zEeeDM7N9y1fOSA" source="_Siniqp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinij5-zEeeDM7N9y1fOSA" target="_SinikJ-zEeeDM7N9y1fOSA" source="_Sinimp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinikJ-zEeeDM7N9y1fOSA" name="Call(AssertEqual)" incoming="_Sinij5-zEeeDM7N9y1fOSA" behavior="_SioIs5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinikZ-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(label)" incoming="_SinijJ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinikp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinik5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SinilJ-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(value1)" incoming="_SinijZ-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinilZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinilp-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_Sinil5-zEeeDM7N9y1fOSA" name="Call(AssertEqual).argument(value2)" incoming="_Sinijp-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinimJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinimZ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinimp-zEeeDM7N9y1fOSA" name="Tuple@30fc47b3" outgoing="_Sinij5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinim5-zEeeDM7N9y1fOSA" target="_Siniop-zEeeDM7N9y1fOSA" source="_SiniqJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SininJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_SininZ-zEeeDM7N9y1fOSA" name="Value(&quot;test.count&quot;).result" outgoing="_SinijJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sininp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinin5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinioJ-zEeeDM7N9y1fOSA" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinioZ-zEeeDM7N9y1fOSA" name="Read(count)" structuralFeature="_Sim6CZ-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Siniop-zEeeDM7N9y1fOSA" name="Read(count).object" incoming="_Sinim5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinio5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinipJ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinipZ-zEeeDM7N9y1fOSA" name="Read(count).result" outgoing="_SinijZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinipp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinip5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SiniqJ-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhGZ-zEeeDM7N9y1fOSA" outgoing="_Sinim5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiniqZ-zEeeDM7N9y1fOSA" name="Value(3)">
                  <result xmi:id="_Siniqp-zEeeDM7N9y1fOSA" name="Value(3).result" outgoing="_Sinijp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siniq5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinirJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SinirZ-zEeeDM7N9y1fOSA" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinirp-zEeeDM7N9y1fOSA" name="ExpressionStatement@2b8159d2" incoming="_SinhHJ-zEeeDM7N9y1fOSA" outgoing="_SinhHp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinir5-zEeeDM7N9y1fOSA" target="_Sinis5-zEeeDM7N9y1fOSA" source="_SinivJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinisJ-zEeeDM7N9y1fOSA" target="_Sinitp-zEeeDM7N9y1fOSA" source="_SinixJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinisZ-zEeeDM7N9y1fOSA" target="_Sinisp-zEeeDM7N9y1fOSA" source="_SiniuZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sinisp-zEeeDM7N9y1fOSA" name="Call(AssertTrue)" incoming="_SinisZ-zEeeDM7N9y1fOSA" behavior="_SioIG5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_Sinis5-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(label)" incoming="_Sinir5-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinitJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinitZ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_Sinitp-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(condition)" incoming="_SinisJ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinit5-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiniuJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniuZ-zEeeDM7N9y1fOSA" name="Tuple@772cb714" outgoing="_SinisZ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Siniup-zEeeDM7N9y1fOSA" target="_SiniwZ-zEeeDM7N9y1fOSA" source="_Sinix5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Siniu5-zEeeDM7N9y1fOSA" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_SinivJ-zEeeDM7N9y1fOSA" name="Value(&quot;test.flag&quot;).result" outgoing="_Sinir5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinivZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinivp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Siniv5-zEeeDM7N9y1fOSA" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SiniwJ-zEeeDM7N9y1fOSA" name="Read(flag)" structuralFeature="_Sim6D5-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SiniwZ-zEeeDM7N9y1fOSA" name="Read(flag).object" incoming="_Siniup-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siniwp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siniw5-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinixJ-zEeeDM7N9y1fOSA" name="Read(flag).result" outgoing="_SinisJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinixZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinixp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sinix5-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhG5-zEeeDM7N9y1fOSA" outgoing="_Siniup-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiniyJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@e3ac602" incoming="_SinhHp-zEeeDM7N9y1fOSA" outgoing="_SinhH5-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiniyZ-zEeeDM7N9y1fOSA" target="_SinizZ-zEeeDM7N9y1fOSA" source="_Sini15-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siniyp-zEeeDM7N9y1fOSA" target="_Sini0J-zEeeDM7N9y1fOSA" source="_Sini55-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Siniy5-zEeeDM7N9y1fOSA" target="_SinizJ-zEeeDM7N9y1fOSA" source="_Sini05-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinizJ-zEeeDM7N9y1fOSA" name="Call(AssertTrue)" incoming="_Siniy5-zEeeDM7N9y1fOSA" behavior="_SioIG5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinizZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(label)" incoming="_SiniyZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinizp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siniz5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_Sini0J-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(condition)" incoming="_Siniyp-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini0Z-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini0p-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sini05-zEeeDM7N9y1fOSA" name="Tuple@671e0dd9" outgoing="_Siniy5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sini1J-zEeeDM7N9y1fOSA" target="_Sini3J-zEeeDM7N9y1fOSA" source="_Sini4p-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sini1Z-zEeeDM7N9y1fOSA" target="_Sini5J-zEeeDM7N9y1fOSA" source="_Sini35-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sini1p-zEeeDM7N9y1fOSA" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_Sini15-zEeeDM7N9y1fOSA" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_SiniyZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini2J-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini2Z-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sini2p-zEeeDM7N9y1fOSA" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sini25-zEeeDM7N9y1fOSA" name="Read(sig1)" structuralFeature="_Sim5_Z-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Sini3J-zEeeDM7N9y1fOSA" name="Read(sig1).object" incoming="_Sini1J-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini3Z-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini3p-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sini35-zEeeDM7N9y1fOSA" name="Read(sig1).result" outgoing="_Sini1Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini4J-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini4Z-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sini4p-zEeeDM7N9y1fOSA" name="Fork(Fork(test)@7435c915)" incoming="_SinhHZ-zEeeDM7N9y1fOSA" outgoing="_Sini1J-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sini45-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_Sim585-zEeeDM7N9y1fOSA">
                  <object xmi:id="_Sini5J-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_Sini1Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini5Z-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini5p-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_Sini55-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_Siniyp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini6J-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini6Z-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sini6p-zEeeDM7N9y1fOSA" name="ExpressionStatement@15720960" incoming="_SinhH5-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sini65-zEeeDM7N9y1fOSA" target="_Sini75-zEeeDM7N9y1fOSA" source="_Sini-p-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sini7J-zEeeDM7N9y1fOSA" target="_Sini_Z-zEeeDM7N9y1fOSA" source="_Sini85-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sini7Z-zEeeDM7N9y1fOSA" target="_Sini95-zEeeDM7N9y1fOSA" source="_Sini_Z-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_Sini7p-zEeeDM7N9y1fOSA" name="Call(done)" operation="_SioHh5-zEeeDM7N9y1fOSA">
                <target xmi:id="_Sini75-zEeeDM7N9y1fOSA" name="Call(done).target" incoming="_Sini65-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini8J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini8Z-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_Sini8p-zEeeDM7N9y1fOSA" name="ReadSelf">
                <result xmi:id="_Sini85-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_Sini7J-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini9J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini9Z-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sini9p-zEeeDM7N9y1fOSA" name="Read(outer)" structuralFeature="_SinhBp-zEeeDM7N9y1fOSA">
                <object xmi:id="_Sini95-zEeeDM7N9y1fOSA" name="Read(outer).object" incoming="_Sini7Z-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini-J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini-Z-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_Sini-p-zEeeDM7N9y1fOSA" name="Read(outer).result" outgoing="_Sini65-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sini-5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sini_J-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sini_Z-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_Sini7J-zEeeDM7N9y1fOSA" outgoing="_Sini7Z-zEeeDM7N9y1fOSA"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sini_p-zEeeDM7N9y1fOSA" name="TestRunner$method$1" specification="_Sinkk5-zEeeDM7N9y1fOSA" node="_SinjCJ-zEeeDM7N9y1fOSA _SinjCZ-zEeeDM7N9y1fOSA _SinjCp-zEeeDM7N9y1fOSA _SinjC5-zEeeDM7N9y1fOSA" group="_SinjC5-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_Sini_5-zEeeDM7N9y1fOSA" name="outer" type="_SioGkZ-zEeeDM7N9y1fOSA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjAJ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjAZ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SinjAp-zEeeDM7N9y1fOSA" name="" type="_SinhAp-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjA5-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjBJ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjBZ-zEeeDM7N9y1fOSA" target="_SinjCZ-zEeeDM7N9y1fOSA" source="_SinjCJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjBp-zEeeDM7N9y1fOSA" target="_SinjKZ-zEeeDM7N9y1fOSA" source="_SinjCZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjB5-zEeeDM7N9y1fOSA" target="_SinjCp-zEeeDM7N9y1fOSA" source="_SinjPp-zEeeDM7N9y1fOSA"/>
          <structuredNode xmi:id="_SinjC5-zEeeDM7N9y1fOSA" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjDJ-zEeeDM7N9y1fOSA" target="_SinjPp-zEeeDM7N9y1fOSA" source="_SinjO5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjDZ-zEeeDM7N9y1fOSA" target="_SinjQJ-zEeeDM7N9y1fOSA" source="_SinjPp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjDp-zEeeDM7N9y1fOSA" target="_SinjF5-zEeeDM7N9y1fOSA" source="_SinjP5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjD5-zEeeDM7N9y1fOSA" target="_SinjRJ-zEeeDM7N9y1fOSA" source="_SinjPp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjEJ-zEeeDM7N9y1fOSA" target="_SinjS5-zEeeDM7N9y1fOSA" source="_SinjR5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjEZ-zEeeDM7N9y1fOSA" target="_SinjV5-zEeeDM7N9y1fOSA" source="_SinjTp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjEp-zEeeDM7N9y1fOSA" target="_SinjXZ-zEeeDM7N9y1fOSA" source="_SinjUp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjE5-zEeeDM7N9y1fOSA" target="_SinjYZ-zEeeDM7N9y1fOSA" source="_SinjYJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjFJ-zEeeDM7N9y1fOSA" target="_SinjYZ-zEeeDM7N9y1fOSA" source="_SinjWp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjFZ-zEeeDM7N9y1fOSA" target="_SinjP5-zEeeDM7N9y1fOSA" source="_SinjYZ-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SinjFp-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjF5-zEeeDM7N9y1fOSA" name="Body" incoming="_SinjDp-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjGJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@abb5dde">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjGZ-zEeeDM7N9y1fOSA" target="_SinjI5-zEeeDM7N9y1fOSA" source="_SinjH5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjGp-zEeeDM7N9y1fOSA" target="_SinjLJ-zEeeDM7N9y1fOSA" source="_SinjKZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjG5-zEeeDM7N9y1fOSA" target="_SinjMJ-zEeeDM7N9y1fOSA" source="_SinjJp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SinjHJ-zEeeDM7N9y1fOSA" target="_SinjHZ-zEeeDM7N9y1fOSA" source="_SinjOZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjHZ-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@8510002)" incoming="_SinjHJ-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SinjHp-zEeeDM7N9y1fOSA" name="ReadSelf">
                    <result xmi:id="_SinjH5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinjGZ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjIJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjIZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SinjIp-zEeeDM7N9y1fOSA" name="Clear(outer)" structuralFeature="_SinhBp-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SinjI5-zEeeDM7N9y1fOSA" name="Clear(outer).object" incoming="_SinjGZ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjJJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjJZ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SinjJp-zEeeDM7N9y1fOSA" name="Clear(outer).result" outgoing="_SinjG5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjJ5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjKJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SinjKZ-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@8510002)" incoming="_SinjBp-zEeeDM7N9y1fOSA" outgoing="_SinjGp-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjKp-zEeeDM7N9y1fOSA" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjK5-zEeeDM7N9y1fOSA" target="_SinjNp-zEeeDM7N9y1fOSA" source="_SinjLJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SinjLJ-zEeeDM7N9y1fOSA" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_SinjGp-zEeeDM7N9y1fOSA" outgoing="_SinjK5-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjLZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjLp-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SinjL5-zEeeDM7N9y1fOSA" name="Write(outer)" structuralFeature="_SinhBp-zEeeDM7N9y1fOSA" isReplaceAll="true">
                    <object xmi:id="_SinjMJ-zEeeDM7N9y1fOSA" name="Write(outer).object" incoming="_SinjG5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjMZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjMp-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_SinjM5-zEeeDM7N9y1fOSA" name="Write(outer).result" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjNJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjNZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_SinjNp-zEeeDM7N9y1fOSA" name="Write(outer).value" incoming="_SinjK5-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjN5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjOJ-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjOZ-zEeeDM7N9y1fOSA" name="RightHandSide@4a5e0109" outgoing="_SinjHJ-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SinjOp-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_SinjO5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinjDJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjPJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjPZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SinjPp-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SinjDJ-zEeeDM7N9y1fOSA" outgoing="_SinjB5-zEeeDM7N9y1fOSA _SinjDZ-zEeeDM7N9y1fOSA _SinjD5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SinjP5-zEeeDM7N9y1fOSA" name="Call(TestRunner$initialization$1)" incoming="_SinjFZ-zEeeDM7N9y1fOSA" outgoing="_SinjDp-zEeeDM7N9y1fOSA" operation="_Sinkkp-zEeeDM7N9y1fOSA">
              <target xmi:id="_SinjQJ-zEeeDM7N9y1fOSA" name="Call(TestRunner$initialization$1).target" incoming="_SinjDZ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjQZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjQp-zEeeDM7N9y1fOSA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SinjQ5-zEeeDM7N9y1fOSA" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_SinhA5-zEeeDM7N9y1fOSA">
              <object xmi:id="_SinjRJ-zEeeDM7N9y1fOSA" name="Read(TestRunner$initializationFlag$1).object" incoming="_SinjD5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjRZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjRp-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_SinjR5-zEeeDM7N9y1fOSA" name="Read(TestRunner$initializationFlag$1).result" outgoing="_SinjEJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjSJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjSZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SinjSp-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_SinjS5-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SinjEJ-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjTJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjTZ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SinjTp-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SinjEZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjT5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjUJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinjUZ-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_SinjUp-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SinjEp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjU5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjVJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SinjVZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SinjVp-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_SinjV5-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SinjEZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjWJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjWZ-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_SinjWp-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SinjFJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjW5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjXJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SinjXZ-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SinjEp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjXp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjX5-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SinjYJ-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SinjE5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SinjYZ-zEeeDM7N9y1fOSA" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_SinjE5-zEeeDM7N9y1fOSA _SinjFJ-zEeeDM7N9y1fOSA" outgoing="_SinjFZ-zEeeDM7N9y1fOSA" decisionInputFlow="_SinjFJ-zEeeDM7N9y1fOSA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SinjCJ-zEeeDM7N9y1fOSA" name="Input(outer)" outgoing="_SinjBZ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" parameter="_Sini_5-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SinjCZ-zEeeDM7N9y1fOSA" name="Fork(outer)" incoming="_SinjBZ-zEeeDM7N9y1fOSA" outgoing="_SinjBp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SinjCp-zEeeDM7N9y1fOSA" name="Return" incoming="_SinjB5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" parameter="_SinjAp-zEeeDM7N9y1fOSA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SinjYp-zEeeDM7N9y1fOSA" name="run$method$1" specification="_Sinkmp-zEeeDM7N9y1fOSA" node="_SinjZ5-zEeeDM7N9y1fOSA _SinjaJ-zEeeDM7N9y1fOSA" group="_SinjaJ-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_SinjY5-zEeeDM7N9y1fOSA" name="test" type="_Sim59Z-zEeeDM7N9y1fOSA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjZJ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjZZ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjZp-zEeeDM7N9y1fOSA" target="_SinjZ5-zEeeDM7N9y1fOSA" source="_Sinjgp-zEeeDM7N9y1fOSA"/>
          <structuredNode xmi:id="_SinjaJ-zEeeDM7N9y1fOSA" name="Body(run$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjaZ-zEeeDM7N9y1fOSA" target="_SinjtZ-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjap-zEeeDM7N9y1fOSA" target="_Sinjs5-zEeeDM7N9y1fOSA" source="_SinjhZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinja5-zEeeDM7N9y1fOSA" target="_Sinjv5-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjbJ-zEeeDM7N9y1fOSA" target="_SinjuJ-zEeeDM7N9y1fOSA" source="_Sinjs5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjbZ-zEeeDM7N9y1fOSA" target="_Sinjz5-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjbp-zEeeDM7N9y1fOSA" target="_SinjyJ-zEeeDM7N9y1fOSA" source="_SinjuJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjb5-zEeeDM7N9y1fOSA" target="_Sinj35-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjcJ-zEeeDM7N9y1fOSA" target="_Sinj2J-zEeeDM7N9y1fOSA" source="_SinjyJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjcZ-zEeeDM7N9y1fOSA" target="_Sinj75-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjcp-zEeeDM7N9y1fOSA" target="_Sinj6J-zEeeDM7N9y1fOSA" source="_Sinj2J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjc5-zEeeDM7N9y1fOSA" target="_Sinj-p-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjdJ-zEeeDM7N9y1fOSA" target="_Sinj-J-zEeeDM7N9y1fOSA" source="_Sinj6J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjdZ-zEeeDM7N9y1fOSA" target="_SinkBJ-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjdp-zEeeDM7N9y1fOSA" target="_Sinj_Z-zEeeDM7N9y1fOSA" source="_Sinj-J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjd5-zEeeDM7N9y1fOSA" target="_SinkFJ-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjeJ-zEeeDM7N9y1fOSA" target="_SinkDZ-zEeeDM7N9y1fOSA" source="_Sinj_Z-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjeZ-zEeeDM7N9y1fOSA" target="_SinkH5-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjep-zEeeDM7N9y1fOSA" target="_SinkHZ-zEeeDM7N9y1fOSA" source="_SinkDZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinje5-zEeeDM7N9y1fOSA" target="_SinkKZ-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjfJ-zEeeDM7N9y1fOSA" target="_SinkIp-zEeeDM7N9y1fOSA" source="_SinkHZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjfZ-zEeeDM7N9y1fOSA" target="_SinkOZ-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjfp-zEeeDM7N9y1fOSA" target="_SinkMp-zEeeDM7N9y1fOSA" source="_SinkIp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjf5-zEeeDM7N9y1fOSA" target="_SinkRJ-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinjgJ-zEeeDM7N9y1fOSA" target="_SinkQp-zEeeDM7N9y1fOSA" source="_SinkMp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjgZ-zEeeDM7N9y1fOSA" target="_Sinjgp-zEeeDM7N9y1fOSA" source="_Sinjh5-zEeeDM7N9y1fOSA"/>
            <structuredNodeOutput xmi:id="_Sinjgp-zEeeDM7N9y1fOSA" name="Output(test)" incoming="_SinjgZ-zEeeDM7N9y1fOSA" outgoing="_SinjZp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinjg5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjhJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjhZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@27d31962" outgoing="_Sinjap-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjhp-zEeeDM7N9y1fOSA" target="_Sinjh5-zEeeDM7N9y1fOSA" source="_Sinjkp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Sinjh5-zEeeDM7N9y1fOSA" name="Fork(test)@12b2c104" incoming="_Sinjhp-zEeeDM7N9y1fOSA" outgoing="_SinjaZ-zEeeDM7N9y1fOSA _Sinja5-zEeeDM7N9y1fOSA _SinjbZ-zEeeDM7N9y1fOSA _Sinjb5-zEeeDM7N9y1fOSA _SinjcZ-zEeeDM7N9y1fOSA _Sinjc5-zEeeDM7N9y1fOSA _SinjdZ-zEeeDM7N9y1fOSA _Sinjd5-zEeeDM7N9y1fOSA _SinjeZ-zEeeDM7N9y1fOSA _Sinje5-zEeeDM7N9y1fOSA _SinjfZ-zEeeDM7N9y1fOSA _Sinjf5-zEeeDM7N9y1fOSA _SinjgZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjiJ-zEeeDM7N9y1fOSA" name="RightHandSide@5c848303">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjiZ-zEeeDM7N9y1fOSA" name="InstanceCreationExpression@5c848303">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjip-zEeeDM7N9y1fOSA" target="_SinjrZ-zEeeDM7N9y1fOSA" source="_Sinjlp-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinji5-zEeeDM7N9y1fOSA" target="_Sinjqp-zEeeDM7N9y1fOSA" source="_SinjrZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjjJ-zEeeDM7N9y1fOSA" target="_SinjpJ-zEeeDM7N9y1fOSA" source="_Sinjm5-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SinjjZ-zEeeDM7N9y1fOSA" target="_Sinjnp-zEeeDM7N9y1fOSA" source="_SinjmZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjjp-zEeeDM7N9y1fOSA" target="_Sinjnp-zEeeDM7N9y1fOSA" source="_SinjlZ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjj5-zEeeDM7N9y1fOSA" target="_Sinjrp-zEeeDM7N9y1fOSA" source="_SinjoJ-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjkJ-zEeeDM7N9y1fOSA" target="_SinjsJ-zEeeDM7N9y1fOSA" source="_Sinjrp-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjkZ-zEeeDM7N9y1fOSA" target="_Sinjkp-zEeeDM7N9y1fOSA" source="_Sinjrp-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_Sinjkp-zEeeDM7N9y1fOSA" name="Output(Output(Fork(Create(MyTest).result)))" incoming="_SinjkZ-zEeeDM7N9y1fOSA" outgoing="_Sinjhp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinjk5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjlJ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_SinjlZ-zEeeDM7N9y1fOSA" name="Create(MyTest)" outgoing="_Sinjjp-zEeeDM7N9y1fOSA" classifier="_Sim59Z-zEeeDM7N9y1fOSA">
                    <result xmi:id="_Sinjlp-zEeeDM7N9y1fOSA" name="Create(MyTest).result" outgoing="_Sinjip-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinjl5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjmJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjmZ-zEeeDM7N9y1fOSA" name="Tuple@2babb1e0" outgoing="_SinjjZ-zEeeDM7N9y1fOSA">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_Sinjmp-zEeeDM7N9y1fOSA" name="ReadSelf">
                      <result xmi:id="_Sinjm5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinjjJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjnJ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjnZ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinjnp-zEeeDM7N9y1fOSA" name="Node(Call(MyTest))" incoming="_Sinjjp-zEeeDM7N9y1fOSA _SinjjZ-zEeeDM7N9y1fOSA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinjn5-zEeeDM7N9y1fOSA" target="_SinjoJ-zEeeDM7N9y1fOSA" source="_SinjrZ-zEeeDM7N9y1fOSA"/>
                    <structuredNodeOutput xmi:id="_SinjoJ-zEeeDM7N9y1fOSA" name="Output(Fork(Create(MyTest).result))" incoming="_Sinjn5-zEeeDM7N9y1fOSA" outgoing="_Sinjj5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjoZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjop-zEeeDM7N9y1fOSA" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallOperationAction" xmi:id="_Sinjo5-zEeeDM7N9y1fOSA" name="Call(MyTest)" operation="_Sing9p-zEeeDM7N9y1fOSA">
                      <argument xmi:id="_SinjpJ-zEeeDM7N9y1fOSA" name="Call(MyTest).argument(tester)" incoming="_SinjjJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjpZ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjpp-zEeeDM7N9y1fOSA" value="1"/>
                      </argument>
                      <result xmi:id="_Sinjp5-zEeeDM7N9y1fOSA" name="Call(MyTest).result()" type="_Sim59Z-zEeeDM7N9y1fOSA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjqJ-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjqZ-zEeeDM7N9y1fOSA" value="1"/>
                      </result>
                      <target xmi:id="_Sinjqp-zEeeDM7N9y1fOSA" name="Call(MyTest).target" incoming="_Sinji5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinjq5-zEeeDM7N9y1fOSA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjrJ-zEeeDM7N9y1fOSA" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SinjrZ-zEeeDM7N9y1fOSA" name="Fork(Create(MyTest).result)" incoming="_Sinjip-zEeeDM7N9y1fOSA" outgoing="_Sinji5-zEeeDM7N9y1fOSA _Sinjn5-zEeeDM7N9y1fOSA"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Sinjrp-zEeeDM7N9y1fOSA" name="Fork(Output(Fork(Create(MyTest).result)))" incoming="_Sinjj5-zEeeDM7N9y1fOSA" outgoing="_SinjkJ-zEeeDM7N9y1fOSA _SinjkZ-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_Sinjr5-zEeeDM7N9y1fOSA" name="Start(MyTest)" isSynchronous="false">
                    <object xmi:id="_SinjsJ-zEeeDM7N9y1fOSA" name="Start(MyTest).object" incoming="_SinjkJ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjsZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjsp-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinjs5-zEeeDM7N9y1fOSA" name="ExpressionStatement@7e2fc249" incoming="_Sinjap-zEeeDM7N9y1fOSA" outgoing="_SinjbJ-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinjtJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination)" signal="_Sim585-zEeeDM7N9y1fOSA">
                <target xmi:id="_SinjtZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination).target" incoming="_SinjaZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinjtp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjt5-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjuJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@6417c50d" incoming="_SinjbJ-zEeeDM7N9y1fOSA" outgoing="_Sinjbp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjuZ-zEeeDM7N9y1fOSA" target="_SinjvJ-zEeeDM7N9y1fOSA" source="_SinjxJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjup-zEeeDM7N9y1fOSA" target="_Sinju5-zEeeDM7N9y1fOSA" source="_Sinjwp-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_Sinju5-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_Sinjup-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinjvJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SinjuZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjvZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjvp-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_Sinjv5-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_Sinja5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjwJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinjwZ-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinjwp-zEeeDM7N9y1fOSA" name="Tuple@7b8c2957" outgoing="_Sinjup-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinjw5-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_SinjxJ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival1&quot;).result" outgoing="_SinjuZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjxZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjxp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinjx5-zEeeDM7N9y1fOSA" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinjyJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@7c5ec604" incoming="_Sinjbp-zEeeDM7N9y1fOSA" outgoing="_SinjcJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinjyZ-zEeeDM7N9y1fOSA" target="_SinjzJ-zEeeDM7N9y1fOSA" source="_Sinj1J-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinjyp-zEeeDM7N9y1fOSA" target="_Sinjy5-zEeeDM7N9y1fOSA" source="_Sinj0p-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_Sinjy5-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_Sinjyp-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinjzJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SinjyZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinjzZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinjzp-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_Sinjz5-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_SinjbZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj0J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj0Z-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj0p-zEeeDM7N9y1fOSA" name="Tuple@50100765" outgoing="_Sinjyp-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinj05-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_Sinj1J-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival2&quot;).result" outgoing="_SinjyZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj1Z-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj1p-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinj15-zEeeDM7N9y1fOSA" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj2J-zEeeDM7N9y1fOSA" name="ExpressionStatement@4fc3226c" incoming="_SinjcJ-zEeeDM7N9y1fOSA" outgoing="_Sinjcp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinj2Z-zEeeDM7N9y1fOSA" target="_Sinj3J-zEeeDM7N9y1fOSA" source="_Sinj5J-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinj2p-zEeeDM7N9y1fOSA" target="_Sinj25-zEeeDM7N9y1fOSA" source="_Sinj4p-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_Sinj25-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_Sinj2p-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_Sinj3J-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_Sinj2Z-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj3Z-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj3p-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_Sinj35-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_Sinjb5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj4J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj4Z-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj4p-zEeeDM7N9y1fOSA" name="Tuple@77a36cea" outgoing="_Sinj2p-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinj45-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_Sinj5J-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival3&quot;).result" outgoing="_Sinj2Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj5Z-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj5p-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinj55-zEeeDM7N9y1fOSA" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj6J-zEeeDM7N9y1fOSA" name="ExpressionStatement@7023179a" incoming="_Sinjcp-zEeeDM7N9y1fOSA" outgoing="_SinjdJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinj6Z-zEeeDM7N9y1fOSA" target="_Sinj7J-zEeeDM7N9y1fOSA" source="_Sinj9J-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinj6p-zEeeDM7N9y1fOSA" target="_Sinj65-zEeeDM7N9y1fOSA" source="_Sinj8p-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_Sinj65-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_Sinj6p-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_Sinj7J-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_Sinj6Z-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj7Z-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj7p-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_Sinj75-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_SinjcZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj8J-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj8Z-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj8p-zEeeDM7N9y1fOSA" name="Tuple@31becdf5" outgoing="_Sinj6p-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sinj85-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_Sinj9J-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival4&quot;).result" outgoing="_Sinj6Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj9Z-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj9p-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Sinj95-zEeeDM7N9y1fOSA" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj-J-zEeeDM7N9y1fOSA" name="ExpressionStatement@743c85a1" incoming="_SinjdJ-zEeeDM7N9y1fOSA" outgoing="_Sinjdp-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_Sinj-Z-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination)" signal="_Sim585-zEeeDM7N9y1fOSA">
                <target xmi:id="_Sinj-p-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination).target" incoming="_Sinjc5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinj-5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinj_J-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sinj_Z-zEeeDM7N9y1fOSA" name="ExpressionStatement@5594ce93" incoming="_Sinjdp-zEeeDM7N9y1fOSA" outgoing="_SinjeJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sinj_p-zEeeDM7N9y1fOSA" target="_SinkAZ-zEeeDM7N9y1fOSA" source="_SinkCZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sinj_5-zEeeDM7N9y1fOSA" target="_SinkAJ-zEeeDM7N9y1fOSA" source="_SinkB5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinkAJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_Sinj_5-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinkAZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_Sinj_p-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkAp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkA5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_SinkBJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_SinjdZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkBZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkBp-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkB5-zEeeDM7N9y1fOSA" name="Tuple@6449de95" outgoing="_Sinj_5-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinkCJ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_SinkCZ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival5&quot;).result" outgoing="_Sinj_p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkCp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkC5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinkDJ-zEeeDM7N9y1fOSA" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkDZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@6bfce94a" incoming="_SinjeJ-zEeeDM7N9y1fOSA" outgoing="_Sinjep-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkDp-zEeeDM7N9y1fOSA" target="_SinkEZ-zEeeDM7N9y1fOSA" source="_SinkGZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinkD5-zEeeDM7N9y1fOSA" target="_SinkEJ-zEeeDM7N9y1fOSA" source="_SinkF5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinkEJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_SinkD5-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinkEZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SinkDp-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkEp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkE5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_SinkFJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_Sinjd5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkFZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkFp-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkF5-zEeeDM7N9y1fOSA" name="Tuple@375c0f10" outgoing="_SinkD5-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinkGJ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_SinkGZ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival6&quot;).result" outgoing="_SinkDp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkGp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkG5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinkHJ-zEeeDM7N9y1fOSA" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkHZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@13326d72" incoming="_Sinjep-zEeeDM7N9y1fOSA" outgoing="_SinjfJ-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinkHp-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination)" signal="_Sim585-zEeeDM7N9y1fOSA">
                <target xmi:id="_SinkH5-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination).target" incoming="_SinjeZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkIJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkIZ-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkIp-zEeeDM7N9y1fOSA" name="ExpressionStatement@7616886e" incoming="_SinjfJ-zEeeDM7N9y1fOSA" outgoing="_Sinjfp-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkI5-zEeeDM7N9y1fOSA" target="_SinkJp-zEeeDM7N9y1fOSA" source="_SinkLp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinkJJ-zEeeDM7N9y1fOSA" target="_SinkJZ-zEeeDM7N9y1fOSA" source="_SinkLJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinkJZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_SinkJJ-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinkJp-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SinkI5-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkJ5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkKJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_SinkKZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_Sinje5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkKp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkK5-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkLJ-zEeeDM7N9y1fOSA" name="Tuple@1f93bee0" outgoing="_SinkJJ-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinkLZ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_SinkLp-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival7&quot;).result" outgoing="_SinkI5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkL5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkMJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinkMZ-zEeeDM7N9y1fOSA" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkMp-zEeeDM7N9y1fOSA" name="ExpressionStatement@63914454" incoming="_Sinjfp-zEeeDM7N9y1fOSA" outgoing="_SinjgJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkM5-zEeeDM7N9y1fOSA" target="_SinkNp-zEeeDM7N9y1fOSA" source="_SinkPp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SinkNJ-zEeeDM7N9y1fOSA" target="_SinkNZ-zEeeDM7N9y1fOSA" source="_SinkPJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinkNZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival)" incoming="_SinkNJ-zEeeDM7N9y1fOSA" signal="_Sim575-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SinkNp-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_SinkM5-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkN5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkOJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <target xmi:id="_SinkOZ-zEeeDM7N9y1fOSA" name="SendSignal(SignalNewArrival).target" incoming="_SinjfZ-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkOp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkO5-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkPJ-zEeeDM7N9y1fOSA" name="Tuple@177dad" outgoing="_SinkNJ-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinkPZ-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_SinkPp-zEeeDM7N9y1fOSA" name="Value(&quot;Arrival8&quot;).result" outgoing="_SinkM5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkP5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkQJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SinkQZ-zEeeDM7N9y1fOSA" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkQp-zEeeDM7N9y1fOSA" name="ExpressionStatement@4ea47cc" incoming="_SinjgJ-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_SinkQ5-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination)" signal="_Sim585-zEeeDM7N9y1fOSA">
                <target xmi:id="_SinkRJ-zEeeDM7N9y1fOSA" name="SendSignal(SignalTermination).target" incoming="_Sinjf5-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkRZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkRp-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SinjZ5-zEeeDM7N9y1fOSA" name="Output(test)" incoming="_SinjZp-zEeeDM7N9y1fOSA" type="_Sim59Z-zEeeDM7N9y1fOSA" parameter="_SinjY5-zEeeDM7N9y1fOSA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SinkR5-zEeeDM7N9y1fOSA" name="destroy$method$1" specification="_Sinknp-zEeeDM7N9y1fOSA" node="_SinkSJ-zEeeDM7N9y1fOSA" group="_SinkSJ-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_SinkSJ-zEeeDM7N9y1fOSA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SinkSZ-zEeeDM7N9y1fOSA" name="TestRunner$initialization$1" specification="_Sinkkp-zEeeDM7N9y1fOSA" node="_SinkSp-zEeeDM7N9y1fOSA" group="_SinkSp-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_SinkSp-zEeeDM7N9y1fOSA" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkS5-zEeeDM7N9y1fOSA" target="_SinkWZ-zEeeDM7N9y1fOSA" source="_SinkVp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkTJ-zEeeDM7N9y1fOSA" target="_SinkZZ-zEeeDM7N9y1fOSA" source="_SinkWZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkTZ-zEeeDM7N9y1fOSA" target="_SinkdJ-zEeeDM7N9y1fOSA" source="_SinkWZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkTp-zEeeDM7N9y1fOSA" target="_Sinke5-zEeeDM7N9y1fOSA" source="_Sinkd5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkT5-zEeeDM7N9y1fOSA" target="_Sinkh5-zEeeDM7N9y1fOSA" source="_Sinkfp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkUJ-zEeeDM7N9y1fOSA" target="_SinkjZ-zEeeDM7N9y1fOSA" source="_Sinkgp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinkUZ-zEeeDM7N9y1fOSA" target="_SinkkZ-zEeeDM7N9y1fOSA" source="_SinkkJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkUp-zEeeDM7N9y1fOSA" target="_SinkkZ-zEeeDM7N9y1fOSA" source="_Sinkip-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SinkU5-zEeeDM7N9y1fOSA" target="_SinkWp-zEeeDM7N9y1fOSA" source="_SinkkZ-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SinkVJ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SinkVZ-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_SinkVp-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SinkS5-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkV5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkWJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SinkWZ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SinkS5-zEeeDM7N9y1fOSA" outgoing="_SinkTJ-zEeeDM7N9y1fOSA _SinkTZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkWp-zEeeDM7N9y1fOSA" name="Initialization" incoming="_SinkU5-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SinkW5-zEeeDM7N9y1fOSA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkXJ-zEeeDM7N9y1fOSA" target="_Sinkcp-zEeeDM7N9y1fOSA" source="_SinkXp-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinkXZ-zEeeDM7N9y1fOSA" name="Value(true)">
                  <result xmi:id="_SinkXp-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_SinkXJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkX5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkYJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SinkYZ-zEeeDM7N9y1fOSA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SinkYp-zEeeDM7N9y1fOSA" name="Iterate(Write(TestRunner$initializationFlag$1))" inputElement="_Sinkcp-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkY5-zEeeDM7N9y1fOSA" target="_Sinkb5-zEeeDM7N9y1fOSA" source="_Sinkcp-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SinkZJ-zEeeDM7N9y1fOSA" target="_SinkaZ-zEeeDM7N9y1fOSA" source="_SinkZZ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SinkZZ-zEeeDM7N9y1fOSA" name="Iterate(Write(TestRunner$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_SinkTJ-zEeeDM7N9y1fOSA" outgoing="_SinkZJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkZp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkZ5-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SinkaJ-zEeeDM7N9y1fOSA" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_SinhA5-zEeeDM7N9y1fOSA">
                    <object xmi:id="_SinkaZ-zEeeDM7N9y1fOSA" name="Write(TestRunner$initializationFlag$1).object" incoming="_SinkZJ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinkap-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinka5-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_SinkbJ-zEeeDM7N9y1fOSA" name="Write(TestRunner$initializationFlag$1).result" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkbZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinkbp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_Sinkb5-zEeeDM7N9y1fOSA" name="Write(TestRunner$initializationFlag$1).value" incoming="_SinkY5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkcJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkcZ-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Sinkcp-zEeeDM7N9y1fOSA" name="Iterate(Write(TestRunner$initializationFlag$1)).inputElement" incoming="_SinkXJ-zEeeDM7N9y1fOSA" outgoing="_SinkY5-zEeeDM7N9y1fOSA" regionAsInput="_SinkYp-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sinkc5-zEeeDM7N9y1fOSA" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_SinhA5-zEeeDM7N9y1fOSA">
              <object xmi:id="_SinkdJ-zEeeDM7N9y1fOSA" name="Read(TestRunner$initializationFlag$1).object" incoming="_SinkTZ-zEeeDM7N9y1fOSA" type="_SinhAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkdZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinkdp-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_Sinkd5-zEeeDM7N9y1fOSA" name="Read(TestRunner$initializationFlag$1).result" outgoing="_SinkTp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkeJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkeZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sinkep-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_Sinke5-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SinkTp-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkfJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkfZ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_Sinkfp-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SinkT5-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinkf5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkgJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SinkgZ-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_Sinkgp-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SinkUJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinkg5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkhJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SinkhZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Sinkhp-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_Sinkh5-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SinkT5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkiJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkiZ-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_Sinkip-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SinkUp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinki5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkjJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SinkjZ-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SinkUJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sinkjp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinkj5-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SinkkJ-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SinkUZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SinkkZ-zEeeDM7N9y1fOSA" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_SinkUZ-zEeeDM7N9y1fOSA _SinkUp-zEeeDM7N9y1fOSA" outgoing="_SinkU5-zEeeDM7N9y1fOSA" decisionInputFlow="_SinkUp-zEeeDM7N9y1fOSA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_Sinkkp-zEeeDM7N9y1fOSA" name="TestRunner$initialization$1" visibility="protected" method="_SinkSZ-zEeeDM7N9y1fOSA"/>
        <ownedOperation xmi:id="_Sinkk5-zEeeDM7N9y1fOSA" name="TestRunner" visibility="public" method="_Sini_p-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_SinklJ-zEeeDM7N9y1fOSA" name="outer" visibility="package" type="_SioGkZ-zEeeDM7N9y1fOSA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinklZ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sinklp-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Sinkl5-zEeeDM7N9y1fOSA" name="" visibility="package" type="_SinhAp-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinkmJ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinkmZ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Sinkmp-zEeeDM7N9y1fOSA" name="run" visibility="private" method="_SinjYp-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_Sinkm5-zEeeDM7N9y1fOSA" name="test" visibility="package" type="_Sim59Z-zEeeDM7N9y1fOSA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SinknJ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SinknZ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Sinknp-zEeeDM7N9y1fOSA" name="destroy" visibility="public" method="_SinkR5-zEeeDM7N9y1fOSA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_Sinkn5-zEeeDM7N9y1fOSA" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SinkoJ-zEeeDM7N9y1fOSA" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_SioGgJ-zEeeDM7N9y1fOSA" name="Start" signal="_Sinkn5-zEeeDM7N9y1fOSA"/>
        <ownedReception xmi:id="_SioGgZ-zEeeDM7N9y1fOSA" name="Continue" signal="_SinkoJ-zEeeDM7N9y1fOSA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGgp-zEeeDM7N9y1fOSA" name="Event(SignalTermination)" visibility="public" signal="_Sim585-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGg5-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGhJ-zEeeDM7N9y1fOSA" name="Event(SignalTermination)" visibility="public" signal="_Sim585-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGhZ-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGhp-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGh5-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGiJ-zEeeDM7N9y1fOSA" name="Event(SignalTermination)" visibility="public" signal="_Sim585-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGiZ-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGip-zEeeDM7N9y1fOSA" name="Event(SignalTermination)" visibility="public" signal="_Sim585-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGi5-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGjJ-zEeeDM7N9y1fOSA" name="Event(SignalNewArrival)" visibility="public" signal="_Sim575-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGjZ-zEeeDM7N9y1fOSA" name="Event(SignalTermination)" visibility="public" signal="_Sim585-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGjp-zEeeDM7N9y1fOSA" name="Event(SignalTermination)" visibility="public" signal="_Sim585-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGj5-zEeeDM7N9y1fOSA" name="Event(Start)" visibility="public" signal="_Sinkn5-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SioGkJ-zEeeDM7N9y1fOSA" name="Event(Continue)" visibility="public" signal="_SinkoJ-zEeeDM7N9y1fOSA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_SioGkZ-zEeeDM7N9y1fOSA" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_SioGkp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SioGk5-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SioGlJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SioGlZ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SioGlp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SioGl5-zEeeDM7N9y1fOSA" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGmJ-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGmZ-zEeeDM7N9y1fOSA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SioGmp-zEeeDM7N9y1fOSA" name="tester" visibility="private" type="_SioHiZ-zEeeDM7N9y1fOSA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGm5-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGnJ-zEeeDM7N9y1fOSA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioGnZ-zEeeDM7N9y1fOSA" name="Test$method$1" specification="_SioHgJ-zEeeDM7N9y1fOSA" node="_SioGp5-zEeeDM7N9y1fOSA _SioGqJ-zEeeDM7N9y1fOSA _SioGqZ-zEeeDM7N9y1fOSA _SioGqp-zEeeDM7N9y1fOSA" group="_SioGqp-zEeeDM7N9y1fOSA">
        <ownedParameter xmi:id="_SioGnp-zEeeDM7N9y1fOSA" name="tester" type="_SioHiZ-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGn5-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGoJ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SioGoZ-zEeeDM7N9y1fOSA" name="" type="_SioGkZ-zEeeDM7N9y1fOSA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGop-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGo5-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGpJ-zEeeDM7N9y1fOSA" target="_SioGqJ-zEeeDM7N9y1fOSA" source="_SioGp5-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGpZ-zEeeDM7N9y1fOSA" target="_SioGyJ-zEeeDM7N9y1fOSA" source="_SioGqJ-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGpp-zEeeDM7N9y1fOSA" target="_SioGqZ-zEeeDM7N9y1fOSA" source="_SioG5J-zEeeDM7N9y1fOSA"/>
        <structuredNode xmi:id="_SioGqp-zEeeDM7N9y1fOSA" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGq5-zEeeDM7N9y1fOSA" target="_SioG5J-zEeeDM7N9y1fOSA" source="_SioG4Z-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGrJ-zEeeDM7N9y1fOSA" target="_SioG5p-zEeeDM7N9y1fOSA" source="_SioG5J-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioGrZ-zEeeDM7N9y1fOSA" target="_SioGtp-zEeeDM7N9y1fOSA" source="_SioG5Z-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGrp-zEeeDM7N9y1fOSA" target="_SioG6p-zEeeDM7N9y1fOSA" source="_SioG5J-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGr5-zEeeDM7N9y1fOSA" target="_SioG8Z-zEeeDM7N9y1fOSA" source="_SioG7Z-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGsJ-zEeeDM7N9y1fOSA" target="_SioG_Z-zEeeDM7N9y1fOSA" source="_SioG9J-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGsZ-zEeeDM7N9y1fOSA" target="_SioHA5-zEeeDM7N9y1fOSA" source="_SioG-J-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioGsp-zEeeDM7N9y1fOSA" target="_SioHB5-zEeeDM7N9y1fOSA" source="_SioHBp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGs5-zEeeDM7N9y1fOSA" target="_SioHB5-zEeeDM7N9y1fOSA" source="_SioHAJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioGtJ-zEeeDM7N9y1fOSA" target="_SioG5Z-zEeeDM7N9y1fOSA" source="_SioHB5-zEeeDM7N9y1fOSA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioGtZ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioGtp-zEeeDM7N9y1fOSA" name="Body" incoming="_SioGrZ-zEeeDM7N9y1fOSA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioGt5-zEeeDM7N9y1fOSA" name="ExpressionStatement@de161d5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGuJ-zEeeDM7N9y1fOSA" target="_SioGwp-zEeeDM7N9y1fOSA" source="_SioGvp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGuZ-zEeeDM7N9y1fOSA" target="_SioGy5-zEeeDM7N9y1fOSA" source="_SioGyJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGup-zEeeDM7N9y1fOSA" target="_SioG0Z-zEeeDM7N9y1fOSA" source="_SioGxZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioGu5-zEeeDM7N9y1fOSA" target="_SioGvJ-zEeeDM7N9y1fOSA" source="_SioG35-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioGvJ-zEeeDM7N9y1fOSA" name="Expression(LeftHandSide@64ef2502)" incoming="_SioGu5-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_SioGvZ-zEeeDM7N9y1fOSA" name="ReadSelf">
                  <result xmi:id="_SioGvp-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SioGuJ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGv5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGwJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SioGwZ-zEeeDM7N9y1fOSA" name="Clear(tester)" structuralFeature="_SioGmp-zEeeDM7N9y1fOSA">
                <object xmi:id="_SioGwp-zEeeDM7N9y1fOSA" name="Clear(tester).object" incoming="_SioGuJ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGw5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGxJ-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_SioGxZ-zEeeDM7N9y1fOSA" name="Clear(tester).result" outgoing="_SioGup-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGxp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGx5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SioGyJ-zEeeDM7N9y1fOSA" name="Fork(LeftHandSide@64ef2502)" incoming="_SioGpZ-zEeeDM7N9y1fOSA" outgoing="_SioGuZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioGyZ-zEeeDM7N9y1fOSA" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGyp-zEeeDM7N9y1fOSA" target="_SioG3p-zEeeDM7N9y1fOSA" source="_SioGy5-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SioGy5-zEeeDM7N9y1fOSA" name="WriteAll(Test::tester).input(Test::tester)" incoming="_SioGuZ-zEeeDM7N9y1fOSA" outgoing="_SioGyp-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioGzJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioGzZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SioGzp-zEeeDM7N9y1fOSA" name="Iterate(Write(tester))" inputElement="_SioG3p-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioGz5-zEeeDM7N9y1fOSA" target="_SioG25-zEeeDM7N9y1fOSA" source="_SioG3p-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioG0J-zEeeDM7N9y1fOSA" target="_SioG1Z-zEeeDM7N9y1fOSA" source="_SioG0Z-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SioG0Z-zEeeDM7N9y1fOSA" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_SioGup-zEeeDM7N9y1fOSA" outgoing="_SioG0J-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG0p-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG05-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SioG1J-zEeeDM7N9y1fOSA" name="Write(tester)" structuralFeature="_SioGmp-zEeeDM7N9y1fOSA">
                    <object xmi:id="_SioG1Z-zEeeDM7N9y1fOSA" name="Write(tester).object" incoming="_SioG0J-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG1p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG15-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_SioG2J-zEeeDM7N9y1fOSA" name="Write(tester).result" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG2Z-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG2p-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_SioG25-zEeeDM7N9y1fOSA" name="Write(tester).value" incoming="_SioGz5-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG3J-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG3Z-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SioG3p-zEeeDM7N9y1fOSA" name="Iterate(Write(tester)).inputElement" incoming="_SioGyp-zEeeDM7N9y1fOSA" outgoing="_SioGz5-zEeeDM7N9y1fOSA" regionAsInput="_SioGzp-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioG35-zEeeDM7N9y1fOSA" name="RightHandSide@221853fc" outgoing="_SioGu5-zEeeDM7N9y1fOSA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SioG4J-zEeeDM7N9y1fOSA" name="ReadSelf">
            <result xmi:id="_SioG4Z-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SioGq5-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG4p-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG45-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SioG5J-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SioGq5-zEeeDM7N9y1fOSA" outgoing="_SioGpp-zEeeDM7N9y1fOSA _SioGrJ-zEeeDM7N9y1fOSA _SioGrp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SioG5Z-zEeeDM7N9y1fOSA" name="Call(Test$initialization$1)" incoming="_SioGtJ-zEeeDM7N9y1fOSA" outgoing="_SioGrZ-zEeeDM7N9y1fOSA" operation="_SioHf5-zEeeDM7N9y1fOSA">
            <target xmi:id="_SioG5p-zEeeDM7N9y1fOSA" name="Call(Test$initialization$1).target" incoming="_SioGrJ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG55-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG6J-zEeeDM7N9y1fOSA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SioG6Z-zEeeDM7N9y1fOSA" name="Read(Test$initializationFlag$1)" structuralFeature="_SioGl5-zEeeDM7N9y1fOSA">
            <object xmi:id="_SioG6p-zEeeDM7N9y1fOSA" name="Read(Test$initializationFlag$1).object" incoming="_SioGrp-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG65-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG7J-zEeeDM7N9y1fOSA" value="1"/>
            </object>
            <result xmi:id="_SioG7Z-zEeeDM7N9y1fOSA" name="Read(Test$initializationFlag$1).result" outgoing="_SioGr5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG7p-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG75-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioG8J-zEeeDM7N9y1fOSA" name="Call(ListSize)">
            <argument xmi:id="_SioG8Z-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SioGr5-zEeeDM7N9y1fOSA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG8p-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG85-zEeeDM7N9y1fOSA" value="*"/>
            </argument>
            <result xmi:id="_SioG9J-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SioGsJ-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG9Z-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG9p-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioG95-zEeeDM7N9y1fOSA" name="Value(0)">
            <result xmi:id="_SioG-J-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SioGsZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG-Z-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG-p-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SioG-5-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SioG_J-zEeeDM7N9y1fOSA" name="Test(Size==0)">
            <first xmi:id="_SioG_Z-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SioGsJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioG_p-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioG_5-zEeeDM7N9y1fOSA" value="1"/>
            </first>
            <result xmi:id="_SioHAJ-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SioGs5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHAZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHAp-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <second xmi:id="_SioHA5-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SioGsZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHBJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHBZ-zEeeDM7N9y1fOSA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SioHBp-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SioGsp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SioHB5-zEeeDM7N9y1fOSA" name="Decision(Test(Test$initializationFlag$1))" incoming="_SioGsp-zEeeDM7N9y1fOSA _SioGs5-zEeeDM7N9y1fOSA" outgoing="_SioGtJ-zEeeDM7N9y1fOSA" decisionInputFlow="_SioGs5-zEeeDM7N9y1fOSA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioGp5-zEeeDM7N9y1fOSA" name="Input(tester)" outgoing="_SioGpJ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" parameter="_SioGnp-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SioGqJ-zEeeDM7N9y1fOSA" name="Fork(tester)" incoming="_SioGpJ-zEeeDM7N9y1fOSA" outgoing="_SioGpZ-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioGqZ-zEeeDM7N9y1fOSA" name="Return" incoming="_SioGpp-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" parameter="_SioGoZ-zEeeDM7N9y1fOSA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioHCJ-zEeeDM7N9y1fOSA" name="done$method$1" specification="_SioHh5-zEeeDM7N9y1fOSA" node="_SioHCZ-zEeeDM7N9y1fOSA" group="_SioHCZ-zEeeDM7N9y1fOSA">
        <structuredNode xmi:id="_SioHCZ-zEeeDM7N9y1fOSA" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioHCp-zEeeDM7N9y1fOSA" target="_SioHG5-zEeeDM7N9y1fOSA" source="_SioHC5-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHC5-zEeeDM7N9y1fOSA" name="ExpressionStatement@2516326d" outgoing="_SioHCp-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHDJ-zEeeDM7N9y1fOSA" target="_SioHD5-zEeeDM7N9y1fOSA" source="_SioHF5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioHDZ-zEeeDM7N9y1fOSA" target="_SioHDp-zEeeDM7N9y1fOSA" source="_SioHFZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioHDp-zEeeDM7N9y1fOSA" name="Call(WriteLine)" incoming="_SioHDZ-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SioHD5-zEeeDM7N9y1fOSA" name="Call(WriteLine).argument(value)" incoming="_SioHDJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHEJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHEZ-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioHEp-zEeeDM7N9y1fOSA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHE5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHFJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHFZ-zEeeDM7N9y1fOSA" name="Tuple@10c8536b" outgoing="_SioHDZ-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioHFp-zEeeDM7N9y1fOSA" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_SioHF5-zEeeDM7N9y1fOSA" name="Value(&quot;Done.&quot;).result" outgoing="_SioHDJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHGJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHGZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SioHGp-zEeeDM7N9y1fOSA" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHG5-zEeeDM7N9y1fOSA" name="ExpressionStatement@46c6bf50" incoming="_SioHCp-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHHJ-zEeeDM7N9y1fOSA" target="_SioHJJ-zEeeDM7N9y1fOSA" source="_SioHMJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioHHZ-zEeeDM7N9y1fOSA" target="_SioHHp-zEeeDM7N9y1fOSA" source="_SioHJZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_SioHHp-zEeeDM7N9y1fOSA" name="Collect(SendSignal(Continue))" incoming="_SioHHZ-zEeeDM7N9y1fOSA" mode="parallel" inputElement="_SioHJJ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHH5-zEeeDM7N9y1fOSA" target="_SioHIZ-zEeeDM7N9y1fOSA" source="_SioHJJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_SioHIJ-zEeeDM7N9y1fOSA" name="SendSignal(Continue)" signal="_SioIGZ-zEeeDM7N9y1fOSA">
                <target xmi:id="_SioHIZ-zEeeDM7N9y1fOSA" name="SendSignal(Continue).target" incoming="_SioHH5-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHIp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHI5-zEeeDM7N9y1fOSA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_SioHJJ-zEeeDM7N9y1fOSA" name="Collect(SendSignal(Continue)).inputElement" incoming="_SioHHJ-zEeeDM7N9y1fOSA" outgoing="_SioHH5-zEeeDM7N9y1fOSA" regionAsInput="_SioHHp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHJZ-zEeeDM7N9y1fOSA" name="Feature(Read(tester).result)" outgoing="_SioHHZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHJp-zEeeDM7N9y1fOSA" target="_SioHM5-zEeeDM7N9y1fOSA" source="_SioHKZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHJ5-zEeeDM7N9y1fOSA" target="_SioHLZ-zEeeDM7N9y1fOSA" source="_SioHM5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_SioHKJ-zEeeDM7N9y1fOSA" name="ReadSelf">
                <result xmi:id="_SioHKZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SioHJp-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHKp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHK5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SioHLJ-zEeeDM7N9y1fOSA" name="Read(tester)" structuralFeature="_SioGmp-zEeeDM7N9y1fOSA">
                <object xmi:id="_SioHLZ-zEeeDM7N9y1fOSA" name="Read(tester).object" incoming="_SioHJ5-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHLp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHL5-zEeeDM7N9y1fOSA" value="1"/>
                </object>
                <result xmi:id="_SioHMJ-zEeeDM7N9y1fOSA" name="Read(tester).result" outgoing="_SioHHJ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHMZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHMp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SioHM5-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SioHJp-zEeeDM7N9y1fOSA" outgoing="_SioHJ5-zEeeDM7N9y1fOSA"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioHNJ-zEeeDM7N9y1fOSA" name="destroy$method$1" specification="_SioHiJ-zEeeDM7N9y1fOSA" node="_SioHNZ-zEeeDM7N9y1fOSA" group="_SioHNZ-zEeeDM7N9y1fOSA">
        <structuredNode xmi:id="_SioHNZ-zEeeDM7N9y1fOSA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioHNp-zEeeDM7N9y1fOSA" name="Test$initialization$1" specification="_SioHf5-zEeeDM7N9y1fOSA" node="_SioHN5-zEeeDM7N9y1fOSA" group="_SioHN5-zEeeDM7N9y1fOSA">
        <structuredNode xmi:id="_SioHN5-zEeeDM7N9y1fOSA" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHOJ-zEeeDM7N9y1fOSA" target="_SioHRp-zEeeDM7N9y1fOSA" source="_SioHQ5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHOZ-zEeeDM7N9y1fOSA" target="_SioHUp-zEeeDM7N9y1fOSA" source="_SioHRp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHOp-zEeeDM7N9y1fOSA" target="_SioHYZ-zEeeDM7N9y1fOSA" source="_SioHRp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHO5-zEeeDM7N9y1fOSA" target="_SioHaJ-zEeeDM7N9y1fOSA" source="_SioHZJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHPJ-zEeeDM7N9y1fOSA" target="_SioHdJ-zEeeDM7N9y1fOSA" source="_SioHa5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHPZ-zEeeDM7N9y1fOSA" target="_SioHep-zEeeDM7N9y1fOSA" source="_SioHb5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioHPp-zEeeDM7N9y1fOSA" target="_SioHfp-zEeeDM7N9y1fOSA" source="_SioHfZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHP5-zEeeDM7N9y1fOSA" target="_SioHfp-zEeeDM7N9y1fOSA" source="_SioHd5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioHQJ-zEeeDM7N9y1fOSA" target="_SioHR5-zEeeDM7N9y1fOSA" source="_SioHfp-zEeeDM7N9y1fOSA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioHQZ-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SioHQp-zEeeDM7N9y1fOSA" name="ReadSelf">
            <result xmi:id="_SioHQ5-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SioHOJ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHRJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHRZ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SioHRp-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SioHOJ-zEeeDM7N9y1fOSA" outgoing="_SioHOZ-zEeeDM7N9y1fOSA _SioHOp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHR5-zEeeDM7N9y1fOSA" name="Initialization" incoming="_SioHQJ-zEeeDM7N9y1fOSA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHSJ-zEeeDM7N9y1fOSA" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHSZ-zEeeDM7N9y1fOSA" target="_SioHX5-zEeeDM7N9y1fOSA" source="_SioHS5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioHSp-zEeeDM7N9y1fOSA" name="Value(true)">
                <result xmi:id="_SioHS5-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_SioHSZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHTJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHTZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SioHTp-zEeeDM7N9y1fOSA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SioHT5-zEeeDM7N9y1fOSA" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_SioHX5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHUJ-zEeeDM7N9y1fOSA" target="_SioHXJ-zEeeDM7N9y1fOSA" source="_SioHX5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHUZ-zEeeDM7N9y1fOSA" target="_SioHVp-zEeeDM7N9y1fOSA" source="_SioHUp-zEeeDM7N9y1fOSA"/>
                <structuredNodeInput xmi:id="_SioHUp-zEeeDM7N9y1fOSA" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_SioHOZ-zEeeDM7N9y1fOSA" outgoing="_SioHUZ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHU5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHVJ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SioHVZ-zEeeDM7N9y1fOSA" name="Write(Test$initializationFlag$1)" structuralFeature="_SioGl5-zEeeDM7N9y1fOSA">
                  <object xmi:id="_SioHVp-zEeeDM7N9y1fOSA" name="Write(Test$initializationFlag$1).object" incoming="_SioHUZ-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHV5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHWJ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SioHWZ-zEeeDM7N9y1fOSA" name="Write(Test$initializationFlag$1).result" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHWp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHW5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:id="_SioHXJ-zEeeDM7N9y1fOSA" name="Write(Test$initializationFlag$1).value" incoming="_SioHUJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHXZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHXp-zEeeDM7N9y1fOSA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SioHX5-zEeeDM7N9y1fOSA" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_SioHSZ-zEeeDM7N9y1fOSA" outgoing="_SioHUJ-zEeeDM7N9y1fOSA" regionAsInput="_SioHT5-zEeeDM7N9y1fOSA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SioHYJ-zEeeDM7N9y1fOSA" name="Read(Test$initializationFlag$1)" structuralFeature="_SioGl5-zEeeDM7N9y1fOSA">
            <object xmi:id="_SioHYZ-zEeeDM7N9y1fOSA" name="Read(Test$initializationFlag$1).object" incoming="_SioHOp-zEeeDM7N9y1fOSA" type="_SioGkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHYp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHY5-zEeeDM7N9y1fOSA" value="1"/>
            </object>
            <result xmi:id="_SioHZJ-zEeeDM7N9y1fOSA" name="Read(Test$initializationFlag$1).result" outgoing="_SioHO5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHZZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHZp-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioHZ5-zEeeDM7N9y1fOSA" name="Call(ListSize)">
            <argument xmi:id="_SioHaJ-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SioHO5-zEeeDM7N9y1fOSA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHaZ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHap-zEeeDM7N9y1fOSA" value="*"/>
            </argument>
            <result xmi:id="_SioHa5-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SioHPJ-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHbJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHbZ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioHbp-zEeeDM7N9y1fOSA" name="Value(0)">
            <result xmi:id="_SioHb5-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SioHPZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHcJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHcZ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SioHcp-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SioHc5-zEeeDM7N9y1fOSA" name="Test(Size==0)">
            <first xmi:id="_SioHdJ-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SioHPJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHdZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHdp-zEeeDM7N9y1fOSA" value="1"/>
            </first>
            <result xmi:id="_SioHd5-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SioHP5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHeJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHeZ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <second xmi:id="_SioHep-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SioHPZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHe5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHfJ-zEeeDM7N9y1fOSA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SioHfZ-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SioHPp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SioHfp-zEeeDM7N9y1fOSA" name="Decision(Test(Test$initializationFlag$1))" incoming="_SioHPp-zEeeDM7N9y1fOSA _SioHP5-zEeeDM7N9y1fOSA" outgoing="_SioHQJ-zEeeDM7N9y1fOSA" decisionInputFlow="_SioHP5-zEeeDM7N9y1fOSA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SioHf5-zEeeDM7N9y1fOSA" name="Test$initialization$1" visibility="protected" method="_SioHNp-zEeeDM7N9y1fOSA"/>
      <ownedOperation xmi:id="_SioHgJ-zEeeDM7N9y1fOSA" name="Test" visibility="protected" method="_SioGnZ-zEeeDM7N9y1fOSA">
        <ownedParameter xmi:id="_SioHgZ-zEeeDM7N9y1fOSA" name="tester" visibility="package" type="_SioHiZ-zEeeDM7N9y1fOSA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHgp-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHg5-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SioHhJ-zEeeDM7N9y1fOSA" name="" visibility="package" type="_SioGkZ-zEeeDM7N9y1fOSA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHhZ-zEeeDM7N9y1fOSA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHhp-zEeeDM7N9y1fOSA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SioHh5-zEeeDM7N9y1fOSA" name="done" visibility="public" method="_SioHCJ-zEeeDM7N9y1fOSA"/>
      <ownedOperation xmi:id="_SioHiJ-zEeeDM7N9y1fOSA" name="destroy" visibility="public" method="_SioHNJ-zEeeDM7N9y1fOSA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SioHiZ-zEeeDM7N9y1fOSA" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_SioHip-zEeeDM7N9y1fOSA" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHi5-zEeeDM7N9y1fOSA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHjJ-zEeeDM7N9y1fOSA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioHjZ-zEeeDM7N9y1fOSA" name="Tester$method$1" specification="_SioIFJ-zEeeDM7N9y1fOSA" node="_SioHkp-zEeeDM7N9y1fOSA _SioHk5-zEeeDM7N9y1fOSA" group="_SioHk5-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_SioHjp-zEeeDM7N9y1fOSA" name="" type="_SioHiZ-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHj5-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHkJ-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHkZ-zEeeDM7N9y1fOSA" target="_SioHkp-zEeeDM7N9y1fOSA" source="_SioHpJ-zEeeDM7N9y1fOSA"/>
          <structuredNode xmi:id="_SioHk5-zEeeDM7N9y1fOSA" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHlJ-zEeeDM7N9y1fOSA" target="_SioHpJ-zEeeDM7N9y1fOSA" source="_SioHoZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHlZ-zEeeDM7N9y1fOSA" target="_SioHpp-zEeeDM7N9y1fOSA" source="_SioHpJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioHlp-zEeeDM7N9y1fOSA" target="_SioHn5-zEeeDM7N9y1fOSA" source="_SioHpZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHl5-zEeeDM7N9y1fOSA" target="_SioHqp-zEeeDM7N9y1fOSA" source="_SioHpJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHmJ-zEeeDM7N9y1fOSA" target="_SioHsZ-zEeeDM7N9y1fOSA" source="_SioHrZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHmZ-zEeeDM7N9y1fOSA" target="_SioHvZ-zEeeDM7N9y1fOSA" source="_SioHtJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHmp-zEeeDM7N9y1fOSA" target="_SioHw5-zEeeDM7N9y1fOSA" source="_SioHuJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioHm5-zEeeDM7N9y1fOSA" target="_SioHx5-zEeeDM7N9y1fOSA" source="_SioHxp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHnJ-zEeeDM7N9y1fOSA" target="_SioHx5-zEeeDM7N9y1fOSA" source="_SioHwJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioHnZ-zEeeDM7N9y1fOSA" target="_SioHpZ-zEeeDM7N9y1fOSA" source="_SioHx5-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioHnp-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioHn5-zEeeDM7N9y1fOSA" name="Body" incoming="_SioHlp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SioHoJ-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_SioHoZ-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SioHlJ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHop-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHo5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SioHpJ-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SioHlJ-zEeeDM7N9y1fOSA" outgoing="_SioHkZ-zEeeDM7N9y1fOSA _SioHlZ-zEeeDM7N9y1fOSA _SioHl5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SioHpZ-zEeeDM7N9y1fOSA" name="Call(Tester$initialization$1)" incoming="_SioHnZ-zEeeDM7N9y1fOSA" outgoing="_SioHlp-zEeeDM7N9y1fOSA" operation="_SioIE5-zEeeDM7N9y1fOSA">
              <target xmi:id="_SioHpp-zEeeDM7N9y1fOSA" name="Call(Tester$initialization$1).target" incoming="_SioHlZ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHp5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHqJ-zEeeDM7N9y1fOSA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SioHqZ-zEeeDM7N9y1fOSA" name="Read(Tester$initializationFlag$1)" structuralFeature="_SioHip-zEeeDM7N9y1fOSA">
              <object xmi:id="_SioHqp-zEeeDM7N9y1fOSA" name="Read(Tester$initializationFlag$1).object" incoming="_SioHl5-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHq5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHrJ-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_SioHrZ-zEeeDM7N9y1fOSA" name="Read(Tester$initializationFlag$1).result" outgoing="_SioHmJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHrp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHr5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioHsJ-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_SioHsZ-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SioHmJ-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHsp-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHs5-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SioHtJ-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SioHmZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHtZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHtp-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioHt5-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_SioHuJ-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SioHmp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHuZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHup-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SioHu5-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SioHvJ-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_SioHvZ-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SioHmZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHvp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHv5-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_SioHwJ-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SioHnJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHwZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHwp-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SioHw5-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SioHmp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioHxJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioHxZ-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SioHxp-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SioHm5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SioHx5-zEeeDM7N9y1fOSA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_SioHm5-zEeeDM7N9y1fOSA _SioHnJ-zEeeDM7N9y1fOSA" outgoing="_SioHnZ-zEeeDM7N9y1fOSA" decisionInputFlow="_SioHnJ-zEeeDM7N9y1fOSA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioHkp-zEeeDM7N9y1fOSA" name="Return" incoming="_SioHkZ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" parameter="_SioHjp-zEeeDM7N9y1fOSA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioHyJ-zEeeDM7N9y1fOSA" name="destroy$method$1" specification="_SioIGJ-zEeeDM7N9y1fOSA" node="_SioHyZ-zEeeDM7N9y1fOSA" group="_SioHyZ-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_SioHyZ-zEeeDM7N9y1fOSA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SioHyp-zEeeDM7N9y1fOSA" name="Tester$initialization$1" specification="_SioIE5-zEeeDM7N9y1fOSA" node="_SioHy5-zEeeDM7N9y1fOSA" group="_SioHy5-zEeeDM7N9y1fOSA">
          <structuredNode xmi:id="_SioHy5-zEeeDM7N9y1fOSA" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHzJ-zEeeDM7N9y1fOSA" target="_SioH2p-zEeeDM7N9y1fOSA" source="_SioH15-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHzZ-zEeeDM7N9y1fOSA" target="_SioH5p-zEeeDM7N9y1fOSA" source="_SioH2p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHzp-zEeeDM7N9y1fOSA" target="_SioH9Z-zEeeDM7N9y1fOSA" source="_SioH2p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioHz5-zEeeDM7N9y1fOSA" target="_SioH_J-zEeeDM7N9y1fOSA" source="_SioH-J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioH0J-zEeeDM7N9y1fOSA" target="_SioICJ-zEeeDM7N9y1fOSA" source="_SioH_5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioH0Z-zEeeDM7N9y1fOSA" target="_SioIDp-zEeeDM7N9y1fOSA" source="_SioIA5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioH0p-zEeeDM7N9y1fOSA" target="_SioIEp-zEeeDM7N9y1fOSA" source="_SioIEZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioH05-zEeeDM7N9y1fOSA" target="_SioIEp-zEeeDM7N9y1fOSA" source="_SioIC5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioH1J-zEeeDM7N9y1fOSA" target="_SioH25-zEeeDM7N9y1fOSA" source="_SioIEp-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioH1Z-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SioH1p-zEeeDM7N9y1fOSA" name="ReadSelf">
              <result xmi:id="_SioH15-zEeeDM7N9y1fOSA" name="ReadSelf.result" outgoing="_SioHzJ-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH2J-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH2Z-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SioH2p-zEeeDM7N9y1fOSA" name="Fork(ReadSelf.result)" incoming="_SioHzJ-zEeeDM7N9y1fOSA" outgoing="_SioHzZ-zEeeDM7N9y1fOSA _SioHzp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioH25-zEeeDM7N9y1fOSA" name="Initialization" incoming="_SioH1J-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioH3J-zEeeDM7N9y1fOSA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioH3Z-zEeeDM7N9y1fOSA" target="_SioH85-zEeeDM7N9y1fOSA" source="_SioH35-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioH3p-zEeeDM7N9y1fOSA" name="Value(true)">
                  <result xmi:id="_SioH35-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_SioH3Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH4J-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH4Z-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SioH4p-zEeeDM7N9y1fOSA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SioH45-zEeeDM7N9y1fOSA" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_SioH85-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioH5J-zEeeDM7N9y1fOSA" target="_SioH8J-zEeeDM7N9y1fOSA" source="_SioH85-zEeeDM7N9y1fOSA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioH5Z-zEeeDM7N9y1fOSA" target="_SioH6p-zEeeDM7N9y1fOSA" source="_SioH5p-zEeeDM7N9y1fOSA"/>
                  <structuredNodeInput xmi:id="_SioH5p-zEeeDM7N9y1fOSA" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_SioHzZ-zEeeDM7N9y1fOSA" outgoing="_SioH5Z-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH55-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH6J-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SioH6Z-zEeeDM7N9y1fOSA" name="Write(Tester$initializationFlag$1)" structuralFeature="_SioHip-zEeeDM7N9y1fOSA">
                    <object xmi:id="_SioH6p-zEeeDM7N9y1fOSA" name="Write(Tester$initializationFlag$1).object" incoming="_SioH5Z-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH65-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH7J-zEeeDM7N9y1fOSA" value="1"/>
                    </object>
                    <result xmi:id="_SioH7Z-zEeeDM7N9y1fOSA" name="Write(Tester$initializationFlag$1).result" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH7p-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH75-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:id="_SioH8J-zEeeDM7N9y1fOSA" name="Write(Tester$initializationFlag$1).value" incoming="_SioH5J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH8Z-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH8p-zEeeDM7N9y1fOSA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_SioH85-zEeeDM7N9y1fOSA" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_SioH3Z-zEeeDM7N9y1fOSA" outgoing="_SioH5J-zEeeDM7N9y1fOSA" regionAsInput="_SioH45-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SioH9J-zEeeDM7N9y1fOSA" name="Read(Tester$initializationFlag$1)" structuralFeature="_SioHip-zEeeDM7N9y1fOSA">
              <object xmi:id="_SioH9Z-zEeeDM7N9y1fOSA" name="Read(Tester$initializationFlag$1).object" incoming="_SioHzp-zEeeDM7N9y1fOSA" type="_SioHiZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH9p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH95-zEeeDM7N9y1fOSA" value="1"/>
              </object>
              <result xmi:id="_SioH-J-zEeeDM7N9y1fOSA" name="Read(Tester$initializationFlag$1).result" outgoing="_SioHz5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH-Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH-p-zEeeDM7N9y1fOSA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioH-5-zEeeDM7N9y1fOSA" name="Call(ListSize)">
              <argument xmi:id="_SioH_J-zEeeDM7N9y1fOSA" name="Call(ListSize).argument(list)" incoming="_SioHz5-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioH_Z-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioH_p-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SioH_5-zEeeDM7N9y1fOSA" name="Call(ListSize).result(result)" outgoing="_SioH0J-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIAJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIAZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioIAp-zEeeDM7N9y1fOSA" name="Value(0)">
              <result xmi:id="_SioIA5-zEeeDM7N9y1fOSA" name="Value(0).result" outgoing="_SioH0Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIBJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIBZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SioIBp-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SioIB5-zEeeDM7N9y1fOSA" name="Test(Size==0)">
              <first xmi:id="_SioICJ-zEeeDM7N9y1fOSA" name="Test(Size==0).first" incoming="_SioH0J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioICZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioICp-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_SioIC5-zEeeDM7N9y1fOSA" name="Test(Size==0).result" outgoing="_SioH05-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIDJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIDZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SioIDp-zEeeDM7N9y1fOSA" name="Test(Size==0).second" incoming="_SioH0Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioID5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIEJ-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SioIEZ-zEeeDM7N9y1fOSA" name="InitialNode" outgoing="_SioH0p-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SioIEp-zEeeDM7N9y1fOSA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_SioH0p-zEeeDM7N9y1fOSA _SioH05-zEeeDM7N9y1fOSA" outgoing="_SioH1J-zEeeDM7N9y1fOSA" decisionInputFlow="_SioH05-zEeeDM7N9y1fOSA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SioIE5-zEeeDM7N9y1fOSA" name="Tester$initialization$1" visibility="protected" method="_SioHyp-zEeeDM7N9y1fOSA"/>
        <ownedOperation xmi:id="_SioIFJ-zEeeDM7N9y1fOSA" name="Tester" visibility="public" method="_SioHjZ-zEeeDM7N9y1fOSA">
          <ownedParameter xmi:id="_SioIFZ-zEeeDM7N9y1fOSA" name="" visibility="package" type="_SioHiZ-zEeeDM7N9y1fOSA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIFp-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIF5-zEeeDM7N9y1fOSA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SioIGJ-zEeeDM7N9y1fOSA" name="destroy" visibility="public" method="_SioHyJ-zEeeDM7N9y1fOSA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SioIGZ-zEeeDM7N9y1fOSA" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_SioIGp-zEeeDM7N9y1fOSA" name="Continue" signal="_SioIGZ-zEeeDM7N9y1fOSA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SioIG5-zEeeDM7N9y1fOSA" name="AssertTrue" visibility="public" node="_SioIL5-zEeeDM7N9y1fOSA _SioIMJ-zEeeDM7N9y1fOSA _SioIMZ-zEeeDM7N9y1fOSA _SioIMp-zEeeDM7N9y1fOSA _SioIM5-zEeeDM7N9y1fOSA" group="_SioIM5-zEeeDM7N9y1fOSA">
      <packageImport xmi:id="_SioIHJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SioIHZ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SioIHp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SioIH5-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SioIIJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SioIIZ-zEeeDM7N9y1fOSA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIIp-zEeeDM7N9y1fOSA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioII5-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SioIJJ-zEeeDM7N9y1fOSA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIJZ-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIJp-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIJ5-zEeeDM7N9y1fOSA" target="_SioIMJ-zEeeDM7N9y1fOSA" source="_SioIL5-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIKJ-zEeeDM7N9y1fOSA" target="_SioIMp-zEeeDM7N9y1fOSA" source="_SioIMZ-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIKZ-zEeeDM7N9y1fOSA" target="_SioIUZ-zEeeDM7N9y1fOSA" source="_SioIMp-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIKp-zEeeDM7N9y1fOSA" target="_SioIfp-zEeeDM7N9y1fOSA" source="_SioIMJ-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIK5-zEeeDM7N9y1fOSA" target="_SioIhp-zEeeDM7N9y1fOSA" source="_SioIMp-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioILJ-zEeeDM7N9y1fOSA" target="_SioIjp-zEeeDM7N9y1fOSA" source="_SioIMJ-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioILZ-zEeeDM7N9y1fOSA" target="_SioIm5-zEeeDM7N9y1fOSA" source="_SioIMp-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioILp-zEeeDM7N9y1fOSA" target="_SioIo5-zEeeDM7N9y1fOSA" source="_SioIMJ-zEeeDM7N9y1fOSA"/>
      <structuredNode xmi:id="_SioIM5-zEeeDM7N9y1fOSA" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioINJ-zEeeDM7N9y1fOSA" target="_SioIsZ-zEeeDM7N9y1fOSA" source="_SioIq5-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioINZ-zEeeDM7N9y1fOSA" target="_SioIsp-zEeeDM7N9y1fOSA" source="_SioIrp-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_SioINp-zEeeDM7N9y1fOSA" name="IfStatement@7eda7f66">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIN5-zEeeDM7N9y1fOSA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIOJ-zEeeDM7N9y1fOSA" target="_SioISJ-zEeeDM7N9y1fOSA" source="_SioIUZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIOZ-zEeeDM7N9y1fOSA" target="_SioIU5-zEeeDM7N9y1fOSA" source="_SioIUZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIOp-zEeeDM7N9y1fOSA" target="_SioIWZ-zEeeDM7N9y1fOSA" source="_SioIVp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIO5-zEeeDM7N9y1fOSA" target="_SioIWp-zEeeDM7N9y1fOSA" source="_SioIS5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIPJ-zEeeDM7N9y1fOSA" target="_SioIW5-zEeeDM7N9y1fOSA" source="_SioIWZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIPZ-zEeeDM7N9y1fOSA" target="_SioIW5-zEeeDM7N9y1fOSA" source="_SioIWZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIPp-zEeeDM7N9y1fOSA" target="_SioIWp-zEeeDM7N9y1fOSA" source="_SioIW5-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioIP5-zEeeDM7N9y1fOSA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIQJ-zEeeDM7N9y1fOSA" target="_SioITp-zEeeDM7N9y1fOSA" source="_SioIQ5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIQZ-zEeeDM7N9y1fOSA" target="_SioIXZ-zEeeDM7N9y1fOSA" source="_SioIWp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioIQp-zEeeDM7N9y1fOSA" name="Value(true)">
              <result xmi:id="_SioIQ5-zEeeDM7N9y1fOSA" name="Value(true).result" outgoing="_SioIQJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIRJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIRZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SioIRp-zEeeDM7N9y1fOSA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SioIR5-zEeeDM7N9y1fOSA" name="Test(==)">
              <first xmi:id="_SioISJ-zEeeDM7N9y1fOSA" name="Test(==).first" incoming="_SioIOJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioISZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioISp-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_SioIS5-zEeeDM7N9y1fOSA" name="Test(==).result" outgoing="_SioIO5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioITJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioITZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SioITp-zEeeDM7N9y1fOSA" name="Test(==).second" incoming="_SioIQJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIT5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIUJ-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SioIUZ-zEeeDM7N9y1fOSA" name="Fork(Fork(condition))" incoming="_SioIKZ-zEeeDM7N9y1fOSA" outgoing="_SioIOJ-zEeeDM7N9y1fOSA _SioIOZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioIUp-zEeeDM7N9y1fOSA" name="Call(NotEmpty)">
              <argument xmi:id="_SioIU5-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SioIOZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIVJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIVZ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SioIVp-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SioIOp-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIV5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIWJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SioIWZ-zEeeDM7N9y1fOSA" name="Fork(Call(NotEmpty).result())" incoming="_SioIOp-zEeeDM7N9y1fOSA" outgoing="_SioIPJ-zEeeDM7N9y1fOSA _SioIPZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SioIWp-zEeeDM7N9y1fOSA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SioIO5-zEeeDM7N9y1fOSA _SioIPp-zEeeDM7N9y1fOSA" outgoing="_SioIQZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SioIW5-zEeeDM7N9y1fOSA" name="Decision(Call(NotEmpty).result())" incoming="_SioIPJ-zEeeDM7N9y1fOSA _SioIPZ-zEeeDM7N9y1fOSA" outgoing="_SioIPp-zEeeDM7N9y1fOSA" decisionInputFlow="_SioIPZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioIXJ-zEeeDM7N9y1fOSA" name="Call(Not)">
              <argument xmi:id="_SioIXZ-zEeeDM7N9y1fOSA" name="Call(Not).argument(x)" incoming="_SioIQZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIXp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIX5-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioIYJ-zEeeDM7N9y1fOSA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIYZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIYp-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIY5-zEeeDM7N9y1fOSA" name="ExpressionStatement@f81f1ac">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIZJ-zEeeDM7N9y1fOSA" target="_SioIZ5-zEeeDM7N9y1fOSA" source="_SioId5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioIZZ-zEeeDM7N9y1fOSA" target="_SioIZp-zEeeDM7N9y1fOSA" source="_SioIbZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioIZp-zEeeDM7N9y1fOSA" name="Call(WriteLine)" incoming="_SioIZZ-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SioIZ5-zEeeDM7N9y1fOSA" name="Call(WriteLine).argument(value)" incoming="_SioIZJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIaJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIaZ-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioIap-zEeeDM7N9y1fOSA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIa5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIbJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIbZ-zEeeDM7N9y1fOSA" name="Tuple@4867de38" outgoing="_SioIZZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIbp-zEeeDM7N9y1fOSA" target="_SioIe5-zEeeDM7N9y1fOSA" source="_SioIcZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioIb5-zEeeDM7N9y1fOSA" target="_SioIdZ-zEeeDM7N9y1fOSA" source="_SioIcJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioIcJ-zEeeDM7N9y1fOSA" name="Value(&quot;FAILED: &quot;)" outgoing="_SioIb5-zEeeDM7N9y1fOSA">
                <result xmi:id="_SioIcZ-zEeeDM7N9y1fOSA" name="Value(&quot;FAILED: &quot;).result" outgoing="_SioIbp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIcp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIc5-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SioIdJ-zEeeDM7N9y1fOSA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIdZ-zEeeDM7N9y1fOSA" name="Node(Call(Concat))" incoming="_SioIb5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIdp-zEeeDM7N9y1fOSA" target="_SioId5-zEeeDM7N9y1fOSA" source="_SioIgZ-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_SioId5-zEeeDM7N9y1fOSA" name="Output(Call(Concat).result(result))" incoming="_SioIdp-zEeeDM7N9y1fOSA" outgoing="_SioIZJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIeJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIeZ-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioIep-zEeeDM7N9y1fOSA" name="Call(Concat)">
                  <argument xmi:id="_SioIe5-zEeeDM7N9y1fOSA" name="Call(Concat).argument(x)" incoming="_SioIbp-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIfJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIfZ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_SioIfp-zEeeDM7N9y1fOSA" name="Call(Concat).argument(y)" incoming="_SioIKp-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIf5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIgJ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_SioIgZ-zEeeDM7N9y1fOSA" name="Call(Concat).result(result)" outgoing="_SioIdp-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIgp-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIg5-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIhJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIhZ-zEeeDM7N9y1fOSA" target="_SioIiZ-zEeeDM7N9y1fOSA" source="_SioIhp-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioIhp-zEeeDM7N9y1fOSA" name="Passthru(Fork(condition)).input" incoming="_SioIK5-zEeeDM7N9y1fOSA" outgoing="_SioIhZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIh5-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIiJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioIiZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(condition)).output" incoming="_SioIhZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIip-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIi5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIjJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIjZ-zEeeDM7N9y1fOSA" target="_SioIkZ-zEeeDM7N9y1fOSA" source="_SioIjp-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioIjp-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).input" incoming="_SioILJ-zEeeDM7N9y1fOSA" outgoing="_SioIjZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIj5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIkJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioIkZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).output" incoming="_SioIjZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIkp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIk5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioIlJ-zEeeDM7N9y1fOSA" name="Value(true)">
            <result xmi:id="_SioIlZ-zEeeDM7N9y1fOSA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIlp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIl5-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SioImJ-zEeeDM7N9y1fOSA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioImZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioImp-zEeeDM7N9y1fOSA" target="_SioInp-zEeeDM7N9y1fOSA" source="_SioIm5-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioIm5-zEeeDM7N9y1fOSA" name="Passthru(Fork(condition)).input" incoming="_SioILZ-zEeeDM7N9y1fOSA" outgoing="_SioImp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioInJ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioInZ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioInp-zEeeDM7N9y1fOSA" name="Passthru(Fork(condition)).output" incoming="_SioImp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIn5-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIoJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioIoZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIop-zEeeDM7N9y1fOSA" target="_SioIpp-zEeeDM7N9y1fOSA" source="_SioIo5-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioIo5-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).input" incoming="_SioILp-zEeeDM7N9y1fOSA" outgoing="_SioIop-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIpJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIpZ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioIpp-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).output" incoming="_SioIop-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIp5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIqJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_SioIqZ-zEeeDM7N9y1fOSA" body="_SioIY5-zEeeDM7N9y1fOSA _SioIhJ-zEeeDM7N9y1fOSA _SioIjJ-zEeeDM7N9y1fOSA" bodyOutput="_SioIiZ-zEeeDM7N9y1fOSA _SioIkZ-zEeeDM7N9y1fOSA" decider="_SioIYJ-zEeeDM7N9y1fOSA" successorClause="_SioIqp-zEeeDM7N9y1fOSA" test="_SioIN5-zEeeDM7N9y1fOSA"/>
          <clause xmi:id="_SioIqp-zEeeDM7N9y1fOSA" body="_SioImZ-zEeeDM7N9y1fOSA _SioIoZ-zEeeDM7N9y1fOSA" bodyOutput="_SioInp-zEeeDM7N9y1fOSA _SioIpp-zEeeDM7N9y1fOSA" decider="_SioIlZ-zEeeDM7N9y1fOSA" predecessorClause="_SioIqZ-zEeeDM7N9y1fOSA" test="_SioIlJ-zEeeDM7N9y1fOSA"/>
          <result xmi:id="_SioIq5-zEeeDM7N9y1fOSA" name="IfStatement@7eda7f66.result(condition)" outgoing="_SioINJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIrJ-zEeeDM7N9y1fOSA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIrZ-zEeeDM7N9y1fOSA" value="1"/>
          </result>
          <result xmi:id="_SioIrp-zEeeDM7N9y1fOSA" name="IfStatement@7eda7f66.result(label)" outgoing="_SioINZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIr5-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIsJ-zEeeDM7N9y1fOSA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_SioIsZ-zEeeDM7N9y1fOSA" name="Fork(condition)" incoming="_SioINJ-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SioIsp-zEeeDM7N9y1fOSA" name="Fork(label)" incoming="_SioINZ-zEeeDM7N9y1fOSA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioIL5-zEeeDM7N9y1fOSA" name="Input(label)" outgoing="_SioIJ5-zEeeDM7N9y1fOSA" parameter="_SioIIZ-zEeeDM7N9y1fOSA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_SioIMJ-zEeeDM7N9y1fOSA" name="Fork(label)" incoming="_SioIJ5-zEeeDM7N9y1fOSA" outgoing="_SioIKp-zEeeDM7N9y1fOSA _SioILJ-zEeeDM7N9y1fOSA _SioILp-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioIMZ-zEeeDM7N9y1fOSA" name="Input(condition)" outgoing="_SioIKJ-zEeeDM7N9y1fOSA" parameter="_SioIJJ-zEeeDM7N9y1fOSA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_SioIMp-zEeeDM7N9y1fOSA" name="Fork(condition)" incoming="_SioIKJ-zEeeDM7N9y1fOSA" outgoing="_SioIKZ-zEeeDM7N9y1fOSA _SioIK5-zEeeDM7N9y1fOSA _SioILZ-zEeeDM7N9y1fOSA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SioIs5-zEeeDM7N9y1fOSA" name="AssertEqual" visibility="public" node="_SioI05-zEeeDM7N9y1fOSA _SioI1J-zEeeDM7N9y1fOSA _SioI1Z-zEeeDM7N9y1fOSA _SioI1p-zEeeDM7N9y1fOSA _SioI15-zEeeDM7N9y1fOSA _SioI2J-zEeeDM7N9y1fOSA _SioI2Z-zEeeDM7N9y1fOSA" group="_SioI2Z-zEeeDM7N9y1fOSA">
      <packageImport xmi:id="_SioItJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SioItZ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SioItp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SioIt5-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SioIuJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SioIuZ-zEeeDM7N9y1fOSA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIup-zEeeDM7N9y1fOSA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIu5-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SioIvJ-zEeeDM7N9y1fOSA" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIvZ-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIvp-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SioIv5-zEeeDM7N9y1fOSA" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioIwJ-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioIwZ-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIwp-zEeeDM7N9y1fOSA" target="_SioI1J-zEeeDM7N9y1fOSA" source="_SioI05-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIw5-zEeeDM7N9y1fOSA" target="_SioI1p-zEeeDM7N9y1fOSA" source="_SioI1Z-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIxJ-zEeeDM7N9y1fOSA" target="_SioI2J-zEeeDM7N9y1fOSA" source="_SioI15-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIxZ-zEeeDM7N9y1fOSA" target="_SioJEJ-zEeeDM7N9y1fOSA" source="_SioI1p-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIxp-zEeeDM7N9y1fOSA" target="_SioJGJ-zEeeDM7N9y1fOSA" source="_SioI2J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIx5-zEeeDM7N9y1fOSA" target="_SioJV5-zEeeDM7N9y1fOSA" source="_SioI1J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIyJ-zEeeDM7N9y1fOSA" target="_SioJh5-zEeeDM7N9y1fOSA" source="_SioI2J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIyZ-zEeeDM7N9y1fOSA" target="_SioJ0Z-zEeeDM7N9y1fOSA" source="_SioI1J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIyp-zEeeDM7N9y1fOSA" target="_SioJ4Z-zEeeDM7N9y1fOSA" source="_SioI2J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIy5-zEeeDM7N9y1fOSA" target="_SioJ6Z-zEeeDM7N9y1fOSA" source="_SioI1p-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIzJ-zEeeDM7N9y1fOSA" target="_SioKCJ-zEeeDM7N9y1fOSA" source="_SioI2J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIzZ-zEeeDM7N9y1fOSA" target="_SioKK5-zEeeDM7N9y1fOSA" source="_SioI1J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIzp-zEeeDM7N9y1fOSA" target="_SioKO5-zEeeDM7N9y1fOSA" source="_SioI2J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioIz5-zEeeDM7N9y1fOSA" target="_SioKQ5-zEeeDM7N9y1fOSA" source="_SioI1p-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI0J-zEeeDM7N9y1fOSA" target="_SioKkp-zEeeDM7N9y1fOSA" source="_SioI1J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI0Z-zEeeDM7N9y1fOSA" target="_SioKn5-zEeeDM7N9y1fOSA" source="_SioI2J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI0p-zEeeDM7N9y1fOSA" target="_SioKp5-zEeeDM7N9y1fOSA" source="_SioI1p-zEeeDM7N9y1fOSA"/>
      <structuredNode xmi:id="_SioI2Z-zEeeDM7N9y1fOSA" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI2p-zEeeDM7N9y1fOSA" target="_SioKu5-zEeeDM7N9y1fOSA" source="_SioKr5-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI25-zEeeDM7N9y1fOSA" target="_SioKvJ-zEeeDM7N9y1fOSA" source="_SioKsp-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI3J-zEeeDM7N9y1fOSA" target="_SioKvZ-zEeeDM7N9y1fOSA" source="_SioKtZ-zEeeDM7N9y1fOSA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI3Z-zEeeDM7N9y1fOSA" target="_SioKvp-zEeeDM7N9y1fOSA" source="_SioKuJ-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_SioI3p-zEeeDM7N9y1fOSA" name="IfStatement@17f551f3">
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioI35-zEeeDM7N9y1fOSA" target="_SioJcZ-zEeeDM7N9y1fOSA" source="_SioJO5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI4J-zEeeDM7N9y1fOSA" target="_SioKV5-zEeeDM7N9y1fOSA" source="_SioKS5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI4Z-zEeeDM7N9y1fOSA" target="_SioKWJ-zEeeDM7N9y1fOSA" source="_SioKTp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI4p-zEeeDM7N9y1fOSA" target="_SioKWZ-zEeeDM7N9y1fOSA" source="_SioKUZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI45-zEeeDM7N9y1fOSA" target="_SioKWp-zEeeDM7N9y1fOSA" source="_SioKVJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI5J-zEeeDM7N9y1fOSA" target="_SioJk5-zEeeDM7N9y1fOSA" source="_SioJc5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI5Z-zEeeDM7N9y1fOSA" target="_SioJtZ-zEeeDM7N9y1fOSA" source="_SioJc5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI5p-zEeeDM7N9y1fOSA" target="_SioJ2Z-zEeeDM7N9y1fOSA" source="_SioJc5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI55-zEeeDM7N9y1fOSA" target="_SioKM5-zEeeDM7N9y1fOSA" source="_SioJc5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioI6J-zEeeDM7N9y1fOSA" target="_SioJiZ-zEeeDM7N9y1fOSA" source="_SioJcZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SioI6Z-zEeeDM7N9y1fOSA" target="_SioKW5-zEeeDM7N9y1fOSA" source="_SioJiZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI6p-zEeeDM7N9y1fOSA" target="_SioKbZ-zEeeDM7N9y1fOSA" source="_SioKV5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI65-zEeeDM7N9y1fOSA" target="_SioKdZ-zEeeDM7N9y1fOSA" source="_SioKWJ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI7J-zEeeDM7N9y1fOSA" target="_SioKfZ-zEeeDM7N9y1fOSA" source="_SioKWZ-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI7Z-zEeeDM7N9y1fOSA" target="_SioKhZ-zEeeDM7N9y1fOSA" source="_SioKWp-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioI7p-zEeeDM7N9y1fOSA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI75-zEeeDM7N9y1fOSA" target="_SioJB5-zEeeDM7N9y1fOSA" source="_SioJEJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI8J-zEeeDM7N9y1fOSA" target="_SioJEp-zEeeDM7N9y1fOSA" source="_SioJEJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI8Z-zEeeDM7N9y1fOSA" target="_SioJDZ-zEeeDM7N9y1fOSA" source="_SioJGJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI8p-zEeeDM7N9y1fOSA" target="_SioJGp-zEeeDM7N9y1fOSA" source="_SioJGJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI85-zEeeDM7N9y1fOSA" target="_SioJIZ-zEeeDM7N9y1fOSA" source="_SioJFZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI9J-zEeeDM7N9y1fOSA" target="_SioJIp-zEeeDM7N9y1fOSA" source="_SioJHZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI9Z-zEeeDM7N9y1fOSA" target="_SioJJJ-zEeeDM7N9y1fOSA" source="_SioJIZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI9p-zEeeDM7N9y1fOSA" target="_SioJK5-zEeeDM7N9y1fOSA" source="_SioJIp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI95-zEeeDM7N9y1fOSA" target="_SioJMZ-zEeeDM7N9y1fOSA" source="_SioJIp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioI-J-zEeeDM7N9y1fOSA" target="_SioJBp-zEeeDM7N9y1fOSA" source="_SioJMZ-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioI-Z-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioI-p-zEeeDM7N9y1fOSA" target="_SioJI5-zEeeDM7N9y1fOSA" source="_SioJMZ-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioI-5-zEeeDM7N9y1fOSA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioI_J-zEeeDM7N9y1fOSA" target="_SioJMp-zEeeDM7N9y1fOSA" source="_SioJIJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioI_Z-zEeeDM7N9y1fOSA" target="_SioJMp-zEeeDM7N9y1fOSA" source="_SioJIZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioI_p-zEeeDM7N9y1fOSA" target="_SioJMZ-zEeeDM7N9y1fOSA" source="_SioJMp-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioI_5-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioJAJ-zEeeDM7N9y1fOSA" target="_SioJKp-zEeeDM7N9y1fOSA" source="_SioJMp-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioJAZ-zEeeDM7N9y1fOSA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJAp-zEeeDM7N9y1fOSA" target="_SioJM5-zEeeDM7N9y1fOSA" source="_SioJCp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJA5-zEeeDM7N9y1fOSA" target="_SioJM5-zEeeDM7N9y1fOSA" source="_SioJJ5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJBJ-zEeeDM7N9y1fOSA" target="_SioJM5-zEeeDM7N9y1fOSA" source="_SioJLp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJBZ-zEeeDM7N9y1fOSA" target="_SioJNZ-zEeeDM7N9y1fOSA" source="_SioJM5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SioJBp-zEeeDM7N9y1fOSA" name="Test(==)" incoming="_SioI-J-zEeeDM7N9y1fOSA">
              <first xmi:id="_SioJB5-zEeeDM7N9y1fOSA" name="Test(==).first" incoming="_SioI75-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJCJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJCZ-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_SioJCp-zEeeDM7N9y1fOSA" name="Test(==).result" outgoing="_SioJAp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJC5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJDJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_SioJDZ-zEeeDM7N9y1fOSA" name="Test(==).second" incoming="_SioI8Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJDp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJD5-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SioJEJ-zEeeDM7N9y1fOSA" name="Fork(Fork(value1))" incoming="_SioIxZ-zEeeDM7N9y1fOSA" outgoing="_SioI75-zEeeDM7N9y1fOSA _SioI8J-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJEZ-zEeeDM7N9y1fOSA" name="Call(NotEmpty)">
              <argument xmi:id="_SioJEp-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SioI8J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJE5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJFJ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SioJFZ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SioI85-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJFp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJF5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SioJGJ-zEeeDM7N9y1fOSA" name="Fork(Fork(value2))" incoming="_SioIxp-zEeeDM7N9y1fOSA" outgoing="_SioI8Z-zEeeDM7N9y1fOSA _SioI8p-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJGZ-zEeeDM7N9y1fOSA" name="Call(NotEmpty)">
              <argument xmi:id="_SioJGp-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SioI8p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJG5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJHJ-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_SioJHZ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SioI9J-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJHp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJH5-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SioJIJ-zEeeDM7N9y1fOSA" name="Initial(Test(==))" outgoing="_SioI_J-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SioJIZ-zEeeDM7N9y1fOSA" name="Fork(Call(NotEmpty).result())" incoming="_SioI85-zEeeDM7N9y1fOSA" outgoing="_SioI9Z-zEeeDM7N9y1fOSA _SioI_Z-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SioJIp-zEeeDM7N9y1fOSA" name="Fork(Call(NotEmpty).result())" incoming="_SioI9J-zEeeDM7N9y1fOSA" outgoing="_SioI9p-zEeeDM7N9y1fOSA _SioI95-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJI5-zEeeDM7N9y1fOSA" name="Call(Not)" incoming="_SioI-p-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SioJJJ-zEeeDM7N9y1fOSA" name="Call(Not).argument(x)" incoming="_SioI9Z-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJJZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJJp-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioJJ5-zEeeDM7N9y1fOSA" name="Call(Not).result(result)" outgoing="_SioJA5-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJKJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJKZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJKp-zEeeDM7N9y1fOSA" name="Call(Not)" incoming="_SioJAJ-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SioJK5-zEeeDM7N9y1fOSA" name="Call(Not).argument(x)" incoming="_SioI9p-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJLJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJLZ-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioJLp-zEeeDM7N9y1fOSA" name="Call(Not).result(result)" outgoing="_SioJBJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJL5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJMJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_SioJMZ-zEeeDM7N9y1fOSA" name="Decision(Call(NotEmpty).result())" incoming="_SioI95-zEeeDM7N9y1fOSA _SioI_p-zEeeDM7N9y1fOSA" outgoing="_SioI-J-zEeeDM7N9y1fOSA _SioI-p-zEeeDM7N9y1fOSA" decisionInputFlow="_SioI95-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SioJMp-zEeeDM7N9y1fOSA" name="Decision(Call(NotEmpty).result())" incoming="_SioI_J-zEeeDM7N9y1fOSA _SioI_Z-zEeeDM7N9y1fOSA" outgoing="_SioI_p-zEeeDM7N9y1fOSA _SioJAJ-zEeeDM7N9y1fOSA" decisionInputFlow="_SioI_Z-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SioJM5-zEeeDM7N9y1fOSA" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_SioJAp-zEeeDM7N9y1fOSA _SioJA5-zEeeDM7N9y1fOSA _SioJBJ-zEeeDM7N9y1fOSA" outgoing="_SioJBZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJNJ-zEeeDM7N9y1fOSA" name="Call(Not)">
              <argument xmi:id="_SioJNZ-zEeeDM7N9y1fOSA" name="Call(Not).argument(x)" incoming="_SioJBZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJNp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJN5-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioJOJ-zEeeDM7N9y1fOSA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJOZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJOp-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJO5-zEeeDM7N9y1fOSA" name="ExpressionStatement@7e12f99d" outgoing="_SioI35-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJPJ-zEeeDM7N9y1fOSA" target="_SioJP5-zEeeDM7N9y1fOSA" source="_SioJZJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioJPZ-zEeeDM7N9y1fOSA" target="_SioJPp-zEeeDM7N9y1fOSA" source="_SioJQp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJPp-zEeeDM7N9y1fOSA" name="Call(Write)" incoming="_SioJPZ-zEeeDM7N9y1fOSA" behavior="_Siot6Z-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SioJP5-zEeeDM7N9y1fOSA" name="Call(Write).argument(value)" incoming="_SioJPJ-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJQJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJQZ-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJQp-zEeeDM7N9y1fOSA" name="Tuple@52b96bb2" outgoing="_SioJPZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJQ5-zEeeDM7N9y1fOSA" target="_SioJVJ-zEeeDM7N9y1fOSA" source="_SioJSp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioJRJ-zEeeDM7N9y1fOSA" target="_SioJTp-zEeeDM7N9y1fOSA" source="_SioJSZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJRZ-zEeeDM7N9y1fOSA" target="_SioJaJ-zEeeDM7N9y1fOSA" source="_SioJUJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJRp-zEeeDM7N9y1fOSA" target="_SioJa5-zEeeDM7N9y1fOSA" source="_SioJXp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioJR5-zEeeDM7N9y1fOSA" target="_SioJYp-zEeeDM7N9y1fOSA" source="_SioJTp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioJSJ-zEeeDM7N9y1fOSA" target="_SioJYp-zEeeDM7N9y1fOSA" source="_SioJXZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioJSZ-zEeeDM7N9y1fOSA" name="Value(&quot;FAILED: &quot;)" outgoing="_SioJRJ-zEeeDM7N9y1fOSA">
                <result xmi:id="_SioJSp-zEeeDM7N9y1fOSA" name="Value(&quot;FAILED: &quot;).result" outgoing="_SioJQ5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJS5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJTJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SioJTZ-zEeeDM7N9y1fOSA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJTp-zEeeDM7N9y1fOSA" name="Node(Call(Concat))" incoming="_SioJRJ-zEeeDM7N9y1fOSA" outgoing="_SioJR5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJT5-zEeeDM7N9y1fOSA" target="_SioJUJ-zEeeDM7N9y1fOSA" source="_SioJWp-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_SioJUJ-zEeeDM7N9y1fOSA" name="Output(Call(Concat).result(result))" incoming="_SioJT5-zEeeDM7N9y1fOSA" outgoing="_SioJRZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJUZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJUp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJU5-zEeeDM7N9y1fOSA" name="Call(Concat)">
                  <argument xmi:id="_SioJVJ-zEeeDM7N9y1fOSA" name="Call(Concat).argument(x)" incoming="_SioJQ5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJVZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJVp-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_SioJV5-zEeeDM7N9y1fOSA" name="Call(Concat).argument(y)" incoming="_SioIx5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJWJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJWZ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_SioJWp-zEeeDM7N9y1fOSA" name="Call(Concat).result(result)" outgoing="_SioJT5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJW5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJXJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioJXZ-zEeeDM7N9y1fOSA" name="Value(&quot;==&quot;)" outgoing="_SioJSJ-zEeeDM7N9y1fOSA">
                <result xmi:id="_SioJXp-zEeeDM7N9y1fOSA" name="Value(&quot;==&quot;).result" outgoing="_SioJRp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJX5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJYJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SioJYZ-zEeeDM7N9y1fOSA" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJYp-zEeeDM7N9y1fOSA" name="Node(Call(Concat))" incoming="_SioJR5-zEeeDM7N9y1fOSA _SioJSJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJY5-zEeeDM7N9y1fOSA" target="_SioJZJ-zEeeDM7N9y1fOSA" source="_SioJbp-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_SioJZJ-zEeeDM7N9y1fOSA" name="Output(Call(Concat).result(result))" incoming="_SioJY5-zEeeDM7N9y1fOSA" outgoing="_SioJPJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJZZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJZp-zEeeDM7N9y1fOSA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJZ5-zEeeDM7N9y1fOSA" name="Call(Concat)">
                  <argument xmi:id="_SioJaJ-zEeeDM7N9y1fOSA" name="Call(Concat).argument(x)" incoming="_SioJRZ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJaZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJap-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <argument xmi:id="_SioJa5-zEeeDM7N9y1fOSA" name="Call(Concat).argument(y)" incoming="_SioJRp-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJbJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJbZ-zEeeDM7N9y1fOSA" value="1"/>
                  </argument>
                  <result xmi:id="_SioJbp-zEeeDM7N9y1fOSA" name="Call(Concat).result(result)" outgoing="_SioJY5-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJb5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJcJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJcZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@1a77fc0f" incoming="_SioI35-zEeeDM7N9y1fOSA" outgoing="_SioI6J-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJcp-zEeeDM7N9y1fOSA" target="_SioJc5-zEeeDM7N9y1fOSA" source="_SioJiJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SioJc5-zEeeDM7N9y1fOSA" name="Fork(s)@228f8aec" incoming="_SioJcp-zEeeDM7N9y1fOSA" outgoing="_SioI5J-zEeeDM7N9y1fOSA _SioI5Z-zEeeDM7N9y1fOSA _SioI5p-zEeeDM7N9y1fOSA _SioI55-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJdJ-zEeeDM7N9y1fOSA" name="RightHandSide@a7785a7">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SioJdZ-zEeeDM7N9y1fOSA" name="CastExpression@a7785a7" mode="parallel" outputElement="_SioJiJ-zEeeDM7N9y1fOSA" inputElement="_SioJh5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJdp-zEeeDM7N9y1fOSA" target="_SioJf5-zEeeDM7N9y1fOSA" source="_SioJhZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJd5-zEeeDM7N9y1fOSA" target="_SioJhp-zEeeDM7N9y1fOSA" source="_SioJhZ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJeJ-zEeeDM7N9y1fOSA" target="_SioJhp-zEeeDM7N9y1fOSA" source="_SioJgp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJeZ-zEeeDM7N9y1fOSA" target="_SioJfZ-zEeeDM7N9y1fOSA" source="_SioJhp-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioJep-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJe5-zEeeDM7N9y1fOSA" target="_SioJhZ-zEeeDM7N9y1fOSA" source="_SioJh5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJfJ-zEeeDM7N9y1fOSA" target="_SioJiJ-zEeeDM7N9y1fOSA" source="_SioJfZ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SioJfZ-zEeeDM7N9y1fOSA" name="Merge(CastExpression@a7785a7.operand)" incoming="_SioJeZ-zEeeDM7N9y1fOSA" outgoing="_SioJfJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SioJfp-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SioJf5-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(String).object" incoming="_SioJdp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJgJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJgZ-zEeeDM7N9y1fOSA" value="1"/>
                  </object>
                  <result xmi:id="_SioJgp-zEeeDM7N9y1fOSA" name="ReadIsClassifiedObject(String).result" outgoing="_SioJeJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJg5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJhJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SioJhZ-zEeeDM7N9y1fOSA" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_SioJe5-zEeeDM7N9y1fOSA" outgoing="_SioJdp-zEeeDM7N9y1fOSA _SioJd5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SioJhp-zEeeDM7N9y1fOSA" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_SioJd5-zEeeDM7N9y1fOSA _SioJeJ-zEeeDM7N9y1fOSA" outgoing="_SioJeZ-zEeeDM7N9y1fOSA" decisionInputFlow="_SioJeJ-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SioJh5-zEeeDM7N9y1fOSA" name="CastExpression@a7785a7.inputElement" incoming="_SioIyJ-zEeeDM7N9y1fOSA" outgoing="_SioJe5-zEeeDM7N9y1fOSA" regionAsInput="_SioJdZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SioJiJ-zEeeDM7N9y1fOSA" name="CastExpression@a7785a7.outputElement" incoming="_SioJfJ-zEeeDM7N9y1fOSA" outgoing="_SioJcp-zEeeDM7N9y1fOSA" regionAsOutput="_SioJdZ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_SioJiZ-zEeeDM7N9y1fOSA" name="IfStatement@780fde45" incoming="_SioI6J-zEeeDM7N9y1fOSA" outgoing="_SioI6Z-zEeeDM7N9y1fOSA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJip-zEeeDM7N9y1fOSA" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioJi5-zEeeDM7N9y1fOSA" target="_SioJkp-zEeeDM7N9y1fOSA" source="_SioJjJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJjJ-zEeeDM7N9y1fOSA" name="Operands(EqualityExpression@85cf4f)" outgoing="_SioJi5-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioJjZ-zEeeDM7N9y1fOSA" name="Value(null)">
                  <result xmi:id="_SioJjp-zEeeDM7N9y1fOSA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJj5-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJkJ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_SioJkZ-zEeeDM7N9y1fOSA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJkp-zEeeDM7N9y1fOSA" name="Call(NotEmpty)" incoming="_SioJi5-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SioJk5-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SioI5J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJlJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJlZ-zEeeDM7N9y1fOSA" value="*"/>
                </argument>
                <result xmi:id="_SioJlp-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJl5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJmJ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJmZ-zEeeDM7N9y1fOSA" name="ExpressionStatement@504c2d99">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJmp-zEeeDM7N9y1fOSA" target="_SioJnZ-zEeeDM7N9y1fOSA" source="_SioJwp-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioJm5-zEeeDM7N9y1fOSA" target="_SioJnJ-zEeeDM7N9y1fOSA" source="_SioJoJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJnJ-zEeeDM7N9y1fOSA" name="Call(Write)" incoming="_SioJm5-zEeeDM7N9y1fOSA" behavior="_Siot6Z-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SioJnZ-zEeeDM7N9y1fOSA" name="Call(Write).argument(value)" incoming="_SioJmp-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJnp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJn5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJoJ-zEeeDM7N9y1fOSA" name="Tuple@5bf278a3" outgoing="_SioJm5-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJoZ-zEeeDM7N9y1fOSA" target="_SioJsp-zEeeDM7N9y1fOSA" source="_SioJqJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioJop-zEeeDM7N9y1fOSA" target="_SioJrJ-zEeeDM7N9y1fOSA" source="_SioJp5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJo5-zEeeDM7N9y1fOSA" target="_SioJxp-zEeeDM7N9y1fOSA" source="_SioJrp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJpJ-zEeeDM7N9y1fOSA" target="_SioJyZ-zEeeDM7N9y1fOSA" source="_SioJvJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioJpZ-zEeeDM7N9y1fOSA" target="_SioJwJ-zEeeDM7N9y1fOSA" source="_SioJrJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioJpp-zEeeDM7N9y1fOSA" target="_SioJwJ-zEeeDM7N9y1fOSA" source="_SioJu5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioJp5-zEeeDM7N9y1fOSA" name="Value(&quot;&quot;&quot;)" outgoing="_SioJop-zEeeDM7N9y1fOSA">
                  <result xmi:id="_SioJqJ-zEeeDM7N9y1fOSA" name="Value(&quot;&quot;&quot;).result" outgoing="_SioJoZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJqZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJqp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SioJq5-zEeeDM7N9y1fOSA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJrJ-zEeeDM7N9y1fOSA" name="Node(Call(Concat))" incoming="_SioJop-zEeeDM7N9y1fOSA" outgoing="_SioJpZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJrZ-zEeeDM7N9y1fOSA" target="_SioJrp-zEeeDM7N9y1fOSA" source="_SioJuJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SioJrp-zEeeDM7N9y1fOSA" name="Output(Call(Concat).result(result))" incoming="_SioJrZ-zEeeDM7N9y1fOSA" outgoing="_SioJo5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJr5-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJsJ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJsZ-zEeeDM7N9y1fOSA" name="Call(Concat)">
                    <argument xmi:id="_SioJsp-zEeeDM7N9y1fOSA" name="Call(Concat).argument(x)" incoming="_SioJoZ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJs5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJtJ-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <argument xmi:id="_SioJtZ-zEeeDM7N9y1fOSA" name="Call(Concat).argument(y)" incoming="_SioI5Z-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJtp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJt5-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <result xmi:id="_SioJuJ-zEeeDM7N9y1fOSA" name="Call(Concat).result(result)" outgoing="_SioJrZ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJuZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJup-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioJu5-zEeeDM7N9y1fOSA" name="Value(&quot;&quot;&quot;)" outgoing="_SioJpp-zEeeDM7N9y1fOSA">
                  <result xmi:id="_SioJvJ-zEeeDM7N9y1fOSA" name="Value(&quot;&quot;&quot;).result" outgoing="_SioJpJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJvZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJvp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SioJv5-zEeeDM7N9y1fOSA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJwJ-zEeeDM7N9y1fOSA" name="Node(Call(Concat))" incoming="_SioJpZ-zEeeDM7N9y1fOSA _SioJpp-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJwZ-zEeeDM7N9y1fOSA" target="_SioJwp-zEeeDM7N9y1fOSA" source="_SioJzJ-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SioJwp-zEeeDM7N9y1fOSA" name="Output(Call(Concat).result(result))" incoming="_SioJwZ-zEeeDM7N9y1fOSA" outgoing="_SioJmp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJw5-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJxJ-zEeeDM7N9y1fOSA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJxZ-zEeeDM7N9y1fOSA" name="Call(Concat)">
                    <argument xmi:id="_SioJxp-zEeeDM7N9y1fOSA" name="Call(Concat).argument(x)" incoming="_SioJo5-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJx5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJyJ-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <argument xmi:id="_SioJyZ-zEeeDM7N9y1fOSA" name="Call(Concat).argument(y)" incoming="_SioJpJ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJyp-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJy5-zEeeDM7N9y1fOSA" value="1"/>
                    </argument>
                    <result xmi:id="_SioJzJ-zEeeDM7N9y1fOSA" name="Call(Concat).result(result)" outgoing="_SioJwZ-zEeeDM7N9y1fOSA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJzZ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJzp-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJz5-zEeeDM7N9y1fOSA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ0J-zEeeDM7N9y1fOSA" target="_SioJ1J-zEeeDM7N9y1fOSA" source="_SioJ0Z-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioJ0Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).input" incoming="_SioIyZ-zEeeDM7N9y1fOSA" outgoing="_SioJ0J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ0p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ05-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioJ1J-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).output" incoming="_SioJ0J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ1Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ1p-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJ15-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)@228f8aec)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ2J-zEeeDM7N9y1fOSA" target="_SioJ3J-zEeeDM7N9y1fOSA" source="_SioJ2Z-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioJ2Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)@228f8aec).input" incoming="_SioI5p-zEeeDM7N9y1fOSA" outgoing="_SioJ2J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ2p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ25-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioJ3J-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)@228f8aec).output" incoming="_SioJ2J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ3Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ3p-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJ35-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ4J-zEeeDM7N9y1fOSA" target="_SioJ5J-zEeeDM7N9y1fOSA" source="_SioJ4Z-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioJ4Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).input" incoming="_SioIyp-zEeeDM7N9y1fOSA" outgoing="_SioJ4J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ4p-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ45-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioJ5J-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).output" incoming="_SioJ4J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ5Z-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ5p-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJ55-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ6J-zEeeDM7N9y1fOSA" target="_SioJ7J-zEeeDM7N9y1fOSA" source="_SioJ6Z-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioJ6Z-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).input" incoming="_SioIy5-zEeeDM7N9y1fOSA" outgoing="_SioJ6J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ6p-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ65-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioJ7J-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).output" incoming="_SioJ6J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ7Z-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ7p-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioJ75-zEeeDM7N9y1fOSA" name="Value(true)">
              <result xmi:id="_SioJ8J-zEeeDM7N9y1fOSA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ8Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ8p-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SioJ85-zEeeDM7N9y1fOSA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJ9J-zEeeDM7N9y1fOSA" name="ExpressionStatement@11ae516c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ9Z-zEeeDM7N9y1fOSA" target="_SioJ-J-zEeeDM7N9y1fOSA" source="_SioKKJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SioJ9p-zEeeDM7N9y1fOSA" target="_SioJ95-zEeeDM7N9y1fOSA" source="_SioJ-5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioJ95-zEeeDM7N9y1fOSA" name="Call(Write)" incoming="_SioJ9p-zEeeDM7N9y1fOSA" behavior="_Siot6Z-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SioJ-J-zEeeDM7N9y1fOSA" name="Call(Write).argument(value)" incoming="_SioJ9Z-zEeeDM7N9y1fOSA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioJ-Z-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioJ-p-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioJ-5-zEeeDM7N9y1fOSA" name="Tuple@5e3202ba" outgoing="_SioJ9p-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ_J-zEeeDM7N9y1fOSA" target="_SioKEJ-zEeeDM7N9y1fOSA" source="_SioKCJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioJ_Z-zEeeDM7N9y1fOSA" target="_SioKD5-zEeeDM7N9y1fOSA" source="_SioKB5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioJ_p-zEeeDM7N9y1fOSA" target="_SioKG5-zEeeDM7N9y1fOSA" source="_SioKCJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioJ_5-zEeeDM7N9y1fOSA" target="_SioKJ5-zEeeDM7N9y1fOSA" source="_SioKJp-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKAJ-zEeeDM7N9y1fOSA" target="_SioKJ5-zEeeDM7N9y1fOSA" source="_SioKE5-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioKAZ-zEeeDM7N9y1fOSA" target="_SioKFp-zEeeDM7N9y1fOSA" source="_SioKJ5-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioKAp-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SioKA5-zEeeDM7N9y1fOSA" target="_SioKHJ-zEeeDM7N9y1fOSA" source="_SioKJ5-zEeeDM7N9y1fOSA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SioKBJ-zEeeDM7N9y1fOSA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKBZ-zEeeDM7N9y1fOSA" target="_SioKKJ-zEeeDM7N9y1fOSA" source="_SioKGJ-zEeeDM7N9y1fOSA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKBp-zEeeDM7N9y1fOSA" target="_SioKKJ-zEeeDM7N9y1fOSA" source="_SioKHp-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKB5-zEeeDM7N9y1fOSA" name="Operands(EqualityExpression@360937db)" outgoing="_SioJ_Z-zEeeDM7N9y1fOSA">
                  <node xmi:type="uml:ForkNode" xmi:id="_SioKCJ-zEeeDM7N9y1fOSA" name="Fork()@67121c14" incoming="_SioIzJ-zEeeDM7N9y1fOSA" outgoing="_SioJ_J-zEeeDM7N9y1fOSA _SioJ_p-zEeeDM7N9y1fOSA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKCZ-zEeeDM7N9y1fOSA" name="RightHandSide@35780776"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioKCp-zEeeDM7N9y1fOSA" name="Value(null)">
                    <result xmi:id="_SioKC5-zEeeDM7N9y1fOSA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKDJ-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKDZ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_SioKDp-zEeeDM7N9y1fOSA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioKD5-zEeeDM7N9y1fOSA" name="Call(NotEmpty)" incoming="_SioJ_Z-zEeeDM7N9y1fOSA">
                  <argument xmi:id="_SioKEJ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SioJ_J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKEZ-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKEp-zEeeDM7N9y1fOSA" value="*"/>
                  </argument>
                  <result xmi:id="_SioKE5-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SioKAJ-zEeeDM7N9y1fOSA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKFJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKFZ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKFp-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@556f737a.operand2" incoming="_SioKAZ-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKF5-zEeeDM7N9y1fOSA" target="_SioKGJ-zEeeDM7N9y1fOSA" source="_SioKG5-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SioKGJ-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@556f737a.operand2.result" incoming="_SioKF5-zEeeDM7N9y1fOSA" outgoing="_SioKBZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKGZ-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKGp-zEeeDM7N9y1fOSA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_SioKG5-zEeeDM7N9y1fOSA" name="Merge(Fork()@67121c14)" incoming="_SioJ_p-zEeeDM7N9y1fOSA" outgoing="_SioKF5-zEeeDM7N9y1fOSA"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKHJ-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@556f737a.operand3" incoming="_SioKA5-zEeeDM7N9y1fOSA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKHZ-zEeeDM7N9y1fOSA" target="_SioKHp-zEeeDM7N9y1fOSA" source="_SioKIp-zEeeDM7N9y1fOSA"/>
                  <structuredNodeOutput xmi:id="_SioKHp-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@556f737a.operand3.result" incoming="_SioKHZ-zEeeDM7N9y1fOSA" outgoing="_SioKBp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKH5-zEeeDM7N9y1fOSA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKIJ-zEeeDM7N9y1fOSA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioKIZ-zEeeDM7N9y1fOSA" name="Value(&quot;null&quot;)">
                    <result xmi:id="_SioKIp-zEeeDM7N9y1fOSA" name="Value(&quot;null&quot;).result" outgoing="_SioKHZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKI5-zEeeDM7N9y1fOSA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKJJ-zEeeDM7N9y1fOSA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SioKJZ-zEeeDM7N9y1fOSA" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SioKJp-zEeeDM7N9y1fOSA" name="Initial(NullCoalescingExpression@556f737a)" outgoing="_SioJ_5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SioKJ5-zEeeDM7N9y1fOSA" name="Decision(NullCoalescingExpression@556f737a)" incoming="_SioJ_5-zEeeDM7N9y1fOSA _SioKAJ-zEeeDM7N9y1fOSA" outgoing="_SioKAZ-zEeeDM7N9y1fOSA _SioKA5-zEeeDM7N9y1fOSA" decisionInputFlow="_SioKAJ-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SioKKJ-zEeeDM7N9y1fOSA" name="Merge(NullCoalescingExpression@556f737a.result)" incoming="_SioKBZ-zEeeDM7N9y1fOSA _SioKBp-zEeeDM7N9y1fOSA" outgoing="_SioJ9Z-zEeeDM7N9y1fOSA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKKZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKKp-zEeeDM7N9y1fOSA" target="_SioKLp-zEeeDM7N9y1fOSA" source="_SioKK5-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioKK5-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).input" incoming="_SioIzZ-zEeeDM7N9y1fOSA" outgoing="_SioKKp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKLJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKLZ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioKLp-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).output" incoming="_SioKKp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKL5-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKMJ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKMZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)@228f8aec)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKMp-zEeeDM7N9y1fOSA" target="_SioKNp-zEeeDM7N9y1fOSA" source="_SioKM5-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioKM5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)@228f8aec).input" incoming="_SioI55-zEeeDM7N9y1fOSA" outgoing="_SioKMp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKNJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKNZ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioKNp-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)@228f8aec).output" incoming="_SioKMp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKN5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKOJ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKOZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKOp-zEeeDM7N9y1fOSA" target="_SioKPp-zEeeDM7N9y1fOSA" source="_SioKO5-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioKO5-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).input" incoming="_SioIzp-zEeeDM7N9y1fOSA" outgoing="_SioKOp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKPJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKPZ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioKPp-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).output" incoming="_SioKOp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKP5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKQJ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKQZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKQp-zEeeDM7N9y1fOSA" target="_SioKRp-zEeeDM7N9y1fOSA" source="_SioKQ5-zEeeDM7N9y1fOSA"/>
              <structuredNodeInput xmi:id="_SioKQ5-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).input" incoming="_SioIz5-zEeeDM7N9y1fOSA" outgoing="_SioKQp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKRJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKRZ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SioKRp-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).output" incoming="_SioKQp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKR5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKSJ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_SioKSZ-zEeeDM7N9y1fOSA" body="_SioJmZ-zEeeDM7N9y1fOSA _SioJz5-zEeeDM7N9y1fOSA _SioJ15-zEeeDM7N9y1fOSA _SioJ35-zEeeDM7N9y1fOSA _SioJ55-zEeeDM7N9y1fOSA" bodyOutput="_SioJ1J-zEeeDM7N9y1fOSA _SioJ3J-zEeeDM7N9y1fOSA _SioJ5J-zEeeDM7N9y1fOSA _SioJ7J-zEeeDM7N9y1fOSA" decider="_SioJlp-zEeeDM7N9y1fOSA" successorClause="_SioKSp-zEeeDM7N9y1fOSA" test="_SioJip-zEeeDM7N9y1fOSA"/>
            <clause xmi:id="_SioKSp-zEeeDM7N9y1fOSA" body="_SioJ9J-zEeeDM7N9y1fOSA _SioKKZ-zEeeDM7N9y1fOSA _SioKMZ-zEeeDM7N9y1fOSA _SioKOZ-zEeeDM7N9y1fOSA _SioKQZ-zEeeDM7N9y1fOSA" bodyOutput="_SioKLp-zEeeDM7N9y1fOSA _SioKNp-zEeeDM7N9y1fOSA _SioKPp-zEeeDM7N9y1fOSA _SioKRp-zEeeDM7N9y1fOSA" decider="_SioJ8J-zEeeDM7N9y1fOSA" predecessorClause="_SioKSZ-zEeeDM7N9y1fOSA" test="_SioJ75-zEeeDM7N9y1fOSA"/>
            <result xmi:id="_SioKS5-zEeeDM7N9y1fOSA" name="IfStatement@780fde45.result(label)" outgoing="_SioI4J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKTJ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKTZ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <result xmi:id="_SioKTp-zEeeDM7N9y1fOSA" name="IfStatement@780fde45.result(s)" outgoing="_SioI4Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKT5-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKUJ-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <result xmi:id="_SioKUZ-zEeeDM7N9y1fOSA" name="IfStatement@780fde45.result(value2)" outgoing="_SioI4p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKUp-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKU5-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <result xmi:id="_SioKVJ-zEeeDM7N9y1fOSA" name="IfStatement@780fde45.result(value1)" outgoing="_SioI45-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKVZ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKVp-zEeeDM7N9y1fOSA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SioKV5-zEeeDM7N9y1fOSA" name="Fork(label)" incoming="_SioI4J-zEeeDM7N9y1fOSA" outgoing="_SioI6p-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SioKWJ-zEeeDM7N9y1fOSA" name="Fork(s)" incoming="_SioI4Z-zEeeDM7N9y1fOSA" outgoing="_SioI65-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SioKWZ-zEeeDM7N9y1fOSA" name="Fork(value2)" incoming="_SioI4p-zEeeDM7N9y1fOSA" outgoing="_SioI7J-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SioKWp-zEeeDM7N9y1fOSA" name="Fork(value1)" incoming="_SioI45-zEeeDM7N9y1fOSA" outgoing="_SioI7Z-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKW5-zEeeDM7N9y1fOSA" name="ExpressionStatement@651c6c59" incoming="_SioI6Z-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKXJ-zEeeDM7N9y1fOSA" target="_SioKX5-zEeeDM7N9y1fOSA" source="_SioKZ5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SioKXZ-zEeeDM7N9y1fOSA" target="_SioKXp-zEeeDM7N9y1fOSA" source="_SioKZZ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SioKXp-zEeeDM7N9y1fOSA" name="Call(WriteLine)" incoming="_SioKXZ-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SioKX5-zEeeDM7N9y1fOSA" name="Call(WriteLine).argument(value)" incoming="_SioKXJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKYJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKYZ-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SioKYp-zEeeDM7N9y1fOSA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKY5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKZJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKZZ-zEeeDM7N9y1fOSA" name="Tuple@ad2cfc4" outgoing="_SioKXZ-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioKZp-zEeeDM7N9y1fOSA" name="Value(&quot;&quot;)">
                <result xmi:id="_SioKZ5-zEeeDM7N9y1fOSA" name="Value(&quot;&quot;).result" outgoing="_SioKXJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKaJ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKaZ-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SioKap-zEeeDM7N9y1fOSA" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKa5-zEeeDM7N9y1fOSA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKbJ-zEeeDM7N9y1fOSA" target="_SioKcJ-zEeeDM7N9y1fOSA" source="_SioKbZ-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKbZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).input" incoming="_SioI6p-zEeeDM7N9y1fOSA" outgoing="_SioKbJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKbp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKb5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKcJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).output" incoming="_SioKbJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKcZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKcp-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKc5-zEeeDM7N9y1fOSA" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKdJ-zEeeDM7N9y1fOSA" target="_SioKeJ-zEeeDM7N9y1fOSA" source="_SioKdZ-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKdZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)).input" incoming="_SioI65-zEeeDM7N9y1fOSA" outgoing="_SioKdJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKdp-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKd5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKeJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(s)).output" incoming="_SioKdJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKeZ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKep-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKe5-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKfJ-zEeeDM7N9y1fOSA" target="_SioKgJ-zEeeDM7N9y1fOSA" source="_SioKfZ-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKfZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).input" incoming="_SioI7J-zEeeDM7N9y1fOSA" outgoing="_SioKfJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKfp-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKf5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKgJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).output" incoming="_SioKfJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKgZ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKgp-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKg5-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKhJ-zEeeDM7N9y1fOSA" target="_SioKiJ-zEeeDM7N9y1fOSA" source="_SioKhZ-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKhZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).input" incoming="_SioI7Z-zEeeDM7N9y1fOSA" outgoing="_SioKhJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKhp-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKh5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKiJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).output" incoming="_SioKhJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKiZ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKip-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioKi5-zEeeDM7N9y1fOSA" name="Value(true)">
            <result xmi:id="_SioKjJ-zEeeDM7N9y1fOSA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKjZ-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKjp-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SioKj5-zEeeDM7N9y1fOSA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKkJ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKkZ-zEeeDM7N9y1fOSA" target="_SioKlZ-zEeeDM7N9y1fOSA" source="_SioKkp-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKkp-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).input" incoming="_SioI0J-zEeeDM7N9y1fOSA" outgoing="_SioKkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKk5-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKlJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKlZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(label)).output" incoming="_SioKkZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKlp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKl5-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SioKmJ-zEeeDM7N9y1fOSA" name="Value(null)">
            <result xmi:id="_SioKmZ-zEeeDM7N9y1fOSA" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKmp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKm5-zEeeDM7N9y1fOSA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_SioKnJ-zEeeDM7N9y1fOSA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKnZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKnp-zEeeDM7N9y1fOSA" target="_SioKop-zEeeDM7N9y1fOSA" source="_SioKn5-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKn5-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).input" incoming="_SioI0Z-zEeeDM7N9y1fOSA" outgoing="_SioKnp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKoJ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKoZ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKop-zEeeDM7N9y1fOSA" name="Passthru(Fork(value2)).output" incoming="_SioKnp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKo5-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKpJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SioKpZ-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SioKpp-zEeeDM7N9y1fOSA" target="_SioKqp-zEeeDM7N9y1fOSA" source="_SioKp5-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_SioKp5-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).input" incoming="_SioI0p-zEeeDM7N9y1fOSA" outgoing="_SioKpp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKqJ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKqZ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_SioKqp-zEeeDM7N9y1fOSA" name="Passthru(Fork(value1)).output" incoming="_SioKpp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKq5-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKrJ-zEeeDM7N9y1fOSA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_SioKrZ-zEeeDM7N9y1fOSA" body="_SioJO5-zEeeDM7N9y1fOSA _SioJcZ-zEeeDM7N9y1fOSA _SioJiZ-zEeeDM7N9y1fOSA _SioKW5-zEeeDM7N9y1fOSA _SioKa5-zEeeDM7N9y1fOSA _SioKc5-zEeeDM7N9y1fOSA _SioKe5-zEeeDM7N9y1fOSA _SioKg5-zEeeDM7N9y1fOSA" bodyOutput="_SioKcJ-zEeeDM7N9y1fOSA _SioKeJ-zEeeDM7N9y1fOSA _SioKgJ-zEeeDM7N9y1fOSA _SioKiJ-zEeeDM7N9y1fOSA" decider="_SioJOJ-zEeeDM7N9y1fOSA" successorClause="_SioKrp-zEeeDM7N9y1fOSA" test="_SioI7p-zEeeDM7N9y1fOSA"/>
          <clause xmi:id="_SioKrp-zEeeDM7N9y1fOSA" body="_SioKkJ-zEeeDM7N9y1fOSA _SioKmJ-zEeeDM7N9y1fOSA _SioKnZ-zEeeDM7N9y1fOSA _SioKpZ-zEeeDM7N9y1fOSA" bodyOutput="_SioKlZ-zEeeDM7N9y1fOSA _SioKmZ-zEeeDM7N9y1fOSA _SioKop-zEeeDM7N9y1fOSA _SioKqp-zEeeDM7N9y1fOSA" decider="_SioKjJ-zEeeDM7N9y1fOSA" predecessorClause="_SioKrZ-zEeeDM7N9y1fOSA" test="_SioKi5-zEeeDM7N9y1fOSA"/>
          <result xmi:id="_SioKr5-zEeeDM7N9y1fOSA" name="IfStatement@17f551f3.result(label)" outgoing="_SioI2p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKsJ-zEeeDM7N9y1fOSA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKsZ-zEeeDM7N9y1fOSA" value="1"/>
          </result>
          <result xmi:id="_SioKsp-zEeeDM7N9y1fOSA" name="IfStatement@17f551f3.result(s)" outgoing="_SioI25-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKs5-zEeeDM7N9y1fOSA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKtJ-zEeeDM7N9y1fOSA" value="1"/>
          </result>
          <result xmi:id="_SioKtZ-zEeeDM7N9y1fOSA" name="IfStatement@17f551f3.result(value2)" outgoing="_SioI3J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKtp-zEeeDM7N9y1fOSA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKt5-zEeeDM7N9y1fOSA" value="1"/>
          </result>
          <result xmi:id="_SioKuJ-zEeeDM7N9y1fOSA" name="IfStatement@17f551f3.result(value1)" outgoing="_SioI3Z-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SioKuZ-zEeeDM7N9y1fOSA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SioKup-zEeeDM7N9y1fOSA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_SioKu5-zEeeDM7N9y1fOSA" name="Fork(label)" incoming="_SioI2p-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SioKvJ-zEeeDM7N9y1fOSA" name="Fork(s)" incoming="_SioI25-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SioKvZ-zEeeDM7N9y1fOSA" name="Fork(value2)" incoming="_SioI3J-zEeeDM7N9y1fOSA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_SioKvp-zEeeDM7N9y1fOSA" name="Fork(value1)" incoming="_SioI3Z-zEeeDM7N9y1fOSA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioI05-zEeeDM7N9y1fOSA" name="Input(label)" outgoing="_SioIwp-zEeeDM7N9y1fOSA" parameter="_SioIuZ-zEeeDM7N9y1fOSA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_SioI1J-zEeeDM7N9y1fOSA" name="Fork(label)" incoming="_SioIwp-zEeeDM7N9y1fOSA" outgoing="_SioIx5-zEeeDM7N9y1fOSA _SioIyZ-zEeeDM7N9y1fOSA _SioIzZ-zEeeDM7N9y1fOSA _SioI0J-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioI1Z-zEeeDM7N9y1fOSA" name="Input(value1)" outgoing="_SioIw5-zEeeDM7N9y1fOSA" parameter="_SioIvJ-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SioI1p-zEeeDM7N9y1fOSA" name="Fork(value1)" incoming="_SioIw5-zEeeDM7N9y1fOSA" outgoing="_SioIxZ-zEeeDM7N9y1fOSA _SioIy5-zEeeDM7N9y1fOSA _SioIz5-zEeeDM7N9y1fOSA _SioI0p-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SioI15-zEeeDM7N9y1fOSA" name="Input(value2)" outgoing="_SioIxJ-zEeeDM7N9y1fOSA" parameter="_SioIv5-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SioI2J-zEeeDM7N9y1fOSA" name="Fork(value2)" incoming="_SioIxJ-zEeeDM7N9y1fOSA" outgoing="_SioIxp-zEeeDM7N9y1fOSA _SioIyJ-zEeeDM7N9y1fOSA _SioIyp-zEeeDM7N9y1fOSA _SioIzJ-zEeeDM7N9y1fOSA _SioIzp-zEeeDM7N9y1fOSA _SioI0Z-zEeeDM7N9y1fOSA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SioKv5-zEeeDM7N9y1fOSA" name="AssertFalse" visibility="public" node="_Siotn5-zEeeDM7N9y1fOSA _SiotoJ-zEeeDM7N9y1fOSA _SiotoZ-zEeeDM7N9y1fOSA _Siotop-zEeeDM7N9y1fOSA _Sioto5-zEeeDM7N9y1fOSA" group="_Sioto5-zEeeDM7N9y1fOSA">
      <elementImport xmi:id="_SioKwJ-zEeeDM7N9y1fOSA" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_SiotkJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SiotkZ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Siotkp-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Siotk5-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SiotlJ-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SiotlZ-zEeeDM7N9y1fOSA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siotlp-zEeeDM7N9y1fOSA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siotl5-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SiotmJ-zEeeDM7N9y1fOSA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiotmZ-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siotmp-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Siotm5-zEeeDM7N9y1fOSA" target="_SiotoJ-zEeeDM7N9y1fOSA" source="_Siotn5-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SiotnJ-zEeeDM7N9y1fOSA" target="_Siotop-zEeeDM7N9y1fOSA" source="_SiotoZ-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SiotnZ-zEeeDM7N9y1fOSA" target="_SiotyZ-zEeeDM7N9y1fOSA" source="_SiotoJ-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Siotnp-zEeeDM7N9y1fOSA" target="_Siot3p-zEeeDM7N9y1fOSA" source="_Siotop-zEeeDM7N9y1fOSA"/>
      <structuredNode xmi:id="_Sioto5-zEeeDM7N9y1fOSA" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiotpJ-zEeeDM7N9y1fOSA" name="ExpressionStatement@40575852">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SiotpZ-zEeeDM7N9y1fOSA" target="_SiotqZ-zEeeDM7N9y1fOSA" source="_Siotwp-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siotpp-zEeeDM7N9y1fOSA" target="_SiotrJ-zEeeDM7N9y1fOSA" source="_Siot55-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Siotp5-zEeeDM7N9y1fOSA" target="_SiotqJ-zEeeDM7N9y1fOSA" source="_Siotr5-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiotqJ-zEeeDM7N9y1fOSA" name="Call(AssertTrue)" incoming="_Siotp5-zEeeDM7N9y1fOSA" behavior="_SioIG5-zEeeDM7N9y1fOSA">
            <argument xmi:id="_SiotqZ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(label)" incoming="_SiotpZ-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siotqp-zEeeDM7N9y1fOSA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siotq5-zEeeDM7N9y1fOSA" value="1"/>
            </argument>
            <argument xmi:id="_SiotrJ-zEeeDM7N9y1fOSA" name="Call(AssertTrue).argument(condition)" incoming="_Siotpp-zEeeDM7N9y1fOSA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiotrZ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siotrp-zEeeDM7N9y1fOSA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siotr5-zEeeDM7N9y1fOSA" name="Tuple@7037c711" outgoing="_Siotp5-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiotsJ-zEeeDM7N9y1fOSA" target="_Siotxp-zEeeDM7N9y1fOSA" source="_SiotvJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SiotsZ-zEeeDM7N9y1fOSA" target="_SiotwJ-zEeeDM7N9y1fOSA" source="_Siotu5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siotsp-zEeeDM7N9y1fOSA" target="_Siot1Z-zEeeDM7N9y1fOSA" source="_Siot3p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siots5-zEeeDM7N9y1fOSA" target="_Siot4J-zEeeDM7N9y1fOSA" source="_Siot3p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiottJ-zEeeDM7N9y1fOSA" target="_Siot5p-zEeeDM7N9y1fOSA" source="_Siot45-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiottZ-zEeeDM7N9y1fOSA" target="_Siot55-zEeeDM7N9y1fOSA" source="_Siot2J-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siottp-zEeeDM7N9y1fOSA" target="_Siot6J-zEeeDM7N9y1fOSA" source="_Siot5p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siott5-zEeeDM7N9y1fOSA" target="_Siot6J-zEeeDM7N9y1fOSA" source="_Siot5p-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiotuJ-zEeeDM7N9y1fOSA" target="_Siot55-zEeeDM7N9y1fOSA" source="_Siot6J-zEeeDM7N9y1fOSA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SiotuZ-zEeeDM7N9y1fOSA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siotup-zEeeDM7N9y1fOSA" target="_Siot25-zEeeDM7N9y1fOSA" source="_Siot0J-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Siotu5-zEeeDM7N9y1fOSA" name="Value(&quot;! &quot;)" outgoing="_SiotsZ-zEeeDM7N9y1fOSA">
              <result xmi:id="_SiotvJ-zEeeDM7N9y1fOSA" name="Value(&quot;! &quot;).result" outgoing="_SiotsJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiotvZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siotvp-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_Siotv5-zEeeDM7N9y1fOSA" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiotwJ-zEeeDM7N9y1fOSA" name="Node(Call(Concat))" incoming="_SiotsZ-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiotwZ-zEeeDM7N9y1fOSA" target="_Siotwp-zEeeDM7N9y1fOSA" source="_SiotzJ-zEeeDM7N9y1fOSA"/>
              <structuredNodeOutput xmi:id="_Siotwp-zEeeDM7N9y1fOSA" name="Output(Call(Concat).result(result))" incoming="_SiotwZ-zEeeDM7N9y1fOSA" outgoing="_SiotpZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siotw5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiotxJ-zEeeDM7N9y1fOSA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiotxZ-zEeeDM7N9y1fOSA" name="Call(Concat)">
                <argument xmi:id="_Siotxp-zEeeDM7N9y1fOSA" name="Call(Concat).argument(x)" incoming="_SiotsJ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siotx5-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiotyJ-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <argument xmi:id="_SiotyZ-zEeeDM7N9y1fOSA" name="Call(Concat).argument(y)" incoming="_SiotnZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siotyp-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sioty5-zEeeDM7N9y1fOSA" value="1"/>
                </argument>
                <result xmi:id="_SiotzJ-zEeeDM7N9y1fOSA" name="Call(Concat).result(result)" outgoing="_SiotwZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiotzZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siotzp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Siotz5-zEeeDM7N9y1fOSA" name="Value(false)">
              <result xmi:id="_Siot0J-zEeeDM7N9y1fOSA" name="Value(false).result" outgoing="_Siotup-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot0Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot0p-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_Siot05-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Siot1J-zEeeDM7N9y1fOSA" name="Test(==)">
              <first xmi:id="_Siot1Z-zEeeDM7N9y1fOSA" name="Test(==).first" incoming="_Siotsp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot1p-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot15-zEeeDM7N9y1fOSA" value="1"/>
              </first>
              <result xmi:id="_Siot2J-zEeeDM7N9y1fOSA" name="Test(==).result" outgoing="_SiottZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot2Z-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot2p-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <second xmi:id="_Siot25-zEeeDM7N9y1fOSA" name="Test(==).second" incoming="_Siotup-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot3J-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot3Z-zEeeDM7N9y1fOSA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Siot3p-zEeeDM7N9y1fOSA" name="Fork(Fork(condition))" incoming="_Siotnp-zEeeDM7N9y1fOSA" outgoing="_Siotsp-zEeeDM7N9y1fOSA _Siots5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siot35-zEeeDM7N9y1fOSA" name="Call(NotEmpty)">
              <argument xmi:id="_Siot4J-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_Siots5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot4Z-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot4p-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <result xmi:id="_Siot45-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SiottJ-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot5J-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot5Z-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Siot5p-zEeeDM7N9y1fOSA" name="Fork(Call(NotEmpty).result())" incoming="_SiottJ-zEeeDM7N9y1fOSA" outgoing="_Siottp-zEeeDM7N9y1fOSA _Siott5-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_Siot55-zEeeDM7N9y1fOSA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SiottZ-zEeeDM7N9y1fOSA _SiotuJ-zEeeDM7N9y1fOSA" outgoing="_Siotpp-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_Siot6J-zEeeDM7N9y1fOSA" name="Decision(Call(NotEmpty).result())" incoming="_Siottp-zEeeDM7N9y1fOSA _Siott5-zEeeDM7N9y1fOSA" outgoing="_SiotuJ-zEeeDM7N9y1fOSA" decisionInputFlow="_Siott5-zEeeDM7N9y1fOSA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Siotn5-zEeeDM7N9y1fOSA" name="Input(label)" outgoing="_Siotm5-zEeeDM7N9y1fOSA" parameter="_SiotlZ-zEeeDM7N9y1fOSA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_SiotoJ-zEeeDM7N9y1fOSA" name="Fork(label)" incoming="_Siotm5-zEeeDM7N9y1fOSA" outgoing="_SiotnZ-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SiotoZ-zEeeDM7N9y1fOSA" name="Input(condition)" outgoing="_SiotnJ-zEeeDM7N9y1fOSA" parameter="_SiotmJ-zEeeDM7N9y1fOSA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_Siotop-zEeeDM7N9y1fOSA" name="Fork(condition)" incoming="_SiotnJ-zEeeDM7N9y1fOSA" outgoing="_Siotnp-zEeeDM7N9y1fOSA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Siot6Z-zEeeDM7N9y1fOSA" name="Write" visibility="public" node="_Siot9J-zEeeDM7N9y1fOSA _Siot9Z-zEeeDM7N9y1fOSA _Siot9p-zEeeDM7N9y1fOSA" group="_Siot9p-zEeeDM7N9y1fOSA">
      <packageImport xmi:id="_Siot6p-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Siot65-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Siot7J-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Siot7Z-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_Siot7p-zEeeDM7N9y1fOSA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Siot75-zEeeDM7N9y1fOSA" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siot8J-zEeeDM7N9y1fOSA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siot8Z-zEeeDM7N9y1fOSA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Siot8p-zEeeDM7N9y1fOSA" target="_Siot9Z-zEeeDM7N9y1fOSA" source="_Siot9J-zEeeDM7N9y1fOSA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Siot85-zEeeDM7N9y1fOSA" target="_Siot_5-zEeeDM7N9y1fOSA" source="_Siot9Z-zEeeDM7N9y1fOSA"/>
      <structuredNode xmi:id="_Siot9p-zEeeDM7N9y1fOSA" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siot95-zEeeDM7N9y1fOSA" name="ExpressionStatement@55fe3fe3">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siot-J-zEeeDM7N9y1fOSA" target="_SiouOp-zEeeDM7N9y1fOSA" source="_SiouR5-zEeeDM7N9y1fOSA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Siot-Z-zEeeDM7N9y1fOSA" target="_Siot-p-zEeeDM7N9y1fOSA" source="_SiouO5-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_Siot-p-zEeeDM7N9y1fOSA" name="Collect(Call(write))" incoming="_Siot-Z-zEeeDM7N9y1fOSA" mode="parallel" inputElement="_SiouOp-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siot-5-zEeeDM7N9y1fOSA" target="_SiouA5-zEeeDM7N9y1fOSA" source="_SiouOZ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siot_J-zEeeDM7N9y1fOSA" target="_SiouGZ-zEeeDM7N9y1fOSA" source="_Siot_5-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Siot_Z-zEeeDM7N9y1fOSA" target="_SiouAp-zEeeDM7N9y1fOSA" source="_SiouDJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siot_p-zEeeDM7N9y1fOSA" target="_SiouCZ-zEeeDM7N9y1fOSA" source="_SiouOp-zEeeDM7N9y1fOSA"/>
            <structuredNodeInput xmi:id="_Siot_5-zEeeDM7N9y1fOSA" name="Collect(Call(write)).input(Fork(value))" incoming="_Siot85-zEeeDM7N9y1fOSA" outgoing="_Siot_J-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouAJ-zEeeDM7N9y1fOSA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouAZ-zEeeDM7N9y1fOSA" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SiouAp-zEeeDM7N9y1fOSA" name="Call(write)" incoming="_Siot_Z-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SiouA5-zEeeDM7N9y1fOSA" name="Call(write).argument(value)" incoming="_Siot-5-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouBJ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouBZ-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SiouBp-zEeeDM7N9y1fOSA" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouB5-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouCJ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SiouCZ-zEeeDM7N9y1fOSA" name="Call(write).target" incoming="_Siot_p-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouCp-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouC5-zEeeDM7N9y1fOSA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouDJ-zEeeDM7N9y1fOSA" name="Tuple@63b7d95e" outgoing="_Siot_Z-zEeeDM7N9y1fOSA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouDZ-zEeeDM7N9y1fOSA" target="_SiouIZ-zEeeDM7N9y1fOSA" source="_SiouGZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SiouDp-zEeeDM7N9y1fOSA" target="_SiouIJ-zEeeDM7N9y1fOSA" source="_SiouGJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouD5-zEeeDM7N9y1fOSA" target="_SiouLJ-zEeeDM7N9y1fOSA" source="_SiouGZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SiouEJ-zEeeDM7N9y1fOSA" target="_SiouOJ-zEeeDM7N9y1fOSA" source="_SiouN5-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouEZ-zEeeDM7N9y1fOSA" target="_SiouOJ-zEeeDM7N9y1fOSA" source="_SiouJJ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SiouEp-zEeeDM7N9y1fOSA" target="_SiouJ5-zEeeDM7N9y1fOSA" source="_SiouOJ-zEeeDM7N9y1fOSA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SiouE5-zEeeDM7N9y1fOSA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SiouFJ-zEeeDM7N9y1fOSA" target="_SiouLZ-zEeeDM7N9y1fOSA" source="_SiouOJ-zEeeDM7N9y1fOSA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SiouFZ-zEeeDM7N9y1fOSA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouFp-zEeeDM7N9y1fOSA" target="_SiouOZ-zEeeDM7N9y1fOSA" source="_SiouKZ-zEeeDM7N9y1fOSA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouF5-zEeeDM7N9y1fOSA" target="_SiouOZ-zEeeDM7N9y1fOSA" source="_SiouL5-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouGJ-zEeeDM7N9y1fOSA" name="Operands(EqualityExpression@276c5f00)" outgoing="_SiouDp-zEeeDM7N9y1fOSA">
                <node xmi:type="uml:ForkNode" xmi:id="_SiouGZ-zEeeDM7N9y1fOSA" name="Fork()@2514d7fe" incoming="_Siot_J-zEeeDM7N9y1fOSA" outgoing="_SiouDZ-zEeeDM7N9y1fOSA _SiouD5-zEeeDM7N9y1fOSA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouGp-zEeeDM7N9y1fOSA" name="RightHandSide@4babfaed"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiouG5-zEeeDM7N9y1fOSA" name="Value(null)">
                  <result xmi:id="_SiouHJ-zEeeDM7N9y1fOSA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouHZ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouHp-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_SiouH5-zEeeDM7N9y1fOSA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiouIJ-zEeeDM7N9y1fOSA" name="Call(NotEmpty)" incoming="_SiouDp-zEeeDM7N9y1fOSA">
                <argument xmi:id="_SiouIZ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).argument(seq)" incoming="_SiouDZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouIp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouI5-zEeeDM7N9y1fOSA" value="*"/>
                </argument>
                <result xmi:id="_SiouJJ-zEeeDM7N9y1fOSA" name="Call(NotEmpty).result()" outgoing="_SiouEZ-zEeeDM7N9y1fOSA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouJZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouJp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouJ5-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@412f19c1.operand2" incoming="_SiouEp-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouKJ-zEeeDM7N9y1fOSA" target="_SiouKZ-zEeeDM7N9y1fOSA" source="_SiouLJ-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_SiouKZ-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@412f19c1.operand2.result" incoming="_SiouKJ-zEeeDM7N9y1fOSA" outgoing="_SiouFp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouKp-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouK5-zEeeDM7N9y1fOSA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_SiouLJ-zEeeDM7N9y1fOSA" name="Merge(Fork()@2514d7fe)" incoming="_SiouD5-zEeeDM7N9y1fOSA" outgoing="_SiouKJ-zEeeDM7N9y1fOSA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouLZ-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@412f19c1.operand3" incoming="_SiouFJ-zEeeDM7N9y1fOSA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouLp-zEeeDM7N9y1fOSA" target="_SiouL5-zEeeDM7N9y1fOSA" source="_SiouM5-zEeeDM7N9y1fOSA"/>
                <structuredNodeOutput xmi:id="_SiouL5-zEeeDM7N9y1fOSA" name="NullCoalescingExpression@412f19c1.operand3.result" incoming="_SiouLp-zEeeDM7N9y1fOSA" outgoing="_SiouF5-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouMJ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouMZ-zEeeDM7N9y1fOSA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiouMp-zEeeDM7N9y1fOSA" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SiouM5-zEeeDM7N9y1fOSA" name="Value(&quot;null&quot;).result" outgoing="_SiouLp-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouNJ-zEeeDM7N9y1fOSA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouNZ-zEeeDM7N9y1fOSA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SiouNp-zEeeDM7N9y1fOSA" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SiouN5-zEeeDM7N9y1fOSA" name="Initial(NullCoalescingExpression@412f19c1)" outgoing="_SiouEJ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SiouOJ-zEeeDM7N9y1fOSA" name="Decision(NullCoalescingExpression@412f19c1)" incoming="_SiouEJ-zEeeDM7N9y1fOSA _SiouEZ-zEeeDM7N9y1fOSA" outgoing="_SiouEp-zEeeDM7N9y1fOSA _SiouFJ-zEeeDM7N9y1fOSA" decisionInputFlow="_SiouEZ-zEeeDM7N9y1fOSA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SiouOZ-zEeeDM7N9y1fOSA" name="Merge(NullCoalescingExpression@412f19c1.result)" incoming="_SiouFp-zEeeDM7N9y1fOSA _SiouF5-zEeeDM7N9y1fOSA" outgoing="_Siot-5-zEeeDM7N9y1fOSA"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SiouOp-zEeeDM7N9y1fOSA" name="Collect(Call(write)).inputElement" incoming="_Siot-J-zEeeDM7N9y1fOSA" outgoing="_Siot_p-zEeeDM7N9y1fOSA" regionAsInput="_Siot-p-zEeeDM7N9y1fOSA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouO5-zEeeDM7N9y1fOSA" name="Feature(Call(At).result())" outgoing="_Siot-Z-zEeeDM7N9y1fOSA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouPJ-zEeeDM7N9y1fOSA" target="_SiouQZ-zEeeDM7N9y1fOSA" source="_SiouTJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouPZ-zEeeDM7N9y1fOSA" target="_SiouVJ-zEeeDM7N9y1fOSA" source="_SiouUJ-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SiouPp-zEeeDM7N9y1fOSA" target="_SiouQJ-zEeeDM7N9y1fOSA" source="_SiouSp-zEeeDM7N9y1fOSA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiouP5-zEeeDM7N9y1fOSA" target="_SiouRJ-zEeeDM7N9y1fOSA" source="_SiouVJ-zEeeDM7N9y1fOSA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiouQJ-zEeeDM7N9y1fOSA" name="Call(At)" incoming="_SiouPp-zEeeDM7N9y1fOSA">
              <argument xmi:id="_SiouQZ-zEeeDM7N9y1fOSA" name="Call(At).argument(seq)" incoming="_SiouPJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouQp-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouQ5-zEeeDM7N9y1fOSA" value="*"/>
              </argument>
              <argument xmi:id="_SiouRJ-zEeeDM7N9y1fOSA" name="Call(At).argument(index)" incoming="_SiouP5-zEeeDM7N9y1fOSA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouRZ-zEeeDM7N9y1fOSA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouRp-zEeeDM7N9y1fOSA" value="1"/>
              </argument>
              <result xmi:id="_SiouR5-zEeeDM7N9y1fOSA" name="Call(At).result()" outgoing="_Siot-J-zEeeDM7N9y1fOSA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouSJ-zEeeDM7N9y1fOSA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouSZ-zEeeDM7N9y1fOSA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiouSp-zEeeDM7N9y1fOSA" name="Tuple@186ee1a3" outgoing="_SiouPp-zEeeDM7N9y1fOSA">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SiouS5-zEeeDM7N9y1fOSA" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SiouTJ-zEeeDM7N9y1fOSA" name="ReadExtent(StandardOutputChannel).result" outgoing="_SiouPJ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouTZ-zEeeDM7N9y1fOSA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouTp-zEeeDM7N9y1fOSA" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiouT5-zEeeDM7N9y1fOSA" name="Value(1)">
                <result xmi:id="_SiouUJ-zEeeDM7N9y1fOSA" name="Value(1).result" outgoing="_SiouPZ-zEeeDM7N9y1fOSA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiouUZ-zEeeDM7N9y1fOSA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiouUp-zEeeDM7N9y1fOSA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SiouU5-zEeeDM7N9y1fOSA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SiouVJ-zEeeDM7N9y1fOSA" name="Fork(Call(At).argument(index))" incoming="_SiouPZ-zEeeDM7N9y1fOSA" outgoing="_SiouP5-zEeeDM7N9y1fOSA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Siot9J-zEeeDM7N9y1fOSA" name="Input(value)" outgoing="_Siot8p-zEeeDM7N9y1fOSA" parameter="_Siot75-zEeeDM7N9y1fOSA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Siot9Z-zEeeDM7N9y1fOSA" name="Fork(value)" incoming="_Siot8p-zEeeDM7N9y1fOSA" outgoing="_Siot85-zEeeDM7N9y1fOSA"/>
    </packagedElement>
    <profileApplication xmi:id="_SiouVZ-zEeeDM7N9y1fOSA">
      <eAnnotations xmi:id="_SiouVp-zEeeDM7N9y1fOSA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_SiouV5-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sim5U5-zEeeDM7N9y1fOSA"/>
  <l2:Create xmi:id="_SiouWJ-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sinkk5-zEeeDM7N9y1fOSA"/>
  <l2:Destroy xmi:id="_SiouWZ-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sing_Z-zEeeDM7N9y1fOSA"/>
  <l2:Create xmi:id="_SiouWp-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sim56p-zEeeDM7N9y1fOSA"/>
  <l2:Create xmi:id="_SiouW5-zEeeDM7N9y1fOSA" base_BehavioralFeature="_SioHgJ-zEeeDM7N9y1fOSA"/>
  <l2:Create xmi:id="_SiouXJ-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sing9p-zEeeDM7N9y1fOSA"/>
  <l2:Create xmi:id="_SiouXZ-zEeeDM7N9y1fOSA" base_BehavioralFeature="_SioIFJ-zEeeDM7N9y1fOSA"/>
  <l2:Destroy xmi:id="_SiouXp-zEeeDM7N9y1fOSA" base_BehavioralFeature="_SioIGJ-zEeeDM7N9y1fOSA"/>
  <l2:Destroy xmi:id="_SiouX5-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sim5Xp-zEeeDM7N9y1fOSA"/>
  <l2:Destroy xmi:id="_SiouYJ-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sinknp-zEeeDM7N9y1fOSA"/>
  <l2:Destroy xmi:id="_SiouYZ-zEeeDM7N9y1fOSA" base_BehavioralFeature="_SioHiJ-zEeeDM7N9y1fOSA"/>
  <l2:Create xmi:id="_SiouYp-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sim5V5-zEeeDM7N9y1fOSA"/>
  <l2:Destroy xmi:id="_SiouY5-zEeeDM7N9y1fOSA" base_BehavioralFeature="_Sim57p-zEeeDM7N9y1fOSA"/>
</xmi:XMI>

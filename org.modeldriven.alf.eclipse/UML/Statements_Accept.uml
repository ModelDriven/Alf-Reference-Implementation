<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_ViR4YPhYEeaxkoRKVpmNyQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_ViR4YfhYEeaxkoRKVpmNyQ" name="Statements_Accept" visibility="public">
      <packageImport xmi:id="_ViR4YvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ViR4Y_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ViR4ZPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ViR4ZfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ViR4ZvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_ViR4Z_hYEeaxkoRKVpmNyQ" general="_ViTviPhYEeaxkoRKVpmNyQ"/>
      <ownedAttribute xmi:id="_ViR4aPhYEeaxkoRKVpmNyQ" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4afhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4avhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViR4a_hYEeaxkoRKVpmNyQ" name="Statements_Accept$method$1" specification="_ViR5Z_hYEeaxkoRKVpmNyQ" node="_ViR4cPhYEeaxkoRKVpmNyQ _ViR4cfhYEeaxkoRKVpmNyQ" group="_ViR4cfhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_ViR4bPhYEeaxkoRKVpmNyQ" name="" type="_ViR4YfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4bfhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4bvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4b_hYEeaxkoRKVpmNyQ" target="_ViR4cPhYEeaxkoRKVpmNyQ" source="_ViR4lfhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_ViR4cfhYEeaxkoRKVpmNyQ" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4cvhYEeaxkoRKVpmNyQ" target="_ViR4lfhYEeaxkoRKVpmNyQ" source="_ViR4kvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4c_hYEeaxkoRKVpmNyQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4dPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@7c97a0f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4dfhYEeaxkoRKVpmNyQ" target="_ViR4iPhYEeaxkoRKVpmNyQ" source="_ViR4evhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4dvhYEeaxkoRKVpmNyQ" target="_ViR4h_hYEeaxkoRKVpmNyQ" source="_ViR4ePhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4d_hYEeaxkoRKVpmNyQ" target="_ViR4jvhYEeaxkoRKVpmNyQ" source="_ViR4f_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4ePhYEeaxkoRKVpmNyQ" name="Tuple@1011bc17" outgoing="_ViR4dvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViR4efhYEeaxkoRKVpmNyQ" name="Value(null)">
                  <result xmi:id="_ViR4evhYEeaxkoRKVpmNyQ" name="Value(null).result" outgoing="_ViR4dfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4e_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4fPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_ViR4ffhYEeaxkoRKVpmNyQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ViR4fvhYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_ViR4f_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViR4d_hYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4gPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4gfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4gvhYEeaxkoRKVpmNyQ" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4g_hYEeaxkoRKVpmNyQ" target="_ViR4hPhYEeaxkoRKVpmNyQ" source="_ViR4i_hYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViR4hPhYEeaxkoRKVpmNyQ" name="Output(Call(run).result())" incoming="_ViR4g_hYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4hfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4hvhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_ViR4h_hYEeaxkoRKVpmNyQ" name="Call(run)" incoming="_ViR4dvhYEeaxkoRKVpmNyQ" operation="_ViR5a_hYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_ViR4iPhYEeaxkoRKVpmNyQ" name="Call(run).argument(tester)" incoming="_ViR4dfhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4ifhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4ivhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViR4i_hYEeaxkoRKVpmNyQ" name="Call(run).result()" outgoing="_ViR4g_hYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4jPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4jfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <target xmi:id="_ViR4jvhYEeaxkoRKVpmNyQ" name="Call(run).target" incoming="_ViR4d_hYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4j_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4kPhYEeaxkoRKVpmNyQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ViR4kfhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_ViR4kvhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViR4cvhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4k_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4lPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ViR4lfhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViR4cvhYEeaxkoRKVpmNyQ" outgoing="_ViR4b_hYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViR4cPhYEeaxkoRKVpmNyQ" name="Return" incoming="_ViR4b_hYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" parameter="_ViR4bPhYEeaxkoRKVpmNyQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViR4lvhYEeaxkoRKVpmNyQ" name="run$method$1" specification="_ViR5a_hYEeaxkoRKVpmNyQ" node="_ViR4ovhYEeaxkoRKVpmNyQ _ViR4pfhYEeaxkoRKVpmNyQ _ViR4o_hYEeaxkoRKVpmNyQ _ViR4q_hYEeaxkoRKVpmNyQ _ViR4pPhYEeaxkoRKVpmNyQ" group="_ViR4pfhYEeaxkoRKVpmNyQ _ViR4q_hYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_ViR4l_hYEeaxkoRKVpmNyQ" name="tester" type="_ViTwgfhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4mPhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4mfhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ViR4mvhYEeaxkoRKVpmNyQ" name="" type="_ViR4YfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4m_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4nPhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4nfhYEeaxkoRKVpmNyQ" target="_ViR4p_hYEeaxkoRKVpmNyQ" source="_ViR4ovhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4nvhYEeaxkoRKVpmNyQ" target="_ViR4o_hYEeaxkoRKVpmNyQ" source="_ViR46vhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4n_hYEeaxkoRKVpmNyQ" target="_ViR48_hYEeaxkoRKVpmNyQ" source="_ViR4qvhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4oPhYEeaxkoRKVpmNyQ" target="_ViR4pPhYEeaxkoRKVpmNyQ" source="_ViR4pfhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4ofhYEeaxkoRKVpmNyQ" target="_ViR4q_hYEeaxkoRKVpmNyQ" source="_ViR4pPhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_ViR4pfhYEeaxkoRKVpmNyQ" name="Node(Input(tester))" outgoing="_ViR4oPhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4pvhYEeaxkoRKVpmNyQ" target="_ViR4qvhYEeaxkoRKVpmNyQ" source="_ViR4p_hYEeaxkoRKVpmNyQ"/>
          <structuredNodeInput xmi:id="_ViR4p_hYEeaxkoRKVpmNyQ" name="Input(tester)" incoming="_ViR4nfhYEeaxkoRKVpmNyQ" outgoing="_ViR4pvhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4qPhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4qfhYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_ViR4qvhYEeaxkoRKVpmNyQ" name="Fork(tester)" incoming="_ViR4pvhYEeaxkoRKVpmNyQ" outgoing="_ViR4n_hYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <structuredNode xmi:id="_ViR4q_hYEeaxkoRKVpmNyQ" name="Body(run$method$1)" incoming="_ViR4ofhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4rPhYEeaxkoRKVpmNyQ" target="_ViR46vhYEeaxkoRKVpmNyQ" source="_ViR45_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4rfhYEeaxkoRKVpmNyQ" target="_ViR4-vhYEeaxkoRKVpmNyQ" source="_ViR46vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4rvhYEeaxkoRKVpmNyQ" target="_ViR4uPhYEeaxkoRKVpmNyQ" source="_ViR4-fhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4r_hYEeaxkoRKVpmNyQ" target="_ViR4-fhYEeaxkoRKVpmNyQ" source="_ViR46_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4sPhYEeaxkoRKVpmNyQ" target="_ViR4_vhYEeaxkoRKVpmNyQ" source="_ViR46vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4sfhYEeaxkoRKVpmNyQ" target="_ViR5BfhYEeaxkoRKVpmNyQ" source="_ViR5AfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4svhYEeaxkoRKVpmNyQ" target="_ViR5EfhYEeaxkoRKVpmNyQ" source="_ViR5CPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4s_hYEeaxkoRKVpmNyQ" target="_ViR5F_hYEeaxkoRKVpmNyQ" source="_ViR5DPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4tPhYEeaxkoRKVpmNyQ" target="_ViR5G_hYEeaxkoRKVpmNyQ" source="_ViR5GvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4tfhYEeaxkoRKVpmNyQ" target="_ViR5G_hYEeaxkoRKVpmNyQ" source="_ViR5FPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4tvhYEeaxkoRKVpmNyQ" target="_ViR46_hYEeaxkoRKVpmNyQ" source="_ViR5G_hYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViR4t_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4uPhYEeaxkoRKVpmNyQ" name="Body" incoming="_ViR4rvhYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4ufhYEeaxkoRKVpmNyQ" name="ExpressionStatement@393b8be6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4uvhYEeaxkoRKVpmNyQ" target="_ViR4vPhYEeaxkoRKVpmNyQ" source="_ViR4xvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViR4u_hYEeaxkoRKVpmNyQ" name="SendSignal(Start)" signal="_ViTvdfhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViR4vPhYEeaxkoRKVpmNyQ" name="SendSignal(Start).target" incoming="_ViR4uvhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4vfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4vvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4v_hYEeaxkoRKVpmNyQ" name="InstanceCreationExpression@221467d0">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4wPhYEeaxkoRKVpmNyQ" target="_ViR43vhYEeaxkoRKVpmNyQ" source="_ViR4yvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4wfhYEeaxkoRKVpmNyQ" target="_ViR42PhYEeaxkoRKVpmNyQ" source="_ViR4z_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViR4wvhYEeaxkoRKVpmNyQ" target="_ViR41_hYEeaxkoRKVpmNyQ" source="_ViR4zfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4w_hYEeaxkoRKVpmNyQ" target="_ViR44fhYEeaxkoRKVpmNyQ" source="_ViR41PhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4xPhYEeaxkoRKVpmNyQ" target="_ViR44_hYEeaxkoRKVpmNyQ" source="_ViR44fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR4xfhYEeaxkoRKVpmNyQ" target="_ViR4xvhYEeaxkoRKVpmNyQ" source="_ViR44fhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViR4xvhYEeaxkoRKVpmNyQ" name="Output(Output(Call(TestRunner).result()))" incoming="_ViR4xfhYEeaxkoRKVpmNyQ" outgoing="_ViR4uvhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4x_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4yPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_ViR4yfhYEeaxkoRKVpmNyQ" name="Create(TestRunner)" classifier="_ViTIPvhYEeaxkoRKVpmNyQ">
                  <result xmi:id="_ViR4yvhYEeaxkoRKVpmNyQ" name="Create(TestRunner).result" outgoing="_ViR4wPhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4y_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4zPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR4zfhYEeaxkoRKVpmNyQ" name="Tuple@74e4b482" outgoing="_ViR4wvhYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_ViR4zvhYEeaxkoRKVpmNyQ" name="ReadSelf">
                    <result xmi:id="_ViR4z_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViR4wfhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR40PhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR40fhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR40vhYEeaxkoRKVpmNyQ" name="Node(Call(TestRunner))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR40_hYEeaxkoRKVpmNyQ" target="_ViR41PhYEeaxkoRKVpmNyQ" source="_ViR42_hYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViR41PhYEeaxkoRKVpmNyQ" name="Output(Call(TestRunner).result())" incoming="_ViR40_hYEeaxkoRKVpmNyQ" outgoing="_ViR4w_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR41fhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR41vhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_ViR41_hYEeaxkoRKVpmNyQ" name="Call(TestRunner)" incoming="_ViR4wvhYEeaxkoRKVpmNyQ" operation="_ViTvafhYEeaxkoRKVpmNyQ">
                    <argument xmi:id="_ViR42PhYEeaxkoRKVpmNyQ" name="Call(TestRunner).argument(outer)" incoming="_ViR4wfhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR42fhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR42vhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <result xmi:id="_ViR42_hYEeaxkoRKVpmNyQ" name="Call(TestRunner).result()" outgoing="_ViR40_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR43PhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR43fhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <target xmi:id="_ViR43vhYEeaxkoRKVpmNyQ" name="Call(TestRunner).target" incoming="_ViR4wPhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR43_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR44PhYEeaxkoRKVpmNyQ" value="1"/>
                    </target>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViR44fhYEeaxkoRKVpmNyQ" name="Fork(Output(Call(TestRunner).result()))" incoming="_ViR4w_hYEeaxkoRKVpmNyQ" outgoing="_ViR4xPhYEeaxkoRKVpmNyQ _ViR4xfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_ViR44vhYEeaxkoRKVpmNyQ" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_ViR44_hYEeaxkoRKVpmNyQ" name="Start(TestRunner).object" incoming="_ViR4xPhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR45PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR45fhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ViR45vhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_ViR45_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViR4rPhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR46PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR46fhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ViR46vhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViR4rPhYEeaxkoRKVpmNyQ" outgoing="_ViR4nvhYEeaxkoRKVpmNyQ _ViR4rfhYEeaxkoRKVpmNyQ _ViR4sPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR46_hYEeaxkoRKVpmNyQ" name="Super" incoming="_ViR4tvhYEeaxkoRKVpmNyQ" outgoing="_ViR4r_hYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR47PhYEeaxkoRKVpmNyQ" name="ExpressionStatement@2e01edc0">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR47fhYEeaxkoRKVpmNyQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR47vhYEeaxkoRKVpmNyQ" target="_ViR47_hYEeaxkoRKVpmNyQ" source="_ViR49vhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViR47_hYEeaxkoRKVpmNyQ" name="Output(Call(Test$method$1).result())" incoming="_ViR47vhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR48PhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR48fhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViR48vhYEeaxkoRKVpmNyQ" name="Call(Test$method$1)" behavior="_ViTvlPhYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_ViR48_hYEeaxkoRKVpmNyQ" name="Call(Test$method$1).argument(tester)" incoming="_ViR4n_hYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR49PhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR49fhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViR49vhYEeaxkoRKVpmNyQ" name="Call(Test$method$1).result()" outgoing="_ViR47vhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR49_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4-PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_ViR4-fhYEeaxkoRKVpmNyQ" name="Call(Statements_Accept$initialization$1)" incoming="_ViR4r_hYEeaxkoRKVpmNyQ" outgoing="_ViR4rvhYEeaxkoRKVpmNyQ" operation="_ViR5ZvhYEeaxkoRKVpmNyQ">
            <target xmi:id="_ViR4-vhYEeaxkoRKVpmNyQ" name="Call(Statements_Accept$initialization$1).target" incoming="_ViR4rfhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4-_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR4_PhYEeaxkoRKVpmNyQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViR4_fhYEeaxkoRKVpmNyQ" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_ViR4aPhYEeaxkoRKVpmNyQ">
            <object xmi:id="_ViR4_vhYEeaxkoRKVpmNyQ" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_ViR4sPhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR4__hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5APhYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_ViR5AfhYEeaxkoRKVpmNyQ" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_ViR4sfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5AvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5A_hYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViR5BPhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_ViR5BfhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViR4sfhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5BvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5B_hYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_ViR5CPhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViR4svhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5CfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5CvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViR5C_hYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_ViR5DPhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViR4s_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5DfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5DvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ViR5D_hYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ViR5EPhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_ViR5EfhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViR4svhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5EvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5E_hYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_ViR5FPhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViR4tfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5FfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5FvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_ViR5F_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViR4s_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5GPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5GfhYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ViR5GvhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViR4tPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ViR5G_hYEeaxkoRKVpmNyQ" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_ViR4tPhYEeaxkoRKVpmNyQ _ViR4tfhYEeaxkoRKVpmNyQ" outgoing="_ViR4tvhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViR4tfhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViR4ovhYEeaxkoRKVpmNyQ" name="Input(tester)" outgoing="_ViR4nfhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" parameter="_ViR4l_hYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViR4o_hYEeaxkoRKVpmNyQ" name="Return" incoming="_ViR4nvhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" parameter="_ViR4mvhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:JoinNode" xmi:id="_ViR4pPhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViR4oPhYEeaxkoRKVpmNyQ" outgoing="_ViR4ofhYEeaxkoRKVpmNyQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViR5HPhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_ViR5cvhYEeaxkoRKVpmNyQ" node="_ViR5HfhYEeaxkoRKVpmNyQ" group="_ViR5HfhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_ViR5HfhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViR5HvhYEeaxkoRKVpmNyQ" name="Statements_Accept$initialization$1" specification="_ViR5ZvhYEeaxkoRKVpmNyQ" node="_ViR5H_hYEeaxkoRKVpmNyQ" group="_ViR5H_hYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_ViR5H_hYEeaxkoRKVpmNyQ" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5IPhYEeaxkoRKVpmNyQ" target="_ViR5L_hYEeaxkoRKVpmNyQ" source="_ViR5LPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5IfhYEeaxkoRKVpmNyQ" target="_ViR5M_hYEeaxkoRKVpmNyQ" source="_ViR5L_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5IvhYEeaxkoRKVpmNyQ" target="_ViR5PvhYEeaxkoRKVpmNyQ" source="_ViR5L_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5I_hYEeaxkoRKVpmNyQ" target="_ViR5SPhYEeaxkoRKVpmNyQ" source="_ViR5L_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5JPhYEeaxkoRKVpmNyQ" target="_ViR5T_hYEeaxkoRKVpmNyQ" source="_ViR5S_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5JfhYEeaxkoRKVpmNyQ" target="_ViR5W_hYEeaxkoRKVpmNyQ" source="_ViR5UvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5JvhYEeaxkoRKVpmNyQ" target="_ViR5YfhYEeaxkoRKVpmNyQ" source="_ViR5VvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViR5J_hYEeaxkoRKVpmNyQ" target="_ViR5ZfhYEeaxkoRKVpmNyQ" source="_ViR5ZPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5KPhYEeaxkoRKVpmNyQ" target="_ViR5ZfhYEeaxkoRKVpmNyQ" source="_ViR5XvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViR5KfhYEeaxkoRKVpmNyQ" target="_ViR5MPhYEeaxkoRKVpmNyQ" source="_ViR5ZfhYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViR5KvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ViR5K_hYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_ViR5LPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViR5IPhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5LfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5LvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ViR5L_hYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViR5IPhYEeaxkoRKVpmNyQ" outgoing="_ViR5IfhYEeaxkoRKVpmNyQ _ViR5IvhYEeaxkoRKVpmNyQ _ViR5I_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR5MPhYEeaxkoRKVpmNyQ" name="Initialization" incoming="_ViR5KfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViR5MfhYEeaxkoRKVpmNyQ" target="_ViR5NvhYEeaxkoRKVpmNyQ" source="_ViR5MvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ViR5MvhYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1)" outgoing="_ViR5MfhYEeaxkoRKVpmNyQ" operation="_ViTwd_hYEeaxkoRKVpmNyQ">
              <target xmi:id="_ViR5M_hYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1).target" incoming="_ViR5IfhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5NPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5NfhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR5NvhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)" incoming="_ViR5MfhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5N_hYEeaxkoRKVpmNyQ" target="_ViR5RPhYEeaxkoRKVpmNyQ" source="_ViR5OfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViR5OPhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_ViR5OfhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViR5N_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5OvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5O_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ViR5PPhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViR5PfhYEeaxkoRKVpmNyQ" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_ViR4aPhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                <object xmi:id="_ViR5PvhYEeaxkoRKVpmNyQ" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_ViR5IvhYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5P_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5QPhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViR5QfhYEeaxkoRKVpmNyQ" name="Write(Statements_Accept$initializationFlag$1).result" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5QvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5Q_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:id="_ViR5RPhYEeaxkoRKVpmNyQ" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_ViR5N_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5RfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5RvhYEeaxkoRKVpmNyQ" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViR5R_hYEeaxkoRKVpmNyQ" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_ViR4aPhYEeaxkoRKVpmNyQ">
            <object xmi:id="_ViR5SPhYEeaxkoRKVpmNyQ" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_ViR5I_hYEeaxkoRKVpmNyQ" type="_ViR4YfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5SfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5SvhYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_ViR5S_hYEeaxkoRKVpmNyQ" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_ViR5JPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5TPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5TfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViR5TvhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_ViR5T_hYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViR5JPhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5UPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5UfhYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_ViR5UvhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViR5JfhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5U_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5VPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViR5VfhYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_ViR5VvhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViR5JvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5V_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5WPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ViR5WfhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ViR5WvhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_ViR5W_hYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViR5JfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5XPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5XfhYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_ViR5XvhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViR5KPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5X_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5YPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_ViR5YfhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViR5JvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5YvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5Y_hYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ViR5ZPhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViR5J_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ViR5ZfhYEeaxkoRKVpmNyQ" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_ViR5J_hYEeaxkoRKVpmNyQ _ViR5KPhYEeaxkoRKVpmNyQ" outgoing="_ViR5KfhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViR5KPhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_ViR5ZvhYEeaxkoRKVpmNyQ" name="Statements_Accept$initialization$1" visibility="protected" method="_ViR5HvhYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_ViR5Z_hYEeaxkoRKVpmNyQ" name="Statements_Accept" visibility="public" method="_ViR4a_hYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_ViR5aPhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViR4YfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5afhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5avhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ViR5a_hYEeaxkoRKVpmNyQ" name="run" visibility="public" method="_ViR4lvhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_ViR5bPhYEeaxkoRKVpmNyQ" name="tester" visibility="package" type="_ViTwgfhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5bfhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5bvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ViR5b_hYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViR4YfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5cPhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5cfhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ViR5cvhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_ViR5HPhYEeaxkoRKVpmNyQ" redefinedOperation="_ViTwgPhYEeaxkoRKVpmNyQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ViR5c_hYEeaxkoRKVpmNyQ" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_ViR5dPhYEeaxkoRKVpmNyQ" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5dfhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5dvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViR5d_hYEeaxkoRKVpmNyQ" name="Super$method$1" specification="_ViSfs_hYEeaxkoRKVpmNyQ" node="_ViR5fPhYEeaxkoRKVpmNyQ _ViR5ffhYEeaxkoRKVpmNyQ" group="_ViR5ffhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViR5ePhYEeaxkoRKVpmNyQ" name="" type="_ViR5c_hYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5efhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5evhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5e_hYEeaxkoRKVpmNyQ" target="_ViR5fPhYEeaxkoRKVpmNyQ" source="_ViR5jvhYEeaxkoRKVpmNyQ"/>
          <structuredNode xmi:id="_ViR5ffhYEeaxkoRKVpmNyQ" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5fvhYEeaxkoRKVpmNyQ" target="_ViR5jvhYEeaxkoRKVpmNyQ" source="_ViR5i_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5f_hYEeaxkoRKVpmNyQ" target="_ViR5kPhYEeaxkoRKVpmNyQ" source="_ViR5jvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViR5gPhYEeaxkoRKVpmNyQ" target="_ViR5ifhYEeaxkoRKVpmNyQ" source="_ViR5j_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5gfhYEeaxkoRKVpmNyQ" target="_ViR5lPhYEeaxkoRKVpmNyQ" source="_ViR5jvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5gvhYEeaxkoRKVpmNyQ" target="_ViR5m_hYEeaxkoRKVpmNyQ" source="_ViR5l_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5g_hYEeaxkoRKVpmNyQ" target="_ViR5p_hYEeaxkoRKVpmNyQ" source="_ViR5nvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5hPhYEeaxkoRKVpmNyQ" target="_ViR5rfhYEeaxkoRKVpmNyQ" source="_ViR5ovhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViR5hfhYEeaxkoRKVpmNyQ" target="_ViR5sfhYEeaxkoRKVpmNyQ" source="_ViR5sPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViR5hvhYEeaxkoRKVpmNyQ" target="_ViR5sfhYEeaxkoRKVpmNyQ" source="_ViR5qvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViR5h_hYEeaxkoRKVpmNyQ" target="_ViR5j_hYEeaxkoRKVpmNyQ" source="_ViR5sfhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViR5iPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViR5ifhYEeaxkoRKVpmNyQ" name="Body" incoming="_ViR5gPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViR5ivhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViR5i_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViR5fvhYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5jPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5jfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViR5jvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViR5fvhYEeaxkoRKVpmNyQ" outgoing="_ViR5e_hYEeaxkoRKVpmNyQ _ViR5f_hYEeaxkoRKVpmNyQ _ViR5gfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ViR5j_hYEeaxkoRKVpmNyQ" name="Call(Super$initialization$1)" incoming="_ViR5h_hYEeaxkoRKVpmNyQ" outgoing="_ViR5gPhYEeaxkoRKVpmNyQ" operation="_ViSfsvhYEeaxkoRKVpmNyQ">
              <target xmi:id="_ViR5kPhYEeaxkoRKVpmNyQ" name="Call(Super$initialization$1).target" incoming="_ViR5f_hYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5kfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5kvhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViR5k_hYEeaxkoRKVpmNyQ" name="Read(Super$initializationFlag$1)" structuralFeature="_ViR5dPhYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViR5lPhYEeaxkoRKVpmNyQ" name="Read(Super$initializationFlag$1).object" incoming="_ViR5gfhYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5lfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5lvhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViR5l_hYEeaxkoRKVpmNyQ" name="Read(Super$initializationFlag$1).result" outgoing="_ViR5gvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5mPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5mfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViR5mvhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViR5m_hYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViR5gvhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5nPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5nfhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViR5nvhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViR5g_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5n_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5oPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViR5ofhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViR5ovhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViR5hPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5o_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5pPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViR5pfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViR5pvhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViR5p_hYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViR5g_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5qPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5qfhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViR5qvhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViR5hvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5q_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5rPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViR5rfhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViR5hPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViR5rvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViR5r_hYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViR5sPhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViR5hfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViR5sfhYEeaxkoRKVpmNyQ" name="Decision(Test(Super$initializationFlag$1))" incoming="_ViR5hfhYEeaxkoRKVpmNyQ _ViR5hvhYEeaxkoRKVpmNyQ" outgoing="_ViR5h_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViR5hvhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViR5fPhYEeaxkoRKVpmNyQ" name="Return" incoming="_ViR5e_hYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" parameter="_ViR5ePhYEeaxkoRKVpmNyQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViR5svhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_ViSft_hYEeaxkoRKVpmNyQ" node="_ViR5s_hYEeaxkoRKVpmNyQ" group="_ViR5s_hYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViR5s_hYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViSfcPhYEeaxkoRKVpmNyQ" name="Super$initialization$1" specification="_ViSfsvhYEeaxkoRKVpmNyQ" node="_ViSfcfhYEeaxkoRKVpmNyQ" group="_ViSfcfhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViSfcfhYEeaxkoRKVpmNyQ" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfcvhYEeaxkoRKVpmNyQ" target="_ViSfgPhYEeaxkoRKVpmNyQ" source="_ViSfffhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfc_hYEeaxkoRKVpmNyQ" target="_ViSfivhYEeaxkoRKVpmNyQ" source="_ViSfgPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfdPhYEeaxkoRKVpmNyQ" target="_ViSflPhYEeaxkoRKVpmNyQ" source="_ViSfgPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfdfhYEeaxkoRKVpmNyQ" target="_ViSfm_hYEeaxkoRKVpmNyQ" source="_ViSfl_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfdvhYEeaxkoRKVpmNyQ" target="_ViSfp_hYEeaxkoRKVpmNyQ" source="_ViSfnvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfd_hYEeaxkoRKVpmNyQ" target="_ViSfrfhYEeaxkoRKVpmNyQ" source="_ViSfovhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSfePhYEeaxkoRKVpmNyQ" target="_ViSfsfhYEeaxkoRKVpmNyQ" source="_ViSfsPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfefhYEeaxkoRKVpmNyQ" target="_ViSfsfhYEeaxkoRKVpmNyQ" source="_ViSfqvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSfevhYEeaxkoRKVpmNyQ" target="_ViSfgfhYEeaxkoRKVpmNyQ" source="_ViSfsfhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViSfe_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSffPhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViSfffhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSfcvhYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSffvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSff_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViSfgPhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViSfcvhYEeaxkoRKVpmNyQ" outgoing="_ViSfc_hYEeaxkoRKVpmNyQ _ViSfdPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSfgfhYEeaxkoRKVpmNyQ" name="Initialization" incoming="_ViSfevhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSfgvhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSfg_hYEeaxkoRKVpmNyQ" target="_ViSfkPhYEeaxkoRKVpmNyQ" source="_ViSfhfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSfhPhYEeaxkoRKVpmNyQ" name="Value(true)">
                  <result xmi:id="_ViSfhfhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViSfg_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfhvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfh_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ViSfiPhYEeaxkoRKVpmNyQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViSfifhYEeaxkoRKVpmNyQ" name="Write(Super$initializationFlag$1)" structuralFeature="_ViR5dPhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViSfivhYEeaxkoRKVpmNyQ" name="Write(Super$initializationFlag$1).object" incoming="_ViSfc_hYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfi_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfjPhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViSfjfhYEeaxkoRKVpmNyQ" name="Write(Super$initializationFlag$1).result" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfjvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfj_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViSfkPhYEeaxkoRKVpmNyQ" name="Write(Super$initializationFlag$1).value" incoming="_ViSfg_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfkfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfkvhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViSfk_hYEeaxkoRKVpmNyQ" name="Read(Super$initializationFlag$1)" structuralFeature="_ViR5dPhYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViSflPhYEeaxkoRKVpmNyQ" name="Read(Super$initializationFlag$1).object" incoming="_ViSfdPhYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSflfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSflvhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViSfl_hYEeaxkoRKVpmNyQ" name="Read(Super$initializationFlag$1).result" outgoing="_ViSfdfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfmPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfmfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViSfmvhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViSfm_hYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViSfdfhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfnPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfnfhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViSfnvhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViSfdvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfn_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfoPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSfofhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViSfovhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViSfd_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfo_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfpPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViSfpfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViSfpvhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViSfp_hYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViSfdvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfqPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfqfhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViSfqvhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViSfefhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfq_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfrPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViSfrfhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViSfd_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfrvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfr_hYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViSfsPhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViSfePhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViSfsfhYEeaxkoRKVpmNyQ" name="Decision(Test(Super$initializationFlag$1))" incoming="_ViSfePhYEeaxkoRKVpmNyQ _ViSfefhYEeaxkoRKVpmNyQ" outgoing="_ViSfevhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViSfefhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_ViSfsvhYEeaxkoRKVpmNyQ" name="Super$initialization$1" visibility="protected" method="_ViSfcPhYEeaxkoRKVpmNyQ"/>
        <ownedOperation xmi:id="_ViSfs_hYEeaxkoRKVpmNyQ" name="Super" visibility="public" method="_ViR5d_hYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViSftPhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViR5c_hYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSftfhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSftvhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ViSft_hYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_ViR5svhYEeaxkoRKVpmNyQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_ViSfuPhYEeaxkoRKVpmNyQ" name="SignalNewArrival" visibility="public">
          <ownedAttribute xmi:id="_ViSfufhYEeaxkoRKVpmNyQ" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfuvhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfu_hYEeaxkoRKVpmNyQ" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_ViSfvPhYEeaxkoRKVpmNyQ" name="SignalTermination" visibility="public"/>
        <ownedReception xmi:id="_ViSfvfhYEeaxkoRKVpmNyQ" name="SignalTermination" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ViSfvvhYEeaxkoRKVpmNyQ" name="MyTest" visibility="private" classifierBehavior="_ViSf3vhYEeaxkoRKVpmNyQ" isActive="true">
        <generalization xmi:id="_ViSfv_hYEeaxkoRKVpmNyQ" general="_ViR5c_hYEeaxkoRKVpmNyQ"/>
        <ownedAttribute xmi:id="_ViSfwPhYEeaxkoRKVpmNyQ" name="MyTest$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfwfhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfwvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSfw_hYEeaxkoRKVpmNyQ" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfxPhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfxfhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSfxvhYEeaxkoRKVpmNyQ" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfx_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfyPhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSfyfhYEeaxkoRKVpmNyQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfyvhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfy_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSfzPhYEeaxkoRKVpmNyQ" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSfzfhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSfzvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSfz_hYEeaxkoRKVpmNyQ" name="arrival" visibility="public" type="_ViSfuPhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSf0PhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSf0fhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSf0vhYEeaxkoRKVpmNyQ" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSf0_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSf1PhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSf1fhYEeaxkoRKVpmNyQ" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSf1vhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSf1_hYEeaxkoRKVpmNyQ" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSf2PhYEeaxkoRKVpmNyQ" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSf2fhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSf2vhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViSf2_hYEeaxkoRKVpmNyQ" name="tester" visibility="public" type="_ViTIPvhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSf3PhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSf3fhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViSf3vhYEeaxkoRKVpmNyQ" name="MyTest$classifierBehavior$1" visibility="private" isActive="true" node="_ViSf3_hYEeaxkoRKVpmNyQ" group="_ViSf3_hYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViSf3_hYEeaxkoRKVpmNyQ" name="Body(MyTest$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf4PhYEeaxkoRKVpmNyQ" target="_ViSgK_hYEeaxkoRKVpmNyQ" source="_ViSgEvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf4fhYEeaxkoRKVpmNyQ" target="_ViSgGvhYEeaxkoRKVpmNyQ" source="_ViSgD_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf4vhYEeaxkoRKVpmNyQ" target="_ViSgPPhYEeaxkoRKVpmNyQ" source="_ViSgGvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf4_hYEeaxkoRKVpmNyQ" target="_ViSgifhYEeaxkoRKVpmNyQ" source="_ViSgvPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf5PhYEeaxkoRKVpmNyQ" target="_ViSgm_hYEeaxkoRKVpmNyQ" source="_ViSgvPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf5fhYEeaxkoRKVpmNyQ" target="_ViSgjPhYEeaxkoRKVpmNyQ" source="_ViSgEvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf5vhYEeaxkoRKVpmNyQ" target="_ViSglPhYEeaxkoRKVpmNyQ" source="_ViSgPvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf5_hYEeaxkoRKVpmNyQ" target="_ViSgtfhYEeaxkoRKVpmNyQ" source="_ViSgvPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf6PhYEeaxkoRKVpmNyQ" target="_ViSgrvhYEeaxkoRKVpmNyQ" source="_ViSgEvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf6fhYEeaxkoRKVpmNyQ" target="_ViSgRfhYEeaxkoRKVpmNyQ" source="_ViSgPPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf6vhYEeaxkoRKVpmNyQ" target="_ViSg1_hYEeaxkoRKVpmNyQ" source="_ViSgvvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf6_hYEeaxkoRKVpmNyQ" target="_ViSgxvhYEeaxkoRKVpmNyQ" source="_ViSgRfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf7PhYEeaxkoRKVpmNyQ" target="_ViSg6PhYEeaxkoRKVpmNyQ" source="_ViSgxvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf7fhYEeaxkoRKVpmNyQ" target="_ViSg7fhYEeaxkoRKVpmNyQ" source="_ViSg6PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf7vhYEeaxkoRKVpmNyQ" target="_ViShCPhYEeaxkoRKVpmNyQ" source="_ViSg8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf7_hYEeaxkoRKVpmNyQ" target="_ViSg9_hYEeaxkoRKVpmNyQ" source="_ViSg7fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf8PhYEeaxkoRKVpmNyQ" target="_ViSh8PhYEeaxkoRKVpmNyQ" source="_ViSgvfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf8fhYEeaxkoRKVpmNyQ" target="_ViSh8_hYEeaxkoRKVpmNyQ" source="_ViSgvvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf8vhYEeaxkoRKVpmNyQ" target="_ViSh9vhYEeaxkoRKVpmNyQ" source="_ViSg8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf8_hYEeaxkoRKVpmNyQ" target="_ViShGfhYEeaxkoRKVpmNyQ" source="_ViSg9_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf9PhYEeaxkoRKVpmNyQ" target="_ViSjA_hYEeaxkoRKVpmNyQ" source="_ViSgvfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf9fhYEeaxkoRKVpmNyQ" target="_ViSjBvhYEeaxkoRKVpmNyQ" source="_ViSgvvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf9vhYEeaxkoRKVpmNyQ" target="_ViSjIfhYEeaxkoRKVpmNyQ" source="_ViSjGPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf9_hYEeaxkoRKVpmNyQ" target="_ViSjDPhYEeaxkoRKVpmNyQ" source="_ViSg8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf-PhYEeaxkoRKVpmNyQ" target="_ViSjD_hYEeaxkoRKVpmNyQ" source="_ViSiGvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf-fhYEeaxkoRKVpmNyQ" target="_ViSiWvhYEeaxkoRKVpmNyQ" source="_ViSiffhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSf-vhYEeaxkoRKVpmNyQ" target="_ViSiSfhYEeaxkoRKVpmNyQ" source="_ViShGfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf-_hYEeaxkoRKVpmNyQ" target="_ViTHI_hYEeaxkoRKVpmNyQ" source="_ViTHFPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf_PhYEeaxkoRKVpmNyQ" target="_ViTHJPhYEeaxkoRKVpmNyQ" source="_ViTHF_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf_fhYEeaxkoRKVpmNyQ" target="_ViTHJfhYEeaxkoRKVpmNyQ" source="_ViTHGvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf_vhYEeaxkoRKVpmNyQ" target="_ViTHJvhYEeaxkoRKVpmNyQ" source="_ViTHHfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSf__hYEeaxkoRKVpmNyQ" target="_ViTHJ_hYEeaxkoRKVpmNyQ" source="_ViTHIPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgAPhYEeaxkoRKVpmNyQ" target="_ViTGkvhYEeaxkoRKVpmNyQ" source="_ViSgvfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgAfhYEeaxkoRKVpmNyQ" target="_ViTGmvhYEeaxkoRKVpmNyQ" source="_ViSgvvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgAvhYEeaxkoRKVpmNyQ" target="_ViTGovhYEeaxkoRKVpmNyQ" source="_ViSjIfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgA_hYEeaxkoRKVpmNyQ" target="_ViTGqvhYEeaxkoRKVpmNyQ" source="_ViSg8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgBPhYEeaxkoRKVpmNyQ" target="_ViTGsvhYEeaxkoRKVpmNyQ" source="_ViSiGvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgBfhYEeaxkoRKVpmNyQ" target="_ViTG7PhYEeaxkoRKVpmNyQ" source="_ViSgvfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgBvhYEeaxkoRKVpmNyQ" target="_ViTG9PhYEeaxkoRKVpmNyQ" source="_ViSgvvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgB_hYEeaxkoRKVpmNyQ" target="_ViTG_PhYEeaxkoRKVpmNyQ" source="_ViSjIfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgCPhYEeaxkoRKVpmNyQ" target="_ViTHBPhYEeaxkoRKVpmNyQ" source="_ViSg8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgCfhYEeaxkoRKVpmNyQ" target="_ViTHDPhYEeaxkoRKVpmNyQ" source="_ViSiGvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgCvhYEeaxkoRKVpmNyQ" target="_ViSjIvhYEeaxkoRKVpmNyQ" source="_ViSiSfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgC_hYEeaxkoRKVpmNyQ" target="_ViTHKPhYEeaxkoRKVpmNyQ" source="_ViSjIvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgDPhYEeaxkoRKVpmNyQ" target="_ViTHQ_hYEeaxkoRKVpmNyQ" source="_ViTHK_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgDfhYEeaxkoRKVpmNyQ" target="_ViTHMvhYEeaxkoRKVpmNyQ" source="_ViTHKPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgDvhYEeaxkoRKVpmNyQ" target="_ViTHVPhYEeaxkoRKVpmNyQ" source="_ViTHMvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgD_hYEeaxkoRKVpmNyQ" name="AcceptStatement@4b44926d" outgoing="_ViSf4fhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgEPhYEeaxkoRKVpmNyQ" target="_ViSgE_hYEeaxkoRKVpmNyQ" source="_ViSgGfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgEfhYEeaxkoRKVpmNyQ" target="_ViSgEvhYEeaxkoRKVpmNyQ" source="_ViSgFPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSgEvhYEeaxkoRKVpmNyQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_ViSgEfhYEeaxkoRKVpmNyQ" outgoing="_ViSf4PhYEeaxkoRKVpmNyQ _ViSf5fhYEeaxkoRKVpmNyQ _ViSf6PhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViSgE_hYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_ViSgEPhYEeaxkoRKVpmNyQ">
                <result xmi:id="_ViSgFPhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_ViSgEfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgFfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgFvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <trigger xmi:id="_ViSgF_hYEeaxkoRKVpmNyQ" event="_ViTvefhYEeaxkoRKVpmNyQ"/>
                <trigger xmi:id="_ViSgGPhYEeaxkoRKVpmNyQ" event="_ViTvevhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViSgGfhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_ViSgEPhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgGvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@c0a226f" incoming="_ViSf4fhYEeaxkoRKVpmNyQ" outgoing="_ViSf4vhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgG_hYEeaxkoRKVpmNyQ" target="_ViSgJfhYEeaxkoRKVpmNyQ" source="_ViSgIfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgHPhYEeaxkoRKVpmNyQ" target="_ViSgLvhYEeaxkoRKVpmNyQ" source="_ViSgK_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgHfhYEeaxkoRKVpmNyQ" target="_ViSgMvhYEeaxkoRKVpmNyQ" source="_ViSgKPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgHvhYEeaxkoRKVpmNyQ" target="_ViSgH_hYEeaxkoRKVpmNyQ" source="_ViSgO_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgH_hYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@72b18b70)" incoming="_ViSgHvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSgIPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                  <result xmi:id="_ViSgIfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSgG_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgIvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgI_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViSgJPhYEeaxkoRKVpmNyQ" name="Clear(sig)" structuralFeature="_ViSfw_hYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViSgJfhYEeaxkoRKVpmNyQ" name="Clear(sig).object" incoming="_ViSgG_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgJvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgJ_hYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViSgKPhYEeaxkoRKVpmNyQ" name="Clear(sig).result" outgoing="_ViSgHfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgKfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgKvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSgK_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@72b18b70)" incoming="_ViSf4PhYEeaxkoRKVpmNyQ" outgoing="_ViSgHPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgLPhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgLfhYEeaxkoRKVpmNyQ" target="_ViSgOPhYEeaxkoRKVpmNyQ" source="_ViSgLvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViSgLvhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::sig).input(MyTest::sig)" incoming="_ViSgHPhYEeaxkoRKVpmNyQ" outgoing="_ViSgLfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgL_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgMPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViSgMfhYEeaxkoRKVpmNyQ" name="Write(sig)" structuralFeature="_ViSfw_hYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViSgMvhYEeaxkoRKVpmNyQ" name="Write(sig).object" incoming="_ViSgHfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgM_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgNPhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViSgNfhYEeaxkoRKVpmNyQ" name="Write(sig).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgNvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgN_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViSgOPhYEeaxkoRKVpmNyQ" name="Write(sig).value" incoming="_ViSgLfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgOfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgOvhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgO_hYEeaxkoRKVpmNyQ" name="RightHandSide@57f7fdde" outgoing="_ViSgHvhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgPPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@20be3118" incoming="_ViSf4vhYEeaxkoRKVpmNyQ" outgoing="_ViSf6fhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgPfhYEeaxkoRKVpmNyQ" target="_ViSgPvhYEeaxkoRKVpmNyQ" source="_ViSgQfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSgPvhYEeaxkoRKVpmNyQ" name="Fork(terminate)@5e28228" incoming="_ViSgPfhYEeaxkoRKVpmNyQ" outgoing="_ViSf5vhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgP_hYEeaxkoRKVpmNyQ" name="RightHandSide@2821b97a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSgQPhYEeaxkoRKVpmNyQ" name="Value(false)">
                  <result xmi:id="_ViSgQfhYEeaxkoRKVpmNyQ" name="Value(false).result" outgoing="_ViSgPfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgQvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgQ_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ViSgRPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgRfhYEeaxkoRKVpmNyQ" name="AcceptStatement@3a5478c1" incoming="_ViSf6fhYEeaxkoRKVpmNyQ" outgoing="_ViSf6_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgRvhYEeaxkoRKVpmNyQ" target="_ViSgofhYEeaxkoRKVpmNyQ" source="_ViSgnvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgR_hYEeaxkoRKVpmNyQ" target="_ViSgXfhYEeaxkoRKVpmNyQ" source="_ViSgofhYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViSgSPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgSfhYEeaxkoRKVpmNyQ" target="_ViSgV_hYEeaxkoRKVpmNyQ" source="_ViSgj_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgSvhYEeaxkoRKVpmNyQ" target="_ViSgWvhYEeaxkoRKVpmNyQ" source="_ViSgl_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgS_hYEeaxkoRKVpmNyQ" target="_ViSgu_hYEeaxkoRKVpmNyQ" source="_ViSguPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgTPhYEeaxkoRKVpmNyQ" target="_ViSgovhYEeaxkoRKVpmNyQ" source="_ViSgu_hYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViSgTfhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgTvhYEeaxkoRKVpmNyQ" target="_ViSgofhYEeaxkoRKVpmNyQ" source="_ViSgu_hYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViSgT_hYEeaxkoRKVpmNyQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgUPhYEeaxkoRKVpmNyQ" target="_ViSgV_hYEeaxkoRKVpmNyQ" source="_ViSgsfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgUfhYEeaxkoRKVpmNyQ" target="_ViSgWvhYEeaxkoRKVpmNyQ" source="_ViSgpfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgUvhYEeaxkoRKVpmNyQ" target="_ViSgvfhYEeaxkoRKVpmNyQ" source="_ViSgV_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgU_hYEeaxkoRKVpmNyQ" target="_ViSgvvhYEeaxkoRKVpmNyQ" source="_ViSgWvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgVPhYEeaxkoRKVpmNyQ" target="_ViSgv_hYEeaxkoRKVpmNyQ" source="_ViSgxfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgVfhYEeaxkoRKVpmNyQ" target="_ViSgu_hYEeaxkoRKVpmNyQ" source="_ViSgv_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgVvhYEeaxkoRKVpmNyQ" target="_ViSgvPhYEeaxkoRKVpmNyQ" source="_ViSgwPhYEeaxkoRKVpmNyQ"/>
              <structuredNodeOutput xmi:id="_ViSgV_hYEeaxkoRKVpmNyQ" name="AcceptStatement@3a5478c1.output(sig)" incoming="_ViSgSfhYEeaxkoRKVpmNyQ _ViSgUPhYEeaxkoRKVpmNyQ" outgoing="_ViSgUvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgWPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgWfhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_ViSgWvhYEeaxkoRKVpmNyQ" name="AcceptStatement@3a5478c1.output(terminate)" incoming="_ViSgSvhYEeaxkoRKVpmNyQ _ViSgUfhYEeaxkoRKVpmNyQ" outgoing="_ViSgU_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgW_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgXPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgXfhYEeaxkoRKVpmNyQ" name="AcceptBlock(SignalNewArrival)" incoming="_ViSgR_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgXvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@4668c46">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgX_hYEeaxkoRKVpmNyQ" target="_ViSgavhYEeaxkoRKVpmNyQ" source="_ViSgZvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgYPhYEeaxkoRKVpmNyQ" target="_ViSgc_hYEeaxkoRKVpmNyQ" source="_ViSgcPhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgYfhYEeaxkoRKVpmNyQ" target="_ViSgd_hYEeaxkoRKVpmNyQ" source="_ViSgbfhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgYvhYEeaxkoRKVpmNyQ" target="_ViSgcPhYEeaxkoRKVpmNyQ" source="_ViSghvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgY_hYEeaxkoRKVpmNyQ" target="_ViSgZPhYEeaxkoRKVpmNyQ" source="_ViSggPhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgZPhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@396ec408)" incoming="_ViSgY_hYEeaxkoRKVpmNyQ">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSgZfhYEeaxkoRKVpmNyQ" name="ReadSelf">
                      <result xmi:id="_ViSgZvhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSgX_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgZ_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgaPhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViSgafhYEeaxkoRKVpmNyQ" name="Clear(name)" structuralFeature="_ViSfyfhYEeaxkoRKVpmNyQ">
                    <object xmi:id="_ViSgavhYEeaxkoRKVpmNyQ" name="Clear(name).object" incoming="_ViSgX_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSga_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgbPhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViSgbfhYEeaxkoRKVpmNyQ" name="Clear(name).result" outgoing="_ViSgYfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgbvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgb_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_ViSgcPhYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@396ec408)" incoming="_ViSgYvhYEeaxkoRKVpmNyQ" outgoing="_ViSgYPhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgcfhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgcvhYEeaxkoRKVpmNyQ" target="_ViSgffhYEeaxkoRKVpmNyQ" source="_ViSgc_hYEeaxkoRKVpmNyQ"/>
                    <structuredNodeInput xmi:id="_ViSgc_hYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::name).input(MyTest::name)" incoming="_ViSgYPhYEeaxkoRKVpmNyQ" outgoing="_ViSgcvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgdPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgdfhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViSgdvhYEeaxkoRKVpmNyQ" name="Write(name)" structuralFeature="_ViSfyfhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                      <object xmi:id="_ViSgd_hYEeaxkoRKVpmNyQ" name="Write(name).object" incoming="_ViSgYfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgePhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgefhYEeaxkoRKVpmNyQ" value="1"/>
                      </object>
                      <result xmi:id="_ViSgevhYEeaxkoRKVpmNyQ" name="Write(name).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSge_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgfPhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <value xmi:id="_ViSgffhYEeaxkoRKVpmNyQ" name="Write(name).value" incoming="_ViSgcvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgfvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgf_hYEeaxkoRKVpmNyQ" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSggPhYEeaxkoRKVpmNyQ" name="RightHandSide@60706f6d" outgoing="_ViSgY_hYEeaxkoRKVpmNyQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSggfhYEeaxkoRKVpmNyQ" target="_ViSgg_hYEeaxkoRKVpmNyQ" source="_ViSgifhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViSggvhYEeaxkoRKVpmNyQ" name="Read(name)" structuralFeature="_ViSfufhYEeaxkoRKVpmNyQ">
                      <object xmi:id="_ViSgg_hYEeaxkoRKVpmNyQ" name="Read(name).object" incoming="_ViSggfhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSghPhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSghfhYEeaxkoRKVpmNyQ" value="1"/>
                      </object>
                      <result xmi:id="_ViSghvhYEeaxkoRKVpmNyQ" name="Read(name).result" outgoing="_ViSgYvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgh_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgiPhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViSgifhYEeaxkoRKVpmNyQ" name="Fork()" incoming="_ViSf4_hYEeaxkoRKVpmNyQ" outgoing="_ViSggfhYEeaxkoRKVpmNyQ"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgivhYEeaxkoRKVpmNyQ" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgi_hYEeaxkoRKVpmNyQ" target="_ViSgj_hYEeaxkoRKVpmNyQ" source="_ViSgjPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSgjPhYEeaxkoRKVpmNyQ" name="Passthru(sig).input" incoming="_ViSf5fhYEeaxkoRKVpmNyQ" outgoing="_ViSgi_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgjfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgjvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSgj_hYEeaxkoRKVpmNyQ" name="Passthru(sig).output" incoming="_ViSgi_hYEeaxkoRKVpmNyQ" outgoing="_ViSgSfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgkPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgkfhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgkvhYEeaxkoRKVpmNyQ" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgk_hYEeaxkoRKVpmNyQ" target="_ViSgl_hYEeaxkoRKVpmNyQ" source="_ViSglPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSglPhYEeaxkoRKVpmNyQ" name="Passthru(terminate).input" incoming="_ViSf5vhYEeaxkoRKVpmNyQ" outgoing="_ViSgk_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSglfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSglvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSgl_hYEeaxkoRKVpmNyQ" name="Passthru(terminate).output" incoming="_ViSgk_hYEeaxkoRKVpmNyQ" outgoing="_ViSgSvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgmPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgmfhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViSgmvhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_ViSfuPhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViSgm_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_ViSf5PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgnPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgnfhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViSgnvhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_ViSgRvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgn_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgoPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_ViSgofhYEeaxkoRKVpmNyQ" name="Decision(Test(SignalNewArrival))" incoming="_ViSgRvhYEeaxkoRKVpmNyQ _ViSgTvhYEeaxkoRKVpmNyQ" outgoing="_ViSgR_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViSgRvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgovhYEeaxkoRKVpmNyQ" name="AcceptBlock(SignalTermination)" incoming="_ViSgTPhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgo_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@2ffda01d">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgpPhYEeaxkoRKVpmNyQ" target="_ViSgpfhYEeaxkoRKVpmNyQ" source="_ViSgqPhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_ViSgpfhYEeaxkoRKVpmNyQ" name="Fork(terminate)@2416dbe4" incoming="_ViSgpPhYEeaxkoRKVpmNyQ" outgoing="_ViSgUfhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgpvhYEeaxkoRKVpmNyQ" name="RightHandSide@52d804aa">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSgp_hYEeaxkoRKVpmNyQ" name="Value(true)">
                      <result xmi:id="_ViSgqPhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViSgpPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgqfhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgqvhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_ViSgq_hYEeaxkoRKVpmNyQ" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgrPhYEeaxkoRKVpmNyQ" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgrfhYEeaxkoRKVpmNyQ" target="_ViSgsfhYEeaxkoRKVpmNyQ" source="_ViSgrvhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSgrvhYEeaxkoRKVpmNyQ" name="Passthru(sig).input" incoming="_ViSf6PhYEeaxkoRKVpmNyQ" outgoing="_ViSgrfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgr_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgsPhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSgsfhYEeaxkoRKVpmNyQ" name="Passthru(sig).output" incoming="_ViSgrfhYEeaxkoRKVpmNyQ" outgoing="_ViSgUPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgsvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgs_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViSgtPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_ViSfvPhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViSgtfhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_ViSf5_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgtvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgt_hYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViSguPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_ViSgS_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgufhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSguvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_ViSgu_hYEeaxkoRKVpmNyQ" name="Decision(Test(SignalTermination))" incoming="_ViSgS_hYEeaxkoRKVpmNyQ _ViSgVfhYEeaxkoRKVpmNyQ" outgoing="_ViSgTPhYEeaxkoRKVpmNyQ _ViSgTvhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViSgS_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSgvPhYEeaxkoRKVpmNyQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_ViSgVvhYEeaxkoRKVpmNyQ" outgoing="_ViSf4_hYEeaxkoRKVpmNyQ _ViSf5PhYEeaxkoRKVpmNyQ _ViSf5_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSgvfhYEeaxkoRKVpmNyQ" name="Fork(sig)" incoming="_ViSgUvhYEeaxkoRKVpmNyQ" outgoing="_ViSf8PhYEeaxkoRKVpmNyQ _ViSf9PhYEeaxkoRKVpmNyQ _ViSgAPhYEeaxkoRKVpmNyQ _ViSgBfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSgvvhYEeaxkoRKVpmNyQ" name="Fork(terminate)" incoming="_ViSgU_hYEeaxkoRKVpmNyQ" outgoing="_ViSf6vhYEeaxkoRKVpmNyQ _ViSf8fhYEeaxkoRKVpmNyQ _ViSf9fhYEeaxkoRKVpmNyQ _ViSgAfhYEeaxkoRKVpmNyQ _ViSgBvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViSgv_hYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_ViSgVPhYEeaxkoRKVpmNyQ" outgoing="_ViSgVfhYEeaxkoRKVpmNyQ">
                <result xmi:id="_ViSgwPhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_ViSgVvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgwfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgwvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <trigger xmi:id="_ViSgw_hYEeaxkoRKVpmNyQ" event="_ViTve_hYEeaxkoRKVpmNyQ"/>
                <trigger xmi:id="_ViSgxPhYEeaxkoRKVpmNyQ" event="_ViTvfPhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViSgxfhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_ViSgVPhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgxvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@47b56041" incoming="_ViSf6_hYEeaxkoRKVpmNyQ" outgoing="_ViSf7PhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgx_hYEeaxkoRKVpmNyQ" target="_ViSg0fhYEeaxkoRKVpmNyQ" source="_ViSgzfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgyPhYEeaxkoRKVpmNyQ" target="_ViSg2vhYEeaxkoRKVpmNyQ" source="_ViSg1_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSgyfhYEeaxkoRKVpmNyQ" target="_ViSg3vhYEeaxkoRKVpmNyQ" source="_ViSg1PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSgyvhYEeaxkoRKVpmNyQ" target="_ViSgy_hYEeaxkoRKVpmNyQ" source="_ViSg5_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSgy_hYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@1ad8d801)" incoming="_ViSgyvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSgzPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                  <result xmi:id="_ViSgzfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSgx_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSgzvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSgz_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViSg0PhYEeaxkoRKVpmNyQ" name="Clear(terminate)" structuralFeature="_ViSfzPhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViSg0fhYEeaxkoRKVpmNyQ" name="Clear(terminate).object" incoming="_ViSgx_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg0vhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg0_hYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViSg1PhYEeaxkoRKVpmNyQ" name="Clear(terminate).result" outgoing="_ViSgyfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg1fhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg1vhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSg1_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@1ad8d801)" incoming="_ViSf6vhYEeaxkoRKVpmNyQ" outgoing="_ViSgyPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSg2PhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSg2fhYEeaxkoRKVpmNyQ" target="_ViSg5PhYEeaxkoRKVpmNyQ" source="_ViSg2vhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViSg2vhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::terminate).input(MyTest::terminate)" incoming="_ViSgyPhYEeaxkoRKVpmNyQ" outgoing="_ViSg2fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg2_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg3PhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViSg3fhYEeaxkoRKVpmNyQ" name="Write(terminate)" structuralFeature="_ViSfzPhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViSg3vhYEeaxkoRKVpmNyQ" name="Write(terminate).object" incoming="_ViSgyfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg3_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg4PhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViSg4fhYEeaxkoRKVpmNyQ" name="Write(terminate).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg4vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg4_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViSg5PhYEeaxkoRKVpmNyQ" name="Write(terminate).value" incoming="_ViSg2fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg5fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg5vhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSg5_hYEeaxkoRKVpmNyQ" name="RightHandSide@3345c865" outgoing="_ViSgyvhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSg6PhYEeaxkoRKVpmNyQ" name="AcceptStatement@603faa07" incoming="_ViSf7PhYEeaxkoRKVpmNyQ" outgoing="_ViSf7fhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSg6fhYEeaxkoRKVpmNyQ" target="_ViSg6vhYEeaxkoRKVpmNyQ" source="_ViSg7PhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViSg6vhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival)" incoming="_ViSg6fhYEeaxkoRKVpmNyQ">
                <trigger xmi:id="_ViSg6_hYEeaxkoRKVpmNyQ" event="_ViTvffhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViSg7PhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival))" outgoing="_ViSg6fhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSg7fhYEeaxkoRKVpmNyQ" name="AcceptStatement@6856c88e" incoming="_ViSf7fhYEeaxkoRKVpmNyQ" outgoing="_ViSf7_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSg7vhYEeaxkoRKVpmNyQ" target="_ViSg8fhYEeaxkoRKVpmNyQ" source="_ViSg9vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSg7_hYEeaxkoRKVpmNyQ" target="_ViSg8PhYEeaxkoRKVpmNyQ" source="_ViSg8vhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSg8PhYEeaxkoRKVpmNyQ" name="Fork(Accept(SignalNewArrival).result)" incoming="_ViSg7_hYEeaxkoRKVpmNyQ" outgoing="_ViSf7vhYEeaxkoRKVpmNyQ _ViSf8vhYEeaxkoRKVpmNyQ _ViSf9_hYEeaxkoRKVpmNyQ _ViSgA_hYEeaxkoRKVpmNyQ _ViSgCPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViSg8fhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival)" incoming="_ViSg7vhYEeaxkoRKVpmNyQ">
                <result xmi:id="_ViSg8vhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival).result" outgoing="_ViSg7_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg8_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSg9PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <trigger xmi:id="_ViSg9fhYEeaxkoRKVpmNyQ" event="_ViTvfvhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViSg9vhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival))" outgoing="_ViSg7vhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSg9_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@334d221f" incoming="_ViSf7_hYEeaxkoRKVpmNyQ" outgoing="_ViSf8_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSg-PhYEeaxkoRKVpmNyQ" target="_ViShAvhYEeaxkoRKVpmNyQ" source="_ViSg_vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSg-fhYEeaxkoRKVpmNyQ" target="_ViShC_hYEeaxkoRKVpmNyQ" source="_ViShCPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSg-vhYEeaxkoRKVpmNyQ" target="_ViShD_hYEeaxkoRKVpmNyQ" source="_ViShBfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSg-_hYEeaxkoRKVpmNyQ" target="_ViSg_PhYEeaxkoRKVpmNyQ" source="_ViShGPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSg_PhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@115fe889)" incoming="_ViSg-_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSg_fhYEeaxkoRKVpmNyQ" name="ReadSelf">
                  <result xmi:id="_ViSg_vhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSg-PhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSg__hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShAPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViShAfhYEeaxkoRKVpmNyQ" name="Clear(arrival)" structuralFeature="_ViSfz_hYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViShAvhYEeaxkoRKVpmNyQ" name="Clear(arrival).object" incoming="_ViSg-PhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShA_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShBPhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViShBfhYEeaxkoRKVpmNyQ" name="Clear(arrival).result" outgoing="_ViSg-vhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShBvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShB_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViShCPhYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@115fe889)" incoming="_ViSf7vhYEeaxkoRKVpmNyQ" outgoing="_ViSg-fhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShCfhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShCvhYEeaxkoRKVpmNyQ" target="_ViShFfhYEeaxkoRKVpmNyQ" source="_ViShC_hYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViShC_hYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::arrival).input(MyTest::arrival)" incoming="_ViSg-fhYEeaxkoRKVpmNyQ" outgoing="_ViShCvhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShDPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShDfhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViShDvhYEeaxkoRKVpmNyQ" name="Write(arrival)" structuralFeature="_ViSfz_hYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViShD_hYEeaxkoRKVpmNyQ" name="Write(arrival).object" incoming="_ViSg-vhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShEPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShEfhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViShEvhYEeaxkoRKVpmNyQ" name="Write(arrival).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShE_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShFPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViShFfhYEeaxkoRKVpmNyQ" name="Write(arrival).value" incoming="_ViShCvhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShFvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShF_hYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShGPhYEeaxkoRKVpmNyQ" name="RightHandSide@75703bac" outgoing="_ViSg-_hYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShGfhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43" incoming="_ViSf8_hYEeaxkoRKVpmNyQ" outgoing="_ViSf-vhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShGvhYEeaxkoRKVpmNyQ" target="_ViSiGvhYEeaxkoRKVpmNyQ" source="_ViSiDvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShG_hYEeaxkoRKVpmNyQ" target="_ViSiKvhYEeaxkoRKVpmNyQ" source="_ViSiIfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShHPhYEeaxkoRKVpmNyQ" target="_ViSh__hYEeaxkoRKVpmNyQ" source="_ViSiRfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShHfhYEeaxkoRKVpmNyQ" target="_ViSiAvhYEeaxkoRKVpmNyQ" source="_ViSiQfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShHvhYEeaxkoRKVpmNyQ" target="_ViSh_PhYEeaxkoRKVpmNyQ" source="_ViSiKvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViShH_hYEeaxkoRKVpmNyQ" target="_ViShIPhYEeaxkoRKVpmNyQ" source="_ViSiG_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:LoopNode" xmi:id="_ViShIPhYEeaxkoRKVpmNyQ" name="Loop(ForStatement@e66bc43)" incoming="_ViShH_hYEeaxkoRKVpmNyQ" bodyOutput="_ViShTvhYEeaxkoRKVpmNyQ _ViShUfhYEeaxkoRKVpmNyQ _ViShVPhYEeaxkoRKVpmNyQ _ViShV_hYEeaxkoRKVpmNyQ _ViSh0_hYEeaxkoRKVpmNyQ _ViShvPhYEeaxkoRKVpmNyQ _ViShyfhYEeaxkoRKVpmNyQ" bodyPart="_ViShRPhYEeaxkoRKVpmNyQ _ViShRfhYEeaxkoRKVpmNyQ _ViShzPhYEeaxkoRKVpmNyQ _ViSh1vhYEeaxkoRKVpmNyQ" decider="_ViShQfhYEeaxkoRKVpmNyQ" isTestedFirst="true" test="_ViShOvhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShIfhYEeaxkoRKVpmNyQ" target="_ViShM_hYEeaxkoRKVpmNyQ" source="_ViSh2_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShIvhYEeaxkoRKVpmNyQ" target="_ViShNPhYEeaxkoRKVpmNyQ" source="_ViSh3vhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShI_hYEeaxkoRKVpmNyQ" target="_ViShNfhYEeaxkoRKVpmNyQ" source="_ViSh4fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShJPhYEeaxkoRKVpmNyQ" target="_ViShNvhYEeaxkoRKVpmNyQ" source="_ViSh5PhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShJfhYEeaxkoRKVpmNyQ" target="_ViShN_hYEeaxkoRKVpmNyQ" source="_ViSh5_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShJvhYEeaxkoRKVpmNyQ" target="_ViShOPhYEeaxkoRKVpmNyQ" source="_ViSh6vhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShJ_hYEeaxkoRKVpmNyQ" target="_ViShOfhYEeaxkoRKVpmNyQ" source="_ViSh7fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShKPhYEeaxkoRKVpmNyQ" target="_ViShO_hYEeaxkoRKVpmNyQ" source="_ViShOPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShKfhYEeaxkoRKVpmNyQ" target="_ViShPvhYEeaxkoRKVpmNyQ" source="_ViShOfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViShKvhYEeaxkoRKVpmNyQ" target="_ViShRfhYEeaxkoRKVpmNyQ" source="_ViShRPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShK_hYEeaxkoRKVpmNyQ" target="_ViShdfhYEeaxkoRKVpmNyQ" source="_ViShN_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShLPhYEeaxkoRKVpmNyQ" target="_ViShzfhYEeaxkoRKVpmNyQ" source="_ViShN_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShLfhYEeaxkoRKVpmNyQ" target="_ViSh0PhYEeaxkoRKVpmNyQ" source="_ViSh1_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShLvhYEeaxkoRKVpmNyQ" target="_ViShtvhYEeaxkoRKVpmNyQ" source="_ViShOPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShL_hYEeaxkoRKVpmNyQ" target="_ViShxvhYEeaxkoRKVpmNyQ" source="_ViShOfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShMPhYEeaxkoRKVpmNyQ" target="_ViShl_hYEeaxkoRKVpmNyQ" source="_ViShM_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShMfhYEeaxkoRKVpmNyQ" target="_ViShn_hYEeaxkoRKVpmNyQ" source="_ViShNPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShMvhYEeaxkoRKVpmNyQ" target="_ViShp_hYEeaxkoRKVpmNyQ" source="_ViShNfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShM_hYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(sig))" incoming="_ViShIfhYEeaxkoRKVpmNyQ" outgoing="_ViShMPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShNPhYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(terminate))" incoming="_ViShIvhYEeaxkoRKVpmNyQ" outgoing="_ViShMfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShNfhYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(arrival3))" incoming="_ViShI_hYEeaxkoRKVpmNyQ" outgoing="_ViShMvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShNvhYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(s1))" incoming="_ViShJPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShN_hYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(i))" incoming="_ViShJfhYEeaxkoRKVpmNyQ" outgoing="_ViShK_hYEeaxkoRKVpmNyQ _ViShLPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShOPhYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(counter))" incoming="_ViShJvhYEeaxkoRKVpmNyQ" outgoing="_ViShKPhYEeaxkoRKVpmNyQ _ViShLvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ViShOfhYEeaxkoRKVpmNyQ" name="Fork(ForStatement@e66bc43.loopVariable(upper))" incoming="_ViShJ_hYEeaxkoRKVpmNyQ" outgoing="_ViShKfhYEeaxkoRKVpmNyQ _ViShL_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViShOvhYEeaxkoRKVpmNyQ" name="Call(&lt;=)">
                  <argument xmi:id="_ViShO_hYEeaxkoRKVpmNyQ" name="Call(&lt;=).argument(x)" incoming="_ViShKPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShPPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShPfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViShPvhYEeaxkoRKVpmNyQ" name="Call(&lt;=).argument(y)" incoming="_ViShKfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShP_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShQPhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViShQfhYEeaxkoRKVpmNyQ" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShQvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShQ_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShRPhYEeaxkoRKVpmNyQ" name="Values(ForStatement@e66bc43)" outgoing="_ViShKvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShRfhYEeaxkoRKVpmNyQ" name="Body(ForStatement@e66bc43)" incoming="_ViShKvhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShRvhYEeaxkoRKVpmNyQ" target="_ViShTvhYEeaxkoRKVpmNyQ" source="_ViShmvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShR_hYEeaxkoRKVpmNyQ" target="_ViShUfhYEeaxkoRKVpmNyQ" source="_ViShovhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShSPhYEeaxkoRKVpmNyQ" target="_ViShVPhYEeaxkoRKVpmNyQ" source="_ViShqvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShSfhYEeaxkoRKVpmNyQ" target="_ViShV_hYEeaxkoRKVpmNyQ" source="_ViShsvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShSvhYEeaxkoRKVpmNyQ" target="_ViShk_hYEeaxkoRKVpmNyQ" source="_ViShXfhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_ViShS_hYEeaxkoRKVpmNyQ" target="_ViShZfhYEeaxkoRKVpmNyQ" source="_ViShWvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShTPhYEeaxkoRKVpmNyQ" target="_ViShr_hYEeaxkoRKVpmNyQ" source="_ViShXfhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShTfhYEeaxkoRKVpmNyQ" target="_ViShufhYEeaxkoRKVpmNyQ" source="_ViShwPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViShTvhYEeaxkoRKVpmNyQ" name="sig" incoming="_ViShRvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShT_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShUPhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_ViShUfhYEeaxkoRKVpmNyQ" name="terminate" incoming="_ViShR_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShUvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShU_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_ViShVPhYEeaxkoRKVpmNyQ" name="arrival3" incoming="_ViShSPhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShVfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShVvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_ViShV_hYEeaxkoRKVpmNyQ" name="s1" incoming="_ViShSfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShWPhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShWfhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShWvhYEeaxkoRKVpmNyQ" name="AcceptStatement@4e9ee61f" outgoing="_ViShS_hYEeaxkoRKVpmNyQ">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViShW_hYEeaxkoRKVpmNyQ" target="_ViShXvhYEeaxkoRKVpmNyQ" source="_ViShZPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShXPhYEeaxkoRKVpmNyQ" target="_ViShXfhYEeaxkoRKVpmNyQ" source="_ViShX_hYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViShXfhYEeaxkoRKVpmNyQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_ViShXPhYEeaxkoRKVpmNyQ" outgoing="_ViShSvhYEeaxkoRKVpmNyQ _ViShTPhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_ViShXvhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_ViShW_hYEeaxkoRKVpmNyQ">
                      <result xmi:id="_ViShX_hYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_ViShXPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShYPhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShYfhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <trigger xmi:id="_ViShYvhYEeaxkoRKVpmNyQ" event="_ViTvf_hYEeaxkoRKVpmNyQ"/>
                      <trigger xmi:id="_ViShY_hYEeaxkoRKVpmNyQ" event="_ViTvgPhYEeaxkoRKVpmNyQ"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_ViShZPhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_ViShW_hYEeaxkoRKVpmNyQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShZfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@71f07fe4" incoming="_ViShS_hYEeaxkoRKVpmNyQ">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViShZvhYEeaxkoRKVpmNyQ" target="_ViShc_hYEeaxkoRKVpmNyQ" source="_ViShbvhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShZ_hYEeaxkoRKVpmNyQ" target="_ViShe_hYEeaxkoRKVpmNyQ" source="_ViShePhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShaPhYEeaxkoRKVpmNyQ" target="_ViShffhYEeaxkoRKVpmNyQ" source="_ViShcPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShafhYEeaxkoRKVpmNyQ" target="_ViShg_hYEeaxkoRKVpmNyQ" source="_ViShe_hYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShavhYEeaxkoRKVpmNyQ" target="_ViShh_hYEeaxkoRKVpmNyQ" source="_ViShgPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSha_hYEeaxkoRKVpmNyQ" target="_ViShkPhYEeaxkoRKVpmNyQ" source="_ViShe_hYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShbPhYEeaxkoRKVpmNyQ" target="_ViShjfhYEeaxkoRKVpmNyQ" source="_ViShk_hYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViShbfhYEeaxkoRKVpmNyQ" target="_ViShbvhYEeaxkoRKVpmNyQ" source="_ViShlPhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShbvhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@abe6efa)" incoming="_ViShbfhYEeaxkoRKVpmNyQ" outgoing="_ViShZvhYEeaxkoRKVpmNyQ">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_ViShb_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                        <result xmi:id="_ViShcPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViShaPhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShcfhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShcvhYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShc_hYEeaxkoRKVpmNyQ" name="Index(LeftHandSide@abe6efa)" incoming="_ViShZvhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViShdPhYEeaxkoRKVpmNyQ" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_ViShdfhYEeaxkoRKVpmNyQ" name="Call(ToUnlimitedNatural).argument(x)" incoming="_ViShK_hYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShdvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShd_hYEeaxkoRKVpmNyQ" value="1"/>
                      </argument>
                      <result xmi:id="_ViShePhYEeaxkoRKVpmNyQ" name="Call(ToUnlimitedNatural).result(result)" outgoing="_ViShZ_hYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShefhYEeaxkoRKVpmNyQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShevhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViShe_hYEeaxkoRKVpmNyQ" name="Fork(Call(ToUnlimitedNatural).result(result))" incoming="_ViShZ_hYEeaxkoRKVpmNyQ" outgoing="_ViShafhYEeaxkoRKVpmNyQ _ViSha_hYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_ViShfPhYEeaxkoRKVpmNyQ" name="Remove(signals)" structuralFeature="_ViSf1fhYEeaxkoRKVpmNyQ">
                      <object xmi:id="_ViShffhYEeaxkoRKVpmNyQ" name="Remove(signals).object" incoming="_ViShaPhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShfvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShf_hYEeaxkoRKVpmNyQ" value="1"/>
                      </object>
                      <result xmi:id="_ViShgPhYEeaxkoRKVpmNyQ" name="Remove(signals).result" outgoing="_ViShavhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShgfhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShgvhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <removeAt xmi:id="_ViShg_hYEeaxkoRKVpmNyQ" name="Remove(signals).removeAt" incoming="_ViShafhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShhPhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShhfhYEeaxkoRKVpmNyQ" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViShhvhYEeaxkoRKVpmNyQ" name="Write(signals)" structuralFeature="_ViSf1fhYEeaxkoRKVpmNyQ">
                      <object xmi:id="_ViShh_hYEeaxkoRKVpmNyQ" name="Write(signals).object" incoming="_ViShavhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShiPhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShifhYEeaxkoRKVpmNyQ" value="1"/>
                      </object>
                      <result xmi:id="_ViShivhYEeaxkoRKVpmNyQ" name="Write(signals).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShi_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShjPhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <value xmi:id="_ViShjfhYEeaxkoRKVpmNyQ" name="Write(signals).value" incoming="_ViShbPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShjvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShj_hYEeaxkoRKVpmNyQ" value="1"/>
                      </value>
                      <insertAt xmi:id="_ViShkPhYEeaxkoRKVpmNyQ" name="Write(signals).insertAt" incoming="_ViSha_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShkfhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShkvhYEeaxkoRKVpmNyQ" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViShk_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@abe6efa)" incoming="_ViShSvhYEeaxkoRKVpmNyQ" outgoing="_ViShbPhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShlPhYEeaxkoRKVpmNyQ" name="RightHandSide@75c35cbf" outgoing="_ViShbfhYEeaxkoRKVpmNyQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShlfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShlvhYEeaxkoRKVpmNyQ" target="_ViShmvhYEeaxkoRKVpmNyQ" source="_ViShl_hYEeaxkoRKVpmNyQ"/>
                    <structuredNodeInput xmi:id="_ViShl_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).input" incoming="_ViShMPhYEeaxkoRKVpmNyQ" outgoing="_ViShlvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShmPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShmfhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_ViShmvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).output" incoming="_ViShlvhYEeaxkoRKVpmNyQ" outgoing="_ViShRvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShm_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShnPhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShnfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShnvhYEeaxkoRKVpmNyQ" target="_ViShovhYEeaxkoRKVpmNyQ" source="_ViShn_hYEeaxkoRKVpmNyQ"/>
                    <structuredNodeInput xmi:id="_ViShn_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).input" incoming="_ViShMfhYEeaxkoRKVpmNyQ" outgoing="_ViShnvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShoPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShofhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_ViShovhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).output" incoming="_ViShnvhYEeaxkoRKVpmNyQ" outgoing="_ViShR_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSho_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShpPhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShpfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShpvhYEeaxkoRKVpmNyQ" target="_ViShqvhYEeaxkoRKVpmNyQ" source="_ViShp_hYEeaxkoRKVpmNyQ"/>
                    <structuredNodeInput xmi:id="_ViShp_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_ViShMvhYEeaxkoRKVpmNyQ" outgoing="_ViShpvhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShqPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShqfhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_ViShqvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_ViShpvhYEeaxkoRKVpmNyQ" outgoing="_ViShSPhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShq_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShrPhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShrfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShrvhYEeaxkoRKVpmNyQ" target="_ViShsvhYEeaxkoRKVpmNyQ" source="_ViShr_hYEeaxkoRKVpmNyQ"/>
                    <structuredNodeInput xmi:id="_ViShr_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_ViShTPhYEeaxkoRKVpmNyQ" outgoing="_ViShrvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShsPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShsfhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_ViShsvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_ViShrvhYEeaxkoRKVpmNyQ" outgoing="_ViShSfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShs_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShtPhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViShtfhYEeaxkoRKVpmNyQ" name="Call(+)">
                    <argument xmi:id="_ViShtvhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_ViShLvhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSht_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShuPhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <argument xmi:id="_ViShufhYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_ViShTfhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShuvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShu_hYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <result xmi:id="_ViShvPhYEeaxkoRKVpmNyQ" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShvfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShvvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViShv_hYEeaxkoRKVpmNyQ" name="Value(1)">
                    <result xmi:id="_ViShwPhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViShTfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShwfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShwvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ViShw_hYEeaxkoRKVpmNyQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViShxPhYEeaxkoRKVpmNyQ" name="Passthru(upper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViShxfhYEeaxkoRKVpmNyQ" target="_ViShyfhYEeaxkoRKVpmNyQ" source="_ViShxvhYEeaxkoRKVpmNyQ"/>
                    <structuredNodeInput xmi:id="_ViShxvhYEeaxkoRKVpmNyQ" name="Passthru(upper).input" incoming="_ViShL_hYEeaxkoRKVpmNyQ" outgoing="_ViShxfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShx_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShyPhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_ViShyfhYEeaxkoRKVpmNyQ" name="Passthru(upper).output" incoming="_ViShxfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShyvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShy_hYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViShzPhYEeaxkoRKVpmNyQ" name="Call(+)">
                  <argument xmi:id="_ViShzfhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_ViShLPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViShzvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViShz_hYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViSh0PhYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_ViShLfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh0fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh0vhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViSh0_hYEeaxkoRKVpmNyQ" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh1PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh1fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSh1vhYEeaxkoRKVpmNyQ" name="Value(1)">
                  <result xmi:id="_ViSh1_hYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViShLfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh2PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh2fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViSh2vhYEeaxkoRKVpmNyQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <loopVariable xmi:id="_ViSh2_hYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(sig)" outgoing="_ViShIfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh3PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh3fhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_ViSh3vhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(terminate)" outgoing="_ViShIvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh3_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh4PhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_ViSh4fhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(arrival3)" outgoing="_ViShI_hYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh4vhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh4_hYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_ViSh5PhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(s1)" outgoing="_ViShJPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh5fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh5vhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_ViSh5_hYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(i)" outgoing="_ViShJfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh6PhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh6fhYEeaxkoRKVpmNyQ" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_ViSh6vhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(counter)" outgoing="_ViShJvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh6_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh7PhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_ViSh7fhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariable(upper)" outgoing="_ViShJ_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh7vhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh7_hYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_ViSh8PhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(sig)" incoming="_ViSf8PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh8fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh8vhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_ViSh8_hYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(terminate)" incoming="_ViSf8fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh9PhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh9fhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_ViSh9vhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(arrival3)" incoming="_ViSf8vhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh9_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh-PhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_ViSh-fhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(s1)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh-vhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh-_hYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_ViSh_PhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(i)" incoming="_ViShHvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSh_fhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSh_vhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_ViSh__hYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(counter)" incoming="_ViShHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiAPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiAfhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_ViSiAvhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.loopVariableInput(upper)" incoming="_ViShHfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiA_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiBPhYEeaxkoRKVpmNyQ" value="1"/>
                </loopVariableInput>
                <result xmi:id="_ViSiBfhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiBvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiB_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_ViSiCPhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiCfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiCvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_ViSiC_hYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(arrival3)" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiDPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiDfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_ViSiDvhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(s1)" outgoing="_ViShGvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiD_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiEPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_ViSiEfhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiEvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiE_hYEeaxkoRKVpmNyQ" value="*"/>
                </result>
                <result xmi:id="_ViSiFPhYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiFfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiFvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_ViSiF_hYEeaxkoRKVpmNyQ" name="ForStatement@e66bc43.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiGPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiGfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSiGvhYEeaxkoRKVpmNyQ" name="Fork(s1)" incoming="_ViShGvhYEeaxkoRKVpmNyQ" outgoing="_ViSf-PhYEeaxkoRKVpmNyQ _ViSgBPhYEeaxkoRKVpmNyQ _ViSgCfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSiG_hYEeaxkoRKVpmNyQ" name="LoopVariables(ForStatement@e66bc43)" outgoing="_ViShH_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiHPhYEeaxkoRKVpmNyQ" target="_ViSiLPhYEeaxkoRKVpmNyQ" source="_ViSiJvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiHfhYEeaxkoRKVpmNyQ" target="_ViSiL_hYEeaxkoRKVpmNyQ" source="_ViSiKvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiHvhYEeaxkoRKVpmNyQ" target="_ViSiO_hYEeaxkoRKVpmNyQ" source="_ViSiMvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiH_hYEeaxkoRKVpmNyQ" target="_ViSiPvhYEeaxkoRKVpmNyQ" source="_ViSiNvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSiIPhYEeaxkoRKVpmNyQ" name="Value(1)">
                  <result xmi:id="_ViSiIfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViShG_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiIvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiI_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViSiJPhYEeaxkoRKVpmNyQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSiJfhYEeaxkoRKVpmNyQ" name="Value(2)">
                  <result xmi:id="_ViSiJvhYEeaxkoRKVpmNyQ" name="Value(2).result" outgoing="_ViSiHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiJ_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiKPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViSiKfhYEeaxkoRKVpmNyQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViSiKvhYEeaxkoRKVpmNyQ" name="Fork(Value(1).result)" incoming="_ViShG_hYEeaxkoRKVpmNyQ" outgoing="_ViShHvhYEeaxkoRKVpmNyQ _ViSiHfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViSiK_hYEeaxkoRKVpmNyQ" name="Call(-)">
                  <argument xmi:id="_ViSiLPhYEeaxkoRKVpmNyQ" name="Call(-).argument(x)" incoming="_ViSiHPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiLfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiLvhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViSiL_hYEeaxkoRKVpmNyQ" name="Call(-).argument(y)" incoming="_ViSiHfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiMPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiMfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViSiMvhYEeaxkoRKVpmNyQ" name="Call(-).result(result)" outgoing="_ViSiHvhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiM_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiNPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSiNfhYEeaxkoRKVpmNyQ" name="Value(1)">
                  <result xmi:id="_ViSiNvhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViSiH_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiN_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiOPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViSiOfhYEeaxkoRKVpmNyQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViSiOvhYEeaxkoRKVpmNyQ" name="Call(+)">
                  <argument xmi:id="_ViSiO_hYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_ViSiHvhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiPPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiPfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViSiPvhYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_ViSiH_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiP_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiQPhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViSiQfhYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_ViShHfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiQvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiQ_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSiRPhYEeaxkoRKVpmNyQ" name="Value(1)">
                  <result xmi:id="_ViSiRfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViShHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiRvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiR_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViSiSPhYEeaxkoRKVpmNyQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_ViSiSfhYEeaxkoRKVpmNyQ" name="DoStatement@12412308" incoming="_ViSf-vhYEeaxkoRKVpmNyQ" outgoing="_ViSgCvhYEeaxkoRKVpmNyQ" bodyOutput="_ViSiafhYEeaxkoRKVpmNyQ _ViSibPhYEeaxkoRKVpmNyQ _ViSib_hYEeaxkoRKVpmNyQ _ViSicvhYEeaxkoRKVpmNyQ _ViSidfhYEeaxkoRKVpmNyQ" bodyPart="_ViSiYPhYEeaxkoRKVpmNyQ" decider="_ViSiXfhYEeaxkoRKVpmNyQ" test="_ViSiWPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiSvhYEeaxkoRKVpmNyQ" target="_ViSiU_hYEeaxkoRKVpmNyQ" source="_ViSi9PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiS_hYEeaxkoRKVpmNyQ" target="_ViSiVPhYEeaxkoRKVpmNyQ" source="_ViSi9_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiTPhYEeaxkoRKVpmNyQ" target="_ViSiVfhYEeaxkoRKVpmNyQ" source="_ViSi-vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiTfhYEeaxkoRKVpmNyQ" target="_ViSiVvhYEeaxkoRKVpmNyQ" source="_ViSi_fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiTvhYEeaxkoRKVpmNyQ" target="_ViSiV_hYEeaxkoRKVpmNyQ" source="_ViSjAPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiT_hYEeaxkoRKVpmNyQ" target="_ViSizvhYEeaxkoRKVpmNyQ" source="_ViSiU_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiUPhYEeaxkoRKVpmNyQ" target="_ViSi1vhYEeaxkoRKVpmNyQ" source="_ViSiVPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiUfhYEeaxkoRKVpmNyQ" target="_ViSi5vhYEeaxkoRKVpmNyQ" source="_ViSiVvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiUvhYEeaxkoRKVpmNyQ" target="_ViSi7vhYEeaxkoRKVpmNyQ" source="_ViSiV_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSiU_hYEeaxkoRKVpmNyQ" name="Fork(DoStatement@12412308.loopVariable(sig))" incoming="_ViSiSvhYEeaxkoRKVpmNyQ" outgoing="_ViSiT_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSiVPhYEeaxkoRKVpmNyQ" name="Fork(DoStatement@12412308.loopVariable(terminate))" incoming="_ViSiS_hYEeaxkoRKVpmNyQ" outgoing="_ViSiUPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSiVfhYEeaxkoRKVpmNyQ" name="Fork(DoStatement@12412308.loopVariable(s))" incoming="_ViSiTPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSiVvhYEeaxkoRKVpmNyQ" name="Fork(DoStatement@12412308.loopVariable(arrival3))" incoming="_ViSiTfhYEeaxkoRKVpmNyQ" outgoing="_ViSiUfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViSiV_hYEeaxkoRKVpmNyQ" name="Fork(DoStatement@12412308.loopVariable(s1))" incoming="_ViSiTvhYEeaxkoRKVpmNyQ" outgoing="_ViSiUvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSiWPhYEeaxkoRKVpmNyQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiWfhYEeaxkoRKVpmNyQ" target="_ViSiXfhYEeaxkoRKVpmNyQ" source="_ViSiWvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViSiWvhYEeaxkoRKVpmNyQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_ViSf-fhYEeaxkoRKVpmNyQ" outgoing="_ViSiWfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiW_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiXPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViSiXfhYEeaxkoRKVpmNyQ" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_ViSiWfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiXvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiX_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSiYPhYEeaxkoRKVpmNyQ" name="BodyPart(DoStatement@12412308)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiYfhYEeaxkoRKVpmNyQ" target="_ViSiafhYEeaxkoRKVpmNyQ" source="_ViSi0fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiYvhYEeaxkoRKVpmNyQ" target="_ViSibPhYEeaxkoRKVpmNyQ" source="_ViSi2fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiY_hYEeaxkoRKVpmNyQ" target="_ViSib_hYEeaxkoRKVpmNyQ" source="_ViSi4fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiZPhYEeaxkoRKVpmNyQ" target="_ViSicvhYEeaxkoRKVpmNyQ" source="_ViSi6fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiZfhYEeaxkoRKVpmNyQ" target="_ViSidfhYEeaxkoRKVpmNyQ" source="_ViSi8fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiZvhYEeaxkoRKVpmNyQ" target="_ViSievhYEeaxkoRKVpmNyQ" source="_ViSihfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViSiZ_hYEeaxkoRKVpmNyQ" target="_ViSiePhYEeaxkoRKVpmNyQ" source="_ViSigPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSiaPhYEeaxkoRKVpmNyQ" target="_ViSi3vhYEeaxkoRKVpmNyQ" source="_ViSihfhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViSiafhYEeaxkoRKVpmNyQ" name="sig" incoming="_ViSiYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiavhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSia_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_ViSibPhYEeaxkoRKVpmNyQ" name="terminate" incoming="_ViSiYvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSibfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSibvhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_ViSib_hYEeaxkoRKVpmNyQ" name="s" incoming="_ViSiY_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSicPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSicfhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_ViSicvhYEeaxkoRKVpmNyQ" name="arrival3" incoming="_ViSiZPhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSic_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSidPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_ViSidfhYEeaxkoRKVpmNyQ" name="s1" incoming="_ViSiZfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSidvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSid_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSiePhYEeaxkoRKVpmNyQ" name="Condition(DoStatement@12412308)" incoming="_ViSiZ_hYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViSiefhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_ViSfuPhYEeaxkoRKVpmNyQ" isDirect="true">
                    <object xmi:id="_ViSievhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_ViSiZvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSie_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSifPhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViSiffhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_ViSf-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSifvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSif_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSigPhYEeaxkoRKVpmNyQ" name="Body(DoStatement@12412308)" outgoing="_ViSiZ_hYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_ViSigfhYEeaxkoRKVpmNyQ" target="_ViSijfhYEeaxkoRKVpmNyQ" source="_ViSigvhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSigvhYEeaxkoRKVpmNyQ" name="AcceptStatement@25e9fd1c" outgoing="_ViSigfhYEeaxkoRKVpmNyQ">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViSig_hYEeaxkoRKVpmNyQ" target="_ViSihvhYEeaxkoRKVpmNyQ" source="_ViSijPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSihPhYEeaxkoRKVpmNyQ" target="_ViSihfhYEeaxkoRKVpmNyQ" source="_ViSih_hYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViSihfhYEeaxkoRKVpmNyQ" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_ViSihPhYEeaxkoRKVpmNyQ" outgoing="_ViSiZvhYEeaxkoRKVpmNyQ _ViSiaPhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_ViSihvhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination)" incoming="_ViSig_hYEeaxkoRKVpmNyQ">
                      <result xmi:id="_ViSih_hYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_ViSihPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiiPhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiifhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <trigger xmi:id="_ViSiivhYEeaxkoRKVpmNyQ" event="_ViTvgfhYEeaxkoRKVpmNyQ"/>
                      <trigger xmi:id="_ViSii_hYEeaxkoRKVpmNyQ" event="_ViTvgvhYEeaxkoRKVpmNyQ"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_ViSijPhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_ViSig_hYEeaxkoRKVpmNyQ"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSijfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3a332823" incoming="_ViSigfhYEeaxkoRKVpmNyQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSijvhYEeaxkoRKVpmNyQ" target="_ViSimvhYEeaxkoRKVpmNyQ" source="_ViSiofhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSij_hYEeaxkoRKVpmNyQ" target="_ViSitfhYEeaxkoRKVpmNyQ" source="_ViSis_hYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSikPhYEeaxkoRKVpmNyQ" target="_ViSivvhYEeaxkoRKVpmNyQ" source="_ViSiu_hYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSikfhYEeaxkoRKVpmNyQ" target="_ViSiwvhYEeaxkoRKVpmNyQ" source="_ViSiuPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSikvhYEeaxkoRKVpmNyQ" target="_ViSiu_hYEeaxkoRKVpmNyQ" source="_ViSinfhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViSik_hYEeaxkoRKVpmNyQ" target="_ViSitPhYEeaxkoRKVpmNyQ" source="_ViSipfhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSilPhYEeaxkoRKVpmNyQ" target="_ViSiy_hYEeaxkoRKVpmNyQ" source="_ViSisPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSilfhYEeaxkoRKVpmNyQ" target="_ViSil_hYEeaxkoRKVpmNyQ" source="_ViSiy_hYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViSilvhYEeaxkoRKVpmNyQ" name="Call(+)">
                      <argument xmi:id="_ViSil_hYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_ViSilfhYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSimPhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSimfhYEeaxkoRKVpmNyQ" value="1"/>
                      </argument>
                      <argument xmi:id="_ViSimvhYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_ViSijvhYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSim_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSinPhYEeaxkoRKVpmNyQ" value="1"/>
                      </argument>
                      <result xmi:id="_ViSinfhYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_ViSikvhYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSinvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSin_hYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSioPhYEeaxkoRKVpmNyQ" name="Value(1)">
                      <result xmi:id="_ViSiofhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViSijvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiovhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSio_hYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_ViSipPhYEeaxkoRKVpmNyQ" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSipfhYEeaxkoRKVpmNyQ" name="RightHandSide@441fa94a" outgoing="_ViSik_hYEeaxkoRKVpmNyQ">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSipvhYEeaxkoRKVpmNyQ" target="_ViSis_hYEeaxkoRKVpmNyQ" source="_ViSiqfhYEeaxkoRKVpmNyQ"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSip_hYEeaxkoRKVpmNyQ" target="_ViSirfhYEeaxkoRKVpmNyQ" source="_ViSis_hYEeaxkoRKVpmNyQ"/>
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSiqPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                        <result xmi:id="_ViSiqfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSipvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiqvhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiq_hYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViSirPhYEeaxkoRKVpmNyQ" name="Read(count)" structuralFeature="_ViSf0vhYEeaxkoRKVpmNyQ">
                        <object xmi:id="_ViSirfhYEeaxkoRKVpmNyQ" name="Read(count).object" incoming="_ViSip_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSirvhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSir_hYEeaxkoRKVpmNyQ" value="1"/>
                        </object>
                        <result xmi:id="_ViSisPhYEeaxkoRKVpmNyQ" name="Read(count).result" outgoing="_ViSilPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSisfhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSisvhYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_ViSis_hYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViSipvhYEeaxkoRKVpmNyQ" outgoing="_ViSip_hYEeaxkoRKVpmNyQ _ViSij_hYEeaxkoRKVpmNyQ"/>
                    </node>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViSitPhYEeaxkoRKVpmNyQ" name="Clear(count)" incoming="_ViSik_hYEeaxkoRKVpmNyQ" structuralFeature="_ViSf0vhYEeaxkoRKVpmNyQ">
                      <object xmi:id="_ViSitfhYEeaxkoRKVpmNyQ" name="Clear(count).object" incoming="_ViSij_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSitvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSit_hYEeaxkoRKVpmNyQ" value="1"/>
                      </object>
                      <result xmi:id="_ViSiuPhYEeaxkoRKVpmNyQ" name="Clear(count).result" outgoing="_ViSikfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiufhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiuvhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViSiu_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@441fa94a)" incoming="_ViSikvhYEeaxkoRKVpmNyQ" outgoing="_ViSikPhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSivPhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSivfhYEeaxkoRKVpmNyQ" target="_ViSiyPhYEeaxkoRKVpmNyQ" source="_ViSivvhYEeaxkoRKVpmNyQ"/>
                      <structuredNodeInput xmi:id="_ViSivvhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::count).input(MyTest::count)" incoming="_ViSikPhYEeaxkoRKVpmNyQ" outgoing="_ViSivfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiv_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiwPhYEeaxkoRKVpmNyQ" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViSiwfhYEeaxkoRKVpmNyQ" name="Write(count)" structuralFeature="_ViSf0vhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                        <object xmi:id="_ViSiwvhYEeaxkoRKVpmNyQ" name="Write(count).object" incoming="_ViSikfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiw_hYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSixPhYEeaxkoRKVpmNyQ" value="1"/>
                        </object>
                        <result xmi:id="_ViSixfhYEeaxkoRKVpmNyQ" name="Write(count).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSixvhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSix_hYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                        <value xmi:id="_ViSiyPhYEeaxkoRKVpmNyQ" name="Write(count).value" incoming="_ViSivfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiyfhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSiyvhYEeaxkoRKVpmNyQ" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViSiy_hYEeaxkoRKVpmNyQ" name="Fork(Read(count).result)" incoming="_ViSilPhYEeaxkoRKVpmNyQ" outgoing="_ViSilfhYEeaxkoRKVpmNyQ"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSizPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSizfhYEeaxkoRKVpmNyQ" target="_ViSi0fhYEeaxkoRKVpmNyQ" source="_ViSizvhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSizvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).input" incoming="_ViSiT_hYEeaxkoRKVpmNyQ" outgoing="_ViSizfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSiz_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi0PhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSi0fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).output" incoming="_ViSizfhYEeaxkoRKVpmNyQ" outgoing="_ViSiYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi0vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi0_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSi1PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSi1fhYEeaxkoRKVpmNyQ" target="_ViSi2fhYEeaxkoRKVpmNyQ" source="_ViSi1vhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSi1vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).input" incoming="_ViSiUPhYEeaxkoRKVpmNyQ" outgoing="_ViSi1fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi1_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi2PhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSi2fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).output" incoming="_ViSi1fhYEeaxkoRKVpmNyQ" outgoing="_ViSiYvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi2vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi2_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSi3PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSi3fhYEeaxkoRKVpmNyQ" target="_ViSi4fhYEeaxkoRKVpmNyQ" source="_ViSi3vhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSi3vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_ViSiaPhYEeaxkoRKVpmNyQ" outgoing="_ViSi3fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi3_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi4PhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSi4fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_ViSi3fhYEeaxkoRKVpmNyQ" outgoing="_ViSiY_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi4vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi4_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSi5PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSi5fhYEeaxkoRKVpmNyQ" target="_ViSi6fhYEeaxkoRKVpmNyQ" source="_ViSi5vhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSi5vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_ViSiUfhYEeaxkoRKVpmNyQ" outgoing="_ViSi5fhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi5_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi6PhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSi6fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_ViSi5fhYEeaxkoRKVpmNyQ" outgoing="_ViSiZPhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi6vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi6_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSi7PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSi7fhYEeaxkoRKVpmNyQ" target="_ViSi8fhYEeaxkoRKVpmNyQ" source="_ViSi7vhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSi7vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1)).input" incoming="_ViSiUvhYEeaxkoRKVpmNyQ" outgoing="_ViSi7fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi7_hYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi8PhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ViSi8fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1)).output" incoming="_ViSi7fhYEeaxkoRKVpmNyQ" outgoing="_ViSiZfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi8vhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi8_hYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_ViSi9PhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariable(sig)" outgoing="_ViSiSvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi9fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi9vhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_ViSi9_hYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariable(terminate)" outgoing="_ViSiS_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi-PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi-fhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_ViSi-vhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariable(s)" outgoing="_ViSiTPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi-_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi_PhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_ViSi_fhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariable(arrival3)" outgoing="_ViSiTfhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSi_vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSi__hYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_ViSjAPhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariable(s1)" outgoing="_ViSiTvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjAfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjAvhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_ViSjA_hYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariableInput(sig)" incoming="_ViSf9PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjBPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjBfhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_ViSjBvhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariableInput(terminate)" incoming="_ViSf9fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjB_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjCPhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_ViSjCfhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjCvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjC_hYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_ViSjDPhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariableInput(arrival3)" incoming="_ViSf9_hYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjDfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjDvhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_ViSjD_hYEeaxkoRKVpmNyQ" name="DoStatement@12412308.loopVariableInput(s1)" incoming="_ViSf-PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjEPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjEfhYEeaxkoRKVpmNyQ" value="1"/>
              </loopVariableInput>
              <result xmi:id="_ViSjEvhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjE_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjFPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViSjFfhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjFvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjF_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViSjGPhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.result(s)" outgoing="_ViSf9vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjGfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjGvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViSjG_hYEeaxkoRKVpmNyQ" name="DoStatement@12412308.result(arrival3)" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjHPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjHfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViSjHvhYEeaxkoRKVpmNyQ" name="DoStatement@12412308.result(s1)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjH_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjIPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViSjIfhYEeaxkoRKVpmNyQ" name="Fork(s)" incoming="_ViSf9vhYEeaxkoRKVpmNyQ" outgoing="_ViSgAvhYEeaxkoRKVpmNyQ _ViSgB_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_ViSjIvhYEeaxkoRKVpmNyQ" name="IfStatement@663f1de1" incoming="_ViSgCvhYEeaxkoRKVpmNyQ" outgoing="_ViSgC_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSjI_hYEeaxkoRKVpmNyQ" target="_ViSjL_hYEeaxkoRKVpmNyQ" source="_ViSjKvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViSjJPhYEeaxkoRKVpmNyQ" target="_ViTGwvhYEeaxkoRKVpmNyQ" source="_ViTGvfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViSjJfhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_ViSjJvhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjJ_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjKPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ViSjKfhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSjKvhYEeaxkoRKVpmNyQ" name="AcceptStatement@27550035" outgoing="_ViSjI_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViSjK_hYEeaxkoRKVpmNyQ" target="_ViSjLPhYEeaxkoRKVpmNyQ" source="_ViSjLvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_ViSjLPhYEeaxkoRKVpmNyQ" name="Accept(SignalNewArrival)" incoming="_ViSjK_hYEeaxkoRKVpmNyQ">
                  <trigger xmi:id="_ViSjLfhYEeaxkoRKVpmNyQ" event="_ViTvg_hYEeaxkoRKVpmNyQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ViSjLvhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalNewArrival))" outgoing="_ViSjK_hYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSjL_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@57e4315f" incoming="_ViSjI_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSjMPhYEeaxkoRKVpmNyQ" target="_ViSjO_hYEeaxkoRKVpmNyQ" source="_ViSjN_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSjMfhYEeaxkoRKVpmNyQ" target="_ViSjRPhYEeaxkoRKVpmNyQ" source="_ViSjQfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSjMvhYEeaxkoRKVpmNyQ" target="_ViTGgfhYEeaxkoRKVpmNyQ" source="_ViSjPvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSjM_hYEeaxkoRKVpmNyQ" target="_ViSjQfhYEeaxkoRKVpmNyQ" source="_ViTGjPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViSjNPhYEeaxkoRKVpmNyQ" target="_ViSjNfhYEeaxkoRKVpmNyQ" source="_ViTGivhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSjNfhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@1f46a2ac)" incoming="_ViSjNPhYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_ViSjNvhYEeaxkoRKVpmNyQ" name="ReadSelf">
                    <result xmi:id="_ViSjN_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViSjMPhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjOPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjOfhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViSjOvhYEeaxkoRKVpmNyQ" name="Clear(flag)" structuralFeature="_ViSf2PhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViSjO_hYEeaxkoRKVpmNyQ" name="Clear(flag).object" incoming="_ViSjMPhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjPPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjPfhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViSjPvhYEeaxkoRKVpmNyQ" name="Clear(flag).result" outgoing="_ViSjMvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjP_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjQPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViSjQfhYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@1f46a2ac)" incoming="_ViSjM_hYEeaxkoRKVpmNyQ" outgoing="_ViSjMfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViSjQvhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViSjQ_hYEeaxkoRKVpmNyQ" target="_ViTGh_hYEeaxkoRKVpmNyQ" source="_ViSjRPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViSjRPhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_ViSjMfhYEeaxkoRKVpmNyQ" outgoing="_ViSjQ_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViSjRfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViSjRvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTGgPhYEeaxkoRKVpmNyQ" name="Write(flag)" structuralFeature="_ViSf2PhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                    <object xmi:id="_ViTGgfhYEeaxkoRKVpmNyQ" name="Write(flag).object" incoming="_ViSjMvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGgvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGg_hYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTGhPhYEeaxkoRKVpmNyQ" name="Write(flag).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGhfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGhvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:id="_ViTGh_hYEeaxkoRKVpmNyQ" name="Write(flag).value" incoming="_ViSjQ_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGiPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGifhYEeaxkoRKVpmNyQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGivhYEeaxkoRKVpmNyQ" name="RightHandSide@17235d9" outgoing="_ViSjNPhYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTGi_hYEeaxkoRKVpmNyQ" name="Value(true)">
                    <result xmi:id="_ViTGjPhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViSjM_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGjfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGjvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTGj_hYEeaxkoRKVpmNyQ" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGkPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGkfhYEeaxkoRKVpmNyQ" target="_ViTGlfhYEeaxkoRKVpmNyQ" source="_ViTGkvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTGkvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).input" incoming="_ViSgAPhYEeaxkoRKVpmNyQ" outgoing="_ViTGkfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGk_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGlPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTGlfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).output" incoming="_ViTGkfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGlvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGl_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGmPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGmfhYEeaxkoRKVpmNyQ" target="_ViTGnfhYEeaxkoRKVpmNyQ" source="_ViTGmvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTGmvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).input" incoming="_ViSgAfhYEeaxkoRKVpmNyQ" outgoing="_ViTGmfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGm_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGnPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTGnfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).output" incoming="_ViTGmfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGnvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGn_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGoPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGofhYEeaxkoRKVpmNyQ" target="_ViTGpfhYEeaxkoRKVpmNyQ" source="_ViTGovhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTGovhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).input" incoming="_ViSgAvhYEeaxkoRKVpmNyQ" outgoing="_ViTGofhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGo_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGpPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTGpfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).output" incoming="_ViTGofhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGpvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGp_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGqPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGqfhYEeaxkoRKVpmNyQ" target="_ViTGrfhYEeaxkoRKVpmNyQ" source="_ViTGqvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTGqvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_ViSgA_hYEeaxkoRKVpmNyQ" outgoing="_ViTGqfhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGq_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGrPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTGrfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_ViTGqfhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGrvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGr_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGsPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGsfhYEeaxkoRKVpmNyQ" target="_ViTGtfhYEeaxkoRKVpmNyQ" source="_ViTGsvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTGsvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1)).input" incoming="_ViSgBPhYEeaxkoRKVpmNyQ" outgoing="_ViTGsfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGs_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGtPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTGtfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1)).output" incoming="_ViTGsfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGtvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGt_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTGuPhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_ViTGufhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGuvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGu_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTGvPhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGvfhYEeaxkoRKVpmNyQ" name="AcceptStatement@3169ba33" outgoing="_ViSjJPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTGvvhYEeaxkoRKVpmNyQ" target="_ViTGv_hYEeaxkoRKVpmNyQ" source="_ViTGwfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_ViTGv_hYEeaxkoRKVpmNyQ" name="Accept(SignalTermination)" incoming="_ViTGvvhYEeaxkoRKVpmNyQ">
                  <trigger xmi:id="_ViTGwPhYEeaxkoRKVpmNyQ" event="_ViTvhPhYEeaxkoRKVpmNyQ"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ViTGwfhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalTermination))" outgoing="_ViTGvvhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGwvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@785e5350" incoming="_ViSjJPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGw_hYEeaxkoRKVpmNyQ" target="_ViTGzvhYEeaxkoRKVpmNyQ" source="_ViTGyvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGxPhYEeaxkoRKVpmNyQ" target="_ViTG1_hYEeaxkoRKVpmNyQ" source="_ViTG1PhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGxfhYEeaxkoRKVpmNyQ" target="_ViTG2_hYEeaxkoRKVpmNyQ" source="_ViTG0fhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTGxvhYEeaxkoRKVpmNyQ" target="_ViTG1PhYEeaxkoRKVpmNyQ" source="_ViTG5vhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTGx_hYEeaxkoRKVpmNyQ" target="_ViTGyPhYEeaxkoRKVpmNyQ" source="_ViTG5PhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTGyPhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@78140fd3)" incoming="_ViTGx_hYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTGyfhYEeaxkoRKVpmNyQ" name="ReadSelf">
                    <result xmi:id="_ViTGyvhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTGw_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGy_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTGzPhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViTGzfhYEeaxkoRKVpmNyQ" name="Clear(flag)" structuralFeature="_ViSf2PhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTGzvhYEeaxkoRKVpmNyQ" name="Clear(flag).object" incoming="_ViTGw_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTGz_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG0PhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTG0fhYEeaxkoRKVpmNyQ" name="Clear(flag).result" outgoing="_ViTGxfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG0vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG0_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTG1PhYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@78140fd3)" incoming="_ViTGxvhYEeaxkoRKVpmNyQ" outgoing="_ViTGxPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTG1fhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTG1vhYEeaxkoRKVpmNyQ" target="_ViTG4fhYEeaxkoRKVpmNyQ" source="_ViTG1_hYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViTG1_hYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_ViTGxPhYEeaxkoRKVpmNyQ" outgoing="_ViTG1vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG2PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG2fhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTG2vhYEeaxkoRKVpmNyQ" name="Write(flag)" structuralFeature="_ViSf2PhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                    <object xmi:id="_ViTG2_hYEeaxkoRKVpmNyQ" name="Write(flag).object" incoming="_ViTGxfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG3PhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG3fhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTG3vhYEeaxkoRKVpmNyQ" name="Write(flag).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG3_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG4PhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:id="_ViTG4fhYEeaxkoRKVpmNyQ" name="Write(flag).value" incoming="_ViTG1vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG4vhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG4_hYEeaxkoRKVpmNyQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTG5PhYEeaxkoRKVpmNyQ" name="RightHandSide@25d1c5c3" outgoing="_ViTGx_hYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTG5fhYEeaxkoRKVpmNyQ" name="Value(false)">
                    <result xmi:id="_ViTG5vhYEeaxkoRKVpmNyQ" name="Value(false).result" outgoing="_ViTGxvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG5_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG6PhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTG6fhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTG6vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTG6_hYEeaxkoRKVpmNyQ" target="_ViTG7_hYEeaxkoRKVpmNyQ" source="_ViTG7PhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTG7PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).input" incoming="_ViSgBfhYEeaxkoRKVpmNyQ" outgoing="_ViTG6_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG7fhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG7vhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTG7_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(sig)).output" incoming="_ViTG6_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG8PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG8fhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTG8vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTG8_hYEeaxkoRKVpmNyQ" target="_ViTG9_hYEeaxkoRKVpmNyQ" source="_ViTG9PhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTG9PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).input" incoming="_ViSgBvhYEeaxkoRKVpmNyQ" outgoing="_ViTG8_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG9fhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG9vhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTG9_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(terminate)).output" incoming="_ViTG8_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG-PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG-fhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTG-vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTG-_hYEeaxkoRKVpmNyQ" target="_ViTG__hYEeaxkoRKVpmNyQ" source="_ViTG_PhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTG_PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).input" incoming="_ViSgB_hYEeaxkoRKVpmNyQ" outgoing="_ViTG-_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTG_fhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTG_vhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTG__hYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).output" incoming="_ViTG-_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHAPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHAfhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHAvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHA_hYEeaxkoRKVpmNyQ" target="_ViTHB_hYEeaxkoRKVpmNyQ" source="_ViTHBPhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTHBPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_ViSgCPhYEeaxkoRKVpmNyQ" outgoing="_ViTHA_hYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHBfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHBvhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTHB_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_ViTHA_hYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHCPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHCfhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHCvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHC_hYEeaxkoRKVpmNyQ" target="_ViTHD_hYEeaxkoRKVpmNyQ" source="_ViTHDPhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTHDPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1)).input" incoming="_ViSgCfhYEeaxkoRKVpmNyQ" outgoing="_ViTHC_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHDfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHDvhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ViTHD_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(s1)).output" incoming="_ViTHC_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHEPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHEfhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_ViTHEvhYEeaxkoRKVpmNyQ" body="_ViSjKvhYEeaxkoRKVpmNyQ _ViSjL_hYEeaxkoRKVpmNyQ _ViTGkPhYEeaxkoRKVpmNyQ _ViTGmPhYEeaxkoRKVpmNyQ _ViTGoPhYEeaxkoRKVpmNyQ _ViTGqPhYEeaxkoRKVpmNyQ _ViTGsPhYEeaxkoRKVpmNyQ" bodyOutput="_ViTGlfhYEeaxkoRKVpmNyQ _ViTGnfhYEeaxkoRKVpmNyQ _ViTGpfhYEeaxkoRKVpmNyQ _ViTGrfhYEeaxkoRKVpmNyQ _ViTGtfhYEeaxkoRKVpmNyQ" decider="_ViSjJvhYEeaxkoRKVpmNyQ" successorClause="_ViTHE_hYEeaxkoRKVpmNyQ" test="_ViSjJfhYEeaxkoRKVpmNyQ"/>
              <clause xmi:id="_ViTHE_hYEeaxkoRKVpmNyQ" body="_ViTGvfhYEeaxkoRKVpmNyQ _ViTGwvhYEeaxkoRKVpmNyQ _ViTG6vhYEeaxkoRKVpmNyQ _ViTG8vhYEeaxkoRKVpmNyQ _ViTG-vhYEeaxkoRKVpmNyQ _ViTHAvhYEeaxkoRKVpmNyQ _ViTHCvhYEeaxkoRKVpmNyQ" bodyOutput="_ViTG7_hYEeaxkoRKVpmNyQ _ViTG9_hYEeaxkoRKVpmNyQ _ViTG__hYEeaxkoRKVpmNyQ _ViTHB_hYEeaxkoRKVpmNyQ _ViTHD_hYEeaxkoRKVpmNyQ" decider="_ViTGufhYEeaxkoRKVpmNyQ" predecessorClause="_ViTHEvhYEeaxkoRKVpmNyQ" test="_ViTGuPhYEeaxkoRKVpmNyQ"/>
              <result xmi:id="_ViTHFPhYEeaxkoRKVpmNyQ" name="IfStatement@663f1de1.result(sig)" outgoing="_ViSf-_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHFfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHFvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViTHF_hYEeaxkoRKVpmNyQ" name="IfStatement@663f1de1.result(terminate)" outgoing="_ViSf_PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHGPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHGfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViTHGvhYEeaxkoRKVpmNyQ" name="IfStatement@663f1de1.result(s)" outgoing="_ViSf_fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHG_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHHPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViTHHfhYEeaxkoRKVpmNyQ" name="IfStatement@663f1de1.result(arrival3)" outgoing="_ViSf_vhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHHvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHH_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <result xmi:id="_ViTHIPhYEeaxkoRKVpmNyQ" name="IfStatement@663f1de1.result(s1)" outgoing="_ViSf__hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHIfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHIvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHI_hYEeaxkoRKVpmNyQ" name="Fork(sig)" incoming="_ViSf-_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHJPhYEeaxkoRKVpmNyQ" name="Fork(terminate)" incoming="_ViSf_PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHJfhYEeaxkoRKVpmNyQ" name="Fork(s)" incoming="_ViSf_fhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHJvhYEeaxkoRKVpmNyQ" name="Fork(arrival3)" incoming="_ViSf_vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHJ_hYEeaxkoRKVpmNyQ" name="Fork(s1)" incoming="_ViSf__hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHKPhYEeaxkoRKVpmNyQ" name="AcceptStatement@36288378" incoming="_ViSgC_hYEeaxkoRKVpmNyQ" outgoing="_ViSgDfhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHKfhYEeaxkoRKVpmNyQ" target="_ViTHLPhYEeaxkoRKVpmNyQ" source="_ViTHMfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHKvhYEeaxkoRKVpmNyQ" target="_ViTHK_hYEeaxkoRKVpmNyQ" source="_ViTHLfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTHK_hYEeaxkoRKVpmNyQ" name="Fork(Accept(SignalTermination).result)" incoming="_ViTHKvhYEeaxkoRKVpmNyQ" outgoing="_ViSgDPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViTHLPhYEeaxkoRKVpmNyQ" name="Accept(SignalTermination)" incoming="_ViTHKfhYEeaxkoRKVpmNyQ">
                <result xmi:id="_ViTHLfhYEeaxkoRKVpmNyQ" name="Accept(SignalTermination).result" outgoing="_ViTHKvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHLvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHL_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <trigger xmi:id="_ViTHMPhYEeaxkoRKVpmNyQ" event="_ViTvhfhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViTHMfhYEeaxkoRKVpmNyQ" name="Initial(Accept(SignalTermination))" outgoing="_ViTHKfhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHMvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@12de8379" incoming="_ViSgDfhYEeaxkoRKVpmNyQ" outgoing="_ViSgDvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHM_hYEeaxkoRKVpmNyQ" target="_ViTHPfhYEeaxkoRKVpmNyQ" source="_ViTHOfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHNPhYEeaxkoRKVpmNyQ" target="_ViTHRvhYEeaxkoRKVpmNyQ" source="_ViTHQ_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHNfhYEeaxkoRKVpmNyQ" target="_ViTHSvhYEeaxkoRKVpmNyQ" source="_ViTHQPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHNvhYEeaxkoRKVpmNyQ" target="_ViTHN_hYEeaxkoRKVpmNyQ" source="_ViTHU_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHN_hYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@4163c2ee)" incoming="_ViTHNvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTHOPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                  <result xmi:id="_ViTHOfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTHM_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHOvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHO_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViTHPPhYEeaxkoRKVpmNyQ" name="Clear(sig1)" structuralFeature="_ViSfxvhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViTHPfhYEeaxkoRKVpmNyQ" name="Clear(sig1).object" incoming="_ViTHM_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHPvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHP_hYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViTHQPhYEeaxkoRKVpmNyQ" name="Clear(sig1).result" outgoing="_ViTHNfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHQfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHQvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTHQ_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@4163c2ee)" incoming="_ViSgDPhYEeaxkoRKVpmNyQ" outgoing="_ViTHNPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHRPhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHRfhYEeaxkoRKVpmNyQ" target="_ViTHUPhYEeaxkoRKVpmNyQ" source="_ViTHRvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTHRvhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::sig1).input(MyTest::sig1)" incoming="_ViTHNPhYEeaxkoRKVpmNyQ" outgoing="_ViTHRfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHR_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHSPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTHSfhYEeaxkoRKVpmNyQ" name="Write(sig1)" structuralFeature="_ViSfxvhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViTHSvhYEeaxkoRKVpmNyQ" name="Write(sig1).object" incoming="_ViTHNfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHS_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHTPhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTHTfhYEeaxkoRKVpmNyQ" name="Write(sig1).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHTvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHT_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViTHUPhYEeaxkoRKVpmNyQ" name="Write(sig1).value" incoming="_ViTHRfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHUfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHUvhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHU_hYEeaxkoRKVpmNyQ" name="RightHandSide@e6f02a4" outgoing="_ViTHNvhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHVPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@5d3f6678" incoming="_ViSgDvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHVfhYEeaxkoRKVpmNyQ" target="_ViTHWfhYEeaxkoRKVpmNyQ" source="_ViTHZPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHVvhYEeaxkoRKVpmNyQ" target="_ViTHZ_hYEeaxkoRKVpmNyQ" source="_ViTHXfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHV_hYEeaxkoRKVpmNyQ" target="_ViTHYfhYEeaxkoRKVpmNyQ" source="_ViTHZ_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTHWPhYEeaxkoRKVpmNyQ" name="SendSignal(Continue)" signal="_ViTvdvhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTHWfhYEeaxkoRKVpmNyQ" name="SendSignal(Continue).target" incoming="_ViTHVfhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHWvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHW_hYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTHXPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_ViTHXfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTHVvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHXvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHX_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTHYPhYEeaxkoRKVpmNyQ" name="Read(tester)" structuralFeature="_ViSf2_hYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViTHYfhYEeaxkoRKVpmNyQ" name="Read(tester).object" incoming="_ViTHV_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHYvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHY_hYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViTHZPhYEeaxkoRKVpmNyQ" name="Read(tester).result" outgoing="_ViTHVfhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHZfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHZvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTHZ_hYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTHVvhYEeaxkoRKVpmNyQ" outgoing="_ViTHV_hYEeaxkoRKVpmNyQ"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTHaPhYEeaxkoRKVpmNyQ" name="MyTest$method$1" specification="_ViTIMvhYEeaxkoRKVpmNyQ" node="_ViTHdPhYEeaxkoRKVpmNyQ _ViTHd_hYEeaxkoRKVpmNyQ _ViTHdfhYEeaxkoRKVpmNyQ _ViTHffhYEeaxkoRKVpmNyQ _ViTHdvhYEeaxkoRKVpmNyQ" group="_ViTHd_hYEeaxkoRKVpmNyQ _ViTHffhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTHafhYEeaxkoRKVpmNyQ" name="tester" type="_ViTIPvhYEeaxkoRKVpmNyQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHavhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHa_hYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ViTHbPhYEeaxkoRKVpmNyQ" name="" type="_ViSfvvhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHbfhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHbvhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHb_hYEeaxkoRKVpmNyQ" target="_ViTHefhYEeaxkoRKVpmNyQ" source="_ViTHdPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHcPhYEeaxkoRKVpmNyQ" target="_ViTHm_hYEeaxkoRKVpmNyQ" source="_ViTHfPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHcfhYEeaxkoRKVpmNyQ" target="_ViTHdfhYEeaxkoRKVpmNyQ" source="_ViTHsPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHcvhYEeaxkoRKVpmNyQ" target="_ViTHdvhYEeaxkoRKVpmNyQ" source="_ViTHd_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHc_hYEeaxkoRKVpmNyQ" target="_ViTHffhYEeaxkoRKVpmNyQ" source="_ViTHdvhYEeaxkoRKVpmNyQ"/>
          <structuredNode xmi:id="_ViTHd_hYEeaxkoRKVpmNyQ" name="Node(Input(tester))" outgoing="_ViTHcvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHePhYEeaxkoRKVpmNyQ" target="_ViTHfPhYEeaxkoRKVpmNyQ" source="_ViTHefhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViTHefhYEeaxkoRKVpmNyQ" name="Input(tester)" incoming="_ViTHb_hYEeaxkoRKVpmNyQ" outgoing="_ViTHePhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHevhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHe_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHfPhYEeaxkoRKVpmNyQ" name="Fork(tester)" incoming="_ViTHePhYEeaxkoRKVpmNyQ" outgoing="_ViTHcPhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <structuredNode xmi:id="_ViTHffhYEeaxkoRKVpmNyQ" name="Body(MyTest$method$1)" incoming="_ViTHc_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHfvhYEeaxkoRKVpmNyQ" target="_ViTHsPhYEeaxkoRKVpmNyQ" source="_ViTHrfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHf_hYEeaxkoRKVpmNyQ" target="_ViTHsvhYEeaxkoRKVpmNyQ" source="_ViTHsPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHgPhYEeaxkoRKVpmNyQ" target="_ViTHifhYEeaxkoRKVpmNyQ" source="_ViTHsfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHgfhYEeaxkoRKVpmNyQ" target="_ViTHtvhYEeaxkoRKVpmNyQ" source="_ViTHsPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHgvhYEeaxkoRKVpmNyQ" target="_ViTHvfhYEeaxkoRKVpmNyQ" source="_ViTHufhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHg_hYEeaxkoRKVpmNyQ" target="_ViTHyfhYEeaxkoRKVpmNyQ" source="_ViTHwPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHhPhYEeaxkoRKVpmNyQ" target="_ViTHz_hYEeaxkoRKVpmNyQ" source="_ViTHxPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHhfhYEeaxkoRKVpmNyQ" target="_ViTH0_hYEeaxkoRKVpmNyQ" source="_ViTH0vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHhvhYEeaxkoRKVpmNyQ" target="_ViTH0_hYEeaxkoRKVpmNyQ" source="_ViTHzPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHh_hYEeaxkoRKVpmNyQ" target="_ViTHsfhYEeaxkoRKVpmNyQ" source="_ViTH0_hYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTHiPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHifhYEeaxkoRKVpmNyQ" name="Body" incoming="_ViTHgPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHivhYEeaxkoRKVpmNyQ" name="ExpressionStatement@32ab0230">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHi_hYEeaxkoRKVpmNyQ" target="_ViTHlfhYEeaxkoRKVpmNyQ" source="_ViTHkfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHjPhYEeaxkoRKVpmNyQ" target="_ViTHnvhYEeaxkoRKVpmNyQ" source="_ViTHm_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHjfhYEeaxkoRKVpmNyQ" target="_ViTHovhYEeaxkoRKVpmNyQ" source="_ViTHmPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTHjvhYEeaxkoRKVpmNyQ" target="_ViTHj_hYEeaxkoRKVpmNyQ" source="_ViTHq_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHj_hYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@3a051cf0)" incoming="_ViTHjvhYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTHkPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                    <result xmi:id="_ViTHkfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTHi_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHkvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHk_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViTHlPhYEeaxkoRKVpmNyQ" name="Clear(tester)" structuralFeature="_ViSf2_hYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTHlfhYEeaxkoRKVpmNyQ" name="Clear(tester).object" incoming="_ViTHi_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHlvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHl_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTHmPhYEeaxkoRKVpmNyQ" name="Clear(tester).result" outgoing="_ViTHjfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHmfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHmvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTHm_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@3a051cf0)" incoming="_ViTHcPhYEeaxkoRKVpmNyQ" outgoing="_ViTHjPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHnPhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTHnfhYEeaxkoRKVpmNyQ" target="_ViTHqPhYEeaxkoRKVpmNyQ" source="_ViTHnvhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViTHnvhYEeaxkoRKVpmNyQ" name="WriteAll(MyTest::tester).input(MyTest::tester)" incoming="_ViTHjPhYEeaxkoRKVpmNyQ" outgoing="_ViTHnfhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHn_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHoPhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTHofhYEeaxkoRKVpmNyQ" name="Write(tester)" structuralFeature="_ViSf2_hYEeaxkoRKVpmNyQ" isReplaceAll="true">
                    <object xmi:id="_ViTHovhYEeaxkoRKVpmNyQ" name="Write(tester).object" incoming="_ViTHjfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHo_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHpPhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTHpfhYEeaxkoRKVpmNyQ" name="Write(tester).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHpvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHp_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:id="_ViTHqPhYEeaxkoRKVpmNyQ" name="Write(tester).value" incoming="_ViTHnfhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHqfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHqvhYEeaxkoRKVpmNyQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTHq_hYEeaxkoRKVpmNyQ" name="RightHandSide@1a8ac27e" outgoing="_ViTHjvhYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTHrPhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViTHrfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTHfvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHrvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHr_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTHsPhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTHfvhYEeaxkoRKVpmNyQ" outgoing="_ViTHcfhYEeaxkoRKVpmNyQ _ViTHf_hYEeaxkoRKVpmNyQ _ViTHgfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ViTHsfhYEeaxkoRKVpmNyQ" name="Call(MyTest$initialization$1)" incoming="_ViTHh_hYEeaxkoRKVpmNyQ" outgoing="_ViTHgPhYEeaxkoRKVpmNyQ" operation="_ViTIMfhYEeaxkoRKVpmNyQ">
              <target xmi:id="_ViTHsvhYEeaxkoRKVpmNyQ" name="Call(MyTest$initialization$1).target" incoming="_ViTHf_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHs_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHtPhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTHtfhYEeaxkoRKVpmNyQ" name="Read(MyTest$initializationFlag$1)" structuralFeature="_ViSfwPhYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViTHtvhYEeaxkoRKVpmNyQ" name="Read(MyTest$initializationFlag$1).object" incoming="_ViTHgfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHt_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHuPhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViTHufhYEeaxkoRKVpmNyQ" name="Read(MyTest$initializationFlag$1).result" outgoing="_ViTHgvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHuvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHu_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTHvPhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViTHvfhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTHgvhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHvvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHv_hYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViTHwPhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTHg_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHwfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHwvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTHw_hYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViTHxPhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTHhPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHxfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHxvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViTHx_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTHyPhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViTHyfhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTHg_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHyvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHy_hYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViTHzPhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTHhvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTHzfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTHzvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViTHz_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTHhPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH0PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTH0fhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViTH0vhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTHhfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViTH0_hYEeaxkoRKVpmNyQ" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_ViTHhfhYEeaxkoRKVpmNyQ _ViTHhvhYEeaxkoRKVpmNyQ" outgoing="_ViTHh_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTHhvhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTHdPhYEeaxkoRKVpmNyQ" name="Input(tester)" outgoing="_ViTHb_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" parameter="_ViTHafhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTHdfhYEeaxkoRKVpmNyQ" name="Return" incoming="_ViTHcfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" parameter="_ViTHbPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:JoinNode" xmi:id="_ViTHdvhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViTHcvhYEeaxkoRKVpmNyQ" outgoing="_ViTHc_hYEeaxkoRKVpmNyQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTH1PhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_ViTIOfhYEeaxkoRKVpmNyQ" node="_ViTH1fhYEeaxkoRKVpmNyQ" group="_ViTH1fhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTH1fhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTH1vhYEeaxkoRKVpmNyQ" name="MyTest$initialization$1" specification="_ViTIMfhYEeaxkoRKVpmNyQ" node="_ViTH1_hYEeaxkoRKVpmNyQ" group="_ViTH1_hYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTH1_hYEeaxkoRKVpmNyQ" name="Body(MyTest$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH2PhYEeaxkoRKVpmNyQ" target="_ViTH6PhYEeaxkoRKVpmNyQ" source="_ViTH5fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH2fhYEeaxkoRKVpmNyQ" target="_ViTH7fhYEeaxkoRKVpmNyQ" source="_ViTH6PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH2vhYEeaxkoRKVpmNyQ" target="_ViTH-PhYEeaxkoRKVpmNyQ" source="_ViTH6PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH2_hYEeaxkoRKVpmNyQ" target="_ViTICfhYEeaxkoRKVpmNyQ" source="_ViTH6PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH3PhYEeaxkoRKVpmNyQ" target="_ViTIE_hYEeaxkoRKVpmNyQ" source="_ViTH6PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH3fhYEeaxkoRKVpmNyQ" target="_ViTIGvhYEeaxkoRKVpmNyQ" source="_ViTIFvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH3vhYEeaxkoRKVpmNyQ" target="_ViTIJvhYEeaxkoRKVpmNyQ" source="_ViTIHfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH3_hYEeaxkoRKVpmNyQ" target="_ViTILPhYEeaxkoRKVpmNyQ" source="_ViTIIfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTH4PhYEeaxkoRKVpmNyQ" target="_ViTIMPhYEeaxkoRKVpmNyQ" source="_ViTIL_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH4fhYEeaxkoRKVpmNyQ" target="_ViTIMPhYEeaxkoRKVpmNyQ" source="_ViTIKfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTH4vhYEeaxkoRKVpmNyQ" target="_ViTH6fhYEeaxkoRKVpmNyQ" source="_ViTIMPhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTH4_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTH5PhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViTH5fhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTH2PhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH5vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTH5_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTH6PhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTH2PhYEeaxkoRKVpmNyQ" outgoing="_ViTH2fhYEeaxkoRKVpmNyQ _ViTH2vhYEeaxkoRKVpmNyQ _ViTH2_hYEeaxkoRKVpmNyQ _ViTH3PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTH6fhYEeaxkoRKVpmNyQ" name="Initialization" incoming="_ViTH4vhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTH6vhYEeaxkoRKVpmNyQ" target="_ViTH8PhYEeaxkoRKVpmNyQ" source="_ViTH7PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTH6_hYEeaxkoRKVpmNyQ" target="_ViTIAfhYEeaxkoRKVpmNyQ" source="_ViTH8PhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ViTH7PhYEeaxkoRKVpmNyQ" name="Call(Super$initialization$1)" outgoing="_ViTH6vhYEeaxkoRKVpmNyQ" operation="_ViSfsvhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTH7fhYEeaxkoRKVpmNyQ" name="Call(Super$initialization$1).target" incoming="_ViTH2fhYEeaxkoRKVpmNyQ" type="_ViR5c_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH7vhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTH7_hYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTH8PhYEeaxkoRKVpmNyQ" name="Initialize(count)" incoming="_ViTH6vhYEeaxkoRKVpmNyQ" outgoing="_ViTH6_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTH8fhYEeaxkoRKVpmNyQ" target="_ViTH_vhYEeaxkoRKVpmNyQ" source="_ViTH8_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTH8vhYEeaxkoRKVpmNyQ" name="Value(0)">
                  <result xmi:id="_ViTH8_hYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTH8fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH9PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTH9fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViTH9vhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTH9_hYEeaxkoRKVpmNyQ" name="Write(count)" structuralFeature="_ViSf0vhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViTH-PhYEeaxkoRKVpmNyQ" name="Write(count).object" incoming="_ViTH2vhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH-fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTH-vhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTH-_hYEeaxkoRKVpmNyQ" name="Write(count).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH_PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTH_fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViTH_vhYEeaxkoRKVpmNyQ" name="Write(count).value" incoming="_ViTH8fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTH__hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIAPhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIAfhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)" incoming="_ViTH6_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIAvhYEeaxkoRKVpmNyQ" target="_ViTID_hYEeaxkoRKVpmNyQ" source="_ViTIBPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTIA_hYEeaxkoRKVpmNyQ" name="Value(true)">
                  <result xmi:id="_ViTIBPhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViTIAvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIBfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIBvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTIB_hYEeaxkoRKVpmNyQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTICPhYEeaxkoRKVpmNyQ" name="Write(MyTest$initializationFlag$1)" structuralFeature="_ViSfwPhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViTICfhYEeaxkoRKVpmNyQ" name="Write(MyTest$initializationFlag$1).object" incoming="_ViTH2_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTICvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIC_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTIDPhYEeaxkoRKVpmNyQ" name="Write(MyTest$initializationFlag$1).result" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIDfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIDvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViTID_hYEeaxkoRKVpmNyQ" name="Write(MyTest$initializationFlag$1).value" incoming="_ViTIAvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIEPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIEfhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTIEvhYEeaxkoRKVpmNyQ" name="Read(MyTest$initializationFlag$1)" structuralFeature="_ViSfwPhYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViTIE_hYEeaxkoRKVpmNyQ" name="Read(MyTest$initializationFlag$1).object" incoming="_ViTH3PhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIFPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIFfhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViTIFvhYEeaxkoRKVpmNyQ" name="Read(MyTest$initializationFlag$1).result" outgoing="_ViTH3fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIF_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIGPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTIGfhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViTIGvhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTH3fhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIG_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIHPhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViTIHfhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTH3vhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIHvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIH_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTIIPhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViTIIfhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTH3_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIIvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTII_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViTIJPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTIJfhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViTIJvhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTH3vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIJ_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIKPhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViTIKfhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTH4fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIKvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIK_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViTILPhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTH3_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTILfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTILvhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViTIL_hYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTH4PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViTIMPhYEeaxkoRKVpmNyQ" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_ViTH4PhYEeaxkoRKVpmNyQ _ViTH4fhYEeaxkoRKVpmNyQ" outgoing="_ViTH4vhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTH4fhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_ViTIMfhYEeaxkoRKVpmNyQ" name="MyTest$initialization$1" visibility="protected" method="_ViTH1vhYEeaxkoRKVpmNyQ"/>
        <ownedOperation xmi:id="_ViTIMvhYEeaxkoRKVpmNyQ" name="MyTest" visibility="public" method="_ViTHaPhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTIM_hYEeaxkoRKVpmNyQ" name="tester" visibility="package" type="_ViTIPvhYEeaxkoRKVpmNyQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTINPhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTINfhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ViTINvhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViSfvvhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIN_hYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIOPhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ViTIOfhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_ViTH1PhYEeaxkoRKVpmNyQ" redefinedOperation="_ViSft_hYEeaxkoRKVpmNyQ"/>
        <ownedReception xmi:id="_ViTIOvhYEeaxkoRKVpmNyQ" name="SignalNewArrival" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTIO_hYEeaxkoRKVpmNyQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIPPhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIPfhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedReception>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ViTIPvhYEeaxkoRKVpmNyQ" name="TestRunner" visibility="public" classifierBehavior="_ViTIRfhYEeaxkoRKVpmNyQ" isActive="true">
        <ownedAttribute xmi:id="_ViTIP_hYEeaxkoRKVpmNyQ" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIQPhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIQfhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ViTIQvhYEeaxkoRKVpmNyQ" name="outer" visibility="private" type="_ViTviPhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIQ_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIRPhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTIRfhYEeaxkoRKVpmNyQ" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_ViTIRvhYEeaxkoRKVpmNyQ" group="_ViTIRvhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTIRvhYEeaxkoRKVpmNyQ" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIR_hYEeaxkoRKVpmNyQ" target="_ViTIYfhYEeaxkoRKVpmNyQ" source="_ViTIXPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTISPhYEeaxkoRKVpmNyQ" target="_ViTIcPhYEeaxkoRKVpmNyQ" source="_ViTIYfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTISfhYEeaxkoRKVpmNyQ" target="_ViTIj_hYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTISvhYEeaxkoRKVpmNyQ" target="_ViTIdfhYEeaxkoRKVpmNyQ" source="_ViTIcPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIS_hYEeaxkoRKVpmNyQ" target="_ViTItPhYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTITPhYEeaxkoRKVpmNyQ" target="_ViTIl_hYEeaxkoRKVpmNyQ" source="_ViTIdfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTITfhYEeaxkoRKVpmNyQ" target="_ViTI0_hYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTITvhYEeaxkoRKVpmNyQ" target="_ViTIuvhYEeaxkoRKVpmNyQ" source="_ViTIl_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIT_hYEeaxkoRKVpmNyQ" target="_ViTI8_hYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIUPhYEeaxkoRKVpmNyQ" target="_ViTI1PhYEeaxkoRKVpmNyQ" source="_ViTIuvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIUfhYEeaxkoRKVpmNyQ" target="_ViTJOPhYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIUvhYEeaxkoRKVpmNyQ" target="_ViTJAfhYEeaxkoRKVpmNyQ" source="_ViTI1PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIU_hYEeaxkoRKVpmNyQ" target="_ViTJm_hYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIVPhYEeaxkoRKVpmNyQ" target="_ViTJZPhYEeaxkoRKVpmNyQ" source="_ViTJAfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIVfhYEeaxkoRKVpmNyQ" target="_ViTJ5PhYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIVvhYEeaxkoRKVpmNyQ" target="_ViTJx_hYEeaxkoRKVpmNyQ" source="_ViTJZPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIV_hYEeaxkoRKVpmNyQ" target="_ViTtn_hYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIWPhYEeaxkoRKVpmNyQ" target="_ViTJ6vhYEeaxkoRKVpmNyQ" source="_ViTJx_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIWfhYEeaxkoRKVpmNyQ" target="_ViTtuvhYEeaxkoRKVpmNyQ" source="_ViTIb_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIWvhYEeaxkoRKVpmNyQ" target="_ViTtoPhYEeaxkoRKVpmNyQ" source="_ViTJ6vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIW_hYEeaxkoRKVpmNyQ" target="_ViTtwvhYEeaxkoRKVpmNyQ" source="_ViTtoPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIXPhYEeaxkoRKVpmNyQ" name="AcceptStatement@158822be" outgoing="_ViTIR_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIXfhYEeaxkoRKVpmNyQ" target="_ViTIXvhYEeaxkoRKVpmNyQ" source="_ViTIYPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViTIXvhYEeaxkoRKVpmNyQ" name="Accept(Start)" incoming="_ViTIXfhYEeaxkoRKVpmNyQ">
                <trigger xmi:id="_ViTIX_hYEeaxkoRKVpmNyQ" event="_ViTvhvhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViTIYPhYEeaxkoRKVpmNyQ" name="Initial(Accept(Start))" outgoing="_ViTIXfhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIYfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@578eab52" incoming="_ViTIR_hYEeaxkoRKVpmNyQ" outgoing="_ViTISPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIYvhYEeaxkoRKVpmNyQ" target="_ViTIb_hYEeaxkoRKVpmNyQ" source="_ViTIZfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIY_hYEeaxkoRKVpmNyQ" target="_ViTIaPhYEeaxkoRKVpmNyQ" source="_ViTIbPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ViTIZPhYEeaxkoRKVpmNyQ" name="Call(run)" operation="_ViTvcPhYEeaxkoRKVpmNyQ">
                <result xmi:id="_ViTIZfhYEeaxkoRKVpmNyQ" name="Call(run).result(test)" outgoing="_ViTIYvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIZvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIZ_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <target xmi:id="_ViTIaPhYEeaxkoRKVpmNyQ" name="Call(run).target" incoming="_ViTIY_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIafhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIavhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTIa_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_ViTIbPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTIY_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIbfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIbvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTIb_hYEeaxkoRKVpmNyQ" name="Fork(test)@743996ae" incoming="_ViTIYvhYEeaxkoRKVpmNyQ" outgoing="_ViTISfhYEeaxkoRKVpmNyQ _ViTIS_hYEeaxkoRKVpmNyQ _ViTITfhYEeaxkoRKVpmNyQ _ViTIT_hYEeaxkoRKVpmNyQ _ViTIUfhYEeaxkoRKVpmNyQ _ViTIU_hYEeaxkoRKVpmNyQ _ViTIVfhYEeaxkoRKVpmNyQ _ViTIV_hYEeaxkoRKVpmNyQ _ViTIWfhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIcPhYEeaxkoRKVpmNyQ" name="AcceptStatement@4196c60e" incoming="_ViTISPhYEeaxkoRKVpmNyQ" outgoing="_ViTISvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIcfhYEeaxkoRKVpmNyQ" target="_ViTIcvhYEeaxkoRKVpmNyQ" source="_ViTIdPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_ViTIcvhYEeaxkoRKVpmNyQ" name="Accept(Continue)" incoming="_ViTIcfhYEeaxkoRKVpmNyQ">
                <trigger xmi:id="_ViTIc_hYEeaxkoRKVpmNyQ" event="_ViTvh_hYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViTIdPhYEeaxkoRKVpmNyQ" name="Initial(Accept(Continue))" outgoing="_ViTIcfhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIdfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3fef860e" incoming="_ViTISvhYEeaxkoRKVpmNyQ" outgoing="_ViTITPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIdvhYEeaxkoRKVpmNyQ" target="_ViTIevhYEeaxkoRKVpmNyQ" source="_ViTIhPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTId_hYEeaxkoRKVpmNyQ" target="_ViTIffhYEeaxkoRKVpmNyQ" source="_ViTIlPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIePhYEeaxkoRKVpmNyQ" target="_ViTIefhYEeaxkoRKVpmNyQ" source="_ViTIgPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTIefhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_ViTIePhYEeaxkoRKVpmNyQ" behavior="_ViUUuvhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTIevhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_ViTIdvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIe_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIfPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTIffhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_ViTId_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIfvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIf_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIgPhYEeaxkoRKVpmNyQ" name="Tuple@119f6951" outgoing="_ViTIePhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIgfhYEeaxkoRKVpmNyQ" target="_ViTIifhYEeaxkoRKVpmNyQ" source="_ViTIj_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIgvhYEeaxkoRKVpmNyQ" target="_ViTIkfhYEeaxkoRKVpmNyQ" source="_ViTIjPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTIg_hYEeaxkoRKVpmNyQ" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_ViTIhPhYEeaxkoRKVpmNyQ" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_ViTIdvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIhfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIhvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTIh_hYEeaxkoRKVpmNyQ" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTIiPhYEeaxkoRKVpmNyQ" name="Read(sig)" structuralFeature="_ViSfw_hYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTIifhYEeaxkoRKVpmNyQ" name="Read(sig).object" incoming="_ViTIgfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIivhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIi_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTIjPhYEeaxkoRKVpmNyQ" name="Read(sig).result" outgoing="_ViTIgvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIjfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIjvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTIj_hYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTISfhYEeaxkoRKVpmNyQ" outgoing="_ViTIgfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViTIkPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_ViSfvPhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTIkfhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_ViTIgvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIkvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIk_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTIlPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_ViTId_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIlfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIlvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIl_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@66d4454" incoming="_ViTITPhYEeaxkoRKVpmNyQ" outgoing="_ViTITvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTImPhYEeaxkoRKVpmNyQ" target="_ViTInfhYEeaxkoRKVpmNyQ" source="_ViTIqfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTImfhYEeaxkoRKVpmNyQ" target="_ViTIoPhYEeaxkoRKVpmNyQ" source="_ViTIsfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTImvhYEeaxkoRKVpmNyQ" target="_ViTIo_hYEeaxkoRKVpmNyQ" source="_ViTItvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIm_hYEeaxkoRKVpmNyQ" target="_ViTInPhYEeaxkoRKVpmNyQ" source="_ViTIpvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTInPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_ViTIm_hYEeaxkoRKVpmNyQ" behavior="_ViUVX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTInfhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_ViTImPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTInvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIn_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTIoPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_ViTImfhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIofhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIovhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTIo_hYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_ViTImvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIpPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIpfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIpvhYEeaxkoRKVpmNyQ" name="Tuple@529148d" outgoing="_ViTIm_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIp_hYEeaxkoRKVpmNyQ" target="_ViTIrvhYEeaxkoRKVpmNyQ" source="_ViTItPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTIqPhYEeaxkoRKVpmNyQ" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_ViTIqfhYEeaxkoRKVpmNyQ" name="Value(&quot;test.name&quot;).result" outgoing="_ViTImPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIqvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIq_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTIrPhYEeaxkoRKVpmNyQ" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTIrfhYEeaxkoRKVpmNyQ" name="Read(name)" structuralFeature="_ViSfyfhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTIrvhYEeaxkoRKVpmNyQ" name="Read(name).object" incoming="_ViTIp_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIr_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIsPhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTIsfhYEeaxkoRKVpmNyQ" name="Read(name).result" outgoing="_ViTImfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIsvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIs_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTItPhYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIS_hYEeaxkoRKVpmNyQ" outgoing="_ViTIp_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTItfhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_ViTItvhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival1&quot;).result" outgoing="_ViTImvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIt_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIuPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTIufhYEeaxkoRKVpmNyQ" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIuvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@bc146a3" incoming="_ViTITvhYEeaxkoRKVpmNyQ" outgoing="_ViTIUPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIu_hYEeaxkoRKVpmNyQ" target="_ViTIv_hYEeaxkoRKVpmNyQ" source="_ViTIyPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIvPhYEeaxkoRKVpmNyQ" target="_ViTIwvhYEeaxkoRKVpmNyQ" source="_ViTI0PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTIvfhYEeaxkoRKVpmNyQ" target="_ViTIvvhYEeaxkoRKVpmNyQ" source="_ViTIxfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTIvvhYEeaxkoRKVpmNyQ" name="Call(AssertFalse)" incoming="_ViTIvfhYEeaxkoRKVpmNyQ" behavior="_ViU7vfhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTIv_hYEeaxkoRKVpmNyQ" name="Call(AssertFalse).argument(label)" incoming="_ViTIu_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIwPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIwfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTIwvhYEeaxkoRKVpmNyQ" name="Call(AssertFalse).argument(condition)" incoming="_ViTIvPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIw_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIxPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTIxfhYEeaxkoRKVpmNyQ" name="Tuple@14d57a65" outgoing="_ViTIvfhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTIxvhYEeaxkoRKVpmNyQ" target="_ViTIzfhYEeaxkoRKVpmNyQ" source="_ViTI0_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTIx_hYEeaxkoRKVpmNyQ" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_ViTIyPhYEeaxkoRKVpmNyQ" name="Value(&quot;test.terminate&quot;).result" outgoing="_ViTIu_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIyfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIyvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTIy_hYEeaxkoRKVpmNyQ" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTIzPhYEeaxkoRKVpmNyQ" name="Read(terminate)" structuralFeature="_ViSfzPhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTIzfhYEeaxkoRKVpmNyQ" name="Read(terminate).object" incoming="_ViTIxvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTIzvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTIz_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTI0PhYEeaxkoRKVpmNyQ" name="Read(terminate).result" outgoing="_ViTIvPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI0fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI0vhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTI0_hYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTITfhYEeaxkoRKVpmNyQ" outgoing="_ViTIxvhYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTI1PhYEeaxkoRKVpmNyQ" name="ExpressionStatement@744586b9" incoming="_ViTIUPhYEeaxkoRKVpmNyQ" outgoing="_ViTIUvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTI1fhYEeaxkoRKVpmNyQ" target="_ViTI2vhYEeaxkoRKVpmNyQ" source="_ViTI6PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTI1vhYEeaxkoRKVpmNyQ" target="_ViTI3fhYEeaxkoRKVpmNyQ" source="_ViTI-PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTI1_hYEeaxkoRKVpmNyQ" target="_ViTI4PhYEeaxkoRKVpmNyQ" source="_ViTI_fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTI2PhYEeaxkoRKVpmNyQ" target="_ViTI2fhYEeaxkoRKVpmNyQ" source="_ViTI4_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTI2fhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_ViTI2PhYEeaxkoRKVpmNyQ" behavior="_ViUVX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTI2vhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_ViTI1fhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI2_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI3PhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTI3fhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_ViTI1vhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI3vhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI3_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTI4PhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_ViTI1_hYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI4fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI4vhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTI4_hYEeaxkoRKVpmNyQ" name="Tuple@ead5642" outgoing="_ViTI2PhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTI5PhYEeaxkoRKVpmNyQ" target="_ViTI7fhYEeaxkoRKVpmNyQ" source="_ViTI8_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTI5fhYEeaxkoRKVpmNyQ" target="_ViTI-_hYEeaxkoRKVpmNyQ" source="_ViTI8PhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTI5vhYEeaxkoRKVpmNyQ" target="_ViTI9fhYEeaxkoRKVpmNyQ" source="_ViTI-_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTI5_hYEeaxkoRKVpmNyQ" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_ViTI6PhYEeaxkoRKVpmNyQ" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_ViTI1fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI6fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI6vhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTI6_hYEeaxkoRKVpmNyQ" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTI7PhYEeaxkoRKVpmNyQ" name="Read(arrival)" structuralFeature="_ViSfz_hYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTI7fhYEeaxkoRKVpmNyQ" name="Read(arrival).object" incoming="_ViTI5PhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI7vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI7_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTI8PhYEeaxkoRKVpmNyQ" name="Read(arrival).result" outgoing="_ViTI5fhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI8fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI8vhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTI8_hYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIT_hYEeaxkoRKVpmNyQ" outgoing="_ViTI5PhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTI9PhYEeaxkoRKVpmNyQ" name="Read(name)" structuralFeature="_ViSfufhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTI9fhYEeaxkoRKVpmNyQ" name="Read(name).object" incoming="_ViTI5vhYEeaxkoRKVpmNyQ" type="_ViSfuPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI9vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI9_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTI-PhYEeaxkoRKVpmNyQ" name="Read(name).result" outgoing="_ViTI1vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI-fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI-vhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTI-_hYEeaxkoRKVpmNyQ" name="Fork(Read(arrival).result)" incoming="_ViTI5fhYEeaxkoRKVpmNyQ" outgoing="_ViTI5vhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTI_PhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_ViTI_fhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival3&quot;).result" outgoing="_ViTI1_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTI_vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTI__hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTJAPhYEeaxkoRKVpmNyQ" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJAfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@2fb51138" incoming="_ViTIUvhYEeaxkoRKVpmNyQ" outgoing="_ViTIVPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJAvhYEeaxkoRKVpmNyQ" target="_ViTJBvhYEeaxkoRKVpmNyQ" source="_ViTJGfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJA_hYEeaxkoRKVpmNyQ" target="_ViTJCfhYEeaxkoRKVpmNyQ" source="_ViTJY_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJBPhYEeaxkoRKVpmNyQ" target="_ViTJBfhYEeaxkoRKVpmNyQ" source="_ViTJDPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJBfhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_ViTJBPhYEeaxkoRKVpmNyQ" behavior="_ViUUuvhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTJBvhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_ViTJAvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJB_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJCPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTJCfhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_ViTJA_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJCvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJC_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJDPhYEeaxkoRKVpmNyQ" name="Tuple@6da91be0" outgoing="_ViTJBPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJDfhYEeaxkoRKVpmNyQ" target="_ViTJRfhYEeaxkoRKVpmNyQ" source="_ViTJH_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJDvhYEeaxkoRKVpmNyQ" target="_ViTJRPhYEeaxkoRKVpmNyQ" source="_ViTJHfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJD_hYEeaxkoRKVpmNyQ" target="_ViTJUfhYEeaxkoRKVpmNyQ" source="_ViTJH_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJEPhYEeaxkoRKVpmNyQ" target="_ViTJYvhYEeaxkoRKVpmNyQ" source="_ViTJYfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJEfhYEeaxkoRKVpmNyQ" target="_ViTJYvhYEeaxkoRKVpmNyQ" source="_ViTJSPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJEvhYEeaxkoRKVpmNyQ" target="_ViTJS_hYEeaxkoRKVpmNyQ" source="_ViTJYvhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTJE_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJFPhYEeaxkoRKVpmNyQ" target="_ViTJV_hYEeaxkoRKVpmNyQ" source="_ViTJYvhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTJFfhYEeaxkoRKVpmNyQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJFvhYEeaxkoRKVpmNyQ" target="_ViTJY_hYEeaxkoRKVpmNyQ" source="_ViTJTfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJF_hYEeaxkoRKVpmNyQ" target="_ViTJY_hYEeaxkoRKVpmNyQ" source="_ViTJWfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJGPhYEeaxkoRKVpmNyQ" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_ViTJGfhYEeaxkoRKVpmNyQ" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_ViTJAvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJGvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJG_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTJHPhYEeaxkoRKVpmNyQ" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJHfhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@38cf85a4)" outgoing="_ViTJDvhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJHvhYEeaxkoRKVpmNyQ" target="_ViTJH_hYEeaxkoRKVpmNyQ" source="_ViTJLPhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_ViTJH_hYEeaxkoRKVpmNyQ" name="Fork(x)@30d00089" incoming="_ViTJHvhYEeaxkoRKVpmNyQ" outgoing="_ViTJDfhYEeaxkoRKVpmNyQ _ViTJD_hYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJIPhYEeaxkoRKVpmNyQ" name="RightHandSide@76563c22">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJIfhYEeaxkoRKVpmNyQ" target="_ViTJJvhYEeaxkoRKVpmNyQ" source="_ViTJNfhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJIvhYEeaxkoRKVpmNyQ" target="_ViTJPvhYEeaxkoRKVpmNyQ" source="_ViTJOvhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJI_hYEeaxkoRKVpmNyQ" target="_ViTJJfhYEeaxkoRKVpmNyQ" source="_ViTJL_hYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJJPhYEeaxkoRKVpmNyQ" target="_ViTJKfhYEeaxkoRKVpmNyQ" source="_ViTJPvhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJJfhYEeaxkoRKVpmNyQ" name="Call(At)" incoming="_ViTJI_hYEeaxkoRKVpmNyQ">
                      <argument xmi:id="_ViTJJvhYEeaxkoRKVpmNyQ" name="Call(At).argument(seq)" incoming="_ViTJIfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJJ_hYEeaxkoRKVpmNyQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJKPhYEeaxkoRKVpmNyQ" value="*"/>
                      </argument>
                      <argument xmi:id="_ViTJKfhYEeaxkoRKVpmNyQ" name="Call(At).argument(index)" incoming="_ViTJJPhYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJKvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJK_hYEeaxkoRKVpmNyQ" value="1"/>
                      </argument>
                      <result xmi:id="_ViTJLPhYEeaxkoRKVpmNyQ" name="Call(At).result()" outgoing="_ViTJHvhYEeaxkoRKVpmNyQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJLfhYEeaxkoRKVpmNyQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJLvhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJL_hYEeaxkoRKVpmNyQ" name="Tuple@1759722c" outgoing="_ViTJI_hYEeaxkoRKVpmNyQ">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJMPhYEeaxkoRKVpmNyQ" target="_ViTJMvhYEeaxkoRKVpmNyQ" source="_ViTJOPhYEeaxkoRKVpmNyQ"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTJMfhYEeaxkoRKVpmNyQ" name="Read(signals)" structuralFeature="_ViSf1fhYEeaxkoRKVpmNyQ">
                        <object xmi:id="_ViTJMvhYEeaxkoRKVpmNyQ" name="Read(signals).object" incoming="_ViTJMPhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJM_hYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJNPhYEeaxkoRKVpmNyQ" value="1"/>
                        </object>
                        <result xmi:id="_ViTJNfhYEeaxkoRKVpmNyQ" name="Read(signals).result" outgoing="_ViTJIfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJNvhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJN_hYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_ViTJOPhYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIUfhYEeaxkoRKVpmNyQ" outgoing="_ViTJMPhYEeaxkoRKVpmNyQ"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJOfhYEeaxkoRKVpmNyQ" name="Value(1)">
                        <result xmi:id="_ViTJOvhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViTJIvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJO_hYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJPPhYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_ViTJPfhYEeaxkoRKVpmNyQ" value="1">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViTJPvhYEeaxkoRKVpmNyQ" name="Fork(Call(At).argument(index))" incoming="_ViTJIvhYEeaxkoRKVpmNyQ" outgoing="_ViTJJPhYEeaxkoRKVpmNyQ"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJP_hYEeaxkoRKVpmNyQ" name="Value(null)">
                    <result xmi:id="_ViTJQPhYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJQfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJQvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_ViTJQ_hYEeaxkoRKVpmNyQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJRPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_ViTJDvhYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_ViTJRfhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViTJDfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJRvhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJR_hYEeaxkoRKVpmNyQ" value="*"/>
                  </argument>
                  <result xmi:id="_ViTJSPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViTJEfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJSfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJSvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJS_hYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@2f23f3a1.operand2" incoming="_ViTJEvhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJTPhYEeaxkoRKVpmNyQ" target="_ViTJTfhYEeaxkoRKVpmNyQ" source="_ViTJVPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViTJTfhYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@2f23f3a1.operand2.result" incoming="_ViTJTPhYEeaxkoRKVpmNyQ" outgoing="_ViTJFvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJTvhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJT_hYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViTJUPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_ViSfuPhYEeaxkoRKVpmNyQ" isDirect="true">
                    <object xmi:id="_ViTJUfhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_ViTJD_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJUvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJU_hYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTJVPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_ViTJTPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJVfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJVvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJV_hYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@2f23f3a1.operand3" incoming="_ViTJFPhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJWPhYEeaxkoRKVpmNyQ" target="_ViTJWfhYEeaxkoRKVpmNyQ" source="_ViTJXfhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViTJWfhYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@2f23f3a1.operand3.result" incoming="_ViTJWPhYEeaxkoRKVpmNyQ" outgoing="_ViTJF_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJWvhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJW_hYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJXPhYEeaxkoRKVpmNyQ" name="Value(false)">
                    <result xmi:id="_ViTJXfhYEeaxkoRKVpmNyQ" name="Value(false).result" outgoing="_ViTJWPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJXvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJX_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTJYPhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ViTJYfhYEeaxkoRKVpmNyQ" name="Initial(ConditionalLogicalExpression@2f23f3a1)" outgoing="_ViTJEPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ViTJYvhYEeaxkoRKVpmNyQ" name="Decision(ConditionalLogicalExpression@2f23f3a1)" incoming="_ViTJEPhYEeaxkoRKVpmNyQ _ViTJEfhYEeaxkoRKVpmNyQ" outgoing="_ViTJEvhYEeaxkoRKVpmNyQ _ViTJFPhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTJEfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ViTJY_hYEeaxkoRKVpmNyQ" name="Merge(ConditionalLogicalExpression@2f23f3a1.result)" incoming="_ViTJFvhYEeaxkoRKVpmNyQ _ViTJF_hYEeaxkoRKVpmNyQ" outgoing="_ViTJA_hYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJZPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@334a6e1d" incoming="_ViTIVPhYEeaxkoRKVpmNyQ" outgoing="_ViTIVvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJZfhYEeaxkoRKVpmNyQ" target="_ViTJafhYEeaxkoRKVpmNyQ" source="_ViTJfPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJZvhYEeaxkoRKVpmNyQ" target="_ViTJbPhYEeaxkoRKVpmNyQ" source="_ViTJxvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJZ_hYEeaxkoRKVpmNyQ" target="_ViTJaPhYEeaxkoRKVpmNyQ" source="_ViTJb_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJaPhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_ViTJZ_hYEeaxkoRKVpmNyQ" behavior="_ViUUuvhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTJafhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_ViTJZfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJavhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJa_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTJbPhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_ViTJZvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJbfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJbvhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJb_hYEeaxkoRKVpmNyQ" name="Tuple@5c5c1d6c" outgoing="_ViTJZ_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJcPhYEeaxkoRKVpmNyQ" target="_ViTJqPhYEeaxkoRKVpmNyQ" source="_ViTJgvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJcfhYEeaxkoRKVpmNyQ" target="_ViTJp_hYEeaxkoRKVpmNyQ" source="_ViTJgPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJcvhYEeaxkoRKVpmNyQ" target="_ViTJtPhYEeaxkoRKVpmNyQ" source="_ViTJgvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJc_hYEeaxkoRKVpmNyQ" target="_ViTJxfhYEeaxkoRKVpmNyQ" source="_ViTJxPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJdPhYEeaxkoRKVpmNyQ" target="_ViTJxfhYEeaxkoRKVpmNyQ" source="_ViTJq_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJdfhYEeaxkoRKVpmNyQ" target="_ViTJrvhYEeaxkoRKVpmNyQ" source="_ViTJxfhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTJdvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJd_hYEeaxkoRKVpmNyQ" target="_ViTJuvhYEeaxkoRKVpmNyQ" source="_ViTJxfhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTJePhYEeaxkoRKVpmNyQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJefhYEeaxkoRKVpmNyQ" target="_ViTJxvhYEeaxkoRKVpmNyQ" source="_ViTJsPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJevhYEeaxkoRKVpmNyQ" target="_ViTJxvhYEeaxkoRKVpmNyQ" source="_ViTJvPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJe_hYEeaxkoRKVpmNyQ" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_ViTJfPhYEeaxkoRKVpmNyQ" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_ViTJZfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJffhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJfvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTJf_hYEeaxkoRKVpmNyQ" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJgPhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@7ee769ca)" outgoing="_ViTJcfhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJgfhYEeaxkoRKVpmNyQ" target="_ViTJgvhYEeaxkoRKVpmNyQ" source="_ViTJj_hYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_ViTJgvhYEeaxkoRKVpmNyQ" name="Fork(x)@15a5164c" incoming="_ViTJgfhYEeaxkoRKVpmNyQ" outgoing="_ViTJcPhYEeaxkoRKVpmNyQ _ViTJcvhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJg_hYEeaxkoRKVpmNyQ" name="RightHandSide@39ea5d23">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJhPhYEeaxkoRKVpmNyQ" target="_ViTJifhYEeaxkoRKVpmNyQ" source="_ViTJmPhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJhfhYEeaxkoRKVpmNyQ" target="_ViTJofhYEeaxkoRKVpmNyQ" source="_ViTJnfhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJhvhYEeaxkoRKVpmNyQ" target="_ViTJiPhYEeaxkoRKVpmNyQ" source="_ViTJkvhYEeaxkoRKVpmNyQ"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJh_hYEeaxkoRKVpmNyQ" target="_ViTJjPhYEeaxkoRKVpmNyQ" source="_ViTJofhYEeaxkoRKVpmNyQ"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJiPhYEeaxkoRKVpmNyQ" name="Call(At)" incoming="_ViTJhvhYEeaxkoRKVpmNyQ">
                      <argument xmi:id="_ViTJifhYEeaxkoRKVpmNyQ" name="Call(At).argument(seq)" incoming="_ViTJhPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJivhYEeaxkoRKVpmNyQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJi_hYEeaxkoRKVpmNyQ" value="*"/>
                      </argument>
                      <argument xmi:id="_ViTJjPhYEeaxkoRKVpmNyQ" name="Call(At).argument(index)" incoming="_ViTJh_hYEeaxkoRKVpmNyQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJjfhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJjvhYEeaxkoRKVpmNyQ" value="1"/>
                      </argument>
                      <result xmi:id="_ViTJj_hYEeaxkoRKVpmNyQ" name="Call(At).result()" outgoing="_ViTJgfhYEeaxkoRKVpmNyQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJkPhYEeaxkoRKVpmNyQ"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJkfhYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJkvhYEeaxkoRKVpmNyQ" name="Tuple@1b429b3c" outgoing="_ViTJhvhYEeaxkoRKVpmNyQ">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJk_hYEeaxkoRKVpmNyQ" target="_ViTJlfhYEeaxkoRKVpmNyQ" source="_ViTJm_hYEeaxkoRKVpmNyQ"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTJlPhYEeaxkoRKVpmNyQ" name="Read(signals)" structuralFeature="_ViSf1fhYEeaxkoRKVpmNyQ">
                        <object xmi:id="_ViTJlfhYEeaxkoRKVpmNyQ" name="Read(signals).object" incoming="_ViTJk_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJlvhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJl_hYEeaxkoRKVpmNyQ" value="1"/>
                        </object>
                        <result xmi:id="_ViTJmPhYEeaxkoRKVpmNyQ" name="Read(signals).result" outgoing="_ViTJhPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJmfhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJmvhYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_ViTJm_hYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIU_hYEeaxkoRKVpmNyQ" outgoing="_ViTJk_hYEeaxkoRKVpmNyQ"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJnPhYEeaxkoRKVpmNyQ" name="Value(2)">
                        <result xmi:id="_ViTJnfhYEeaxkoRKVpmNyQ" name="Value(2).result" outgoing="_ViTJhfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJnvhYEeaxkoRKVpmNyQ" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJn_hYEeaxkoRKVpmNyQ" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_ViTJoPhYEeaxkoRKVpmNyQ" value="2">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ViTJofhYEeaxkoRKVpmNyQ" name="Fork(Call(At).argument(index))" incoming="_ViTJhfhYEeaxkoRKVpmNyQ" outgoing="_ViTJh_hYEeaxkoRKVpmNyQ"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJovhYEeaxkoRKVpmNyQ" name="Value(null)">
                    <result xmi:id="_ViTJo_hYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJpPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJpfhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_ViTJpvhYEeaxkoRKVpmNyQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJp_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_ViTJcfhYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_ViTJqPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViTJcPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJqfhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJqvhYEeaxkoRKVpmNyQ" value="*"/>
                  </argument>
                  <result xmi:id="_ViTJq_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViTJdPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJrPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJrfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJrvhYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@71ca5028.operand2" incoming="_ViTJdfhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJr_hYEeaxkoRKVpmNyQ" target="_ViTJsPhYEeaxkoRKVpmNyQ" source="_ViTJt_hYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViTJsPhYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@71ca5028.operand2.result" incoming="_ViTJr_hYEeaxkoRKVpmNyQ" outgoing="_ViTJefhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJsfhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJsvhYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViTJs_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_ViSfvPhYEeaxkoRKVpmNyQ" isDirect="true">
                    <object xmi:id="_ViTJtPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_ViTJcvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJtfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJtvhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTJt_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_ViTJr_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJuPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJufhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJuvhYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@71ca5028.operand3" incoming="_ViTJd_hYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJu_hYEeaxkoRKVpmNyQ" target="_ViTJvPhYEeaxkoRKVpmNyQ" source="_ViTJwPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViTJvPhYEeaxkoRKVpmNyQ" name="ConditionalLogicalExpression@71ca5028.operand3.result" incoming="_ViTJu_hYEeaxkoRKVpmNyQ" outgoing="_ViTJevhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJvfhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJvvhYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJv_hYEeaxkoRKVpmNyQ" name="Value(false)">
                    <result xmi:id="_ViTJwPhYEeaxkoRKVpmNyQ" name="Value(false).result" outgoing="_ViTJu_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJwfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJwvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTJw_hYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ViTJxPhYEeaxkoRKVpmNyQ" name="Initial(ConditionalLogicalExpression@71ca5028)" outgoing="_ViTJc_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ViTJxfhYEeaxkoRKVpmNyQ" name="Decision(ConditionalLogicalExpression@71ca5028)" incoming="_ViTJc_hYEeaxkoRKVpmNyQ _ViTJdPhYEeaxkoRKVpmNyQ" outgoing="_ViTJdfhYEeaxkoRKVpmNyQ _ViTJd_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTJdPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ViTJxvhYEeaxkoRKVpmNyQ" name="Merge(ConditionalLogicalExpression@71ca5028.result)" incoming="_ViTJefhYEeaxkoRKVpmNyQ _ViTJevhYEeaxkoRKVpmNyQ" outgoing="_ViTJZvhYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJx_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@298c60e2" incoming="_ViTIVvhYEeaxkoRKVpmNyQ" outgoing="_ViTIWPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJyPhYEeaxkoRKVpmNyQ" target="_ViTJzfhYEeaxkoRKVpmNyQ" source="_ViTJ2fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJyfhYEeaxkoRKVpmNyQ" target="_ViTJ0PhYEeaxkoRKVpmNyQ" source="_ViTJ4fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJyvhYEeaxkoRKVpmNyQ" target="_ViTJ0_hYEeaxkoRKVpmNyQ" source="_ViTJ5vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJy_hYEeaxkoRKVpmNyQ" target="_ViTJzPhYEeaxkoRKVpmNyQ" source="_ViTJ1vhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJzPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_ViTJy_hYEeaxkoRKVpmNyQ" behavior="_ViUVX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTJzfhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_ViTJyPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJzvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJz_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTJ0PhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_ViTJyfhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ0fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ0vhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTJ0_hYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_ViTJyvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ1PhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ1fhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJ1vhYEeaxkoRKVpmNyQ" name="Tuple@5d159637" outgoing="_ViTJy_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJ1_hYEeaxkoRKVpmNyQ" target="_ViTJ3vhYEeaxkoRKVpmNyQ" source="_ViTJ5PhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJ2PhYEeaxkoRKVpmNyQ" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_ViTJ2fhYEeaxkoRKVpmNyQ" name="Value(&quot;test.count&quot;).result" outgoing="_ViTJyPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ2vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ2_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTJ3PhYEeaxkoRKVpmNyQ" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTJ3fhYEeaxkoRKVpmNyQ" name="Read(count)" structuralFeature="_ViSf0vhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTJ3vhYEeaxkoRKVpmNyQ" name="Read(count).object" incoming="_ViTJ1_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ3_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ4PhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTJ4fhYEeaxkoRKVpmNyQ" name="Read(count).result" outgoing="_ViTJyfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ4vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ4_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTJ5PhYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIVfhYEeaxkoRKVpmNyQ" outgoing="_ViTJ1_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTJ5fhYEeaxkoRKVpmNyQ" name="Value(3)">
                  <result xmi:id="_ViTJ5vhYEeaxkoRKVpmNyQ" name="Value(3).result" outgoing="_ViTJyvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ5_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ6PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ViTJ6fhYEeaxkoRKVpmNyQ" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTJ6vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@45c9d481" incoming="_ViTIWPhYEeaxkoRKVpmNyQ" outgoing="_ViTIWvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJ6_hYEeaxkoRKVpmNyQ" target="_ViTJ7_hYEeaxkoRKVpmNyQ" source="_ViTtlPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTJ7PhYEeaxkoRKVpmNyQ" target="_ViTJ8vhYEeaxkoRKVpmNyQ" source="_ViTtnPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTJ7fhYEeaxkoRKVpmNyQ" target="_ViTJ7vhYEeaxkoRKVpmNyQ" source="_ViTtkfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTJ7vhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_ViTJ7fhYEeaxkoRKVpmNyQ" behavior="_ViUUuvhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTJ7_hYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_ViTJ6_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ8PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTJ8fhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTJ8vhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_ViTJ7PhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTJ8_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtkPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTtkfhYEeaxkoRKVpmNyQ" name="Tuple@26c0adf8" outgoing="_ViTJ7fhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtkvhYEeaxkoRKVpmNyQ" target="_ViTtmfhYEeaxkoRKVpmNyQ" source="_ViTtn_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTtk_hYEeaxkoRKVpmNyQ" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_ViTtlPhYEeaxkoRKVpmNyQ" name="Value(&quot;test.flag&quot;).result" outgoing="_ViTJ6_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtlfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtlvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTtl_hYEeaxkoRKVpmNyQ" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTtmPhYEeaxkoRKVpmNyQ" name="Read(flag)" structuralFeature="_ViSf2PhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTtmfhYEeaxkoRKVpmNyQ" name="Read(flag).object" incoming="_ViTtkvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtmvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtm_hYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTtnPhYEeaxkoRKVpmNyQ" name="Read(flag).result" outgoing="_ViTJ7PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtnfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtnvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTtn_hYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIV_hYEeaxkoRKVpmNyQ" outgoing="_ViTtkvhYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTtoPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3d7f1e" incoming="_ViTIWvhYEeaxkoRKVpmNyQ" outgoing="_ViTIW_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtofhYEeaxkoRKVpmNyQ" target="_ViTtpfhYEeaxkoRKVpmNyQ" source="_ViTtr_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtovhYEeaxkoRKVpmNyQ" target="_ViTtqPhYEeaxkoRKVpmNyQ" source="_ViTtv_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTto_hYEeaxkoRKVpmNyQ" target="_ViTtpPhYEeaxkoRKVpmNyQ" source="_ViTtq_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTtpPhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_ViTto_hYEeaxkoRKVpmNyQ" behavior="_ViUUuvhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTtpfhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_ViTtofhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtpvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtp_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViTtqPhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_ViTtovhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtqfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtqvhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTtq_hYEeaxkoRKVpmNyQ" name="Tuple@10e4c4f5" outgoing="_ViTto_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtrPhYEeaxkoRKVpmNyQ" target="_ViTttPhYEeaxkoRKVpmNyQ" source="_ViTtuvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtrfhYEeaxkoRKVpmNyQ" target="_ViTtvPhYEeaxkoRKVpmNyQ" source="_ViTtt_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTtrvhYEeaxkoRKVpmNyQ" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_ViTtr_hYEeaxkoRKVpmNyQ" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_ViTtofhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtsPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtsfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTtsvhYEeaxkoRKVpmNyQ" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTts_hYEeaxkoRKVpmNyQ" name="Read(sig1)" structuralFeature="_ViSfxvhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTttPhYEeaxkoRKVpmNyQ" name="Read(sig1).object" incoming="_ViTtrPhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTttfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTttvhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTtt_hYEeaxkoRKVpmNyQ" name="Read(sig1).result" outgoing="_ViTtrfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtuPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtufhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTtuvhYEeaxkoRKVpmNyQ" name="Fork(Fork(test)@743996ae)" incoming="_ViTIWfhYEeaxkoRKVpmNyQ" outgoing="_ViTtrPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViTtu_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination)" classifier="_ViSfvPhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTtvPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_ViTtrfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtvfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtvvhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTtv_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_ViTtovhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtwPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtwfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTtwvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@951e9de" incoming="_ViTIW_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtw_hYEeaxkoRKVpmNyQ" target="_ViTtx_hYEeaxkoRKVpmNyQ" source="_ViTt0vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtxPhYEeaxkoRKVpmNyQ" target="_ViTt1fhYEeaxkoRKVpmNyQ" source="_ViTty_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTtxfhYEeaxkoRKVpmNyQ" target="_ViTtz_hYEeaxkoRKVpmNyQ" source="_ViTt1fhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ViTtxvhYEeaxkoRKVpmNyQ" name="Call(done)" operation="_ViTwf_hYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTtx_hYEeaxkoRKVpmNyQ" name="Call(done).target" incoming="_ViTtw_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtyPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtyfhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTtyvhYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_ViTty_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTtxPhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTtzPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTtzfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTtzvhYEeaxkoRKVpmNyQ" name="Read(outer)" structuralFeature="_ViTIQvhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViTtz_hYEeaxkoRKVpmNyQ" name="Read(outer).object" incoming="_ViTtxfhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTt0PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTt0fhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViTt0vhYEeaxkoRKVpmNyQ" name="Read(outer).result" outgoing="_ViTtw_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTt0_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTt1PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTt1fhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTtxPhYEeaxkoRKVpmNyQ" outgoing="_ViTtxfhYEeaxkoRKVpmNyQ"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTt1vhYEeaxkoRKVpmNyQ" name="TestRunner$method$1" specification="_ViTvafhYEeaxkoRKVpmNyQ" node="_ViTt4vhYEeaxkoRKVpmNyQ _ViTt5fhYEeaxkoRKVpmNyQ _ViTt4_hYEeaxkoRKVpmNyQ _ViTt6_hYEeaxkoRKVpmNyQ _ViTt5PhYEeaxkoRKVpmNyQ" group="_ViTt5fhYEeaxkoRKVpmNyQ _ViTt6_hYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTt1_hYEeaxkoRKVpmNyQ" name="outer" type="_ViTviPhYEeaxkoRKVpmNyQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTt2PhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTt2fhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ViTt2vhYEeaxkoRKVpmNyQ" name="" type="_ViTIPvhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTt2_hYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTt3PhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt3fhYEeaxkoRKVpmNyQ" target="_ViTt5_hYEeaxkoRKVpmNyQ" source="_ViTt4vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt3vhYEeaxkoRKVpmNyQ" target="_ViTuCfhYEeaxkoRKVpmNyQ" source="_ViTt6vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt3_hYEeaxkoRKVpmNyQ" target="_ViTt4_hYEeaxkoRKVpmNyQ" source="_ViTuHvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTt4PhYEeaxkoRKVpmNyQ" target="_ViTt5PhYEeaxkoRKVpmNyQ" source="_ViTt5fhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTt4fhYEeaxkoRKVpmNyQ" target="_ViTt6_hYEeaxkoRKVpmNyQ" source="_ViTt5PhYEeaxkoRKVpmNyQ"/>
          <structuredNode xmi:id="_ViTt5fhYEeaxkoRKVpmNyQ" name="Node(Input(outer))" outgoing="_ViTt4PhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt5vhYEeaxkoRKVpmNyQ" target="_ViTt6vhYEeaxkoRKVpmNyQ" source="_ViTt5_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViTt5_hYEeaxkoRKVpmNyQ" name="Input(outer)" incoming="_ViTt3fhYEeaxkoRKVpmNyQ" outgoing="_ViTt5vhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTt6PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTt6fhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTt6vhYEeaxkoRKVpmNyQ" name="Fork(outer)" incoming="_ViTt5vhYEeaxkoRKVpmNyQ" outgoing="_ViTt3vhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <structuredNode xmi:id="_ViTt6_hYEeaxkoRKVpmNyQ" name="Body(TestRunner$method$1)" incoming="_ViTt4fhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt7PhYEeaxkoRKVpmNyQ" target="_ViTuHvhYEeaxkoRKVpmNyQ" source="_ViTuG_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt7fhYEeaxkoRKVpmNyQ" target="_ViTuIPhYEeaxkoRKVpmNyQ" source="_ViTuHvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTt7vhYEeaxkoRKVpmNyQ" target="_ViTt9_hYEeaxkoRKVpmNyQ" source="_ViTuH_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt7_hYEeaxkoRKVpmNyQ" target="_ViTuJPhYEeaxkoRKVpmNyQ" source="_ViTuHvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt8PhYEeaxkoRKVpmNyQ" target="_ViTuK_hYEeaxkoRKVpmNyQ" source="_ViTuJ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt8fhYEeaxkoRKVpmNyQ" target="_ViTuN_hYEeaxkoRKVpmNyQ" source="_ViTuLvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt8vhYEeaxkoRKVpmNyQ" target="_ViTuPfhYEeaxkoRKVpmNyQ" source="_ViTuMvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTt8_hYEeaxkoRKVpmNyQ" target="_ViTuQfhYEeaxkoRKVpmNyQ" source="_ViTuQPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt9PhYEeaxkoRKVpmNyQ" target="_ViTuQfhYEeaxkoRKVpmNyQ" source="_ViTuOvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTt9fhYEeaxkoRKVpmNyQ" target="_ViTuH_hYEeaxkoRKVpmNyQ" source="_ViTuQfhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTt9vhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTt9_hYEeaxkoRKVpmNyQ" name="Body" incoming="_ViTt7vhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTt-PhYEeaxkoRKVpmNyQ" name="ExpressionStatement@2294d4c1">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt-fhYEeaxkoRKVpmNyQ" target="_ViTuA_hYEeaxkoRKVpmNyQ" source="_ViTt__hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt-vhYEeaxkoRKVpmNyQ" target="_ViTuDPhYEeaxkoRKVpmNyQ" source="_ViTuCfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTt-_hYEeaxkoRKVpmNyQ" target="_ViTuEPhYEeaxkoRKVpmNyQ" source="_ViTuBvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViTt_PhYEeaxkoRKVpmNyQ" target="_ViTt_fhYEeaxkoRKVpmNyQ" source="_ViTuGfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTt_fhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@4e149e2)" incoming="_ViTt_PhYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTt_vhYEeaxkoRKVpmNyQ" name="ReadSelf">
                    <result xmi:id="_ViTt__hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTt-fhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuAPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuAfhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViTuAvhYEeaxkoRKVpmNyQ" name="Clear(outer)" structuralFeature="_ViTIQvhYEeaxkoRKVpmNyQ">
                  <object xmi:id="_ViTuA_hYEeaxkoRKVpmNyQ" name="Clear(outer).object" incoming="_ViTt-fhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuBPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuBfhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTuBvhYEeaxkoRKVpmNyQ" name="Clear(outer).result" outgoing="_ViTt-_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuB_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuCPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViTuCfhYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@4e149e2)" incoming="_ViTt3vhYEeaxkoRKVpmNyQ" outgoing="_ViTt-vhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuCvhYEeaxkoRKVpmNyQ" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuC_hYEeaxkoRKVpmNyQ" target="_ViTuFvhYEeaxkoRKVpmNyQ" source="_ViTuDPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViTuDPhYEeaxkoRKVpmNyQ" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_ViTt-vhYEeaxkoRKVpmNyQ" outgoing="_ViTuC_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuDfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuDvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTuD_hYEeaxkoRKVpmNyQ" name="Write(outer)" structuralFeature="_ViTIQvhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                    <object xmi:id="_ViTuEPhYEeaxkoRKVpmNyQ" name="Write(outer).object" incoming="_ViTt-_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuEfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuEvhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTuE_hYEeaxkoRKVpmNyQ" name="Write(outer).result" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuFPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuFfhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:id="_ViTuFvhYEeaxkoRKVpmNyQ" name="Write(outer).value" incoming="_ViTuC_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuF_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuGPhYEeaxkoRKVpmNyQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuGfhYEeaxkoRKVpmNyQ" name="RightHandSide@2c4d4204" outgoing="_ViTt_PhYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTuGvhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViTuG_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTt7PhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuHPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuHfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTuHvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTt7PhYEeaxkoRKVpmNyQ" outgoing="_ViTt3_hYEeaxkoRKVpmNyQ _ViTt7fhYEeaxkoRKVpmNyQ _ViTt7_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ViTuH_hYEeaxkoRKVpmNyQ" name="Call(TestRunner$initialization$1)" incoming="_ViTt9fhYEeaxkoRKVpmNyQ" outgoing="_ViTt7vhYEeaxkoRKVpmNyQ" operation="_ViTvaPhYEeaxkoRKVpmNyQ">
              <target xmi:id="_ViTuIPhYEeaxkoRKVpmNyQ" name="Call(TestRunner$initialization$1).target" incoming="_ViTt7fhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuIfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuIvhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTuI_hYEeaxkoRKVpmNyQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_ViTIP_hYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViTuJPhYEeaxkoRKVpmNyQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_ViTt7_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuJfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuJvhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViTuJ_hYEeaxkoRKVpmNyQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_ViTt8PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuKPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuKfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTuKvhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViTuK_hYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTt8PhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuLPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuLfhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViTuLvhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTt8fhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuL_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuMPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTuMfhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViTuMvhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTt8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuM_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuNPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViTuNfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTuNvhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViTuN_hYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTt8fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuOPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuOfhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViTuOvhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTt9PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuO_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuPPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViTuPfhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTt8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuPvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuP_hYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViTuQPhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTt8_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViTuQfhYEeaxkoRKVpmNyQ" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_ViTt8_hYEeaxkoRKVpmNyQ _ViTt9PhYEeaxkoRKVpmNyQ" outgoing="_ViTt9fhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTt9PhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTt4vhYEeaxkoRKVpmNyQ" name="Input(outer)" outgoing="_ViTt3fhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" parameter="_ViTt1_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTt4_hYEeaxkoRKVpmNyQ" name="Return" incoming="_ViTt3_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" parameter="_ViTt2vhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:JoinNode" xmi:id="_ViTt5PhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViTt4PhYEeaxkoRKVpmNyQ" outgoing="_ViTt4fhYEeaxkoRKVpmNyQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTuQvhYEeaxkoRKVpmNyQ" name="run$method$1" specification="_ViTvcPhYEeaxkoRKVpmNyQ" node="_ViTuR_hYEeaxkoRKVpmNyQ _ViTuSPhYEeaxkoRKVpmNyQ" group="_ViTuSPhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTuQ_hYEeaxkoRKVpmNyQ" name="test" type="_ViSfvvhYEeaxkoRKVpmNyQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuRPhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuRfhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuRvhYEeaxkoRKVpmNyQ" target="_ViTuR_hYEeaxkoRKVpmNyQ" source="_ViTuYvhYEeaxkoRKVpmNyQ"/>
          <structuredNode xmi:id="_ViTuSPhYEeaxkoRKVpmNyQ" name="Body(run$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuSfhYEeaxkoRKVpmNyQ" target="_ViTukvhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuSvhYEeaxkoRKVpmNyQ" target="_ViTukPhYEeaxkoRKVpmNyQ" source="_ViTuZfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuS_hYEeaxkoRKVpmNyQ" target="_ViTunPhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuTPhYEeaxkoRKVpmNyQ" target="_ViTulfhYEeaxkoRKVpmNyQ" source="_ViTukPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuTfhYEeaxkoRKVpmNyQ" target="_ViTurPhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuTvhYEeaxkoRKVpmNyQ" target="_ViTupfhYEeaxkoRKVpmNyQ" source="_ViTulfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuT_hYEeaxkoRKVpmNyQ" target="_ViTuvPhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuUPhYEeaxkoRKVpmNyQ" target="_ViTutfhYEeaxkoRKVpmNyQ" source="_ViTupfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuUfhYEeaxkoRKVpmNyQ" target="_ViTuzPhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuUvhYEeaxkoRKVpmNyQ" target="_ViTuxfhYEeaxkoRKVpmNyQ" source="_ViTutfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuU_hYEeaxkoRKVpmNyQ" target="_ViTu1_hYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuVPhYEeaxkoRKVpmNyQ" target="_ViTu1fhYEeaxkoRKVpmNyQ" source="_ViTuxfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuVfhYEeaxkoRKVpmNyQ" target="_ViTu4fhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuVvhYEeaxkoRKVpmNyQ" target="_ViTu2vhYEeaxkoRKVpmNyQ" source="_ViTu1fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuV_hYEeaxkoRKVpmNyQ" target="_ViTu8fhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuWPhYEeaxkoRKVpmNyQ" target="_ViTu6vhYEeaxkoRKVpmNyQ" source="_ViTu2vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuWfhYEeaxkoRKVpmNyQ" target="_ViTu_PhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuWvhYEeaxkoRKVpmNyQ" target="_ViTu-vhYEeaxkoRKVpmNyQ" source="_ViTu6vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuW_hYEeaxkoRKVpmNyQ" target="_ViTvBvhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuXPhYEeaxkoRKVpmNyQ" target="_ViTu__hYEeaxkoRKVpmNyQ" source="_ViTu-vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuXfhYEeaxkoRKVpmNyQ" target="_ViTvFvhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuXvhYEeaxkoRKVpmNyQ" target="_ViTvD_hYEeaxkoRKVpmNyQ" source="_ViTu__hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuX_hYEeaxkoRKVpmNyQ" target="_ViTvIfhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTuYPhYEeaxkoRKVpmNyQ" target="_ViTvH_hYEeaxkoRKVpmNyQ" source="_ViTvD_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuYfhYEeaxkoRKVpmNyQ" target="_ViTuYvhYEeaxkoRKVpmNyQ" source="_ViTuZ_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeOutput xmi:id="_ViTuYvhYEeaxkoRKVpmNyQ" name="Output(test)" incoming="_ViTuYfhYEeaxkoRKVpmNyQ" outgoing="_ViTuRvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuY_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuZPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuZfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@9b9155f" outgoing="_ViTuSvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuZvhYEeaxkoRKVpmNyQ" target="_ViTuZ_hYEeaxkoRKVpmNyQ" source="_ViTucPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTuZ_hYEeaxkoRKVpmNyQ" name="Fork(test)@135a0702" incoming="_ViTuZvhYEeaxkoRKVpmNyQ" outgoing="_ViTuSfhYEeaxkoRKVpmNyQ _ViTuS_hYEeaxkoRKVpmNyQ _ViTuTfhYEeaxkoRKVpmNyQ _ViTuT_hYEeaxkoRKVpmNyQ _ViTuUfhYEeaxkoRKVpmNyQ _ViTuU_hYEeaxkoRKVpmNyQ _ViTuVfhYEeaxkoRKVpmNyQ _ViTuV_hYEeaxkoRKVpmNyQ _ViTuWfhYEeaxkoRKVpmNyQ _ViTuW_hYEeaxkoRKVpmNyQ _ViTuXfhYEeaxkoRKVpmNyQ _ViTuX_hYEeaxkoRKVpmNyQ _ViTuYfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuaPhYEeaxkoRKVpmNyQ" name="RightHandSide@6dbfca6a">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuafhYEeaxkoRKVpmNyQ" name="InstanceCreationExpression@6dbfca6a">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuavhYEeaxkoRKVpmNyQ" target="_ViTuiPhYEeaxkoRKVpmNyQ" source="_ViTudPhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTua_hYEeaxkoRKVpmNyQ" target="_ViTugvhYEeaxkoRKVpmNyQ" source="_ViTuefhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_ViTubPhYEeaxkoRKVpmNyQ" target="_ViTugfhYEeaxkoRKVpmNyQ" source="_ViTud_hYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTubfhYEeaxkoRKVpmNyQ" target="_ViTui_hYEeaxkoRKVpmNyQ" source="_ViTufvhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTubvhYEeaxkoRKVpmNyQ" target="_ViTujfhYEeaxkoRKVpmNyQ" source="_ViTui_hYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTub_hYEeaxkoRKVpmNyQ" target="_ViTucPhYEeaxkoRKVpmNyQ" source="_ViTui_hYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViTucPhYEeaxkoRKVpmNyQ" name="Output(Output(Call(MyTest).result()))" incoming="_ViTub_hYEeaxkoRKVpmNyQ" outgoing="_ViTuZvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTucfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTucvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_ViTuc_hYEeaxkoRKVpmNyQ" name="Create(MyTest)" classifier="_ViSfvvhYEeaxkoRKVpmNyQ">
                    <result xmi:id="_ViTudPhYEeaxkoRKVpmNyQ" name="Create(MyTest).result" outgoing="_ViTuavhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTudfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTudvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTud_hYEeaxkoRKVpmNyQ" name="Tuple@1b1f0f69" outgoing="_ViTubPhYEeaxkoRKVpmNyQ">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTuePhYEeaxkoRKVpmNyQ" name="ReadSelf">
                      <result xmi:id="_ViTuefhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTua_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuevhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTue_hYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTufPhYEeaxkoRKVpmNyQ" name="Node(Call(MyTest))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuffhYEeaxkoRKVpmNyQ" target="_ViTufvhYEeaxkoRKVpmNyQ" source="_ViTuhfhYEeaxkoRKVpmNyQ"/>
                    <structuredNodeOutput xmi:id="_ViTufvhYEeaxkoRKVpmNyQ" name="Output(Call(MyTest).result())" incoming="_ViTuffhYEeaxkoRKVpmNyQ" outgoing="_ViTubfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuf_hYEeaxkoRKVpmNyQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTugPhYEeaxkoRKVpmNyQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallOperationAction" xmi:id="_ViTugfhYEeaxkoRKVpmNyQ" name="Call(MyTest)" incoming="_ViTubPhYEeaxkoRKVpmNyQ" operation="_ViTIMvhYEeaxkoRKVpmNyQ">
                      <argument xmi:id="_ViTugvhYEeaxkoRKVpmNyQ" name="Call(MyTest).argument(tester)" incoming="_ViTua_hYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTug_hYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuhPhYEeaxkoRKVpmNyQ" value="1"/>
                      </argument>
                      <result xmi:id="_ViTuhfhYEeaxkoRKVpmNyQ" name="Call(MyTest).result()" outgoing="_ViTuffhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuhvhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuh_hYEeaxkoRKVpmNyQ" value="1"/>
                      </result>
                      <target xmi:id="_ViTuiPhYEeaxkoRKVpmNyQ" name="Call(MyTest).target" incoming="_ViTuavhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuifhYEeaxkoRKVpmNyQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuivhYEeaxkoRKVpmNyQ" value="1"/>
                      </target>
                    </node>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_ViTui_hYEeaxkoRKVpmNyQ" name="Fork(Output(Call(MyTest).result()))" incoming="_ViTubfhYEeaxkoRKVpmNyQ" outgoing="_ViTubvhYEeaxkoRKVpmNyQ _ViTub_hYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_ViTujPhYEeaxkoRKVpmNyQ" name="Start(MyTest)" isSynchronous="false">
                    <object xmi:id="_ViTujfhYEeaxkoRKVpmNyQ" name="Start(MyTest).object" incoming="_ViTubvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTujvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuj_hYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTukPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@5028f47b" incoming="_ViTuSvhYEeaxkoRKVpmNyQ" outgoing="_ViTuTPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTukfhYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination)" signal="_ViSfvPhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTukvhYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination).target" incoming="_ViTuSfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuk_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTulPhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTulfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@55b7b825" incoming="_ViTuTPhYEeaxkoRKVpmNyQ" outgoing="_ViTuTvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTulvhYEeaxkoRKVpmNyQ" target="_ViTumfhYEeaxkoRKVpmNyQ" source="_ViTuofhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTul_hYEeaxkoRKVpmNyQ" target="_ViTumPhYEeaxkoRKVpmNyQ" source="_ViTun_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTumPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTul_hYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTumfhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTulvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTumvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTum_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTunPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuS_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTunfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTunvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTun_hYEeaxkoRKVpmNyQ" name="Tuple@6b0137f2" outgoing="_ViTul_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTuoPhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_ViTuofhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival1&quot;).result" outgoing="_ViTulvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuovhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuo_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTupPhYEeaxkoRKVpmNyQ" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTupfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@c889735" incoming="_ViTuTvhYEeaxkoRKVpmNyQ" outgoing="_ViTuUPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTupvhYEeaxkoRKVpmNyQ" target="_ViTuqfhYEeaxkoRKVpmNyQ" source="_ViTusfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTup_hYEeaxkoRKVpmNyQ" target="_ViTuqPhYEeaxkoRKVpmNyQ" source="_ViTur_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTuqPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTup_hYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTuqfhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTupvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuqvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuq_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTurPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuTfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTurfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTurvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTur_hYEeaxkoRKVpmNyQ" name="Tuple@559af3cc" outgoing="_ViTup_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTusPhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_ViTusfhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival2&quot;).result" outgoing="_ViTupvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTusvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTus_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTutPhYEeaxkoRKVpmNyQ" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTutfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@43ba46f0" incoming="_ViTuUPhYEeaxkoRKVpmNyQ" outgoing="_ViTuUvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTutvhYEeaxkoRKVpmNyQ" target="_ViTuufhYEeaxkoRKVpmNyQ" source="_ViTuwfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTut_hYEeaxkoRKVpmNyQ" target="_ViTuuPhYEeaxkoRKVpmNyQ" source="_ViTuv_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTuuPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTut_hYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTuufhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTutvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuuvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuu_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTuvPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuT_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuvfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuvvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuv_hYEeaxkoRKVpmNyQ" name="Tuple@54f4730" outgoing="_ViTut_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTuwPhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_ViTuwfhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival3&quot;).result" outgoing="_ViTutvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuwvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuw_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTuxPhYEeaxkoRKVpmNyQ" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuxfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@555f4004" incoming="_ViTuUvhYEeaxkoRKVpmNyQ" outgoing="_ViTuVPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTuxvhYEeaxkoRKVpmNyQ" target="_ViTuyfhYEeaxkoRKVpmNyQ" source="_ViTu0fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTux_hYEeaxkoRKVpmNyQ" target="_ViTuyPhYEeaxkoRKVpmNyQ" source="_ViTuz_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTuyPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTux_hYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTuyfhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTuxvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuyvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuy_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTuzPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuUfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTuzfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTuzvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTuz_hYEeaxkoRKVpmNyQ" name="Tuple@6c4e0e0f" outgoing="_ViTux_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTu0PhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_ViTu0fhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival4&quot;).result" outgoing="_ViTuxvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu0vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu0_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTu1PhYEeaxkoRKVpmNyQ" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu1fhYEeaxkoRKVpmNyQ" name="ExpressionStatement@e8ab21d" incoming="_ViTuVPhYEeaxkoRKVpmNyQ" outgoing="_ViTuVvhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTu1vhYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination)" signal="_ViSfvPhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTu1_hYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination).target" incoming="_ViTuU_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu2PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu2fhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu2vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@1757242c" incoming="_ViTuVvhYEeaxkoRKVpmNyQ" outgoing="_ViTuWPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTu2_hYEeaxkoRKVpmNyQ" target="_ViTu3vhYEeaxkoRKVpmNyQ" source="_ViTu5vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTu3PhYEeaxkoRKVpmNyQ" target="_ViTu3fhYEeaxkoRKVpmNyQ" source="_ViTu5PhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTu3fhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTu3PhYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTu3vhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTu2_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu3_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu4PhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTu4fhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuVfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu4vhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu4_hYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu5PhYEeaxkoRKVpmNyQ" name="Tuple@540d4f27" outgoing="_ViTu3PhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTu5fhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_ViTu5vhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival5&quot;).result" outgoing="_ViTu2_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu5_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu6PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTu6fhYEeaxkoRKVpmNyQ" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu6vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@20ec28b1" incoming="_ViTuWPhYEeaxkoRKVpmNyQ" outgoing="_ViTuWvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTu6_hYEeaxkoRKVpmNyQ" target="_ViTu7vhYEeaxkoRKVpmNyQ" source="_ViTu9vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTu7PhYEeaxkoRKVpmNyQ" target="_ViTu7fhYEeaxkoRKVpmNyQ" source="_ViTu9PhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTu7fhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTu7PhYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTu7vhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTu6_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu7_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu8PhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTu8fhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuV_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu8vhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu8_hYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu9PhYEeaxkoRKVpmNyQ" name="Tuple@27ff59b4" outgoing="_ViTu7PhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTu9fhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_ViTu9vhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival6&quot;).result" outgoing="_ViTu6_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu9_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu-PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTu-fhYEeaxkoRKVpmNyQ" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu-vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@168adab6" incoming="_ViTuWvhYEeaxkoRKVpmNyQ" outgoing="_ViTuXPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTu-_hYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination)" signal="_ViSfvPhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTu_PhYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination).target" incoming="_ViTuWfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTu_fhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTu_vhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTu__hYEeaxkoRKVpmNyQ" name="ExpressionStatement@505d34a6" incoming="_ViTuXPhYEeaxkoRKVpmNyQ" outgoing="_ViTuXvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvAPhYEeaxkoRKVpmNyQ" target="_ViTvA_hYEeaxkoRKVpmNyQ" source="_ViTvC_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvAfhYEeaxkoRKVpmNyQ" target="_ViTvAvhYEeaxkoRKVpmNyQ" source="_ViTvCfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTvAvhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTvAfhYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTvA_hYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTvAPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvBPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvBfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTvBvhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuW_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvB_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvCPhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvCfhYEeaxkoRKVpmNyQ" name="Tuple@309aae74" outgoing="_ViTvAfhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTvCvhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_ViTvC_hYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival7&quot;).result" outgoing="_ViTvAPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvDPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvDfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTvDvhYEeaxkoRKVpmNyQ" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvD_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@2eb12d1f" incoming="_ViTuXvhYEeaxkoRKVpmNyQ" outgoing="_ViTuYPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvEPhYEeaxkoRKVpmNyQ" target="_ViTvE_hYEeaxkoRKVpmNyQ" source="_ViTvG_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvEfhYEeaxkoRKVpmNyQ" target="_ViTvEvhYEeaxkoRKVpmNyQ" source="_ViTvGfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTvEvhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival)" incoming="_ViTvEfhYEeaxkoRKVpmNyQ" signal="_ViSfuPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViTvE_hYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).argument(name)" incoming="_ViTvEPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvFPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvFfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <target xmi:id="_ViTvFvhYEeaxkoRKVpmNyQ" name="SendSignal(SignalNewArrival).target" incoming="_ViTuXfhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvF_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvGPhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvGfhYEeaxkoRKVpmNyQ" name="Tuple@6b5630f5" outgoing="_ViTvEfhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTvGvhYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_ViTvG_hYEeaxkoRKVpmNyQ" name="Value(&quot;Arrival8&quot;).result" outgoing="_ViTvEPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvHPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvHfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViTvHvhYEeaxkoRKVpmNyQ" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvH_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@343367b8" incoming="_ViTuYPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTvIPhYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination)" signal="_ViSfvPhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTvIfhYEeaxkoRKVpmNyQ" name="SendSignal(SignalTermination).target" incoming="_ViTuX_hYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvIvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvI_hYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTuR_hYEeaxkoRKVpmNyQ" name="Output(test)" incoming="_ViTuRvhYEeaxkoRKVpmNyQ" type="_ViSfvvhYEeaxkoRKVpmNyQ" parameter="_ViTuQ_hYEeaxkoRKVpmNyQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTvJPhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_ViTvdPhYEeaxkoRKVpmNyQ" node="_ViTvJfhYEeaxkoRKVpmNyQ" group="_ViTvJfhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTvJfhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTvJvhYEeaxkoRKVpmNyQ" name="TestRunner$initialization$1" specification="_ViTvaPhYEeaxkoRKVpmNyQ" node="_ViTvJ_hYEeaxkoRKVpmNyQ" group="_ViTvJ_hYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTvJ_hYEeaxkoRKVpmNyQ" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvKPhYEeaxkoRKVpmNyQ" target="_ViTvNvhYEeaxkoRKVpmNyQ" source="_ViTvM_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvKfhYEeaxkoRKVpmNyQ" target="_ViTvQPhYEeaxkoRKVpmNyQ" source="_ViTvNvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvKvhYEeaxkoRKVpmNyQ" target="_ViTvSvhYEeaxkoRKVpmNyQ" source="_ViTvNvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvK_hYEeaxkoRKVpmNyQ" target="_ViTvUfhYEeaxkoRKVpmNyQ" source="_ViTvTfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvLPhYEeaxkoRKVpmNyQ" target="_ViTvXfhYEeaxkoRKVpmNyQ" source="_ViTvVPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvLfhYEeaxkoRKVpmNyQ" target="_ViTvY_hYEeaxkoRKVpmNyQ" source="_ViTvWPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvLvhYEeaxkoRKVpmNyQ" target="_ViTvZ_hYEeaxkoRKVpmNyQ" source="_ViTvZvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvL_hYEeaxkoRKVpmNyQ" target="_ViTvZ_hYEeaxkoRKVpmNyQ" source="_ViTvYPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvMPhYEeaxkoRKVpmNyQ" target="_ViTvN_hYEeaxkoRKVpmNyQ" source="_ViTvZ_hYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTvMfhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTvMvhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViTvM_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTvKPhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvNPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvNfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTvNvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTvKPhYEeaxkoRKVpmNyQ" outgoing="_ViTvKfhYEeaxkoRKVpmNyQ _ViTvKvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvN_hYEeaxkoRKVpmNyQ" name="Initialization" incoming="_ViTvMPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvOPhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvOfhYEeaxkoRKVpmNyQ" target="_ViTvRvhYEeaxkoRKVpmNyQ" source="_ViTvO_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTvOvhYEeaxkoRKVpmNyQ" name="Value(true)">
                  <result xmi:id="_ViTvO_hYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViTvOfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvPPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvPfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTvPvhYEeaxkoRKVpmNyQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTvP_hYEeaxkoRKVpmNyQ" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_ViTIP_hYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViTvQPhYEeaxkoRKVpmNyQ" name="Write(TestRunner$initializationFlag$1).object" incoming="_ViTvKfhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvQfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvQvhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTvQ_hYEeaxkoRKVpmNyQ" name="Write(TestRunner$initializationFlag$1).result" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvRPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvRfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViTvRvhYEeaxkoRKVpmNyQ" name="Write(TestRunner$initializationFlag$1).value" incoming="_ViTvOfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvR_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvSPhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTvSfhYEeaxkoRKVpmNyQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_ViTIP_hYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViTvSvhYEeaxkoRKVpmNyQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_ViTvKvhYEeaxkoRKVpmNyQ" type="_ViTIPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvS_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvTPhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViTvTfhYEeaxkoRKVpmNyQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_ViTvK_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvTvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvT_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTvUPhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViTvUfhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTvK_hYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvUvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvU_hYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViTvVPhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTvLPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvVfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvVvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTvV_hYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViTvWPhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTvLfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvWfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvWvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViTvW_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTvXPhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViTvXfhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTvLPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvXvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvX_hYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViTvYPhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTvL_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvYfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvYvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViTvY_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTvLfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvZPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvZfhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViTvZvhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTvLvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViTvZ_hYEeaxkoRKVpmNyQ" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_ViTvLvhYEeaxkoRKVpmNyQ _ViTvL_hYEeaxkoRKVpmNyQ" outgoing="_ViTvMPhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTvL_hYEeaxkoRKVpmNyQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_ViTvaPhYEeaxkoRKVpmNyQ" name="TestRunner$initialization$1" visibility="protected" method="_ViTvJvhYEeaxkoRKVpmNyQ"/>
        <ownedOperation xmi:id="_ViTvafhYEeaxkoRKVpmNyQ" name="TestRunner" visibility="public" method="_ViTt1vhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTvavhYEeaxkoRKVpmNyQ" name="outer" visibility="package" type="_ViTviPhYEeaxkoRKVpmNyQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTva_hYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvbPhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ViTvbfhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViTIPvhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvbvhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvb_hYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ViTvcPhYEeaxkoRKVpmNyQ" name="run" visibility="private" method="_ViTuQvhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTvcfhYEeaxkoRKVpmNyQ" name="test" visibility="package" type="_ViSfvvhYEeaxkoRKVpmNyQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvcvhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvc_hYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ViTvdPhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_ViTvJPhYEeaxkoRKVpmNyQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_ViTvdfhYEeaxkoRKVpmNyQ" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_ViTvdvhYEeaxkoRKVpmNyQ" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_ViTvd_hYEeaxkoRKVpmNyQ" name="Start" signal="_ViTvdfhYEeaxkoRKVpmNyQ"/>
        <ownedReception xmi:id="_ViTvePhYEeaxkoRKVpmNyQ" name="Continue" signal="_ViTvdvhYEeaxkoRKVpmNyQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvefhYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvevhYEeaxkoRKVpmNyQ" name="Event(SignalTermination)" visibility="public" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTve_hYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvfPhYEeaxkoRKVpmNyQ" name="Event(SignalTermination)" visibility="public" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvffhYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvfvhYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvf_hYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvgPhYEeaxkoRKVpmNyQ" name="Event(SignalTermination)" visibility="public" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvgfhYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvgvhYEeaxkoRKVpmNyQ" name="Event(SignalTermination)" visibility="public" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvg_hYEeaxkoRKVpmNyQ" name="Event(SignalNewArrival)" visibility="public" signal="_ViSfuPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvhPhYEeaxkoRKVpmNyQ" name="Event(SignalTermination)" visibility="public" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvhfhYEeaxkoRKVpmNyQ" name="Event(SignalTermination)" visibility="public" signal="_ViSfvPhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvhvhYEeaxkoRKVpmNyQ" name="Event(Start)" visibility="public" signal="_ViTvdfhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_ViTvh_hYEeaxkoRKVpmNyQ" name="Event(Continue)" visibility="public" signal="_ViTvdvhYEeaxkoRKVpmNyQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_ViTviPhYEeaxkoRKVpmNyQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_ViTvifhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ViTvivhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ViTvi_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ViTvjPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ViTvjfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_ViTvjvhYEeaxkoRKVpmNyQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvj_hYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvkPhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_ViTvkfhYEeaxkoRKVpmNyQ" name="tester" visibility="private" type="_ViTwgfhYEeaxkoRKVpmNyQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvkvhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvk_hYEeaxkoRKVpmNyQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTvlPhYEeaxkoRKVpmNyQ" name="Test$method$1" specification="_ViTwePhYEeaxkoRKVpmNyQ" node="_ViTvoPhYEeaxkoRKVpmNyQ _ViTvo_hYEeaxkoRKVpmNyQ _ViTvofhYEeaxkoRKVpmNyQ _ViTvqfhYEeaxkoRKVpmNyQ _ViTvovhYEeaxkoRKVpmNyQ" group="_ViTvo_hYEeaxkoRKVpmNyQ _ViTvqfhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_ViTvlfhYEeaxkoRKVpmNyQ" name="tester" type="_ViTwgfhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvlvhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvl_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ViTvmPhYEeaxkoRKVpmNyQ" name="" type="_ViTviPhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvmfhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvmvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvm_hYEeaxkoRKVpmNyQ" target="_ViTvpfhYEeaxkoRKVpmNyQ" source="_ViTvoPhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvnPhYEeaxkoRKVpmNyQ" target="_ViTvx_hYEeaxkoRKVpmNyQ" source="_ViTvqPhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvnfhYEeaxkoRKVpmNyQ" target="_ViTvofhYEeaxkoRKVpmNyQ" source="_ViTv4_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvnvhYEeaxkoRKVpmNyQ" target="_ViTvovhYEeaxkoRKVpmNyQ" source="_ViTvo_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvn_hYEeaxkoRKVpmNyQ" target="_ViTvqfhYEeaxkoRKVpmNyQ" source="_ViTvovhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_ViTvo_hYEeaxkoRKVpmNyQ" name="Node(Input(tester))" outgoing="_ViTvnvhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvpPhYEeaxkoRKVpmNyQ" target="_ViTvqPhYEeaxkoRKVpmNyQ" source="_ViTvpfhYEeaxkoRKVpmNyQ"/>
          <structuredNodeInput xmi:id="_ViTvpfhYEeaxkoRKVpmNyQ" name="Input(tester)" incoming="_ViTvm_hYEeaxkoRKVpmNyQ" outgoing="_ViTvpPhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvpvhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvp_hYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_ViTvqPhYEeaxkoRKVpmNyQ" name="Fork(tester)" incoming="_ViTvpPhYEeaxkoRKVpmNyQ" outgoing="_ViTvnPhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <structuredNode xmi:id="_ViTvqfhYEeaxkoRKVpmNyQ" name="Body(Test$method$1)" incoming="_ViTvn_hYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvqvhYEeaxkoRKVpmNyQ" target="_ViTv4_hYEeaxkoRKVpmNyQ" source="_ViTv4PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvq_hYEeaxkoRKVpmNyQ" target="_ViTv5fhYEeaxkoRKVpmNyQ" source="_ViTv4_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvrPhYEeaxkoRKVpmNyQ" target="_ViTvtfhYEeaxkoRKVpmNyQ" source="_ViTv5PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvrfhYEeaxkoRKVpmNyQ" target="_ViTv6fhYEeaxkoRKVpmNyQ" source="_ViTv4_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvrvhYEeaxkoRKVpmNyQ" target="_ViTv8PhYEeaxkoRKVpmNyQ" source="_ViTv7PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvr_hYEeaxkoRKVpmNyQ" target="_ViTv_PhYEeaxkoRKVpmNyQ" source="_ViTv8_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvsPhYEeaxkoRKVpmNyQ" target="_ViTwAvhYEeaxkoRKVpmNyQ" source="_ViTv9_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvsfhYEeaxkoRKVpmNyQ" target="_ViTwBvhYEeaxkoRKVpmNyQ" source="_ViTwBfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvsvhYEeaxkoRKVpmNyQ" target="_ViTwBvhYEeaxkoRKVpmNyQ" source="_ViTv__hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvs_hYEeaxkoRKVpmNyQ" target="_ViTv5PhYEeaxkoRKVpmNyQ" source="_ViTwBvhYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTvtPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvtfhYEeaxkoRKVpmNyQ" name="Body" incoming="_ViTvrPhYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvtvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@31430d77">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvt_hYEeaxkoRKVpmNyQ" target="_ViTvwfhYEeaxkoRKVpmNyQ" source="_ViTvvfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvuPhYEeaxkoRKVpmNyQ" target="_ViTvyvhYEeaxkoRKVpmNyQ" source="_ViTvx_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvufhYEeaxkoRKVpmNyQ" target="_ViTv0PhYEeaxkoRKVpmNyQ" source="_ViTvxPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViTvuvhYEeaxkoRKVpmNyQ" target="_ViTvu_hYEeaxkoRKVpmNyQ" source="_ViTv3vhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvu_hYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@1785b293)" incoming="_ViTvuvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTvvPhYEeaxkoRKVpmNyQ" name="ReadSelf">
                  <result xmi:id="_ViTvvfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTvt_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvvvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvv_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ViTvwPhYEeaxkoRKVpmNyQ" name="Clear(tester)" structuralFeature="_ViTvkfhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViTvwfhYEeaxkoRKVpmNyQ" name="Clear(tester).object" incoming="_ViTvt_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvwvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvw_hYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViTvxPhYEeaxkoRKVpmNyQ" name="Clear(tester).result" outgoing="_ViTvufhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvxfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvxvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTvx_hYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@1785b293)" incoming="_ViTvnPhYEeaxkoRKVpmNyQ" outgoing="_ViTvuPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTvyPhYEeaxkoRKVpmNyQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvyfhYEeaxkoRKVpmNyQ" target="_ViTv3fhYEeaxkoRKVpmNyQ" source="_ViTvyvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_ViTvyvhYEeaxkoRKVpmNyQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_ViTvuPhYEeaxkoRKVpmNyQ" outgoing="_ViTvyfhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTvy_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTvzPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_ViTvzfhYEeaxkoRKVpmNyQ" name="Iterate(Write(tester))" inputElement="_ViTv3fhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvzvhYEeaxkoRKVpmNyQ" target="_ViTv2vhYEeaxkoRKVpmNyQ" source="_ViTv3fhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTvz_hYEeaxkoRKVpmNyQ" target="_ViTv1PhYEeaxkoRKVpmNyQ" source="_ViTv0PhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_ViTv0PhYEeaxkoRKVpmNyQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_ViTvufhYEeaxkoRKVpmNyQ" outgoing="_ViTvz_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv0fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv0vhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTv0_hYEeaxkoRKVpmNyQ" name="Write(tester)" structuralFeature="_ViTvkfhYEeaxkoRKVpmNyQ">
                    <object xmi:id="_ViTv1PhYEeaxkoRKVpmNyQ" name="Write(tester).object" incoming="_ViTvz_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv1fhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv1vhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_ViTv1_hYEeaxkoRKVpmNyQ" name="Write(tester).result" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv2PhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv2fhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:id="_ViTv2vhYEeaxkoRKVpmNyQ" name="Write(tester).value" incoming="_ViTvzvhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv2_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv3PhYEeaxkoRKVpmNyQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_ViTv3fhYEeaxkoRKVpmNyQ" name="Iterate(Write(tester)).inputElement" incoming="_ViTvyfhYEeaxkoRKVpmNyQ" outgoing="_ViTvzvhYEeaxkoRKVpmNyQ" regionAsInput="_ViTvzfhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTv3vhYEeaxkoRKVpmNyQ" name="RightHandSide@1b1d072d" outgoing="_ViTvuvhYEeaxkoRKVpmNyQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTv3_hYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_ViTv4PhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTvqvhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv4fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv4vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ViTv4_hYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTvqvhYEeaxkoRKVpmNyQ" outgoing="_ViTvnfhYEeaxkoRKVpmNyQ _ViTvq_hYEeaxkoRKVpmNyQ _ViTvrfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_ViTv5PhYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1)" incoming="_ViTvs_hYEeaxkoRKVpmNyQ" outgoing="_ViTvrPhYEeaxkoRKVpmNyQ" operation="_ViTwd_hYEeaxkoRKVpmNyQ">
            <target xmi:id="_ViTv5fhYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1).target" incoming="_ViTvq_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv5vhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv5_hYEeaxkoRKVpmNyQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTv6PhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1)" structuralFeature="_ViTvjvhYEeaxkoRKVpmNyQ">
            <object xmi:id="_ViTv6fhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).object" incoming="_ViTvrfhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv6vhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv6_hYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_ViTv7PhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).result" outgoing="_ViTvrvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv7fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv7vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTv7_hYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_ViTv8PhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTvrvhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv8fhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv8vhYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_ViTv8_hYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTvr_hYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv9PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv9fhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTv9vhYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_ViTv9_hYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTvsPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv-PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv-fhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ViTv-vhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTv-_hYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_ViTv_PhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTvr_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTv_fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTv_vhYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_ViTv__hYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTvsvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwAPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwAfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_ViTwAvhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTvsPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwA_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwBPhYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ViTwBfhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTvsfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ViTwBvhYEeaxkoRKVpmNyQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_ViTvsfhYEeaxkoRKVpmNyQ _ViTvsvhYEeaxkoRKVpmNyQ" outgoing="_ViTvs_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTvsvhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTvoPhYEeaxkoRKVpmNyQ" name="Input(tester)" outgoing="_ViTvm_hYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" parameter="_ViTvlfhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTvofhYEeaxkoRKVpmNyQ" name="Return" incoming="_ViTvnfhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" parameter="_ViTvmPhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:JoinNode" xmi:id="_ViTvovhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViTvnvhYEeaxkoRKVpmNyQ" outgoing="_ViTvn_hYEeaxkoRKVpmNyQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTwB_hYEeaxkoRKVpmNyQ" name="done$method$1" specification="_ViTwf_hYEeaxkoRKVpmNyQ" node="_ViTwCPhYEeaxkoRKVpmNyQ" group="_ViTwCPhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_ViTwCPhYEeaxkoRKVpmNyQ" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwCfhYEeaxkoRKVpmNyQ" target="_ViTwGvhYEeaxkoRKVpmNyQ" source="_ViTwCvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwCvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@1e4eeeae" outgoing="_ViTwCfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwC_hYEeaxkoRKVpmNyQ" target="_ViTwDvhYEeaxkoRKVpmNyQ" source="_ViTwFvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwDPhYEeaxkoRKVpmNyQ" target="_ViTwDfhYEeaxkoRKVpmNyQ" source="_ViTwFPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTwDfhYEeaxkoRKVpmNyQ" name="Call(WriteLine)" incoming="_ViTwDPhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViTwDvhYEeaxkoRKVpmNyQ" name="Call(WriteLine).argument(value)" incoming="_ViTwC_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwD_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwEPhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViTwEfhYEeaxkoRKVpmNyQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwEvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwE_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwFPhYEeaxkoRKVpmNyQ" name="Tuple@74e69ec9" outgoing="_ViTwDPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTwFfhYEeaxkoRKVpmNyQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_ViTwFvhYEeaxkoRKVpmNyQ" name="Value(&quot;Done.&quot;).result" outgoing="_ViTwC_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwF_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwGPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ViTwGfhYEeaxkoRKVpmNyQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwGvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@723cc3c0" incoming="_ViTwCfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwG_hYEeaxkoRKVpmNyQ" target="_ViTwI_hYEeaxkoRKVpmNyQ" source="_ViTwL_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwHPhYEeaxkoRKVpmNyQ" target="_ViTwHfhYEeaxkoRKVpmNyQ" source="_ViTwJPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_ViTwHfhYEeaxkoRKVpmNyQ" name="Collect(SendSignal(Continue))" incoming="_ViTwHPhYEeaxkoRKVpmNyQ" mode="parallel" inputElement="_ViTwI_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwHvhYEeaxkoRKVpmNyQ" target="_ViTwIPhYEeaxkoRKVpmNyQ" source="_ViTwI_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ViTwH_hYEeaxkoRKVpmNyQ" name="SendSignal(Continue)" signal="_ViUUuPhYEeaxkoRKVpmNyQ">
                <target xmi:id="_ViTwIPhYEeaxkoRKVpmNyQ" name="SendSignal(Continue).target" incoming="_ViTwHvhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwIfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwIvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_ViTwI_hYEeaxkoRKVpmNyQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_ViTwG_hYEeaxkoRKVpmNyQ" outgoing="_ViTwHvhYEeaxkoRKVpmNyQ" regionAsInput="_ViTwHfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwJPhYEeaxkoRKVpmNyQ" name="Feature(Read(tester).result)" outgoing="_ViTwHPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwJfhYEeaxkoRKVpmNyQ" target="_ViTwMvhYEeaxkoRKVpmNyQ" source="_ViTwKPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwJvhYEeaxkoRKVpmNyQ" target="_ViTwLPhYEeaxkoRKVpmNyQ" source="_ViTwMvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTwJ_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_ViTwKPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTwJfhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwKfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwKvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTwK_hYEeaxkoRKVpmNyQ" name="Read(tester)" structuralFeature="_ViTvkfhYEeaxkoRKVpmNyQ">
                <object xmi:id="_ViTwLPhYEeaxkoRKVpmNyQ" name="Read(tester).object" incoming="_ViTwJvhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwLfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwLvhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViTwL_hYEeaxkoRKVpmNyQ" name="Read(tester).result" outgoing="_ViTwG_hYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwMPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwMfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ViTwMvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTwJfhYEeaxkoRKVpmNyQ" outgoing="_ViTwJvhYEeaxkoRKVpmNyQ"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTwM_hYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_ViTwgPhYEeaxkoRKVpmNyQ" node="_ViTwNPhYEeaxkoRKVpmNyQ" group="_ViTwNPhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_ViTwNPhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTwNfhYEeaxkoRKVpmNyQ" name="Test$initialization$1" specification="_ViTwd_hYEeaxkoRKVpmNyQ" node="_ViTwNvhYEeaxkoRKVpmNyQ" group="_ViTwNvhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_ViTwNvhYEeaxkoRKVpmNyQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwN_hYEeaxkoRKVpmNyQ" target="_ViTwRfhYEeaxkoRKVpmNyQ" source="_ViTwQvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwOPhYEeaxkoRKVpmNyQ" target="_ViTwT_hYEeaxkoRKVpmNyQ" source="_ViTwRfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwOfhYEeaxkoRKVpmNyQ" target="_ViTwWfhYEeaxkoRKVpmNyQ" source="_ViTwRfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwOvhYEeaxkoRKVpmNyQ" target="_ViTwYPhYEeaxkoRKVpmNyQ" source="_ViTwXPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwO_hYEeaxkoRKVpmNyQ" target="_ViTwbPhYEeaxkoRKVpmNyQ" source="_ViTwY_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwPPhYEeaxkoRKVpmNyQ" target="_ViTwcvhYEeaxkoRKVpmNyQ" source="_ViTwZ_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwPfhYEeaxkoRKVpmNyQ" target="_ViTwdvhYEeaxkoRKVpmNyQ" source="_ViTwdfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwPvhYEeaxkoRKVpmNyQ" target="_ViTwdvhYEeaxkoRKVpmNyQ" source="_ViTwb_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwP_hYEeaxkoRKVpmNyQ" target="_ViTwRvhYEeaxkoRKVpmNyQ" source="_ViTwdvhYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTwQPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTwQfhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_ViTwQvhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTwN_hYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwQ_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwRPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ViTwRfhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTwN_hYEeaxkoRKVpmNyQ" outgoing="_ViTwOPhYEeaxkoRKVpmNyQ _ViTwOfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwRvhYEeaxkoRKVpmNyQ" name="Initialization" incoming="_ViTwP_hYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwR_hYEeaxkoRKVpmNyQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwSPhYEeaxkoRKVpmNyQ" target="_ViTwVfhYEeaxkoRKVpmNyQ" source="_ViTwSvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTwSfhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_ViTwSvhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViTwSPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwS_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwTPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTwTfhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTwTvhYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1)" structuralFeature="_ViTvjvhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                <object xmi:id="_ViTwT_hYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1).object" incoming="_ViTwOPhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwUPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwUfhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_ViTwUvhYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1).result" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwU_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwVPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:id="_ViTwVfhYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1).value" incoming="_ViTwSPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwVvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwV_hYEeaxkoRKVpmNyQ" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTwWPhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1)" structuralFeature="_ViTvjvhYEeaxkoRKVpmNyQ">
            <object xmi:id="_ViTwWfhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).object" incoming="_ViTwOfhYEeaxkoRKVpmNyQ" type="_ViTviPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwWvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwW_hYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_ViTwXPhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).result" outgoing="_ViTwOvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwXfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwXvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTwX_hYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_ViTwYPhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTwOvhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwYfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwYvhYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_ViTwY_hYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTwO_hYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwZPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwZfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTwZvhYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_ViTwZ_hYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTwPPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwaPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwafhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ViTwavhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTwa_hYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_ViTwbPhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTwO_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwbfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwbvhYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_ViTwb_hYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTwPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwcPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwcfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_ViTwcvhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTwPPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwc_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwdPhYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ViTwdfhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTwPfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ViTwdvhYEeaxkoRKVpmNyQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_ViTwPfhYEeaxkoRKVpmNyQ _ViTwPvhYEeaxkoRKVpmNyQ" outgoing="_ViTwP_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTwPvhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_ViTwd_hYEeaxkoRKVpmNyQ" name="Test$initialization$1" visibility="protected" method="_ViTwNfhYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_ViTwePhYEeaxkoRKVpmNyQ" name="Test" visibility="protected" method="_ViTvlPhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_ViTwefhYEeaxkoRKVpmNyQ" name="tester" visibility="package" type="_ViTwgfhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwevhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwe_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ViTwfPhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViTviPhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwffhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwfvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ViTwf_hYEeaxkoRKVpmNyQ" name="done" visibility="public" method="_ViTwB_hYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_ViTwgPhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_ViTwM_hYEeaxkoRKVpmNyQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ViTwgfhYEeaxkoRKVpmNyQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_ViTwgvhYEeaxkoRKVpmNyQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwg_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwhPhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTwhfhYEeaxkoRKVpmNyQ" name="Tester$method$1" specification="_ViUUs_hYEeaxkoRKVpmNyQ" node="_ViTwivhYEeaxkoRKVpmNyQ _ViTwi_hYEeaxkoRKVpmNyQ" group="_ViTwi_hYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViTwhvhYEeaxkoRKVpmNyQ" name="" type="_ViTwgfhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwh_hYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwiPhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwifhYEeaxkoRKVpmNyQ" target="_ViTwivhYEeaxkoRKVpmNyQ" source="_ViTwnPhYEeaxkoRKVpmNyQ"/>
          <structuredNode xmi:id="_ViTwi_hYEeaxkoRKVpmNyQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwjPhYEeaxkoRKVpmNyQ" target="_ViTwnPhYEeaxkoRKVpmNyQ" source="_ViTwmfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwjfhYEeaxkoRKVpmNyQ" target="_ViTwnvhYEeaxkoRKVpmNyQ" source="_ViTwnPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwjvhYEeaxkoRKVpmNyQ" target="_ViTwl_hYEeaxkoRKVpmNyQ" source="_ViTwnfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwj_hYEeaxkoRKVpmNyQ" target="_ViTwovhYEeaxkoRKVpmNyQ" source="_ViTwnPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwkPhYEeaxkoRKVpmNyQ" target="_ViTwqfhYEeaxkoRKVpmNyQ" source="_ViTwpfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwkfhYEeaxkoRKVpmNyQ" target="_ViTwtfhYEeaxkoRKVpmNyQ" source="_ViTwrPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwkvhYEeaxkoRKVpmNyQ" target="_ViTwu_hYEeaxkoRKVpmNyQ" source="_ViTwsPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwk_hYEeaxkoRKVpmNyQ" target="_ViTwv_hYEeaxkoRKVpmNyQ" source="_ViTwvvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwlPhYEeaxkoRKVpmNyQ" target="_ViTwv_hYEeaxkoRKVpmNyQ" source="_ViTwuPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwlfhYEeaxkoRKVpmNyQ" target="_ViTwnfhYEeaxkoRKVpmNyQ" source="_ViTwv_hYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTwlvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTwl_hYEeaxkoRKVpmNyQ" name="Body" incoming="_ViTwjvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTwmPhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViTwmfhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTwjPhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwmvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwm_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTwnPhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTwjPhYEeaxkoRKVpmNyQ" outgoing="_ViTwifhYEeaxkoRKVpmNyQ _ViTwjfhYEeaxkoRKVpmNyQ _ViTwj_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ViTwnfhYEeaxkoRKVpmNyQ" name="Call(Tester$initialization$1)" incoming="_ViTwlfhYEeaxkoRKVpmNyQ" outgoing="_ViTwjvhYEeaxkoRKVpmNyQ" operation="_ViUUsvhYEeaxkoRKVpmNyQ">
              <target xmi:id="_ViTwnvhYEeaxkoRKVpmNyQ" name="Call(Tester$initialization$1).target" incoming="_ViTwjfhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwn_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwoPhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTwofhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_ViTwgvhYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViTwovhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).object" incoming="_ViTwj_hYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwo_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwpPhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViTwpfhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).result" outgoing="_ViTwkPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwpvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwp_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTwqPhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViTwqfhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTwkPhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwqvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwq_hYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViTwrPhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTwkfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwrfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwrvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTwr_hYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViTwsPhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTwkvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwsfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwsvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViTws_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViTwtPhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViTwtfhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTwkfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwtvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwt_hYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViTwuPhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTwlPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwufhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwuvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViTwu_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTwkvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTwvPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTwvfhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViTwvvhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTwk_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViTwv_hYEeaxkoRKVpmNyQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_ViTwk_hYEeaxkoRKVpmNyQ _ViTwlPhYEeaxkoRKVpmNyQ" outgoing="_ViTwlfhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTwlPhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViTwivhYEeaxkoRKVpmNyQ" name="Return" incoming="_ViTwifhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" parameter="_ViTwhvhYEeaxkoRKVpmNyQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTwwPhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_ViUUt_hYEeaxkoRKVpmNyQ" node="_ViTwwfhYEeaxkoRKVpmNyQ" group="_ViTwwfhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTwwfhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ViTwwvhYEeaxkoRKVpmNyQ" name="Tester$initialization$1" specification="_ViUUsvhYEeaxkoRKVpmNyQ" node="_ViTww_hYEeaxkoRKVpmNyQ" group="_ViTww_hYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_ViTww_hYEeaxkoRKVpmNyQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwxPhYEeaxkoRKVpmNyQ" target="_ViTw0vhYEeaxkoRKVpmNyQ" source="_ViTwz_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwxfhYEeaxkoRKVpmNyQ" target="_ViTw3PhYEeaxkoRKVpmNyQ" source="_ViTw0vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwxvhYEeaxkoRKVpmNyQ" target="_ViTw5vhYEeaxkoRKVpmNyQ" source="_ViTw0vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwx_hYEeaxkoRKVpmNyQ" target="_ViTw7fhYEeaxkoRKVpmNyQ" source="_ViTw6fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwyPhYEeaxkoRKVpmNyQ" target="_ViUUp_hYEeaxkoRKVpmNyQ" source="_ViTw8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwyfhYEeaxkoRKVpmNyQ" target="_ViUUrfhYEeaxkoRKVpmNyQ" source="_ViUUovhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwyvhYEeaxkoRKVpmNyQ" target="_ViUUsfhYEeaxkoRKVpmNyQ" source="_ViUUsPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTwy_hYEeaxkoRKVpmNyQ" target="_ViUUsfhYEeaxkoRKVpmNyQ" source="_ViUUqvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViTwzPhYEeaxkoRKVpmNyQ" target="_ViTw0_hYEeaxkoRKVpmNyQ" source="_ViUUsfhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViTwzfhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ViTwzvhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_ViTwz_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_ViTwxPhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw0PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw0fhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViTw0vhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_ViTwxPhYEeaxkoRKVpmNyQ" outgoing="_ViTwxfhYEeaxkoRKVpmNyQ _ViTwxvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTw0_hYEeaxkoRKVpmNyQ" name="Initialization" incoming="_ViTwzPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViTw1PhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViTw1fhYEeaxkoRKVpmNyQ" target="_ViTw4vhYEeaxkoRKVpmNyQ" source="_ViTw1_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViTw1vhYEeaxkoRKVpmNyQ" name="Value(true)">
                  <result xmi:id="_ViTw1_hYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViTw1fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw2PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw2fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ViTw2vhYEeaxkoRKVpmNyQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ViTw2_hYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_ViTwgvhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_ViTw3PhYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1).object" incoming="_ViTwxfhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw3fhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw3vhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViTw3_hYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1).result" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw4PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw4fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_ViTw4vhYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1).value" incoming="_ViTw1fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw4_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw5PhYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ViTw5fhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_ViTwgvhYEeaxkoRKVpmNyQ">
              <object xmi:id="_ViTw5vhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).object" incoming="_ViTwxvhYEeaxkoRKVpmNyQ" type="_ViTwgfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw5_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw6PhYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_ViTw6fhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).result" outgoing="_ViTwx_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw6vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw6_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViTw7PhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_ViTw7fhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_ViTwx_hYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw7vhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViTw7_hYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViTw8PhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_ViTwyPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViTw8fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUoPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUUofhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_ViUUovhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_ViTwyfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUo_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUpPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ViUUpfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViUUpvhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_ViUUp_hYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_ViTwyPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUqPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUqfhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViUUqvhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_ViTwy_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUq_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUrPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViUUrfhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_ViTwyfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUrvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUr_hYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViUUsPhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_ViTwyvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViUUsfhYEeaxkoRKVpmNyQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_ViTwyvhYEeaxkoRKVpmNyQ _ViTwy_hYEeaxkoRKVpmNyQ" outgoing="_ViTwzPhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViTwy_hYEeaxkoRKVpmNyQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_ViUUsvhYEeaxkoRKVpmNyQ" name="Tester$initialization$1" visibility="protected" method="_ViTwwvhYEeaxkoRKVpmNyQ"/>
        <ownedOperation xmi:id="_ViUUs_hYEeaxkoRKVpmNyQ" name="Tester" visibility="public" method="_ViTwhfhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_ViUUtPhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_ViTwgfhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUtfhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUtvhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ViUUt_hYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_ViTwwPhYEeaxkoRKVpmNyQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_ViUUuPhYEeaxkoRKVpmNyQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_ViUUufhYEeaxkoRKVpmNyQ" name="Continue" signal="_ViUUuPhYEeaxkoRKVpmNyQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_ViUUuvhYEeaxkoRKVpmNyQ" name="AssertTrue" visibility="public" node="_ViUU0fhYEeaxkoRKVpmNyQ _ViUU1PhYEeaxkoRKVpmNyQ _ViUU0vhYEeaxkoRKVpmNyQ _ViUU2vhYEeaxkoRKVpmNyQ _ViUU4PhYEeaxkoRKVpmNyQ _ViUU0_hYEeaxkoRKVpmNyQ" group="_ViUU1PhYEeaxkoRKVpmNyQ _ViUU2vhYEeaxkoRKVpmNyQ _ViUU4PhYEeaxkoRKVpmNyQ">
      <packageImport xmi:id="_ViUUu_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ViUUvPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ViUUvfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ViUUvvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ViUUv_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_ViUUwPhYEeaxkoRKVpmNyQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUwfhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUwvhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ViUUw_hYEeaxkoRKVpmNyQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUUxPhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUUxfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUxvhYEeaxkoRKVpmNyQ" target="_ViUU1vhYEeaxkoRKVpmNyQ" source="_ViUU0fhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUx_hYEeaxkoRKVpmNyQ" target="_ViUU3PhYEeaxkoRKVpmNyQ" source="_ViUU0vhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUyPhYEeaxkoRKVpmNyQ" target="_ViUU_vhYEeaxkoRKVpmNyQ" source="_ViUU3_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUyfhYEeaxkoRKVpmNyQ" target="_ViUVKvhYEeaxkoRKVpmNyQ" source="_ViUU2fhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUyvhYEeaxkoRKVpmNyQ" target="_ViUVMvhYEeaxkoRKVpmNyQ" source="_ViUU3_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUy_hYEeaxkoRKVpmNyQ" target="_ViUVOvhYEeaxkoRKVpmNyQ" source="_ViUU2fhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUzPhYEeaxkoRKVpmNyQ" target="_ViUVR_hYEeaxkoRKVpmNyQ" source="_ViUU3_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUUzfhYEeaxkoRKVpmNyQ" target="_ViUVT_hYEeaxkoRKVpmNyQ" source="_ViUU2fhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUUzvhYEeaxkoRKVpmNyQ" target="_ViUU0_hYEeaxkoRKVpmNyQ" source="_ViUU1PhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUUz_hYEeaxkoRKVpmNyQ" target="_ViUU0_hYEeaxkoRKVpmNyQ" source="_ViUU2vhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUU0PhYEeaxkoRKVpmNyQ" target="_ViUU4PhYEeaxkoRKVpmNyQ" source="_ViUU0_hYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_ViUU1PhYEeaxkoRKVpmNyQ" name="Node(Input(label))" outgoing="_ViUUzvhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU1fhYEeaxkoRKVpmNyQ" target="_ViUU2fhYEeaxkoRKVpmNyQ" source="_ViUU1vhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViUU1vhYEeaxkoRKVpmNyQ" name="Input(label)" incoming="_ViUUxvhYEeaxkoRKVpmNyQ" outgoing="_ViUU1fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUU1_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUU2PhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUU2fhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_ViUU1fhYEeaxkoRKVpmNyQ" outgoing="_ViUUyfhYEeaxkoRKVpmNyQ _ViUUy_hYEeaxkoRKVpmNyQ _ViUUzfhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViUU2vhYEeaxkoRKVpmNyQ" name="Node(Input(condition))" outgoing="_ViUUz_hYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU2_hYEeaxkoRKVpmNyQ" target="_ViUU3_hYEeaxkoRKVpmNyQ" source="_ViUU3PhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViUU3PhYEeaxkoRKVpmNyQ" name="Input(condition)" incoming="_ViUUx_hYEeaxkoRKVpmNyQ" outgoing="_ViUU2_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUU3fhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUU3vhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUU3_hYEeaxkoRKVpmNyQ" name="Fork(condition)" incoming="_ViUU2_hYEeaxkoRKVpmNyQ" outgoing="_ViUUyPhYEeaxkoRKVpmNyQ _ViUUyvhYEeaxkoRKVpmNyQ _ViUUzPhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViUU4PhYEeaxkoRKVpmNyQ" name="Body(AssertTrue)" incoming="_ViUU0PhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU4fhYEeaxkoRKVpmNyQ" target="_ViUVXfhYEeaxkoRKVpmNyQ" source="_ViUVV_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU4vhYEeaxkoRKVpmNyQ" target="_ViUVXvhYEeaxkoRKVpmNyQ" source="_ViUVWvhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_ViUU4_hYEeaxkoRKVpmNyQ" name="IfStatement@5913fdc6">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUU5PhYEeaxkoRKVpmNyQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU5fhYEeaxkoRKVpmNyQ" target="_ViUU9fhYEeaxkoRKVpmNyQ" source="_ViUU_vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU5vhYEeaxkoRKVpmNyQ" target="_ViUVAPhYEeaxkoRKVpmNyQ" source="_ViUU_vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU5_hYEeaxkoRKVpmNyQ" target="_ViUVBvhYEeaxkoRKVpmNyQ" source="_ViUVA_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU6PhYEeaxkoRKVpmNyQ" target="_ViUVB_hYEeaxkoRKVpmNyQ" source="_ViUU-PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU6fhYEeaxkoRKVpmNyQ" target="_ViUVCPhYEeaxkoRKVpmNyQ" source="_ViUVBvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU6vhYEeaxkoRKVpmNyQ" target="_ViUVCPhYEeaxkoRKVpmNyQ" source="_ViUVBvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU6_hYEeaxkoRKVpmNyQ" target="_ViUVB_hYEeaxkoRKVpmNyQ" source="_ViUVCPhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUU7PhYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU7fhYEeaxkoRKVpmNyQ" target="_ViUU-_hYEeaxkoRKVpmNyQ" source="_ViUU8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUU7vhYEeaxkoRKVpmNyQ" target="_ViUVCvhYEeaxkoRKVpmNyQ" source="_ViUVB_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUU7_hYEeaxkoRKVpmNyQ" name="Value(true)">
              <result xmi:id="_ViUU8PhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_ViUU7fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUU8fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUU8vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ViUU8_hYEeaxkoRKVpmNyQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViUU9PhYEeaxkoRKVpmNyQ" name="Test(==)">
              <first xmi:id="_ViUU9fhYEeaxkoRKVpmNyQ" name="Test(==).first" incoming="_ViUU5fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUU9vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUU9_hYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViUU-PhYEeaxkoRKVpmNyQ" name="Test(==).result" outgoing="_ViUU6PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUU-fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUU-vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViUU-_hYEeaxkoRKVpmNyQ" name="Test(==).second" incoming="_ViUU7fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUU_PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUU_fhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUU_vhYEeaxkoRKVpmNyQ" name="Fork(Fork(condition))" incoming="_ViUUyPhYEeaxkoRKVpmNyQ" outgoing="_ViUU5fhYEeaxkoRKVpmNyQ _ViUU5vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUU__hYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_ViUVAPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViUU5vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVAfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVAvhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViUVA_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViUU5_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVBPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVBfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUVBvhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_ViUU5_hYEeaxkoRKVpmNyQ" outgoing="_ViUU6fhYEeaxkoRKVpmNyQ _ViUU6vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_ViUVB_hYEeaxkoRKVpmNyQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_ViUU6PhYEeaxkoRKVpmNyQ _ViUU6_hYEeaxkoRKVpmNyQ" outgoing="_ViUU7vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViUVCPhYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_ViUU6fhYEeaxkoRKVpmNyQ _ViUU6vhYEeaxkoRKVpmNyQ" outgoing="_ViUU6_hYEeaxkoRKVpmNyQ" decisionInputFlow="_ViUU6vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUVCfhYEeaxkoRKVpmNyQ" name="Call(Not)">
              <argument xmi:id="_ViUVCvhYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_ViUU7vhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVC_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVDPhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViUVDfhYEeaxkoRKVpmNyQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVDvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVD_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVEPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@e3ced31">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVEfhYEeaxkoRKVpmNyQ" target="_ViUVFPhYEeaxkoRKVpmNyQ" source="_ViUVI_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVEvhYEeaxkoRKVpmNyQ" target="_ViUVE_hYEeaxkoRKVpmNyQ" source="_ViUVGvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUVE_hYEeaxkoRKVpmNyQ" name="Call(WriteLine)" incoming="_ViUVEvhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViUVFPhYEeaxkoRKVpmNyQ" name="Call(WriteLine).argument(value)" incoming="_ViUVEfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVFfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVFvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViUVF_hYEeaxkoRKVpmNyQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVGPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVGfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVGvhYEeaxkoRKVpmNyQ" name="Tuple@5a1f4727" outgoing="_ViUVEvhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVG_hYEeaxkoRKVpmNyQ" target="_ViUVJ_hYEeaxkoRKVpmNyQ" source="_ViUVHfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUVHPhYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_ViUVHfhYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_ViUVG_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVHvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVH_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ViUVIPhYEeaxkoRKVpmNyQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVIfhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVIvhYEeaxkoRKVpmNyQ" target="_ViUVI_hYEeaxkoRKVpmNyQ" source="_ViUVLfhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViUVI_hYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_ViUVIvhYEeaxkoRKVpmNyQ" outgoing="_ViUVEfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVJPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVJfhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUVJvhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                  <argument xmi:id="_ViUVJ_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_ViUVG_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVKPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVKfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViUVKvhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_ViUUyfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVK_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVLPhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViUVLfhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_ViUVIvhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVLvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVL_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVMPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVMfhYEeaxkoRKVpmNyQ" target="_ViUVNfhYEeaxkoRKVpmNyQ" source="_ViUVMvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUVMvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).input" incoming="_ViUUyvhYEeaxkoRKVpmNyQ" outgoing="_ViUVMfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVM_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVNPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUVNfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).output" incoming="_ViUVMfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVNvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVN_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVOPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVOfhYEeaxkoRKVpmNyQ" target="_ViUVPfhYEeaxkoRKVpmNyQ" source="_ViUVOvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUVOvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_ViUUy_hYEeaxkoRKVpmNyQ" outgoing="_ViUVOfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVO_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVPPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUVPfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_ViUVOfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVPvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVP_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUVQPhYEeaxkoRKVpmNyQ" name="Value(true)">
            <result xmi:id="_ViUVQfhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVQvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVQ_hYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_ViUVRPhYEeaxkoRKVpmNyQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVRfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVRvhYEeaxkoRKVpmNyQ" target="_ViUVSvhYEeaxkoRKVpmNyQ" source="_ViUVR_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUVR_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).input" incoming="_ViUUzPhYEeaxkoRKVpmNyQ" outgoing="_ViUVRvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVSPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVSfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUVSvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).output" incoming="_ViUVRvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVS_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVTPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVTfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVTvhYEeaxkoRKVpmNyQ" target="_ViUVUvhYEeaxkoRKVpmNyQ" source="_ViUVT_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUVT_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_ViUUzfhYEeaxkoRKVpmNyQ" outgoing="_ViUVTvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVUPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVUfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUVUvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_ViUVTvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVU_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVVPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_ViUVVfhYEeaxkoRKVpmNyQ" body="_ViUVEPhYEeaxkoRKVpmNyQ _ViUVMPhYEeaxkoRKVpmNyQ _ViUVOPhYEeaxkoRKVpmNyQ" bodyOutput="_ViUVNfhYEeaxkoRKVpmNyQ _ViUVPfhYEeaxkoRKVpmNyQ" decider="_ViUVDfhYEeaxkoRKVpmNyQ" successorClause="_ViUVVvhYEeaxkoRKVpmNyQ" test="_ViUU5PhYEeaxkoRKVpmNyQ"/>
          <clause xmi:id="_ViUVVvhYEeaxkoRKVpmNyQ" body="_ViUVRfhYEeaxkoRKVpmNyQ _ViUVTfhYEeaxkoRKVpmNyQ" bodyOutput="_ViUVSvhYEeaxkoRKVpmNyQ _ViUVUvhYEeaxkoRKVpmNyQ" decider="_ViUVQfhYEeaxkoRKVpmNyQ" predecessorClause="_ViUVVfhYEeaxkoRKVpmNyQ" test="_ViUVQPhYEeaxkoRKVpmNyQ"/>
          <result xmi:id="_ViUVV_hYEeaxkoRKVpmNyQ" name="IfStatement@5913fdc6.result(condition)" outgoing="_ViUU4fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVWPhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVWfhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_ViUVWvhYEeaxkoRKVpmNyQ" name="IfStatement@5913fdc6.result(label)" outgoing="_ViUU4vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVW_hYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVXPhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUVXfhYEeaxkoRKVpmNyQ" name="Fork(condition)" incoming="_ViUU4fhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUVXvhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_ViUU4vhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViUU0fhYEeaxkoRKVpmNyQ" name="Input(label)" outgoing="_ViUUxvhYEeaxkoRKVpmNyQ" parameter="_ViUUwPhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViUU0vhYEeaxkoRKVpmNyQ" name="Input(condition)" outgoing="_ViUUx_hYEeaxkoRKVpmNyQ" parameter="_ViUUw_hYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_ViUU0_hYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViUUzvhYEeaxkoRKVpmNyQ _ViUUz_hYEeaxkoRKVpmNyQ" outgoing="_ViUU0PhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_ViUVX_hYEeaxkoRKVpmNyQ" name="AssertEqual" visibility="public" node="_ViUVg_hYEeaxkoRKVpmNyQ _ViUVh_hYEeaxkoRKVpmNyQ _ViUVhPhYEeaxkoRKVpmNyQ _ViUVjfhYEeaxkoRKVpmNyQ _ViUVhfhYEeaxkoRKVpmNyQ _ViUVk_hYEeaxkoRKVpmNyQ _ViUVmfhYEeaxkoRKVpmNyQ _ViUVhvhYEeaxkoRKVpmNyQ" group="_ViUVh_hYEeaxkoRKVpmNyQ _ViUVjfhYEeaxkoRKVpmNyQ _ViUVk_hYEeaxkoRKVpmNyQ _ViUVmfhYEeaxkoRKVpmNyQ">
      <packageImport xmi:id="_ViUVYPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ViUVYfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ViUVYvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ViUVY_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ViUVZPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_ViUVZfhYEeaxkoRKVpmNyQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVZvhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVZ_hYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ViUVaPhYEeaxkoRKVpmNyQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVafhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVavhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ViUVa_hYEeaxkoRKVpmNyQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVbPhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVbfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVbvhYEeaxkoRKVpmNyQ" target="_ViUVifhYEeaxkoRKVpmNyQ" source="_ViUVg_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVb_hYEeaxkoRKVpmNyQ" target="_ViUVj_hYEeaxkoRKVpmNyQ" source="_ViUVhPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVcPhYEeaxkoRKVpmNyQ" target="_ViUVlfhYEeaxkoRKVpmNyQ" source="_ViUVhfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVcfhYEeaxkoRKVpmNyQ" target="_ViUV0PhYEeaxkoRKVpmNyQ" source="_ViUVkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVcvhYEeaxkoRKVpmNyQ" target="_ViUV2PhYEeaxkoRKVpmNyQ" source="_ViUVmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVc_hYEeaxkoRKVpmNyQ" target="_ViUWFPhYEeaxkoRKVpmNyQ" source="_ViUVjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVdPhYEeaxkoRKVpmNyQ" target="_ViUWRPhYEeaxkoRKVpmNyQ" source="_ViUVmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVdfhYEeaxkoRKVpmNyQ" target="_ViUWi_hYEeaxkoRKVpmNyQ" source="_ViUVjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVdvhYEeaxkoRKVpmNyQ" target="_ViUWm_hYEeaxkoRKVpmNyQ" source="_ViUVmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVd_hYEeaxkoRKVpmNyQ" target="_ViUWo_hYEeaxkoRKVpmNyQ" source="_ViUVkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVePhYEeaxkoRKVpmNyQ" target="_ViUWwvhYEeaxkoRKVpmNyQ" source="_ViUVmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVefhYEeaxkoRKVpmNyQ" target="_ViUW5fhYEeaxkoRKVpmNyQ" source="_ViUVjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVevhYEeaxkoRKVpmNyQ" target="_ViUW9fhYEeaxkoRKVpmNyQ" source="_ViUVmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVe_hYEeaxkoRKVpmNyQ" target="_ViUW_fhYEeaxkoRKVpmNyQ" source="_ViUVkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVfPhYEeaxkoRKVpmNyQ" target="_ViUXTPhYEeaxkoRKVpmNyQ" source="_ViUVjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVffhYEeaxkoRKVpmNyQ" target="_ViUXWfhYEeaxkoRKVpmNyQ" source="_ViUVmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVfvhYEeaxkoRKVpmNyQ" target="_ViUXYfhYEeaxkoRKVpmNyQ" source="_ViUVkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVf_hYEeaxkoRKVpmNyQ" target="_ViUVhvhYEeaxkoRKVpmNyQ" source="_ViUVh_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVgPhYEeaxkoRKVpmNyQ" target="_ViUVhvhYEeaxkoRKVpmNyQ" source="_ViUVjfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVgfhYEeaxkoRKVpmNyQ" target="_ViUVhvhYEeaxkoRKVpmNyQ" source="_ViUVk_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVgvhYEeaxkoRKVpmNyQ" target="_ViUVmfhYEeaxkoRKVpmNyQ" source="_ViUVhvhYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_ViUVh_hYEeaxkoRKVpmNyQ" name="Node(Input(label))" outgoing="_ViUVf_hYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUViPhYEeaxkoRKVpmNyQ" target="_ViUVjPhYEeaxkoRKVpmNyQ" source="_ViUVifhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViUVifhYEeaxkoRKVpmNyQ" name="Input(label)" incoming="_ViUVbvhYEeaxkoRKVpmNyQ" outgoing="_ViUViPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVivhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVi_hYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUVjPhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_ViUViPhYEeaxkoRKVpmNyQ" outgoing="_ViUVc_hYEeaxkoRKVpmNyQ _ViUVdfhYEeaxkoRKVpmNyQ _ViUVefhYEeaxkoRKVpmNyQ _ViUVfPhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViUVjfhYEeaxkoRKVpmNyQ" name="Node(Input(value1))" outgoing="_ViUVgPhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVjvhYEeaxkoRKVpmNyQ" target="_ViUVkvhYEeaxkoRKVpmNyQ" source="_ViUVj_hYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViUVj_hYEeaxkoRKVpmNyQ" name="Input(value1)" incoming="_ViUVb_hYEeaxkoRKVpmNyQ" outgoing="_ViUVjvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVkPhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVkfhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUVkvhYEeaxkoRKVpmNyQ" name="Fork(value1)" incoming="_ViUVjvhYEeaxkoRKVpmNyQ" outgoing="_ViUVcfhYEeaxkoRKVpmNyQ _ViUVd_hYEeaxkoRKVpmNyQ _ViUVe_hYEeaxkoRKVpmNyQ _ViUVfvhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViUVk_hYEeaxkoRKVpmNyQ" name="Node(Input(value2))" outgoing="_ViUVgfhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVlPhYEeaxkoRKVpmNyQ" target="_ViUVmPhYEeaxkoRKVpmNyQ" source="_ViUVlfhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViUVlfhYEeaxkoRKVpmNyQ" name="Input(value2)" incoming="_ViUVcPhYEeaxkoRKVpmNyQ" outgoing="_ViUVlPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVlvhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVl_hYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViUVmPhYEeaxkoRKVpmNyQ" name="Fork(value2)" incoming="_ViUVlPhYEeaxkoRKVpmNyQ" outgoing="_ViUVcvhYEeaxkoRKVpmNyQ _ViUVdPhYEeaxkoRKVpmNyQ _ViUVdvhYEeaxkoRKVpmNyQ _ViUVePhYEeaxkoRKVpmNyQ _ViUVevhYEeaxkoRKVpmNyQ _ViUVffhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViUVmfhYEeaxkoRKVpmNyQ" name="Body(AssertEqual)" incoming="_ViUVgvhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVmvhYEeaxkoRKVpmNyQ" target="_ViU7ufhYEeaxkoRKVpmNyQ" source="_ViUXafhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVm_hYEeaxkoRKVpmNyQ" target="_ViU7uvhYEeaxkoRKVpmNyQ" source="_ViU7sPhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVnPhYEeaxkoRKVpmNyQ" target="_ViU7u_hYEeaxkoRKVpmNyQ" source="_ViU7s_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVnfhYEeaxkoRKVpmNyQ" target="_ViU7vPhYEeaxkoRKVpmNyQ" source="_ViU7tvhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_ViUVnvhYEeaxkoRKVpmNyQ" name="IfStatement@38f0b10c">
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVn_hYEeaxkoRKVpmNyQ" target="_ViUWLvhYEeaxkoRKVpmNyQ" source="_ViUV-_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVoPhYEeaxkoRKVpmNyQ" target="_ViUXEfhYEeaxkoRKVpmNyQ" source="_ViUXBfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVofhYEeaxkoRKVpmNyQ" target="_ViUXEvhYEeaxkoRKVpmNyQ" source="_ViUXCPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVovhYEeaxkoRKVpmNyQ" target="_ViUXE_hYEeaxkoRKVpmNyQ" source="_ViUXC_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVo_hYEeaxkoRKVpmNyQ" target="_ViUXFPhYEeaxkoRKVpmNyQ" source="_ViUXDvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVpPhYEeaxkoRKVpmNyQ" target="_ViUWUPhYEeaxkoRKVpmNyQ" source="_ViUWMPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVpfhYEeaxkoRKVpmNyQ" target="_ViUWb_hYEeaxkoRKVpmNyQ" source="_ViUWMPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVpvhYEeaxkoRKVpmNyQ" target="_ViUWk_hYEeaxkoRKVpmNyQ" source="_ViUWMPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVp_hYEeaxkoRKVpmNyQ" target="_ViUW7fhYEeaxkoRKVpmNyQ" source="_ViUWMPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVqPhYEeaxkoRKVpmNyQ" target="_ViUWRvhYEeaxkoRKVpmNyQ" source="_ViUWLvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVqfhYEeaxkoRKVpmNyQ" target="_ViUXFfhYEeaxkoRKVpmNyQ" source="_ViUWRvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVqvhYEeaxkoRKVpmNyQ" target="_ViUXJ_hYEeaxkoRKVpmNyQ" source="_ViUXEfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVq_hYEeaxkoRKVpmNyQ" target="_ViUXL_hYEeaxkoRKVpmNyQ" source="_ViUXEvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVrPhYEeaxkoRKVpmNyQ" target="_ViUXN_hYEeaxkoRKVpmNyQ" source="_ViUXE_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVrfhYEeaxkoRKVpmNyQ" target="_ViUXP_hYEeaxkoRKVpmNyQ" source="_ViUXFPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUVrvhYEeaxkoRKVpmNyQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVr_hYEeaxkoRKVpmNyQ" target="_ViUVx_hYEeaxkoRKVpmNyQ" source="_ViUV0PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVsPhYEeaxkoRKVpmNyQ" target="_ViUV0vhYEeaxkoRKVpmNyQ" source="_ViUV0PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVsfhYEeaxkoRKVpmNyQ" target="_ViUVzfhYEeaxkoRKVpmNyQ" source="_ViUV2PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVsvhYEeaxkoRKVpmNyQ" target="_ViUV2vhYEeaxkoRKVpmNyQ" source="_ViUV2PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVs_hYEeaxkoRKVpmNyQ" target="_ViUV4fhYEeaxkoRKVpmNyQ" source="_ViUV1fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVtPhYEeaxkoRKVpmNyQ" target="_ViUV4vhYEeaxkoRKVpmNyQ" source="_ViUV3fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVtfhYEeaxkoRKVpmNyQ" target="_ViUV5PhYEeaxkoRKVpmNyQ" source="_ViUV4fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVtvhYEeaxkoRKVpmNyQ" target="_ViUV6_hYEeaxkoRKVpmNyQ" source="_ViUV4vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVt_hYEeaxkoRKVpmNyQ" target="_ViUV8fhYEeaxkoRKVpmNyQ" source="_ViUV4vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVuPhYEeaxkoRKVpmNyQ" target="_ViUVxvhYEeaxkoRKVpmNyQ" source="_ViUV8fhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUVufhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVuvhYEeaxkoRKVpmNyQ" target="_ViUV4_hYEeaxkoRKVpmNyQ" source="_ViUV8fhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUVu_hYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVvPhYEeaxkoRKVpmNyQ" target="_ViUV8vhYEeaxkoRKVpmNyQ" source="_ViUV4PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVvfhYEeaxkoRKVpmNyQ" target="_ViUV8vhYEeaxkoRKVpmNyQ" source="_ViUV4fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVvvhYEeaxkoRKVpmNyQ" target="_ViUV8fhYEeaxkoRKVpmNyQ" source="_ViUV8vhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUVv_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUVwPhYEeaxkoRKVpmNyQ" target="_ViUV6vhYEeaxkoRKVpmNyQ" source="_ViUV8vhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUVwfhYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVwvhYEeaxkoRKVpmNyQ" target="_ViUV8_hYEeaxkoRKVpmNyQ" source="_ViUVyvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVw_hYEeaxkoRKVpmNyQ" target="_ViUV8_hYEeaxkoRKVpmNyQ" source="_ViUV5_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVxPhYEeaxkoRKVpmNyQ" target="_ViUV8_hYEeaxkoRKVpmNyQ" source="_ViUV7vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUVxfhYEeaxkoRKVpmNyQ" target="_ViUV9fhYEeaxkoRKVpmNyQ" source="_ViUV8_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViUVxvhYEeaxkoRKVpmNyQ" name="Test(==)" incoming="_ViUVuPhYEeaxkoRKVpmNyQ">
              <first xmi:id="_ViUVx_hYEeaxkoRKVpmNyQ" name="Test(==).first" incoming="_ViUVr_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVyPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVyfhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViUVyvhYEeaxkoRKVpmNyQ" name="Test(==).result" outgoing="_ViUVwvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVy_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVzPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViUVzfhYEeaxkoRKVpmNyQ" name="Test(==).second" incoming="_ViUVsfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUVzvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUVz_hYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUV0PhYEeaxkoRKVpmNyQ" name="Fork(Fork(value1))" incoming="_ViUVcfhYEeaxkoRKVpmNyQ" outgoing="_ViUVr_hYEeaxkoRKVpmNyQ _ViUVsPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUV0fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_ViUV0vhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViUVsPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV0_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV1PhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViUV1fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViUVs_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV1vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV1_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUV2PhYEeaxkoRKVpmNyQ" name="Fork(Fork(value2))" incoming="_ViUVcvhYEeaxkoRKVpmNyQ" outgoing="_ViUVsfhYEeaxkoRKVpmNyQ _ViUVsvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUV2fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_ViUV2vhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViUVsvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV2_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV3PhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViUV3fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViUVtPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV3vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV3_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ViUV4PhYEeaxkoRKVpmNyQ" name="Initial(Test(==))" outgoing="_ViUVvPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUV4fhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_ViUVs_hYEeaxkoRKVpmNyQ" outgoing="_ViUVtfhYEeaxkoRKVpmNyQ _ViUVvfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUV4vhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_ViUVtPhYEeaxkoRKVpmNyQ" outgoing="_ViUVtvhYEeaxkoRKVpmNyQ _ViUVt_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUV4_hYEeaxkoRKVpmNyQ" name="Call(Not)" incoming="_ViUVuvhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViUV5PhYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_ViUVtfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV5fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV5vhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViUV5_hYEeaxkoRKVpmNyQ" name="Call(Not).result(result)" outgoing="_ViUVw_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV6PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV6fhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUV6vhYEeaxkoRKVpmNyQ" name="Call(Not)" incoming="_ViUVwPhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViUV6_hYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_ViUVtvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV7PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV7fhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViUV7vhYEeaxkoRKVpmNyQ" name="Call(Not).result(result)" outgoing="_ViUVxPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV7_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV8PhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViUV8fhYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_ViUVt_hYEeaxkoRKVpmNyQ _ViUVvvhYEeaxkoRKVpmNyQ" outgoing="_ViUVuPhYEeaxkoRKVpmNyQ _ViUVuvhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViUVt_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViUV8vhYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_ViUVvPhYEeaxkoRKVpmNyQ _ViUVvfhYEeaxkoRKVpmNyQ" outgoing="_ViUVvvhYEeaxkoRKVpmNyQ _ViUVwPhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViUVvfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_ViUV8_hYEeaxkoRKVpmNyQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_ViUVwvhYEeaxkoRKVpmNyQ _ViUVw_hYEeaxkoRKVpmNyQ _ViUVxPhYEeaxkoRKVpmNyQ" outgoing="_ViUVxfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUV9PhYEeaxkoRKVpmNyQ" name="Call(Not)">
              <argument xmi:id="_ViUV9fhYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_ViUVxfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV9vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV9_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViUV-PhYEeaxkoRKVpmNyQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUV-fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUV-vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUV-_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@5d09e080" outgoing="_ViUVn_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUV_PhYEeaxkoRKVpmNyQ" target="_ViUV__hYEeaxkoRKVpmNyQ" source="_ViUWIfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUV_fhYEeaxkoRKVpmNyQ" target="_ViUV_vhYEeaxkoRKVpmNyQ" source="_ViUWAvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUV_vhYEeaxkoRKVpmNyQ" name="Call(Write)" incoming="_ViUV_fhYEeaxkoRKVpmNyQ" behavior="_ViU8JfhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViUV__hYEeaxkoRKVpmNyQ" name="Call(Write).argument(value)" incoming="_ViUV_PhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWAPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWAfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWAvhYEeaxkoRKVpmNyQ" name="Tuple@7ebd36ea" outgoing="_ViUV_fhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWA_hYEeaxkoRKVpmNyQ" target="_ViUWEfhYEeaxkoRKVpmNyQ" source="_ViUWB_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWBPhYEeaxkoRKVpmNyQ" target="_ViUWJfhYEeaxkoRKVpmNyQ" source="_ViUWDfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWBfhYEeaxkoRKVpmNyQ" target="_ViUWKPhYEeaxkoRKVpmNyQ" source="_ViUWG_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWBvhYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_ViUWB_hYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_ViUWA_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWCPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWCfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ViUWCvhYEeaxkoRKVpmNyQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWC_hYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWDPhYEeaxkoRKVpmNyQ" target="_ViUWDfhYEeaxkoRKVpmNyQ" source="_ViUWF_hYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViUWDfhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_ViUWDPhYEeaxkoRKVpmNyQ" outgoing="_ViUWBPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWDvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWD_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWEPhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                  <argument xmi:id="_ViUWEfhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_ViUWA_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWEvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWE_hYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViUWFPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_ViUVc_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWFfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWFvhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViUWF_hYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_ViUWDPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWGPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWGfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWGvhYEeaxkoRKVpmNyQ" name="Value(&quot;==&quot;)">
                <result xmi:id="_ViUWG_hYEeaxkoRKVpmNyQ" name="Value(&quot;==&quot;).result" outgoing="_ViUWBfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWHPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWHfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ViUWHvhYEeaxkoRKVpmNyQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWH_hYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWIPhYEeaxkoRKVpmNyQ" target="_ViUWIfhYEeaxkoRKVpmNyQ" source="_ViUWK_hYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViUWIfhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_ViUWIPhYEeaxkoRKVpmNyQ" outgoing="_ViUV_PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWIvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWI_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWJPhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                  <argument xmi:id="_ViUWJfhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_ViUWBPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWJvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWJ_hYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_ViUWKPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_ViUWBfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWKfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWKvhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_ViUWK_hYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_ViUWIPhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWLPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWLfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWLvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@281d37a5" incoming="_ViUVn_hYEeaxkoRKVpmNyQ" outgoing="_ViUVqPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWL_hYEeaxkoRKVpmNyQ" target="_ViUWMPhYEeaxkoRKVpmNyQ" source="_ViUWRfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ViUWMPhYEeaxkoRKVpmNyQ" name="Fork(s)@7216f3d4" incoming="_ViUWL_hYEeaxkoRKVpmNyQ" outgoing="_ViUVpPhYEeaxkoRKVpmNyQ _ViUVpfhYEeaxkoRKVpmNyQ _ViUVpvhYEeaxkoRKVpmNyQ _ViUVp_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWMfhYEeaxkoRKVpmNyQ" name="RightHandSide@131d084f">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_ViUWMvhYEeaxkoRKVpmNyQ" name="CastExpression@131d084f" mode="parallel" outputElement="_ViUWRfhYEeaxkoRKVpmNyQ" inputElement="_ViUWRPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWM_hYEeaxkoRKVpmNyQ" target="_ViUWPPhYEeaxkoRKVpmNyQ" source="_ViUWQvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWNPhYEeaxkoRKVpmNyQ" target="_ViUWQ_hYEeaxkoRKVpmNyQ" source="_ViUWQvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWNfhYEeaxkoRKVpmNyQ" target="_ViUWQ_hYEeaxkoRKVpmNyQ" source="_ViUWP_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWNvhYEeaxkoRKVpmNyQ" target="_ViUWOvhYEeaxkoRKVpmNyQ" source="_ViUWQ_hYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUWN_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWOPhYEeaxkoRKVpmNyQ" target="_ViUWQvhYEeaxkoRKVpmNyQ" source="_ViUWRPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWOfhYEeaxkoRKVpmNyQ" target="_ViUWRfhYEeaxkoRKVpmNyQ" source="_ViUWOvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ViUWOvhYEeaxkoRKVpmNyQ" name="Merge(CastExpression@131d084f.operand)" incoming="_ViUWNvhYEeaxkoRKVpmNyQ" outgoing="_ViUWOfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ViUWO_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_ViUWPPhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(String).object" incoming="_ViUWM_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWPfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWPvhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_ViUWP_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(String).result" outgoing="_ViUWNfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWQPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWQfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_ViUWQvhYEeaxkoRKVpmNyQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_ViUWOPhYEeaxkoRKVpmNyQ" outgoing="_ViUWM_hYEeaxkoRKVpmNyQ _ViUWNPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ViUWQ_hYEeaxkoRKVpmNyQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_ViUWNPhYEeaxkoRKVpmNyQ _ViUWNfhYEeaxkoRKVpmNyQ" outgoing="_ViUWNvhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViUWNfhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_ViUWRPhYEeaxkoRKVpmNyQ" name="CastExpression@131d084f.inputElement" incoming="_ViUVdPhYEeaxkoRKVpmNyQ" outgoing="_ViUWOPhYEeaxkoRKVpmNyQ" regionAsInput="_ViUWMvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_ViUWRfhYEeaxkoRKVpmNyQ" name="CastExpression@131d084f.outputElement" incoming="_ViUWOfhYEeaxkoRKVpmNyQ" outgoing="_ViUWL_hYEeaxkoRKVpmNyQ" regionAsOutput="_ViUWMvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_ViUWRvhYEeaxkoRKVpmNyQ" name="IfStatement@5ba236ae" incoming="_ViUVqPhYEeaxkoRKVpmNyQ" outgoing="_ViUVqfhYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWR_hYEeaxkoRKVpmNyQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWSPhYEeaxkoRKVpmNyQ" target="_ViUWT_hYEeaxkoRKVpmNyQ" source="_ViUWSfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWSfhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@79656538)" outgoing="_ViUWSPhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWSvhYEeaxkoRKVpmNyQ" name="Value(null)">
                  <result xmi:id="_ViUWS_hYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWTPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWTfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_ViUWTvhYEeaxkoRKVpmNyQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWT_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_ViUWSPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViUWUPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViUVpPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWUfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWUvhYEeaxkoRKVpmNyQ" value="*"/>
                </argument>
                <result xmi:id="_ViUWU_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWVPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWVfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWVvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@54693e06">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWV_hYEeaxkoRKVpmNyQ" target="_ViUWWvhYEeaxkoRKVpmNyQ" source="_ViUWfPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWWPhYEeaxkoRKVpmNyQ" target="_ViUWWfhYEeaxkoRKVpmNyQ" source="_ViUWXfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWWfhYEeaxkoRKVpmNyQ" name="Call(Write)" incoming="_ViUWWPhYEeaxkoRKVpmNyQ" behavior="_ViU8JfhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViUWWvhYEeaxkoRKVpmNyQ" name="Call(Write).argument(value)" incoming="_ViUWV_hYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWW_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWXPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWXfhYEeaxkoRKVpmNyQ" name="Tuple@7b6b93e8" outgoing="_ViUWWPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWXvhYEeaxkoRKVpmNyQ" target="_ViUWbPhYEeaxkoRKVpmNyQ" source="_ViUWYvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWX_hYEeaxkoRKVpmNyQ" target="_ViUWgPhYEeaxkoRKVpmNyQ" source="_ViUWaPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWYPhYEeaxkoRKVpmNyQ" target="_ViUWg_hYEeaxkoRKVpmNyQ" source="_ViUWdvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWYfhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_ViUWYvhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;).result" outgoing="_ViUWXvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWY_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWZPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViUWZfhYEeaxkoRKVpmNyQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWZvhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWZ_hYEeaxkoRKVpmNyQ" target="_ViUWaPhYEeaxkoRKVpmNyQ" source="_ViUWcvhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViUWaPhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_ViUWZ_hYEeaxkoRKVpmNyQ" outgoing="_ViUWX_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWafhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWavhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWa_hYEeaxkoRKVpmNyQ" name="Call(Concat)">
                    <argument xmi:id="_ViUWbPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_ViUWXvhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWbfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWbvhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <argument xmi:id="_ViUWb_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_ViUVpfhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWcPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWcfhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <result xmi:id="_ViUWcvhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_ViUWZ_hYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWc_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWdPhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWdfhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_ViUWdvhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;).result" outgoing="_ViUWYPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWd_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWePhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViUWefhYEeaxkoRKVpmNyQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWevhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWe_hYEeaxkoRKVpmNyQ" target="_ViUWfPhYEeaxkoRKVpmNyQ" source="_ViUWhvhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViUWfPhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_ViUWe_hYEeaxkoRKVpmNyQ" outgoing="_ViUWV_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWffhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWfvhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWf_hYEeaxkoRKVpmNyQ" name="Call(Concat)">
                    <argument xmi:id="_ViUWgPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_ViUWX_hYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWgfhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWgvhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <argument xmi:id="_ViUWg_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_ViUWYPhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWhPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWhfhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <result xmi:id="_ViUWhvhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_ViUWe_hYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWh_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWiPhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWifhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWivhYEeaxkoRKVpmNyQ" target="_ViUWjvhYEeaxkoRKVpmNyQ" source="_ViUWi_hYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUWi_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_ViUVdfhYEeaxkoRKVpmNyQ" outgoing="_ViUWivhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWjPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWjfhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUWjvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_ViUWivhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWj_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWkPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWkfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@7216f3d4)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWkvhYEeaxkoRKVpmNyQ" target="_ViUWlvhYEeaxkoRKVpmNyQ" source="_ViUWk_hYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUWk_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@7216f3d4).input" incoming="_ViUVpvhYEeaxkoRKVpmNyQ" outgoing="_ViUWkvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWlPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWlfhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUWlvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@7216f3d4).output" incoming="_ViUWkvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWl_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWmPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWmfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWmvhYEeaxkoRKVpmNyQ" target="_ViUWnvhYEeaxkoRKVpmNyQ" source="_ViUWm_hYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUWm_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_ViUVdvhYEeaxkoRKVpmNyQ" outgoing="_ViUWmvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWnPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWnfhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUWnvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_ViUWmvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWn_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWoPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWofhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWovhYEeaxkoRKVpmNyQ" target="_ViUWpvhYEeaxkoRKVpmNyQ" source="_ViUWo_hYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUWo_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_ViUVd_hYEeaxkoRKVpmNyQ" outgoing="_ViUWovhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWpPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWpfhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUWpvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_ViUWovhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWp_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWqPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWqfhYEeaxkoRKVpmNyQ" name="Value(true)">
              <result xmi:id="_ViUWqvhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWq_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWrPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ViUWrfhYEeaxkoRKVpmNyQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWrvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@50dfdf8f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWr_hYEeaxkoRKVpmNyQ" target="_ViUWsvhYEeaxkoRKVpmNyQ" source="_ViUW4vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWsPhYEeaxkoRKVpmNyQ" target="_ViUWsfhYEeaxkoRKVpmNyQ" source="_ViUWtfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWsfhYEeaxkoRKVpmNyQ" name="Call(Write)" incoming="_ViUWsPhYEeaxkoRKVpmNyQ" behavior="_ViU8JfhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViUWsvhYEeaxkoRKVpmNyQ" name="Call(Write).argument(value)" incoming="_ViUWr_hYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWs_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWtPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWtfhYEeaxkoRKVpmNyQ" name="Tuple@1fda36ce" outgoing="_ViUWsPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWtvhYEeaxkoRKVpmNyQ" target="_ViUWyvhYEeaxkoRKVpmNyQ" source="_ViUWwvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWt_hYEeaxkoRKVpmNyQ" target="_ViUWyfhYEeaxkoRKVpmNyQ" source="_ViUWwfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWuPhYEeaxkoRKVpmNyQ" target="_ViUW1fhYEeaxkoRKVpmNyQ" source="_ViUWwvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWufhYEeaxkoRKVpmNyQ" target="_ViUW4fhYEeaxkoRKVpmNyQ" source="_ViUW4PhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWuvhYEeaxkoRKVpmNyQ" target="_ViUW4fhYEeaxkoRKVpmNyQ" source="_ViUWzfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWu_hYEeaxkoRKVpmNyQ" target="_ViUW0PhYEeaxkoRKVpmNyQ" source="_ViUW4fhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUWvPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ViUWvfhYEeaxkoRKVpmNyQ" target="_ViUW1vhYEeaxkoRKVpmNyQ" source="_ViUW4fhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViUWvvhYEeaxkoRKVpmNyQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWv_hYEeaxkoRKVpmNyQ" target="_ViUW4vhYEeaxkoRKVpmNyQ" source="_ViUW0vhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUWwPhYEeaxkoRKVpmNyQ" target="_ViUW4vhYEeaxkoRKVpmNyQ" source="_ViUW2PhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWwfhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@8c3058a)" outgoing="_ViUWt_hYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_ViUWwvhYEeaxkoRKVpmNyQ" name="Fork()@1ff73bb7" incoming="_ViUVePhYEeaxkoRKVpmNyQ" outgoing="_ViUWtvhYEeaxkoRKVpmNyQ _ViUWuPhYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUWw_hYEeaxkoRKVpmNyQ" name="RightHandSide@1cf8d6ed"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUWxPhYEeaxkoRKVpmNyQ" name="Value(null)">
                    <result xmi:id="_ViUWxfhYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWxvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWx_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_ViUWyPhYEeaxkoRKVpmNyQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUWyfhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_ViUWt_hYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_ViUWyvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViUWtvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWy_hYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWzPhYEeaxkoRKVpmNyQ" value="*"/>
                  </argument>
                  <result xmi:id="_ViUWzfhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViUWuvhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUWzvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUWz_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUW0PhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@42715081.operand2" incoming="_ViUWu_hYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUW0fhYEeaxkoRKVpmNyQ" target="_ViUW0vhYEeaxkoRKVpmNyQ" source="_ViUW1fhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViUW0vhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@42715081.operand2.result" incoming="_ViUW0fhYEeaxkoRKVpmNyQ" outgoing="_ViUWv_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW0_hYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW1PhYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_ViUW1fhYEeaxkoRKVpmNyQ" name="Merge(Fork()@1ff73bb7)" incoming="_ViUWuPhYEeaxkoRKVpmNyQ" outgoing="_ViUW0fhYEeaxkoRKVpmNyQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUW1vhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@42715081.operand3" incoming="_ViUWvfhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUW1_hYEeaxkoRKVpmNyQ" target="_ViUW2PhYEeaxkoRKVpmNyQ" source="_ViUW3PhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_ViUW2PhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@42715081.operand3.result" incoming="_ViUW1_hYEeaxkoRKVpmNyQ" outgoing="_ViUWwPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW2fhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW2vhYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUW2_hYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_ViUW3PhYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;).result" outgoing="_ViUW1_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW3fhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW3vhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_ViUW3_hYEeaxkoRKVpmNyQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ViUW4PhYEeaxkoRKVpmNyQ" name="Initial(NullCoalescingExpression@42715081)" outgoing="_ViUWufhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ViUW4fhYEeaxkoRKVpmNyQ" name="Decision(NullCoalescingExpression@42715081)" incoming="_ViUWufhYEeaxkoRKVpmNyQ _ViUWuvhYEeaxkoRKVpmNyQ" outgoing="_ViUWu_hYEeaxkoRKVpmNyQ _ViUWvfhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViUWuvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ViUW4vhYEeaxkoRKVpmNyQ" name="Merge(NullCoalescingExpression@42715081.result)" incoming="_ViUWv_hYEeaxkoRKVpmNyQ _ViUWwPhYEeaxkoRKVpmNyQ" outgoing="_ViUWr_hYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUW4_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUW5PhYEeaxkoRKVpmNyQ" target="_ViUW6PhYEeaxkoRKVpmNyQ" source="_ViUW5fhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUW5fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_ViUVefhYEeaxkoRKVpmNyQ" outgoing="_ViUW5PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW5vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW5_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUW6PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_ViUW5PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW6fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW6vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUW6_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@7216f3d4)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUW7PhYEeaxkoRKVpmNyQ" target="_ViUW8PhYEeaxkoRKVpmNyQ" source="_ViUW7fhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUW7fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@7216f3d4).input" incoming="_ViUVp_hYEeaxkoRKVpmNyQ" outgoing="_ViUW7PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW7vhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW7_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUW8PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@7216f3d4).output" incoming="_ViUW7PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW8fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW8vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUW8_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUW9PhYEeaxkoRKVpmNyQ" target="_ViUW-PhYEeaxkoRKVpmNyQ" source="_ViUW9fhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUW9fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_ViUVevhYEeaxkoRKVpmNyQ" outgoing="_ViUW9PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW9vhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW9_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUW-PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_ViUW9PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW-fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW-vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUW-_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUW_PhYEeaxkoRKVpmNyQ" target="_ViUXAPhYEeaxkoRKVpmNyQ" source="_ViUW_fhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_ViUW_fhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_ViUVe_hYEeaxkoRKVpmNyQ" outgoing="_ViUW_PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUW_vhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUW__hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ViUXAPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_ViUW_PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXAfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXAvhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_ViUXA_hYEeaxkoRKVpmNyQ" body="_ViUWVvhYEeaxkoRKVpmNyQ _ViUWifhYEeaxkoRKVpmNyQ _ViUWkfhYEeaxkoRKVpmNyQ _ViUWmfhYEeaxkoRKVpmNyQ _ViUWofhYEeaxkoRKVpmNyQ" bodyOutput="_ViUWjvhYEeaxkoRKVpmNyQ _ViUWlvhYEeaxkoRKVpmNyQ _ViUWnvhYEeaxkoRKVpmNyQ _ViUWpvhYEeaxkoRKVpmNyQ" decider="_ViUWU_hYEeaxkoRKVpmNyQ" successorClause="_ViUXBPhYEeaxkoRKVpmNyQ" test="_ViUWR_hYEeaxkoRKVpmNyQ"/>
            <clause xmi:id="_ViUXBPhYEeaxkoRKVpmNyQ" body="_ViUWrvhYEeaxkoRKVpmNyQ _ViUW4_hYEeaxkoRKVpmNyQ _ViUW6_hYEeaxkoRKVpmNyQ _ViUW8_hYEeaxkoRKVpmNyQ _ViUW-_hYEeaxkoRKVpmNyQ" bodyOutput="_ViUW6PhYEeaxkoRKVpmNyQ _ViUW8PhYEeaxkoRKVpmNyQ _ViUW-PhYEeaxkoRKVpmNyQ _ViUXAPhYEeaxkoRKVpmNyQ" decider="_ViUWqvhYEeaxkoRKVpmNyQ" predecessorClause="_ViUXA_hYEeaxkoRKVpmNyQ" test="_ViUWqfhYEeaxkoRKVpmNyQ"/>
            <result xmi:id="_ViUXBfhYEeaxkoRKVpmNyQ" name="IfStatement@5ba236ae.result(label)" outgoing="_ViUVoPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXBvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXB_hYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <result xmi:id="_ViUXCPhYEeaxkoRKVpmNyQ" name="IfStatement@5ba236ae.result(s)" outgoing="_ViUVofhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXCfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXCvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <result xmi:id="_ViUXC_hYEeaxkoRKVpmNyQ" name="IfStatement@5ba236ae.result(value2)" outgoing="_ViUVovhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXDPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXDfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <result xmi:id="_ViUXDvhYEeaxkoRKVpmNyQ" name="IfStatement@5ba236ae.result(value1)" outgoing="_ViUVo_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXD_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXEPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ViUXEfhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_ViUVoPhYEeaxkoRKVpmNyQ" outgoing="_ViUVqvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_ViUXEvhYEeaxkoRKVpmNyQ" name="Fork(s)" incoming="_ViUVofhYEeaxkoRKVpmNyQ" outgoing="_ViUVq_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_ViUXE_hYEeaxkoRKVpmNyQ" name="Fork(value2)" incoming="_ViUVovhYEeaxkoRKVpmNyQ" outgoing="_ViUVrPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_ViUXFPhYEeaxkoRKVpmNyQ" name="Fork(value1)" incoming="_ViUVo_hYEeaxkoRKVpmNyQ" outgoing="_ViUVrfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXFfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@7f274ef1" incoming="_ViUVqfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXFvhYEeaxkoRKVpmNyQ" target="_ViUXGfhYEeaxkoRKVpmNyQ" source="_ViUXIfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViUXF_hYEeaxkoRKVpmNyQ" target="_ViUXGPhYEeaxkoRKVpmNyQ" source="_ViUXH_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViUXGPhYEeaxkoRKVpmNyQ" name="Call(WriteLine)" incoming="_ViUXF_hYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViUXGfhYEeaxkoRKVpmNyQ" name="Call(WriteLine).argument(value)" incoming="_ViUXFvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXGvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXG_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViUXHPhYEeaxkoRKVpmNyQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXHfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXHvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXH_hYEeaxkoRKVpmNyQ" name="Tuple@657cb465" outgoing="_ViUXF_hYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUXIPhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;)">
                <result xmi:id="_ViUXIfhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;).result" outgoing="_ViUXFvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXIvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXI_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ViUXJPhYEeaxkoRKVpmNyQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXJfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXJvhYEeaxkoRKVpmNyQ" target="_ViUXKvhYEeaxkoRKVpmNyQ" source="_ViUXJ_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXJ_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_ViUVqvhYEeaxkoRKVpmNyQ" outgoing="_ViUXJvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXKPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXKfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXKvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_ViUXJvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXK_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXLPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXLfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXLvhYEeaxkoRKVpmNyQ" target="_ViUXMvhYEeaxkoRKVpmNyQ" source="_ViUXL_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXL_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).input" incoming="_ViUVq_hYEeaxkoRKVpmNyQ" outgoing="_ViUXLvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXMPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXMfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXMvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).output" incoming="_ViUXLvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXM_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXNPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXNfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXNvhYEeaxkoRKVpmNyQ" target="_ViUXOvhYEeaxkoRKVpmNyQ" source="_ViUXN_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXN_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_ViUVrPhYEeaxkoRKVpmNyQ" outgoing="_ViUXNvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXOPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXOfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXOvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_ViUXNvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXO_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXPPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXPfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXPvhYEeaxkoRKVpmNyQ" target="_ViUXQvhYEeaxkoRKVpmNyQ" source="_ViUXP_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXP_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_ViUVrfhYEeaxkoRKVpmNyQ" outgoing="_ViUXPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXQPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXQfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXQvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_ViUXPvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXQ_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXRPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUXRfhYEeaxkoRKVpmNyQ" name="Value(true)">
            <result xmi:id="_ViUXRvhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXR_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXSPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_ViUXSfhYEeaxkoRKVpmNyQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXSvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXS_hYEeaxkoRKVpmNyQ" target="_ViUXT_hYEeaxkoRKVpmNyQ" source="_ViUXTPhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXTPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_ViUVfPhYEeaxkoRKVpmNyQ" outgoing="_ViUXS_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXTfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXTvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXT_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_ViUXS_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXUPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXUfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViUXUvhYEeaxkoRKVpmNyQ" name="Value(null)">
            <result xmi:id="_ViUXU_hYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXVPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXVfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_ViUXVvhYEeaxkoRKVpmNyQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXV_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXWPhYEeaxkoRKVpmNyQ" target="_ViUXXPhYEeaxkoRKVpmNyQ" source="_ViUXWfhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXWfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_ViUVffhYEeaxkoRKVpmNyQ" outgoing="_ViUXWPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXWvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXW_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXXPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_ViUXWPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXXfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXXvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViUXX_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViUXYPhYEeaxkoRKVpmNyQ" target="_ViUXZPhYEeaxkoRKVpmNyQ" source="_ViUXYfhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViUXYfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_ViUVfvhYEeaxkoRKVpmNyQ" outgoing="_ViUXYPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXYvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXY_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_ViUXZPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_ViUXYPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXZfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXZvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_ViUXZ_hYEeaxkoRKVpmNyQ" body="_ViUV-_hYEeaxkoRKVpmNyQ _ViUWLvhYEeaxkoRKVpmNyQ _ViUWRvhYEeaxkoRKVpmNyQ _ViUXFfhYEeaxkoRKVpmNyQ _ViUXJfhYEeaxkoRKVpmNyQ _ViUXLfhYEeaxkoRKVpmNyQ _ViUXNfhYEeaxkoRKVpmNyQ _ViUXPfhYEeaxkoRKVpmNyQ" bodyOutput="_ViUXKvhYEeaxkoRKVpmNyQ _ViUXMvhYEeaxkoRKVpmNyQ _ViUXOvhYEeaxkoRKVpmNyQ _ViUXQvhYEeaxkoRKVpmNyQ" decider="_ViUV-PhYEeaxkoRKVpmNyQ" successorClause="_ViUXaPhYEeaxkoRKVpmNyQ" test="_ViUVrvhYEeaxkoRKVpmNyQ"/>
          <clause xmi:id="_ViUXaPhYEeaxkoRKVpmNyQ" body="_ViUXSvhYEeaxkoRKVpmNyQ _ViUXUvhYEeaxkoRKVpmNyQ _ViUXV_hYEeaxkoRKVpmNyQ _ViUXX_hYEeaxkoRKVpmNyQ" bodyOutput="_ViUXT_hYEeaxkoRKVpmNyQ _ViUXU_hYEeaxkoRKVpmNyQ _ViUXXPhYEeaxkoRKVpmNyQ _ViUXZPhYEeaxkoRKVpmNyQ" decider="_ViUXRvhYEeaxkoRKVpmNyQ" predecessorClause="_ViUXZ_hYEeaxkoRKVpmNyQ" test="_ViUXRfhYEeaxkoRKVpmNyQ"/>
          <result xmi:id="_ViUXafhYEeaxkoRKVpmNyQ" name="IfStatement@38f0b10c.result(label)" outgoing="_ViUVmvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViUXavhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViUXa_hYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_ViU7sPhYEeaxkoRKVpmNyQ" name="IfStatement@38f0b10c.result(s)" outgoing="_ViUVm_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7sfhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU7svhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_ViU7s_hYEeaxkoRKVpmNyQ" name="IfStatement@38f0b10c.result(value2)" outgoing="_ViUVnPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7tPhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU7tfhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_ViU7tvhYEeaxkoRKVpmNyQ" name="IfStatement@38f0b10c.result(value1)" outgoing="_ViUVnfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7t_hYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU7uPhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU7ufhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_ViUVmvhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU7uvhYEeaxkoRKVpmNyQ" name="Fork(s)" incoming="_ViUVm_hYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU7u_hYEeaxkoRKVpmNyQ" name="Fork(value2)" incoming="_ViUVnPhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU7vPhYEeaxkoRKVpmNyQ" name="Fork(value1)" incoming="_ViUVnfhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViUVg_hYEeaxkoRKVpmNyQ" name="Input(label)" outgoing="_ViUVbvhYEeaxkoRKVpmNyQ" parameter="_ViUVZfhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViUVhPhYEeaxkoRKVpmNyQ" name="Input(value1)" outgoing="_ViUVb_hYEeaxkoRKVpmNyQ" parameter="_ViUVaPhYEeaxkoRKVpmNyQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViUVhfhYEeaxkoRKVpmNyQ" name="Input(value2)" outgoing="_ViUVcPhYEeaxkoRKVpmNyQ" parameter="_ViUVa_hYEeaxkoRKVpmNyQ"/>
      <node xmi:type="uml:JoinNode" xmi:id="_ViUVhvhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViUVf_hYEeaxkoRKVpmNyQ _ViUVgPhYEeaxkoRKVpmNyQ _ViUVgfhYEeaxkoRKVpmNyQ" outgoing="_ViUVgvhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_ViU7vfhYEeaxkoRKVpmNyQ" name="AssertFalse" visibility="public" node="_ViU70fhYEeaxkoRKVpmNyQ _ViU71PhYEeaxkoRKVpmNyQ _ViU70vhYEeaxkoRKVpmNyQ _ViU72vhYEeaxkoRKVpmNyQ _ViU74PhYEeaxkoRKVpmNyQ _ViU70_hYEeaxkoRKVpmNyQ" group="_ViU71PhYEeaxkoRKVpmNyQ _ViU72vhYEeaxkoRKVpmNyQ _ViU74PhYEeaxkoRKVpmNyQ">
      <elementImport xmi:id="_ViU7vvhYEeaxkoRKVpmNyQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_ViU7v_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ViU7wPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ViU7wfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ViU7wvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ViU7w_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_ViU7xPhYEeaxkoRKVpmNyQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7xfhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU7xvhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ViU7x_hYEeaxkoRKVpmNyQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7yPhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU7yfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU7yvhYEeaxkoRKVpmNyQ" target="_ViU71vhYEeaxkoRKVpmNyQ" source="_ViU70fhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU7y_hYEeaxkoRKVpmNyQ" target="_ViU73PhYEeaxkoRKVpmNyQ" source="_ViU70vhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU7zPhYEeaxkoRKVpmNyQ" target="_ViU8BfhYEeaxkoRKVpmNyQ" source="_ViU72fhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU7zfhYEeaxkoRKVpmNyQ" target="_ViU8GvhYEeaxkoRKVpmNyQ" source="_ViU73_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViU7zvhYEeaxkoRKVpmNyQ" target="_ViU70_hYEeaxkoRKVpmNyQ" source="_ViU71PhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViU7z_hYEeaxkoRKVpmNyQ" target="_ViU70_hYEeaxkoRKVpmNyQ" source="_ViU72vhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViU70PhYEeaxkoRKVpmNyQ" target="_ViU74PhYEeaxkoRKVpmNyQ" source="_ViU70_hYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_ViU71PhYEeaxkoRKVpmNyQ" name="Node(Input(label))" outgoing="_ViU7zvhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU71fhYEeaxkoRKVpmNyQ" target="_ViU72fhYEeaxkoRKVpmNyQ" source="_ViU71vhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViU71vhYEeaxkoRKVpmNyQ" name="Input(label)" incoming="_ViU7yvhYEeaxkoRKVpmNyQ" outgoing="_ViU71fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU71_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU72PhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU72fhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_ViU71fhYEeaxkoRKVpmNyQ" outgoing="_ViU7zPhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViU72vhYEeaxkoRKVpmNyQ" name="Node(Input(condition))" outgoing="_ViU7z_hYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU72_hYEeaxkoRKVpmNyQ" target="_ViU73_hYEeaxkoRKVpmNyQ" source="_ViU73PhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViU73PhYEeaxkoRKVpmNyQ" name="Input(condition)" incoming="_ViU7y_hYEeaxkoRKVpmNyQ" outgoing="_ViU72_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU73fhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU73vhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU73_hYEeaxkoRKVpmNyQ" name="Fork(condition)" incoming="_ViU72_hYEeaxkoRKVpmNyQ" outgoing="_ViU7zfhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViU74PhYEeaxkoRKVpmNyQ" name="Body(AssertFalse)" incoming="_ViU70PhYEeaxkoRKVpmNyQ">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU74fhYEeaxkoRKVpmNyQ" name="ExpressionStatement@16b2752a">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU74vhYEeaxkoRKVpmNyQ" target="_ViU75vhYEeaxkoRKVpmNyQ" source="_ViU7_vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU74_hYEeaxkoRKVpmNyQ" target="_ViU76fhYEeaxkoRKVpmNyQ" source="_ViU8I_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViU75PhYEeaxkoRKVpmNyQ" target="_ViU75fhYEeaxkoRKVpmNyQ" source="_ViU77PhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViU75fhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_ViU75PhYEeaxkoRKVpmNyQ" behavior="_ViUUuvhYEeaxkoRKVpmNyQ">
            <argument xmi:id="_ViU75vhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_ViU74vhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU75_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU76PhYEeaxkoRKVpmNyQ" value="1"/>
            </argument>
            <argument xmi:id="_ViU76fhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_ViU74_hYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU76vhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU76_hYEeaxkoRKVpmNyQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU77PhYEeaxkoRKVpmNyQ" name="Tuple@53481447" outgoing="_ViU75PhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU77fhYEeaxkoRKVpmNyQ" target="_ViU8AvhYEeaxkoRKVpmNyQ" source="_ViU7-PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU77vhYEeaxkoRKVpmNyQ" target="_ViU8EfhYEeaxkoRKVpmNyQ" source="_ViU8GvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU77_hYEeaxkoRKVpmNyQ" target="_ViU8HPhYEeaxkoRKVpmNyQ" source="_ViU8GvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU78PhYEeaxkoRKVpmNyQ" target="_ViU8IvhYEeaxkoRKVpmNyQ" source="_ViU8H_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU78fhYEeaxkoRKVpmNyQ" target="_ViU8I_hYEeaxkoRKVpmNyQ" source="_ViU8FPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU78vhYEeaxkoRKVpmNyQ" target="_ViU8JPhYEeaxkoRKVpmNyQ" source="_ViU8IvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU78_hYEeaxkoRKVpmNyQ" target="_ViU8JPhYEeaxkoRKVpmNyQ" source="_ViU8IvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU79PhYEeaxkoRKVpmNyQ" target="_ViU8I_hYEeaxkoRKVpmNyQ" source="_ViU8JPhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViU79fhYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU79vhYEeaxkoRKVpmNyQ" target="_ViU8F_hYEeaxkoRKVpmNyQ" source="_ViU8DPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViU79_hYEeaxkoRKVpmNyQ" name="Value(&quot;! &quot;)">
              <result xmi:id="_ViU7-PhYEeaxkoRKVpmNyQ" name="Value(&quot;! &quot;).result" outgoing="_ViU77fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7-fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU7-vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_ViU7-_hYEeaxkoRKVpmNyQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU7_PhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU7_fhYEeaxkoRKVpmNyQ" target="_ViU7_vhYEeaxkoRKVpmNyQ" source="_ViU8CPhYEeaxkoRKVpmNyQ"/>
              <structuredNodeOutput xmi:id="_ViU7_vhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_ViU7_fhYEeaxkoRKVpmNyQ" outgoing="_ViU74vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU7__hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8APhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViU8AfhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                <argument xmi:id="_ViU8AvhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_ViU77fhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8A_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8BPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_ViU8BfhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_ViU7zPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8BvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8B_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <result xmi:id="_ViU8CPhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_ViU7_fhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8CfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8CvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViU8C_hYEeaxkoRKVpmNyQ" name="Value(false)">
              <result xmi:id="_ViU8DPhYEeaxkoRKVpmNyQ" name="Value(false).result" outgoing="_ViU79vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8DfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8DvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ViU8D_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ViU8EPhYEeaxkoRKVpmNyQ" name="Test(==)">
              <first xmi:id="_ViU8EfhYEeaxkoRKVpmNyQ" name="Test(==).first" incoming="_ViU77vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8EvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8E_hYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_ViU8FPhYEeaxkoRKVpmNyQ" name="Test(==).result" outgoing="_ViU78fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8FfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8FvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_ViU8F_hYEeaxkoRKVpmNyQ" name="Test(==).second" incoming="_ViU79vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8GPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8GfhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViU8GvhYEeaxkoRKVpmNyQ" name="Fork(Fork(condition))" incoming="_ViU7zfhYEeaxkoRKVpmNyQ" outgoing="_ViU77vhYEeaxkoRKVpmNyQ _ViU77_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViU8G_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_ViU8HPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViU77_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8HfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8HvhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_ViU8H_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViU78PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8IPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8IfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViU8IvhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_ViU78PhYEeaxkoRKVpmNyQ" outgoing="_ViU78vhYEeaxkoRKVpmNyQ _ViU78_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_ViU8I_hYEeaxkoRKVpmNyQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_ViU78fhYEeaxkoRKVpmNyQ _ViU79PhYEeaxkoRKVpmNyQ" outgoing="_ViU74_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ViU8JPhYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_ViU78vhYEeaxkoRKVpmNyQ _ViU78_hYEeaxkoRKVpmNyQ" outgoing="_ViU79PhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViU78_hYEeaxkoRKVpmNyQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViU70fhYEeaxkoRKVpmNyQ" name="Input(label)" outgoing="_ViU7yvhYEeaxkoRKVpmNyQ" parameter="_ViU7xPhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViU70vhYEeaxkoRKVpmNyQ" name="Input(condition)" outgoing="_ViU7y_hYEeaxkoRKVpmNyQ" parameter="_ViU7x_hYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_ViU70_hYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViU7zvhYEeaxkoRKVpmNyQ _ViU7z_hYEeaxkoRKVpmNyQ" outgoing="_ViU70PhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_ViU8JfhYEeaxkoRKVpmNyQ" name="Write" visibility="public" node="_ViU8MvhYEeaxkoRKVpmNyQ _ViU8NPhYEeaxkoRKVpmNyQ _ViU8OvhYEeaxkoRKVpmNyQ _ViU8M_hYEeaxkoRKVpmNyQ" group="_ViU8NPhYEeaxkoRKVpmNyQ _ViU8OvhYEeaxkoRKVpmNyQ">
      <packageImport xmi:id="_ViU8JvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ViU8J_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ViU8KPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ViU8KfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ViU8KvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_ViU8K_hYEeaxkoRKVpmNyQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8LPhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8LfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8LvhYEeaxkoRKVpmNyQ" target="_ViU8NvhYEeaxkoRKVpmNyQ" source="_ViU8MvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8L_hYEeaxkoRKVpmNyQ" target="_ViU8Q_hYEeaxkoRKVpmNyQ" source="_ViU8OfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8MPhYEeaxkoRKVpmNyQ" target="_ViU8M_hYEeaxkoRKVpmNyQ" source="_ViU8NPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8MfhYEeaxkoRKVpmNyQ" target="_ViU8OvhYEeaxkoRKVpmNyQ" source="_ViU8M_hYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_ViU8NPhYEeaxkoRKVpmNyQ" name="Node(Input(value))" outgoing="_ViU8MPhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8NfhYEeaxkoRKVpmNyQ" target="_ViU8OfhYEeaxkoRKVpmNyQ" source="_ViU8NvhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_ViU8NvhYEeaxkoRKVpmNyQ" name="Input(value)" incoming="_ViU8LvhYEeaxkoRKVpmNyQ" outgoing="_ViU8NfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8N_hYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8OPhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_ViU8OfhYEeaxkoRKVpmNyQ" name="Fork(value)" incoming="_ViU8NfhYEeaxkoRKVpmNyQ" outgoing="_ViU8L_hYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_ViU8OvhYEeaxkoRKVpmNyQ" name="Body(Write)" incoming="_ViU8MfhYEeaxkoRKVpmNyQ">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8O_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@1884ef6e">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8PPhYEeaxkoRKVpmNyQ" target="_ViU8fvhYEeaxkoRKVpmNyQ" source="_ViU8i_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8PfhYEeaxkoRKVpmNyQ" target="_ViU8PvhYEeaxkoRKVpmNyQ" source="_ViU8f_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_ViU8PvhYEeaxkoRKVpmNyQ" name="Collect(Call(write))" incoming="_ViU8PfhYEeaxkoRKVpmNyQ" mode="parallel" inputElement="_ViU8fvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8P_hYEeaxkoRKVpmNyQ" target="_ViU8R_hYEeaxkoRKVpmNyQ" source="_ViU8ffhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8QPhYEeaxkoRKVpmNyQ" target="_ViU8XfhYEeaxkoRKVpmNyQ" source="_ViU8Q_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8QfhYEeaxkoRKVpmNyQ" target="_ViU8RvhYEeaxkoRKVpmNyQ" source="_ViU8UPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8QvhYEeaxkoRKVpmNyQ" target="_ViU8TfhYEeaxkoRKVpmNyQ" source="_ViU8fvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_ViU8Q_hYEeaxkoRKVpmNyQ" name="Collect(Call(write)).input(Fork(value))" incoming="_ViU8L_hYEeaxkoRKVpmNyQ" outgoing="_ViU8QPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8RPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8RfhYEeaxkoRKVpmNyQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ViU8RvhYEeaxkoRKVpmNyQ" name="Call(write)" incoming="_ViU8QfhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViU8R_hYEeaxkoRKVpmNyQ" name="Call(write).argument(value)" incoming="_ViU8P_hYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8SPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8SfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViU8SvhYEeaxkoRKVpmNyQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8S_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8TPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_ViU8TfhYEeaxkoRKVpmNyQ" name="Call(write).target" incoming="_ViU8QvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8TvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8T_hYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8UPhYEeaxkoRKVpmNyQ" name="Tuple@5eb81440" outgoing="_ViU8QfhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8UfhYEeaxkoRKVpmNyQ" target="_ViU8ZfhYEeaxkoRKVpmNyQ" source="_ViU8XfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8UvhYEeaxkoRKVpmNyQ" target="_ViU8ZPhYEeaxkoRKVpmNyQ" source="_ViU8XPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8U_hYEeaxkoRKVpmNyQ" target="_ViU8cPhYEeaxkoRKVpmNyQ" source="_ViU8XfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8VPhYEeaxkoRKVpmNyQ" target="_ViU8fPhYEeaxkoRKVpmNyQ" source="_ViU8e_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8VfhYEeaxkoRKVpmNyQ" target="_ViU8fPhYEeaxkoRKVpmNyQ" source="_ViU8aPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8VvhYEeaxkoRKVpmNyQ" target="_ViU8a_hYEeaxkoRKVpmNyQ" source="_ViU8fPhYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViU8V_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8WPhYEeaxkoRKVpmNyQ" target="_ViU8cfhYEeaxkoRKVpmNyQ" source="_ViU8fPhYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ViU8WfhYEeaxkoRKVpmNyQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8WvhYEeaxkoRKVpmNyQ" target="_ViU8ffhYEeaxkoRKVpmNyQ" source="_ViU8bfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8W_hYEeaxkoRKVpmNyQ" target="_ViU8ffhYEeaxkoRKVpmNyQ" source="_ViU8c_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8XPhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@3af122e7)" outgoing="_ViU8UvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ForkNode" xmi:id="_ViU8XfhYEeaxkoRKVpmNyQ" name="Fork()@d05821b" incoming="_ViU8QPhYEeaxkoRKVpmNyQ" outgoing="_ViU8UfhYEeaxkoRKVpmNyQ _ViU8U_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8XvhYEeaxkoRKVpmNyQ" name="RightHandSide@43835f2e"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViU8X_hYEeaxkoRKVpmNyQ" name="Value(null)">
                  <result xmi:id="_ViU8YPhYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8YfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8YvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_ViU8Y_hYEeaxkoRKVpmNyQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViU8ZPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_ViU8UvhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_ViU8ZfhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_ViU8UfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8ZvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8Z_hYEeaxkoRKVpmNyQ" value="*"/>
                </argument>
                <result xmi:id="_ViU8aPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_ViU8VfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8afhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8avhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8a_hYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@60626f80.operand2" incoming="_ViU8VvhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8bPhYEeaxkoRKVpmNyQ" target="_ViU8bfhYEeaxkoRKVpmNyQ" source="_ViU8cPhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViU8bfhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@60626f80.operand2.result" incoming="_ViU8bPhYEeaxkoRKVpmNyQ" outgoing="_ViU8WvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8bvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8b_hYEeaxkoRKVpmNyQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_ViU8cPhYEeaxkoRKVpmNyQ" name="Merge(Fork()@d05821b)" incoming="_ViU8U_hYEeaxkoRKVpmNyQ" outgoing="_ViU8bPhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8cfhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@60626f80.operand3" incoming="_ViU8WPhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8cvhYEeaxkoRKVpmNyQ" target="_ViU8c_hYEeaxkoRKVpmNyQ" source="_ViU8d_hYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_ViU8c_hYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@60626f80.operand3.result" incoming="_ViU8cvhYEeaxkoRKVpmNyQ" outgoing="_ViU8W_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8dPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8dfhYEeaxkoRKVpmNyQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViU8dvhYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_ViU8d_hYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;).result" outgoing="_ViU8cvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8ePhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8efhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ViU8evhYEeaxkoRKVpmNyQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ViU8e_hYEeaxkoRKVpmNyQ" name="Initial(NullCoalescingExpression@60626f80)" outgoing="_ViU8VPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_ViU8fPhYEeaxkoRKVpmNyQ" name="Decision(NullCoalescingExpression@60626f80)" incoming="_ViU8VPhYEeaxkoRKVpmNyQ _ViU8VfhYEeaxkoRKVpmNyQ" outgoing="_ViU8VvhYEeaxkoRKVpmNyQ _ViU8WPhYEeaxkoRKVpmNyQ" decisionInputFlow="_ViU8VfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_ViU8ffhYEeaxkoRKVpmNyQ" name="Merge(NullCoalescingExpression@60626f80.result)" incoming="_ViU8WvhYEeaxkoRKVpmNyQ _ViU8W_hYEeaxkoRKVpmNyQ" outgoing="_ViU8P_hYEeaxkoRKVpmNyQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_ViU8fvhYEeaxkoRKVpmNyQ" name="Collect(Call(write)).inputElement" incoming="_ViU8PPhYEeaxkoRKVpmNyQ" outgoing="_ViU8QvhYEeaxkoRKVpmNyQ" regionAsInput="_ViU8PvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8f_hYEeaxkoRKVpmNyQ" name="Feature(Call(At).result())" outgoing="_ViU8PfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8gPhYEeaxkoRKVpmNyQ" target="_ViU8hfhYEeaxkoRKVpmNyQ" source="_ViU8kPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8gfhYEeaxkoRKVpmNyQ" target="_ViU8mPhYEeaxkoRKVpmNyQ" source="_ViU8lPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ViU8gvhYEeaxkoRKVpmNyQ" target="_ViU8hPhYEeaxkoRKVpmNyQ" source="_ViU8jvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ViU8g_hYEeaxkoRKVpmNyQ" target="_ViU8iPhYEeaxkoRKVpmNyQ" source="_ViU8mPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ViU8hPhYEeaxkoRKVpmNyQ" name="Call(At)" incoming="_ViU8gvhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_ViU8hfhYEeaxkoRKVpmNyQ" name="Call(At).argument(seq)" incoming="_ViU8gPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8hvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8h_hYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <argument xmi:id="_ViU8iPhYEeaxkoRKVpmNyQ" name="Call(At).argument(index)" incoming="_ViU8g_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8ifhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8ivhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_ViU8i_hYEeaxkoRKVpmNyQ" name="Call(At).result()" outgoing="_ViU8PPhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8jPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8jfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ViU8jvhYEeaxkoRKVpmNyQ" name="Tuple@7a762990" outgoing="_ViU8gvhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_ViU8j_hYEeaxkoRKVpmNyQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_ViU8kPhYEeaxkoRKVpmNyQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_ViU8gPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8kfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8kvhYEeaxkoRKVpmNyQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ViU8k_hYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_ViU8lPhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_ViU8gfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ViU8lfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ViU8lvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ViU8l_hYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ViU8mPhYEeaxkoRKVpmNyQ" name="Fork(Call(At).argument(index))" incoming="_ViU8gfhYEeaxkoRKVpmNyQ" outgoing="_ViU8g_hYEeaxkoRKVpmNyQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ViU8MvhYEeaxkoRKVpmNyQ" name="Input(value)" outgoing="_ViU8LvhYEeaxkoRKVpmNyQ" parameter="_ViU8K_hYEeaxkoRKVpmNyQ"/>
      <node xmi:type="uml:JoinNode" xmi:id="_ViU8M_hYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_ViU8MPhYEeaxkoRKVpmNyQ" outgoing="_ViU8MfhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <profileApplication xmi:id="_ViU8mfhYEeaxkoRKVpmNyQ">
      <eAnnotations xmi:id="_ViU8mvhYEeaxkoRKVpmNyQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_ViU8m_hYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViTwgPhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViU8nPhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViSfs_hYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_ViU8nfhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViTIOfhYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_ViU8nvhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViSft_hYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_ViU8n_hYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViTvdPhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViViwPhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViR5a_hYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_ViViwfhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViR5cvhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViViwvhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViR5Z_hYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViViw_hYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViUUs_hYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_ViVixPhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViUUt_hYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViVixfhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViTwePhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViVixvhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViTvafhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_ViVix_hYEeaxkoRKVpmNyQ" base_BehavioralFeature="_ViTIMvhYEeaxkoRKVpmNyQ"/>
</xmi:XMI>
